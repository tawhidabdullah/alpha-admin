{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","hooks/usePaginate.ts","hooks/useinfinitePaginateQuery.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/globalState/reducers.js","state/ducks/globalState/types.js","state/ducks/globalState/actions.js","state/ducks/globalState/index.js","utils/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/CategoryNewQuickEdit.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryNewEdit.tsx","pages/category/NewCategoryDetail.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/productBundle/ProductBundleEdit.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/BrandQuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductQuickEdit.tsx","pages/product/UploadCSV.tsx","components/TableListWithPagination/TableListWithPagination.tsx","components/TableListWithPagination/index.ts","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/TagQuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/PageDetail.tsx","pages/pages/AddNewPage.tsx","pages/pages/PageEdit.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderEdit.tsx","pages/order/OrderNoteEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/DeliveryRegionReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/order/ConfigOrderStatus.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteSeo.tsx","pages/settings/ChangeAdminPassword.tsx","pages/settings/SiteInfo.tsx","pages/delivery/CitySelectForDeliveryRegion.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/ConfigureSMS.tsx","pages/sms/NewCustomerTemplate.tsx","pages/sms/NewDealerAutoEventsTemplate.tsx","pages/sms/OrderStatusTemplateAutoEmail.tsx","pages/sms/OrderTemplateAutoEmail.tsx","pages/sms/ConfigureAutoEmail.tsx","pages/sms/ComposeCustomSMS.tsx","pages/sms/InboxEmailDetails.tsx","pages/sms/Inbox.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/NewDealerAutoEventsTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/InboxEmailDetails.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","state/ducks/credentials/reducers.js","state/ducks/credentials/types.js","state/ducks/credentials/actions.js","state/ducks/credentials/index.js","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/PostQuickEdit.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostEdit.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","components/Field/DatePicker.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/staff/salaryReport/ComponentItem.tsx","pages/staff/salaryReport/AddNewSalaryReport.tsx","pages/staff/salaryReport/SalaryReportList.tsx","pages/staff/salaryReport/SalaryReportDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","pages/dealer/Areas.tsx","pages/dealer/AddNewDealer.tsx","pages/dealer/QuickEdit.tsx","pages/dealer/DealerList.tsx","pages/dealer/DealerEdit.tsx","pages/dealer/DealerDetail.tsx","pages/dealer/Area/AreaQuickEdit.tsx","pages/dealer/Area/AddNewArea.tsx","pages/dealer/Area/AreaList.tsx","pages/dealer/Area/AreaEdit.tsx","pages/dealer/Area/AreaDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","layout/footer/Footer.tsx","layout/footer/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","min","className","Item","validateStatus","help","onKeyDown","event","key","preventDefault","style","borderRadius","placeholder","isObjectEmpty","Object","keys","length","manipulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","console","log","includes","actualPlaceholderValue","replace","fuckValue","item","join","param","slice","indexOf","converter","resData","data","formatedData","category","id","_id","description","productCount","parent","cover","config","thumbnail","icon","image","img","medium","added","title","labels","alt","caption","subCount","subCategory","children","subCat","original","notiData","forEach","not","read","push","noti","heading","text","link","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","available","minimum","cartItems","items","cartItem","quantity","cartKey","updated","status","avalable","isNext","total","totalIndex","post","body","preparationTime","servingSize","cookingTime","requiredProducts","detail","category2","cat","anotherPrice","startDate","endDate","actualPrice","products","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","freeProducts","orderedProductsCount","orderedProducts","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","recipient","subject","html","sms","success","msg","succes","customer","dealerName","dealer","address","commission","depositMoney","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","staff","topic","order","shippingAddress","shortCode","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","getUrlOptions","getUrl","api","method","limitNumber","format","apiMap","server","credentials","headers","Headers","JSON","stringify","manupulateURL","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","useQueryPaginate","cache","useQueryCache","useState","setPage","fetchProjects","useCallback","_","pageNumber","usePaginatedQuery","retry","refetchOnWindowFocus","isSuccess","isFetching","resolvedData","latestData","isFetchingMore","prefetchQuery","validationSchema","Yup","shape","username","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","reducerMap","reducer","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","globalState","createReducer","roles","saveRoles","isAccess","role","adminRoles","Sider","Layout","Header","Content","Footer","SubMenu","Menu","mapDispathToProps","glboalOperations","connect","collapsed","setcollapsed","width","boxShadow","border","overflowY","overflowX","height","position","top","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","ShoppingCartOutlined","UserOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SettingOutlined","UserAddOutlined","SlidersOutlined","BgColorsOutlined","Empty","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","props","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMarkNotificationAsReadFetch","handleMarkAllNotificationAsReadFetch","notificationList","setnotificationList","sortItem","sortOrderValue","getAllNotification","handleNotificationAsRead","handleAllNotificationAsRead","notification","message","CheckCircleOutlined","color","typeIcon","background","zIndex","transition","alignContent","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","index","eventId","moment","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RangePicker","DatePicker","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","setStartDate","setEndDate","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","startDateValue","endDateValue","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","showTime","picker","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","pagination","defaultPageSize","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","visible","setvisible","setmyImages","isModalOpenForImages","myImages","isModalOpenForThumbnail","setmyThumbnailImage","myThumbnailImage","mediaLibTagActiveKey","setmediaLibTagActiveKey","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","handleImageListFromLibraryFetch","imageListState","usePaginate","handleDeleteImageFromLibraryFetch","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","queries","getQueries","queriesKeyMap","filter","query","queryKey","idQueryKey","find","isKey","getQueryData","setQueryData","prev","getImageList","imageListRes","handleUpload","formData","FormData","file","append","reqwest","processData","withCredentials","firstQueryKey","newImageItem","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","newselectedImages","handleUpdateSubmit","updateImageLibraryItemRes","localImageList","updatedItem","assign","updateImageList","openErrorNotification","InfoCircleOutlined","getisUpdateSubmitButtonDisabled","onOk","onCancel","bodyStyle","okText","activeKey","tab","listType","FileImageOutlined","ArrowUpOutlined","getisSelectedImage","CheckOutlined","DeleteOutlined","ImageItemMenu","EllipsisOutlined","defaultCurrent","pageSize","onConfirm","cancelText","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","PlusOutlined","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","displayOrder","ModalChildComponent","addNewCategoryVisible","setAddNewCategoryVisible","categoryList","setcategoryList","categoryDetailData","categoryList2","addCategoryState","handleAddCategoryFetch","categoryDetailState","handleCategoryDetailFetch","handleUpdateCategoryIconFetch","handleUpdateCategoryThumbnailFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","selectedParentId","setselectedParentId","imageFile","setImagefile","imageUrl","setImageUrl","thumbnailImageFile","setThumbnailImagefile","thumbnailImageUrl","setThumbnailImageUrl","loadingThumnail","setLoadingThumbnail","bnTags","setBnTags","coverImageId","setCoverImageId","iconUrl","setIconUrl","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","getProductDetail","mahImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","imagesIds","trim","aboutToUpdatedImageIds","bn","addCategoryRes","getCover","positionInTag","updateTagList","resetForm","err","i","onSwitchChange","checked","onChangeSelect","getBase64","callback","reader","FileReader","addEventListener","result","readAsDataURL","setNewIcon","beforeThumbnailUpload","uploadButton","LoadingOutlined","defaultChecked","showUploadList","newImages","handleImagesDelete","CloseOutlined","FileImageFilled","AddNewCategory","destroyOnClose","footer","okButtonProps","htmlType","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","data2","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","newCategoryList","paddingTop","overflow","align","EditOutlined","CategoryNewQuickEdit","withRouter","categoryState","handleCategoryListFetch","setcategoryList2","isSubCategory","productCountValue","categories","setCategories","enterButton","handleSearch","DataTableSkeleton","bnData","bnFormData","get","handleCancel","setcategoryDetailData","CoolInput","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryEditVisible","setCategoryEditVisible","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryNewEdit","avatar","paragraph","objectFit","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryName","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","selectedCategoryIds","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","maxHeight","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","bundlePrice","AddNewProduct","bundleList","productList","setBundleList","setProductList","productDetailData","updateProductState","handleProductDetailFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setBNDescription","setMetaTags","setBnMetaTags","productIds","setProductIds","addProductState","handleAddProductFetch","regular","offer","setPrice","variation","model","metaUnit","addProductRes","positionInAttribute","updateProductList","newProductList","isTrue","categoryIds","editor","ClassicEditor","onInit","getData","InputSmall","selectedOpions","setselectedOptions","isProductIdsfirstTime","selectItems","o","CartOverLayCartItem","productId","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","SelectProducts","SelectedProductItems","setTagList","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","ProductBundleQuickEdit","TagList","tagList","productType","newTagList","AddNewProductBundle","CouponProducts","NewBrandDetail","productEditVisible","setProductEditVisible","ProductBundleEdit","AddNewBrand","brandList","setBrandList","updateBrandState","handleUpdateBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","ModalComponentChildItem","brandDetailData","setBrandEditVisible","brandEditVisible","brandDetailState","handleBrandDetailFetch","myGoddamnImages","setMyGoddamnImages","getBrandDetail","updateBrandRes","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","BrandQuickEdit","handlebrandListFetch","brands","setBrandDetailData","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","maximumPurchaseLimit","setMaximumPurchaseLimit","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","productListState","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","newProductItem","updatePricingList","animated","tabPosition","handleEditPricing","newPricing","handleDeletePricing","textDecoration","Boolean","handleUpdateProductFetch","selectedTagNames","selectedTagIds","updatedProductRes","UploadCSV","isUploadCSVModalOpen","setIsUploadCSVModalOpen","errKeys","errkey","TableListWithPagination","handlePageChange","limit","hideOnSinglePage","handleDeleteProductFetch","handleUpdateOrderStatusFetch","handleDeleteProduct","deleteProductRes","handleUpdateOrderStatus","newStatus","inStock","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","ProductQuickEdit","productState","DownloadOutlined","window","open","UploadOutlined","setProductDetailData","productDetailRes","ProductEdit","QuickEdit","tagEditVisible","setTagEditVisible","tagDetailData","updateTagState","handleUpdateCategoryFetch","updateTagRes","addTagState","handleAddTagFetch","addTagRes","TagQuickEdit","AddNewTag","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","selecttedOptions","addCouponState","handleAddCouponStateFetch","couponDetailState","handleCouponDetailFetch","freeProductIds","freeProductList","setFreeProductList","handleStartEndDateRangeDate","undefined","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponEdit","CouponQuickEdit","Couponlist","AddNewCoupon","zipCode","dealerCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","toggleReferralCode","settoggleReferralCode","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","orderStatusFilterValue","setorderStatusFilterValue","getSorttingvalue","customers","setCustomers","AddNewCustomer","setCustomerDetailData","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","handleDeletePageFetch","handleDeletePage","deletePageRes","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","ReactHtmlParser","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","updateCategoryState","EditableTagGroup","AttributeList","AddAttributeValues","ComponentToPrint","orderDetailState","invoiceSettingsState","anotherRef","cellPadding","cellSpacing","bgcolor","borderBottom","paddingBottom","lineHeight","verticalAlign","colSpan","unitPrice","whiteSpace","OrderInvoice","setShowInvoice","showInvoice","handleOrderDetailFetch","componentRef","useRef","createRef","handlSiteInvoiceSettingsFetch","getSiteSettings","getOrderDetail","print","targetRef","toPdf","FilePdfOutlined","documentTitle","trigger","PrinterOutlined","current","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","newOrderstatus","orderState","deliveryRegionNameValue","setdeliveryRegionNameValue","statusValue","regions","setOrders","regionList","setRegionList","handleRegionListFetch","regionListOptions","setRegions","joiningDate","newOrderList","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","selectedCustomerData","setCurrent","handleProductListFetch","customerListState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","deliveryRegionState","getAndSetShippingDeliveryCharge","selectedRegion","setProducts","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","flexWrap","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","summary","note","setOrderNotes","orderNotes","activeNote","orderDetailNotesState","handleOrderDetailNotesFetch","handleDeleteOrderNoteFetch","activeOrderNote","setActiveOrderNote","isOrderNoteEdit","setIsOrderNoteEdit","isInvoiceShow","setIsInvoiceShow","handleDeleteOrderNote","newOrderNoteList","OrderNoteEdit","OrderEdit","EyeOutlined","flex","minWidth","noteItem","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","DeliveryRegionReport","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","ConfigOrderStatus","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","isLoadingUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","updateComponentState","handleUpdateComponentFetch","imageValue","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","componentItems","imgItem","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","adminPhone","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","updateInvoiceRes","injectHTML","UpdateSiteSEO","newPassword","newPassword2","oneOf","newPass","ChangeAdminPassword","newPassRepeat","paddingRight","SiteInfo","handleUpdateSiteLogoAndIconFetch","iconimageUrl","setIconImageUrl","loadingIcon","setloadingIcon","appLogo","setAppLogo","loadingAppLogo","setloadingAppLogo","iconUploadButton","appIconUploadButton","defaultActiveKey","AdminSiteInfo","onError","SiteSeo","SiteInfoInvoice","AccessCheckbox","checkedList","setCheckedList","plainOptions","checkAll","setCheckAll","setPlainOptions","setInterminate","checkedCities","accessItem","span","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","handleDeliveryChargeChange","updatedValue","handleAttributeDelete","AddNewRegion","addRegionState","handleRegionFetch","accesscheckedList","setAccessCheckedList","floor","random","handleAddDeliveryCharge","CitySelectForDeliveryRegion","updateRegionState","handleUpdateRegionFetch","deliveryChargeListFromRegionDetail","chargeKey","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","charges","regionState","ConfigureSTMP","getEmailConfigurationState","handleGetEmailConfigurationFetch","emailConfigurationState","handleEmailConfigurationFetch","isAuthenticated","setIsAuthenticated","isArraySupport","setIsArraySupport","configurationData","setConfigurationData","setMethod","protocol","setProtocol","getEmailConfiguration","authentication","parameters","recipientKey","arraySupport","separator","textKey","mask","maskKey","maskValue","usernameKey","usernameValue","passwordKey","passwordValue","additional","MsgType","additionalMsgType","handleAuthenticatedChange","prottocolOptions","methodOptions","handleMethodChange","handleProtocolChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","handleGetConfigureAutoEmailTemplateFetch","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","user","ConfigureAutoEmail","getAutoEmailConfigurationState","handleGetAutoEmailConfigurationFetch","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isnewDealerAdmin","setnewDealerAdmin","isnewDealer","setnewDealerDealer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","newDealermodal","setnewDealermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","autoEmailData","setAutoEmailData","getAutoEmailConfiguration","handleUpdateAutoEmail","newCustomer","orderStatus","newDealer","updateAutoEmailRes","NewCustomerTemplate","NewDealerAutoEventsTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","setText","setrecipient","handleMsgSend","tokenSeparators","SendOutlined","InboxEmailDetails","setSelectedEmailId","getEmailDetailState","handleGetEmailListFetch","LeftOutlined","Inbox","emailList","getEmailListState","setEmailList","selectedEmailId","substring","Sms","limitCount","sortItemValue","PlusCircleOutlined","SMS","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","sethtml","NotificationList","saveCredentials","credentialsOperations","access","password2","passwordConfirmation","AddNewAdminRoles","deleteTagState","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","ModalComponentChild","setBody","setBnBody","tagsOne","categoryOne","tagNames","setPostDetailData","postDetailData","AddNewPostCategory","DatePickerComponent","withTime","salary","designation","fatherName","motherName","NID","handleTimeChange","dateString","StaffQuickEdit","AddNewStaff","setCustomer","customerDetail","setCustomerDetail","StaffEdit","month","setMonthFeild","convertedYear","convertedMonth","convertedStaffs","bonus","convince","negative","year","handleMonthChange","UsergroupAddOutlined","months","totalSalary","totalBonus","totalConvince","totalExtra","totalNegative","AddNewExpense","ExpenseEdit","max","dealerArea","Areas","area","areas","registeredCustomerListState","handleRegisteredCustomerListFetch","getRegisteredOrderList","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","DealerList","AreaList","AreaDetail","DealerDetail","StaffList","SalaryReportList","SalaryReportDetail","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","PageEdit","PageDetail","Delivery","ManageThemes","AdminList","AdminDetail","Email","handleAdminCredentCialsFetch","getCredenCials","actionShouldBlock","meta","async","blocking","actionFinished","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","queryCache","QueryCache","ReactDOM","getElementById"],"mappings":"gqiBA0EeA,GAvEMC,IAAbC,SAkBK,SAAC,GAcA,IAbZC,EAaW,EAbXA,SACAC,EAYW,EAZXA,YACAC,EAWW,EAXXA,MACAC,EAUW,EAVXA,KAEAC,GAQW,EATXC,aASW,EARXD,OACAE,EAOW,EAPXA,SACAC,EAMW,EANXA,SACAC,EAKW,EALXA,QACAC,EAIW,EAJXA,YACAC,EAGW,EAHXA,KACAC,EAEW,EAFXA,YACAC,EACW,EADXA,IAEA,OACE,oCACGV,GAAS,wBAAIW,UAAU,mBAAmBX,GAE3C,kBAAC,IAAKY,KAAN,CAEEC,eAAgBP,EAAU,QAAU,GAEpCQ,KAAMP,GAGN,kBAAC,IAAD,CACEQ,UAAW,SAACC,GACG,WAATf,IACgB,MAAde,EAAMC,KAA6B,MAAdD,EAAMC,KAC7BD,EAAME,mBAIZR,IAAKA,EACLZ,SAAUA,EACVG,KAAMA,EACNF,YAAaA,EACboB,MAAO,CACLC,aAAc,KAEhBZ,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVO,UAAU,iBACVU,YAAaZ,Q,2DCnEjBa,EAAgB,SAAApB,GACpB,OAAQA,IAAUqB,OAAOC,KAAKtB,GAAOuB,OAAS,GA6CjCC,EA1CO,SAACC,GAA0B,IAArBC,EAAoB,uDAAP,GACvC,GAAIN,EAAcM,GAAa,OAAOD,EAEtC,IAAME,EAASD,EAAWC,QAAU,GAC9BC,EAAeF,EAAWE,cAAgB,GAIhD,OAAOH,EACJI,MAAM,KACNC,KAAI,SAAAC,GAAiB,IAAD,YAEnB,GADAC,QAAQC,IAAI,CAAEF,kBACE,QAAZ,EAAAA,SAAA,eAAcG,SAAS,QAASd,EAAcQ,MAAiB,UAACG,SAAD,aAAC,EAAcG,SAAS,MAAM,CAC/F,IAAIC,EAAyBP,EAAaG,EAAaK,QAAQ,IAAK,KACpEL,EAAeI,EAGjB,IAAgB,QAAZ,EAAAJ,SAAA,eAAcG,SAAS,QAASd,EAAcQ,KAA9C,UAA+DG,SAA/D,aAA+D,EAAcG,SAAS,MAAM,CAC9F,IAAIG,EAAYN,EAAaF,MAAM,KAC/BQ,GAAaA,EAAUd,OAAS,IAClCc,EAAYA,EAAUP,KAAI,SAAAQ,GACxB,OAAOV,EAAaU,EAAKF,QAAQ,IAAK,KAAOR,EAAaU,EAAKF,QAAQ,IAAK,KAAOE,MAIvFP,EAD6BM,EAAUE,KAAK,KAa9C,OATgB,QAAZ,EAAAR,SAAA,eAAcG,SAAS,SAAQ,UAACH,SAAD,aAAC,EAAcG,SAAS,QACzDH,EAAeA,EACZF,MAAM,KACNC,KAAI,SAAAC,GACH,IAAMS,EAAQT,EAAaU,MAAMV,EAAaW,QAAQ,KAAO,GAC7D,OAAOX,EAAaK,QAAQI,EAAOb,EAAOa,IAAU,OAErDD,KAAK,MAEHR,KAERQ,KAAK,MCpCNI,EAAY,I,8ICIKC,G,gFACXC,EAAOD,EAAQC,MAAQ,GAEvBC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,OAAO,eACFA,EADL,CAEEC,GAAID,EAASE,KAAO,GACpBlC,IAAKgC,EAASE,KAAO,GACrB3C,KAAMyC,EAASzC,MAAQyC,EAASzC,KAChC4C,YAAaH,EAASG,aAAeH,EAASG,YAC9CC,aAAcJ,EAASI,cAAgB,EACvCC,OAAQL,EAASK,QAAU,GAC3BC,MAAON,EAASM,MAAT,UACAC,EAAM,SADN,OACoBP,EAASM,MAAME,WACtC,KACJC,KAAMT,EAASS,KAAT,UAAmBF,EAAM,SAAzB,OAAuCP,EAASS,MAAS,KAC/DD,UAAWR,EAASQ,UAAT,UAAwBD,EAAM,SAA9B,OAA4CP,EAASQ,WAAc,KAC9EE,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIC,QAClCC,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFC,SACkC,IAAhClB,EAASmB,YAAY3C,OACjBwB,EAASmB,YAAY,IAAMnB,EAASmB,YAAY,GAAG5D,KACjDyC,EAASmB,YAAY3C,OACrB,EACFwB,EAASmB,YAAY3C,QACvBwB,EAASmB,aACXnB,EAASmB,YAAY3C,OAAS,GAC9BwB,EAASmB,YAAY,IACrBnB,EAASmB,YAAY,GAArB,MAAmC,CACnCC,SAAUpB,EAASmB,YAAYpC,KAAI,SAACsC,GAClC,MAAO,CACLpB,GAAIoB,EAAOnB,KAAO,GAClBlC,IAAKqD,EAAOnB,IACZ3C,KAAM8D,EAAO9D,MAAQ8D,EAAO9D,KAC5B4C,YAAakB,EAAOlB,aAAekB,EAAOlB,YAC1CG,MAAOe,EAAOf,MAAP,UACAC,EAAM,SADN,OACoBc,EAAOf,MAAME,WACpC,Y,kBAOTT,G,kLAScF,G,gFACfC,EAAOD,EAAQC,MAAQD,EAAQC,KAAOD,EAAQC,KAAO,GAErDC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,MAAO,CACLC,GAAID,EAASE,KAAO,GACpBlC,IAAKgC,EAASE,KAAO,GACrB3C,KAAMyC,EAASzC,MAAQyC,EAASzC,KAChC4C,YAAaH,EAASG,aAAeH,EAASG,YAC9CG,MAAON,EAASM,MAAT,UACAC,EAAM,SADN,OACoBP,EAASM,MAAME,WACtC,KACJC,KAAMT,EAASS,KAAT,UAAmBF,EAAM,SAAzB,OAAuCP,EAASS,MAAS,S,kBAI9DV,G,oLASgBF,G,0EACjBC,EAAOD,IAETvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxB+C,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKQ,MAAQR,EAAKQ,MAAMgB,UAAYxB,EAAKQ,MAAMgB,SAAW,IAExFrB,GAAIH,EAAKQ,MAAQR,EAAKQ,MAAMJ,IAAM,IAEpCxB,IAAKoB,EAAKpB,IACVgC,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,oLAWiBpB,G,gFACjBC,EAAOD,EAAQC,MAAQ,GAEzByB,EAAW,GACXzB,GAAQA,EAAKtB,OAAS,GACxBsB,EAAK0B,SAAQ,SAACC,GACPA,EAAIC,MACPH,EAASI,KAAKF,M,kBAKbF,G,wLASoB1B,G,gFACrBC,EAAOD,EAAQC,MAAQ,GACvBC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC6C,GACR,MAAO,CACL3B,GAAI2B,EAAK1B,KAAO,GAChBlC,IAAK4D,EAAK1B,KAAO,GACjB2B,QAASD,EAAKC,SAAWD,EAAKC,QAC9BC,KAAMF,EAAKE,MAAQF,EAAKE,KACxB9E,KAAM4E,EAAK5E,KACX+E,KAAMH,EAAKG,MAAQ,GACnBlB,MAAOe,EAAKf,OAAS,GACrBa,KAAME,EAAKF,S,kBAIV3B,G,mLASeF,G,gFAChBC,EAAOD,EAAQC,MAAQ,GAEvBC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,OAAO,aACLC,GAAID,EAASE,KAAO,GACpBlC,IAAKgC,EAASE,KAAO,GACrBY,MAAOd,EAASzC,MAAQyC,EAASzC,MAC7ByC,EAASmB,aACXnB,EAASmB,YAAY3C,OAAS,GAC9BwB,EAASmB,YAAY,IACrBnB,EAASmB,YAAY,GAArB,MAAmC,CACnCC,SAAUpB,EAASmB,YAAYpC,KAAI,SAACsC,GAClC,MAAO,CACLpB,GAAIoB,EAAOnB,KAAO,GAClBlC,IAAKqD,EAAOnB,IACZY,MAAOO,EAAO9D,MAAQ8D,EAAO9D,KAC7B+C,MAAOe,EAAOf,MAAP,UACAC,EAAM,SADN,OACoBc,EAAOf,MAAME,UAAYa,EAAOf,MAAME,UAAY,IAEzE,Y,kBAOTT,G,wLASoBF,G,gFACrBC,EAAOD,EAAQC,KAEfC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,MAAO,CACLC,GAAID,EAASE,KAAO,GACpBlC,IAAKgC,EAASE,KAAO,GACrBY,MAAOd,EAASzC,MAAQyC,EAASzC,S,kBAIhCwC,G,kLAScF,G,gFACfC,EAAOD,EAAQC,MAAQ,GACdD,EAAQmC,KAAKC,KAEtBC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACoD,GACR,MAAO,CACLlC,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B4C,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAE/E8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B3D,IAAKyD,EAAQzD,IACb6D,KAAMJ,EAAQI,KACdvC,SAAUmC,EAAQnC,SAClBwC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACPS,SAASX,EAAQE,MAAR,SACPF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNU,UACEZ,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,gBACE,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,cACE,M,kBASLN,G,yKASKrC,G,gFACNoD,EAAYpD,EAAQqD,OAAS,GAC7BhB,EACJe,EAAUzE,OAAS,GACnByE,EAAUlE,KAAI,SAACoE,GACb,MAAO,CACLlD,GAAIkD,EAASjD,KAAO,GACpB3C,KAAM4F,EAAS5F,MAAQ4F,EAAS5F,KAChC+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB4C,EAAS7C,MAAMM,QAC7CwB,aAAce,EAASd,OAASc,EAASd,MAAT,QAChCC,WAAYa,EAASd,OAASc,EAASd,MAAT,MAC9Be,SAAUD,EAASC,SACnB1E,IAAKyE,EAASzE,IACd2E,QAASF,EAASE,Y,kBAIjBnB,G,2KASOrC,G,gFACVC,GAAO,EAEPD,EAAO,WACTC,EAAO,CACLG,GAAIJ,EAAO,SAAaK,KAAO,GAC/B3C,KAAMsC,EAAO,SAAatC,MAAQsC,EAAO,SAAatC,KACtD+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBV,EAAO,SAAaS,MAAMM,QACxDwB,aACEvC,EAAO,SAAawC,OAASxC,EAAO,SAAawC,MAApB,QAC/BC,WACEzC,EAAO,SAAawC,OAASxC,EAAO,SAAawC,MAApB,MAC/Be,SAAUvD,EAAO,SAAauD,SAC9B1E,IAAKmB,EAAO,SAAanB,IACzB2E,QAASxD,EAAO,SAAawD,UAI3BnB,EAAgBpC,E,kBAEfoC,G,gLASYrC,G,8EACfqC,GAAgB,EAChBrC,IACFqC,GAAgB,G,kBAEXA,G,gLASYrC,G,8EACfqC,GAAgB,EAChBrC,EAAO,UACTqC,EAAgB,CACdkB,SAAUvD,EAAQyD,QAAR,W,kBAGPpB,G,2KASOpC,G,qEACVA,IAAQA,EAAI,I,yCACP,CACLyD,OAAQ,O,gCAGLzD,G,6KASSD,G,8EAEVqC,EAAgBrC,E,kBAEfqC,G,6KASSrC,G,qEACZA,GAA8B,qBAAnBA,EAAO,I,yCACb,CACL0D,OAAQ,O,iCAIL,G,oLASgB1D,G,qEACnBA,GAA8B,qBAAnBA,EAAO,I,yCACb,CACL0D,OAAQ,O,iCAIL,G,mLASe1D,G,qEAClBA,GAA8B,qBAAnBA,EAAO,I,yCACb,CACL0D,OAAQ,O,iCAIL,G,6KASS1D,G,gFACVC,EAAOD,EAAQC,MAAQ,GACdD,EAAQmC,KAAKC,KAEtBC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACoD,GACR,MAAO,CACLlC,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B4C,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAE/E8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B3D,IAAKyD,EAAQzD,IACb6D,KAAMJ,EAAQI,KACdvC,SAAUmC,EAAQnC,SAClBwC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACPS,SAASX,EAAQE,MAAR,SACPF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNmB,SACErB,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,gBACE,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,cACE,M,kBASLN,G,+KASWrC,G,gFACZC,EAAOD,EAAQC,MAAQ,GACdD,EAAQmC,KAAKC,KAEtBC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACoD,GACR,MAAO,CACLlC,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B4C,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAE/E8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B3D,IAAKyD,EAAQzD,IACb6D,KAAMJ,EAAQI,KACdvC,SAAUmC,EAAQnC,SAClBwC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACPS,SAASX,EAAQE,MAAR,SACPF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNmB,SACErB,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,gBACE,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,cACE,M,kBASLN,G,+KASWrC,G,kFACZC,EAAOD,EAAQC,MAAQ,GACvB2D,EAAS5D,EAAQmC,KAAKC,KAEtBC,EACHpC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACoD,GACR,MAAO,CACLlC,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B4C,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB4B,EAAQ7B,MAAME,WAC5C4B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B3D,IAAKyD,EAAQzD,IACb6D,KAAMJ,EAAQI,KACdE,KAAMN,EAAQM,KACdE,MAAOR,EAAQQ,MACfH,QAASL,EAAQK,aAGvB,G,kBAEK,CACL1C,KAAMoC,EACNuB,W,6KAUc5D,G,sFACVC,EAAOD,EAAQC,MAAQ,GACvB2D,EAAS5D,EAAQmC,KAAKC,KACtByB,E,UAAQ7D,EAAQmC,Y,aAAR,EAAc2B,WA4D5BzB,EAAgB,CACdpC,KA1DEoC,EACFpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACoD,GACR,OAAO,eACFA,EADL,CAEElC,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B4C,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAO6B,EAAQ7B,MAAR,UACAC,EAAM,SADN,OACqB4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAExE6B,EAAQ7B,MACZ8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B3D,IAAKyD,EAAQzD,IACb6D,KAAMJ,EAAQI,KACdvC,SAAUmC,EAAQnC,SAClBU,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFuB,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACPS,SAASX,EAAQE,MAAR,SACPF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNU,UACEZ,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,gBACE,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,cACE,OAMVP,KAAMwB,EACNC,S,kBAGKxB,G,0KASMrC,G,gFACPC,EAAOD,EAAQC,KAGjBoC,EACFpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC6E,GACR,OAAO,eACFA,EADL,CAEE3D,GAAI2D,EAAK1D,KAAO,GAChB3C,KAAMqG,EAAKrG,MAAQqG,EAAKrG,KACxBsG,KAAMD,EAAKC,MAAQD,EAAKC,KACxBC,gBAAiBF,EAAKE,iBAAmBF,EAAKE,gBAC9CC,YAAaH,EAAKG,aAAeH,EAAKG,YACtCC,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtC1D,MAAOsD,EAAKtD,MAAL,UACAC,EAAM,SADN,OACqBqD,EAAKtD,OAASsD,EAAKtD,MAAL,WAA4B,IAElE,KACJ5B,IAAKkF,EAAKlF,IACVsB,SAAU4D,EAAK5D,SACf6C,KAAMe,EAAKf,U,kBASVX,G,6KASSrC,G,gFACVC,EAAOD,EAAQC,KAGjBoC,EACFpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC6E,GACR,OAAO,eACFA,EADL,CAEE3D,GAAI2D,EAAK1D,KAAO,GAChB3C,KAAMqG,EAAKrG,MAAQqG,EAAKrG,KACxBsG,KAAMD,EAAKC,MAAQD,EAAKC,KACxBC,gBAAiBF,EAAKE,iBAAmBF,EAAKE,gBAC9CC,YAAaH,EAAKG,aAAeH,EAAKG,YACtCC,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtC1D,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BqD,EAAKtD,OAASsD,EAAKtD,MAAL,WAA4B,IAEzE5B,IAAKkF,EAAKlF,IACVsB,SAAU4D,EAAK5D,SACf6C,KAAMe,EAAKf,U,kBASVX,G,kLAScrC,G,gFACfC,EAAOD,EAAQC,KAGjBoC,EACFpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC6E,GACR,OAAO,eACFA,EADL,CAEE3D,GAAI2D,EAAK1D,KAAO,GAChB3C,KAAMqG,EAAKrG,MAAQqG,EAAKrG,KACxBsG,KAAMD,EAAKC,MAAQD,EAAKC,KACxBC,gBAAiBF,EAAKE,iBAAmBF,EAAKE,gBAC9CC,YAAaH,EAAKG,aAAeH,EAAKG,YACtCC,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtC1D,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BqD,EAAKtD,OAASsD,EAAKtD,MAAL,WAA4B,IAEzE5B,IAAKkF,EAAKlF,IACVsB,SAAU4D,EAAK5D,SACf6C,KAAMe,EAAKf,U,kBAIVX,G,4KASQrC,G,0EACTC,EAAOD,EAGbZ,QAAQC,IAAI,wBAAyBW,KAEjCvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxBsG,KAAM/D,EAAK+D,MAAQ/D,EAAK+D,KACxBC,gBAAiBhE,EAAKgE,iBAAmBhE,EAAKgE,gBAC9CC,YAAajE,EAAKiE,aAAejE,EAAKiE,YACtCC,YAAalE,EAAKkE,aAAelE,EAAKkE,YACtC1D,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BT,EAAKQ,OAASR,EAAKQ,MAAL,QAAyB,IAEtE5B,IAAKoB,EAAKpB,IACVuF,iBACEnE,EAAKmE,kBAAoBnE,EAAKmE,iBAAiBzF,OAAS,EACpDsB,EAAKmE,iBAAiBlF,KAAI,SAACQ,GAC3B,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IACLV,EAAK2E,QACP5F,OAAOC,KAAKgB,EAAK2E,QAAQ1F,OAAS,GADhC,eAECe,EAAK2E,OAFN,CAGF5D,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBhB,EAAK2E,OAAO5D,MACtCf,EAAK2E,OAAO5D,MAAMgB,UACpB/B,EAAK2E,OAAO5D,MAAMgB,SAChB,IAEJrB,GAAIV,EAAK2E,OAAO5D,MAAQf,EAAK2E,OAAO5D,MAAMJ,IAAM,IAElDmC,MACES,SAASvD,EAAK2E,OAAO7B,MAAZ,OACPS,SAASvD,EAAK2E,OAAO7B,MAAZ,SACP9C,EAAK2E,OAAO7B,MAAZ,MACA9C,EAAK2E,OAAO7B,MAAZ,QACN3B,MACGnB,EAAK2E,OAAOxD,OACXnB,EAAK2E,OAAOxD,MAAMlC,OAAS,GAC3Be,EAAK2E,OAAOxD,MAAM3B,KAAI,SAAC4B,GACrB,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,SAIN,GACNkD,UACGrE,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACqF,GACjB,MAAO,CACLnE,GAAImE,EAAIlE,IACR3C,KAAM6G,EAAI7G,UAGhBuC,EAAKE,SACPA,SACGF,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACqF,GACjB,OAAOA,EAAIlE,QAEfJ,EAAKE,SACP6C,KAAM/C,EAAK+C,MAAQ/C,EAAK+C,KAAKrE,OAAS,EAAIsB,EAAK+C,KAAO,GACtDnC,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,gCAEQ,I,gLASKpB,G,0EACbC,EAAOD,EAGbZ,QAAQC,IAAI,wBAAyBW,KAEjCvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxBsG,KAAM/D,EAAK+D,MAAQ/D,EAAK+D,KACxBC,gBAAiBhE,EAAKgE,iBAAmBhE,EAAKgE,gBAC9CC,YAAajE,EAAKiE,aAAejE,EAAKiE,YACtCC,YAAalE,EAAKkE,aAAelE,EAAKkE,YACtC1D,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BT,EAAKQ,OAASR,EAAKQ,MAAL,QAAyB,IAEtE5B,IAAKoB,EAAKpB,IACVuF,iBACEnE,EAAKmE,kBAAoBnE,EAAKmE,iBAAiBzF,OAAS,EACpDsB,EAAKmE,iBAAiBlF,KAAI,SAACQ,GAC3B,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IACLV,EAAK2E,QACP5F,OAAOC,KAAKgB,EAAK2E,QAAQ1F,OAAS,GADhC,eAECe,EAAK2E,OAFN,CAGF5D,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBhB,EAAK2E,OAAO5D,MACtCf,EAAK2E,OAAO5D,MAAMgB,UACpB/B,EAAK2E,OAAO5D,MAAMgB,SAChB,IAEJrB,GAAIV,EAAK2E,OAAO5D,MAAQf,EAAK2E,OAAO5D,MAAMJ,IAAM,IAElDmC,MACES,SAASvD,EAAK2E,OAAO7B,MAAZ,OACPS,SAASvD,EAAK2E,OAAO7B,MAAZ,SACP9C,EAAK2E,OAAO7B,MAAZ,MACA9C,EAAK2E,OAAO7B,MAAZ,QACN3B,MACGnB,EAAK2E,OAAOxD,OACXnB,EAAK2E,OAAOxD,MAAMlC,OAAS,GAC3Be,EAAK2E,OAAOxD,MAAM3B,KAAI,SAAC4B,GACrB,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,SAIN,GACNjB,SAAUF,EAAKE,SACf6C,KAAM/C,EAAK+C,MAAQ/C,EAAK+C,KAAKrE,OAAS,EAAIsB,EAAK+C,KAAO,GACtDnC,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,gCAEQ,I,4KASCpB,G,gFACTC,EAAOD,EAAQC,MAAQ,GAEzBoC,EACFpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACoD,GACR,OAAO,eACFA,EADL,CAEEkC,aAAclC,EAAQE,MACtBpC,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B4C,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAO6B,EAAQ7B,MAAR,UACAC,EAAM,SADN,OACqB4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAExE6B,EAAQ7B,MACZ8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B3D,IAAKyD,EAAQzD,IACb4F,UAAWnC,EAAQmC,UACnBC,QAASpC,EAAQoC,QACjBC,YAAarC,EAAQqC,YACrBjC,KAAMJ,EAAQI,KACdvC,SAAUmC,EAAQnC,SAClBwC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdV,QAASA,EAAO,QAChB/B,aAAc+B,EAAO,QAAY3D,OACjC6D,MACES,SAASX,EAAQE,MAAR,OACPS,SAASX,EAAQE,MAAR,SACPF,EAAQE,MAAR,MACAF,EAAQE,MAAR,a,kBASLH,G,8KASUrC,G,0EACXC,EAAOD,GAAW,KAEpBvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,yCACtB,CACLyB,GAAIH,EAAKI,KAAO,GAChB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxB4C,YAAaL,EAAKK,aAAeL,EAAKK,YACtCG,MAAOR,EAAKQ,MAAL,UACAC,EAAM,SADN,OACqBT,EAAKQ,OAASR,EAAKQ,MAAL,WAA4B,IAElE,GACJ8B,aAActC,EAAKuC,OAASvC,EAAKuC,MAAL,QAC5BC,WAAYxC,EAAKuC,OAASvC,EAAKuC,MAAL,MAC1B3D,IAAKoB,EAAKpB,IACV4F,UAAWxE,EAAKwE,UAChBC,QAASzE,EAAKyE,QACdC,YAAa1E,EAAK0E,YAClBjC,KAAMzC,EAAKyC,KACXvC,SAAUF,EAAKE,SACfwC,QAAS1C,EAAK0C,QACdC,KAAM3C,EAAK2C,KACXC,KAAM5C,EAAK4C,KACXC,MAAO7C,EAAK6C,MACZC,MAAO9C,EAAK8C,MACZC,KAAM/C,EAAK+C,KACX4B,SAAU3E,EAAKqC,QACf/B,aAAcN,EAAI,QAAYtB,OAC9B6D,MACES,SAAShD,EAAKuC,MAAL,OAAuBS,SAAShD,EAAKuC,MAAL,SACrCvC,EAAKuC,MAAL,MACAvC,EAAKuC,MAAL,QACN3B,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,K,gCAEQnB,G,wLAcaD,G,gFACrBC,EAAOD,GAAWA,EAAQC,KAAOD,EAAQC,KAAO,GAEtDb,QAAQC,IAAI,yBAA0BW,GAElCqC,EACFpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACQ,GACR,MAAO,CACLU,GAAIV,EAAKW,KAAO,GAChBwE,MAAOnF,EAAKoF,OAAS,GACrBpH,KACEgC,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,KACzCb,IAAKa,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,IAC5CqF,OACErF,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,Q,kBASxC2C,G,4LASwBrC,G,0FACxBA,G,+LAS2BA,G,4EAC5BC,EAAOD,GAAWA,EAAQC,KAAOD,EAAQC,KAAO,I,yCAE7CA,G,gCACK,I,oLASSD,G,8EACjBC,EAAOD,EAAQC,MAAQ,G,kBACtBA,G,4LASwBD,G,0FACxBA,G,gLASYA,G,qEACfA,E,wDAEGA,E,CACHI,GAAIJ,EAAQK,KAAO,GACnBlC,IAAK6B,EAAQK,KAAO,GACpB2E,UAAWhF,EAAQgF,WAAa,GAChCC,SAAUjF,EAAQiF,UAAY,GAC9BvH,KAAMsC,EAAQgF,UAAY,IAAMhF,EAAQiF,SACxCC,QAASlF,EAAQkF,SAAW,GAC5BC,KAAMnF,EAAQmF,MAAQ,GACtBC,MAAOpF,EAAQoF,OAAS,GACxBC,MAAOrF,EAAQqF,OAAS,GACxBC,SAAUtF,EAAQsF,UAAY,GAC9BC,SAAUvF,EAAQuF,UAAY,GAC9BC,QAASxF,EAAQwF,SAAW,M,gCAElBxF,G,4KASCA,G,gFAGXqC,GAFEpC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACoD,GACR,OAAO,eACFrC,EADL,CAEEG,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B+H,KAAMnD,EAAQmD,KACdhF,MAAO6B,EAAQ7B,MAAR,UACAC,EAAM,SADN,OACqB4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAExE,KACJiF,aAAcpD,EAAQoD,aACtBC,aAAcrD,EAAQqD,aACtBlD,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7BoD,aAActD,EAAQsD,aACtBC,qBACEvD,EAAQwD,iBAAmBxD,EAAQwD,gBAAgBnH,OACrDoH,kBACEzD,EAAQsD,cAAgBtD,EAAQsD,aAAajH,OAC/CqH,WAAY1D,EAAQ0D,WACpBC,OAAQ3D,EAAQ2D,OAChBC,aAAc5D,EAAQ4D,aACtBzB,UAAWnC,EAAQmC,UACnBC,QAASpC,EAAQoC,QACjByB,cAAe7D,EAAQ6D,cACvBxB,YAAarC,EAAQqC,YACrBjC,KAAMJ,EAAQI,KACdvC,SAAUmC,EAAQnC,SAClBwC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,UAIpBzD,QAAQC,IAAI,wBAAyBgD,G,kBAO9BA,G,yKASKrC,G,gFACNC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACkH,GACR,OAAO,eACFA,EADL,CAEEhG,GAAIgG,EAAI/F,KAAO,GACflC,IAAKiI,EAAI/F,KAAO,GAChB3C,KAAM0I,EAAI1I,MAAQ0I,EAAI1I,KACtB4C,YAAa8F,EAAI9F,aAAe8F,EAAI9F,iB,kBAInC+B,G,iLASarC,G,gFACdC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACkG,GACR,OAAO,eACFA,EADL,CAEEhF,GAAIgF,EAAM/E,KAAO,GACjBlC,IAAKiH,EAAM/E,KAAO,GAClBgG,UAAWjB,EAAMiB,UACjBC,QAASlB,EAAMkB,QACfC,KAAMnB,EAAMmB,KACZtE,KAAMmD,EAAMnD,KACZY,KAAMuC,EAAMvC,KACZ3E,MAAOkH,EAAMlH,W,kBAIZmE,G,gLASYrC,G,gFACbC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACsH,GACR,OAAO,eACFA,EADL,CAEEpG,GAAIoG,EAAInG,KAAO,GACflC,IAAKqI,EAAInG,KAAO,GAChBgG,UAAWG,EAAIH,UACfpE,KAAMuE,EAAIvE,KACVY,KAAM2D,EAAI3D,KACV3E,MAAOsI,EAAItI,W,kBAIVmE,G,6KASSrC,G,gFACVC,EAAOD,EAAQC,KAEfoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACkH,GACR,MAAO,CACLhG,GAAIgG,EAAI/F,KAAO,GACflC,IAAKiI,EAAI/F,KAAO,GAChB3C,KAAM0I,EAAI1I,MAAQ0I,EAAI1I,KACtB4C,YAAa8F,EAAI9F,aAAe8F,EAAI9F,gB,kBAInC+B,G,+KASWrC,G,0EACZC,EAAOD,IAETvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChBlC,IAAK8B,EAAKI,KAAO,GACjB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxB4C,YAAaL,EAAKK,aAAeL,EAAKK,e,gCAE5B,I,kLAUON,G,0EACfC,EAAOD,IAETvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChBlC,IAAK8B,EAAKI,KAAO,GACjB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,Q,gCAEd,I,2KASAsC,G,gFACRC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC6D,GACR,OAAO,eACFA,EADL,CAEE3C,GAAI2C,EAAM1C,KAAO,GACjBlC,IAAK4E,EAAM1C,KAAO,GAClB3C,KAAMqF,EAAMrF,MAAQqF,EAAMrF,KAC1B4C,YAAayC,EAAMzC,aAAeyC,EAAMzC,YACxCG,MAAOsC,EAAMtC,MAAN,UACAC,EAAM,SADN,OACoBqC,EAAMtC,MAAQsC,EAAMtC,MAAME,UAAY,IAC7D,U,kBAIH0B,G,2LASuBrC,G,qEAC1BA,EAAQyG,Q,yCACH,CACL/C,OAAQ,O,gCAGL,I,6KASS1D,G,qEACZA,EAAQyG,Q,yCACH,CACL/C,OAAQ,O,gCAGL,I,2LASuB1D,G,qEAC1BA,EAAQyG,Q,yCACH,CACL/C,OAAQ,O,gCAGL,I,oLASgB1D,G,qEACnBA,EAAQyG,Q,yCACH,CACL/C,OAAQ,O,gCAGL,I,8KASU1D,G,qEACbA,EAAQyG,Q,yCACH,CACL/C,OAAQ,O,gCAGL,I,uLASmB1D,G,sEACtBA,GAAWvB,OAAOC,KAAKsB,GAASrB,OAAS,G,wDAEtCqB,E,CACH0D,OAAQ,Q,gCAGL,I,qLASiB1D,G,sEACpBA,GAAWvB,OAAOC,KAAKsB,GAASrB,OAAS,G,wDAEtCqB,E,CACH0D,OAAQ,Q,gCAGL,I,iLASa1D,G,qEAChBA,IAAWA,EAAQ0G,I,yCACd,CACLhD,OAAQ,O,gCAGL,I,4LASwB1D,G,qEAC3BA,IAAWA,EAAQyG,Q,yCACd,CACL/C,OAAQ,O,gCAGL,I,+LAS2B1D,G,sEAC9BA,GAAWvB,OAAOC,KAAKsB,GAASrB,OAAS,G,wDAEtCqB,E,CACHI,GAAIJ,EAAQK,O,gCAGT,I,6LASyBL,G,sEAC5BA,GAAWvB,OAAOC,KAAKsB,GAASrB,OAAS,G,wDAEtCqB,E,CACHI,GAAIJ,EAAQK,O,gCAGT,I,+KASWL,G,qEACdA,IAAWA,EAAQyG,Q,yCACd,CACL/C,OAAQ,O,gCAGL,I,uLASmB1D,G,qEACtBA,EAAQyG,Q,yCACH,CACL/C,OAAQ,O,gCAGL,I,6KASS1D,G,qEACZA,EAAQ2G,O,yCACH,CACLjD,OAAQ,O,gCAGL,I,6KASS1D,G,4EACVC,EAAOxB,OAAOC,KAAKsB,GAASrB,OAAS,EAAIqB,EAAU,M,wDAGlDC,E,CACHG,GAAIH,EAAKI,KAAO,GAChBlC,IAAK8B,EAAKI,KAAO,GACjB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxB4C,YAAaL,EAAKK,aAAeL,EAAKK,YACtCzB,IAAKoB,EAAKpB,KAAOoB,EAAKpB,IACtB4B,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKQ,MAAQR,EAAKQ,MAAMgB,UAAYxB,EAAKQ,MAAMgB,SAAW,IAExFrB,GAAIH,EAAKQ,MAAQR,EAAKQ,MAAMJ,IAAM,IAEpCQ,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIH,WAClCK,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,gCAIC,I,2KASOpB,G,4EACRC,EAAOxB,OAAOC,KAAKsB,GAASrB,OAAS,EAAIqB,EAAU,M,wDAGlDC,E,CACHG,GAAIH,EAAKI,KAAO,GAChBlC,IAAK8B,EAAKI,KAAO,GACjB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxBmB,IAAKoB,EAAKpB,KAAOoB,EAAKpB,IACtByB,YAAaL,EAAKK,aAAeL,EAAKK,e,gCAInC,I,8KASUN,G,gFACXC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBlC,IAAKyI,EAASvG,KAAO,GACrB2E,UAAW4B,EAAS5B,WAAa,GACjCC,SAAU2B,EAAS3B,UAAY,GAC/BvH,KAAMkJ,EAAS5B,UAAY,IAAM4B,EAAS3B,SAC1C4B,WACED,EAASE,QAAUrI,OAAOC,KAAKkI,EAASE,QAAQnI,OAAS,EACrDiI,EAAQ,OAAW5B,UAAY,IAAM4B,EAAQ,OAAW3B,SACxD,OACNC,QAAS0B,EAAS1B,SAAW,GAC7BC,KAAMyB,EAASzB,MAAQ,GACvBC,MAAOwB,EAASxB,OAAS,GACzBC,MAAOuB,EAASvB,OAAS,GACzBC,SAAUsB,EAAStB,UAAY,GAC/BC,SAAUqB,EAASrB,UAAY,GAC/BC,QAASoB,EAAS5F,OAAS,Q,kBAI1BqB,G,2KASOrC,G,gFACRC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBlC,IAAKyI,EAASvG,KAAO,GACrB2E,UAAW4B,EAAS5B,WAAa,GACjCC,SAAU2B,EAAS3B,UAAY,GAC/BvH,KAAMkJ,EAAS5B,UAAY,IAAM4B,EAAS3B,SAC1CC,QAAS0B,EAAS1B,SAAW,GAC7BC,KAAMyB,EAASzB,MAAQ,GACvBC,MAAOwB,EAASxB,OAAS,GACzBC,MAAOuB,EAASvB,OAAS,GACzB0B,QAASH,EAASG,SAAW,Q,kBAI5B1E,G,8LAS0BrC,G,gFAC3BC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBlC,IAAKyI,EAASvG,KAAO,GACrB2E,UAAW4B,EAAS5B,WAAa,GACjCC,SAAU2B,EAAS3B,UAAY,GAC/BvH,KAAMkJ,EAAS5B,UAAY,IAAM4B,EAAS3B,SAC1C4B,WACED,EAASE,QAAUrI,OAAOC,KAAKkI,EAASE,QAAQnI,OAAS,EACrDiI,EAAQ,OAAW5B,UAAY,IAAM4B,EAAQ,OAAW3B,SACxD,OACNC,QAAS0B,EAAS1B,SAAW,GAC7BC,KAAMyB,EAASzB,MAAQ,GACvBC,MAAOwB,EAASxB,OAAS,GACzBC,MAAOuB,EAASvB,OAAS,GACzBC,SAAUsB,EAAStB,UAAY,GAC/BC,SAAUqB,EAASrB,UAAY,GAC/BC,QAASoB,EAAS5F,OAAS,Q,kBAI1BqB,G,4KASQrC,G,gFACTC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBlC,IAAKyI,EAASvG,KAAO,GACrBoF,KAAMmB,EAASnB,MAAQ,GACvBuB,WAAYJ,EAASI,YAAc,GACnCC,aAAcL,EAASK,cAAgB,GACvCvJ,KAAMkJ,EAAS5B,UAAY,IAAM4B,EAAS3B,SAC1CC,QAAS0B,EAAS1B,SAAW,GAC7BC,KAAMyB,EAASzB,MAAQ,GACvBC,MAAOwB,EAASxB,OAAS,GACzBC,MAAOuB,EAASvB,OAAS,GACzBC,SAAUsB,EAAStB,UAAY,GAC/BC,SAAUqB,EAASrB,UAAY,GAC/BC,QAASoB,EAAS5F,OAAS,Q,kBAI1BqB,G,kLAScrC,G,gFAGfqC,GAFApC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBlC,IAAKyI,EAASvG,KAAO,GACrBoF,KAAMmB,EAASnB,MAAQ,GACvBuB,WAAYJ,EAASI,YAAc,GACnCC,aAAcL,EAASK,cAAgB,GACvCvJ,KAAMkJ,EAAS5B,UAAY,IAAM4B,EAAS3B,SAC1CC,QAAS0B,EAAS1B,SAAW,GAC7BC,KAAMyB,EAASzB,MAAQ,GACvBC,MAAOwB,EAASxB,OAAS,GACzBC,MAAOuB,EAASvB,OAAS,GACzBC,SAAUsB,EAAStB,UAAY,GAC/BC,SAAUqB,EAASrB,UAAY,GAC/BC,QAASoB,EAAS5F,OAAS,Q,kBAI1BqB,G,8KASUrC,G,qEACbA,E,wDAEGA,E,CACHI,GAAIJ,EAAQK,KAAO,GACnBlC,IAAK6B,EAAQK,KAAO,GACpBoF,KAAMzF,EAAQyF,MAAQ,GACtBuB,WAAYhH,EAAQgH,YAAc,GAClCC,aAAcjH,EAAQiH,cAAgB,GACtCvJ,KAAMsC,EAAQgF,UAAY,IAAMhF,EAAQiF,SACxCC,QAASlF,EAAQkF,SAAW,GAC5BC,KAAMnF,EAAQmF,MAAQ,GACtBC,MAAOpF,EAAQoF,OAAS,GACxBC,MAAOrF,EAAQqF,OAAS,GACxBC,SAAUtF,EAAQsF,UAAY,GAC9BC,SAAUvF,EAAQuF,UAAY,GAC9BC,QAASxF,EAAQgB,OAAS,M,gCAEhBhB,G,0KASDA,G,gFACPC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiD,GACR,OAAO,eACFA,EADL,CAEE/B,GAAI+B,EAAK9B,KAAO,GAChBlC,IAAKgE,EAAK9B,KAAO,GACjB3C,KAAMyE,EAAKzE,MAAQyE,EAAKzE,KACxB4C,YAAa6B,EAAK7B,aAAe6B,EAAK7B,YACtCG,MAAO0B,EAAK1B,MAAL,UACAC,EAAM,SADN,OACoByB,EAAK1B,MAAQ0B,EAAK1B,MAAME,UAAY,IAC3D,U,kBAIH0B,G,2KASOrC,G,gFAGRqC,GAFApC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACgI,GACR,MAAO,CACL9G,GAAI8G,EAAM7G,KAAO,GACjBlC,IAAK+I,EAAM7G,KAAO,GAClB3C,KAAMwJ,EAAMxJ,MAAQ,GACpBsD,MAAOkG,EAAMlG,OAAS,GACtBL,UAAU,GAAD,OAAKD,EAAM,SAAX,OAAyBwG,EAAMvG,UAAYuG,EAAMvG,UAAY,Q,kBAKrE0B,G,+KASWrC,G,+EACZmH,EAAanH,EAAQmH,YAAc,KAEvBA,EAAWxI,OAAS,G,uBAC9B0D,EACJ8E,EAAWxI,OAAS,GACpBwI,EAAWjI,KAAI,SAACkI,GACd,MAAO,CACLhH,GAAIgH,EAAU/G,KAAO,GACrBlC,IAAKiJ,EAAU/G,KAAO,GACtB3C,KAAM0J,EAAU1J,MAAQ,GACxB2F,MACE+D,EAAU/D,MAAM1E,OAAS,EACrByI,EAAU/D,MAAMnE,KAAI,SAACQ,GACrB,OAAO,eACFA,EADL,CAEEmB,MACEnB,EAAKmB,MAAMlC,OAAS,EAChBe,EAAKmB,MAAM3B,KAAI,SAAC4B,GAChB,MAAO,CACLL,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIH,UAAYG,EAAIH,UAAY,IAE9DP,GAAIU,EAAIT,IACR3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtBsD,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,YAGf,QAGR,O,kBAILiB,G,gCAGF,I,4KASQpC,G,8EACToC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACmI,GACR,MAAO,CACLjH,GAAIiH,EAAOhH,KAAO,GAClBlC,IAAKkJ,EAAOhH,KAAO,GACnB3C,KAAM2J,EAAO3J,MAAQ,GACrB4J,eAAgBD,EAAOC,gBAAkB,GACzCpC,QAASmC,EAAOnC,SAAW,GAC3BqC,YAAaF,EAAOE,aAAe,GACnCC,YAAaH,EAAOG,aAAe,GACnCrC,KAAMkC,EAAOlC,MAAQ,GACrBtC,KAAMwE,EAAOxE,MAAQ,GACrB4E,OAAQJ,EAAOI,QAAU,O,kBAIxBpF,G,+KASWpC,G,8EACZoC,EAAgB5D,OAAOC,KAAKuB,GAAMtB,OAAS,GAAKsB,E,kBAC/CoC,G,sLASkBrC,G,wFACnBC,EAAOD,EAAQC,MAAQ,GACvBmC,E,UAAOpC,EAAQmC,Y,aAAR,EAAcC,KACrByB,E,UAAQ7D,EAAQmC,Y,aAAR,EAAc2B,WAEtBzB,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC2B,GACR,MAAO,CACLT,GAAIS,EAAMR,KAAO,GACjB3C,KAAMmD,EAAMnD,MAAQmD,EAAMnD,KAC1B+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBG,EAAMF,WACpCK,MAAOH,EAAMG,MACbC,MAAOJ,EAAMI,MACbC,OAAQL,EAAMK,OACdC,IAAKN,EAAMM,IACXC,QAASP,EAAMO,Y,kBAId,CACLnB,KAAMoC,EACND,OACAyB,U,6KAWc7D,G,gFAGVqC,GAFApC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACgG,GACR,MAAO,CACL9E,GAAI8E,EAAQ7E,KAAO,GACnB3C,KAAMwH,EAAQxH,MAAQwH,EAAQxH,S,kBAI7B2E,G,mLAUepC,G,8EAChBoC,EAAgBpC,E,kBAEfoC,G,0KASMrC,G,gFAGPqC,GAFApC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACiG,GACR,MAAO,CACL/E,GAAI+E,EAAK9E,KAAO,GAChB3C,KAAMyH,EAAKzH,MAAQyH,EAAKzH,S,kBAIvB2E,G,8KASUrC,G,0FACVA,G,+KAUWC,G,8EACZoC,EACH5D,OAAOC,KAAKuB,GAAMtB,OAAS,GAA3BF,OAAA,IAAAA,CAAA,GACIwB,EADJ,CAECG,GAAIH,EAAKI,KAAOJ,EAAKG,IAAM,GAC3B1C,KAAMuC,EAAKvC,MAAQ,GACnB4C,YAAaL,EAAKK,YAAYd,QAAQ,WAAY,KAAO,GACzD+C,aAActC,EAAKuC,OAASvC,EAAKuC,MAAL,QAC5BC,WAAYxC,EAAKuC,OAASvC,EAAKuC,MAAL,MAC1B3D,IAAKoB,EAAKpB,IACV6I,eAAgBzH,EAAKyH,eACrBC,aAAc1H,EAAK0H,aACnBjF,KAAMzC,EAAKyC,KACXE,KAAM3C,EAAK2C,KACXE,MAAO7C,EAAK6C,MACZC,MACE9C,EAAK8C,OAAStE,OAAON,IAAI8B,EAAK8C,OAAOpE,OAAS,EAC1C,CACAyB,GAAIH,EAAK8C,MAAM3C,GACf1C,KAAMuC,EAAK8C,MAAMrF,MAEjB,GACN8E,MACES,SAAShD,EAAKuC,MAAL,OAAuBS,SAAShD,EAAKuC,MAAL,SACrCvC,EAAKuC,MAAL,MACAvC,EAAKuC,MAAL,QACNG,QAAS1C,EAAK0C,QACdxC,SACGF,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACqF,GACjB,MAAO,CACLnE,GAAImE,EAAIlE,IACR3C,KAAM6G,EAAI7G,UAGhBuC,EAAKE,SACP6C,KAAM/C,EAAK+C,MAAQ/C,EAAK+C,KAAKrE,OAAS,EAAIsB,EAAK+C,KAAO,GAEtDvC,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKQ,MAAQR,EAAKQ,MAAMgB,UAAYxB,EAAKQ,MAAMgB,SAAW,IAExFrB,GAAIH,EAAKQ,MAAQR,EAAKQ,MAAMJ,IAAM,IAEpCQ,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACF8B,UACEjD,EAAK0C,SAAW1C,EAAK0C,QAAQhE,OAAS,EAClCsB,EAAK0C,QAAQ,GAAb,OAA4B1C,EAAK0C,QAAQ,GAAb,gBAC5B,EACNQ,QACElD,EAAK0C,SAAW1C,EAAK0C,QAAQhE,OAAS,EAClCsB,EAAK0C,QAAQ,GAAb,OAA4B1C,EAAK0C,QAAQ,GAAb,cAC5B,KAER,G,kBAEKN,G,8KAUUpC,G,8EACXoC,EACH5D,OAAOC,KAAKuB,GAAMtB,OAAS,GAA3BF,OAAA,IAAAA,CAAA,GACIwB,EADJ,CAECG,GAAIH,EAAKI,KAAO,GAChB3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxB+C,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKQ,MAAQR,EAAKQ,MAAMgB,UAAYxB,EAAKQ,MAAMgB,SAAW,IAExFrB,GAAIH,EAAKQ,MAAQR,EAAKQ,MAAMJ,IAAM,IAEpCoF,KAAMxF,EAAKwF,KACXC,aAAczF,EAAKyF,aACnBC,aAAc1F,EAAK0F,aACnBC,aAAc3F,EAAK2F,cAAgB,GACnCE,gBACE7F,EAAK6F,iBAAmB7F,EAAK6F,gBAAgBnH,OAAS,EAClDsB,EAAK6F,gBAAgB5G,KAAI,SAACQ,GAE1B,OADAN,QAAQC,IAAI,sBAAuBK,GAC5B,eACFA,EADL,CAEEU,GAAIV,EAAKU,IACLV,EAAK2E,QACP5F,OAAOC,KAAKgB,EAAK2E,QAAQ1F,OAAS,GADhC,eAECe,EAAK2E,OAFN,CAGF5D,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBhB,EAAK2E,OAAO5D,MACtCf,EAAK2E,OAAO5D,MAAMgB,UACpB/B,EAAK2E,OAAO5D,MAAMgB,SAChB,IAEJrB,GAAIV,EAAK2E,OAAO5D,MAAQf,EAAK2E,OAAO5D,MAAMJ,IAAM,IAElDmC,MACES,SAASvD,EAAK2E,OAAO7B,MAAZ,OACPS,SAASvD,EAAK2E,OAAO7B,MAAZ,SACP9C,EAAK2E,OAAO7B,MAAZ,MACA9C,EAAK2E,OAAO7B,MAAZ,cAIV,GACNuD,kBAAmB9F,EAAK2F,cAAgB3F,EAAK6F,gBAAgBnH,OAC7DqH,WAAY/F,EAAK+F,WACjBC,OAAQhG,EAAKgG,OACbC,aAAcjG,EAAKiG,aACnBzB,UAAWxE,EAAKwE,UAChBC,QAASzE,EAAKyE,QACdyB,cAAelG,EAAKkG,cACpBxB,YAAa1E,EAAK0E,YAClBjC,KAAMzC,EAAKyC,KACXvC,SAAUF,EAAKE,SACfwC,QAAS1C,EAAK0C,QACdC,KAAM3C,EAAK2C,KACXC,KAAM5C,EAAK4C,KACXC,MAAO7C,EAAK6C,MACZC,MAAO9C,EAAK8C,MACZC,KAAM/C,EAAK+C,QAEb,GAEF5D,QAAQC,IAAI,sBAAuBgD,G,kBAE5BA,G,mLASepC,G,8EAChBoC,EACH5D,OAAOC,KAAKuB,GAAMtB,OAAS,GAA3BF,OAAA,IAAAA,CAAA,GACIwB,EADJ,CAECG,GAAIH,EAAKI,KAAOJ,EAAKG,IAAM,GAC3B1C,KAAMuC,EAAKvC,MAAQ,GACnB4C,YAAaL,EAAKK,YAAYd,QAAQ,WAAY,KAAO,GACzD+C,aAActC,EAAKuC,OAASvC,EAAKuC,MAAL,QAC5BC,WAAYxC,EAAKuC,OAASvC,EAAKuC,MAAL,MAC1B3D,IAAKoB,EAAKpB,IACV6D,KAAMzC,EAAKyC,KACXE,KAAM3C,EAAK2C,KACXE,MAAO7C,EAAK6C,MACZH,QAAS1C,EAAK0C,QACdH,MACES,SAAShD,EAAKuC,MAAL,OAAuBS,SAAShD,EAAKuC,MAAL,SACrCvC,EAAKuC,MAAL,MACAvC,EAAKuC,MAAL,QACNrC,SACGF,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACqF,GACjB,MAAO,CACLnE,GAAImE,EAAIlE,IACR3C,KAAM6G,EAAI7G,KACV+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB6D,EAAI9D,MAAQ8D,EAAI9D,MAAMgB,UAAY8C,EAAI9D,MAAMgB,SAAW,SAI3FxB,EAAKE,SACP4C,MACE9C,EAAK8C,OAAStE,OAAOC,KAAKuB,EAAK8C,OAAOpE,OAAS,EAC3C,CACAyB,GAAIH,EAAK8C,MAAM1C,IACf3C,KAAMuC,EAAK8C,MAAMrF,KACjB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAK8C,MAAMtC,MACrCR,EAAK8C,MAAMtC,MAAMgB,UAAYxB,EAAK8C,MAAMtC,MAAMgB,SAC9C,KAGJxB,EAAK8C,MACX6E,gBACE3H,EAAK2H,iBAAmBnJ,OAAOC,KAAKuB,EAAK2H,iBAAiBjJ,OAAS,EAC/D,CACAyB,GAAIH,EAAK2H,gBAAgBvH,IACzB3C,KAAMuC,EAAK2H,gBAAgBlK,KAC3B+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAK2H,gBAAgBnH,MAC/CR,EAAK2H,gBAAgBnH,MAAMgB,UAC7BxB,EAAK2H,gBAAgBnH,MAAMgB,SACzB,KAGJxB,EAAK2H,gBACX5E,KAAM/C,EAAK+C,MAAQ/C,EAAK+C,KAAKrE,OAAS,EAAIsB,EAAK+C,KAAO,GACtD0E,eAAgBzH,EAAKyH,eACrBjH,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKQ,MAAQR,EAAKQ,MAAMgB,UAAYxB,EAAKQ,MAAMgB,SAAW,IAExFrB,GAAIH,EAAKQ,MAAQR,EAAKQ,MAAMJ,IAAM,IAEpCQ,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,MAEJ,G,kBAEKiB,G,+KASWpC,G,0EACZoC,EAAgBpC,IAElBA,GAAQA,EAAKwD,SAAWhF,OAAOC,KAAKuB,EAAKwD,SAAS9E,OAAS,G,wDAExDsB,EAAKwD,Q,CACRrD,GAAIH,EAAKwD,QAAQpD,KAAOJ,EAAKwD,QAAQrD,IAAM,GAC3C1C,KAAMuC,EAAKwD,QAAQ/F,MAAQ,GAC3B4C,YAAaL,EAAKwD,QAAQnD,YAAYd,QAAQ,WAAY,KAAO,GACjE+C,aAActC,EAAKwD,QAAQjB,OAASvC,EAAKwD,QAAQjB,MAAb,QACpCC,WAAYxC,EAAKwD,QAAQjB,OAASvC,EAAKwD,QAAQjB,MAAb,MAClC3D,IAAKoB,EAAKwD,QAAQ5E,IAClB6I,eAAgBzH,EAAKwD,QAAQiE,eAC7BC,aAAc1H,EAAKwD,QAAQkE,aAC3BjF,KAAMzC,EAAKwD,QAAQf,KACnBE,KAAM3C,EAAKwD,QAAQb,KACnBE,MAAO7C,EAAKwD,QAAQX,MACpBC,MACE9C,EAAKwD,QAAQV,OAAStE,OAAOC,KAAKuB,EAAKwD,QAAQV,OAAOpE,OAAS,EAC3D,CACAyB,GAAIH,EAAKwD,QAAQV,MAAM3C,GACvB1C,KAAMuC,EAAKwD,QAAQV,MAAMrF,MAEzB,GACN8E,MACES,SAAShD,EAAKwD,QAAQjB,MAAb,OACPS,SAAShD,EAAKwD,QAAQjB,MAAb,SACPvC,EAAKwD,QAAQjB,MAAb,MACAvC,EAAKwD,QAAQjB,MAAb,QACNG,QAAS1C,EAAKwD,QAAQd,QACtBxC,SACGF,EAAKwD,QAAQtD,UACZF,EAAKwD,QAAQtD,SAASxB,OAAS,GAC/BsB,EAAKwD,QAAQtD,SAASjB,KAAI,SAACqF,GACzB,MAAO,CACLnE,GAAImE,EAAIlE,IACR3C,KAAM6G,EAAI7G,UAGhBuC,EAAKwD,QAAQtD,SACf6C,KACE/C,EAAKwD,QAAQT,MAAQ/C,EAAKwD,QAAQT,KAAKrE,OAAS,EAC5CsB,EAAKwD,QAAQT,KACb,GAENvC,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKwD,QAAQhD,MACvCR,EAAKwD,QAAQhD,MAAMgB,UAAYxB,EAAKwD,QAAQhD,MAAMgB,SAClD,IAEJrB,GAAIH,EAAKwD,QAAQhD,MAAQR,EAAKwD,QAAQhD,MAAMJ,IAAM,IAEpDQ,MACGZ,EAAKwD,QAAQ5C,OACZZ,EAAKwD,QAAQ5C,MAAMlC,OAAS,GAC5BsB,EAAKwD,QAAQ5C,MAAM3B,KAAI,SAAC4B,GACtB,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFsC,OAAQ,Q,gCAILrB,G,4KASQpC,G,0EACToC,EAAgBpC,IAElBA,GAAQA,EAAKwD,SAAWxD,EAAKwD,QAAQ,I,uBACvCrE,QAAQC,IAAI,aAAcY,EAAKwD,S,iCAE1BxD,EAAKwD,QAAQ,G,CAChBrD,GAAIH,EAAKwD,QAAQ,GAAGpD,KAAOJ,EAAKwD,QAAQ,GAAGrD,IAAM,GACjD1C,KAAMuC,EAAKwD,QAAQ,GAAG/F,MAAQ,GAC9BmB,IAAKoB,EAAKwD,QAAQ,GAAG5E,IACrBsB,SAAUF,EAAKwD,QAAQ,GAAGtD,SAC1B6C,KACE/C,EAAKwD,QAAQ,GAAGT,MAAQ/C,EAAKwD,QAAQ,GAAGT,KAAKrE,OAAS,EAClDsB,EAAKwD,QAAQ,GAAGT,KAChB,GAENvC,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKwD,QAAQ,GAAGhD,MAC1CR,EAAKwD,QAAQ,GAAGhD,MAAMgB,UAAYxB,EAAKwD,QAAQ,GAAGhD,MAAMgB,SACxD,IAEJrB,GAAIH,EAAKwD,QAAQ,GAAGhD,MAAQR,EAAKwD,QAAQ,GAAGhD,MAAMJ,IAAM,IAE1DQ,MACGZ,EAAKwD,QAAQ,GAAG5C,OACfZ,EAAKwD,QAAQ,GAAG5C,MAAMlC,OAAS,GAC/BsB,EAAKwD,QAAQ,GAAG5C,MAAM3B,KAAI,SAAC4B,GACzB,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFsC,OAAQ,Q,gCAILrB,G,iLASapC,G,0EACdoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,kLAYcpC,G,8EACfoC,EAAgBpC,E,kBACfoC,G,oLAWgBpC,G,0EACjBoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,yLAUqBpC,G,0EACtBoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,wLASoBpC,G,0EACrBoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,2KASOpC,G,0EACRoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,kLAScpC,G,0EACfoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,4KASQpC,G,0EACToC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,6KASSpC,G,0EACVoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,IAElBA,GAAQxB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhCsB,E,CACHyD,OAAQ,Q,gCAILrB,G,gLASYpC,G,0EACboC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,gLASYpC,G,0EACboC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,6KASSpC,G,0EACVoC,EAAgBpC,IAElBA,GAAQxB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhC0D,E,CACHqB,OAAQ,Q,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,GAElBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAILrB,G,+KASWpC,G,0EACZoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,+KASWpC,G,0EACZoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,oLASgBpC,G,0EACjBoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,4KASQpC,G,0EACToC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,4KASQpC,G,6EACToC,EAAgBpC,IACDxB,OAAOC,KAAK2D,GAAe1D,OAAS,G,wDAElD0D,E,CACHjC,GAAIiC,EAAchC,IAClBI,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB2B,EAAc5B,MACxC4B,EAAc5B,MAAMgB,UAAYY,EAAc5B,MAAMgB,SACpD,IAEJrB,GAAIiC,EAAc5B,MAAQ4B,EAAc5B,MAAMJ,IAAM,O,gCAInDgC,G,mLASepC,G,0EAChBoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,wDAEVxG,E,CACHyD,OAAQ,Q,gCAILrB,G,+KASWpC,G,0EACZoC,EAAgBpC,GAClBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CAER/F,KAAMuC,EAAKwD,QAAQ/F,MAAQuC,EAAKwD,QAAQ/F,KACxC4C,YAAaL,EAAKwD,QAAQnD,aAAeL,EAAKwD,QAAQnD,YACtDoD,OAAQ,Q,gCAILrB,G,+KASWpC,G,0EACZoC,EAAgBpC,IAClBA,GAAQxB,OAAOC,KAAK2D,GAAe1D,OAAS,G,wDAEzCsB,E,CACHyD,OAAQ,Q,gCAILrB,G,wLASoBpC,G,0EACrBoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,4KASQpC,G,0EACToC,EAAgBpC,GAClBA,IAAQA,EAAKyG,I,yCACR,CACLhD,OAAQ,O,gCAILrB,G,wKASIpC,G,0EACLoC,EAAgBpC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACRyD,OAAQ,Q,gCAILrB,G,4KASQpC,G,0EACToC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,0KASMpC,G,0EACPoC,EAAgBpC,IAClBA,GAAQA,EAAK4H,UAAY5H,EAAK4H,U,wDAE3B5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,sLASkBpC,G,0EACnBoC,EAAgBpC,IAClBA,GAAQA,GAAQA,EAAK,I,wDAElBA,EAAK,G,CACRyD,OAAQ,Q,gCAILrB,G,iLASarC,G,gFACdC,EAAOD,EAAQC,MAAQ,GAEvBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,Q,kBAInBgC,G,uLASmBrC,G,6EACpBC,EAAOD,GAAW,KAEZvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhCsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChByH,MACE7H,EAAK6H,OAAS7H,EAAK6H,MAAMnJ,OAAS,EAC9BsB,EAAK6H,MAAM5I,KAAI,SAAC0H,GAChB,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBlC,IAAKyI,EAASvG,KAAO,GACrB2E,UAAW4B,EAAS5B,WAAa,GACjCC,SAAU2B,EAAS3B,UAAY,GAC/BvH,KAAMkJ,EAAS5B,UAAY,IAAM4B,EAAS3B,SAC1CC,QAAS0B,EAAS1B,SAAW,GAC7BC,KAAMyB,EAASzB,MAAQ,GACvBC,MAAOwB,EAASxB,OAAS,GACzBC,MAAOuB,EAASvB,OAAS,GACzB0B,QAASH,EAASG,SAAW,QAG/B,M,gCAEI,I,6KASE9G,G,6EACVoC,EAAgBpC,IACDxB,OAAOC,KAAK2D,GAAe1D,OAAS,G,wDAElD0D,E,CACHjC,GAAIiC,EAAchC,KAAO,GACzBlC,IAAKkE,EAAchC,KAAO,GAC1B2E,UAAW3C,EAAc2C,WAAa,GACtCC,SAAU5C,EAAc4C,UAAY,GACpCvH,KAAM2E,EAAc2C,UAAY,IAAM3C,EAAc4C,SACpDC,QAAS7C,EAAc6C,SAAW,GAClCC,KAAM9C,EAAc8C,MAAQ,GAC5BC,MAAO/C,EAAc+C,OAAS,GAC9BC,MAAOhD,EAAcgD,OAAS,GAC9B0B,QAAS1E,EAAc0E,SAAW,M,gCAI/B1E,G,+KASWpC,G,6EACZoC,EAAgBpC,IACDxB,OAAOC,KAAK2D,GAAe1D,OAAS,G,wDAElD0D,E,CACHjC,GAAIiC,EAAchC,KAAO,GACzBlC,IAAKkE,EAAchC,KAAO,M,gCAIvBgC,G,+KASWpC,G,0EACZoC,EAAgBpC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACRyD,OAAQ,Q,gCAILrB,G,iLASapC,G,0EACdoC,EAAgBpC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACRQ,MAAOR,EAAK,GAAGQ,MAAR,UACAC,EAAM,SADN,OACoBT,EAAK,GAAGQ,MAAQR,EAAK,GAAGQ,MAAME,UAAY,IAEjE,GACJ+C,OAAQ,Q,gCAILrB,G,oLASgBpC,G,0EACjBoC,EAAgBpC,GAClBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAI,Q,CACPQ,MAAOR,EAAI,QAAYQ,MAAhB,UACAC,EAAM,SADN,OACoBT,EAAI,QAAYQ,MAAQR,EAAI,QAAYQ,MAAME,UAAY,IAEjF,GACJ+C,OAAQ,Q,gCAILrB,G,gLASYrC,G,gFAGbqC,GAFApC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACkH,GACR,OAAO,eACFA,EADL,CAEEhG,GAAIgG,EAAI/F,KAAO,GACflC,IAAKiI,EAAI/F,KAAO,GAChB3C,KAAM0I,EAAI1I,MAAQ0I,EAAI1I,U,kBAIrB2E,G,6KASSrC,G,gFACVC,EAAOD,EAAQC,MAAQ,GAE7Bb,QAAQC,IAAI,cAAeY,GACrBoC,EACJpC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACkH,GACR,OAAO,eACFA,EADL,CAEEhG,GAAIgG,EAAI/F,KAAO,GACflC,IAAKiI,EAAI/F,KAAO,GAChB0H,MAAO3B,EAAI2B,OAAS3B,EAAI2B,MACxB9B,OAAQG,EAAIH,QAAUG,EAAIH,Y,kBAIzB5D,G,2KASOpC,G,0EACRoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,6KAUSpC,G,0EACVoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,KACRjD,MAAOR,EAAK4H,SAAS,GAAGpH,MAAjB,UACAC,EAAM,SADN,OACoBT,EAAK4H,SAAS,GAAGpH,MAAQR,EAAK4H,SAAS,GAAGpH,MAAME,UAAY,IAEnF,M,gCAID0B,G,iLASapC,G,0EACdoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,4KAUQpC,G,0EACToC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,KACRjD,MAAOR,EAAK4H,SAAS,GAAGpH,MAAjB,UACAC,EAAM,SADN,OACoBT,EAAK4H,SAAS,GAAGpH,MAAQR,EAAK4H,SAAS,GAAGpH,MAAME,UAAY,IAEnF,M,gCAID0B,G,yKAUKpC,G,0EACNoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,KACRjD,MAAOR,EAAK4H,SAAS,GAAGpH,MAAjB,UACAC,EAAM,SADN,OACoBT,EAAK4H,SAAS,GAAGpH,MAAQR,EAAK4H,SAAS,GAAGpH,MAAME,UAAY,IAEnF,M,gCAGD0B,G,8KAUUpC,G,0EACXoC,EAAgBpC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACRyD,OAAQ,Q,gCAGLrB,G,iLAUapC,G,0EACdoC,EAAgBpC,GAClBA,IAAQA,EAAI,Q,wDAETA,EAAI,Q,CACPyD,OAAQ,Q,gCAGLrB,G,iLAUapC,G,0EACdoC,EAAgBpC,GAClBA,IAAQA,EAAKwD,Q,wDAEVxD,EAAKwD,Q,CACRC,OAAQ,Q,gCAGLrB,G,4KAUQpC,G,0EACToC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAGLrB,G,0KAUMpC,G,0EACPoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAGLrB,G,8KAUUpC,G,8EACXoC,EAAgBpC,E,kBACfoC,G,0KASMpC,G,0EACPoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,wDAEVxG,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,+KASWpC,G,0EACZoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,oLASgBpC,G,0EACjBoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,iLASapC,G,0EACdoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,yKASKpC,G,0EACNoC,EAAgBpC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACRyD,OAAQ,Q,gCAILrB,G,0KASMpC,G,0EACPoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,KACRjD,MAAOR,EAAK4H,SAAS,GAAGpH,MAAjB,UACAC,EAAM,SADN,OACoBT,EAAK4H,SAAS,GAAGpH,MAAQR,EAAK4H,SAAS,GAAGpH,MAAME,UAAY,IAEnF,M,gCAID0B,G,8KAQUpC,G,0EACXoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,6KASSpC,G,0EACVoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,2KASOpC,G,0EACRoC,EAAgBpC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBnE,OAAQ,Q,gCAILrB,G,2KASOpC,G,0EACRoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,kLAScpC,G,0EACfoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,wKASIpC,G,0EACLoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,6KASSpC,G,0EACVoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,6KASSpC,G,0EACVoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,gLASYpC,G,0EACboC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,6KASSpC,G,0EACVoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,iLASapC,G,0EACdoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,6KASSpC,G,0EACVoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,gLASYpC,G,0EACboC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,8KASUpC,G,0EACXoC,EAAgBpC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL/C,OAAQ,O,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRoC,G,4KASQrC,G,0EACTqC,EAAgBrC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRoC,G,oLASgBrC,G,0EACjBqC,EAAgBrC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRoC,G,oLASgBpC,G,qEACnBA,EAAI,Q,yCACC,CACLyD,OAAQ,O,gCAILzD,G,+KASWA,G,qEACdA,EAAI,Q,wDAEDA,EAAI,Q,CACPyD,OAAQ,Q,gCAILzD,G,uLASmBA,G,sEACtBA,GAAQxB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhCsB,E,CACHyD,OAAQ,Q,gCAILzD,G,qLASiBA,G,qEACpBA,EAAI,Q,wDAEDA,EAAI,Q,CACPyD,OAAQ,Q,gCAILzD,G,uLASmBA,G,qEACtBA,EAAI,Q,yCACC,CACLyD,OAAQ,O,gCAILzD,G,uLASmBD,G,0EACpBqC,EAAgBrC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRoC,G,gLASYpC,G,8EACboC,E,eACDpC,E,CACHG,GAAIH,EAAKG,IAAMH,EAAKI,KAAO,GAC3B3C,KAAMuC,EAAKvC,MAAQuC,EAAKvC,KACxB4C,YAAaL,EAAKK,aAAeL,EAAKK,YACtCC,aAAcN,EAAKM,cAAgB,EACnCK,KAAMX,EAAKW,KAAL,UAAeF,EAAM,SAArB,OAAmCT,EAAKW,MAAS,GACvDD,UAAWV,EAAKU,UAAL,UAAoBD,EAAM,SAA1B,OAAwCT,EAAKU,WAAc,KACtExD,KACE8C,EAAKqB,YAAY3C,OAAS,GACxBsB,EAAKqB,YAAY,IACjBrB,EAAKqB,YAAY,GAAjB,KACE,eACA,iBACNzC,IAAKoB,EAAKpB,KAAO,GACjByC,YACErB,EAAKqB,YAAY3C,OAAS,GACxBsB,EAAKqB,YAAY,IACjBrB,EAAKqB,YAAY,GAAjB,KACErB,EAAKqB,YAAYpC,KAAI,SAACsC,GACtB,MAAO,CACLpB,GAAIoB,EAAOnB,KAAO,GAClB3C,KAAM8D,EAAO9D,MAAQ8D,EAAO9D,KAC5B4C,YAAakB,EAAOlB,aAAekB,EAAOlB,YAC1CG,MAAOe,EAAOf,MAAP,UACAC,EAAM,SADN,OACoBc,EAAOf,MAAMM,QACpC,OAGN,GACNN,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAKQ,MAAQR,EAAKQ,MAAMgB,UAAYxB,EAAKQ,MAAMgB,SAAW,IAExFrB,GAAIH,EAAKQ,MAAQR,EAAKQ,MAAMJ,IAAM,IAEpCQ,MACGZ,EAAKY,OACJZ,EAAKY,MAAMlC,OAAS,GACpBsB,EAAKY,MAAM3B,KAAI,SAAC4B,GACd,MAAO,CACLV,GAAIU,EAAIT,KAAO,GACf3C,KAAMoD,EAAIpD,MAAQoD,EAAIpD,KACtB+C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIC,QAClCC,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,K,kBAGGiB,G,6KAQSpC,G,8EAGVC,E,eACDD,G,kBAGEC,G,mLASeD,G,sEAGlBA,GAAQA,EAAKtB,OAAS,G,sDAEtB+E,OAAQ,MACLzD,EAAK,K,gCAEE,I,2KAUAD,G,0FAEPA,G,6KASSA,G,0FAGTA,G,6KASSC,G,4EAEV+H,EAAQ/H,EAAK+H,QAAS,G,wDAGrBA,E,CACH5H,GAAI4H,EAAM5H,IAAM4H,EAAM3H,IACtB4H,gBAAiBD,EAAMC,gBACvBvK,KACEsK,EAAMC,gBAAN,UACA,IACAD,EAAMC,gBAAN,SACF/C,QAAS8C,EAAMC,gBAAN,QACT9C,KAAM6C,EAAMC,gBAAN,KACNlB,QAASiB,EAAMC,gBAAN,QACT5C,MAAO2C,EAAMC,gBAAN,MACP7C,MAAO4C,EAAMC,gBAAN,MACPC,UAAWF,EAAME,WAAa,GAC9BxE,OAC0B,kBAAjBsE,EAAMtE,OACTsE,EAAMtE,OACNsE,EAAMtE,QAAUjF,OAAOC,KAAKsJ,EAAMtE,QAAQ/E,OAAS,EACjDqJ,EAAMtE,OAAN,KACA,UACRG,MAAOmE,EAAMG,WACbC,eAAgBJ,EAAMG,WACtBE,eAAgBL,EAAMK,eACtBC,aAAcN,EAAMK,gBAAkBL,EAAMK,eAAN,KACtCE,uBACEP,EAAMK,gBAAkBL,EAAMK,eAAN,eAC1BG,oBACER,EAAMK,gBAAkBL,EAAMK,eAAN,YAC1BzD,SACEoD,EAAMpD,UAAYoD,EAAMpD,SAASjG,OAAS,EACtCqJ,EAAMpD,SAAS1F,KAAI,SAACoD,GACpB,OAAO,eACFA,EADL,CAEElC,GAAIkC,EAAQjC,KAAO,GACnB3C,KAAM4E,EAAQ5E,MAAQ4E,EAAQ5E,KAC9B4C,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAE/E8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B3D,IAAKyD,EAAQzD,IACb6D,KAAMJ,EAAQI,KACdvC,SAAUmC,EAAQnC,SAClBwC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MAAOF,EAAQE,MACfU,UACEZ,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,gBACE,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQhE,OAAS,EACxC2D,EAAQK,QAAQ,GAAhB,OACFL,EAAQK,QAAQ,GAAhB,cACE,OAGR,GACN8F,aAAcT,EAAMhH,MACpB0H,cAAeV,EAAK,QAAL,cACfW,cAAeX,EAAK,QAAL,OACfY,QAASZ,EAAK,QACda,WAAYb,EAAK,SAAeA,EAAK,SAAL,IAA2B,M,gCAEjD,I,wKASH/H,G,0FACJ,CACLyD,OAAQ,O,wKAUCzD,G,qEACPA,EAAI,I,yCACC,CACLyD,OAAQ,O,iCAIL,G,uKASGzD,G,qEACNA,EAAI,I,yCACC,CACLyD,OAAQ,O,iCAIL,G,mLASezD,G,0FACfA,G,wLASoBA,G,8EAIrBC,E,eACDD,G,kBAGEC,G,2LASuBD,G,8EACxBC,E,eACDD,G,kBAGEC,G,yLASqBD,G,8EACtBC,E,eACDD,G,kBAGEC,G,iLASaD,G,8EACdC,E,eACDD,G,kBAGEC,G,+KASWD,G,8EACZC,E,eACDD,G,kBAGEC,G,qLASiBD,G,8EAIlBoC,E,eACDpC,G,kBAGEoC,G,2LASuBpC,G,8EAIxBoC,EAAgB,CACpBqB,OAAQ,M,kBAGHrB,G,gLASYpC,G,qEACfA,EAAI,Q,yCACC,CACLyD,OAAQ,O,gCAILzD,G,oLASgBA,G,qEACnBA,EAAI,Q,yCACC,CACLyD,OAAQ,O,gCAGLzD,G,kLAScA,G,qEACjBA,EAAI,Q,yCACC,CACLyD,OAAQ,O,gCAGLzD,G,sLASkBD,G,kFACnBC,EAAOD,EAAQC,MAAQ,GACvB2D,EAAS5D,EAAQmC,KAAKC,KAmB5BC,EAAgB,CACdpC,KAlBEoC,EACDpC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IAAMV,EAAKW,IACpByI,eAAgBpJ,EAAKoJ,eACrBpF,OAAQhE,EAAKgE,OACbG,MAAOnE,EAAKyI,WACZvD,SAAUlF,EAAKkF,SACf6D,aAAc/I,EAAKkD,KACnB8F,cAAehJ,EAAI,QAAJ,cACfmJ,WAAYnJ,EAAKkH,SAAL,UAGlB,GAIAhD,U,kBAGKvB,G,2KASOrC,G,gFACRC,EAAOD,EAAQC,MAAQ,GAG7Bb,QAAQC,IAAI,gBAAiBY,GAEzBoC,EACDpC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IAAMV,EAAKW,IACpB4H,gBAAiBvI,EAAKoJ,eACtBZ,UAAWxI,EAAKwI,WAAa,GAC7BxK,KACEgC,EAAKuI,iBACLvI,EAAKuI,gBAAL,WACAvI,EAAKuI,gBAAL,UAAoC,IAAMvI,EAAKuI,iBAC/CvI,EAAKuI,gBAAL,UACAvI,EAAKuI,gBAAL,SACF/C,QACExF,EAAKuI,iBACLvI,EAAKuI,gBAAL,SACAvI,EAAKuI,gBAAL,QACF9C,KACEzF,EAAKuI,iBACLvI,EAAKuI,gBAAL,MACAvI,EAAKuI,gBAAL,KACFvE,OACyB,kBAAhBhE,EAAKgE,OACRhE,EAAKgE,OACLhE,EAAKgE,QAAUjF,OAAOC,KAAKgB,EAAKgE,QAAQ/E,OAAS,EAC/Ce,EAAKgE,OAAL,KACA,UACRG,MAAOnE,EAAKyI,WACZvD,SAAUlF,EAAKkF,SACf6D,aAAc/I,EAAKsB,MACnB0H,cAAehJ,EAAI,SAAeA,EAAI,QAAJ,cAClCiJ,cAAejJ,EAAI,SAAeA,EAAI,QAAJ,OAClCkJ,QAASlJ,EAAI,QACbmJ,WAAYnJ,EAAI,SAAeA,EAAI,SAAJ,IAA0B,GACzD4I,aACE5I,EAAK2I,gBAAkB5J,OAAOC,KAAKgB,EAAK2I,gBAAgB1J,OAAS,EAAjE,UACOe,EAAK2I,eAAL,MACH,SAGZ,G,kBAOKhG,G,iLASarC,G,gFACdC,EAAOD,EAAQC,MAAQ,GAG7Bb,QAAQC,IAAI,gBAAiBY,GAEzBoC,EACDpC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IAAMV,EAAKW,IACpB4H,gBAAiBvI,EAAKoJ,eACtBZ,UAAWxI,EAAKwI,WAAa,GAC7BxK,KACEgC,EAAKuI,iBACLvI,EAAKuI,gBAAL,WACAvI,EAAKuI,gBAAL,UAAoC,IAAMvI,EAAKuI,iBAC/CvI,EAAKuI,gBAAL,UACAvI,EAAKuI,gBAAL,SACF/C,QACExF,EAAKuI,iBACLvI,EAAKuI,gBAAL,SACAvI,EAAKuI,gBAAL,QACF9C,KACEzF,EAAKuI,iBACLvI,EAAKuI,gBAAL,MACAvI,EAAKuI,gBAAL,KACFvE,OACyB,kBAAhBhE,EAAKgE,OACRhE,EAAKgE,OACLhE,EAAKgE,QAAUjF,OAAOC,KAAKgB,EAAKgE,QAAQ/E,OAAS,EAC/Ce,EAAKgE,OAAL,KACA,UACRG,MAAOnE,EAAKyI,WACZvD,SAAUlF,EAAKkF,SACf6D,aAAc/I,EAAKsB,MACnB0H,cAAehJ,EAAI,SAAeA,EAAI,QAAJ,cAClCiJ,cAAejJ,EAAI,SAAeA,EAAI,QAAJ,OAClCkJ,QAASlJ,EAAI,QACbmJ,WAAYnJ,EAAI,SAAeA,EAAI,SAAJ,IAA0B,SAG/D,G,kBAOK2C,G,sLASkBrC,G,gFACnBC,EAAOD,EAAQC,MAAQ,GAGzBoC,EACDpC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,MAAO,CACLU,GAAIV,EAAKU,IAAMV,EAAKW,IACpB6H,UAAWxI,EAAKwI,WAAa,GAC7BD,gBAAiBvI,EAAKoJ,eACtBpF,OACyB,kBAAhBhE,EAAKgE,OACRhE,EAAKgE,OACLhE,EAAKgE,QAAUjF,OAAOC,KAAKgB,EAAKgE,QAAQ/E,OAAS,EAC/Ce,EAAKgE,OAAL,KACA,UACRhG,KACEgC,EAAKuI,iBACLvI,EAAKuI,gBAAL,WACAvI,EAAKuI,gBAAL,UAAoC,IAAMvI,EAAKuI,iBAC/CvI,EAAKuI,gBAAL,UACAvI,EAAKuI,gBAAL,SACF/C,QACExF,EAAKuI,iBACLvI,EAAKuI,gBAAL,SACAvI,EAAKuI,gBAAL,QACF9C,KACEzF,EAAKuI,iBACLvI,EAAKuI,gBAAL,MACAvI,EAAKuI,gBAAL,KACFpE,MAAOnE,EAAKyI,WACZvD,SAAUlF,EAAKkF,SACf6D,aAAc/I,EAAKsB,MACnB0H,cAAehJ,EAAI,SAAeA,EAAI,QAAJ,cAClCiJ,cAAejJ,EAAI,SAAeA,EAAI,QAAJ,OAClCkJ,QAASlJ,EAAI,QACbmJ,WAAYnJ,EAAI,SAAeA,EAAI,SAAJ,IAA0B,GACzD4I,aACE5I,EAAK2I,gBAAkB5J,OAAOC,KAAKgB,EAAK2I,gBAAgB1J,OAAS,EAAjE,UACOe,EAAK2I,eAAL,MACH,QAGZ,G,kBAOKhG,G,mLASepC,G,gFAElB8I,EAAgBC,EAAQtI,EAAM,QAAd,kBAEd2B,EACHpC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFqJ,EADL,CAEE3I,GAAIV,EAAKU,GACTsD,OAAQhE,EAAKgE,OACbG,MAAOnE,EAAKmE,MACZoF,WAAYvJ,EAAKuJ,WACjBR,aAAc/I,EAAK+I,mBAGzB,G,kBAEKpG,G,yKAUKpC,G,gFACNiJ,EAAejJ,EAAKoD,OACR1E,OAAS,G,yCAClBuK,G,cAGH7F,EAAQ6F,EAAahK,KAAI,SAACQ,GAC9B,MAAO,CACLhC,KAAMgC,EAAKhC,MAAQ,GACnByL,OAAQzJ,EAAKuC,MAAQ,O,kBAGlBoB,G,yKASKpD,G,0FACL,CACLgC,KAAMhC,EAAKgC,O,sKAUJhC,G,8EACHmJ,EACJnJ,EAAKY,OAASZ,EAAKY,MAAMlC,OAAS,EAAlC,UACO+B,EAAM,SADb,OAC2BT,EAAKY,MAAM,GAAX,UACvB,G,kBACC,CACLuI,MACAC,OAAQpJ,EAAKoJ,S,yKAUHpJ,G,0FACL,CACLgC,KAAMhC,EAAKgC,O,0KAUAhC,G,gFACPqJ,EAAerJ,EAAKoD,OACR1E,OAAS,G,yCAClB,I,cAGH0E,EAAQiG,EAAapK,KAAI,SAACQ,GAC9B,MAAO,CACLuC,KAAMvC,EAAKhC,MAAQgC,EAAKuC,KACxBoH,OAAQ3J,EAAK2J,W,kBAIVhG,G,wKASIpD,G,gFACLsJ,EAActJ,EAAKoD,OACR1E,OAAS,G,yCACjB4K,G,cAGHC,EAASD,EAAYrK,KAAI,SAACQ,GAC9B,MAAO,CACL2J,OAAQ3J,EAAK2J,OACbD,IAAI,GAAD,OAAK1I,EAAM,SAAX,OAAyBhB,EAAKmB,MAAM,GAAX,Y,kBAGzB2I,G,6KASSvJ,G,gFACVwJ,EAAmBxJ,EAAKoD,OACR1E,OAAS,G,yCACtB8K,G,cAGHD,EAASC,EAAiBvK,KAAI,SAACQ,GACnC,MAAO,CACL2J,OAAQ3J,EAAK2J,OACbD,IAAI,GAAD,OAAK1I,EAAM,SAAX,OAAyBhB,EAAKmB,MAAM,GAAX,Y,kBAGzB2I,G,yKASKvJ,G,0FACL,CACLvC,KAAMuC,EAAKvC,KACXuE,KAAMhC,EAAKgC,O,uKAUHhC,G,gFACJyJ,EAAgBzJ,EAAKoD,OACR1E,OAAS,G,yCACnB+K,G,cAGHrG,EAAQqG,EAAcxK,KAAI,SAACQ,GAC/B,MAAO,CACL2J,OAAQ3J,EAAK2J,OACb3L,KAAMgC,EAAKhC,MAAQgC,EAAKuC,S,kBAGrBoB,G,yKASKpD,G,gFACN0J,EAAe1J,EAAKoD,OACR1E,OAAS,G,yCAClBgL,G,cAGHtG,EAAQsG,EAAazK,KAAI,SAACQ,GAC9B,MAAO,CACL2J,OAAQ3J,EAAK2J,OACb3L,KAAMgC,EAAKhC,MAAQgC,EAAKuC,S,kBAGrBoB,G,uGASH,W,wDAAWpD,G,gFACT2J,EAAe3J,EAAKoD,OACR1E,OAAS,G,yCAClBiL,G,cAGHvG,EAAQuG,EAAa1K,KAAI,SAACQ,GAC9B,MAAO,CACL2J,OAAQ3J,EAAK2J,OACb3L,KAAMgC,EAAKhC,MAAQgC,EAAKuC,S,kBAGrBoB,G,mLASepD,G,0FACfA,G,2KASOA,G,qEACVA,IAAQA,EAAK,G,sDAEbyD,OAAQ,MACLzD,EAAK,G,CACRQ,MAAOR,EAAK,GAAGQ,MAAR,UACAC,EAAM,SADN,OACoBT,EAAK,GAAGQ,MAAQR,EAAK,GAAGQ,MAAME,UAAY,IAEjE,M,gCAGD,I,2KASOV,G,qEACVA,IAAQA,EAAK,G,sDAEbyD,OAAQ,MACLzD,EAAK,G,CACRuC,MACES,SAAShD,EAAK,GAAGuC,MAAR,OAA0BS,SAAShD,EAAK,GAAGuC,MAAR,SACxCvC,EAAK,GAAGuC,MAAR,MACAvC,EAAK,GAAGuC,MAAR,QACN/B,MAAOR,EAAK,GAAGQ,MAAR,UACAC,EAAM,SADN,OACoBT,EAAK,GAAGQ,MAAQR,EAAK,GAAGQ,MAAME,UAAY,IAEjE,M,gCAGD,I,0GD9tJIkJ,E,WAnHb,aAAe,oBACbC,KAAKC,QAAU,G,6FAaHrK,G,UA2BHsK,EA0BAC,E,4FAAAA,E,SAAOpL,GACd,OAAIA,GAAsB,QAAfqL,EAAIC,OACNtL,EAAIS,SAAS,KAChBT,EAAM,qBACNA,EAAM,qBAELA,GAhCAmL,E,SAAclL,GACrB,GAAmB,QAAfoL,EAAIC,OAAkB,CAAC,IAAD,EACpBpL,EAAS,GAQb,OANI,OAACD,QAAD,IAACA,GAAD,UAACA,EAAYC,cAAb,aAAC,EAAoBqL,eACvBrL,EAAOqL,YAAc,MAGvBhL,QAAQC,IAAI,YAAaP,GAElB,eACDA,GAAU,eACTA,GAFP,CAIEC,OAAO,eACDD,GACFA,EAAWC,QADT,eAECD,EAAWC,QAHZ,GAKDA,KAIT,OAAOD,GAlDSuL,E,+BAAS,OAAQN,E,+BAAU,GACzCG,EAAMI,EAAO5J,EAAO6J,QAAQ7K,GAIhCoK,KAAKC,QAAL,eACKD,KAAKC,QADV,CAEEI,OAAQD,EAAIC,OACZK,YAAa,UACbC,QAAS,IAAIC,QAAJ,eACQ,SAAXL,GAAqB,CACvB,eAAgB,oBAFX,GAIHN,EAAQU,SAAR,eACCV,EAAQU,YAIA,SAAXJ,EACA,CACArG,KAAqB,QAAfkG,EAAIC,OAAmBQ,KAAKC,UAAUb,EAAQ/F,MAAQ,MAE5D,CACAA,KAAqB,QAAfkG,EAAIC,OAAmBJ,EAAQ/F,KAAO,OAyClD5E,QAAQC,IAAI,QAAS4K,EAAOC,EAAIrL,KAAMmL,EAAcD,EAAQjL,aAEtDD,EAAMgM,EACVZ,EAAOC,EAAIrL,KACXmL,EAAcD,EAAQjL,aAGxBM,QAAQC,IAAI,QAASR,GAGjB6B,EAAM,O,oBAKQoK,MAAMpK,EAAOqK,QAAUlM,EAAKiL,KAAKC,S,cAA7CiB,E,QAEItH,QAAU,KAAOsH,EAAItH,OAAS,K,kCACVsH,EAAG,O,WACA,WADzBC,E,QACcvH,O,uBACVuH,EAAcC,M,yBAGInL,EAAUL,GAAQ,IAAIuL,G,eAA5C5I,E,yBACGA,G,yBAEW2I,EAAG,O,oNE/FvBG,EAAY,IAAItB,EAEhBuB,EAAmB,SAACC,EAAeC,GACvC,OAAQA,EAAOnO,MACb,IAAK,aACH,OAAO,eACFkO,EADL,CAEEE,WAAW,EACXL,MAAO,CACL1N,SAAS,EACT0N,MAAO,IAETM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXtL,KAAMqL,EAAOG,QACbD,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXL,MAAO,CACL1N,SAAS,EACT0N,MAAOI,EAAOG,QACdD,MAAM,KAGZ,QACE,MAAM,IAAIE,QA+CDC,EA3CE,WAMH,IALZC,EAKW,uDALkB,GAC7BC,EAIW,uCAHXnM,EAGW,uCAFXqK,EAEW,uCADXM,EACW,uCACLyB,EAAuB,CAC3BP,WAAW,EACXL,MAAO,CACL1N,SAAS,EACT0N,MAAO,IAETjL,KAAM4L,EACNL,MAAM,GARG,EAUeO,qBAAWX,EAAkBU,GAV5C,mBAUJT,EAVI,KAUGW,EAVH,KAkCX,OAtBAC,qBAAU,WACR,IAAIC,GAAY,EAgBhB,OAfe,uCAAG,4BAAAC,EAAA,6DAChBH,EAAS,CAAE7O,KAAM,eADD,kBAIGgO,EAAUiB,QAAQ1M,EAAM2K,EAAQN,GAJnC,OAIV9J,EAJU,OAKTiM,GACHF,EAAS,CAAE7O,KAAM,gBAAiBsO,QAASxL,IAN/B,gDASTiM,GACHF,EAAS,CAAE7O,KAAM,gBAAiBsO,QAAQ,EAAD,KAV7B,yDAAH,oDAcfY,GACO,WACLH,GAAY,KAEbN,GAEIP,GC9EHF,EAAY,IAAItB,EAEhBuB,EAAmB,SAACC,EAAeC,GACvC,OAAQA,EAAOnO,MACb,IAAK,aACH,OAAO,eACFkO,EADL,CAEEE,WAAW,EACXL,MAAO,CACL1N,SAAS,EACT0N,MAAO,IAETM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXtL,KAAMqL,EAAOG,QACbD,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXL,MAAO,CACL1N,SAAS,EACT0N,MAAOI,EAAOG,SAEhBD,MAAM,IAEV,QACE,MAAM,IAAIE,QAsCDY,EAlCQ,SACrBT,EACAnM,EACA2K,GAEA,IAAMyB,EAAuB,CAC3BP,WAAW,EACXL,MAAO,CACL1N,SAAS,EACT0N,MAAO,IAETjL,KAAM4L,EACNL,MAAM,GAR4B,EAWVO,qBAAWX,EAAkBU,GAXnB,mBAW7BT,EAX6B,KAWtBW,EAXsB,KA2BpC,MAAO,CAACX,EAdQ,uCAAG,WAAOtB,GAAP,eAAAoC,EAAA,6DACjBH,EAAS,CAAE7O,KAAM,eADA,kBAKEgO,EAAUiB,QAAQ1M,EAAM2K,GAAU,OAAQN,GAL5C,cAKX9J,EALW,OAMf+L,EAAS,CAAE7O,KAAM,gBAAiBsO,QAASxL,IAN5B,kBAORA,GAPQ,uCASf+L,EAAS,CAAE7O,KAAM,gBAAiBsO,QAAQ,EAAD,KAT1B,kBAURI,GAVQ,yDAAH,wDCnEZV,GCDY,IAAItB,EDCJ,IAAIA,GA4EP0C,EAzDU,SACrB7M,EACAqK,EACA5L,GAEA,IAAMqO,EAAQC,cADL,EAEeC,mBAAS,GAFxB,mBAEFvK,EAFE,KAEIwK,EAFJ,KAIHC,EAAgBC,sBAAW,uCAAC,WAAOC,GAAP,iCAAAX,EAAA,6DAAUhK,EAAV,+BAAiB,EAC/C4H,EAAO,eACAA,EADA,CAEHjL,WAAW,eAAD,QAAC,EACJiL,SADG,aACH,EAASjL,WADN,CAENC,OAAO,eAAD,QAAC,EACAgL,SADD,iBACC,EAASjL,kBADV,aACC,EAAqBC,OADtB,CAEFgO,WAAY5K,QAPM,kBAWvBgJ,EAAUiB,QAAQ1M,EAAM,OAAQqK,IAXT,2CAAD,sDAY9B,IAhBM,EAmB4GiD,YACjH,CAAC7O,GAAOuB,EAAMyC,GACdyK,EACA,CACIK,MAAO,EACPC,sBAAsB,IALtB3B,EAnBC,EAmBDA,UAAW/N,EAnBV,EAmBUA,QAASyC,EAnBnB,EAmBmBA,KAAMiL,EAnBzB,EAmByBA,MAAOiC,EAnBhC,EAmBgCA,UAAWC,EAnB3C,EAmB2CA,WAAY1J,EAnBvD,EAmBuDA,OAAQ2J,EAnB/D,EAmB+DA,aAAcC,EAnB7E,EAmB6EA,WAAYC,EAnBzF,EAmByFA,eAmBlG,OARAtB,qBAAU,YAEN,OAAIqB,QAAJ,IAAIA,OAAJ,EAAIA,EAAYlL,OACZoK,EAAMgB,cAAc,CAACrP,GAAOuB,EAAMyC,EAAO,GAAIyK,KAElD,CAACU,EAAYV,EAAezK,IAGxB,CACHoJ,YACA/N,UACAyC,OACAiL,QACAiC,YACAC,aACA1J,SACA2J,eACAC,aACAX,UACAY,mBElEFE,EAAmBC,MAAaC,MAAM,CAC3CC,SAAUF,MACRxQ,MAAM,YACNF,SAAS,wBACTY,IAAI,EAAG,4CAETiQ,SAAUH,MAAaxQ,MAAM,YAAYF,SAAS,0BAG7C8Q,EAAgB,CACrBF,SAAU,GACVC,SAAU,ICpBIE,ED2BG,SAAC,GAAgB,qBACKzB,EAAe,GAAI,SADzB,mBAC1B0B,EAD0B,KACdC,EADc,KAG3BC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,SAAAjC,EAAA,sEACY8B,EAAiB,CAChDjK,KAAM,CACL4J,SAAUO,EAAOP,SACjBC,SAAUM,EAAON,YAJC,cAQpBO,EAAQC,eAAc,GARF,2CAAH,wDAcZC,EAA4B,SAACH,EAAQI,GAC1C,QAAKJ,EAAOP,UAAaO,EAAON,UAAaU,IAM9C,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,EAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,KAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,yBAAK5Q,MAAO,CACX6Q,SAAU,QACVC,OAAQ,SAER,kBAACrS,EAAD,CACCI,MAAM,WACNE,MAAO+Q,EAAOP,SACdlQ,KAAK,WACLF,QAAUsR,EAAQlB,UAAYgB,EAAOhB,WAClCiB,GAAgBb,EAAW9C,MAAX,eAEnBzN,YAAcqR,EAAQlB,UAAYgB,EAAOhB,WACtCiB,GAAgBb,EAAW9C,MAAX,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAACjS,EAAD,CACCI,MAAM,WACNE,MAAO+Q,EAAON,SACdnQ,KAAK,WACLF,QAAUsR,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBb,EAAW9C,MAAX,eACnBzN,YAAcqR,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBb,EAAW9C,MAAX,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAAC,IAAD,CACC5R,KAAK,UACLkS,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClC7R,SAAU+Q,EAA0BH,EAAQI,GAC5Ce,QAAST,EACTxQ,MAAO,IALR,e,oOE5GQ,YAAEyN,GAAF,OAAoB,SAAEyD,GAAF,OAAkB,WAAqC,IAAnClE,EAAkC,uDAA1BS,EAAcR,EAAY,uCAC/EkE,EAAUD,EAAYjE,EAAOnO,MACnC,OAAOqS,EAAUA,EAASnE,EAAOC,GAAWD,K,qBCAjC,YAACxM,EAAKsL,EAAQnG,GAC5B,IAAM+F,EAAU,CACfI,SACAM,QAoBM,CACNgF,OAAQ,mBACR,eAAgB,oBArBhBzL,KAAiB,QAAXmG,EAAmBQ,KAAKC,UAAU5G,GAAQ,MAGjD,OAAO0L,KAAgB7Q,EAAKkL,GAAS4F,MAAK,SAAA3E,GAAG,OAK9C,SAAqBtH,EAAQsH,GAC5B,OAAO,IAAI4E,SAAQ,SAACC,EAASC,GACxBpM,GAAU,KAAOA,EAAS,IAC7BsH,EAAI2E,MAAK,SAAAI,GAAQ,OAAIF,EAAQE,MAE7B/E,EAAI2E,MAAK,SAAAI,GAAQ,OAAID,EAAO,CAAEpM,SAAQqM,mBATvCC,CAAYhF,EAAItH,OAAQsH,EAAIiF,YCC9B,IAAMC,GAAcC,GAAc,GAAdA,CAAA,gBCXM,sBDYJ,SAAC9E,EAAOC,GAC1B,IAAM8E,EAAQ9E,EAAOG,QACrB,OAAO,aAAI2E,OEZFC,GAAY,SAACD,GAAD,MAAY,CACjCjT,KDHsB,qBCItBsO,QAAS2E,ICIEZ,GHUAU,GICTI,GAAW,SAACC,EAAMC,GACtB,SAAKA,IAAeA,EAAW,QAC3BA,EAAWlR,SAAS,eACjBkR,EAAWlR,SAASiR,KCwBIE,IAAUC,IAAnCC,OAAmCD,IAA3BE,QAA2BF,IAAlBG,OAAkBH,IAAVD,OACzBK,GAAYC,IAAZD,QA+MFE,GAAoB,CACxBX,UAAWY,EAAiBZ,WC9PfI,GDsQAS,aALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyBc,GAAzBE,EAtNQ,SAAC,GAAoB,IAAlBd,EAAiB,EAAjBA,MAAiB,EACP1D,oBAAS,GADF,mBAClCyE,EADkC,KACvBC,EADuB,KAOzC,OACE,kBAACX,GAAD,CACEY,MAAO,IACPxT,UAAU,qBACVQ,MAAO,CACLiT,UAAW,6BACXC,OAAQ,OACRC,UAAW,OACXC,UAAW,SACXC,OAAQ,sBACRC,SAAU,QACVC,IAAK,QAEPC,aAAW,EACXV,UAAWA,EACXW,WApBe,SAACX,GAElBC,EAAaD,IAmBXjK,MAAM,SAEN,kBAAC,IAAD,CAAM6K,YAAY,EAAMC,KAAK,UAC1B1B,GAAS,YAAaF,IACrB,kBAAC,IAAKtS,KAAN,CAAWK,IAAI,IAAIyC,KAAM,kBAACqR,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAMC,GAAG,UAAT,cAIH5B,GAAS,eAAgBF,IACxB,kBAACU,GAAD,CACE3S,IAAI,OACJyC,KAAM,kBAACuR,EAAA,EAAD,MACNlR,MAAM,WAGN,kBAAC,IAAKnD,KAAN,CAAW8C,KAAM,kBAACwR,EAAA,EAAD,MAAwBjU,IAAI,KAC3C,kBAAC,IAAD,CAAM+T,GAAG,kBAAT,aASF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,IAAIyC,KAAM,kBAACyR,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAMH,GAAG,cAAT,SAGF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,IAAIyC,KAAM,kBAAC0R,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAMJ,GAAG,mBAAT,eAGF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,IAAIyC,KAAM,kBAAC2R,GAAA,EAAD,OACvB,kBAAC,IAAD,CAAML,GAAG,gBAAT,WA8BN,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,OAAOyC,KAAM,kBAAC4R,GAAA,EAAD,OAC1B,kBAAC,IAAD,CAAMN,GAAG,iBAAT,WAGD5B,GAAS,cAAeF,IACvB,kBAAC,IAAKtS,KAAN,CAAWK,IAAI,KAAKyC,KAAM,kBAAC6R,GAAA,EAAD,OACxB,kBAAC,IAAD,CAAMP,GAAG,mBAAT,aAyBH5B,GAAS,WAAYF,IACpB,kBAACU,GAAD,CAAS3S,IAAI,OAAOyC,KAAM,kBAAC8R,GAAA,EAAD,MAA0BzR,MAAM,UACxD,kBAAC,IAAKnD,KAAN,CAAWK,IAAI,MACb,kBAAC,IAAD,CAAM+T,GAAG,gBAAT,gBAEF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,SACb,kBAAC,IAAD,CAAM+T,GAAG,yBAAT,oBAEF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,MACb,kBAAC,IAAD,CAAM+T,GAAG,oBAAT,eA2BN,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,KAAKyC,KAAM,kBAAC+R,GAAA,EAAD,OACxB,kBAAC,IAAD,CAAMT,GAAG,mBAAT,aAEF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,OAAOyC,KAAM,kBAACgS,GAAA,EAAD,OAC1B,kBAAC,IAAD,CAAMV,GAAG,gBAAT,UAEF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,MAAMyC,KAAM,kBAACiS,GAAA,EAAD,OACzB,kBAAC,IAAD,CAAMX,GAAG,cAAT,QAGD5B,GAAS,YAAaF,IACrB,kBAACU,GAAD,CAAS3S,IAAI,OAAOyC,KAAM,kBAACkS,GAAA,EAAD,MAAkB7R,MAAM,SAChD,kBAAC,IAAKnD,KAAN,CAAWK,IAAI,KAAKyC,KAAM,kBAACmS,GAAA,EAAD,OACxB,kBAAC,IAAD,CAAMb,GAAG,eAAT,gBAEF,kBAAC,IAAKpU,KAAN,CAAW8C,KAAM,kBAACoS,GAAA,EAAD,MAAqB7U,IAAI,MACxC,kBAAC,IAAD,CAAM+T,GAAG,mBAAT,mBAKN,kBAACpB,GAAD,CAAS3S,IAAI,OAAOyC,KAAM,kBAACqS,GAAA,EAAD,MAAqBhS,MAAM,YACnD,kBAAC,IAAKnD,KAAN,CAAW8C,KAAM,kBAAC+R,GAAA,EAAD,MAAkBxU,IAAI,MACrC,kBAAC,IAAD,CAAM+T,GAAG,4BAAT,qBAGF,kBAAC,IAAKpU,KAAN,CAAW8C,KAAM,kBAACsS,GAAA,EAAD,MAAqB/U,IAAI,SACxC,kBAAC,IAAD,CAAM+T,GAAG,0BAAT,WAGF,kBAAC,IAAKpU,KAAN,CAAWK,IAAI,KAAKyC,KAAM,kBAACuS,GAAA,EAAD,OACxB,kBAAC,IAAD,CAAMjB,GAAG,8BAAT,eAGF,kBAAC,IAAKpU,KAAN,CAAW8C,KAAM,kBAACwS,GAAA,EAAD,MAAsBjV,IAAI,MACzC,kBAAC,IAAD,CAAM+T,GAAG,0BAAT,iB,UE9OGmB,GCQQ,SAAC,GAGV,IAAD,IAFTpS,aAES,MAFD,gBAEC,MADTyQ,cACS,MADA,IACA,EACT,OACI,yBAAKrT,MAAO,CACRqT,OAAQA,EACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,CAAOlT,YAAaW,EAAOJ,MAAOwS,KAAMI,2B,yFCK5C9C,GAAWD,IAAXC,OCxBOA,GDsCS,SAAC+C,GACvB,IAAMC,EAAUC,eADwB,EAGuBtH,EAC7D,GACA,sBALsC,mBAGjCuH,EAHiC,KAGRC,EAHQ,OAUpCxH,EAAe,GAAI,0BAViB,mBAStCyH,GATsC,aAcpCzH,EAAe,GAAI,6BAdiB,mBAatC0H,GAbsC,aAgBQtH,mBAAS,IAhBjB,mBAgBjCuH,EAhBiC,KAgBfC,EAhBe,KAuBxCjI,qBAAU,YACgB,uCAAG,4BAAAE,EAAA,sEACP2H,EAA4B,CAC5ChV,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,KAChBhK,YAAa,QANM,QACnBY,EADmB,SAcvBkJ,EAAoBlJ,GAdG,2CAAH,qDAkBxBqJ,KACC,IAEH,IAAMC,EAAwB,uCAAG,WAAOlU,GAAP,SAAA+L,EAAA,sEACzB4H,EAAkC,CACtC/P,KAAM,CACJ5D,GAAI,CAACA,MAHsB,2CAAH,sDAQxBmU,EAA2B,uCAAG,4BAAApI,EAAA,sEAChB6H,EAAqC,IADrB,QAC5BhJ,EAD4B,SAGR,OAAfA,EAAItH,SAlEcgD,EAmEH,wBAlE5B8N,KAAa/N,QAAQ,CACnBgO,QAAS/N,GAAO,kBAChBpG,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAgEzCT,EAAoB,KALY,iCA/DN,IAACxN,IA+DK,OAAH,qDASjCtH,QAAQC,IAAI,0BAA2BwU,GAEvC,IAAMe,EAAW,CACfhO,SAAU,kBAAC+L,GAAA,EAAD,MACV3K,MAAO,kBAAC0K,GAAA,EAAD,OAsHT,OAFAtT,QAAQC,IAAI,mBAAoB4U,GAG9B,kBAAC,GAAD,CACE5V,MAAO,CACLwW,WAAY,OACZnD,OAAQ,OACR4B,QAAS,OACTC,eAAgB,gBAChBjC,UACE,qKACFwD,OAAQ,GACRC,WAAY,WACZvB,WAAY,SACZwB,aAAc,SACdrD,SAAU,QACVN,MAAO,SAGT,wBACEhC,QAAS,kBAAMsE,EAAQ7R,KAAK,WAC5BzD,MAAO,CACLsW,MAAO,UACPM,UAAW,OACXC,WAAY,QACZC,OAAQ,YANZ,SAYA,yBACE9W,MAAO,CACL+W,YAAa,UAGf,kBAAC,KAAD,CACEC,UAAU,aACVC,QAvJK,WACX,OAAIzB,EAAwBtI,UAExB,yBACElN,MAAO,CACLqT,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ+B,gBAAiB,OACjBC,QAAS,WAGX,kBAAC,KAAD,OAKJ3B,EAAwBrI,MACxByI,IACCA,EAAiB,GAGhB,yBACEpW,UAAU,gCACVQ,MAAO,CACLqT,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ+B,gBAAiB,OACjBC,QAAS,WAGX,kBAAC,GAAD,CAAOvU,MAAM,2BAKjB,yBAAK5C,MAAO,GAAIR,UAAU,iCACvBgW,EAAwBrI,MAAQyI,EAAiB,IAChD,yBAAK5V,MAAO,IACV,yBACEA,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,iBAGlB,uBACElE,QAAS,kBAAMkF,KACflW,MAAO,CACLoX,UAAW,SACXF,gBAAiB,UACjBC,QAAS,OACTnE,MAAO,MACPqE,SAAU,QAEZC,KAAK,MATP,aAaA,uBACEtG,QAAS,kBAAMsE,EAAQ7R,KAAK,wBAC5BzD,MAAO,CACLoX,UAAW,SACXF,gBAAiB,OACjBC,QAAS,OACTnE,MAAO,MACPqE,SAAU,QAEZC,KAAK,MATP,aAiBL9B,EAAwBrI,MACvByI,EAAiB,IACjBA,EAAiB/U,KAAI,SAACQ,EAAMkW,GAE1B,OADAxW,QAAQC,IAAI,mBAAoBK,GAE9B,yBACE2P,QAAS,WACPiF,EAAyB5U,EAAKW,KAC9BsT,EAAQ7R,KAAR,iBAAuBpC,EAAKvC,KAA5B,YAAoCuC,EAAKmW,WAE3ChY,UACG6B,EAAKmC,KAEF,sCADA,kFAIN,0BAAMhE,UAAU,4CACb+W,EAASlV,EAAI,OAEhB,yBAAK7B,UAAU,4CACb,4BAAK6B,EAAKsC,SACV,4BAAKtC,EAAKuC,MACV,4BACGvC,EAAKsB,OACJ8U,IAAOpW,EAAKsB,OAAOqJ,OAAO,iCAmDtC,uBACEhM,MAAO,CACL+W,YAAa,QAEfO,KAAK,MACL9X,UAAU,6BAEV,kBAAC,KAAD,CACEkY,cAAe,IAEfC,SAAUC,KACVnR,MACE+O,EAAwBrI,OAASyI,EAC7B,EACAA,GAAoBA,EAAiBtV,OACrCsV,EAAiBtV,OACjB,GAGN,0BACEN,MAAO,CACL6W,WAAY,OACZgB,WAAY,IACZ5X,aAAc,OACdqW,MAAO,UACPa,QAAS,WACTL,OAAQ,UACRC,YAAa,SAGf,kBAACe,GAAA,EAAD,UAMR,uBAAGR,KAAK,sBACN,0BACEtX,MAAO,CACL6W,WAAY,OACZgB,WAAY,IACZ5X,aAAc,OACdqW,MAAO,UACPa,QAAS,WACTL,OAAQ,YAGV,kBAACiB,GAAA,EAAD,MACA,0BACE/X,MAAO,CACL6W,WAAY,SAFhB,e,6BEzQJmB,GAAWC,KAAXD,OAEAE,GAAgBC,KAAhBD,YA0GFE,GAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAMSC,GAAyB,CAClCnF,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,oCAsPAqF,GAjOG,SAACjD,GAAkB,IAAD,EACgBhH,mBAAS,QADzB,mBACzBkK,EADyB,KACPC,EADO,OAECnK,mBAAS,IAFV,mBAEzBjI,EAFyB,KAEfqS,EAFe,OAGHpK,mBAAS,IAHN,mBAGzBhI,EAHyB,KAGjBqS,EAHiB,OASoCzK,EAAe,GAAI,iCATvD,mBASzB0K,EATyB,KASDC,EATC,OAYAvK,mBAAS,IAZT,mBAYzBwK,EAZyB,KAYfC,EAZe,KAchClL,qBAAU,YACyB,uCAAG,4BAAAE,EAAA,sEACG8K,EAAkC,CAC/DnY,WAAY,CACRC,OAAQ,CACJqY,WAAYR,EACZS,eAAgB5S,EAChB6S,aAAc5S,MANI,OACxB6S,EADwB,OAW/BnY,QAAQC,IAAI,iBAAiBkY,GAG1BA,GAEFJ,EAAYI,GAhBkB,2CAAH,qDAuB5BC,KAEL,CAACZ,EAAiBnS,EAAUC,IAG9BtF,QAAQC,IAAI,yBAAyB2X,GAKrC,IA6BMpU,EAAO,IAAI6U,KACXC,EAAYjB,GAAO7T,EAAK+U,YAsC9B,OACI,yBAAK9Z,UAAU,iCACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,qCAII,uDAMR,yBAAKA,UAAU,uDACf,kBAAC,KAAD,CACI+Z,UAAU,EACVC,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAAS/S,aAAc,MAAOqW,MAAO,WACrDpW,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAxCC,SAACF,GACdyZ,EAAoBzZ,IAwCRC,aAAcuZ,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IA3F/F,CACZ,CACI9a,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,YACPM,KAAM,eAEV,CACIN,MAAO,aACPM,KAAM,gBAET,CACGN,MAAO,QACPM,KAAM,SAEV,CACIN,MAAO,OACPM,KAAM,SAuEcwB,KAAI,SAAC+Y,GACT,OAAO,kBAAC5B,GAAD,CAAQjZ,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAM5D,yBAAKG,UAAU,gCACdmZ,EAAuBzL,WACxB,oCACA,yBAAKlN,MAAO,CACR8Q,OAAO,UACPmE,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEb,kBAAC,KAAD,CAAM2E,KAAK,YAKRnB,EAAuBxL,QAAUwL,EAAuB/W,KAAKtB,OAAS,IACnE,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,kBAAqBO,MAAOwS,KAAMI,0BAK5DuD,EAAuBxL,MAAQ0L,GAAYA,EAASvY,OAAS,GACzD,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KAC1C,kBAAC,KAAD,CAAWzR,KAAMiX,EAAUxB,SAAU,IACjC,8BACI,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CAAOC,QAASjC,EAChBkC,cAzGQ,SAAC9Q,GAEzB,MAAwB,QAArB4O,EACQ5O,EAAQ8N,IAAO9N,GAAOqC,OAAO,2BAA6BrC,EAEvC,SAArB4O,EACE5O,EAAQ8N,IAAO9N,GAAOqC,OAAO,gBAAkBrC,EAE5B,UAArB4O,GACE5O,EAAQyO,GAAOzO,EAAQ,GAE3BA,KAgGS,kBAAC,KAAD,CACI+Q,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACImb,QAAQ,QACRnb,KAAK,QACLP,KAAK,QACLuF,KAA2B,UAArBkU,EAA+Bc,EAAY,GACjD0B,KAAK,0BAQrB,yBAAKvb,UAAU,kCACT,kBAAC0Y,GAAD,CACA8C,UAAU,EACV/b,SAlHsB,SAAC8R,GAClC,GAAGA,GAAKA,EAAE,GAAG,CACZ,IAAM3K,EAAY,IAAIgT,KAAK3B,IAAO1G,EAAE,IAAI/E,UAClC3F,EAAU,IAAI+S,KAAK3B,IAAO1G,EAAE,IAAI/E,UAEtCyM,EAAarS,GAEbsS,EAAWrS,KA4GDkT,UAAU,EACV0B,OAAO,YCzXjBjD,GAAWC,KAAXD,OAEAE,GAAgBC,KAAhBD,YAqGFE,GAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAMWC,GAAyB,CACpCnF,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,oCAyOEqF,GAzNG,SAACjD,GAAkB,IAAD,EACchH,mBAAS,QADvB,mBAC3BkK,EAD2B,KACTC,EADS,OAK9BvK,EAAe,GAAI,sBALW,mBAGhCiN,EAHgC,KAIhCC,EAJgC,OAMA9M,mBAAS,IANT,mBAM3B+M,EAN2B,KAMhBC,EANgB,OAOAhN,mBAAS,IAPT,mBAO3BjI,EAP2B,KAOhBqS,EAPgB,OAQJpK,mBAAS,IARL,mBAQ3BhI,EAR2B,KAQlBqS,EARkB,KAUlC9K,qBAAU,YACgB,uCAAG,4BAAAE,EAAA,sEACGqN,EAAqC,CAC/D1a,WAAY,CACVC,OAAQ,CACNqY,WAAYR,EACZS,eAAgB5S,EAChB6S,aAAc5S,MANK,OACnBiV,EADmB,OAWzBva,QAAQC,IAAI,gBAAiBsa,GAGzBA,GAEFD,EAAaC,GAhBU,2CAAH,qDAmBxBC,KACC,CAAChD,EAAkBnS,EAAWC,IAEjCtF,QAAQC,IAAI,4BAA6Bka,GAEzC,IA+BM3W,EAAO,IAAI6U,KACXC,EAAYjB,GAAO7T,EAAK+U,YAuC9B,OACE,yBAAK9Z,UAAU,iCACb,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,iDACb,sCAEA,wDAGF,yBAAKA,UAAU,uDACb,kBAAC,KAAD,CACE+Z,UAAU,EACVC,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAAS/S,aAAc,MAAOqW,MAAO,WACrDpW,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAvFO,SAACF,GAChByZ,EAAoBzZ,IAuFZC,aAAcuZ,EACdmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IAtF1D,CACd,CACE9a,MAAO,OACPM,KAAM,QAER,CACEN,MAAO,OACPM,KAAM,QAER,CACEN,MAAO,YACPM,KAAM,eAER,CACEN,MAAO,aACPM,KAAM,gBAER,CACEN,MAAO,QACPM,KAAM,SAER,CACEN,MAAO,OACPM,KAAM,SAkESwB,KAAI,SAAC+Y,GACZ,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMpD,yBAAKG,UAAU,gCACZ0b,EAA0BhO,WACzB,oCACE,yBACElN,MAAO,CACL8Q,OAAQ,UACRmE,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,CAAM2E,KAAK,YAIhBoB,EAA0B/N,QACvB+N,EAA0BtZ,KAAKtB,OAAS,IACxC,yBACEN,MAAO,CACL4W,UAAW,SAGb,kBAAC,KAAD,CACE3U,YAAW,oBACXO,MAAOwS,KAAMI,0BAKpB8F,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GACjE,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KACxC,kBAAC,KAAD,CAAWzR,KAAMwZ,EAAW/D,SAAU,IACpC,8BACE,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACxD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGlC,kBAAC,KAAD,CACEC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAET,kBAAC,KAAD,CACEC,QAASjC,EACTkC,cA/Gc,SAAC9Q,GAC3B,MAAyB,QAArB4O,EACK5O,EAAQ8N,IAAO9N,GAAOqC,OAAO,2BAA6BrC,EACnC,SAArB4O,EACF5O,EAAQ8N,IAAO9N,GAAOqC,OAAO,gBAAkBrC,EACxB,UAArB4O,EACFH,GAAOzO,EAAQ,GAEjBA,KAyGG,kBAAC,KAAD,CAEE+Q,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEZ,kBAAC,KAAD,CACE9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAE9C,kBAAC,KAAD,CACEmb,QAAQ,QACRnb,KAAK,QACLgF,KAA2B,UAArBkU,EAA+Bc,EAAY,GACjDva,KAAK,QACLic,KAAK,0BAMf,yBAAKvb,UAAU,kCACb,kBAAC,GAAD,CACEwb,UAAU,EACV/b,SAjH4B,SAAC8R,GACnChQ,QAAQC,IAAI,YAAayW,IAAO1G,EAAE,IAAI/E,UACtCjL,QAAQC,IAAI,UAAWyW,IAAO1G,EAAE,IAAI/E,UACpC,IAAM5F,EAAY,IAAIgT,KAAK3B,IAAO1G,EAAE,IAAI/E,UAClC3F,EAAU,IAAI+S,KAAK3B,IAAO1G,EAAE,IAAI/E,UAEtCyM,EAAarS,GAEbsS,EAAWrS,IA0GL4U,OAAQ,OACR1B,UAAU,O,UClWZvB,GAAWC,KAAXD,OASFwD,GAAe,CACjB,CACIzc,MAAO,UACPM,KAAM,WAEV,CACIN,MAAO,SACPM,KAAM,UAEV,CACIN,MAAO,KACPM,KAAM,MACP,CACCN,MAAO,WACPM,KAAM,aAkCDoc,GAAS,CAClB,UACA,UACA,UACA,UACA,UACA,WAMSpD,GAAyB,CAClCnF,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,oCAoLAyI,GA9KQ,SAACrG,GAAkB,IAAD,EACPhH,mBAASmN,IADF,mBAC9B9P,EAD8B,aAEW2C,mBAAS,YAFpB,mBAE9BkK,EAF8B,KAEZC,EAFY,OAK+BvK,EAAe,GAAI,iCALlD,mBAK9B0K,EAL8B,KAKNC,EALM,OAQSvK,mBAAS,IARlB,mBAQ9BsN,EAR8B,KAQbC,EARa,KAUrChO,qBAAU,YACyB,uCAAG,sBAAAE,EAAA,sEACS8K,EAAkC,CACrEnY,WAAY,CACRC,OAAQ,CACJqY,WAAYR,MAJM,yDAAH,qDAU5BY,KAEL,CAACZ,IAIH3K,qBAAU,WACH+K,EAAuBxL,MAAQwL,EAAuB/W,MACrDga,EAAmBjD,EAAuB/W,QAEhD,CAAC+W,IAIH5X,QAAQC,IAAI,yBAAyB2X,GACrC5X,QAAQC,IAAI,kBAAkB2a,GAG9B,IAIME,EAASC,KAAKC,GAAK,IA4BzB,OACI,yBAAKvc,UAAU,0CACX,yBAAKA,UAAU,iDACX,yBAAKA,UAAU,sDACX,2CAGA,4BACI+Y,EADJ,gBAIJ,yBAAK/Y,UAAU,4DACX,kBAAC,KAAD,CACI+Z,UAAU,EACVC,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAAS/S,aAAc,MAAOqW,MAAO,WACrDpW,YAAY,cACZuZ,iBAAiB,WACjBxa,SAlDH,SAACF,GACdyZ,EAAoBzZ,IAkDJC,aAAc,UACd0a,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IAG3FnO,EAAQ7K,KAAI,SAAC+Y,GACT,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMhE,yBAAKG,UAAU,gCAEdmZ,EAAuBzL,WACxB,oCACI,yBAAKlN,MAAO,CACRiV,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXyB,UAAU,QACVoF,aAAa,UAEjB,kBAAC,KAAD,CACAlC,KAAK,YAMJnB,EAAuBxL,QAAUwL,EAAuB/W,KAAKtB,OAAS,IACnE,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,wBAAmBsW,GAAoB/V,MAAOwS,KAAMI,0BAKzEuD,EAAuBxL,MAAQwO,GAAmBA,EAAgBrb,OAAS,GACxE,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KAC1C,kBAAC,KAAD,CAAUgE,SAAU,IAChB,kBAAC,KAAD,CACIP,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAGhD,kBAAC,KAAD,CACImb,QAAQ,QACR5Y,KAAM+Z,EACNM,YAAa,IACbC,YAAa,GACb7c,KAAMkZ,EACN4D,QAAS5D,EACTlU,KAAK,IACLxF,MAnGE,SAAC,GAUxB,IATHud,EASE,EATFA,GACAC,EAQE,EARFA,GACAC,EAOE,EAPFA,SACAJ,EAME,EANFA,YACAD,EAKE,EALFA,YAIAM,GACE,EAJFxd,MAIE,EAHFM,KAGE,EAFFkY,MAEE,EADFgF,SAEMC,EAASN,EAA4C,IAA7BD,EAAcC,GACtCO,EAAIL,EAAKI,EAASV,KAAKY,KAAKJ,EAAWT,GAAU,GACjDc,EAAIN,EAAKG,EAASV,KAAKc,KAAKN,EAAWT,GAG7C,OADA9a,QAAQC,IAAI,YAAYub,GAEpB,0BAAME,EAAGA,EAAGE,EAAGA,EAAG5B,KAAK,QAAQ1D,SAAU,GAAIwF,iBAAiB,WAA9D,WACmB,IAAVN,GAAeO,QAAQ,GADhC,OAmFoBC,WAAW,GAEVpB,GAAmBA,EAAgB9a,KAAI,SAACmc,EAAOzF,GAAR,OACpC,kBAAC,KAAD,CACIzX,IAAG,eAAUyX,GACbwD,KAAMU,GAAOlE,EAAQkE,GAAOnb,iBASxD,yBAAKd,UAAU,kCACX,4BACI,8BACI,kBAACyd,GAAA,EAAD,OAFR,e,UCnPRjF,GAAWC,KAAXD,OAEAkF,GAAwBC,KAAxBD,OAQF1B,IAR0B2B,KAAhBC,YAQK,CACjB,CACIre,MAAO,WACPM,KAAM,YAET,CACGN,MAAO,UACPM,KAAM,aA8KCge,GAxKI,SAAChI,GAEhB,IAAMC,EAAUC,eAFiB,EAKHlH,mBAASmN,IALN,mBAK1B9P,EAL0B,aAMe2C,mBAAS,YANxB,mBAM1BkK,EAN0B,KAMRC,EANQ,OAOqBvK,EAAe,GAAI,0BAPxC,mBAO1BqP,EAP0B,KAOTC,EAPS,KAUjC3P,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACUyP,EAA2B,CACxD9c,WAAY,CACRC,OAAQ,CACJ8c,UAAWjF,EACXlX,KAAM,WALK,yDAAH,qDAWrBoc,KAEL,CAAClF,IAUH,OAHAxX,QAAQC,IAAI,kBAAkBsc,GAK1B,yBAAK9d,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,0CAGA,mCACW+Y,EADX,uBAIJ,yBAAK/Y,UAAU,uDACX,kBAAC,KAAD,CACI+Z,UAAU,EACVC,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAAS/S,aAAc,MAAOqW,MAAO,WACrDpW,YAAY,gBACZuZ,iBAAiB,WACjBxa,SA3BC,SAACF,GACdyZ,EAAoBzZ,IA2BRC,aAAcuZ,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IAG3FnO,EAAQ7K,KAAI,SAAC+Y,GACT,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMhE,yBAAKG,UAAU,gCACd8d,EAAgBpQ,WACb,oCACA,yBAAKlN,MAAO,CACRiV,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEf,kBAAC,KAAD,CACA2E,KAAK,YAMAwD,EAAgBnQ,QAAUmQ,EAAgB1b,KAAKtB,OAAS,IACrD,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,wBAAmBsW,GAAoB/V,MAAOwS,KAAMI,0BAI7EkI,EAAgBnQ,MAAQmQ,EAAgB1b,MAAQ0b,EAAgB1b,KAAKtB,OAAS,GAC3E,oCACI,kBAAC,KAAD,CACAod,WAAY,CAAEC,gBAAiB,GAC3B3d,MAAO,GAOP8Z,KAAK,QAEL8D,WAAYN,EAAgB1b,KAC5Bic,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH/d,MAAO,CACHsW,MAAO,qBAQnB,kBAAC4G,GAAD,CACIta,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACJ,oCACG,uBAAG5G,KAAK,MACR,wBACKtG,QAAS,WACLsE,EAAQ7R,KAAR,iBAAuB8U,GAAoBA,EAAiBsB,cAA5D,YAA6EqE,EAAOxX,UAExF1G,MAAO,CACH6X,WAAY,IACZvB,MAAO,OACP6H,cAAc,YACdrH,OAAQ,YAEXlT,GAAI,UAAO2U,EAAP,kBAOrB,kBAAC2E,GAAD,CACIta,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,4BAUlC,yBAAKA,UAAU,kCACX,4BACI,8BACI,kBAACyd,GAAA,EAAD,OAFR,eCMGmB,GAlLE,SAAC/I,GAAkB,IAAD,EAC+CpH,EAAe,GAAI,8BADlE,mBACMoQ,GADN,aAEiDpQ,EAAe,GAAI,8BAFpE,mBAEOqQ,GAFP,aAG0BrQ,EAAe,GAAI,8BAH7C,mBAGNsQ,GAHM,WA2ClC,OApCA3Q,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACnByQ,EAA6B,IADV,2CAAH,qDAIvBC,KACE,IAIH5Q,qBAAU,YACiB,uCAAG,sBAAAE,EAAA,sEACtBuQ,EAAsC,CAC3C3d,OAAQ,YAFmB,2CAAH,qDAK1B+d,KACC,IAIF7Q,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACvBwQ,EAAuC,CAC5C5d,OAAQ,aAFoB,2CAAH,qDAK3Bge,KACC,IAQD,yBAAKlf,UAAU,qBA0Hd,yBAAKA,UAAU,2BACd,kBAAC,GAAD,MACA,kBAAC,GAAD,OAED,yBAAKA,UAAU,4BAEf,kBAACmf,GAAD,MACA,kBAAC,GAAD,Q,sJC9MKjgB,GAAaD,IAAbC,SAmDOF,GAjCF,SAAC,GAIK,IAJHK,EAIE,EAJFA,MAA2BE,GAIzB,EAJKD,KAIL,EAJWE,aAIX,EAJyBD,OACvCE,EAGc,EAHdA,SAAUC,EAGI,EAHJA,SAAUC,EAGN,EAHMA,QACnBC,EAEa,EAFbA,YAAaC,EAEA,EAFAA,KAEA,IAFMuf,YAEN,MAFa,EAEb,EADb1e,EACa,EADbA,YAED,OACI,oCACKrB,GACG,wBAAIW,UAAU,mBACTX,GAIT,kBAAC,IAAKY,KAAN,CACIC,eAAgBP,EAAU,QAAU,GACpCQ,KAAMP,GAGN,kBAAC,GAAD,CACIF,SAAUA,EACVD,SAAUA,EACVF,MAAOA,EACPM,KAAMA,EACNG,UAAU,iBACVof,KAAMA,EACN1e,YAAaA,O,iFCCzB2e,I,MAAYC,KAAZD,SACAE,GAAYC,KAAZD,QAEFE,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BCrDhC4I,GD8EM,SAAC,GAUR,IAAD,UATXC,EASW,EATXA,QACAC,EAQW,EARXA,WACAC,EAOW,EAPXA,YACAC,EAMW,EANXA,qBAGAC,GAGW,EALXC,wBAKW,EAJXC,oBAIW,EAHXF,UACAG,EAEW,EAFXA,iBAEW,+JAC6CrR,mBAAS,MADtD,mBACJsR,EADI,KACkBC,EADlB,OAEqBvR,mBAAS,IAF9B,mBAEJwR,EAFI,KAEMC,EAFN,OAGuBzR,oBAAS,GAHhC,mBAGJ0R,EAHI,KAGOC,EAHP,OAIiC3R,mBAAS,IAJ1C,mBAIJ4R,EAJI,KAIYC,EAJZ,OAKmC7R,oBAAS,GAL5C,mBAKJ8R,EALI,KAKaC,EALb,OAMiDnS,EAC1D,GACA,0BARS,mBAMJoS,EANI,KAMgBC,EANhB,OAaPrS,EAAe,GAAI,wBAbZ,mBAYTsS,GAZS,WAeLC,GAAiBC,EAAY,uBAAwB,CACzDhgB,WAAY,CACVC,OAAQ,CACNqL,YAAa,GACb+J,SAAU,QACVC,eAAgB,QALY,SAU5B5H,GAAQC,cAzBH,GAgCPH,EAAe,GAAI,0BAhCZ,qBA+BTyS,IA/BS,gBAiCiCrS,mBAAS,IAjC1C,qBAiCYsS,IAjCZ,gBAkCqBtS,oBAAS,GAlC9B,qBAkCJuS,GAlCI,MAkCMC,GAlCN,MAoCLC,GAAiC,uCAAG,WAAO/e,GAAP,qBAAA+L,EAAA,sEACA4S,GAAkC,CACxEjgB,WAAY,CACVE,aAAc,CACZoB,SAJkC,QAClCgf,EADkC,SAYD,OAArCA,EAA0B1b,SAGpB2b,EAAU7S,GAAM8S,aAChBC,EAAgBF,EAAQG,QAAO,SAAAC,GACnC,IAAMC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOC,SAExB,MAAyB,WAAV,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAA2C,kBAAzB,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAW,OACrDxgB,KAAI,SAAAugB,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,aAUvB,QARMC,EAAaJ,EAAcK,MAAK,SAAAzhB,GAAQ,IAAD,EACvC0hB,GAAQ,EAKZ,OAHA,UAAIrT,GAAMsT,aAAa3hB,UAAvB,aAAI,EAAyB8B,KAAK2f,MAAK,SAAAlgB,GAAI,OAAIA,EAAKU,KAAOA,QACzDyf,GAAQ,GAEHA,YAET,IAAIF,OAAJ,EAAIA,EAAa,KAEfnT,GAAMuT,aAAaJ,GAAa,SAACK,GAAU,IAAD,EACxC,OAAO,eAEFA,EAFL,CAIE/f,KAAI,UAAE+f,EAAK/f,YAAP,aAAE,EAAWuf,QAAO,SAAA9f,GAAI,OAAIA,EAAKU,KAAOA,UAIlDkd,GAAwB,mBAzCc,2CAAH,sDA+CjC2C,GAAY,uCAAG,4BAAA9T,EAAA,sEACQyS,EAAgC,CACzD9f,WAAY,CACVC,OAAQ,CACNqL,YAAa,IACb+J,SAAU,QACVC,eAAgB,SANH,QACb8L,EADa,SAcjBlB,GAAkBkB,GAdD,2CAAH,qDAoBlBjU,qBAAU,cAEP,IAEH,IAAMkU,GAAY,uCAAG,4BAAAhU,EAAA,sDACbiU,EAAW,IAAIC,SACrBnC,EAASvc,SAAQ,SAAC2e,GAChBF,EAASG,OAAO,SAAUD,EAAMA,EAAK5iB,SAGvC2gB,GAAa,GASbmC,KAAQ,CACN3hB,IAAI,GAAD,OAAK6B,EAAOqK,QAAZ,wBACHZ,OAAQ,OACRsW,aAAa,EACbxgB,KAAMmgB,EACNM,iBAAiB,EACjBja,QAAS,SAACuE,GACR5L,QAAQC,IAAI,uBAAwB2L,GACpCmT,EAAY,IACZE,GAAa,GAKb,IACMkB,EADU/S,GAAM8S,aACQE,QAAO,SAAAC,GACnC,IAAMC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOC,SAExB,MAAyB,WAAV,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAA2C,kBAAzB,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAW,OACrDxgB,KAAI,SAAAugB,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,YAEjBiB,EAAa,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAgB,GAGlCoB,GAEFnU,GAAMuT,aAAaY,GAAgB,SAACX,GAAU,IAAD,IACvCY,EAAY,OAAG5V,QAAH,IAAGA,GAAH,UAAGA,EAAKnD,gBAAR,aAAG,EAAgB,GAMnC,OALA+Y,EAAY,eACPA,EADO,CAEVxgB,GAAIwgB,EAAavgB,IACjBI,MAAM,GAAD,OAAKC,EAAOqK,SAAZ,iBAAsB6V,SAAtB,aAAsB,EAAcjgB,aAEpC,eAEFqf,EAFL,CAIE/f,KAAK,CAAE2gB,GAAH,2BAAoBZ,QAApB,IAAoBA,OAApB,EAAoBA,EAAM/f,YAUpCggB,KACAxL,KAAQhO,QAAQ,wBAEZuE,GAAOA,EAAInD,UAAYmD,EAAInD,SAAS,IACtC4W,EAAmB,aACjBhe,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBsK,EAAInD,SAAS,GAAGlH,WAAaqK,EAAInD,SAAS,GAAGlH,YAExEqK,EAAInD,SAAS,KAGpBoW,EAAwB,MAc1B/S,MAAO,WACLmT,GAAa,GACb5J,KAAQvJ,MAAM,qBAxFC,2CAAH,qDAgHlBe,qBAAU,WACJ2R,GAAYA,EAASjf,OAAS,GAAG4f,EAAkB,aAAIX,MAC1D,CAACA,IAEJ3R,qBAAU,WACJgT,IAAYtB,GAAwBC,GACtCW,EAAkB,aAAIX,MAEvB,CAACA,EAAUqB,KAEdhT,qBAAU,cAKP,CAAC8R,EAAkBkB,KAEtB,IAAM4B,GAAc,CAElBC,UAAU,EACVC,SAAU,SAACT,GACTnC,GAAY,SAAC6C,GACX,IAAMpL,EAAQsI,EAASpe,QAAQwgB,GACzBW,EAAc/C,EAASre,QAE7B,OADAohB,EAAYC,OAAOtL,EAAO,GACnBqL,MAGXE,aAAc,SAACb,GAKb,OAJAnC,GAAY,SAAC6C,GACX,IAAMI,EAAWJ,EACjB,MAAM,GAAN,oBAAWI,GAAX,CAAqBd,QAEhB,GAETpC,YAGImD,GAA0B,SAACxgB,EAAOT,GACtC,GAAIke,GAAkBA,EAAe3f,OAAS,EAE5C,GADqB2f,EAAesB,MAAK,SAAC/e,GAAD,OAAWA,EAAMT,KAAOA,KAI1D,CACL,IAAMkhB,EAAoBhD,EAAekB,QACvC,SAAC3e,GAAD,OAAWA,EAAMT,KAAOA,KAE1Bme,EAAkB+C,QANlB/C,EAAkB,CAAC1d,GAAF,oBAAYyd,KAC7BG,EAAmB5d,QAQrB0d,EAAkB,CAAC1d,GAAF,oBAAYyd,KAC7BG,EAAmB5d,IAgBjB0gB,GAAkB,uCAAG,WAAOpT,EAAQC,GAAf,qBAAAjC,EAAA,sEACewS,EAA8B,CACpE3a,KAAM,CACJ5D,GAAI+N,EAAO/N,GACXe,IAAKgN,EAAOhN,IACZF,MAAOkN,EAAOlN,MACdG,QAAS+M,EAAO/M,QAChBF,OAAQiN,EAAOjN,UAPM,QACnBsgB,EADmB,SAcc,OAArCA,EAA0B9d,QAE1B4Z,GAAwB,iBAElB+B,EAAU7S,GAAM8S,aAChBC,EAAgBF,EAAQG,QAAO,SAAAC,GACnC,IAAMC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOC,SAExB,MAAyB,WAAV,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAA2C,kBAAzB,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAW,OACrDxgB,KAAI,SAAAugB,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,aAUvB,QARMC,EAAaJ,EAAcK,MAAK,SAAAzhB,GAAQ,IAAD,EACvC0hB,GAAQ,EAKZ,OAHA,UAAIrT,GAAMsT,aAAa3hB,UAAvB,aAAI,EAAyB8B,KAAK2f,MAAK,SAAAlgB,GAAI,OAAIA,EAAKU,KAAOA,SACzDyf,GAAQ,GAEHA,YAET,IAAIF,OAAJ,EAAIA,EAAa,KAEfnT,GAAMuT,aAAaJ,GAAa,SAACK,GAC/B,IAAMyB,EAAc,OAAGzB,QAAH,IAAGA,OAAH,EAAGA,EAAM/f,KAKvB2V,EAHG6L,EAAeviB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQqO,EAAO/N,IAMxDshB,EAAcjjB,OAAOkjB,OAAO,GAAIF,EAAe7L,GAAjCnX,OAAA,IAAAA,CAAA,GACf+iB,IAECI,EAAe,uBAChBH,EAAe5hB,MAAM,EAAG+V,IADR,CAEnB8L,GAFmB,aAGhBD,EAAe5hB,MAAM+V,EAAQ,KAIlC,OAAO,eAEFoK,EAFL,CAIE/f,KAAM2hB,SAxXanN,OAmYzBoN,EAlYJrN,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAkY1CvG,EAAQC,eAAc,GAxEG,iCA9TC,IAACoG,IA8TF,OAAH,wDA2ElBsN,GAAkC,SAAC5T,EAAQI,GAI/C,OAAKA,GAoCP,OACE,oCACE,kBAAC,KAAD,CACElQ,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,gBACNuc,QAASA,EACTwE,KAlNW,SAAC5S,GACZuO,GACFD,EAAYY,GACZY,IAAY,KAEZ9f,QAAQC,IAAI,IACZD,QAAQC,IAAI,oBAAqBif,EAAe,IAChDZ,EACEY,GAAkBA,EAAe,GAAK,CAACA,EAAe,IAAM,IAE9DY,IAAY,IAEdzB,GAAW,IAuMPwE,SApMe,SAAC7S,GACpBqO,GAAW,IAoMPpM,MAAO,OACP6Q,UAAW,CACT/S,OAAQ,IACRqG,QAAS,KAEX2M,OAAO,QAEP,yBAAKtkB,UAAU,6BACb,yBAAKA,UAAU,kCACb,kBAAC,KAAD,CACEP,SAAU,SAACF,GACT6gB,EAAwB,GAAD,OAAI7gB,KAE7BglB,UAAWpE,EACX7gB,KAAK,OACLgb,KAAK,UAEL,kBAACiF,GAAD,CAASiF,IAAI,mBAAmBlkB,IAAI,KAClC,yBAAKN,UAAU,yCACb,6BACE,kBAACqf,GAAD,eACErf,UAAU,qBACVykB,SAAS,UACTjkB,MAAO,CACLwW,WAAY,OACZvW,aAAc,QAEZuiB,IAEJ,uBAAGhjB,UAAU,wBACX,kBAAC0kB,GAAA,EAAD,OAEF,uBAAG1kB,UAAU,mBAAb,6CAGA,uBAAGA,UAAU,mBAAb,2CAON,kBAAC,IAAD,CACEA,UAAU,6BACVV,KAAK,UACLkS,QAAS8Q,GACT5iB,SAA8B,IAApB2gB,EAASvf,OACnB2Q,QAAS8O,EACTxd,KAAM,kBAAC4hB,GAAA,EAAD,MACNnkB,MAAO,CACL4W,UAAW,OACXoF,aAAc,SATlB,WAeF,kBAAC+C,GAAD,CAASiF,IAAI,gBAAgBlkB,IAAI,KAC/B,yBAAKN,UAAU,qDACZghB,GAAe1R,YACA,OAAd0R,SAAc,IAAdA,IAAA,UAAAA,GAAgBxR,oBAAhB,eAA8BpN,KAAKtB,QAAS,IAD7C,OAECkgB,SAFD,IAECA,IAFD,UAECA,GAAgBxR,oBAFjB,aAEC,EAA8BpN,KAAKf,KAAI,SAAC2B,GACtC,OACE,yBACE1C,IAAK0C,EAAMT,GACXvC,UAAU,0DA1MP,SAACuC,GAC1B,SAAIke,GAAkBA,EAAe3f,OAAS,MACvB2f,EAAesB,MAAK,SAAC/e,GAAD,OAAWA,EAAMT,KAAOA,KA0M5CqiB,CAAmB5hB,EAAMT,IACxB,yBAAKvC,UAAU,+DACb,kBAAC6kB,GAAA,EAAD,OAGA,GAGJ,kBAAC,KAAD,CACEpN,QAAS,kBAlHb,SACpB6J,EACA/e,EACAihB,EACAxgB,GAEA,OACE,kBAAC,IAAD,KACE,kBAAC,IAAK/C,KAAN,CACEuR,QAAS,kBAAMgS,EAAwBxgB,EAAOT,IAC9CjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,UAQA,kBAAC,IAAK5kB,KAAN,CACEuR,QAAS,kBAAM8P,EAAkC/e,IACjDjC,IAAI,IACJyC,KAAM,kBAAC+hB,GAAA,EAAD,CAAgBhO,MAAM,SAH9B,WAmGsBiO,CACEzD,GACAte,EAAMT,GACNihB,GACAxgB,IAGJwU,UAAU,eAEV,yBAAKxX,UAAU,+DACb,kBAACglB,GAAA,EAAD,QAIJ,yBACExT,QAAS,WACPgS,GAAwBxgB,EAAOA,EAAMT,KAEvCgJ,IAAKvI,EAAMJ,MACXU,IAAI,cAMC,OAAd0d,SAAc,IAAdA,QAAA,EAAAA,GAAgBrhB,aACC,OAAdqhB,SAAc,IAAdA,IAAA,UAAAA,GAAgBxR,oBAAhB,mBAA8BpN,YAA9B,eAAoCtB,QAAS,IAC7C,yBACEN,MAAO,CACLiV,QAAS,OACTC,eAAgB,SAChBlC,MAAO,SAGT,kBAAC,GAAD,CAAOpQ,MAAM,mCAIlB4d,GAAetT,WACd,yBACElN,MAAO,CACLiV,QAAS,OACTC,eAAgB,SAChBlC,MAAO,OACPlC,OAAQ,mBAGV,kBAAC,KAAD,CAAMgJ,KAAK,YAMjB,yBAAK9Z,MAAO,CACV4W,UAAW,OACX3B,QAAS,UAET,kBAAC,KAAD,CACEhW,SAAU,SAACyP,EAAYD,GACP,OAAd+R,SAAc,IAAdA,OAAgBlS,QAAQI,IAE1B+V,eAAgB,EAAGjf,MAAK,OAAEgb,SAAF,IAAEA,IAAF,UAAEA,GAAgBxR,oBAAlB,aAAE,EAA8BxJ,MAAOkf,SAAU,SAKnF,yBAAKllB,UAAU,mCACZ2gB,GACC,oCACE,kBAAC,IAAD,CACEhQ,SAAU,SAACL,EAAQC,GAAT,OACRmT,GAAmBpT,EAAQC,IAE7BK,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEN0Q,KAGN,gBACC7P,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYG,oCACE,kDACA,yBAAKpR,UAAU,gDACb,yBAAKA,UAAU,+DACb,yBAAKuL,IAAKoV,EAAe,MAAWrd,IAAI,SAE1C,yBAAKtD,UAAU,8DACb,wBAAIA,UAAU,oBACX2gB,EAAe,MAElB,4BACGA,EAAe,OACd1I,IAAO0I,EAAe,OAAWnU,OAC/B,yBAON,kBAAC,KAAD,CACE2Y,UAAW,kBACT7D,GACEX,EAAe,KAGnBvd,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,wBAAIplB,UAAU,sBAAd,yBAON,kBAACf,EAAD,CACEI,MAAM,iBACNE,MAAO+Q,EAAOhN,IACdzD,KAAK,MACLF,QACGsR,EAAQ3N,KAAOyN,EAAOzN,MACrB0N,GACA6P,EAAmBxT,MAAnB,UAEJzN,YACGqR,EAAQ3N,KAAOyN,EAAOzN,MACrB0N,GACA6P,EAAmBxT,MAAnB,UAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,UAIpB,kBAACjS,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOlN,MACdvD,KAAK,QACLF,QACGsR,EAAQ7N,OAAS2N,EAAO3N,QACvB4N,GACA6P,EAAmBxT,MAAnB,YAEJzN,YACGqR,EAAQ7N,OAAS2N,EAAO3N,QACvB4N,GACA6P,EAAmBxT,MAAnB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO/M,QACd1D,KAAK,UACLF,QACGsR,EAAQ1N,SAAWwN,EAAOxN,UACzByN,GACA6P,EAAmBxT,MAAnB,cAEJzN,YACGqR,EAAQ1N,SAAWwN,EAAOxN,UACzByN,GACA6P,EAAmBxT,MAAnB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAIpB,kBAAC,IAAD,CACE5R,KAAK,UACLkS,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClC7R,SAAUwkB,GACR5T,EACAI,GAEFe,QAAST,EACTxQ,MACE,IATJ,gBAsBVmgB,GACA,yBACEngB,MAAO,CACLqT,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,wBACEnV,MAAO,CACLoX,UAAW,SACXC,SAAU,OACVf,MAAO,UAJX,4C,wCEjoBDuO,G,6MAvJb7X,MAAQ,CACNrI,KAAM,GACNmgB,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAGlBC,YAAc,SAACC,GAAgB,IAAD,EACF,EAAK9P,OAE/B+P,EAH4B,EACpBA,SADoB,EACXzgB,KACMwc,QAAO,SAACpZ,GAAD,OAASA,IAAQod,O,EAIjDE,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAKnL,MAAM4L,Y,EAGzDC,kBAAoB,SAACzU,GACnB,EAAKuU,SAAS,CAAEP,WAAYhU,EAAE/F,OAAOjM,S,EAGvC0mB,mBAAqB,WACnB1kB,QAAQC,IAAI,qBAAsB,EAAKqU,OADd,IAEjB0P,EAAe,EAAK/X,MAApB+X,WAFiB,EAGD,EAAK1P,MAAvB1Q,EAHmB,EAGnBA,KAAMygB,EAHa,EAGbA,QACRL,GAAcpgB,IAAsC,IAA9BA,EAAKlD,QAAQsjB,KACrCpgB,EAAI,uBAAOA,GAAP,CAAaogB,KAEnBK,EAAQzgB,GACR,EAAK2gB,SAAS,CACZR,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAC3U,GACvB,EAAKuU,SAAS,CAAEL,eAAgBlU,EAAE/F,OAAOjM,QACzCgC,QAAQC,IAAI,WAAY+P,EAAE/F,OAAOjM,Q,EAGnC4mB,uBAAyB,WACvB,EAAKL,UAAS,YAAwC,EAArCN,eAAqC,EAArBC,eAC/B,MAAO,CACLD,gBAAiB,EACjBC,eAAgB,OAIpB,IAAMW,EAAO,aAAO,EAAKvQ,MAAM1Q,MAC/BihB,EAAQZ,gBAAkBC,eAC1B,EAAK5P,MAAM+P,QAAQQ,I,EAGrBC,aAAe,SAAClM,GACd,EAAKA,MAAQA,G,EAGfmM,iBAAmB,SAACnM,GAClB,EAAKoM,UAAYpM,G,yEAGT,IAAD,SAMHlO,KAAKuB,MAJP8X,EAFK,EAELA,aACAC,EAHK,EAGLA,WACAC,EAJK,EAILA,eACAC,EALK,EAKLA,eALK,EAOuBxZ,KAAK4J,MAA3BnV,EAPD,EAOCA,YAAayE,EAPd,EAOcA,KAErB,OACE,oCACGA,GACCA,EAAKrE,OAAS,GACdqE,EAAK9D,KAAI,SAACkH,EAAKwP,GACb,GAAIyN,IAAmBzN,EACrB,OACE,kBAAC,IAAD,CACEyO,IAAK,EAAKF,iBACVhmB,IAAKiI,EACL+R,KAAK,QACL5Z,YAAaA,EACbV,UAAU,YACVT,MAAOkmB,EACPhmB,SAAU,EAAKymB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYpe,EAAIzH,OAAS,GAEzB8lB,EACJ,kBAAC,KAAD,CACE5mB,UAAU,WACVM,IAAKiI,EACLse,UAAU,EACVC,QAAS,kBAAM,EAAKpB,YAAYnd,KAEhC,0BACEwe,cAAe,SAACxV,GACA,IAAVwG,IACF,EAAK+N,SACH,CAAEN,eAAgBzN,EAAO0N,eAAgBld,IACzC,WACE,EAAKge,UAAUR,WAGnBxU,EAAEhR,oBAILomB,EAAS,UAAMpe,EAAIvG,MAAM,EAAG,IAAnB,OAA8BuG,IAI9C,OAAOoe,EACL,kBAAC,KAAD,CAASvjB,MAAOmF,EAAKjI,IAAKiI,GACvBqe,GAGHA,KAGLtB,GACC,kBAAC,IAAD,CACE9kB,MAAO,CACL8Q,OAAQ,UAEVkV,IAAKva,KAAKoa,aACV/mB,KAAK,OACLgb,KAAK,QACLta,UAAU,YACVT,MAAOgmB,EACP9lB,SAAUwM,KAAK+Z,kBACfS,OAAQxa,KAAKga,mBACbS,aAAcza,KAAKga,sBAGrBX,GACA,kBAAC,KAAD,CAAKtlB,UAAU,yBAAyBwR,QAASvF,KAAK4Z,WACpD,kBAACmB,GAAA,EAAD,MADF,mB,GA/IaC,IAAMC,WCoCvBtX,GAAmBC,MAAaC,MAAM,IAOtC2P,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACP+kB,aAAc,MAGRnP,GAAWC,KAAXD,OAWFoP,GAAsB,SAAC,GAOvB,EANJC,sBAMK,IALLC,EAKI,EALJA,yBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,cAEA3mB,QAAQC,IAAI,kBAAmB0mB,GAD3B,MAE+CzZ,EACjD,GACA,kBAJE,mBAEG0Z,EAFH,KAEqBC,EAFrB,OAMqD3Z,EACvD,GACA,kBARE,mBAMG4Z,EANH,KAMwBC,EANxB,OAcA7Z,EAAe,GAAI,qBAAsB,QAdzC,mBAaF8Z,GAbE,aAmBA9Z,EAAe,GAAI,0BAA2B,QAnB9C,mBAkBF+Z,GAlBE,aAsB0B3Z,oBAAS,GAtBnC,mBAsBG8Q,EAtBH,KAsBYC,EAtBZ,OAuB4B/Q,oBAAS,GAvBrC,mBAuBGkR,EAvBH,KAuBaF,EAvBb,OAwB4ChR,oBAAS,GAxBrD,mBAwBqBoR,GAxBrB,aAyB0DpR,oBAAS,GAzBnE,mBAyBG4Z,EAzBH,KAyB4BC,EAzB5B,OA0B0D7Z,oBAAS,GA1BnE,mBA0BGmR,EA1BH,KA0B4B2I,EA1B5B,OA2BoD9Z,oBAAS,GA3B7D,mBA2BGiR,EA3BH,KA2ByB8I,EA3BzB,QA4B4C/Z,mBAAS,IA5BrD,qBA4BGga,GA5BH,MA4BqBC,GA5BrB,SA6B8Bja,mBAAS,IA7BvC,qBA6BGka,GA7BH,MA6BcC,GA7Bd,SA8B4Bna,mBAAS,IA9BrC,qBA8BGoa,GA9BH,MA8BaC,GA9Bb,SA+BgDra,mBAAS,IA/BzD,qBA+BGsa,GA/BH,MA+BuBC,GA/BvB,SAgC8Cva,mBAAS,IAhCvD,qBAgCGwa,GAhCH,MAgCsBC,GAhCtB,SAiC2Cza,oBAAS,GAjCpD,qBAiCG0a,GAjCH,MAiCoBC,GAjCpB,SAkCoB3a,mBAAS,IAlC7B,qBAkCG1J,GAlCH,MAkCSygB,GAlCT,SAmCwB/W,mBAAS,IAnCjC,qBAmCG4a,GAnCH,MAmCWC,GAnCX,SAoCoC7a,oBAAS,GApC7C,qCAqCoCA,mBAAS,KArC7C,qBAqCG8a,GArCH,MAqCiBC,GArCjB,SAsC0C/a,mBAAS,IAtCnD,qCAwC0BA,mBAAS,KAxCnC,qBAwCGgb,GAxCH,MAwCYC,GAxCZ,SA4CArb,EAAe,GAAI,6BA5CnB,qBA2CFsb,IA3CE,gBAgDAtb,EAAe,GAAI,2BAhDnB,qBA+CFub,IA/CE,gBAoDAvb,EAAe,GAAI,+BApDnB,qCAwDAA,EAAe,GAAI,8BAxDnB,qBAuDFwb,IAvDE,gBA4DAxb,EAAe,GAAI,6BA5DnB,qBA2DFyb,IA3DE,aA8DJ9b,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBga,EAA0B,CAC9BrnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,OAJN,2CAAH,qDAUtB4nB,KACC,CAAClC,IAEJ7Z,qBAAU,WACR,GACEia,EAAoB1a,MACpB/M,OAAOC,KAAKwnB,GAAqBvnB,OAAS,EAC1C,CACA,IAAM6K,EAAS0c,EAAoBjmB,KAAKY,MACpConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC5BspB,EAAYze,GAIZ0c,EAAoBjmB,KAAKQ,OACzBylB,EAAoBjmB,KAAKQ,MAAzB,GAEe+I,EAAOoW,MACpB,SAAClgB,GAAD,OAAUA,EAAKU,KAAO8lB,EAAoBjmB,KAAKQ,MAAzB,QAGtBwnB,EAAS,CAAI/B,EAAoBjmB,KAAKQ,OAA7B,oBAAuCwnB,KAGlDR,GAAgBvB,EAAoBjmB,KAAKQ,MAAzB,IAIlBid,EAAYuK,MAEb,CAAC/B,EAAoB1a,OAExBS,qBAAU,WACR7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC/CS,QAAQC,IAAI,YAAaue,GAErB4J,KAAiB5J,EAAS,GAAGxd,KAC/BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,QAGrC,CAACA,IAEJ,IAAMuK,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,GAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,OANH,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,GAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,OANF,QACzBkoB,EADyB,SAYa,OAAxBA,EAAa5kB,OAC/B4Z,GAAwB,qBAExBuE,GAAsB,mDAfO,2CAAH,sDA8BxB3T,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mCAAAjC,EAAA,yDAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACd,OAAOA,EAAMT,MAEb,IAEEggB,EAAW,IAAIC,UAEZE,OAAO,OAAhB,UAAwBpS,EAAOzQ,YAA/B,aAAwB,EAAa8qB,QACrCpI,EAASG,OAAO,cAAepS,EAAO7N,aACtC8f,EAASG,OAAO,QAAS5V,KAAKC,UAAU2d,IACxCnI,EAASG,OAAO,QAASiH,IAAgBe,EAAU,GAAKA,EAAU,GAAK,IACvEnI,EAASG,OAAO,SAAUmG,IAC1BtG,EAASG,OAAO,OAAQqG,IACxBxG,EAASG,OAAO,YAAayG,IAE7B5nB,QAAQC,IAAI,qBAAsBymB,KAE9BA,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GApBhD,oBAqBX8pB,EAAyB,GAE3BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAACymB,GACbtC,GAAsBA,EAAkB,QACrCA,EAAkB,MAAUxmB,SAAS8oB,IACxCK,EAAuB3mB,KAAKsmB,SAMhCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GAjChD,kCAkCTipB,GAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,KAG/B4D,KAAM,CACJnD,MAAO4nB,KA1CI,qCA8CfA,EAAuB,IACvBA,EAAuB9pB,OAAS,GA/CjB,kCAiDTkpB,GAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,OAtDlB,yBA6DU6lB,EAAuB,CAClDnnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,KAG3B4D,KAAM,CACJtG,KAAI,UAAEyQ,EAAOzQ,YAAT,aAAE,EAAa8qB,OACnBloB,YAAa6N,EAAO7N,YACpBklB,aAAcrX,EAAOqX,aACrB3kB,MAAO0nB,EACP9nB,MAAO+mB,IAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD/nB,OAAQkmB,GACR9lB,KAAMgmB,GACN1B,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,IAAQA,GAAKrE,OAAS,EAAIqE,GAAKrD,KAAK,KAAO,GAErD+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,IAAUA,GAAO3oB,OAAS,EAAI2oB,GAAO3nB,KAAK,KAAO,GAC3DjC,KAAI,UAAEyQ,EAAO6W,cAAT,aAAE,EAAewD,OACrBloB,YAAa6N,EAAO8W,kBApFP,SA6Db0D,EA7Da,SA0F6B,OAA1BA,EAAejlB,QACnC4Z,GAAwB,qBACxBqI,GAAyB,GAKnBiD,EAAW,SAACxoB,GAChB,KAAKA,GAAOwd,GAAaA,EAAS,IAChC,MAAO,GAEP,GAAIA,GAAYA,EAASjf,OAAS,EAAG,CACnC,IAAMe,EAAOke,EAASgC,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACjD,GAAIV,EACF,OAAOA,EAAKe,QAMdmV,EAjBgB,WACpB,OAAOgQ,EAAa1mB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQqO,EAAO/N,IAgB9CyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAIiE,EAAahQ,GAA/BnX,OAAA,IAAAA,CAAA,CAClBf,KAAMirB,EAAc,MAAY,GAChCroB,YAAaqoB,EAAc,aAAmB,GAC9CvoB,GAAI0lB,EAAmB1lB,GACvBjC,IAAK2nB,EAAkB,IAAU,GACjCllB,KAAM8mB,IAEHiB,EAPe,CAQlBloB,MAAOmoB,EAASpB,OAEZsB,EAjC8C,uBAkC/ClD,EAAa/lB,MAAM,EAAG+V,IAlCyB,CAmClD8L,GAnCkD,aAoC/CkE,EAAa/lB,MAAM+V,EAAQ,KAEhCiQ,EAAgBiD,GAEhB1a,EAAQ2a,YAERrL,EAAY,IACZ+J,GAAgB,IAChBd,GAAoB,IACpBJ,GAA2B,GAC3BQ,GAAY,IACZI,GAAqB,KAErBtF,KAGFzT,EAAQC,eAAc,GA9IH,4CAAH,wDAiJlBpC,qBAAU,WACR,IAAK+Z,EAAgB,UAAe,CAClC,IAAM9a,EAAQ8a,EAAgB,MAC9B,GAAI9a,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAAChD,IAEJ,IAAMkD,GAAiB,SAACC,GACtB5C,EAA2B4C,GACvBA,GACFxC,GAAoB,KAelByC,GAAiB,SAAChsB,GACtBupB,GAAoBvpB,IAMtB,SAASisB,GAAUvoB,EAAKwoB,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc7oB,GAGvB,SAASqgB,GAAab,GA4CpB,MA3CiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,GAAU/I,GAAM,SAACwG,GACfC,GAAYD,GACZD,GAAavG,GACG,uCAAG,8BAAAnU,EAAA,6DACXiU,EAAW,IAAIC,UACZE,OAAO,OAAQD,GAFP,SAMC8F,EAA8B,CAC9CtnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,KAG3B4D,KAAMoc,IAZS,QAMXpV,EANW,SAgBS,OAAfA,EAAItH,QAEbikB,GAAW,GAAD,OAAIjnB,EAAOqK,SAAX,OAAqBC,EAAIpK,OACnC0c,GAAwB,2BAExBuE,GACE,uDAtBa,2CAAH,oDA2BhB+H,GACAvC,IAAoB,OAGf,EAIT,SAASwC,GAAsBvJ,GA0C7B,MAzCiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,GAAU/I,GAAM,SAACwG,GACfK,GAAqBL,GACrBG,GAAsB3G,GACN,uCAAG,8BAAAnU,EAAA,6DACXiU,EAAW,IAAIC,UACZE,OAAO,YAAaD,GAFZ,SAMC+F,EAAmC,CACnDvnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,KAG3B4D,KAAMoc,IAZS,QAMXpV,EANW,SAgBS,OAAfA,EAAItH,OACb4Z,GAAwB,+BAExBuE,GACE,4DApBa,2CAAH,oDAyBhB+H,GACAvC,IAAoB,OAGf,EAMTpb,qBAAU,WACR,GAAI6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAG,CACpE,IAAM+oB,EAAU5B,EAAmBllB,MAAQklB,EAAmBllB,KAE9DmmB,GAAYW,MAEb,IAEHzb,qBAAU,WACR,GAAI6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAG,CACpE,IAAM6B,EAAM,OAAGslB,QAAH,IAAGA,OAAH,EAAGA,EAAoBtlB,OAC/BA,IACFmmB,GAAoBnmB,GACpB+lB,GAA2B,OAG9B,CAACT,IAIJ,IAAMgE,GACJ,6BACG1C,GAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAqBJ,OAjBAoO,qBAAU,WACR,GAAI6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAG,CACpE,IAAM2mB,EACJQ,EAAmBR,UAAYQ,EAAmBR,SAASrmB,MAAM,KAEnEG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJO,EAAmB4C,IACnB5C,EAAmB4C,GAAnB,UACA5C,EAAmB4C,GAAnB,SAAkCzpB,MAAM,KAC1CwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAEzB,IAID,oCACE,kBAAC,IAAD,CACE/W,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERgY,EAFQ,GAGPA,GACFrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GAAK,CAC9CwmB,YACEW,EAAkB,IAClBA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC3BG,kBACES,EAAkB,IAClBA,EAAkB,GAAOV,iBACzBU,EAAkB,GAAOV,gBAC3BJ,OACEc,EAAkB,IAClBA,EAAkB,GAAOpoB,MACzBooB,EAAkB,GAAOpoB,KAC3BunB,cACEa,EAAkB,IAClBA,EAAkB,GAAOxlB,aACzBwlB,EAAkB,GAAOxlB,gBAI9B,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYG,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,sDACA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,kBACbD,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmX,EAAiB9a,MAAjB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmX,EAAiB9a,MAAjB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,wFACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmX,EAAiB9a,MAAjB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmX,EAAiB9a,MAAjB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd/B,YAAa,mBACbb,KAAK,cACLF,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACAmX,EAAiB9a,MAAjB,kBAEJzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACAmX,EAAiB9a,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAmX,EAAiB9a,MAAjB,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAmX,EAAiB9a,MAAjB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOqX,aACd7nB,YAAa,QACbD,KAAK,eACLP,KAAK,SACLK,QACGsR,EAAQ0W,cAAgB5W,EAAO4W,eAC9B3W,GACAmX,EAAiB9a,MAAjB,mBAEJzN,YACGqR,EAAQ0W,cAAgB5W,EAAO4W,eAC9B3W,GACAmX,EAAiB9a,MAAjB,mBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAIpB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,wBACb,kBAAC,KAAD,CACEsrB,QAAS7C,EACT0D,gBAAc,EACd1sB,SAAU4rB,KAEZ,yBAAKrrB,UAAU,sCACb,kDACA,wBAAIA,UAAU,6BAAd,0CAMFyoB,GACA,oCACE,wBAAIzoB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACEga,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,KAChB9S,YAAY,2BACZuZ,iBAAiB,WACjB1a,MAAOspB,GACPppB,SAAU8rB,GAIVrR,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC6N,GAAiBA,EAAcpnB,OAAS,GACvConB,EAAc7mB,KAAI,SAACiB,GACjB,OACE,kBAAC,GAAD,CAAQ/C,MAAO+C,EAASC,IACrBD,EAASzC,WAQxB,yBACEW,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MAAO,oCAEP,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAAcA,GACdL,UAAU,GAETgG,GACC,yBACE1d,IAAK0d,GACL3lB,IAAI,SACJ9C,MAAO,CAAEgT,MAAO,UAGhByY,IAMN,yBACEzrB,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,aACA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MAAO,yCAEP,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAAc0I,GACd/I,UAAU,GAEToG,GACC,yBACE9d,IAAK8d,GACL/lB,IAAI,SACJ9C,MAAO,CAAEgT,MAAO,UAGhByY,MAQV,yBAAKjsB,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETqoB,EAAoB3a,WACnB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGH0Q,EAAoB1a,MACnB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YAhsBhB,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAyrBsBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKnBonB,IACS,IAAV5R,IALF,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,aAShB,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SA2BN,yBAAKjkB,UAAU,mDACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmX,EAAiB9a,MAAjB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmX,EAAiB9a,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmX,EAAiB9a,MAAjB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmX,EAAiB9a,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmX,EAAiB9a,MAAjB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmX,EAAiB9a,MAAjB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmX,EAAiB9a,MAAjB,wBAIJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmX,EAAiB9a,MAAjB,wBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,cAEA,kBAAC,GAAD,CAEE4lB,QAASA,GACTzgB,KAAMA,KAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,iBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,GACTvkB,KAAMskB,UAQlB,yBACEjpB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAMsW,GAAyB,IACxCxoB,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAAS0W,EAAiBza,UAC1BpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UAqDvB2M,GA5CQ,SAAC,GAOV,IANZ5E,EAMW,EANXA,sBACAC,EAKW,EALXA,yBACAC,EAIW,EAJXA,aACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,mBACAC,EACW,EADXA,cAKA,OACE,kBAAC,KAAD,CACEwE,gBAAgB,EAChBlsB,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXvU,MAAM,gBACNuc,QAASkI,EACTzD,SAfiB,WACnB0D,GAAyB,IAevB6E,QAAQ,EACRrI,OAAO,SACP9Q,MAAO,OACPoZ,cAAe,CAEbC,SAAU,WAGZ,kBAAC,GAAD,CACEhF,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,cAAeA,M,UC5tCjB4E,GAAY,SAACjX,GAAD,OACjB,kBAAC,KAAD,eACCkX,MAAO,GACPvZ,MAAO,KACPK,OAAQ,IACRmZ,QAAQ,eACRtV,gBAAgB,UAChBuV,gBAAgB,WACZpX,GAEJ,0BAAMoH,EAAE,KAAKE,EAAE,MAAM+P,GAAG,IAAIC,GAAG,IAAI3Z,MAAM,KAAKK,OAAO,OACrD,0BAAMoJ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACvD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,IAAIC,GAAG,IAAI3Z,MAAM,KAAKK,OAAO,OACrD,0BAAMoJ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACvD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,4BAAQ+I,GAAG,OAAOC,GAAG,MAAMuQ,EAAE,OAC7B,0BAAMnQ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,IAAIC,GAAG,IAAI3Z,MAAM,KAAKK,OAAO,OACrD,0BAAMoJ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACvD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,4BAAQ+I,GAAG,OAAOC,GAAG,MAAMuQ,EAAE,OAC7B,0BAAMnQ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,IAAIC,GAAG,IAAI3Z,MAAM,KAAKK,OAAO,OACrD,0BAAMoJ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACvD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,4BAAQ+I,GAAG,OAAOC,GAAG,MAAMuQ,EAAE,OAC7B,0BAAMnQ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,IAAIC,GAAG,IAAI3Z,MAAM,KAAKK,OAAO,OACrD,0BAAMoJ,EAAE,KAAKE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACvD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACxD,4BAAQ+I,GAAG,OAAOC,GAAG,MAAMuQ,EAAE,OAC7B,0BAAMnQ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,MAAME,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,MAAMK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,0BAAMoJ,EAAE,OAAOE,EAAE,MAAM+P,GAAG,KAAKC,GAAG,KAAK3Z,MAAM,KAAKK,OAAO,OACzD,4BAAQ+I,GAAG,KAAKC,GAAG,KAAKuQ,EAAE,OAC1B,0BAAMnQ,EAAE,KAAKE,EAAE,KAAK+P,GAAG,IAAIC,GAAG,IAAI3Z,MAAM,MAAMK,OAAO,OACrD,4BAAQ+I,GAAG,OAAOC,GAAG,KAAKuQ,EAAE,OAC5B,0BAAMnQ,EAAE,OAAOE,EAAE,KAAK+P,GAAG,IAAIC,GAAG,IAAI3Z,MAAM,MAAMK,OAAO,MACvD,4BAAQ+I,GAAG,KAAKC,GAAG,KAAKuQ,EAAE,SAI5BN,GAAUO,SAAW,CACpBxtB,KAAM,eACNytB,OAAQ,UACR7qB,YAAa,sBACb8qB,SAAU,aAGIT,UCjDPpP,GAAWC,KAAXD,OACA8P,GAAWvuB,IAAXuuB,OA0BFC,GAAU,SAAC,GAMI,IALnBrrB,EAKkB,EALlBA,KACA4lB,EAIkB,EAJlBA,gBACAlS,EAGkB,EAHlBA,QACAvD,EAEkB,EAFlBA,MACAmb,EACkB,EADlBA,MAEAnsB,QAAQC,IAAI,oBAAqBksB,GADf,MAEY7e,oBAAS,GAFrB,mBAEX8Q,EAFW,KAEFC,EAFE,OAGwC/Q,oBAAS,GAHjD,mBAGX8e,EAHW,KAGYC,EAHZ,OAIuCnf,EACvD,GACA,kBANgB,mBAIUof,GAJV,WAUZC,EAAoB,uCAAG,WAAOvrB,GAAP,iBAAA+L,EAAA,sEACKuf,EAA0B,CACxD5sB,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrBwrB,EADqB,SAU2B,OAA7BA,EAAkBloB,SAlDd+Q,EAmDH,mBAlD5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAgDnCkX,EAAkB5rB,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KAC1DylB,EAAgBgG,IAbS,iCAxCC,IAACpX,IAwCF,OAAH,sDAiBpBmU,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,OACJ8b,EAAO9b,OAAS8b,EAAO3b,KAC1B2b,EAAO3b,KACF,IAIhB,OADAxB,QAAQC,IAAI,UAAWksB,GAErB,oCACE,kBAAC,KAAD,CACEltB,MAAO,CACLytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UACE,+FAOJ6G,KAAK,QAEL8D,WAAYhc,EACZic,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL/d,MAAO,CACLsW,MAAO,qBAKb,kBAAC,GAAD,CACE1T,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,0BAAgCya,EAAOnc,KACvCqrB,EAAyBlP,KAG3B,yBAAKnT,IAAKwf,EAASrM,GAASpb,IAAI,UAKxC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,0BAAgCya,EAAOnc,KAEvCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,gBACNob,UAAU,WACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,UACNob,UAAU,eACVle,IAAI,KACJN,UAAU,yBA8BXyS,GAAS,gBAAiBF,IACzB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,iBAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAIN,kBAAC,KAAD,CACEjJ,UAAW,kBAAM2I,EAAqBpP,EAAOnc,KAC7Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aASb6I,GACC,kBAACU,GAAD,CACEpG,mBAAoB0F,EACpB3F,gBAAiBA,EACjBD,aAAc3lB,EACd0lB,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvBuI,cAAewF,MAgKVra,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,CAA+Bib,cApJzB,SAAC,GAA+B,IAA7BxY,EAA4B,EAA5BA,QAASvD,EAAmB,EAAnBA,MAAmB,EACD9D,EAC/C,GACA,gBAHgD,mBAC3C8f,EAD2C,KAC5BC,EAD4B,OAKV3f,mBAAS,IALC,mBAK3CkZ,EAL2C,KAK7BC,EAL6B,OAMRnZ,mBAAS,IAND,mBAM3CqZ,EAN2C,KAM5BuG,EAN4B,KAQlDrgB,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACKkgB,EAAwB,CAC/CvtB,WAAY,CACVC,OAAQ,CACNwtB,eAAe,EACfC,mBAAmB,EACnBrY,SAAU,QACVC,eAAgB,KAChBhK,YAAa,QARC,OACdqiB,EADc,OAapB5G,EAAgB4G,GAEhBH,EAAiBG,GAfG,2CAAH,qDAiBnBC,KACC,IA3B+C,MA6BQhgB,oBAAS,GA7BjB,mBA6B3CgZ,EA7B2C,KA6BpBC,EA7BoB,KAiElD,OAFAvmB,QAAQC,IAAI,iBAAkB0mB,GAG5B,oCAIE,yBAAKloB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,cAEA,kBAACwtB,GAAD,CACEsB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,sBACZjB,SAAU,SAAC8R,GAAD,OAtCD,SAAChS,GACpB,GAAIgvB,EAAcnsB,KAAKtB,OAAS,EAAG,CACjC,IAAMktB,EAAkBO,EAAcnsB,KAAKuf,QAAO,SAAC9f,GAAU,IAAD,EAC1D,QAAIA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,mBAIzCxY,EAAK4B,aACL5B,EAAK4B,YAAY3C,OAAS,GAC1Be,EAAK4B,YAAY,KAFjB,UAGA5B,EAAK4B,YAAY,GAAjB,YAHA,aAGA,EACI4W,cACD5Y,SAFH,OAEYlC,QAFZ,IAEYA,OAFZ,EAEYA,EAAO8a,oBAMvB2N,EAAgBgG,IAoBSe,CAAaxd,EAAE/F,OAAOjM,WAI1CkT,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,WACPsW,GAAyB,KAL7B,YAaJ,yBAAK9nB,UAAU,uCASf,yBAAKA,UAAU,uCACZuuB,EAAc5gB,MAAQoa,EAAajnB,OAAS,GAC3C,kBAAC,GAAD,CACEyR,MAAOA,EACPuD,QAASA,EACTkS,gBAAiBA,EACjB5lB,KAAM2lB,EACN2F,MAAOxF,IAGVqG,EAAc7gB,WAAa,kBAACshB,GAAD,MAE3BT,EAAc5gB,QAAUoa,EAAajnB,OAAS,IAC7C,yBACEN,MAAO,CACL4W,UAAW,SAGb,kBAAC,GAAD,CAAOhU,MAAM,yBAMpBmrB,EAAc5gB,MACb,kBAAC,GAAD,CACEka,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,EACjBE,cAAeA,SClXnBtY,GAAmBC,MAAaC,MAAM,IAYtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACP+kB,aAAc,MAGRnP,GAAWC,KAAXD,OA2rBOiU,GAjrBQ,SAAC,GAMV,IALZ5E,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACAC,EAGW,EAHXA,aACAC,EAEW,EAFXA,gBACAE,EACW,EADXA,cACW,EACwCzZ,EACjD,GACA,cACA,QAJS,mBACJ0Z,EADI,KACcC,EADd,OAMmBvZ,oBAAS,GAN5B,mBAMJ8Q,EANI,KAMKC,EANL,OAOqB/Q,oBAAS,GAP9B,mBAOJkR,EAPI,KAOMF,EAPN,OAQqChR,oBAAS,GAR9C,mBAQcoR,GARd,aASmDpR,oBAAS,GAT5D,mBASJ4Z,EATI,KASqBC,EATrB,OAUmD7Z,oBAAS,GAV5D,mBAUJmR,EAVI,KAUqB2I,EAVrB,OAW6C9Z,oBAAS,GAXtD,mBAWJiR,EAXI,KAWkB8I,EAXlB,OAY6B/Z,mBAAS,IAZtC,mBAYJ8a,EAZI,KAYUC,EAZV,OAaqC/a,mBAAS,IAb9C,mBAaJga,EAbI,KAacC,EAbd,OAcqBja,mBAAS,IAd9B,mBAcJoa,EAdI,KAcMC,EAdN,QAeuCra,mBAAS,IAfhD,qBAeJwa,GAfI,MAeeC,GAff,SAgBoCza,oBAAS,GAhB7C,qBAgBJ0a,GAhBI,MAgBaC,GAhBb,SAiBuB3a,mBAAS,IAjBhC,qBAiBJka,GAjBI,MAiBOC,GAjBP,SAkByCna,mBAAS,IAlBlD,qBAkBJsa,GAlBI,MAkBgBC,GAlBhB,SAmBava,mBAAS,IAnBtB,qBAmBJ1J,GAnBI,MAmBEygB,GAnBF,SAoBiB/W,mBAAS,IApB1B,qBAoBJ4a,GApBI,MAoBIC,GApBJ,MAsBLrZ,GAAY,uCAAG,WAAOC,EAAaC,GAApB,6BAAAjC,EAAA,6DAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GAEEggB,EAAW,IAAIC,SAEfqI,EAAK,CACTxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,GAAO3nB,KAAK,KACtBjC,KAAI,UAAEyQ,EAAO6W,cAAT,aAAE,EAAewD,OACrBloB,YAAa6N,EAAO8W,eAGtB7E,EAASG,OAAO,OAAhB,UAAwBpS,EAAOzQ,YAA/B,aAAwB,EAAa8qB,QACrCpI,EAASG,OAAO,cAAepS,EAAO7N,aACtC8f,EAASG,OAAO,QAAS5V,KAAKC,UAAU2d,IACxCnI,EAASG,OAAO,QAASiH,GAAgBe,EAAU,GAAKA,EAAU,GAAK,IACvEnI,EAASG,OAAO,SAAUmG,GAC1BtG,EAASG,OAAO,OAAQqG,IACxBxG,EAASG,OAAO,YAAayG,IAC7B5G,EAASG,OAAO,YAAapS,EAAO+W,WACpC9E,EAASG,OAAO,eAAgBpS,EAAOqX,cACvCpF,EAASG,OAAO,kBAAmBpS,EAAOiX,iBAC1ChF,EAASG,OAAO,WAAYvd,IAEtB8pB,EAASniB,KAAKC,UAAU8d,IACxBqE,EAAa,IAAI1M,UACZE,OAAO,KAAMuM,GAExB1M,EAASG,OAAO,KAAMwM,EAAWC,IAAI,OAErC5tB,QAAQC,IAAI,qBAAZ,eACK+gB,IArCc,UAyCU6F,EAAuB,CAClDjiB,KAAMoc,IA1CW,SAyCbuI,EAzCa,SA8C6B,OAA1BA,EAAejlB,QArHR+Q,EAsHH,oBArH5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAmHzCgR,GAAyB,GAEzBE,EAAgB,CAAC,aAEbzlB,GAAIuoB,EAAc,KAAW,GAC7BxqB,IAAKwqB,EAAc,KAAW,GAC9BjrB,KAAMirB,EAAc,MAAY,GAChCroB,YAAaqoB,EAAc,aAAmB,GAC9CloB,MAAOkoB,EAAc,OAAa,IAE/BA,IARQ,oBAUV/C,KAGLxX,EAAQ2a,YAERrL,EAAY,IACZ+J,EAAgB,IAChBd,EAAoB,IACpBJ,GAA2B,GAC3BQ,EAAY,IACZI,GAAqB,KAErBtF,KAGFzT,EAAQC,eAAc,GA3EH,kCAvES,IAACoG,IAuEV,OAAH,wDA8ElBrV,QAAQC,IAAI,mBAAoB2mB,GAEhC/Z,qBAAU,WACR,IAAK+Z,EAAgB,UAAe,CAClC,IAAM9a,EAAQ8a,EAAgB,MAC9B,GAAI9a,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAAChD,IAEJ,IAAMkD,GAAiB,SAACC,GACtB5C,EAA2B4C,IAGvB8D,GAAe,SAAC7d,GACpBuW,GAAyB,IAkCrByD,GAAiB,SAAChsB,GACtBupB,EAAoBvpB,IAGtB,SAASisB,GAAUvoB,EAAKwoB,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc7oB,GAGvB,SAASqgB,GAAab,GAgBpB,MAfiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,GAAU/I,GAAM,SAACwG,GACfC,EAAYD,GACZD,GAAavG,GACb+G,IAAoB,OAGf,EAGT,SAASwC,GAAsBvJ,GAgB7B,MAfiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,GAAU/I,GAAM,SAACwG,GACfK,GAAqBL,GACrBG,GAAsB3G,GACtB+G,IAAoB,OAGf,EAMT,IAAMyC,GACJ,6BACG1C,GAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAIJ,OACE,kBAAC,IAAD,CACE2Q,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,mBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,kBAAC5tB,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,GACbD,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBmX,EAAiB9a,MAAjB,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBmX,EAAiB9a,MAAjB,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,GACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgBmX,EAAiB9a,MAAjB,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgBmX,EAAiB9a,MAAjB,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd/B,YAAa,mBACbb,KAAK,cACLF,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACAmX,EAAiB9a,MAAjB,kBAEJzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACAmX,EAAiB9a,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAmX,EAAiB9a,MAAjB,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAmX,EAAiB9a,MAAjB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOqX,aACd7nB,YAAa,QACbD,KAAK,eACLP,KAAK,SACLK,QACGsR,EAAQ0W,cAAgB5W,EAAO4W,eAC9B3W,GACAmX,EAAiB9a,MAAjB,mBAEJzN,YACGqR,EAAQ0W,cAAgB5W,EAAO4W,eAC9B3W,GACAmX,EAAiB9a,MAAjB,mBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAIpB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,wBACb,kBAAC,KAAD,CACEsrB,QAAS7C,EACT0D,gBAAc,EACd1sB,SAAU4rB,KAEZ,yBAAKrrB,UAAU,sCACb,kDACA,wBAAIA,UAAU,6BAAd,0CAMFyoB,GACA,oCACE,wBAAIzoB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACEga,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,KAChB9S,YAAY,2BACZuZ,iBAAiB,WACjBxa,SAAU8rB,GAIVrR,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC6N,EAAcpnB,OAAS,GACtBonB,EAAc7mB,KAAI,SAACiB,GACjB,OACE,kBAAC,GAAD,CAAQ/C,MAAO+C,EAASC,IAAKD,EAASzC,WAOlD,yBACEW,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MAAO,oCAEP,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAAcA,GACdL,UAAU,GAETgG,EACC,yBAAK1d,IAAK0d,EAAU3lB,IAAI,SAAS9C,MAAO,CAAEgT,MAAO,UAEjDyY,IAIJ,yBACEzrB,MAAO,CACL4W,UAAW,UAGf,yBAAKpX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,aACA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MAAO,yCAEP,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAAc0I,GACd/I,UAAU,GAEToG,GACC,yBAAK9d,IAAK8d,GAAmB/lB,IAAI,SAAS9C,MAAO,CAAEgT,MAAO,UAE1DyY,IAIJ,yBACEzrB,MAAO,CACL4W,UAAW,UAIf,yBACEpX,UAAU,gCACVQ,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,UACA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,kBAAMoY,EAAgB5mB,EAAMT,MAErC,yBAAKgJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBAzXJ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAiXuBC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,IAAiB3mB,EAAMT,KAKrBonB,GACS,IAAV5R,IALA,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,UAMR,kBAAC/nB,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgBmX,EAAiB9a,MAAjB,gBAEpBzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgBmX,EAAiB9a,MAAjB,gBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmX,EAAiB9a,MAAjB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmX,EAAiB9a,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmX,EAAiB9a,MAAjB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmX,EAAiB9a,MAAjB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAmX,EAAiB9a,MAAjB,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAmX,EAAiB9a,MAAjB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASA,GACTzgB,KAAMA,KAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,GACTvkB,KAAMskB,MAIV,kBAAC,GAAD,CACE7J,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,S,IChvBTjQ,MAAaC,MAAM,CAC3CjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0C,QC4BhE6P,GAAmBC,MAAaC,MAAM,IAOtC2P,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACP+kB,aAAc,MAGRnP,GAAWC,KAAXD,OAUFoP,GAAsB,SAAC,GAKtB,IAJLE,EAII,EAJJA,yBACAC,EAGI,EAHJA,aACAE,EAEI,EAFJA,mBACAoH,EACI,EADJA,sBACI,EAC+C5gB,EACjD,GACA,kBAHE,mBACG0Z,EADH,KACqBC,EADrB,OAKqD3Z,EACvD,GACA,kBAPE,mBAKG4Z,EALH,KAKwBC,EALxB,OAaA7Z,EAAe,GAAI,qBAAsB,QAbzC,mBAYF8Z,GAZE,aAmBA9Z,EAAe,GAAI,0BAA2B,QAnB9C,mBAkBF+Z,GAlBE,aAsB0B3Z,oBAAS,GAtBnC,mBAsBG8Q,EAtBH,KAsBYC,EAtBZ,OAuB4B/Q,oBAAS,GAvBrC,mBAuBGkR,EAvBH,KAuBaF,EAvBb,OAwB4ChR,oBAAS,GAxBrD,mBAwBqBoR,GAxBrB,aAyB0DpR,oBAAS,GAzBnE,mBAyBG4Z,EAzBH,KAyB4BC,EAzB5B,OA0B0D7Z,oBAAS,GA1BnE,mBA0BGmR,EA1BH,KA0B4B2I,EA1B5B,OA2BoD9Z,oBAAS,GA3B7D,mBA2BGiR,EA3BH,KA2ByB8I,EA3BzB,OA4B4C/Z,mBAAS,IA5BrD,oBA4BGga,GA5BH,MA4BqBC,GA5BrB,SA6B4Bja,mBAAS,IA7BrC,qBA6BGoa,GA7BH,MA6BaC,GA7Bb,SA8B2Cra,oBAAS,GA9BpD,qBA8BG0a,GA9BH,MA8BoBC,GA9BpB,SA+B8B3a,mBAAS,IA/BvC,qBA+BGka,GA/BH,MA+BcC,GA/Bd,SAgCgDna,mBAAS,IAhCzD,qBAgCGsa,GAhCH,MAgCuBC,GAhCvB,SAiC8Cva,mBAAS,IAjCvD,qBAiCGwa,GAjCH,MAiCsBC,GAjCtB,SAkCoBza,mBAAS,IAlC7B,qBAkCG1J,GAlCH,MAkCSygB,GAlCT,SAmCwB/W,mBAAS,IAnCjC,qBAmCG4a,GAnCH,MAmCWC,GAnCX,SAoCoC7a,oBAAS,GApC7C,qCAqCoCA,mBAAS,KArC7C,qBAqCG8a,GArCH,MAqCiBC,GArCjB,SAsC0C/a,mBAAS,IAtCnD,qCAuC0BA,mBAAS,KAvCnC,qBAuCGgb,GAvCH,MAuCYC,GAvCZ,SA4CArb,EAAe,GAAI,6BA5CnB,qBA2CFsb,IA3CE,gBAgDAtb,EAAe,GAAI,2BAhDnB,qBA+CFub,IA/CE,gBAoDAvb,EAAe,GAAI,+BApDnB,qCAwDAA,EAAe,GAAI,8BAxDnB,qBAuDFwb,IAvDE,gBA4DAxb,EAAe,GAAI,6BA5DnB,qBA2DFyb,IA3DE,aA8DJ9b,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBga,EAA0B,CAC9BrnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,OAJN,2CAAH,qDAUtB4nB,KACC,CAAClC,IAEJ7Z,qBAAU,WACR,GACEia,EAAoB1a,MACpB/M,OAAOC,KAAKwnB,GAAqBvnB,OAAS,EAC1C,CACA,IAAM6K,EAAS0c,EAAoBjmB,KAAKY,MACpConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC5BspB,EAAYze,GAIZ0c,EAAoBjmB,KAAKQ,OACzBylB,EAAoBjmB,KAAKQ,MAAzB,GAEe+I,EAAOoW,MACpB,SAAClgB,GAAD,OAAUA,EAAKU,KAAO8lB,EAAoBjmB,KAAKQ,MAAzB,QAGtBwnB,EAAS,CAAI/B,EAAoBjmB,KAAKQ,OAA7B,oBAAuCwnB,KAGlDR,GAAgBvB,EAAoBjmB,KAAKQ,MAAzB,IAIlBid,EAAYuK,MAEb,CAAC/B,EAAoB1a,OAExBS,qBAAU,WACR7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC/CS,QAAQC,IAAI,YAAaue,GAErB4J,KAAiB5J,EAAS,GAAGxd,KAC/BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,QAGrC,CAACA,IAEJ,IAAMuK,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,GAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,OANH,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,GAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,OANF,QACzBkoB,EADyB,SAYa,OAAxBA,EAAa5kB,OAC/B4Z,GAAwB,qBAExBuE,GAAsB,mDAfO,2CAAH,sDA8BxB3T,GAAY,uCAAG,WAAOC,EAAaC,GAApB,2BAAAjC,EAAA,yDAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACd,OAAOA,EAAMT,MAEb,IAEEggB,EAAW,IAAIC,UAEZE,OAAO,OAAhB,UAAwBpS,EAAOzQ,YAA/B,aAAwB,EAAa8qB,QACrCpI,EAASG,OAAO,cAAepS,EAAO7N,aACtC8f,EAASG,OAAO,QAAS5V,KAAKC,UAAU2d,IACxCnI,EAASG,OAAO,QAASiH,IAAgBe,EAAU,GAAKA,EAAU,GAAK,IACvEnI,EAASG,OAAO,SAAUmG,IAC1BtG,EAASG,OAAO,OAAQqG,IACxBxG,EAASG,OAAO,YAAayG,IAE7B5nB,QAAQC,IAAI,qBAAsBymB,KAE9BA,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GApBhD,oBAqBX8pB,EAAyB,GAE3BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAACymB,GACbtC,GAAsBA,EAAkB,QACrCA,EAAkB,MAAUxmB,SAAS8oB,IACxCK,EAAuB3mB,KAAKsmB,SAMhCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GAjChD,kCAkCTipB,GAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,KAG/B4D,KAAM,CACJnD,MAAO4nB,KA1CI,qCA8CfA,EAAuB,IACvBA,EAAuB9pB,OAAS,GA/CjB,kCAiDTkpB,GAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,WACZtjB,OAAQ+gB,EAAmB1lB,OAtDlB,yBA6DU6lB,EAAuB,CAClDnnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,KAG3B4D,KAAM,CACJtG,KAAI,UAAEyQ,EAAOzQ,YAAT,aAAE,EAAa8qB,OACnBloB,YAAa6N,EAAO7N,YACpBklB,aAAcrX,EAAOqX,aACrB3kB,MAAO0nB,EACP9nB,MAAO+mB,IAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD/nB,OAAQkmB,GACR9lB,KAAMgmB,GACN1B,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,IAAQA,GAAKrE,OAAS,EAAIqE,GAAKrD,KAAK,KAAO,GACrD+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,IAAUA,GAAO3oB,OAAS,EAAI2oB,GAAO3nB,KAAK,KAAO,GAC3DjC,KAAI,UAAEyQ,EAAO6W,cAAT,aAAE,EAAewD,OACrBloB,YAAa6N,EAAO8W,kBAnFP,SA6Db0D,EA7Da,SAyF6B,OAA1BA,EAAejlB,QACnC4Z,GAAwB,qBACxBqI,GAAyB,GAEzBuH,EAAsB,aACpBxvB,KAAMirB,EAAc,MAAY,GAChCroB,YAAaqoB,EAAc,aAAmB,GAC9CloB,MAAOqlB,EAAkB,OAAa,GACtC1lB,GAAI0lB,EAAmB1lB,GACvBjC,IAAK2nB,EAAkB,IAAU,GACjCllB,KAAM8mB,IAEHiB,IAGLva,EAAQ2a,aAQRlH,KAGFzT,EAAQC,eAAc,GAnHH,4CAAH,wDAsHlBpC,qBAAU,WACR,IAAK+Z,EAAgB,UAAe,CAClC,IAAM9a,EAAQ8a,EAAgB,MAC9B,GAAI9a,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAAChD,IAEJ,IAAMkD,GAAiB,SAACC,GACtB5C,EAA2B4C,GACvBA,GACFxC,GAAoB,KAclByC,GAAiB,SAAChsB,GACtBupB,GAAoBvpB,IAGtB,SAASisB,GAAUvoB,EAAKwoB,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc7oB,GAGvB,SAASqgB,GAAab,GA2CpB,MA1CiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,GAAU/I,GAAM,SAACwG,GACfC,GAAYD,GACZD,GAAavG,GACG,uCAAG,8BAAAnU,EAAA,6DACXiU,EAAW,IAAIC,UACZE,OAAO,OAAQD,GAFP,SAMC8F,EAA8B,CAC9CtnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,KAG3B4D,KAAMoc,IAZS,QAMXpV,EANW,SAgBS,OAAfA,EAAItH,QACbikB,GAAW,GAAD,OAAIjnB,EAAOqK,SAAX,OAAqBC,EAAIpK,OACnC0c,GAAwB,2BAExBuE,GACE,uDArBa,2CAAH,oDA0BhB+H,GACAvC,IAAoB,OAGf,EAMT,SAASwC,GAAsBvJ,GA0C7B,MAzCiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,GAAU/I,GAAM,SAACwG,GACfK,GAAqBL,GACrBG,GAAsB3G,GACN,uCAAG,8BAAAnU,EAAA,6DACXiU,EAAW,IAAIC,UACZE,OAAO,YAAaD,GAFZ,SAMC+F,EAAmC,CACnDvnB,WAAY,CACVE,aAAc,CACZoB,GAAI0lB,EAAmB1lB,KAG3B4D,KAAMoc,IAZS,QAMXpV,EANW,SAgBS,OAAfA,EAAItH,OACb4Z,GAAwB,+BAExBuE,GACE,4DApBa,2CAAH,oDAyBhB+H,GACAvC,IAAoB,OAGf,EAOTpb,qBAAU,WACR,GAAI6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAG,CACpE,IAAM+oB,EAAU5B,EAAmBllB,MAAQklB,EAAmBllB,KAC9DmmB,GAAYW,MAEb,CAAC5B,IAEJ7Z,qBAAU,WACR,GAAI6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAG,CACpE,IAAM6B,EAAM,OAAGslB,QAAH,IAAGA,OAAH,EAAGA,EAAoBtlB,OAC/BA,IACFmmB,GAAoBnmB,GACpB+lB,GAA2B,OAG9B,CAACT,IAKJ7Z,qBAAU,WACR,GAAI6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAG,CACpE,IAAMuoB,EAAoBpB,EAAmBnlB,WAAamlB,EAAmBnlB,UAC7EwmB,GAAqBD,MAEtB,IAIH,IAAM4C,GACJ,6BACG1C,GAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAoBJ,OAhBAoO,qBAAU,WACR,GAAI6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAG,CACpE,IAAM2mB,EACJQ,EAAmBR,UAAYQ,EAAmBR,SAASrmB,MAAM,KAEnEG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJO,EAAmB4C,IACnB5C,EAAmB4C,GAAnB,UACA5C,EAAmB4C,GAAnB,SAAkCzpB,MAAM,KAC1CwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAEzB,IAGD,oCACE,kBAAC,IAAD,CACE/W,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERgY,EAFQ,GAGPA,GACFrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GAAK,CAC9CwmB,YACEW,EAAkB,IAClBA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC3BG,kBACES,EAAkB,IAClBA,EAAkB,GAAOV,iBACzBU,EAAkB,GAAOV,gBAC3BJ,OACEc,EAAkB,IAClBA,EAAkB,GAAOpoB,MACzBooB,EAAkB,GAAOpoB,KAC3BunB,cACEa,EAAkB,IAClBA,EAAkB,GAAOxlB,aACzBwlB,EAAkB,GAAOxlB,gBAI9B,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYG,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,sDACA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,GACbD,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmX,EAAiB9a,MAAjB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmX,EAAiB9a,MAAjB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,GACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmX,EAAiB9a,MAAjB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmX,EAAiB9a,MAAjB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd/B,YAAa,mBACbb,KAAK,cACLF,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACAmX,EAAiB9a,MAAjB,kBAEJzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACAmX,EAAiB9a,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAmX,EAAiB9a,MAAjB,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAmX,EAAiB9a,MAAjB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOqX,aACd7nB,YAAa,QACbD,KAAK,eACLP,KAAK,SACLK,QACGsR,EAAQ0W,cAAgB5W,EAAO4W,eAC9B3W,GACAmX,EAAiB9a,MAAjB,mBAEJzN,YACGqR,EAAQ0W,cAAgB5W,EAAO4W,eAC9B3W,GACAmX,EAAiB9a,MAAjB,mBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAIpB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,wBACb,kBAAC,KAAD,CACEsrB,QAAS7C,EACT0D,gBAAc,EACd1sB,SAAU4rB,KAEZ,yBAAKrrB,UAAU,sCACb,kDACA,wBAAIA,UAAU,6BAAd,0CAMFyoB,GACA,oCACE,wBAAIzoB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACEga,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,KAChB9S,YAAY,2BACZuZ,iBAAiB,WACjBxa,SAAU8rB,GACVhsB,MAAOspB,GAIP3O,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC0N,EAAajnB,OAAS,GACrBinB,EAAa1mB,KAAI,SAACiB,GAChB,OACE,kBAAC,GAAD,CAAQ/C,MAAO+C,EAASC,IACrBD,EAASzC,WAQxB,yBACEW,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MAAO,oCAEP,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAAcA,GACdL,UAAU,GAETgG,GACC,yBACE1d,IAAK0d,GACL3lB,IAAI,SACJ9C,MAAO,CAAEgT,MAAO,UAGhByY,IAKN,yBACEzrB,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,aACA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MAAO,yCAEP,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAAc0I,GACd/I,UAAU,GAEToG,GACC,yBACE9d,IAAK8d,GACL/lB,IAAI,SACJ9C,MAAO,CAAEgT,MAAO,UAGhByY,MAUV,yBAAKjsB,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETqoB,EAAoB3a,WACnB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGH0Q,EAAoB1a,MACnB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YA5qBhB,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAqqBsBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKnBonB,IACS,IAAV5R,IALF,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,aAShB,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SA2BN,yBAAKjkB,UAAU,mDACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmX,EAAiB9a,MAAjB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmX,EAAiB9a,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmX,EAAiB9a,MAAjB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmX,EAAiB9a,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmX,EAAiB9a,MAAjB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmX,EAAiB9a,MAAjB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmX,EAAiB9a,MAAjB,wBAIJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmX,EAAiB9a,MAAjB,wBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,cAEA,kBAAC,GAAD,CAEE4lB,QAASA,GACTzgB,KAAMA,KAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,iBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,GACTvkB,KAAMskB,UAQlB,yBACEjpB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAMsW,GAAyB,IACxCxoB,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAAS0W,EAAiBza,UAC1BpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UAkDvB2M,GAzCQ,SAAC,GAMV,IALZ3E,EAKW,EALXA,yBACAD,EAIW,EAJXA,sBACAE,EAGW,EAHXA,aACAE,EAEW,EAFXA,mBACAoH,EACW,EADXA,sBAKA,OACE,kBAAC,KAAD,CACE3C,gBAAgB,EAChBlsB,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXvU,MAAM,gBACNuc,QAASkI,EACTzD,SAfiB,WACnB0D,GAAyB,IAevB6E,QAAQ,EACRrI,OAAO,SACP9Q,MAAO,OACPoZ,cAAe,CAEbC,SAAU,WAGZ,kBAAC,GAAD,CACE/E,yBAA0BA,EAC1BC,aAAcA,EACdE,mBAAoBA,EACpBoH,sBAAuBA,MC1qCvB3R,GAAwBC,KAAxBD,OAicOrK,IAjciBsK,KAAhBC,YACG0R,IAAX9B,OAgcOna,aALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EA1bQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACc9D,EACvD,GACA,kBAHyC,mBACpC4Z,EADoC,KACfC,EADe,OAKkB7Z,EAC3D,GACA,oBAPyC,mBAKpC8gB,EALoC,KAKbC,EALa,OAUM/gB,EAC/C,GACA,gBAZyC,mBAUrB+f,GAVqB,aAcH3f,mBAAS,IAdN,mBAcpCkZ,EAdoC,KActBC,EAdsB,KAgB3C5Z,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACKkgB,EAAwB,CAC/CvtB,WAAY,CACVC,OAAQ,CACNwtB,eAAe,EACfC,mBAAmB,EACnBrY,SAAU,QACVC,eAAgB,KAChBhK,YAAa,QARC,OACdqiB,EADc,OAapB5G,EAAgB4G,GAbI,2CAAH,qDAenBC,KACC,IAEH,IAAM3tB,EAASuuB,eACT3Z,EAAUC,eACV2Z,EAAaxuB,EAAM,GArCkB,EAsCW2N,oBAAS,GAtCpB,mBAsCpC8gB,EAtCoC,KAsCfC,EAtCe,OAuCC/gB,mBAAS,IAvCV,mBAuCpCghB,EAvCoC,KAuCpBC,EAvCoB,KAyC3C1hB,qBAAU,YACe,uCAAG,4BAAAE,EAAA,sEACYga,EAA0B,CAC5DrnB,WAAY,CACVE,aAAc,CACZoB,GAAImtB,MAJc,QAClBK,EADkB,SAYtBD,EAAkBC,GAZI,2CAAH,qDAgBvBC,KACC,CAACN,IAEJthB,qBAAU,YACiB,uCAAG,sBAAAE,EAAA,sEACpBkhB,EAA4B,CAChCvuB,WAAY,CACVE,aAAc,CACZoB,GAAImtB,MAJgB,2CAAH,qDAUzBO,KACC,CAACP,IAEJnuB,QAAQC,IAAI,wBAAyB+tB,GAErChuB,QAAQC,IAAI,cAAeN,GAE3B,IA0BMgvB,EACJ7H,EAAoB1a,MAAQkiB,GAAkBA,EAAc,MA3BnC,SAACM,GAC1B,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9uB,KAAI,SAACQ,GAAD,OAAUA,EAAKe,SAC/B,IAAMwtB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAiBnB,OAfAH,EAAKrsB,SAAQ,SAACjC,EAAMkW,GACdsY,EAAa,GACXD,EAAQE,GACVF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzuB,IAC9CuuB,EAAQE,GAAgB,CAACzuB,GAEhCwuB,GAA0B,EAC1BC,GAA8B,IAE9BD,EAAa,EACbC,EAAe,EACf/uB,QAAQC,IAAI,aAAc6uB,OAIvBD,EAKHG,CAAmBV,EAAc,OACjC,GAEN,OACE,yBAAK7vB,UAAU,wBACb,yBAAKA,UAAU,iCACb,+CAECqoB,EAAoB1a,MACnBkiB,GACAjvB,OAAOC,KAAKgvB,GAAgB/uB,OAAS,GACnC,oCACE,kBAAC0vB,GAAD,CACE3I,sBAAuB8H,EACvB7H,yBAA0B8H,EAC1B3H,mBAAoB4H,EACpBR,sBAAuBS,EACvB/H,aAAcA,IAGftV,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CACEf,QAAS,kBAAMoe,GAAuB,IACtCtwB,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHR,UAWV,kBAAC,KAAD,CACEqC,QAAM,EACNC,UAAW,CAAEtR,KAAM,GACnB3N,QAAS4W,EAAoB3a,WAE5B2a,EAAoB1a,MACnBkiB,KACEjvB,OAAOC,KAAKgvB,GAAgB/uB,OAAS,IACrC,kBAAC,KAAD,CACE2B,YAAY,oBACZO,MAAOwS,KAAMI,yBAIlByS,EAAoB1a,MACnBkiB,GACAjvB,OAAOC,KAAKgvB,GAAgB/uB,OAAS,GACnC,oCACE,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,oGACb,yBACEuL,IACEskB,EAAc,OACdA,EAAc,MAAd,MAEFvsB,IAAI,MAGR,yBAAKtD,UAAU,qCACb,4BAAK6vB,EAAc,MACnB,4BAAKA,EAAc,aACnB,8CACiB,8BAAOA,EAAc,OAGrCA,EAAc,KACb,mCAEE,8BAAOA,EAAc,QAM5BA,EAAc,MACb,oCACE,yBAAK7vB,UAAU,iCACb,qCAGF,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,gGACb,yBACEuL,IAAKskB,EAAc,MAAYA,EAAc,KAC7CvsB,IAAI,OAKV,yBACE9C,MAAO,CACLgc,aAAc,WAOzBqT,EAAc,WACT,oCACE,yBAAK7vB,UAAU,iCACb,0CAGF,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,qGACb,yBACEuL,IAAKskB,EAAc,WAAiBA,EAAc,UAClDvsB,IAAI,OAKV,yBACE9C,MAAO,CACLgc,aAAc,WAQrBqT,EAAc,OAAaA,EAAc,MAAU/uB,OAAS,GAC3D,oCACE,yBAAKd,UAAU,iCACb,8CAGF,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACZkwB,GACCtvB,OAAOC,KAAKqvB,GAAK7uB,KAAI,SAACkd,GACpB,OACE,yBAAKve,UAAU,qBACZkwB,EAAI3R,IACH2R,EAAI3R,GAAQld,KAAI,SAAC4B,GACf,OACE,yBACEK,IAAI,KACJiI,IAAKtI,EACLzC,MAAO,CACLgT,MAAO,oBAY/B,yBACEhT,MAAO,CACLgc,aAAc,WAMrBqT,EAAc,aACbA,EAAc,YAAgB/uB,OAAS,GACrC,oCACE,yBAAKd,UAAU,iCACb,iDAGF,yBAAKA,UAAU,yBACZ6vB,EAAc,YAAgBxuB,KAAI,SAACsC,GAClC,OACE,yBACE6N,QAAS,kBACPsE,EAAQ7R,KAAR,0BAAgCN,EAAOpB,MAEzCvC,UAAU,+BAEV,yBAAKA,UAAU,wCACb,yBAAKuL,IAAK5H,EAAOf,MAAOU,IAAI,MAE9B,yBAAKtD,UAAU,oCACb,4BAAK2D,EAAO9D,YAOtB,yBACEW,MAAO,CACLgc,aAAc,aAShC,yBAAKxc,UAAU,iCACb,yCAEF,yBAAKA,UAAU,8BACZuvB,EAAsB7hB,WAAa,kBAACshB,GAAD,MACnCO,EAAsB5hB,QACnB4hB,EAAsBntB,KAAKtB,OAAS,IACpC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,sCACZO,MAAOwS,KAAMI,0BAKpB2Z,EAAsB5hB,MACrB4hB,EAAsBntB,MACtBmtB,EAAsBntB,KAAKtB,OAAS,GAClC,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UACE,+FAEJ6G,KAAK,QACL8D,WAAYmR,EAAsBntB,KAClCic,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL/d,MAAO,CACLsW,MAAO,qBAKb,kBAAC,GAAD,CACE1T,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACElN,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,MAGxCgJ,IAAK3I,EACLU,IAAI,YACJ9C,MAAO,CACLqT,OAAQ,OACRL,MAAO,OACPmd,UAAW,UACXlwB,aAAc,MACd6W,OAAQ,iBAOlB,kBAAC,GAAD,CACElU,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,MAExC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,cACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,YACNob,UAAU,YACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,UACNob,UAAU,UACVle,IAAI,KACJN,UAAU,iC,wCChZbhB,GA9CF,SAAC,GAYA,IAXZe,EAWW,EAXXA,IACAV,EAUW,EAVXA,MACAC,EASW,EATXA,KAEAC,GAOW,EARXC,aAQW,EAPXD,OACAE,EAMW,EANXA,SACAC,EAKW,EALXA,SACAC,EAIW,EAJXA,QACAC,EAGW,EAHXA,YACAC,EAEW,EAFXA,KAEW,IADXya,YACW,MADJ,SACI,EACX,OACE,oCACGjb,GAAS,wBAAIW,UAAU,yBAAyBX,GAEjD,kBAAC,IAAKY,KAAN,CACEC,eAAgBP,EAAU,QAAU,GAEpCQ,KAAMP,GAGN,kBAAC,IAAD,CACEQ,UAAW,SAACC,GACG,WAATf,IACgB,MAAde,EAAMC,KAA6B,MAAdD,EAAMC,KAC7BD,EAAME,mBAIZR,IAAKA,EACLT,KAAMA,EACNgb,KAAMA,EACNsW,YAAU,EACV/wB,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVO,UAAU,4B,UC/Cdyf,GAA0B,SAAC7I,GAC7BD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,UACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAK7CkN,GAAwB,SAACpN,GAC3BD,KAAatJ,MAAM,CACfuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8tB,GAAA,EAAD,CAA2BrwB,MAAO,CAAEsW,MAAO,yBCVjDga,GAAiBC,KAAjBD,aACAtD,GAAWvuB,IAAXuuB,OA0NOwD,GAlNF,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,aAA0B,EACtCtiB,mBAAS,IAD6B,mBAC7D3C,EAD6D,KACpDklB,EADoD,OAEvBviB,mBAAS,IAFc,gCAG7BJ,EAAe,GAAI,YAHU,mBAG7D4iB,EAH6D,KAGnDC,EAHmD,OAI9BziB,mBAAS,IAJqB,mBAI7D0iB,EAJ6D,KAIhDC,EAJgD,KA6BpEpjB,qBAAU,WACR,GAAIijB,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAKqwB,EAAarwB,OAAS,EAAG,CACxE,IAAM2wB,EAAuBN,EAAa9vB,KAAI,SAACQ,GAC7C,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MAAK,SAACrb,GAAD,OAASA,EAAI7G,OAASgC,KAClE,GAAI6vB,EACF,OAAOA,EAAiB7xB,QAIAsxB,EAAa9vB,KAAI,SAACQ,GAC5C,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MAAK,SAACrb,GAAD,OAASA,EAAI7G,OAASgC,KAClE,GAAI6vB,EACF,OAAOA,EAAiBnvB,MAI5B2uB,EAAgBO,MAGjB,CAACJ,IAEJjjB,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACWgjB,EAAmB,CAC1CrwB,WAAY,CACVC,OAAQ,CACNwtB,eAAe,MAJP,QACRiD,EADQ,SAUIA,EAAW7wB,OAAS,IAE9B8wB,EAAaD,EAAWtwB,KAAI,SAACkH,GACjC,OAAOA,EAAI1I,QAEbuxB,EAAWQ,IAfC,2CAAH,qDAmBbhM,KACC,IA0CH,OAFArkB,QAAQC,IAAI,eAAgB2vB,GAG1B,oCACGE,EAAS3jB,WACR,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIH0b,EAAS1jB,MACR,yBAAK3N,UAAU,8CACb,kBAAC,GAAD,CACEwT,MAAO,MACPhT,MAAO,CACLqT,OAAQ,OACRpT,aAAc,iBACdoxB,YAAa,mBAEfvX,KAAK,SACL5Z,YAAY,WACZoxB,SAAU,SAACvyB,GAAD,OAAWgC,QAAQC,IAAIjC,IACjCE,SApDa,SAAC8R,GAGtB,GAFAigB,EAAejgB,EAAE/F,OAAOjM,OAED,KAAnBgS,EAAE/F,OAAOjM,OACX,GAAI8xB,EAASjvB,MAAQivB,EAASjvB,KAAKtB,OAAS,EAAG,CAE7C,IAAMixB,EAAgBV,EAASjvB,KAAKf,KAAI,SAACqF,GAAD,OAASA,EAAI7G,QACrDuxB,EAAWW,QAER,CACL,IAAMC,EACJ9lB,EAAQpL,OAAS,EACboL,EAAQyV,QAAO,SAACvH,GACd,OAAOA,EAAOC,cAAc5Y,SAAS8vB,EAAYlX,kBAEnD,GAEN+W,EAAWY,QAwCVX,EAAS1jB,QAAUzB,EAAQpL,OAAS,IACnC,yBACEN,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOvS,MAAM,gBAAgByQ,OAAQ,OAmBxCwd,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAKoL,EAAQpL,OAAS,GAC7D,oCACGoL,EAAQ7K,KAAI,SAACkH,GAAD,OACX,oCACE,kBAACuoB,GAAD,CACExwB,IAAKiI,EACL+iB,QAAS6F,EAAalvB,QAAQsG,IAAQ,EACtC9I,SAAU,SAAC6rB,GAAD,OAjLH,SAAC/iB,EAAK+iB,GACzB,IAAM2G,EAAmB3G,EAAO,uBACxB6F,GADwB,CACV5oB,IAClB4oB,EAAaxP,QAAO,SAACuQ,GAAD,OAAOA,IAAM3pB,KAGrC,GAFA2oB,EAAgBe,GAGdZ,EAAS1jB,MACT0jB,EAASjvB,KAAKtB,OAAS,GACvBmxB,EAAiBnxB,OAAS,EAC1B,CACA,IAAMqxB,EAAsBF,EAAiB5wB,KAAI,SAACQ,GAChD,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MACrC,SAACrb,GAAD,OAASA,EAAI7G,KAAKwa,gBAAkBxY,EAAKwY,iBAE3C,GAAIqX,EACF,OAAOA,EAAiBnvB,MAG5B0uB,EAAUkB,IA8JuBrhB,CAAavI,EAAK+iB,KAExC/iB,UC5LTiQ,GAAWC,KAAXD,OA0HO4Z,GAxHA,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,QAAyC,KAAhCC,mBACP1jB,mBAAS,KAD8B,mBAC9D3C,EAD8D,KACrDklB,EADqD,OAEvBviB,mBAAS,IAFc,mBAE7C2jB,GAF6C,aAG5B/jB,EAAe,GAAI,aAHS,mBAG9DgkB,EAH8D,KAGlDnB,EAHkD,KA2CrE,OApBAljB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACWgjB,EAAmB,IAD9B,QACVoB,EADU,SAIIA,EAAa5xB,OAAS,IAElC6xB,EAAeD,EAAarxB,KAAI,SAAC6D,GACrC,MAAO,CACL3F,MAAO2F,EAAM3C,GACb1C,KAAMqF,EAAMrF,SAGhBuxB,EAAWuB,IAZG,2CAAH,qDAgBfC,KACC,IAGD,oCACE,8BAECH,EAAW/kB,WACV,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIH8c,EAAW9kB,QAAU8kB,EAAWrwB,KAAKtB,OAAS,IAC7C,yBACEN,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOvS,MAAM,iBAAiByQ,OAAQ,OAIzC4e,EAAW9kB,MACV8kB,EAAWrwB,MACXqwB,EAAWrwB,KAAKtB,OAAS,GACzBoL,EAAQpL,OAAS,GACf,kBAAC,KAAD,CACEkZ,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAAS/S,aAAc,OACvCC,YAAY,iBACZuZ,iBAAiB,WACjBxa,SAhFV,SAAkBF,GAChBizB,EAAmBjzB,GACnB8yB,EAAW9yB,IA+EHszB,QAvEV,aAwEUpM,OA5EV,aA6EUqL,SArEV,SAAkBgB,KAsERvzB,MAAO+yB,EACPpY,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IAG/DoY,EAAW9kB,MACV8kB,EAAWrwB,KAAKtB,OAAS,GACzBoL,EAAQ7K,KAAI,SAAC+Y,GACX,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,Y,UCzGpD2tB,GAAWvuB,IAAXuuB,OAqLOuF,GA7KI,SAAC,GAIN,IAHZC,EAGW,EAHXA,eACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,mBACW,EACmBrkB,mBAAS,IAD5B,mBACJ3C,EADI,KACKklB,EADL,OAE2BviB,mBAAS,IAFpC,mBAEJ0iB,EAFI,KAESC,EAFT,OAIsC/iB,EAC/C,GACA,qBANS,mBAIJ8f,EAJI,KAIWC,EAJX,KASXpgB,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACUkgB,EAAwB,CACpDvtB,WAAY,CACVC,OAAQ,CACNwtB,eAAe,EACfC,mBAAmB,EACnBrY,SAAU,QACVC,eAAgB,KAChBhK,YAAa,QARC,QACd4mB,EADc,SAcGA,EAAgBryB,OAAS,GAE9CswB,EAAW+B,GAhBO,2CAAH,qDAoBnBtE,KACC,IA2CH,OAHAttB,QAAQC,IAAI,gBAAiB+sB,GAC7BhtB,QAAQC,IAAI,aAAc0K,GAGxB,yBAAKlM,UAAU,oCACZuuB,EAAc7gB,WACb,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIH4Y,EAAc5gB,MACb,yBAAK3N,UAAU,8CACb,kBAAC,GAAD,CACEwT,MAAO,OACPhT,MAAO,CACLqT,OAAQ,OACRpT,aAAc,iBACdoxB,YAAa,mBAEfvX,KAAK,SACL5Z,YAAY,GACZoxB,SAAU,SAACvyB,GAAD,OAAWgC,QAAQC,IAAIjC,IACjCE,SA5Da,SAAC8R,GAGtB,GAFAigB,EAAejgB,EAAE/F,OAAOjM,OAED,KAAnBgS,EAAE/F,OAAOjM,OACX,GAAIgvB,EAAcnsB,MAAQmsB,EAAcnsB,KAAKtB,OAAS,EAAG,CAEvD,IAAMixB,EAAgBxD,EAAcnsB,KAAKf,KAAI,SAACqF,GAC5C,OAAO,eACFA,MAGP0qB,EAAWW,QAER,CACL,IAAMC,EACJ9lB,EAAQpL,OAAS,EACboL,EAAQyV,QAAO,SAACvH,GAChB,OACEA,GACAA,EAAOhX,MAAMiX,cAAc5Y,SAAS8vB,EAAYlX,kBAGlD,GAEN+W,EAAWY,QAyCVzD,EAAc5gB,MACb4gB,EAAcnsB,KAAKtB,OAAS,GAC5BoL,EAAQpL,OAAS,GACf,oCACE,yBACEN,MACE,CACE0tB,SAAU,OACVkF,UAAW,UAKdlnB,EAAQpL,OAAS,GAChB,kBAAC,KAAD,CACEuyB,WAAS,EACTC,YAAaL,EACbM,SA5FC,SAACC,EAAcC,KA6FhBC,QAzFA,SAACJ,EAAaG,GAC5B,IAAME,EAAaL,EAAYhI,SAAW,GAC1C0H,EAAeW,GACfT,EAAmBS,IAuFLC,SAAU1nB,EACV2nB,kBAAkB,EAClBC,eAAe,MAO1BvF,EAAc5gB,QAAUzB,EAAQpL,OAAS,IACxC,yBACEN,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOvS,MAAM,oBAAoByQ,OAAQ,SC7H7CjE,IAFc4P,KAAZD,QAEiB1P,MAAaC,MAAM,CACxCjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,2CAInEkQ,GAAgB,CAClBpQ,KAAM,GACNk0B,YAAa,KACbntB,UAAW,GACXC,QAAS,GACTpE,YAAa,GACb0kB,OAAQ,GACXC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA+qCEsM,GAlqCO,SAAC,GAA2I,IAAzInM,EAAwI,EAAxIA,sBAAuBC,EAAiH,EAAjHA,yBAAuCmM,EAA0E,EAAvFC,YAAyCC,EAA8C,EAA9DC,eAA+BC,EAA+B,EAA/BA,kBAA+B,EAItG5lB,EAAe,GAAI,iBAJmF,mBAItJ6lB,EAJsJ,aAKtG7lB,EAAe,GAAI,iBALmF,mBAKtJ8jB,EALsJ,KAKlIgC,EALkI,OAM9E9lB,EAAe,GAAI,6BAN2D,mBAMtHsb,GANsH,aAOlFtb,EAAe,GAAI,2BAP+D,mBAOxHub,GAPwH,aAQ1Evb,EAAe,GAAI,+BARuD,gCAS9EA,EAAe,GAAI,8BAT2D,mBAStHwb,GATsH,aAU9Exb,EAAe,GAAI,6BAV2D,mBAUtHyb,GAVsH,aAaxHrb,mBAAS,IAb+G,mBAatJqlB,EAbsJ,KAa1IE,EAb0I,OAc/HvlB,oBAAS,GAdsH,mBActJ8Q,EAdsJ,KAc7IC,EAd6I,OAe7H/Q,oBAAS,GAfoH,mBAetJkR,EAfsJ,KAe5IF,EAf4I,OAgB7GhR,oBAAS,GAhBoG,mBAgBpIoR,GAhBoI,aAiB/FpR,oBAAS,GAjBsF,mBAiBtJmR,EAjBsJ,KAiB7H2I,GAjB6H,QAkBrG9Z,oBAAS,GAlB4F,qBAkBtJiR,GAlBsJ,MAkBhI8I,GAlBgI,SAmBvH/Z,mBAAS,IAnB8G,qBAmBtJ2lB,GAnBsJ,MAmBzIxB,GAnByI,SAoBjInkB,mBAAS,IApBwH,qBAoBtJ4lB,GApBsJ,MAoB9IxD,GApB8I,SAqB/HpiB,mBAAS,IArBsH,qBAqBtJyjB,GArBsJ,MAqB7ID,GArB6I,SAsB/HxjB,mBAAS,IAtBsH,qBAsB7I6lB,IAtB6I,gBAuBrH7lB,mBAAS,IAvB4G,qBAuBtJ8a,GAvBsJ,MAuBxIC,GAvBwI,SAwB/G/a,mBAAS,IAxBsG,qBAwBtJokB,GAxBsJ,MAwBrIC,GAxBqI,SAyBrHrkB,mBAAS,IAzB4G,qBAyBtJsiB,GAzBsJ,MAyBxID,GAzBwI,SA0BhIriB,mBAAS,IA1BuH,qBA0BhJ8lB,IA1BgJ,gBA2BhI9lB,mBAAS,IA3BuH,qBA2BhJ+lB,IA3BgJ,gBA4BvH/lB,mBAAS,IA5B8G,qBA4BtJpM,GA5BsJ,MA4BzIoyB,GA5ByI,SA6BtHhmB,mBAAS,IA7B6G,qBA6BzJuY,GA7ByJ,MA6B1I0N,GA7B0I,SA8BjIjmB,mBAAS,IA9BwH,qBA8BzJ4Y,GA9ByJ,MA8BhJsN,GA9BgJ,SA+B7HlmB,mBAAS,IA/BoH,qBA+BzJ6Y,GA/ByJ,MA+B9IsN,GA/B8I,SAgCnHnmB,mBAAS,IAhC0G,qCAiC3GA,mBAAS,MAjCkG,qCAkC1GA,oBAAS,IAlCiG,qCAoC1HA,mBAAS,KApCiH,qBAoCtJomB,GApCsJ,MAoC3IC,GApC2I,SAwC5GzmB,EAAe,GAAI,gBAxCyF,qBAwCtJ0mB,GAxCsJ,MAwCrIC,GAxCqI,MA0C7JhnB,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACfimB,EAAyB,CAC3BtzB,WAAY,CACRE,aAAc,CACVoB,GAAI8xB,EAAkB9xB,OAJb,2CAAH,qDAUtB4nB,KAED,CAACkK,IAvDyJ,OA0DnIxlB,mBAAS,CAC/BwmB,QAAS,KACTC,MAAO,OA5DkJ,qBA0DtJ3wB,GA1DsJ,MA0D/I4wB,GA1D+I,MAkEvJllB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,2BAAAjC,EAAA,yDAEXoc,EAAY3K,EAAWA,EAAS1e,KAAI,SAAA2B,GACtC,OAAOA,EAAMT,MACZ,GAELhB,QAAQC,IAAI,cAAc0yB,GAEpBntB,EAAWmtB,EAAYpzB,OAAS,EAAIozB,EAAY7yB,KAAI,SAAAoD,GACtD,MAAO,CACHjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAErB,KAGG2uB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GAjBpD,oBAkBH8pB,EAAyB,GAE5BF,GAAaA,EAAU5pB,OAAS,GAC/B4pB,EAAU5mB,SAAQ,SAAAymB,GACX8J,GAAqBA,EAAiB,QACjCA,EAAiB,MAAU5yB,SAAS8oB,IACpCK,EAAuB3mB,KAAKsmB,SAOxCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GA/BxD,iCAgCCipB,EAAqC,CACvC9oB,WAAY,CACRE,aAAc,CACVqpB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,KAGlC4D,KAAM,CACFnD,MAAO4nB,KAxCV,oCA4CAA,EAAuB,IAAMA,EAAuB9pB,OAAS,GA5C7D,kCA6CCkpB,EAAmC,CACrC/oB,WAAY,CACRE,aAAc,CACVopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OAlDjC,yBA6DW6yB,GAAsB,CAC9Cn0B,WAAY,CACRE,aAAc,CACVoB,GAAI8xB,EAAkB9xB,KAG9B4D,KAAM,CACFtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBroB,SAAUkyB,GACVrvB,KAAMsvB,GACNvvB,MAAOotB,GACP3tB,MAAOA,GACPlC,YAAaA,GACbgzB,MAAOnlB,EAAOmlB,MACd5wB,KAAMyL,EAAOzL,KACb7B,MAAO0nB,EACP3jB,WAEAsgB,UAAW/W,EAAO+W,UAC9BE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,GAAS3lB,KAAK,KAGxB+oB,GAAI,CACHxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUC,GAAW5lB,KAAK,KAC1BjC,KAAMyQ,EAAO6W,OAAOwD,OACpB9lB,KAAMyL,EAAOolB,SACbjzB,YAAa6N,EAAO8W,kBA1FA,SA6DXuO,EA7DW,SAoG6B,OAAzBA,EAAc9vB,SAC/B4Z,GAAwB,kBAGxBqI,GAAyB,GAO5B/P,EAJ+B,WACpC,OAAOkc,EAAW5yB,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQoyB,EAAkB9xB,IAGpDqzB,GAGR/R,EAAcjjB,OAAOkjB,OAAO,GAAImQ,EAAWlc,GAA7BnX,OAAA,IAAAA,CAAA,GAA0CyzB,EAA1C,GAAgEsB,IAC9EE,EAfmD,uBAe3B5B,EAAWjyB,MAAM,EAAG+V,IAfO,CAeC8L,GAfD,aAeiBoQ,EAAWjyB,MAAM+V,EAAQ,KAC1Foc,EAAc0B,GAOdhW,EAAY,IACZ+J,GAAgB,IAChB8K,GAAW,IACXzD,GAAU,IACVC,GAAgB,IAChBmB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnB3iB,EAAQ2a,aAMZ3a,EAAQC,eAAc,GAzIL,4CAAH,wDAkJlBpC,qBAAU,WACN,IAAK+mB,GAAe,UAAe,CAC/B,IAAM9nB,EAAQ8nB,GAAe,MAC7B,GAAI9nB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAIrDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACjCF,OAAO0P,OAAOjD,EAAK,OACnB,IACHvJ,SAAQ,SAACqnB,EAAKC,GACjB,GAAmB,kBAARD,EACPnH,GAAsBmH,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACpBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACTnH,GAAsBmH,aAQ/C,CAACgK,KAIJ/mB,qBAAU,WACN,GAAGmkB,EAAkB,MAAYA,EAAkB,KAAlB,UAA0CA,EAAkB,KAAlB,SAAuCzxB,OAAS,EAAE,CACzH,IAAMm0B,EAAa1C,EAAkB,KAAlB,SAAuClxB,KAAI,SAAAQ,GAC5D,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKW,SAGb0yB,GAAcD,GACd,IAAMf,EAAc3B,EAAkB,KAASxrB,SAAS1F,KAAI,SAAAQ,GACxD,MAAO,CACHW,IAAKX,EAAKW,IACVgzB,UAAW3zB,EAAK2zB,UAChB9vB,SAAU7D,EAAK6D,SACf4E,WAAYzI,EAAKyI,eAG1B8pB,EAAeF,GAIlB3yB,QAAQC,IAAI,6BAA6B+wB,EAAkB,QAC7D,CAACA,EAAkB,OAMrBnkB,qBAAU,WAEN,GAAI6mB,IAAcA,GAAWn0B,OAAS,GAAKozB,GACvC,GAAIe,GAAWn0B,OAASozB,EAAYpzB,OAAQ,CACxC,IAAM00B,EAAYP,GAAWA,GAAWn0B,OAAS,GAA/B,SAAgDm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GAAKm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IAC7HS,QAAQC,IAAI,YAAag0B,GAEzBpB,EAAe,GAAD,oBAAKF,GAAL,gBACPe,GAAWA,GAAWn0B,OAAS,GADxB,CAEV0B,IAAKyyB,GAAWA,GAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAKb,GAAIuvB,GAAWn0B,OAASozB,EAAYpzB,OAAQ,CAC7CS,QAAQC,IAAI,aAAcyzB,IAC1B1zB,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB5B,EAAYvS,QAAO,SAAA9f,GACtC,IAAIk0B,GAAS,EAMb,OALAd,GAAWnxB,SAAQ,SAAAW,GACXA,EAAQlC,KAAOV,EAAKW,MACpBuzB,GAAS,MAGVA,KAEX3B,EAAe0B,SAKnB1B,EAAe,MAIpB,CAACa,KAQJ7mB,qBAAU,WAgBN,GAdIimB,GAAqBA,EAAkBnvB,MACvCmtB,GAAWgC,EAAkBnvB,MAAlB,IAGXmtB,GAAW,IAEXgC,GAAqBA,EAAkBlvB,MAAQkvB,EAAkBlvB,KAAKrE,OAAS,EAE/EowB,GAAgBmD,EAAkBlvB,MAGlC+rB,GAAgB,IAGhBmD,GAAqBA,EAAkB/xB,UAAY+xB,EAAkB/xB,SAASxB,OAAS,EAAG,CAG1F,IAAMk1B,EAAc3B,EAAkB/xB,SACtC4wB,GAAmB8C,GACnBhD,GAAegD,QAGf9C,GAAmB,IAGnBmB,GAAqBA,EAAkB1tB,cAAgB0tB,EAAkB1tB,aACzE4uB,GAASlB,EAAkB1tB,cAG3B+tB,GAAW,IAKXL,GAAqBA,EAAkBtvB,MAAQsvB,EAAkBtvB,KACjE4vB,GAAaN,EAAkBtvB,MAG/B4vB,GAAa,IAIbN,GAAqBA,EAAkBrvB,MAAQqvB,EAAkBrvB,KACjE4vB,GAAaP,EAAkBrvB,MAG/B4vB,GAAa,MAKlB,CAACP,IAIJjmB,qBAAU,WACN,GAAImkB,EAAmB5kB,MAAQ/M,OAAOC,KAAK0xB,GAAoBzxB,OAAS,EAAG,CAEvE,IAAM6K,EAAS4mB,EAAmBnwB,KAAKY,MACnC2I,GAAUA,EAAO7K,OAAS,GAC1B+e,EAAYlU,GAGZ4mB,EAAmBnwB,KAAKQ,OAAS2vB,EAAmBnwB,KAAKQ,MAAxB,KAEjCid,EAAY,CAAC0S,EAAmBnwB,KAAKQ,OAA1B,oBAAoC+I,KAC/CpK,QAAQC,IAAI,SAAZ,CAAuB+wB,EAAmBnwB,KAAKQ,OAA/C,oBAAyD+I,KACzDie,GAAgB2I,EAAmBnwB,KAAKQ,MAAxB,QAGzB,CAAC2vB,IAGJnkB,qBAAU,WACN7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC7CS,QAAQC,IAAI,YAAaue,GAErB4J,KAAiB5J,EAAS,GAAGxd,KAC7BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,QAK3C,CAACA,IAGJ,IAAMuK,GAAuB,uCAAG,WAAM/nB,GAAN,SAAA+L,EAAA,sEACtB2b,EAAqC,CACvChpB,WAAY,CACRE,aAAc,CACVopB,QAAShoB,EACTioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OANV,2CAAH,sDAcvB8nB,GAAwB,uCAAG,WAAMrnB,GAAN,eAAAsL,EAAA,sEAEF4b,EAAqC,CAC5DjpB,WAAY,CACRE,aAAc,CACVopB,QAASvnB,EAAMT,GACfioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OAPT,OAEvBkoB,EAFuB,OAY7BlpB,QAAQC,IAAI,eAAgBipB,GAGxBA,GAAwC,OAAxBA,EAAa5kB,OAC7B4Z,GAAwB,qBAkBxBuE,GAAsB,mDAlCG,2CAAH,sDA0C9B5V,qBAAU,WACN,IAAKkmB,EAAkB,UAAe,CAClC,IAAMjnB,EAAQinB,EAAkB,MAChC,GAAIjnB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAIrDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACjCF,OAAO0P,OAAOjD,EAAK,OACnB,IACHvJ,SAAQ,SAACqnB,EAAKC,GACjB,GAAmB,kBAARD,EACPnH,GAAsBmH,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACpBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACTnH,GAAsBmH,aAQ/C,CAACmJ,IAGJ,IAAMlF,GAAe,SAAC7d,GAClBuW,GAAyB,IA2D7B,OAjBA1Z,qBAAU,WAEN,GAAGmkB,EAAmBnwB,MAAQxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GAAKyxB,EAAmBnwB,KAAKqlB,SAAS,CAC9G,IAAMA,EAAW8K,EAAmBnwB,KAAKqlB,SAASrmB,MAAM,KAExDG,QAAQC,IAAI,gBAAgBimB,GAE5B,IAAMC,EAAa6K,EAAmBnwB,KAAKyoB,GAAxB,SAAuCzpB,MAAM,KAChE2zB,GAAYtN,GACZuN,GAActN,MAGpB,CAAC6K,EAAkB,OAMjB,kBAAC,IAAD,CACI5hB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,kBAGFokB,EAHE,GAIA9B,EAAkB,MAAY3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GAAKyxB,EAAkB,KAAlB,IAAoC,CACzHjL,YAAaiL,EAAkB,KAAlB,GAAiClL,UAC9CG,kBAAmB+K,EAAkB,KAAlB,GAAiChL,gBACpDJ,OAAQoL,EAAkB,KAAlB,GAAiC1yB,KACzC61B,SAAUnD,EAAkB,KAAlB,GAAiC1tB,KAC3CuiB,cAAemL,EAAkB,KAAlB,GAAiC9vB,iBAK3D,gBACGqO,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI5Q,MAAO,CACHuT,IAAK,QAGTsQ,UAAW,CACP/S,OAAQ,EACRqG,QAAS,GAEbnE,MAAO,OACPpQ,MAAM,iBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,WAKd,6BAAS7sB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,oDAIA,yBAAKA,UAAWsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAAI,mBAAqB,aACzE,kBAAC+V,GAAA,EAAD,QAGR,yBAAK7W,UAAU,sCACf,kBAACf,EAAD,CAC5BI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,WACbD,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBmkB,GAAgB9nB,MAAhB,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBmkB,GAAgB9nB,MAAhB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACjS,EAAD,CACAI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAUsR,EAAQkW,QAAUpW,EAAOoW,SAChCnW,GAAgBmkB,GAAgB9nB,MAAhB,aAEnBzN,YAAcqR,EAAQkW,QAAUpW,EAAOoW,SACpCnW,GAAgBmkB,GAAgB9nB,MAAhB,aACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAQjB,wBAAIlR,UAAU,mBAAd,eAIA,yBAAKQ,MAAO,CACXgT,MAAO,OACPnC,SAAU,SAEV,kBAAC,KAAD,CACC4kB,OAAQC,KACR9zB,KAAMK,GACN0zB,OAAQ,SAAAF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAExCx2B,SAAU,SAACY,EAAO41B,GACjB,IAAM7zB,EAAO6zB,EAAOG,UACpBvB,GAAezyB,IAEhBqkB,OAAQ,SAACpmB,EAAO41B,GACf10B,QAAQC,IAAI,QAASy0B,IAEtBpD,QAAS,SAACxyB,EAAO41B,GAChB10B,QAAQC,IAAI,SAAUy0B,OAKxB,yBAAKz1B,MAAO,CACX4W,UAAU,UAGZ,wBAAIpX,UAAU,mBAAd,kBAIA,yBAAKQ,MAAO,CACXgT,MAAO,OACPnC,SAAU,SAEV,kBAAC,KAAD,CACC4kB,OAAQC,KACR9zB,KAAMglB,GACN+O,OAAQ,SAAAF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAExCx2B,SAAU,SAACY,EAAO41B,GACjB,IAAM7zB,EAAO6zB,EAAOG,UACpBtB,GAAiB1yB,IAElBqkB,OAAQ,SAACpmB,EAAO41B,GACf10B,QAAQC,IAAI,QAASy0B,IAEtBpD,QAAS,SAACxyB,EAAO41B,GAChB10B,QAAQC,IAAI,SAAUy0B,OA+BQ,yBAAKz1B,MAAO,CACRgc,aAAc,UAqClB,yBAAKxc,UAAU,yDACX,uCAGA,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,wEACX,kBAACq2B,GAAD,CACIh3B,MAAM,UACNE,MAAOoF,GAAM0wB,QACbx1B,KAAK,UACLJ,SAAU,SAAC8R,GAAD,OAAOgkB,GAAS,eACnB5wB,GADkB,CAErB0wB,QAAS9jB,EAAE/F,OAAOjM,aAM9B,yBAAKS,UAAU,yEAEX,kBAACq2B,GAAD,CACIh3B,MAAM,QACNE,MAAOoF,GAAM2wB,MACbz1B,KAAK,QACLJ,SAAU,SAAC8R,GAAD,OAAOgkB,GAAS,eACnB5wB,GADkB,CAErB2wB,MAAO/jB,EAAE/F,OAAOjM,iBA+E5C,yBAAKS,UAAU,kCAEnB,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIwX,UAAU,OAAOpU,MAAO,uFACxB,uBAAG0U,KAAK,OACJ,kBAACmM,GAAA,EAAD,SAK5C,yBACIzjB,MAAO,CACHmX,QAAS,QAEb3X,UAAU,gCACTuyB,EAAmB7kB,WAChB,yBAAKlN,MAAO,CACRmX,QAAS,WAET,kBAAC,KAAD,OAGP4a,EAAmB5kB,MAChB,oCACKoS,GAEGA,EAASjf,OAAS,GAAKif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACxC,OACI,yBAAK/X,UAAU,sCACX,yBACIA,UAAU,kDACVwR,QAAS,WACLoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACIkO,QAAS,YAzaV,SAACjP,GAExB,IAAM8pB,EAAYtM,GAAYA,EAAS4B,QAAO,SAAA3e,GAC1C,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAoagBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAIlCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,QAIH5C,KAAiB3mB,EAAMT,KAInBonB,IAA0B,IAAV5R,IAHjB,0BAAM/X,UAAU,4CACZ,kBAAC6kB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACIzhB,MAAO,iBAEP,yBACIoO,QAAS,WACLoO,GAAW,GACXgJ,IAAwB,GACxBD,IAA2B,IAE/B3oB,UAAU,4CAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACZ,kBAACgnB,GAAA,EAAD,YAWxB,yBAAKhnB,UAAU,kCAEf,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIwX,UAAU,OAAOpU,MAAO,sFACxB,uBAAG0U,KAAK,OACJ,kBAACmM,GAAA,EAAD,SAIZ,yBAAKjkB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAUsR,EAAQoW,WAAatW,EAAOsW,YACpCrW,GAAgBmkB,GAAgB9nB,MAAhB,gBAElBzN,YAAcqR,EAAQoW,WAAatW,EAAOsW,YACxCrW,GAAgBmkB,GAAgB9nB,MAAhB,gBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACjS,EAAD,CACAI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAUsR,EAAQqW,aAAevW,EAAOuW,cACtCtW,GAAgBmkB,GAAgB9nB,MAAhB,kBAElBzN,YAAcqR,EAAQqW,aAAevW,EAAOuW,cAC1CtW,GAAgBmkB,GAAgB9nB,MAAhB,kBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACA7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QAAUsR,EAAQsW,iBAAmBxW,EAAOwW,kBAC1CvW,GAAgBmkB,GAAgB9nB,MAAhB,sBAElBzN,YAAcqR,EAAQsW,iBAAmBxW,EAAOwW,kBAC9CvW,GAAgBmkB,GAAgB9nB,MAAhB,sBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACA7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QAAUsR,EAAQuW,mBAAqBzW,EAAOyW,oBAC5CxW,GAAgBmkB,GAAgB9nB,MAAhB,wBAElBzN,YAAcqR,EAAQuW,mBAAqBzW,EAAOyW,oBAChDxW,GAAgBmkB,GAAgB9nB,MAAhB,wBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAIlR,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA4lB,QAASmP,GACT5vB,KAAMsiB,KAGN,yBAAKjnB,MAAO,CACZ4W,UAAU,UAGV,wBAAIpX,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA4lB,QAASoP,GACT7vB,KAAMuiB,QAW0B,yBAAK1nB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACI8W,MAAM,MACN6I,QAASwV,GAAgB9nB,MAAhB,kBAAgDmnB,GAAY1zB,OAAS,GAC9E0W,UAAU,OAAOpU,MAAO,gCACxB,yBAAKpD,UAAaw0B,GAAY1zB,OAAS,GAC/Bq0B,GAAgB9nB,MAAhB,eAA2D8nB,GAAgB9nB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACwJ,GAAA,EAAD,SAKZ,yBAAK7W,UAAU,mDACX,kBAAC,GAAD,CACIkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAKhzB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAKjxB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CAAQqyB,WAAYA,WAa5C,kBAAC,GAAD,CACIzS,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCznCnCkR,GA7FF,SAAC,GAGA,IAFVkE,EAES,EAFTA,cACAD,EACS,EADTA,WACS,EACqBpmB,mBAAS,IAD9B,mBACF3C,EADE,KACOklB,EADP,OAEoCviB,mBAAS,IAF7C,mBAEFynB,EAFE,KAEcC,EAFd,OAG8B9nB,EAAe,GAAI,eAHjD,mBAGF4iB,EAHE,KAGQC,EAHR,OAI8CziB,oBAAS,GAJvD,mBAIF2nB,EAJE,UAMTpoB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACagjB,EAAmB,CACxCrwB,WAAY,CACRC,OAAQ,CACJoV,SAAU,QACVC,eAAgB,SALhB,QACNob,EADM,SAWMA,EAAW7wB,OAAS,IAE5B8wB,EAAaD,EAAWtwB,KAAI,SAACkH,GAC/B,OAAOA,EAAI1I,QAEfuxB,EAAWQ,IAhBH,2CAAH,qDAqBbhM,KACD,IAIHxX,qBAAU,WAEN,GAAG6mB,GAAcA,EAAWn0B,OAAS,IAAM01B,EAAsB,CAC7D,IAAMC,EAAcxB,EAAW5zB,KAAI,SAACkH,GAChC,OAAOA,EAAIhG,MAGfg0B,EAAmBE,MAIzB,CAACxB,IAyBH,OACI,oCACI,kBAAC,KAAD,CAAUxjB,QAAS4f,EAAS3jB,WACvB2jB,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1CqT,KAAK,WACLzT,YAAY,kBACZnB,MAAO+2B,EACP72B,SA7BK,SAACg3B,GAIlB,GAHAF,EAAmBE,GACnBl1B,QAAQC,IAAI,cAAci1B,GAEtBpF,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAK21B,EAAY31B,OAAS,EAAG,CACrE,IAAMqxB,EAAsBsE,EAAYp1B,KAAI,SAACQ,GACzC,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MACnC,SAACrb,GAAD,OAASA,EAAI7G,KAAKwa,gBAAkBxY,EAAKwY,iBAE7C,GAAIqX,EACA,OAAOA,KAIfwD,EAAc/C,QAGd+C,EAAc,KAaN10B,MAAO,CAAEgT,MAAO,SAEftH,EAAQyV,QAAO,SAAA+U,GAAC,OAAKJ,EAAe70B,SAASi1B,MAAIr1B,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAO2W,OAAR,CAAelY,IAAKuB,EAAMtC,MAAOsC,GAC5BA,UC2Ld80B,GAxQa,SAAC,GAOf,IANVzC,EAMS,EANTA,YACAE,EAKS,EALTA,eACAwC,EAIS,EAJTA,UACAlxB,EAGS,EAHTA,SACA7D,EAES,EAFTA,KACA2zB,EACS,EADTA,UACS,EAGwC/mB,EAC7C,GACA,qBALK,mBAGF8jB,EAHE,KAGkBsE,EAHlB,OAOqBhoB,mBAAS,IAP9B,mBAOOioB,GAPP,aAQyBjoB,oBAAS,GARlC,mBAQSkoB,GART,aASiCloB,mBAAS,IAT1C,mBASFmoB,EATE,KASaC,EATb,OAU6CpoB,mBAAS2mB,GAVtD,mBAUF0B,EAVE,KAUmBC,EAVnB,KAcT51B,QAAQC,IAAI,4BAA4B+wB,GAExCnkB,qBAAU,WACN2oB,GAAa,GACS,uCAAG,4BAAAzoB,EAAA,sEACCuoB,EAAmB,CACrC51B,WAAY,CACRE,aAAc,CACVoB,GAAIq0B,MAJK,OACfnyB,EADe,OAUrBqyB,EAAWryB,GACXsyB,GAAa,GAXQ,2CAAH,oDAatBK,KACD,IAkBH,IAOMC,EAAoB,uCAAG,WAAO93B,GAAP,yBAAA+O,EAAA,yDACX,UAAV/O,EADqB,oBAEJ,IAAbmG,EAFiB,iDAUfqS,EAJsB,WACxB,OAAOmc,EAAY7yB,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQ20B,GAGvChB,GAER/R,EAAcjjB,OAAOkjB,OAAO,GAAIoQ,EAAYnc,GAA9BnX,OAAA,IAAAA,CAAA,GAA2CiB,EAA3C,CAAiD6D,WAAYA,KAC3E4xB,EAbe,uBAaWpD,EAAYlyB,MAAM,EAAG+V,IAbhC,CAawC8L,GAbxC,aAawDqQ,EAAYlyB,MAAM+V,EAAQ,KACvGqc,EAAekD,GAdM,wBAsBfvf,EAJsB,WACxB,OAAOmc,EAAY7yB,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQ20B,GAGvChB,GAER/R,EAAcjjB,OAAOkjB,OAAO,GAAIoQ,EAAYnc,GAA9BnX,OAAA,IAAAA,CAAA,GAA2CiB,EAA3C,CAAiD6D,WAAYA,KAC3E4xB,EAzBe,uBAyBWpD,EAAYlyB,MAAM,EAAG+V,IAzBhC,CAyBwC8L,GAzBxC,aAyBwDqQ,EAAYlyB,MAAM+V,EAAQ,KACvGqc,EAAekD,GA1BM,4CAAH,sDAgCpBC,EAAsC,SAACC,GACzC,IAAMj4B,EAAQ,GAQd,OANsBqB,OAAO0P,OAAOknB,GACpB1zB,SAAQ,SAAA2zB,GAEpBl4B,EAAM0E,KAAKwzB,MAGRl4B,EAAMuC,KAAK,MA4BhB41B,EAAiB71B,GAAQjB,OAAOC,KAAKgB,GAAMf,OAAS,EAtBhC,SAACgE,GACvB,GAAIA,GAAWA,EAAQhE,OAAS,EAAG,CAC/B,IAAM42B,EAAiB,GAevB,OAbA5yB,EAAQhB,SAAQ,SAAA6zB,GAEZ,GAAI/2B,OAAO0P,OAAOqnB,EAAYH,WAAW12B,OAAS,GAAK62B,EAAYn1B,IAAK,CACpE,IAAIo1B,EAAgB,CAChBr4B,MAAOo4B,EAAYn1B,IACnBnD,MAAM,GAAD,OAAKk4B,EAAoCI,EAAYH,YAAc,KAG5EE,EAAezzB,KAAK2zB,OAKrBF,EAEN,OAAO,EAG8CG,CAAkBh2B,EAAKiD,SAAW,GAGhGvD,QAAQC,IAAI,iBAAkBk2B,GA6C9B,OA3BAtpB,qBAAU,WAiBN,GAAI8oB,EAAqB,CACrB,IAAMvyB,EAhBoB,SAACpC,GAC3B,IAAMuC,KAAUjD,GAAQjB,OAAOC,KAAKgB,GAAMf,OAAS,IAAIe,EAAKiD,QAC5D,GAAIA,EAAS,CACT,IAAMgzB,EAAYhzB,EAAQid,MAAK,SAAA4V,GAAW,OAAIA,EAAYn1B,MAAQD,KAGlE,OAFAhB,QAAQC,IAAI,YAAae,MAErBu1B,IAAaA,EAAUnzB,MAAM0wB,WACtByC,EAAUnzB,MAAM2wB,OAChBlwB,SAAS0yB,EAAUnzB,MAAM2wB,OAC1BwC,EAAUnzB,MAAM2wB,MAAQwC,EAAUnzB,MAAM0wB,UAOxC0C,CAAsBb,GACpCD,EAAiBtyB,MAGtB,CAACuyB,IAIJ31B,QAAQC,IAAI,gBAAiBw1B,GAEzB,oCAEKn1B,GAAQjB,OAAOC,KAAKgB,GAAMf,OAAS,GAChC,yBAAKd,UAAU,YAAYM,IAAK,IAC5B,yBAAKN,UAAU,6BACX,uBACIwR,QAAS,WACL6lB,EAAqB,SAEzBr3B,UAAU,qBAGd,uBAAGA,UAAU,eAAe0F,GAC5B,uBACI8L,QAAS,WACL6lB,EAAqB,UAEzBr3B,UAAU,wBAMlB,yBAEIuL,IAAK1J,EAAI,OAAaA,EAAI,MAC1ByB,IAAI,MACJ9C,MAAO,CACH8W,OAAQ,aAGhB,yBAAKtX,UAAU,kBACX,4BAGK6B,EAAI,MAET,4BAEKm1B,GAAiBn1B,EAAI,OAIzB61B,GAAkBA,EAAe52B,OAAS,GAAK42B,EAAer2B,KAAI,SAAAkH,GAAG,OAClE,oCACI,0BACIiJ,QAAS,kBA1FX,SAACwmB,GAC3Bb,EAAuBa,GAEvB,IAIMjgB,EAHKmc,EAAY7yB,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQ20B,GAK/C/S,EAAcjjB,OAAOkjB,OAAO,GAAIoQ,EAAYnc,GAA9BnX,OAAA,IAAAA,CAAA,GAA2CiB,EAA3C,CAAiD6D,SAAU,KACzE4xB,EAAmB,uBAAOpD,EAAYlyB,MAAM,EAAG+V,IAA5B,CAAoC8L,GAApC,aAAoDqQ,EAAYlyB,MAAM+V,EAAQ,KACvGqc,EAAekD,GA+E4BW,CAAsB1vB,EAAIhJ,QACzCS,UAAWk3B,IAAwB3uB,EAAIhJ,MAAQ,mDAAqD,wBACnGgJ,EAAIlJ,eCnM1B64B,GApCY,SAAC,GAGd,IAFV9D,EAES,EAFTA,eACAF,EACS,EADTA,YAEA,OACI,yBACI1zB,MAAO,CAEH23B,cAAe,QAEnBn4B,UAAU,6CACV,yBAAKA,UAAU,qDACVk0B,GAAeA,EAAYpzB,OAAS,GAAKozB,EAAY7yB,KAAI,SAAAQ,GACtD,OAAO,kBAACu2B,GAAD,CACHhE,eAAgBA,EAChBF,YAAaA,EACb0C,UAAW/0B,EAAKW,IAChBkD,SAAU7D,EAAK6D,SACf7D,KAAMA,EACN2zB,UAAW3zB,EAAK2zB,iBAIrBtB,EAAYpzB,OAAS,IACpB,yBAAKN,MAAO,CACR6W,WAAY,SAEZ,kBAAC,GAAD,CAAOjU,MAAM,mBAAmByQ,OAAQ,UCC1DjE,IAFc4P,KAAZD,QAEiB1P,MAAaC,MAAM,CACxCjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,2CAInEkQ,GAAgB,CAClBpQ,KAAM,GACNk0B,YAAa,KACbntB,UAAW,GACXC,QAAS,GACTpE,YAAa,GACb0kB,OAAQ,GACXC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAs4BEsM,GA13BO,SAAC,GAAwH,IAAtHnM,EAAqH,EAArHA,sBAAuBC,EAA8F,EAA9FA,yBAAuCmM,EAAuD,EAApEC,YAAyCC,EAA2B,EAA3CC,eAA2C,EAEzF3lB,EAAe,GAAI,aAFsE,mBAEnI0mB,EAFmI,KAElHC,EAFkH,OAG5GvmB,oBAAS,GAHmG,mBAGnI8Q,EAHmI,KAG1HC,EAH0H,OAI1G/Q,oBAAS,GAJiG,mBAInIkR,EAJmI,KAIzHF,EAJyH,OAK1FhR,oBAAS,GALiF,mBAKjHoR,GALiH,aAM5EpR,oBAAS,GANmE,mBAMnImR,EANmI,KAM1G2I,EAN0G,OAOlF9Z,oBAAS,GAPyE,mBAOnIiR,EAPmI,KAO7G8I,EAP6G,OAQpG/Z,mBAAS,IAR2F,mBAQnI2lB,EARmI,KAQtHxB,EARsH,OAS9GnkB,mBAAS,IATqG,mBASnI4lB,EATmI,KAS3HxD,EAT2H,OAU5GpiB,mBAAS,IAVmG,mBAUnIyjB,EAVmI,KAU1HD,EAV0H,OAW5GxjB,mBAAS,IAXmG,mBAWnI/J,EAXmI,KAW1H4vB,EAX0H,OAYlG7lB,mBAAS,IAZyF,oBAYnI8a,GAZmI,MAYrHC,GAZqH,SAa5F/a,mBAAS,IAbmF,qBAanIokB,GAbmI,MAalHC,GAbkH,SAclGrkB,mBAAS,IAdyF,qBAcnIsiB,GAdmI,MAcrHD,GAdqH,SAexGriB,mBAAS,IAf+F,qCAgB5GA,mBAAS,KAhBmG,qCAiBpGA,mBAAS,KAjB2F,qBAiBnIpM,GAjBmI,MAiBtHoyB,GAjBsH,SAkBnGhmB,mBAAS,IAlB0F,qBAkBtIuY,GAlBsI,MAkBvH0N,GAlBuH,SAmBtGjmB,mBAAS,IAnB6F,qBAmBnIomB,GAnBmI,MAmBvHC,GAnBuH,SAoBpGrmB,mBAAS,IApB2F,qBAoBnIqlB,GApBmI,MAoBtHE,GApBsH,SAqB9GvlB,mBAAS,IArBqG,qBAqBtI4Y,GArBsI,MAqB7HsN,GArB6H,SAsB1GlmB,mBAAS,IAtBiG,qBAsBtI6Y,GAtBsI,MAsB3HsN,GAtB2H,SAwBhHnmB,mBAAS,CAC/BwmB,QAAS,KACTC,MAAO,OA1B+H,qBAwBnI3wB,GAxBmI,MAwB5H4wB,GAxB4H,MAkCpIllB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAjC,EAAA,6DAEXoc,EAAY3K,EAAWA,EAAS1e,KAAI,SAAA2B,GACtC,OAAOA,EAAMT,MACZ,GAELhB,QAAQC,IAAI,cAAc0yB,IAEpBntB,EAAWmtB,GAAYpzB,OAAS,EAAIozB,GAAY7yB,KAAI,SAAAoD,GACtD,MAAO,CACHjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAErB,GAdY,SAiBW0vB,EAAsB,CAC9CjvB,KAAM,CACFtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBroB,SAAUkyB,EACVrvB,KAAMsvB,EACNvvB,MAAOotB,EACP3tB,MAAOA,GACPlC,YAAaA,GACbgzB,MAAOnlB,EAAOmlB,MACd5wB,KAAMyL,EAAOzL,KACb7B,MAAO0nB,EACP3jB,WAEAsgB,UAAW/W,EAAO+W,UAC9BE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,GAAS3lB,KAAK,KAGxB+oB,GAAI,CACHxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUC,GAAW5lB,KAAK,KAC1BjC,KAAMyQ,EAAO6W,OAAOwD,OACpB9lB,KAAMyL,EAAOolB,SACbjzB,YAAa6N,EAAO8W,kBAzCA,QAiBXuO,EAjBW,SAkD6B,OAAzBA,EAAc9vB,SAC/B4Z,GAAwB,kBACxBle,QAAQC,IAAI,sBAAsBm0B,GAElCxB,EAAc,CAAC,aACX5xB,GAAIozB,EAAa,KAAW,GAC5Br1B,IAAKq1B,EAAa,KAAW,GAC7B91B,KAAM81B,EAAa,MAAY,GAC/BlzB,YAAakzB,EAAa,aAAmB,IAE1CA,IANM,oBAOR1B,KACLnM,GAAyB,GAEzBjI,EAAY,IACZ+J,GAAgB,IAChB8K,EAAW,IACXzD,EAAU,IACVC,GAAgB,IAChBmB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnB3iB,EAAQ2a,aAMZ3a,EAAQC,eAAc,GA9EL,2CAAH,wDAoFlBjP,QAAQC,IAAI,oBAAoB0yB,IAIhC9lB,qBAAU,WACN,IAAK+mB,EAAe,UAAe,CAC/B,IAAM9nB,EAAQ8nB,EAAe,MAC7B,GAAI9nB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAIrDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACjCF,OAAO0P,OAAOjD,EAAK,OACnB,IACHvJ,SAAQ,SAACqnB,EAAKC,GACjB,GAAmB,kBAARD,EACPnH,GAAsBmH,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACpBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACTnH,GAAsBmH,aAQ/C,CAACgK,IAMJ/mB,qBAAU,WAEN,GAAI6mB,IAAcA,GAAWn0B,OAAS,GAAKozB,IACvC,GAAIe,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CACxC,IAAM00B,EAAYP,GAAWA,GAAWn0B,OAAS,GAA/B,SAAgDm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GAAKm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IAC7HS,QAAQC,IAAI,YAAag0B,GAEzBpB,GAAe,GAAD,oBAAKF,IAAL,gBACPe,GAAWA,GAAWn0B,OAAS,GADxB,CAEV0B,IAAKyyB,GAAWA,GAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAKb,GAAIuvB,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CAC7CS,QAAQC,IAAI,aAAcyzB,IAC1B1zB,QAAQC,IAAI,cAAe0yB,IAE3B,IAAM4B,EAAiB5B,GAAYvS,QAAO,SAAA9f,GACtC,IAAIk0B,GAAS,EAMb,OALAd,GAAWnxB,SAAQ,SAAAW,GACXA,EAAQlC,KAAOV,EAAKW,MACpBuzB,GAAS,MAGVA,KAEX3B,GAAe0B,SAMnB1B,GAAe,MAKpB,CAACa,KAOJ,IAAM7F,GAAe,SAAC7d,GAClBuW,GAAyB,IAqF7B,OACI,kBAAC,IAAD,CACInX,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI5Q,MAAO,CACHuT,IAAK,QAGTsQ,UAAW,CACP/S,OAAQ,EACRqG,QAAS,GAEbnE,MAAO,OACPpQ,MAAM,iBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,WAKd,6BAAS7sB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,oDAIA,yBAAKA,UAAWsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAAI,mBAAqB,aACzE,kBAAC+V,GAAA,EAAD,QAGR,yBAAK7W,UAAU,sCACf,kBAACf,EAAD,CAC5BI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,WACbD,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBmkB,EAAgB9nB,MAAhB,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBmkB,EAAgB9nB,MAAhB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACjS,EAAD,CACAI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAUsR,EAAQkW,QAAUpW,EAAOoW,SAChCnW,GAAgBmkB,EAAgB9nB,MAAhB,aAEnBzN,YAAcqR,EAAQkW,QAAUpW,EAAOoW,SACpCnW,GAAgBmkB,EAAgB9nB,MAAhB,aACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAQjB,wBAAIlR,UAAU,mBAAd,eAIA,yBAAKQ,MAAO,CACXgT,MAAO,OACPnC,SAAU,SAEV,kBAAC,KAAD,CACC4kB,OAAQC,KACR9zB,KAAMK,GACN0zB,OAAQ,SAAAF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAExCx2B,SAAU,SAACY,EAAO41B,GACjB,IAAM7zB,EAAO6zB,EAAOG,UACpBvB,GAAezyB,IAEhBqkB,OAAQ,SAACpmB,EAAO41B,GACf10B,QAAQC,IAAI,QAASy0B,IAEtBpD,QAAS,SAACxyB,EAAO41B,GAChB10B,QAAQC,IAAI,SAAUy0B,OAKxB,yBAAKz1B,MAAO,CACX4W,UAAU,UAGZ,wBAAIpX,UAAU,mBAAd,kBAIA,yBAAKQ,MAAO,CACXgT,MAAO,OACPnC,SAAU,SAEV,kBAAC,KAAD,CACC4kB,OAAQC,KACR9zB,KAAMglB,GACN+O,OAAQ,SAAAF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAExCx2B,SAAU,SAACY,EAAO41B,GACjB,IAAM7zB,EAAO6zB,EAAOG,UACpBtB,GAAiB1yB,IAElBqkB,OAAQ,SAACpmB,EAAO41B,GACf10B,QAAQC,IAAI,QAASy0B,IAEtBpD,QAAS,SAACxyB,EAAO41B,GAChB10B,QAAQC,IAAI,SAAUy0B,OAgCQ,yBAAKz1B,MAAO,CACRgc,aAAc,UAqClB,yBAAKxc,UAAU,yDACX,uCAGA,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,wEACX,kBAACq2B,GAAD,CACIh3B,MAAM,UACNE,MAAOoF,GAAM0wB,QACbx1B,KAAK,UACLJ,SAAU,SAAC8R,GAAD,OAAOgkB,GAAS,eACnB5wB,GADkB,CAErB0wB,QAAS9jB,EAAE/F,OAAOjM,aAM9B,yBAAKS,UAAU,yEAEX,kBAACq2B,GAAD,CACIh3B,MAAM,QACNE,MAAOoF,GAAM2wB,MACbz1B,KAAK,QACLJ,SAAU,SAAC8R,GAAD,OAAOgkB,GAAS,eACnB5wB,GADkB,CAErB2wB,MAAO/jB,EAAE/F,OAAOjM,iBAyC5C,yBAAKS,UAAU,kCACX,yBAAKA,UAAU,wCACX,wCAIA,yBAAKA,UAAW8E,GAAWA,EAAQhE,OAAS,EAAI,mBAAqB,aACjE,kBAAC+V,GAAA,EAAD,QAKR,yBAAK7W,UAAU,sCAEX,wBAAIA,UAAU,mBAAd,YAGA,kBAACq4B,GAAD,CACInD,cAAeA,GACfD,WAAYA,KAGhB,yBAAKz0B,MAAO,CACR4W,UAAW,UAGf,wBAAIpX,UAAU,mBAAd,oBAIA,kBAACs4B,GAAD,CACIpE,YAAaA,GACbE,eAAgBA,OAQ5B,yBAAKp0B,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIwX,UAAU,OAAOpU,MAAO,uFACxB,uBAAG0U,KAAK,OACJ,kBAACmM,GAAA,EAAD,SAIZ,yBAAKjkB,UAAU,sCACX,yBAAKA,UAAU,gCACV+f,GAEGA,EAASjf,OAAS,GAAKif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACxC,OACI,yBAAK/X,UAAU,sCACX,yBACIA,UAAU,kDACVwR,QAAS,kBAAMoY,GAAgB5mB,EAAMT,MAErC,yBAAKgJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACIkO,QAAS,kBA5a9C,SAACjP,GAExB,IAAM8pB,EAAYtM,GAAYA,EAAS4B,QAAO,SAAA3e,GAC1C,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAsa+DC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,QAIH5C,KAAiB3mB,EAAMT,KAInBonB,IAA0B,IAAV5R,IAHjB,0BAAM/X,UAAU,4CACZ,kBAAC6kB,GAAA,EAAD,WAYxB,kBAAC,KAAD,CACIzhB,MAAO,iBAEP,yBACIoO,QAAS,WACLoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE/B3oB,UAAU,4CAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACZ,kBAACgnB,GAAA,EAAD,YAaxB,yBAAKhnB,UAAU,kCAEnD,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIwX,UAAU,OAAOpU,MAAO,sFACxB,uBAAG0U,KAAK,OACJ,kBAACmM,GAAA,EAAD,SAIZ,yBAAKjkB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAUsR,EAAQoW,WAAatW,EAAOsW,YACpCrW,GAAgBmkB,EAAgB9nB,MAAhB,gBAElBzN,YAAcqR,EAAQoW,WAAatW,EAAOsW,YACxCrW,GAAgBmkB,EAAgB9nB,MAAhB,gBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACjS,EAAD,CACAI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAUsR,EAAQqW,aAAevW,EAAOuW,cACtCtW,GAAgBmkB,EAAgB9nB,MAAhB,kBAElBzN,YAAcqR,EAAQqW,aAAevW,EAAOuW,cAC1CtW,GAAgBmkB,EAAgB9nB,MAAhB,kBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACA7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QAAUsR,EAAQsW,iBAAmBxW,EAAOwW,kBAC1CvW,GAAgBmkB,EAAgB9nB,MAAhB,sBAElBzN,YAAcqR,EAAQsW,iBAAmBxW,EAAOwW,kBAC9CvW,GAAgBmkB,EAAgB9nB,MAAhB,sBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACA7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QAAUsR,EAAQuW,mBAAqBzW,EAAOyW,oBAC5CxW,GAAgBmkB,EAAgB9nB,MAAhB,wBAElBzN,YAAcqR,EAAQuW,mBAAqBzW,EAAOyW,oBAChDxW,GAAgBmkB,EAAgB9nB,MAAhB,wBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAIlR,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA4lB,QAASmP,GACT5vB,KAAMsiB,KAGN,yBAAKjnB,MAAO,CACZ4W,UAAU,UAGV,wBAAIpX,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA4lB,QAASoP,GACT7vB,KAAMuiB,QAQ0B,yBAAK1nB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACI8W,MAAM,MACN6I,QAASwV,EAAgB9nB,MAAhB,kBAAgDmnB,EAAY1zB,OAAS,GAC9E0W,UAAU,OAAOpU,MAAO,gCACxB,yBAAKpD,UAAaw0B,EAAY1zB,OAAS,GAC/Bq0B,EAAgB9nB,MAAhB,eAA2D8nB,EAAgB9nB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACwJ,GAAA,EAAD,SAKZ,yBAAK7W,UAAU,mDACX,kBAAC,GAAD,CACIkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMhC,yBAAKhzB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,OAK3B,yBAAKjxB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CAAQqyB,WAAYA,UAa5C,kBAAC,GAAD,CACIzS,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SCj3B1CpC,IAXiB7N,MAAaC,MAAM,CACxCjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAUzC4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAIFC,GAAU,SAAC,GAA0B,IAAxBrrB,EAAuB,EAAvBA,KAAMm2B,EAAiB,EAAjBA,WAAiB,EACR1pB,oBAAS,GADD,mBAC/B8Q,EAD+B,KACtBC,EADsB,OAEoB/Q,oBAAS,GAF7B,mBAE/B8e,EAF+B,KAERC,EAFQ,OAGSnf,EAAe,GAAI,gBAH5B,mBAGf+pB,GAHe,WAKhC1iB,EAAUC,eAGV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACOkqB,EAAqB,CAC5Cv3B,WAAY,CACRE,aAAc,CACVoB,SAJQ,QACdm2B,EADc,SAYwB,OAAxBA,EAAa7yB,SAvDR+Q,EAwDG,iBAvDhCD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqDjC6hB,EAAav2B,EAAKuf,QAAO,SAAA9f,GAAI,OAAIA,EAAKU,KAAOA,KACnDg2B,EAAWI,IAfK,iCA3CI,IAAC/hB,IA2CL,OAAH,sDAiCrB,OACI,oCACI,kBAAC,KAAD,CAMI0D,KAAK,QAEL8D,WAAYhc,GAGZ,kBAAC,GAAD,CACIgB,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OAEPxT,UAAU,uBAEVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACJ,oCACI,yBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,KACrCqrB,EAAyBlP,IAE7BnT,IAAK3I,EAAOU,IAAI,YAAY9C,MAAO,CAC/BqT,OAAQ,OACRL,MAAO,OACPmd,UAAW,UACXlwB,aAAc,MACd6W,OAAQ,iBAM5B,kBAAC,GAAD,CACIlU,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACJ,oCAEI,wBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,KAErCqrB,EAAyBlP,IAE7Ble,MAAO,CACH6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAEXlT,OAQjB,kBAAC,GAAD,CACIhB,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,UACNob,UAAU,eACVle,IAAI,KACJN,UAAU,yBAkCd,kBAAC,GAAD,CAEIA,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACJ,kBAAC,KAAD,CAAOpE,KAAK,UACR,uBAAGxC,KAAK,MACJ,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,qBAC3B,0BAAMpD,UAAU,WAAWwR,QAAS,WAChCoO,GAAW,GACXgO,EAAyBlP,KAEzB,kBAAC0P,GAAA,EAAD,SAOZ,kBAAC,KAAD,CACIjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBAAgBkhB,OAAO,MAAMc,WAAW,MAC9C,0BACIplB,UAAU,4BAEV,kBAAC8kB,GAAA,EAAD,aAavB6I,GAAyB,kBAACiL,GAAD,CACzB1E,YAAa9xB,EACbgyB,eAAgBmE,EAChBzQ,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvB0U,kBAAmB1G,MAsHjBkL,GA5GC,SAAC,GAAgB,qBAGChqB,mBAAS,IAHX,mBAGrBiqB,EAHqB,KAGZP,EAHY,OAKW9pB,EAAe,GAAI,cAL9B,mBAKrB4iB,EALqB,KAKXC,EALW,KAQ5BljB,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACOgjB,EAAmB,CAClCrwB,WAAW,CACPC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,KAChBwiB,YAAa,aANX,OACN5zB,EADM,OAWZozB,EAAWpzB,GAXC,2CAAH,qDAabygB,KACD,IAvByB,MA2B8B/W,oBAAS,GA3BvC,mBA2BrBgZ,EA3BqB,KA2BEC,EA3BF,KAsD5B,OACI,oCAEI,yBAAK9nB,UAAU,yBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uCAAd,WAIA,kBAAC,GAAD,CACI8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,mBACZjB,SAAU,SAAA8R,GAAC,OAtBd,SAAChS,GAClB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC1B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAA9f,GAAI,OAAIA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBACvFke,EAAWS,IAmBoBjK,CAAaxd,EAAE/F,OAAOjM,WAG7C,kBAAC,IAAD,CAEIS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ5C,YASJ,yBAAK9nB,UAAU,uCACVqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GAAK,kBAAC,GAAD,CACpCy3B,WAAYA,EACZn2B,KAAM02B,IACTzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAGtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACjC,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,kBAAkBO,MAAOwS,KAAMI,4BAMlE,kBAACqjB,GAAD,CACI/E,YAAa4E,EACb1E,eAAgBmE,EAChB1Q,sBAAuBA,EACvBC,yBAA0BA,MCrVpClY,IAFc4P,KAAZD,QAEiB1P,MAAaC,MAAM,CACxCjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,2CAInEkQ,GAAgB,CAClBpQ,KAAM,GACNk0B,YAAa,KACbntB,UAAW,GACXC,QAAS,GACTpE,YAAa,GACb0kB,OAAQ,GACXC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAqqCEsM,GA1pCO,SAAC,GAAmF,IAAjFnM,EAAgF,EAAhFA,sBAAuBC,EAAyD,EAAzDA,yBAA0BuM,EAA+B,EAA/BA,kBAA+B,EAI9C5lB,EAAe,GAAI,iBAJ2B,mBAI9F6lB,EAJ8F,aAK9C7lB,EAAe,GAAI,iBAL2B,mBAK9F8jB,EAL8F,KAK1EgC,EAL0E,OAMtB9lB,EAAe,GAAI,6BANG,mBAM9Dsb,GAN8D,aAO1Btb,EAAe,GAAI,2BAPO,mBAOhEub,GAPgE,aAQlBvb,EAAe,GAAI,+BARD,gCAStBA,EAAe,GAAI,8BATG,mBAS9Dwb,GAT8D,aAUtBxb,EAAe,GAAI,6BAVG,mBAU9Dyb,GAV8D,aAahErb,mBAAS,IAbuD,mBAa9FqlB,EAb8F,KAalFE,EAbkF,OAcvEvlB,oBAAS,GAd8D,mBAc9F8Q,EAd8F,KAcrFC,EAdqF,OAerE/Q,oBAAS,GAf4D,mBAe9FkR,EAf8F,KAepFF,EAfoF,OAgBrDhR,oBAAS,GAhB4C,mBAgB5EoR,GAhB4E,aAiBvCpR,oBAAS,GAjB8B,mBAiB9FmR,EAjB8F,KAiBrE2I,EAjBqE,OAkB7C9Z,oBAAS,GAlBoC,oBAkB9FiR,GAlB8F,MAkBxE8I,GAlBwE,SAmB/D/Z,mBAAS,IAnBsD,qBAmB9F2lB,GAnB8F,MAmBjFxB,GAnBiF,SAoBzEnkB,mBAAS,IApBgE,qBAoB9F4lB,GApB8F,MAoBtFxD,GApBsF,SAqBvEpiB,mBAAS,IArB8D,qBAqB9FyjB,GArB8F,MAqBrFD,GArBqF,SAsBvExjB,mBAAS,IAtB8D,qBAsBrF6lB,IAtBqF,gBAuB7D7lB,mBAAS,IAvBoD,qBAuB9F8a,GAvB8F,MAuBhFC,GAvBgF,SAwBvD/a,mBAAS,IAxB8C,qBAwB9FokB,GAxB8F,MAwB7EC,GAxB6E,SAyB7DrkB,mBAAS,IAzBoD,qBAyB9FsiB,GAzB8F,MAyBhFD,GAzBgF,SA0BxEriB,mBAAS,IA1B+D,qBA0BxF8lB,IA1BwF,gBA2BxE9lB,mBAAS,IA3B+D,qBA2BxF+lB,IA3BwF,gBA4B/D/lB,mBAAS,IA5BsD,qBA4B9FpM,GA5B8F,MA4BjFoyB,GA5BiF,SA6B9DhmB,mBAAS,IA7BqD,qBA6BjGuY,GA7BiG,MA6BlF0N,GA7BkF,SA8BzEjmB,mBAAS,IA9BgE,qBA8BjG4Y,GA9BiG,MA8BxFsN,GA9BwF,SA+BrElmB,mBAAS,IA/B4D,qBA+BjG6Y,GA/BiG,MA+BtFsN,GA/BsF,SAgC3DnmB,mBAAS,IAhCkD,qCAiCnDA,mBAAS,MAjC0C,qCAkClDA,oBAAS,IAlCyC,qCAoClEA,mBAAS,KApCyD,qBAoC9FomB,GApC8F,MAoCnFC,GApCmF,SAwCpDzmB,EAAe,GAAI,gBAxCiC,qBAwC9F0mB,GAxC8F,MAwC7EC,GAxC6E,MA0CrGhnB,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACfimB,EAAyB,CAC3BtzB,WAAY,CACRE,aAAc,CACVoB,GAAI8xB,EAAkB9xB,OAJb,2CAAH,qDAUtB4nB,KAED,CAACkK,IAvDiG,OA0D3ExlB,mBAAS,CAC/BwmB,QAAS,KACTC,MAAO,OA5D0F,qBA0D9F3wB,GA1D8F,MA0DvF4wB,GA1DuF,MAkE/FllB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,yDAEXoc,EAAY3K,EAAWA,EAAS1e,KAAI,SAAA2B,GACtC,OAAOA,EAAMT,MACZ,GAELhB,QAAQC,IAAI,cAAc0yB,GAEpBntB,EAAWmtB,EAAYpzB,OAAS,EAAIozB,EAAY7yB,KAAI,SAAAoD,GACtD,MAAO,CACHjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAErB,KAGG2uB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GAjBpD,oBAkBH8pB,EAAyB,GAE5BF,GAAaA,EAAU5pB,OAAS,GAC/B4pB,EAAU5mB,SAAQ,SAAAymB,GACX8J,GAAqBA,EAAiB,QACjCA,EAAiB,MAAU5yB,SAAS8oB,IACpCK,EAAuB3mB,KAAKsmB,SAOxCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GA/BxD,iCAgCCipB,EAAqC,CACvC9oB,WAAY,CACRE,aAAc,CACVqpB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,KAGlC4D,KAAM,CACFnD,MAAO4nB,KAxCV,oCA4CAA,EAAuB,IAAMA,EAAuB9pB,OAAS,GA5C7D,kCA6CCkpB,EAAmC,CACrC/oB,WAAY,CACRE,aAAc,CACVopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OAlDjC,yBA6DW6yB,GAAsB,CAC9Cn0B,WAAY,CACRE,aAAc,CACVoB,GAAI8xB,EAAkB9xB,KAG9B4D,KAAM,CACFtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBroB,SAAUkyB,GACVrvB,KAAMsvB,GACNvvB,MAAOotB,GACP3tB,MAAOA,GACPlC,YAAaA,GACbgzB,MAAOnlB,EAAOmlB,MACd5wB,KAAMyL,EAAOzL,KACb7B,MAAO0nB,EACP3jB,WAEAsgB,UAAW/W,EAAO+W,UAC9BE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,GAAS3lB,KAAK,KAGxB+oB,GAAI,CACHxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUC,GAAW5lB,KAAK,KAC1BjC,KAAMyQ,EAAO6W,OAAOwD,OACpB9lB,KAAMyL,EAAOolB,SACbjzB,YAAa6N,EAAO8W,kBA1FA,SA6DXuO,EA7DW,SAoG6B,OAAzBA,EAAc9vB,SAC/B4Z,GAAwB,kBAGxBqI,GAAyB,GASzBjI,EAAY,IACZ+J,GAAgB,IAChB8K,GAAW,IACXzD,GAAU,IACVC,GAAgB,IAChBmB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnB3iB,EAAQ2a,aAMZ3a,EAAQC,eAAc,GA/HL,4CAAH,wDAwIlBpC,qBAAU,WACN,IAAK+mB,GAAe,UAAe,CAC/B,IAAM9nB,EAAQ8nB,GAAe,MAC7B,GAAI9nB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAIrDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACjCF,OAAO0P,OAAOjD,EAAK,OACnB,IACHvJ,SAAQ,SAACqnB,EAAKC,GACjB,GAAmB,kBAARD,EACPnH,GAAsBmH,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACpBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACTnH,GAAsBmH,aAQ/C,CAACgK,KAIJ/mB,qBAAU,WACN,GAAGmkB,EAAkB,MAAYA,EAAkB,KAAlB,UAA0CA,EAAkB,KAAlB,SAAuCzxB,OAAS,EAAE,CACzH,IAAMm0B,EAAa1C,EAAkB,KAAlB,SAAuClxB,KAAI,SAAAQ,GAC5D,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKW,SAGb0yB,GAAcD,GACd,IAAMf,EAAc3B,EAAkB,KAASxrB,SAAS1F,KAAI,SAAAQ,GACxD,MAAO,CACHW,IAAKX,EAAKW,IACVgzB,UAAW3zB,EAAK2zB,UAChB9vB,SAAU7D,EAAK6D,SACf4E,WAAYzI,EAAKyI,eAG1B8pB,EAAeF,GAIlB3yB,QAAQC,IAAI,6BAA6B+wB,EAAkB,QAC7D,CAACA,EAAkB,OAMrBnkB,qBAAU,WAEN,GAAI6mB,IAAcA,GAAWn0B,OAAS,GAAKozB,GACvC,GAAIe,GAAWn0B,OAASozB,EAAYpzB,OAAQ,CACxC,IAAM00B,EAAYP,GAAWA,GAAWn0B,OAAS,GAA/B,SAAgDm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GAAKm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IAC7HS,QAAQC,IAAI,YAAag0B,GAEzBpB,EAAe,GAAD,oBAAKF,GAAL,gBACPe,GAAWA,GAAWn0B,OAAS,GADxB,CAEV0B,IAAKyyB,GAAWA,GAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAKb,GAAIuvB,GAAWn0B,OAASozB,EAAYpzB,OAAQ,CAC7CS,QAAQC,IAAI,aAAcyzB,IAC1B1zB,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB5B,EAAYvS,QAAO,SAAA9f,GACtC,IAAIk0B,GAAS,EAMb,OALAd,GAAWnxB,SAAQ,SAAAW,GACXA,EAAQlC,KAAOV,EAAKW,MACpBuzB,GAAS,MAGVA,KAEX3B,EAAe0B,SAKnB1B,EAAe,MAIpB,CAACa,KAQJ7mB,qBAAU,WAgBN,GAdIimB,GAAqBA,EAAkBnvB,MACvCmtB,GAAWgC,EAAkBnvB,MAAlB,IAGXmtB,GAAW,IAEXgC,GAAqBA,EAAkBlvB,MAAQkvB,EAAkBlvB,KAAKrE,OAAS,EAE/EowB,GAAgBmD,EAAkBlvB,MAGlC+rB,GAAgB,IAGhBmD,GAAqBA,EAAkB/xB,UAAY+xB,EAAkB/xB,SAASxB,OAAS,EAAG,CAG1F,IAAMk1B,EAAc3B,EAAkB/xB,SACtC4wB,GAAmB8C,GACnBhD,GAAegD,QAGf9C,GAAmB,IAGnBmB,GAAqBA,EAAkB1tB,cAAgB0tB,EAAkB1tB,aACzE4uB,GAASlB,EAAkB1tB,cAG3B+tB,GAAW,IAKXL,GAAqBA,EAAkBtvB,MAAQsvB,EAAkBtvB,KACjE4vB,GAAaN,EAAkBtvB,MAG/B4vB,GAAa,IAIbN,GAAqBA,EAAkBrvB,MAAQqvB,EAAkBrvB,KACjE4vB,GAAaP,EAAkBrvB,MAG/B4vB,GAAa,MAKlB,CAACP,IAIJjmB,qBAAU,WACN,GAAImkB,EAAmB5kB,MAAQ/M,OAAOC,KAAK0xB,GAAoBzxB,OAAS,EAAG,CAEvE,IAAM6K,EAAS4mB,EAAmBnwB,KAAKY,MACnC2I,GAAUA,EAAO7K,OAAS,GAC1B+e,EAAYlU,GAGZ4mB,EAAmBnwB,KAAKQ,OAAS2vB,EAAmBnwB,KAAKQ,MAAxB,KAEjCid,EAAY,CAAC0S,EAAmBnwB,KAAKQ,OAA1B,oBAAoC+I,KAC/CpK,QAAQC,IAAI,SAAZ,CAAuB+wB,EAAmBnwB,KAAKQ,OAA/C,oBAAyD+I,KACzDie,GAAgB2I,EAAmBnwB,KAAKQ,MAAxB,QAGzB,CAAC2vB,IAGJnkB,qBAAU,WACN7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC7CS,QAAQC,IAAI,YAAaue,GAErB4J,KAAiB5J,EAAS,GAAGxd,KAC7BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,QAK3C,CAACA,IAGJ,IAAMuK,GAAuB,uCAAG,WAAM/nB,GAAN,SAAA+L,EAAA,sEACtB2b,EAAqC,CACvChpB,WAAY,CACRE,aAAc,CACVopB,QAAShoB,EACTioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OANV,2CAAH,sDAcvB8nB,GAAwB,uCAAG,WAAMrnB,GAAN,eAAAsL,EAAA,sEAEF4b,EAAqC,CAC5DjpB,WAAY,CACRE,aAAc,CACVopB,QAASvnB,EAAMT,GACfioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OAPT,OAEvBkoB,EAFuB,OAY7BlpB,QAAQC,IAAI,eAAgBipB,GAGxBA,GAAwC,OAAxBA,EAAa5kB,OAC7B4Z,GAAwB,qBAkBxBuE,GAAsB,mDAlCG,2CAAH,sDA0C9B5V,qBAAU,WACN,IAAKkmB,EAAkB,UAAe,CAClC,IAAMjnB,EAAQinB,EAAkB,MAChC,GAAIjnB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAIrDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACjCF,OAAO0P,OAAOjD,EAAK,OACnB,IACHvJ,SAAQ,SAACqnB,EAAKC,GACjB,GAAmB,kBAARD,EACPnH,GAAsBmH,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACpBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACTnH,GAAsBmH,aAQ/C,CAACmJ,IAGJ,IAAMlF,GAAe,SAAC7d,GAClBuW,GAAyB,IA2D7B,OAjBA1Z,qBAAU,WAEN,GAAGmkB,EAAmBnwB,MAAQxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GAAKyxB,EAAmBnwB,KAAKqlB,SAAS,CAC9G,IAAMA,EAAW8K,EAAmBnwB,KAAKqlB,SAASrmB,MAAM,KAExDG,QAAQC,IAAI,gBAAgBimB,GAE5B,IAAMC,EAAa6K,EAAmBnwB,KAAKyoB,GAAxB,SAAuCzpB,MAAM,KAChE2zB,GAAYtN,GACZuN,GAActN,MAGpB,CAAC6K,EAAkB,OAMjB,kBAAC,IAAD,CACI5hB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,kBAGFokB,EAHE,GAIA9B,EAAkB,MAAY3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GAAKyxB,EAAkB,KAAlB,IAAoC,CACzHjL,YAAaiL,EAAkB,KAAlB,GAAiClL,UAC9CG,kBAAmB+K,EAAkB,KAAlB,GAAiChL,gBACpDJ,OAAQoL,EAAkB,KAAlB,GAAiC1yB,KACzC61B,SAAUnD,EAAkB,KAAlB,GAAiC1tB,KAC3CuiB,cAAemL,EAAkB,KAAlB,GAAiC9vB,iBAK3D,gBACGqO,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI5Q,MAAO,CACHuT,IAAK,QAGTsQ,UAAW,CACP/S,OAAQ,EACRqG,QAAS,GAEbnE,MAAO,OACPpQ,MAAM,iBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,WAKd,6BAAS7sB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,oDAIA,yBAAKA,UAAWsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAAI,mBAAqB,aACzE,kBAAC+V,GAAA,EAAD,QAGR,yBAAK7W,UAAU,sCACf,kBAACf,EAAD,CAC5BI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,WACbD,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBmkB,GAAgB9nB,MAAhB,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBmkB,GAAgB9nB,MAAhB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACjS,EAAD,CACAI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAUsR,EAAQkW,QAAUpW,EAAOoW,SAChCnW,GAAgBmkB,GAAgB9nB,MAAhB,aAEnBzN,YAAcqR,EAAQkW,QAAUpW,EAAOoW,SACpCnW,GAAgBmkB,GAAgB9nB,MAAhB,aACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAQjB,wBAAIlR,UAAU,mBAAd,eAIA,yBAAKQ,MAAO,CACXgT,MAAO,OACPnC,SAAU,SAEV,kBAAC,KAAD,CACC4kB,OAAQC,KACR9zB,KAAMK,GACN0zB,OAAQ,SAAAF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAExCx2B,SAAU,SAACY,EAAO41B,GACjB,IAAM7zB,EAAO6zB,EAAOG,UACpBvB,GAAezyB,IAEhBqkB,OAAQ,SAACpmB,EAAO41B,GACf10B,QAAQC,IAAI,QAASy0B,IAEtBpD,QAAS,SAACxyB,EAAO41B,GAChB10B,QAAQC,IAAI,SAAUy0B,OAKxB,yBAAKz1B,MAAO,CACX4W,UAAU,UAGZ,wBAAIpX,UAAU,mBAAd,kBAIA,yBAAKQ,MAAO,CACXgT,MAAO,OACPnC,SAAU,SAEV,kBAAC,KAAD,CACC4kB,OAAQC,KACR9zB,KAAMglB,GACN+O,OAAQ,SAAAF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAExCx2B,SAAU,SAACY,EAAO41B,GACjB,IAAM7zB,EAAO6zB,EAAOG,UACpBtB,GAAiB1yB,IAElBqkB,OAAQ,SAACpmB,EAAO41B,GACf10B,QAAQC,IAAI,QAASy0B,IAEtBpD,QAAS,SAACxyB,EAAO41B,GAChB10B,QAAQC,IAAI,SAAUy0B,OA+BQ,yBAAKz1B,MAAO,CACRgc,aAAc,UAqClB,yBAAKxc,UAAU,yDACX,uCAGA,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,wEACX,kBAACq2B,GAAD,CACIh3B,MAAM,UACNE,MAAOoF,GAAM0wB,QACbx1B,KAAK,UACLJ,SAAU,SAAC8R,GAAD,OAAOgkB,GAAS,eACnB5wB,GADkB,CAErB0wB,QAAS9jB,EAAE/F,OAAOjM,aAM9B,yBAAKS,UAAU,yEAEX,kBAACq2B,GAAD,CACIh3B,MAAM,QACNE,MAAOoF,GAAM2wB,MACbz1B,KAAK,QACLJ,SAAU,SAAC8R,GAAD,OAAOgkB,GAAS,eACnB5wB,GADkB,CAErB2wB,MAAO/jB,EAAE/F,OAAOjM,iBA+E5C,yBAAKS,UAAU,kCAEnB,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIwX,UAAU,OAAOpU,MAAO,uFACxB,uBAAG0U,KAAK,OACJ,kBAACmM,GAAA,EAAD,SAK5C,yBACIzjB,MAAO,CACHmX,QAAS,QAEb3X,UAAU,gCACTuyB,EAAmB7kB,WAChB,yBAAKlN,MAAO,CACRmX,QAAS,WAET,kBAAC,KAAD,OAGP4a,EAAmB5kB,MAChB,oCACKoS,GAEGA,EAASjf,OAAS,GAAKif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACxC,OACI,yBAAK/X,UAAU,sCACX,yBACIA,UAAU,kDACVwR,QAAS,WACLoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACIkO,QAAS,YAzaV,SAACjP,GAExB,IAAM8pB,EAAYtM,GAAYA,EAAS4B,QAAO,SAAA3e,GAC1C,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAoagBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAIlCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,QAIH5C,KAAiB3mB,EAAMT,KAInBonB,IAA0B,IAAV5R,IAHjB,0BAAM/X,UAAU,4CACZ,kBAAC6kB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACIzhB,MAAO,iBAEP,yBACIoO,QAAS,WACLoO,GAAW,GACXgJ,IAAwB,GACxBD,GAA2B,IAE/B3oB,UAAU,4CAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACZ,kBAACgnB,GAAA,EAAD,YAaxB,yBAAKhnB,UAAU,kCAEf,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIwX,UAAU,OAAOpU,MAAO,sFACxB,uBAAG0U,KAAK,OACJ,kBAACmM,GAAA,EAAD,SAIZ,yBAAKjkB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAUsR,EAAQoW,WAAatW,EAAOsW,YACpCrW,GAAgBmkB,GAAgB9nB,MAAhB,gBAElBzN,YAAcqR,EAAQoW,WAAatW,EAAOsW,YACxCrW,GAAgBmkB,GAAgB9nB,MAAhB,gBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACjS,EAAD,CACAI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAUsR,EAAQqW,aAAevW,EAAOuW,cACtCtW,GAAgBmkB,GAAgB9nB,MAAhB,kBAElBzN,YAAcqR,EAAQqW,aAAevW,EAAOuW,cAC1CtW,GAAgBmkB,GAAgB9nB,MAAhB,kBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACA7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QAAUsR,EAAQsW,iBAAmBxW,EAAOwW,kBAC1CvW,GAAgBmkB,GAAgB9nB,MAAhB,sBAElBzN,YAAcqR,EAAQsW,iBAAmBxW,EAAOwW,kBAC9CvW,GAAgBmkB,GAAgB9nB,MAAhB,sBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACA7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QAAUsR,EAAQuW,mBAAqBzW,EAAOyW,oBAC5CxW,GAAgBmkB,GAAgB9nB,MAAhB,wBAElBzN,YAAcqR,EAAQuW,mBAAqBzW,EAAOyW,oBAChDxW,GAAgBmkB,GAAgB9nB,MAAhB,wBAClB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAIlR,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA4lB,QAASmP,GACT5vB,KAAMsiB,KAGN,yBAAKjnB,MAAO,CACZ4W,UAAU,UAGV,wBAAIpX,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA4lB,QAASoP,GACT7vB,KAAMuiB,QAW0B,yBAAK1nB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACI8W,MAAM,MACN6I,QAASwV,GAAgB9nB,MAAhB,kBAAgDmnB,GAAY1zB,OAAS,GAC9E0W,UAAU,OAAOpU,MAAO,gCACxB,yBAAKpD,UAAaw0B,GAAY1zB,OAAS,GAC/Bq0B,GAAgB9nB,MAAhB,eAA2D8nB,GAAgB9nB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACwJ,GAAA,EAAD,SAKZ,yBAAK7W,UAAU,mDACX,kBAAC,GAAD,CACIkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAKhzB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAKjxB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CAAQqyB,WAAYA,WAa5C,kBAAC,GAAD,CACIzS,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCpoCnCoZ,GAhEQ,SAAC,GAGV,IAFVtC,EAES,EAFTA,UACAlxB,EACS,EADTA,SAGMoQ,EAAUC,eAFP,EAIwCtH,EAC7C,GACA,qBANK,mBAIF8jB,EAJE,KAIkBsE,EAJlB,KA2BT,OAlBAzoB,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACfuoB,EAAmB,CACrB51B,WAAY,CACRE,aAAc,CACVoB,GAAIq0B,MAJK,2CAAH,qDAUtBQ,KACD,IAGH71B,QAAQC,IAAI,2BAA4B+wB,GAIpC,kBAAC,KAAD,CACI7B,UAAW,CAAEtR,KAAM,GACnB3N,QAAS8gB,EAAmB7kB,WAC3B6kB,EAAmBnwB,MAAQxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GACtE,oCACI,yBAAKd,UAAU,2BACX,yBACIwR,QAAS,kBAAMsE,EAAQ7R,KAAR,yBAA+B2yB,KAC9C52B,UAAU,kCACV,yBAAKuL,IAAKgnB,EAAmBnwB,KAAKQ,OAAS2vB,EAAmBnwB,KAAKQ,MAAxB,MAAwCU,IAAI,MAE3F,yBAAKtD,UAAU,iCACX,wBACIwR,QAAS,kBAAMsE,EAAQ7R,KAAR,yBAA+B2yB,MAE7CrE,EAAmBnwB,KAAKvC,MAE7B,4BACK0yB,EAAmBnwB,KAAKuC,OAE7B,yCACee,QCwU5ByzB,IAtXiBxb,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OAOe,SAAC3X,GAAkB,IAAD,EACkBpH,EAAe,GAAI,gBADrC,mBAC9B8jB,EAD8B,KACVgC,EADU,KAG/BrzB,EAASuuB,eACT3Z,EAAUC,eACV6gB,EAAY11B,EAAM,GALa,EAMe2N,oBAAS,GANxB,mBAM9BuqB,EAN8B,KAMVC,EANU,KASrCjrB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfimB,EAAyB,CAC3BtzB,WAAY,CACRE,aAAc,CACVoB,GAAIq0B,MAJK,2CAAH,qDAUtBzM,KAED,CAACyM,IAKJr1B,QAAQC,IAAI,qBAAsB+wB,GAElChxB,QAAQC,IAAI,cAAeN,GAE3B,IA+BMgvB,EAAMqC,EAAmB5kB,MAAQ4kB,EAAmBnwB,MAAQmwB,EAAmBnwB,KAAnB,MA/BvC,SAAC+tB,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9uB,KAAI,SAAAQ,GAAI,OAAIA,EAAKe,SAC7B,IAAMwtB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKrsB,SAAQ,SAACjC,EAAMkW,GACZsY,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzuB,IAElDuuB,EAAQE,GAAgB,CAACzuB,GAE9BwuB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACf/uB,QAAQC,IAAI,aAAc6uB,OAI3BD,EAI0FG,CAAmBgC,EAAmBnwB,KAAnB,OAAoC,GAI5J,OADAb,QAAQC,IAAI,eAAgB+wB,GAExB,yBAAKvyB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,6CAICuyB,EAAmB5kB,MAAQ4kB,EAAmBnwB,MAASxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GAClG,oCACC,kBAACw4B,GAAD,CACKxR,yBAA0BuR,EAC3BxR,sBAAuBuR,EACpB/E,kBAAmB9B,EAAmBnwB,OAGzC,kBAAC,IAAD,CACGoP,QAAS,kBAAM6nB,GAAsB,IACrC/5B,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHT,UAWb,kBAAC,KAAD,CACIqC,QAAM,EAACC,UAAW,CAAEtR,KAAM,GAC1B3N,QAAS8gB,EAAmB7kB,WAC3B6kB,EAAmB5kB,MAAQ4kB,EAAmBnwB,QAAUxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,IACnG,kBAAC,KAAD,CAAO2B,YAAY,0BAA0BO,MAAOwS,KAAMI,yBAG7D2c,EAAmB5kB,MAAQ4kB,EAAmBnwB,MAASxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GAClG,oCACI,yBAAKd,UAAU,gCACX,yBAAKA,UAAU,mGACX,yBAAKuL,IAAKgnB,EAAmBnwB,KAAnB,OAAoCmwB,EAAmBnwB,KAAnB,YAA2CkB,IAAI,MAEjG,yBAAKtD,UAAU,qCACX,4BACKuyB,EAAmBnwB,KAAnB,MAEL,4BACKmwB,EAAmBnwB,KAAnB,OAGJmwB,EAAmBnwB,KAAnB,aACG,4BACCmwB,EAAmBnwB,KAAnB,aA2BJmwB,EAAmBnwB,KAAnB,KACG,mCAEI,8BACKmwB,EAAmBnwB,KAAnB,MAsBZmwB,EAAmBnwB,KAAnB,UAAuCmwB,EAAmBnwB,KAAnB,SAAoCtB,OAAS,GAChF,oCACG,0CAECyxB,EAAmBnwB,KAAnB,SAAoCf,KAAI,SAAAqF,GACrC,OACI,0BACI8K,QAAS,kBAAMsE,EAAQ7R,KAAR,0BAAgCyC,EAAInE,OAGlDmE,EAAI7G,aAahC0yB,EAAmBnwB,KAAnB,MACG,oCACI,yBAAKpC,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAKuL,IAAKgnB,EAAmBnwB,KAAnB,MAAmCmwB,EAAmBnwB,KAAnB,KAAiCkB,IAAI,OAK1F,yBAAK9C,MAAO,CACRgc,aAAc,WAMzB+V,EAAmBnwB,KAAnB,OAAoCmwB,EAAmBnwB,KAAnB,MAAiCtB,OAAS,GAC3E,oCACI,yBAAKd,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACVkwB,GAAOtvB,OAAOC,KAAKqvB,GAAK7uB,KAAI,SAAAkd,GACzB,OACI,yBAAKve,UAAU,qBACVkwB,EAAI3R,IAAW2R,EAAI3R,GAAQld,KAAI,SAAA4B,GAC5B,OAAO,yBAAKsI,IAAKtI,EAAKzC,MAAO,CACzBgT,MAAO,oBAcvC,yBAAKhT,MAAO,CACRgc,aAAc,WAKzB+V,EAAmBnwB,KAAnB,OAAoCxB,OAAOC,KAAK0xB,EAAmBnwB,KAAnB,OAAkCtB,OAAS,GACxF,oCACI,yBAAKd,UAAU,iCACX,sCAKJ,yBACIwR,QAAS,kBAAMsE,EAAQ7R,KAAR,uBAA6BsuB,EAAmBnwB,KAAnB,YAE5CpC,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAKuL,IAAKgnB,EAAmBnwB,KAAnB,aAA6CmwB,EAAmBnwB,KAAnB,YAA2CkB,IAAI,MAE1G,yBAAKtD,UAAU,oCACX,4BACKuyB,EAAmBnwB,KAAnB,YAEL,4BACKmwB,EAAmBnwB,KAAnB,qBAKb,yBAAK5B,MAAO,CACRgc,aAAc,WAMzB+V,EAAmBnwB,KAAnB,iBAA8CxB,OAAOC,KAAK0xB,EAAmBnwB,KAAnB,iBAA4CtB,OAAS,GAC5G,oCACI,yBAAKd,UAAU,iCACX,iDAKJ,yBACIwR,QAAS,kBAAMsE,EAAQ7R,KAAR,0BAAgCsuB,EAAmBnwB,KAAnB,sBAC/CpC,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAKuL,IAAKgnB,EAAmBnwB,KAAnB,uBAAuDmwB,EAAmBnwB,KAAnB,sBAAqDkB,IAAI,MAE9H,yBAAKtD,UAAU,oCACX,4BACKuyB,EAAmBnwB,KAAnB,sBAEL,4BACKmwB,EAAmBnwB,KAAnB,+BAKb,yBAAK5B,MAAO,CACRgc,aAAc,WAW7B+V,EAAmB5kB,MAAQ4kB,EAAmBnwB,MAAQxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GAAKyxB,EAAmBnwB,KAAnB,UAClG,yBAAKpC,UAAU,iCACX,yCAQR,yBAAKA,UAAU,8BACVuyB,EAAmB5kB,MAAQ4kB,EAAmBnwB,MAAQmwB,EAAmBnwB,KAAnB,YAAyCmwB,EAAmBnwB,KAAnB,SAAoCtB,OAAS,IACzI,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,qCAAqCO,MAAOwS,KAAMI,0BAI5E2c,EAAmB5kB,MAAQ4kB,EAAmBnwB,MAAQxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GACjG,oCACKyxB,EAAmBnwB,KAAnB,UAAuCmwB,EAAmBnwB,KAAnB,SAAoCtB,OAAS,GACjFyxB,EAAmBnwB,KAAnB,SAAoCf,KAAI,SAAAoD,GACpC,OACI,kBAAC,GAAD,CACIiB,SAAUjB,EAAQiB,SAClBkxB,UAAWnyB,EAAO,gBCtVhEmL,GAAmBC,MAAaC,MAAM,IAetCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,IAycM22B,GA/bK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACA0R,EAEW,EAFXA,UACAC,EACW,EADXA,aACW,EACwChrB,EACjD,GACA,YAHS,mBACJirB,EADI,KACcC,EADd,OAKqB9qB,oBAAS,GAL9B,mBAKJkR,EALI,KAKMF,EALN,OAM6BhR,oBAAS,GANtC,mBAMJ+qB,EANI,KAMUC,EANV,OAO6BhrB,mBAAS,IAPtC,mBAOJ8a,EAPI,KAOUC,EAPV,OAQa/a,mBAAS,IARtB,mBAQJ1J,EARI,KAQEygB,EARF,OASiB/W,mBAAS,IAT1B,mBASJ4a,EATI,KASIC,EATJ,KAWXnoB,QAAQC,IAAI,cAAeg4B,GAC3B,IAAMnpB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAjC,EAAA,6DAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GANe,SAQOo3B,EAAuB,CAC/CxzB,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBloB,YAAa6N,EAAO7N,YACpBnD,KAAMgR,EAAOhR,KACb0D,MAAO0nB,EACP9nB,MAAO+mB,GAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrDrD,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,EAAKrD,KAAK,KAEpB+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,EAAO3nB,KAAK,KACtBjC,KAAMyQ,EAAO6W,OAAOwD,OACpBloB,YAAa6N,EAAO8W,kBAxBP,QAQb0S,EARa,SA8BuB,OAAvBA,EAAYj0B,QAtFF+Q,OAuF3B6I,EAtFJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqFzC2iB,EAAa,CAAC,aAEVl3B,GAAIu3B,EAAW,KAAW,GAC1Bx5B,IAAKw5B,EAAW,KAAW,GAC3Bj6B,KAAMi6B,EAAW,MAAY,GAC7Br3B,YAAaq3B,EAAW,aAAmB,GAC3Cl3B,MAAOk3B,EAAW,OAAa,IAE5BA,IARK,oBAUPN,KAGLjpB,EAAQ2a,YACRpD,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GApDH,iCAxDS,IAACoG,IAwDV,OAAH,wDAuDlBxI,qBAAU,WACR,IAAKsrB,EAAgB,UAAe,CAClC,IAAMrsB,EAAQqsB,EAAgB,MAC9B,GAAIrsB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACuO,IAEJtrB,qBAAU,WACR7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC/CS,QAAQC,IAAI,YAAaue,GAErB4J,IAAiB5J,EAAS,GAAGxd,IAC/BqnB,EAAgB7J,EAAS,GAAGxd,OAK/B,CAACwd,IAEJ,IAIMqP,EAAe,SAAC7d,GACpBuW,GAAyB,IAqB3B,OACE,kBAAC,IAAD,CACEnX,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,gBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,kBAAC5tB,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,GACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB0oB,EAAiBrsB,MAAjB,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB0oB,EAAiBrsB,MAAjB,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,GACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgB0oB,EAAiBrsB,MAAjB,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgB0oB,EAAiBrsB,MAAjB,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,gBACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACA0oB,EAAiBrsB,MAAjB,kBAEJzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACA0oB,EAAiBrsB,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACA0oB,EAAiBrsB,MAAjB,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACA0oB,EAAiBrsB,MAAjB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,yBACEpX,UAAU,gCACVQ,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,UAGF,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WAEPqoB,GAAgB,KAGlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBA/JJ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAuJuBC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAmBRxM,KAEDA,GAAcA,GAAYA,EAASjf,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASsC,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAEV,kBAACwsB,GAAA,EAAD,MACA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,WAUZ,kBAAC/nB,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgB0oB,EAAiBrsB,MAAjB,gBAEpBzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgB0oB,EAAiBrsB,MAAjB,gBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA0oB,EAAiBrsB,MAAjB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA0oB,EAAiBrsB,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA0oB,EAAiBrsB,MAAjB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA0oB,EAAiBrsB,MAAjB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACA0oB,EAAiBrsB,MAAjB,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACA0oB,EAAiBrsB,MAAjB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,cAEA,kBAAC,GAAD,CAEE4lB,QAASA,EACTzgB,KAAMA,IAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,iBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,EACTvkB,KAAMskB,KAIV,kBAAC,GAAD,CACE7J,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCje5BlQ,GAAmBC,MAAaC,MAAM,IAOtC2P,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,IAWHm3B,GAA0B,SAAC,GAM1B,IALLC,EAKI,EALJA,gBAEAC,GAGI,EAJJC,iBAII,EAHJD,qBACAT,EAEI,EAFJA,UACAC,EACI,EADJA,aACI,EAC+ChrB,EACjD,GACA,eAHE,mBACGirB,EADH,KACqBC,EADrB,OAK+ClrB,EACjD,GACA,eAPE,mBAKG0rB,EALH,KAKqBC,EALrB,OAaA3rB,EAAe,GAAI,6BAbnB,mBAYFsb,GAZE,aAiBAtb,EAAe,GAAI,2BAjBnB,mBAgBFub,GAhBE,aAqBAvb,EAAe,GAAI,+BArBnB,gCAyBAA,EAAe,GAAI,8BAzBnB,mBAwBFwb,GAxBE,aA6BAxb,EAAe,GAAI,6BA7BnB,mBA4BFyb,GA5BE,aA+BiCrb,oBAAS,GA/B1C,mBA+BGkR,EA/BH,KA+BaF,EA/Bb,OAgCoChR,oBAAS,GAhC7C,mBAgCG+qB,EAhCH,KAgCiBC,EAhCjB,OAiCoChrB,mBAAS,IAjC7C,mBAiCG8a,EAjCH,KAiCiBC,EAjCjB,OAkC0C/a,mBAAS,IAlCnD,mBAkCGwrB,EAlCH,KAkCoBC,EAlCpB,OAmCoBzrB,mBAAS,IAnC7B,oBAmCG1J,GAnCH,MAmCSygB,GAnCT,SAoCwB/W,mBAAS,IApCjC,qBAoCG4a,GApCH,MAoCWC,GApCX,MAsCJtb,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACQ8rB,EAAuB,CAClDn5B,WAAY,CACVE,aAAc,CACZoB,GAAIy3B,EAAgBz3B,OAJL,yDAAH,qDAUpBg4B,KACC,CAACP,IAEJ5rB,qBAAU,WACR,GACE+rB,EAAiB/3B,MACjBxB,OAAOC,KAAKs5B,EAAiB/3B,MAAMtB,OAAS,EAC5C,CACA,IAAM6K,EAASwuB,EAAiB/3B,KAAKY,MACjC2I,GAAUA,EAAO7K,OAAS,IAC5B+e,EAAYlU,GACZ2uB,EAAmB3uB,IAGjBwuB,EAAiB/3B,KAAKQ,OAASu3B,EAAiB/3B,KAAKQ,MAAtB,KAEjCid,EAAY,CAACsa,EAAiB/3B,KAAKQ,QACnCgnB,EAAgBuQ,EAAiB/3B,KAAKQ,MAAtB,QAGnB,CAACu3B,EAAiB/3B,OAErB,IAAMkoB,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,EAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,OANA,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,EAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,OANC,QACzBkoB,EADyB,SAYa,OAAxBA,EAAa5kB,OAC/B4Z,GAAwB,qBAexBuE,GAAsB,mDA5BO,2CAAH,sDAgCxB3T,GAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAjC,EAAA,yDACnB/M,QAAQC,IAAI,oBAAqBue,KAE7Bia,GAAmBp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,GAH1C,uBAKX6K,EACJoU,GAAYA,EAASjf,OAAS,EAAIif,EAAS1e,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAM,IAE3D,IAAMoJ,EAAO7K,OAAS,GARhB,gCASTipB,EAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,KAG5B4D,KAAM,CACJnD,MAAO2I,KAjBI,mCAoBNA,EAAO,IAAMA,EAAO7K,OAAS,GApBvB,kCAqBTkpB,EAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAAS5e,EAAO,GAAGpJ,GACnBioB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,OA1Bf,yBAiCUo3B,EAAuB,CAClD14B,WAAY,CACVE,aAAc,CACZoB,GAAIy3B,EAAgBz3B,KAGxB4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,YACpB4kB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,IAAQA,GAAKrE,OAAS,EAAIqE,GAAKrD,KAAK,KAAO,GACrD+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,IAAUA,GAAO3oB,OAAS,EAAI2oB,GAAO3nB,KAAK,KAAO,GAC3DjC,KAAMyQ,EAAO6W,OACb1kB,YAAa6N,EAAO8W,kBAlDP,SAiCboT,EAjCa,SAwD6B,OAA1BA,EAAe30B,QACnCtE,QAAQC,IAAI,iBAAkBg5B,GAMxBziB,EAJgB,WACpB,OAAOyhB,EAAUn4B,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQqO,EAAO/N,IAG3CyoB,GAERD,EAAW,SAACxoB,GAChB,KAAKA,GAAOwd,GAAaA,EAAS,IAChC,MAAO,GAEP,GAAIA,GAAYA,EAASjf,OAAS,EAAG,CACnC,IAAMe,EAAOke,EAASgC,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACjD,GAAIV,EACF,OAAOA,EAAKe,QAOdihB,EAAcjjB,OAAOkjB,OAAO,GAAI0V,EAAUzhB,GAA5BnX,OAAA,IAAAA,CAAA,GACfo5B,EADe,CAElBz3B,GAAIy3B,EAAe,IAAU,GAC7B15B,IAAK05B,EAAe,IAAU,GAC9Bn6B,KAAM26B,EAAc,MAAY,GAChC/3B,YAAa+3B,EAAc,aAAmB,IAE3CA,EAPe,CAQlB53B,MAAOmoB,EAASpB,MAEZsB,EAjC8C,uBAkC/CuO,EAAUx3B,MAAM,EAAG+V,IAlC4B,CAmClD8L,GAnCkD,aAoC/C2V,EAAUx3B,MAAM+V,EAAQ,KAE7B0hB,EAAaxO,GAEbxL,GAAwB,kBACxBwa,GAAoB,GAcpB1pB,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GApHH,4CAAH,wDAuHlBpC,qBAAU,WACR,IAAKsrB,EAAgB,UAAe,CAClC,IAAMrsB,EAAQqsB,EAAgB,MAC9B,GAAIrsB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACuO,IAmFJ,OAlDAn4B,QAAQC,IAAI,WAAYue,GAExB3R,qBAAU,WACR,GAAI4rB,GAAmBp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,EAAG,CAC9D,IAAM2mB,EACJuS,EAAgBvS,UAAYuS,EAAgBvS,SAASrmB,MAAM,KAE7DG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJsS,EAAgBnP,IAChBmP,EAAgBnP,GAAhB,UACAmP,EAAgBnP,GAAhB,SAA+BzpB,MAAM,KACvCwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAEzB,IAEHnmB,QAAQC,IAAI,YAAaw4B,GAEzB5rB,qBAAU,WACR7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC/CS,QAAQC,IAAI,YAAaue,GAErB4J,IAAiB5J,EAAS,GAAGxd,KAC/BqnB,EAAgB7J,EAAS,GAAGxd,IAE5B8nB,GAAyBtK,EAAS,QAGrC,CAACA,IAEJ3R,qBAAU,WACR,GAAI4rB,GAAmBp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,EAAG,CAC9D,IAAM2mB,EACJuS,EAAgBvS,UAAYuS,EAAgBvS,SAASrmB,MAAM,KAE7DG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJsS,EAAgBnP,IAChBmP,EAAgBnP,GAAhB,UACAmP,EAAgBnP,GAAhB,SAA+BzpB,MAAM,KACvCwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAEzB,IAGD,oCACE,kBAAC,IAAD,CACE/W,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAER+pB,EAFQ,GAGPA,GACFp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,GAAK,CACzCwmB,YACE0S,EAAe,IACfA,EAAe,GAAO3S,WACtB2S,EAAe,GAAO3S,UACxBG,kBACEwS,EAAe,IACfA,EAAe,GAAOzS,iBACtByS,EAAe,GAAOzS,gBACxBJ,OACE6S,EAAe,IACfA,EAAe,GAAOn6B,MACtBm6B,EAAe,GAAOn6B,KACxBunB,cACE4S,EAAe,IACfA,EAAe,GAAOv3B,aACtBu3B,EAAe,GAAOv3B,gBAI7B,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,mDACA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,GACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACA0oB,EAAiBrsB,MAAjB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACA0oB,EAAiBrsB,MAAjB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,GACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACA0oB,EAAiBrsB,MAAjB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACA0oB,EAAiBrsB,MAAjB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,gBACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACA0oB,EAAiBrsB,MAAjB,kBAEJzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACA0oB,EAAiBrsB,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACA0oB,EAAiBrsB,MAAjB,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACA0oB,EAAiBrsB,MAAjB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAMxB,yBAAKlR,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETm6B,EAAiBzsB,WAChB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGHwiB,EAAiBxsB,MAChB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WAGPqoB,GAAgB,KAGlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YAlQd,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GA2PoBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAmBRxM,KAEDA,GAAcA,GAAYA,EAASjf,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASsC,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAEV,kBAACwsB,GAAA,EAAD,MACA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,cAapB,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SA2BN,yBAAKjkB,UAAU,mDACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA0oB,EAAiBrsB,MAAjB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA0oB,EAAiBrsB,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA0oB,EAAiBrsB,MAAjB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA0oB,EAAiBrsB,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA0oB,EAAiBrsB,MAAjB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA0oB,EAAiBrsB,MAAjB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACA0oB,EAAiBrsB,MAAjB,wBAIJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACA0oB,EAAiBrsB,MAAjB,wBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,cAEA,kBAAC,GAAD,CAEE4lB,QAASA,GACTzgB,KAAMA,KAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,iBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,GACTvkB,KAAMskB,UAQlB,yBACEjpB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAMyoB,GAAoB,IACnC36B,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAASioB,EAAiBhsB,UAC1BpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVsa,gBAAiBA,EACjBC,mBAAoBA,EACpBxa,sBAAsB,UA+CrByZ,GAtCK,SAAC,GAMP,IALZS,EAKW,EALXA,gBACAE,EAIW,EAJXA,iBACAD,EAGW,EAHXA,oBACAT,EAEW,EAFXA,UACAC,EACW,EADXA,aAMA,OACE,kBAAC,KAAD,CACEj5B,MAAO,CACLuT,IAAK,QAEPP,MAAO,OACP6Q,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXvU,MAAM,aACNspB,gBAAgB,EAChB/M,QAASua,EACT9V,SAjBiB,WACnB6V,GAAoB,IAiBlBtN,QAAQ,GAER,kBAAC,GAAD,CACEqN,gBAAiBA,EACjBE,iBAAkBA,EAClBD,oBAAqBA,EACrBT,UAAWA,EACXC,aAAcA,MCp3Bd/b,GAAWC,KAAXD,OACA8P,GAAWvuB,IAAXuuB,OAwBFC,GAAU,SAAC,GAAiD,IAA/CrrB,EAA8C,EAA9CA,KAAMq3B,EAAwC,EAAxCA,aAAclnB,EAA0B,EAA1BA,MAA0B,EACjC1D,oBAAS,GADwB,mBACxD8Q,EADwD,KAC/CC,EAD+C,OAEL/Q,oBAAS,GAFJ,mBAExD8e,EAFwD,KAEjCC,EAFiC,OAGZnf,EACjD,GACA,eAL6D,mBAGtCgsB,GAHsC,aAOX5rB,oBAAS,GAPE,mBAQzDiH,GARyD,UAQ/CC,gBAEV2kB,EAAiB,uCAAG,WAAOn4B,GAAP,iBAAA+L,EAAA,sEACKmsB,EAAuB,CAClDx5B,WAAY,CACVE,aAAc,CACZoB,SAJkB,QAClBo4B,EADkB,SAUwB,OAA1BA,EAAe90B,SA1CR+Q,EA2CH,gBA1C5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAwCnC8jB,EAAex4B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACvDk3B,EAAamB,IAbS,iCAhCI,IAAChkB,IAgCL,OAAH,sDAiBjBmU,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,MACF,IAGhB,OACE,oCACE,kBAAC,KAAD,CAME0X,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,KACpCqrB,EAAyBlP,KAG3B,yBAAKnT,IAAKwf,EAASrM,GAASpb,IAAI,UAKxC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,KAEpCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,cACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAqCXyS,GAAS,gBAAiBF,IACzB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,cAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMuV,EAAkBhc,EAAOnc,KAC1Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aASb6I,GACC,kBAACkN,GAAD,CACErB,UAAWp3B,EACXq3B,aAAcA,EACdQ,oBAAqBra,EACrBsa,iBAAkBva,EAClBqa,gBAAiBrM,MAkIZta,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAvHM,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACP1D,mBAAS,IADF,mBAClC2qB,EADkC,KACvBC,EADuB,OAGEhrB,EAAe,GAAI,aAHrB,mBAGlCgkB,EAHkC,KAGtBqI,EAHsB,KAKzC1sB,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACKwsB,EAAqB,CACxC75B,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALN,OACVwkB,EADU,OAUhBtB,EAAasB,GAAU,IAVP,2CAAH,qDAYfnI,KACC,IAnBsC,MAqBiB/jB,oBAAS,GArB1B,mBAqBlCgZ,EArBkC,KAqBXC,EArBW,KAwCzC,OACE,oCAIE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,SAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,iBACZjB,SAAU,SAAC8R,GAAD,OAvBD,SAAChS,GACpB,GAAIkzB,EAAWrwB,KAAKtB,OAAS,EAAG,CAC9B,IAAM85B,EAAenI,EAAWrwB,KAAKuf,QAAO,SAAC9f,GAAD,OAC1CA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCof,EAAamB,IAkBY7L,CAAaxd,EAAE/F,OAAOjM,WAK1CkT,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YAWJ,yBAAK9nB,UAAU,uCASf,yBAAKA,UAAU,uCACZyyB,EAAW9kB,MAAQ6rB,EAAU14B,OAAS,GACrC,kBAAC,GAAD,CACEyR,MAAOA,EACPknB,aAAcA,EACdr3B,KAAMo3B,IAGT/G,EAAW/kB,WAAa,kBAACshB,GAAD,MACxByD,EAAW9kB,QAAU6rB,EAAU14B,OAAS,IACvC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,iBACZO,MAAOwS,KAAMI,4BAOvB,kBAAC,GAAD,CACEiS,sBAAuBA,EACvBC,yBAA0BA,EAC1B2R,aAAcA,EACdD,UAAWA,QCvTb5pB,GAAmBC,MAAaC,MAAM,IAOtC2P,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,IAUHm3B,GAA0B,SAAC,GAK1B,IAJLC,EAII,EAJJA,gBAEAC,GAEI,EAHJC,iBAGI,EAFJD,qBACAe,EACI,EADJA,mBACI,EAC+CvsB,EACjD,GACA,eAHE,mBACGirB,EADH,KACqBC,EADrB,OAK+ClrB,EACjD,GACA,eAPE,mBAKG0rB,EALH,KAKqBC,EALrB,OAaA3rB,EAAe,GAAI,6BAbnB,mBAYFsb,GAZE,aAiBAtb,EAAe,GAAI,2BAjBnB,mBAgBFub,GAhBE,aAqBAvb,EAAe,GAAI,+BArBnB,gCAyBAA,EAAe,GAAI,8BAzBnB,mBAwBFwb,GAxBE,aA6BAxb,EAAe,GAAI,6BA7BnB,mBA4BFyb,GA5BE,aA+BiCrb,oBAAS,GA/B1C,mBA+BGkR,EA/BH,KA+BaF,EA/Bb,OAgCoChR,oBAAS,GAhC7C,mBAgCG+qB,EAhCH,KAgCiBC,EAhCjB,OAiCoChrB,mBAAS,IAjC7C,mBAiCG8a,EAjCH,KAiCiBC,EAjCjB,OAkC0C/a,mBAAS,IAlCnD,mBAkCGwrB,EAlCH,KAkCoBC,EAlCpB,OAmCoBzrB,mBAAS,IAnC7B,mBAmCG1J,GAnCH,KAmCSygB,GAnCT,QAoCwB/W,mBAAS,IApCjC,qBAoCG4a,GApCH,MAoCWC,GApCX,MAsCJtb,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACQ8rB,EAAuB,CAClDn5B,WAAY,CACVE,aAAc,CACZoB,GAAIy3B,EAAgBz3B,OAJL,yDAAH,qDAUpBg4B,KACC,CAACP,IAEJ5rB,qBAAU,WACR,GACE+rB,EAAiB/3B,MACjBxB,OAAOC,KAAKs5B,EAAiB/3B,MAAMtB,OAAS,EAC5C,CACA,IAAM6K,EAASwuB,EAAiB/3B,KAAKY,MACjC2I,GAAUA,EAAO7K,OAAS,IAC5B+e,EAAYlU,GACZ2uB,EAAmB3uB,IAGjBwuB,EAAiB/3B,KAAKQ,OAASu3B,EAAiB/3B,KAAKQ,MAAtB,KAEjCid,EAAY,CAACsa,EAAiB/3B,KAAKQ,QACnCgnB,EAAgBuQ,EAAiB/3B,KAAKQ,MAAtB,QAGnB,CAACu3B,EAAiB/3B,OAErB,IAAMkoB,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,EAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,OANA,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,EAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,OANC,QACzBkoB,EADyB,SAYa,OAAxBA,EAAa5kB,OAC/B4Z,GAAwB,qBAexBuE,GAAsB,mDA5BO,2CAAH,sDAgCxB3T,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAjC,EAAA,yDACnB/M,QAAQC,IAAI,oBAAqBue,KAE7Bia,GAAmBp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,GAH1C,uBAKX6K,EACJoU,GAAYA,EAASjf,OAAS,EAAIif,EAAS1e,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAM,IAE3D,IAAMoJ,EAAO7K,OAAS,GARhB,gCASTipB,EAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,KAG5B4D,KAAM,CACJnD,MAAO2I,KAjBI,mCAoBNA,EAAO,IAAMA,EAAO7K,OAAS,GApBvB,kCAqBTkpB,EAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAAS5e,EAAO,GAAGpJ,GACnBioB,WAAY,QACZtjB,OAAQ8yB,EAAgBz3B,OA1Bf,yBAiCUo3B,EAAuB,CAClD14B,WAAY,CACVE,aAAc,CACZoB,GAAIy3B,EAAgBz3B,KAGxB4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,YACpB4kB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,IAAQA,GAAKrE,OAAS,EAAIqE,GAAKrD,KAAK,KAAO,GACrD+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,IAAUA,GAAO3oB,OAAS,EAAI2oB,GAAO3nB,KAAK,KAAO,GAC3DjC,KAAMyQ,EAAO6W,OACb1kB,YAAa6N,EAAO8W,kBAlDP,SAiCboT,EAjCa,SAwD6B,OAA1BA,EAAe30B,QACnCm1B,EAAmB,eACdhB,EADa,CAEhBz3B,GAAIy3B,EAAe,IAAU,GAC7B15B,IAAK05B,EAAe,IAAU,GAC9Bn6B,KAAM26B,EAAc,MAAY,GAChC/3B,YAAa+3B,EAAc,aAAmB,IAE3CA,IAGL/a,GAAwB,kBACxBwa,GAAoB,GAcpB1pB,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GAvFH,4CAAH,wDA0FlBpC,qBAAU,WACR,IAAKsrB,EAAgB,UAAe,CAClC,IAAMrsB,EAAQqsB,EAAgB,MAC9B,GAAIrsB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACuO,IAmFJ,OAlDAn4B,QAAQC,IAAI,WAAYue,GAExB3R,qBAAU,WACR,GAAI4rB,GAAmBp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,EAAG,CAC9D,IAAM2mB,EACJuS,EAAgBvS,UAAYuS,EAAgBvS,SAASrmB,MAAM,KAE7DG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJsS,EAAgBnP,IAChBmP,EAAgBnP,GAAhB,UACAmP,EAAgBnP,GAAhB,SAA+BzpB,MAAM,KACvCwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAEzB,IAEHnmB,QAAQC,IAAI,YAAaw4B,GAEzB5rB,qBAAU,WACR7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC/CS,QAAQC,IAAI,YAAaue,GAErB4J,IAAiB5J,EAAS,GAAGxd,KAC/BqnB,EAAgB7J,EAAS,GAAGxd,IAE5B8nB,GAAyBtK,EAAS,QAGrC,CAACA,IAEJ3R,qBAAU,WACR,GAAI4rB,GAAmBp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,EAAG,CAC9D,IAAM2mB,EACJuS,EAAgBvS,UAAYuS,EAAgBvS,SAASrmB,MAAM,KAE7DG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJsS,EAAgBnP,IAChBmP,EAAgBnP,GAAhB,UACAmP,EAAgBnP,GAAhB,SAA+BzpB,MAAM,KACvCwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAEzB,IAGD,oCACE,kBAAC,IAAD,CACE/W,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAER+pB,EAFQ,GAGPA,GACFp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,GAAK,CACzCwmB,YACE0S,EAAe,IACfA,EAAe,GAAO3S,WACtB2S,EAAe,GAAO3S,UACxBG,kBACEwS,EAAe,IACfA,EAAe,GAAOzS,iBACtByS,EAAe,GAAOzS,gBACxBJ,OACE6S,EAAe,IACfA,EAAe,GAAOn6B,MACtBm6B,EAAe,GAAOn6B,KACxBunB,cACE4S,EAAe,IACfA,EAAe,GAAOv3B,aACtBu3B,EAAe,GAAOv3B,gBAI7B,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,mDACA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,GACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACA0oB,EAAiBrsB,MAAjB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACA0oB,EAAiBrsB,MAAjB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,GACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACA0oB,EAAiBrsB,MAAjB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACA0oB,EAAiBrsB,MAAjB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,gBACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACA0oB,EAAiBrsB,MAAjB,kBAEJzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GACA0oB,EAAiBrsB,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACA0oB,EAAiBrsB,MAAjB,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACA0oB,EAAiBrsB,MAAjB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAMxB,yBAAKlR,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETm6B,EAAiBzsB,WAChB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGHwiB,EAAiBxsB,MAChB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WAGPqoB,GAAgB,KAGlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YAlQd,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GA2PoBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAmBRxM,KAEDA,GAAcA,GAAYA,EAASjf,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASsC,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAEV,kBAACwsB,GAAA,EAAD,MACA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,cAapB,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SA2BN,yBAAKjkB,UAAU,mDACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA0oB,EAAiBrsB,MAAjB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA0oB,EAAiBrsB,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA0oB,EAAiBrsB,MAAjB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA0oB,EAAiBrsB,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA0oB,EAAiBrsB,MAAjB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA0oB,EAAiBrsB,MAAjB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACA0oB,EAAiBrsB,MAAjB,wBAIJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACA0oB,EAAiBrsB,MAAjB,wBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,cAEA,kBAAC,GAAD,CAEE4lB,QAASA,GACTzgB,KAAMA,KAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,iBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,GACTvkB,KAAMskB,UAQlB,yBACEjpB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAMyoB,GAAoB,IACnC36B,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAASioB,EAAiBhsB,UAC1BpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVsa,gBAAiBA,EACjBC,mBAAoBA,EACpBxa,sBAAsB,UA6CrByZ,GApCK,SAAC,GAKP,IAJZS,EAIW,EAJXA,gBACAE,EAGW,EAHXA,iBACAD,EAEW,EAFXA,oBACAe,EACW,EADXA,mBAMA,OACE,kBAAC,KAAD,CACEx6B,MAAO,CACLuT,IAAK,QAEPP,MAAO,OACP6Q,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXvU,MAAM,aACNspB,gBAAgB,EAChB/M,QAASua,EACT9V,SAjBiB,WACnB6V,GAAoB,IAiBlBtN,QAAQ,GAER,kBAAC,GAAD,CACEqN,gBAAiBA,EACjBE,iBAAkBA,EAClBD,oBAAqBA,EACrBe,mBAAoBA,MCv0BpBtd,GAAwBC,KAAxBD,OA6QOrK,IA7QiBsK,KAAhBC,YACG0R,IAAX9B,OA4QOna,aALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAtQQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACQ9D,EACjD,GACA,eAHyC,mBACpC0rB,EADoC,KAClBC,EADkB,OAKY3rB,EACrD,GACA,iBAPyC,mBAKpCwsB,EALoC,KAKhBC,EALgB,KAUrCh6B,EAASuuB,eACT3Z,EAAUC,eACVuc,EAAUpxB,EAAM,GAZqB,EAaK2N,oBAAS,GAbd,mBAapCqrB,EAboC,KAalBD,EAbkB,OAcGprB,oBAAS,GAdZ,mBAcpCmrB,EAdoC,KAcnBgB,EAdmB,KAwD3C,OAxCA5sB,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACQ8rB,EAAuB,CAClDn5B,WAAY,CACVE,aAAc,CACZoB,GAAI+vB,MAJW,QACf6I,EADe,SAYnBH,EAAmBG,GAGrB55B,QAAQC,IAAI,iBAAkB25B,GAfT,2CAAH,qDAkBpBZ,KACC,CAACjI,IAEJlkB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjB4sB,EAAyB,CAC7Bj6B,WAAY,CACVE,aAAc,CACZoB,GAAI+vB,MAJa,2CAAH,qDAUtB8I,KACC,CAAC9I,IAEJ/wB,QAAQC,IAAI,qBAAsBy5B,GAElC15B,QAAQC,IAAI,cAAeN,GAGzB,yBAAKlB,UAAU,wBACb,yBAAKA,UAAU,iCACb,4CAECm6B,EAAiBxsB,MAChBqsB,GACAp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,GACpC,oCACE,kBAACu6B,GAAD,CACEnB,iBAAkBA,EAClBD,oBAAqBA,EACrBD,gBAAiBA,EACjBgB,mBAAoBA,IAGrBvoB,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CACEf,QAAS,kBAAMyoB,GAAoB,IACnC36B,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHR,UAWV,kBAAC,KAAD,CACEqC,QAAM,EACNC,UAAW,CAAEtR,KAAM,GACnB3N,QAAS0oB,EAAiBzsB,WAEzBysB,EAAiBxsB,MAChBqsB,KACEp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,IACtC,kBAAC,KAAD,CACE2B,YAAY,iBACZO,MAAOwS,KAAMI,yBAIlBukB,EAAiBxsB,MAChBqsB,GACAp5B,OAAOC,KAAKm5B,GAAiBl5B,OAAS,GACpC,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,+CACb,yBACEuL,IACEyuB,EAAe,OACfA,EAAe,MAAf,MAEF12B,IAAI,MAGR,yBAAKtD,UAAU,qCACb,4BAAKg6B,EAAe,MACpB,4BAAKA,EAAe,aAEnBA,EAAe,KACd,mCAEE,8BAAOA,EAAe,SAQpC,yBAAKh6B,UAAU,iCACb,yCAEF,yBAAKA,UAAU,8BACZi7B,EAAmBvtB,WAAa,kBAACshB,GAAD,MAChCiM,EAAmBttB,QAAUstB,EAAmB74B,KAAKtB,OAAS,IAC7D,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,oCACZO,MAAOwS,KAAMI,0BAKlBqlB,EAAmBttB,MAClBstB,EAAmB74B,MACnB64B,EAAmB74B,KAAKtB,OAAS,GAC/B,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UACE,+FAOJ6G,KAAK,QAEL8D,WAAY6c,EAAmB74B,KAC/Bic,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL/d,MAAO,CACLsW,MAAO,qBAKb,kBAAC,GAAD,CACE1T,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACElN,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,MAExCgJ,IAAK3I,EACLU,IAAI,YACJ9C,MAAO,CACLqT,OAAQ,OACRL,MAAO,OACPmd,UAAW,UACXlwB,aAAc,MACd6W,OAAQ,iBAOlB,kBAAC,GAAD,CACElU,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,MAExC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,cACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,YACNob,UAAU,YACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,UACNob,UAAU,UACVle,IAAI,KACJN,UAAU,iC,wCChLbs7B,GApHE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,iBAAkBC,EAA+B,EAA/BA,cAAehE,EAAgB,EAAhBA,UAAgB,EACpB3oB,mBAAS,IADW,mBAC5D4sB,EAD4D,KAC1CC,EAD0C,KAE7DC,EAAoB7tB,EAAS,GAAI,GAAI,gBAAiB,IAFO,EAIzBe,mBAAS,CACjDhP,KAAM23B,EAAU33B,KAChBN,MAAOi4B,EAAUj4B,QANgD,mBAI5Dq8B,EAJ4D,KAI7CC,EAJ6C,KASnEztB,qBAAU,WACR,IAIM2J,EAHGyjB,EAAcn6B,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQu1B,EAAUj1B,IAK1DshB,EAAcjjB,OAAOkjB,OAAO,GAAI0X,EAAczjB,GAAhCnX,OAAA,IAAAA,CAAA,GACfg7B,IAECtE,EAAmB,uBACpBkE,EAAcx5B,MAAM,EAAG+V,IADH,CAEvB8L,GAFuB,aAGpB2X,EAAcx5B,MAAM+V,EAAQ,KAEjCwjB,EAAiBjE,KAChB,CAACsE,IASJxtB,qBAAU,WACR,GACEutB,EAAkBv5B,MAClBxB,OAAOC,KAAK86B,EAAkBv5B,MAAMtB,OAAS,EAC7C,CACA,IACMg7B,EADUl7B,OAAOC,KAAK86B,EAAkBv5B,MACXf,KAAI,SAAC+Y,GACtC,MAAO,CACL7a,MAAO6a,MAGXshB,EAAmBI,MAEpB,CAACH,EAAkBv5B,OA0BtB,OACE,oCACE,yBACE9B,IAAKk3B,EAAUj1B,GACfvC,UAAU,wEAEV,yBACEwR,QArDsB,WAC5B,IAAM8lB,EAAsBkE,EAAc7Z,QACxC,SAAC9f,GAAD,OAAUA,EAAKU,KAAOi1B,EAAUj1B,MAElCg5B,EAAiBjE,IAkDXt3B,UAAU,+EAEV,kBAAC8kB,GAAA,EAAD,OAGF,wBAAI9kB,UAAU,yBAAd,QACA,kBAAC,KAAD,CACET,MAAOi4B,EAAU33B,KACjBW,MAAO,CAAEgT,MAAO,QAChBtH,QAASuvB,EACT/6B,YAAY,YACZjB,SA3CsB,SAACF,GACzBo8B,GAAqB/6B,OAAOC,KAAK86B,EAAkBv5B,MAAMtB,OAAS,EAChE66B,EAAkBv5B,KAAK7C,IACzBs8B,EAAiB,eACZrE,EADW,CAEd33B,KAAMN,EACNA,MAAOo8B,EAAkBv5B,KAAK7C,MAIlCs8B,EAAiB,eACZrE,EADW,CAEd33B,KAAMN,MAgCJ2a,aAAc,SAACqL,EAAYwW,GAAb,OAG8B,IAF1CA,EAAgBx8B,MACby8B,cACA/5B,QAAQsjB,EAAWyW,kBAIzBxE,EAAU33B,MACT,oCACE,yBAAKW,MAAO,CAAE4W,UAAW,UACzB,kBAACif,GAAD,CACEh3B,MAAM,QACNE,MAAOi4B,EAAUj4B,MACjBM,KAAK,QACLJ,SAzCuB,SAAC8R,GAClCsqB,EAAiB,eACZrE,EADW,CAEdj4B,MAAOgS,EAAE/F,OAAOjM,gBCwRP08B,GAtVC,SAAC,GAKH,IAJZC,EAIW,EAJXA,iBACAvE,EAGW,EAHXA,YACAwE,EAEW,EAFXA,oBACAC,EACW,EADXA,oBACW,EACevtB,mBAAS,CACjCwmB,QAAS,GACTC,MAAO,KAHE,mBACJ3wB,EADI,KACG03B,EADH,OAKextB,mBAAS,CACjCxJ,UAAW,GACXC,QAAS,KAPA,mBAKJg3B,EALI,KAKGC,EALH,OAW4C1tB,mBAAS,IAXrD,mBAWJ2tB,EAXI,KAWiBC,EAXjB,OAa+B5tB,mBAAS,IAbxC,mBAaJ2sB,EAbI,KAaWD,EAbX,KAeXntB,qBAAU,WACR,GAAIupB,GAAe/2B,OAAOC,KAAK82B,GAAa72B,OAAS,EAAG,CACtDu7B,EAAS,eACJ13B,EADG,GAEHgzB,EAAW,QAGhB4E,EAAS,eACJD,EADG,GAEH3E,EAAW,QAKhB8E,EAAuB,OAAC9E,QAAD,IAACA,OAAD,EAACA,EAAa6E,sBAErC,IAAME,EAAqB,GAC3B,GACE/E,EAAYH,WACZ52B,OAAOC,KAAK82B,EAAYH,WAAW12B,OAAS,EAEtBF,OAAOC,KAAK82B,EAAYH,WAChC1zB,SAAQ,SAAC64B,EAAc5kB,GACnC2kB,EAAmBz4B,KAAK,CACtBpE,KAAM88B,EACNp9B,MAAOo4B,EAAYH,UAAUmF,GAC7Bp6B,GAAIwV,OAKVwjB,EAAiBmB,MAElB,CAAC/E,IAEJp2B,QAAQC,IAAI,cAAem2B,GAC3Bp2B,QAAQC,IAAI,gBAAiBg6B,GAE7B,IAAMoB,EAAoB,SAACrrB,GACzB,IAAM1R,EAAO0R,EAAE/F,OAAO3L,KAChBN,EAAQgS,EAAE/F,OAAOjM,MAEvB88B,EAAS,eACJ13B,EADG,gBAEL9E,EAAON,MAINs9B,EAAoB,SAACtrB,GACzB,IAAM1R,EAAO0R,EAAE/F,OAAO3L,KAChBN,EAAQgS,EAAE/F,OAAOjM,MAEvBg9B,EAAS,eACJD,EADG,gBAELz8B,EAAON,MA+HZ,OACE,oCACE,yBAAKS,UAAU,oDACb,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,yDACb,qCACA,yBAAKA,UAAU,mEACb,yBAAKA,UAAU,wEACb,kBAACq2B,GAAD,CACEt2B,IAAK,EACLT,KAAK,SACLD,MAAM,aACNE,MAAOoF,EAAM0wB,QACbx1B,KAAK,UACLJ,SAAUm9B,KAGd,yBAAK58B,UAAU,yEACb,kBAACq2B,GAAD,CACEt2B,IAAK,EACLT,KAAK,SACLgb,KAAK,QACLjb,MAAM,QACNE,MAAOoF,EAAM2wB,MACbz1B,KAAK,QACLJ,SAAUm9B,OAMlB,yBAAK58B,UAAU,0DACb,yBAAKA,UAAU,yDACb,0CACA,yBAAKA,UAAU,mEACZw7B,EAAcn6B,KAAI,SAACm2B,GAClB,OACE,kBAACsF,GAAD,CACEtF,UAAWA,EACXgE,cAAeA,EACfD,iBAAkBA,OAIxB,kBAAC,IAAD,CACEjhB,KAAK,QACL9I,QArEW,WACzB+pB,EAAiB,GAAD,oBACXC,GADW,CAEd,CACE37B,KAAM,GACNN,MAAO,GACPgD,GAAG,GAAD,OAAKi5B,EAAc16B,aAgEXN,MAAO,CACLgT,MAAO,QACPupB,UAAW,OACX3lB,UAAW,MACX3W,aAAc,OAEhBnB,KAAK,SACLyD,KAAM,kBAACikB,GAAA,EAAD,OAVR,mBAiBJ,yBACExmB,MAAO,CACL4W,UAAW,QAEbpX,UAAU,yDAEV,qCACA,yBAAKA,UAAU,mEACb,yBAAKA,UAAU,wEACb,kBAACq2B,GAAD,CACEt2B,IAAK,EACLT,KAAK,SACLD,MAAM,YACNE,MAAO+8B,EAAMj3B,UACbxF,KAAK,YACLJ,SAAUo9B,KAGd,yBAAK78B,UAAU,yEACb,kBAACq2B,GAAD,CACEt2B,IAAK,EACLT,KAAK,SACLD,MAAM,UACNE,MAAO+8B,EAAMh3B,QACbzF,KAAK,UACLJ,SAAUo9B,OAKlB,yBACEr8B,MAAO,CACL4W,UAAW,QAEbpX,UAAU,yDAEV,sDAGA,yBAAKA,UAAU,mEACf,kBAACq2B,GAAD,CACMt2B,IAAK,EACLT,KAAK,SAELC,MAAOi9B,EACP38B,KAAK,uBACLJ,SAjHiB,SAAC8R,GAClCkrB,EAAwBlrB,EAAE/F,OAAOjM,eAiI/B,kBAAC,IAAD,CACEiB,MAAO,CACL6W,WAAY,QAEd7F,QACE4qB,EA1MwB,SAAC7qB,GAG/B,GAFAA,EAAEhR,iBAEEi7B,EAAc16B,OAAS,EAAG,CAC5B,IAAM02B,EAAY,GADU,uBAG5B,YAAiBgE,EAAjB,+CAAgC,CAAC,IAAxB35B,EAAuB,QAC9BN,QAAQC,IAAI,kBAAmBK,GAC3BA,EAAI,OAAaA,EAAI,OACvB21B,EAAU31B,EAAI,MAAYA,EAAI,QANN,kFAU5B,IAAMi2B,EAAY,CAChBnzB,QACA23B,QACA9E,YACAgF,uBACAj6B,GAAIo1B,EAAYp1B,IAGlB85B,EAAS,CACPhH,QAAS,GACTC,MAAO,KAETiH,EAAS,CAAEl3B,UAAW,GAAIC,QAAS,KACnCi2B,EAAiB,IACjBkB,EAAwB,IACxBN,EAAoBrE,OAEf,CACL,IAAMA,EAAY,CAChBnzB,QACA23B,QACA9E,UAAW,GACXgF,uBACAj6B,GAAIo1B,EAAYp1B,IAGlB85B,EAAS,CACPhH,QAAS,GACTC,MAAO,KAETiH,EAAS,CAAEl3B,UAAW,GAAIC,QAAS,KACnCi2B,EAAiB,IACjBkB,EAAwB,IACxBN,EAAoBrE,KAhGE,SAACvmB,GAGzB,GAFAA,EAAEhR,iBAEEi7B,EAAc16B,OAAS,EAAG,CAC5B,IAAM02B,EAAY,GADU,uBAG5B,YAAiBgE,EAAjB,+CAAgC,CAAC,IAAxB35B,EAAuB,QAC9BN,QAAQC,IAAI,kBAAmBK,GAC3BA,EAAI,OAAaA,EAAI,OACvB21B,EAAU31B,EAAI,MAAYA,EAAI,QANN,kFAU5B,IAAMi2B,EAAY,CAChBnzB,QACA23B,QACA9E,YACAgF,wBAKFH,EAAS,CACPhH,QAAS,GACTC,MAAO,KAETiH,EAAS,CAAEl3B,UAAW,GAAIC,QAAS,KACnCm3B,EAAwB,IACxBlB,EAAiB,IAEjBW,EAAiBpE,OACZ,CACL,IAAMA,EAAY,CAChBnzB,MAAOA,EACP23B,MAAOA,EACPE,uBACAhF,UAAW,IAGb6E,EAAS,CACPhH,QAAS,GACTC,MAAO,KAETiH,EAAS,CAAEl3B,UAAW,GAAIC,QAAS,KACnCm3B,EAAwB,IACxBlB,EAAiB,IACjBW,EAAiBpE,KAgNfp4B,UA9ICiF,EAAM0wB,QA+IPr1B,UAAU,gBACV+C,KAAM,kBAAC8hB,GAAA,EAAD,OAELuX,EAAsB,iBAAmB,oBC/S1C7c,GAAYC,KAAZD,QAEF3P,GAAmBC,MAAaC,MAAM,IAItCG,GAAgB,CACpBpQ,KAAM,GACN4C,YAAa,GACbgzB,MAAO,GACP5wB,KAAM,GACNwwB,QAAS,GACTC,MAAO,GACPjwB,UAAW,GACXC,QAAS,GACTtC,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACPkC,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACNg4B,cAAe,KACfC,OAAQ,GACR9V,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA+gCCsM,GApgCO,SAAC,GAMT,IALZnM,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBAIW,KAHXoM,YAGW,EAFXE,eAEW,EADX8I,iBAEiDzuB,EAC/C,GACA,eAHS,mBACJ0mB,EADI,KACaC,EADb,OAKmBvmB,oBAAS,GAL5B,mBAKJ8Q,EALI,KAKKC,EALL,OAMqB/Q,oBAAS,GAN9B,mBAMJkR,EANI,KAMMF,EANN,OAOqChR,oBAAS,GAP9C,mBAOcoR,GAPd,aAQmDpR,oBAAS,GAR5D,mBAQJmR,EARI,KAQqB2I,EARrB,OAS6C9Z,oBAAS,GATtD,mBASJiR,EATI,KASkB8I,EATlB,OAU2B/Z,mBAAS,IAVpC,mBAUJ2lB,EAVI,KAUSxB,EAVT,OAWiBnkB,mBAAS,IAX1B,mBAWJ4lB,EAXI,KAWIxD,EAXJ,OAYmBpiB,mBAAS,IAZ5B,mBAYJyjB,EAZI,KAYKD,EAZL,OAamBxjB,mBAAS,IAb5B,mBAaJ/J,EAbI,KAaK4vB,EAbL,OAc6B7lB,mBAAS,IAdtC,mBAcJ8a,GAdI,KAcUC,GAdV,QAemC/a,mBAAS,IAf5C,qBAeJokB,GAfI,MAeaC,GAfb,SAgB6BrkB,mBAAS,IAhBtC,qBAgBJsiB,GAhBI,MAgBUD,GAhBV,SAiBkBriB,mBAAS,IAjB3B,qCAkBkBA,mBAAS,KAlB3B,qCAmB2BA,mBAAS,KAnBpC,qBAmBJpM,GAnBI,MAmBSoyB,GAnBT,SAoB+BhmB,mBAAS,IApBxC,qBAoBJuY,GApBI,MAoBW0N,GApBX,SAqBqBjmB,mBAAS,IArB9B,qBAqBJ4Y,GArBI,MAqBMsN,GArBN,SAsByBlmB,mBAAS,IAtBlC,qBAsBJ6Y,GAtBI,MAsBQsN,GAtBR,SAuBmCnmB,mBAAS,IAvB5C,qBAuBJsuB,GAvBI,MAuBaC,GAvBb,SAwB2CvuB,mBAAS,KAxBpD,qBAwBJwuB,GAxBI,MAwBiBC,GAxBjB,SAyB2CzuB,oBAAS,GAzBpD,qBAyBJutB,GAzBI,MAyBiBmB,GAzBjB,MA0BL5uB,GAAQC,cAMRyB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,uBAAAjC,EAAA,6DAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACd,OAAOA,EAAMT,MAEb,GANe,SAQS6yB,EAAsB,CAChDjvB,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBloB,YAAaA,GACbgzB,MAAOnlB,EAAOmlB,MACd5wB,KAAMyL,EAAOzL,KACbvC,SAAUkyB,EACVrvB,KAAMsvB,EACNvvB,MAAOotB,EACPtvB,MAAO0nB,EACP9nB,MAAO+mB,IAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD5lB,QAASA,EACTuiB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,GAAS3lB,KAAK,KAExB+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUC,GAAW5lB,KAAK,KAC1BjC,KAAMyQ,EAAO6W,OAAOwD,OACpB9lB,KAAMyL,EAAOolB,SACbjzB,YAAa2kB,OA9BA,QAQbuO,EARa,SAoC2B,OAAzBA,EAAc9vB,SACjC4Z,GAAwB,mBACxBqI,GAAyB,GAmBnBtG,EAAU7S,GAAM8S,aAChBC,EAAgBF,EAAQG,QAAO,SAAAC,GACnC,IAAMC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOC,SAExB,MAAyB,aAAV,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAA6C,kBAAzB,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAW,OACvDxgB,KAAI,SAAAugB,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,aAEjBiB,EA5B4C,OA4B5BpB,QA5B4B,IA4B5BA,OA5B4B,EA4B5BA,EAAgB,KAKpC/S,GAAMuT,aAAaY,GAAgB,SAACX,GAClC,IAAIqb,EAAc,eACb7H,EADa,CAEhBpzB,GAAIozB,EAAa,KAAW,GAC5Br1B,IAAKq1B,EAAa,KAAW,GAC7B91B,KAAM81B,EAAa,MAAY,GAC/BlzB,YAAakzB,EAAa,aAAmB,GAC7C/yB,MAAO+yB,EAAa,OAAa,KAEnC,OAAO,eAEFxT,EAFL,CAIE/f,KAAK,CAAEo7B,GAAH,2BAAsBrb,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAM/f,YAMtCyd,EAAY,IACZ+J,GAAgB,IAChB8K,EAAW,IACXzD,EAAU,IACVC,GAAgB,IAChBmB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnB3iB,EAAQ2a,aAKV3a,EAAQC,eAAc,GArGH,2CAAH,wDAwGlBpC,qBAAU,WACR,IAAK+mB,EAAe,UAAe,CACjC,IAAM9nB,EAAQ8nB,EAAe,MAC7B,GAAI9nB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACgK,IAEJ,IAAM/F,GAAe,SAAC7d,GACpBuW,GAAyB,IAyCrBoU,GAAmB,SAACpE,GACxBv2B,QAAQC,IAAI,eAAgBs2B,GAC5BpD,EAAW,CAAC,eAELoD,EAFG,CAGNv1B,GAAIuC,EAAQhE,UAHN,oBAKLgE,KAEL8R,KAAQ6c,KAAK,0BAGT0I,GAAsB,SAACrE,GAC3B,IAIM/f,EAHGjT,EAAQzD,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ61B,EAAUv1B,IAMpDshB,EAAcjjB,OAAOkjB,OAAO,GAAIhf,EAAQiT,GAA1BnX,OAAA,IAAAA,CAAA,GAAuCk3B,IACrD2F,EAAiB,uBAClB34B,EAAQ9C,MAAM,EAAG+V,IADC,CAErB8L,GAFqB,aAGlB/e,EAAQ9C,MAAM+V,EAAQ,KAG3B2c,EAAW+I,GAEX7mB,KAAQ6c,KAAK,2BACb8J,IAAuB,GACvBD,GAAuB,MAyCzB,OAFA/7B,QAAQC,IAAI,cAAesD,GAGzB,kBAAC,IAAD,CACE6L,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYG,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXnE,MAAO,OACPpQ,MAAM,kBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,6BAAS7sB,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,qDAEA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,WACbD,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmkB,EAAgB9nB,MAAhB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmkB,EAAgB9nB,MAAhB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAgEpB,kBAACjS,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzL,KACdhF,KAAK,OACLC,YAAa,cACbH,QACGsR,EAAQpM,MAAQkM,EAAOlM,OACtBmM,GACAmkB,EAAgB9nB,MAAhB,WAEJzN,YACGqR,EAAQpM,MAAQkM,EAAOlM,OACtBmM,GACAmkB,EAAgB9nB,MAAhB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO2sB,OACdn9B,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQgsB,QAAUlsB,EAAOksB,SACxBjsB,GACAmkB,EAAgB9nB,MAAhB,aAEJzN,YACGqR,EAAQgsB,QAAUlsB,EAAOksB,SACxBjsB,GACAmkB,EAAgB9nB,MAAhB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOmlB,MACd51B,KAAK,QACLF,QACGsR,EAAQwkB,OAAS1kB,EAAO0kB,QACvBzkB,GACAmkB,EAAgB9nB,MAAhB,YAEJzN,YACGqR,EAAQwkB,OAAS1kB,EAAO0kB,QACvBzkB,GACAmkB,EAAgB9nB,MAAhB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,wBAAIlR,UAAU,mBAAd,eAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMK,GACN0zB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBvB,GAAezyB,IAEjBqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,kBAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMglB,GACN+O,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBtB,GAAiB1yB,IAEnBqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,SAOhC,yBAAKj2B,UAAU,kCACb,yBAAKA,UAAU,wCACb,iDAEA,yBACEA,UACE8E,GAAWA,EAAQhE,OAAS,EACxB,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAIJ,yBAAK7W,UAAU,sCACb,kBAAC,KAAD,CACE09B,UAAU,EACVC,YAAY,MACZr+B,KAAK,OACLilB,UAAW8Y,GACX59B,SAAU,SAACF,GACT+9B,GAAuB,GAAD,OAAI/9B,MAG5B,kBAAC,GAAD,CAASilB,IAAI,gBAAgBlkB,IAAI,KAC/B,kBAAC,GAAD,CACE47B,iBAAkBA,GAClBvE,YAAawF,GACbhB,oBAAqBA,GACrBC,oBAAqBA,MAGzB,kBAAC,GAAD,CAAS5X,IAAI,eAAelkB,IAAI,KAC9B,yBAAKN,UAAU,uDACZ8E,EAAQhE,OAAS,GAChBgE,EAAQzD,KAAI,SAACQ,GACX,OACE,yBAAK7B,UAAU,4DACb,yBAAKA,UAAU,iEAIb,0BACEA,UAAU,kBACVwR,QAAS,YAhXrB,SAACjP,GACzBg7B,IAAuB,GACvB,IAAM5F,EAAc7yB,EAAQid,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACnDo1B,GACFyF,GAAmBzF,GA6WiBiG,CAAkB/7B,EAAKU,IACvB+6B,GAAuB,OAGzB,kBAAClP,GAAA,EAAD,OAEF,0BACEpuB,UAAU,oBACVwR,QAAS,kBAjXnB,SAACjP,GAC3B,IAAMs7B,EAAa/4B,EAAQ6c,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACxDmyB,EAAWmJ,GACXjnB,KAAQ6c,KAAK,2BA+WyBqK,CAAoBj8B,EAAKU,MAG3B,kBAACuiB,GAAA,EAAD,QAGJ,yBAAK9kB,UAAU,gEACb,6BACE,qCACA,yBAAKA,UAAU,iEACZ6B,EAAK8C,MAAM2wB,MACV,oCACE,4BAAKzzB,EAAK8C,MAAM2wB,OADlB,IAEA,wBACI90B,MAAO,CACLu9B,eAAgB,iBAGjBl8B,EAAK8C,MAAM0wB,UAId,4BAAKxzB,EAAK8C,MAAM0wB,WAKvBxzB,EAAKy6B,OAASz6B,EAAKy6B,MAAL,WACb,6BACE,kBAAC,KAAD,CACEpkB,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMj3B,WAElB,sCAEDxD,EAAKy6B,MAAL,SACC,oCACE,yBAAKt8B,UAAU,iEACb,6BACE,kCAEA,kBAAC,KAAD,CACIA,UAAU,qBACVkY,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMh3B,eAUjC04B,QAAO,OAACn8B,QAAD,IAACA,OAAD,EAACA,EAAM26B,uBACb,6BACE,sDACA,yBAAKx8B,UAAU,iEACb,mCAAK6B,QAAL,IAAKA,OAAL,EAAKA,EAAM26B,yBAMlB36B,EAAK21B,WACJ52B,OAAO0P,OAAOzO,EAAK21B,WAAW12B,OAC9B,GACE,oCACE,0CACA,yBAAKd,UAAU,iEACZ6B,EAAK21B,WACJ52B,OAAOC,KAAKgB,EAAK21B,WAAW12B,OAC5B,GACAF,OAAOC,KAAKgB,EAAK21B,WAAWn2B,KAC1B,SAACu6B,GACC,OACE,6BACE,4BAAKA,GACL,4BAEI/5B,EAAK21B,UACLoE,gBAe3B92B,EAAQhE,OAAS,IAClB,yBACEN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,CACEjT,YAAY,mBACZO,MAAOwS,KAAMI,6BAQzB,yBAAK5V,UAAU,mDAInB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,sCACb,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,kBAAMoY,GAAgB5mB,EAAMT,MAErC,yBAAKgJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBA3kBd,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAmkBiCC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKnBonB,IACS,IAAV5R,IALF,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,YAQZ,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEE4lB,QAASmP,GACT5vB,KAAMsiB,KAGR,yBACEjnB,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEE4lB,QAASoP,GACT7vB,KAAMuiB,QAKd,yBAAK1nB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAEA,kBAAC,KAAD,CACE8W,MAAM,MACN6I,QACEwV,EAAgB9nB,MAAhB,kBACEmnB,EAAY1zB,OAAS,GAEzB0W,UAAU,OACVpU,MAAO,gCAEP,yBACEpD,UACIw0B,EAAY1zB,OAAS,GACpBq0B,EAAgB9nB,MAAhB,eAEC8nB,EAAgB9nB,MAAhB,eACE,kBACA,mBAHF,aAMN,kBAACwJ,GAAA,EAAD,SAIN,yBAAK7W,UAAU,mDACb,kBAAC,GAAD,CACEkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMxB,yBAAKhzB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,qCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,OAKnB,yBAAKjxB,UAAU,kCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,sCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CAAQqyB,WAAYA,UAQhC,kBAAC,GAAD,CACEzS,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SC7hC5BP,GAAYC,KAAZD,QAEF3P,GAAmBC,MAAaC,MAAM,IAItCG,GAAgB,CACpBpQ,KAAM,GACN4C,YAAa,GACbgzB,MAAO,GACP5wB,KAAM,GACNwwB,QAAS,GACTC,MAAO,GACPjwB,UAAW,GACXC,QAAS,GACTtC,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACPkC,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACNg4B,cAAe,KACfC,OAAQ,GACR9V,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAYRE,GAAsB,SAAC,GAOvB,EANJwR,mBAMK,IALLC,EAKI,EALJA,sBACAhF,EAII,EAJJA,kBAII,KAHJD,eAGI,EAFJF,YAEI,EADJgJ,iBAEuDzuB,EACrD,GACA,kBAHE,mBACG6lB,EADH,KACuB2J,EADvB,OAKmDxvB,EACrD,GACA,qBAPE,mBAKG8jB,EALH,KAKuBgC,EALvB,OAYA9lB,EAAe,GAAI,6BAZnB,mBAWFsb,GAXE,aAgBAtb,EAAe,GAAI,2BAhBnB,mBAeFub,GAfE,aAoBAvb,EAAe,GAAI,+BApBnB,gCAwBAA,EAAe,GAAI,8BAxBnB,mBAuBFwb,GAvBE,aA4BAxb,EAAe,GAAI,6BA5BnB,mBA2BFyb,GA3BE,aA8B0Brb,oBAAS,GA9BnC,mBA8BG8Q,EA9BH,KA8BYC,EA9BZ,OA+B4B/Q,oBAAS,GA/BrC,mBA+BGkR,EA/BH,KA+BaF,EA/Bb,OAgC4ChR,oBAAS,GAhCrD,mBAgCqBoR,GAhCrB,aAiC0DpR,oBAAS,GAjCnE,mBAiCGmR,EAjCH,KAiC4B2I,EAjC5B,OAkCoD9Z,oBAAS,GAlC7D,mBAkCGiR,EAlCH,KAkCyB8I,GAlCzB,QAmCkC/Z,mBAAS,IAnC3C,qBAmCG2lB,GAnCH,MAmCgBxB,GAnChB,SAoCwBnkB,mBAAS,IApCjC,qBAoCG4lB,GApCH,MAoCWxD,GApCX,SAqC0BpiB,mBAAS,IArCnC,qBAqCGyjB,GArCH,MAqCYD,GArCZ,SAsC0BxjB,mBAAS,IAtCnC,qBAsCG/J,GAtCH,MAsCY4vB,GAtCZ,SAuCoC7lB,mBAAS,IAvC7C,qBAuCG8a,GAvCH,MAuCiBC,GAvCjB,SAwC0C/a,mBAAS,IAxCnD,qBAwCGokB,GAxCH,MAwCoBC,GAxCpB,SAyCoCrkB,mBAAS,IAzC7C,qBAyCGsiB,GAzCH,MAyCiBD,GAzCjB,SA0CyBriB,mBAAS,IA1ClC,qBA0CS8lB,IA1CT,gBA2CyB9lB,mBAAS,IA3ClC,qBA2CS+lB,IA3CT,gBA4CkC/lB,mBAAS,IA5C3C,qBA4CGpM,GA5CH,MA4CgBoyB,GA5ChB,SA6CsChmB,mBAAS,IA7C/C,qBA6CGuY,GA7CH,MA6CkB0N,GA7ClB,SA8C4BjmB,mBAAS,IA9CrC,qBA8CG4Y,GA9CH,MA8CasN,GA9Cb,SA+CgClmB,mBAAS,IA/CzC,qBA+CG6Y,GA/CH,MA+CesN,GA/Cf,SAgD0CnmB,mBAAS,IAhDnD,qBAgDGsuB,GAhDH,MAgDoBC,GAhDpB,SAiDkDvuB,mBAAS,KAjD3D,qBAiDGwuB,GAjDH,MAiDwBC,GAjDxB,SAkDkDzuB,oBAAS,GAlD3D,qBAkDGutB,GAlDH,MAkDwBmB,GAlDxB,MAmDE5uB,GAAQC,cAEdR,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBimB,EAAyB,CAC7BtzB,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,IAAM8xB,EAAkB7xB,QAJ7B,2CAAH,qDAUtB2nB,KACC,CAACkK,IAGJjmB,qBAAU,WACR,GACEmkB,EAAmB5kB,MACnB4kB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,EAC9C,CACA,IAAMuzB,EAAoB9B,EAAmBnwB,KAO7C,GALIiyB,EAAkBnvB,MACpBmtB,GAAWgC,EAAkBnvB,MAAlB,IAEXmtB,GAAW,IAGXgC,GACAA,EAAkBlvB,MAClBkvB,EAAkBlvB,KAAKrE,OAAS,EAChC,CACA,IAAMo9B,EAAmB7J,EAAkBlvB,KAAK9D,KAC9C,SAACQ,GAAD,OAAUA,EAAKhC,QAGXs+B,EAAiB9J,EAAkBlvB,KAAK9D,KAAI,SAACQ,GAAD,OAAUA,EAAKW,OAEjE0uB,GAAgBgN,GAChB38B,QAAQC,IAAI,mBAAoB28B,GAChClN,GAAUkN,QAEVlN,GAAU,IACVC,GAAgB,IAElB,GACEmD,GACAA,EAAkB/xB,UAClB+xB,EAAkB/xB,SAASxB,OAAS,EACpC,CACA,IAAMk1B,EAAc3B,EAAkB/xB,SAASjB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAClE2wB,GAAmB8C,QAEnB9C,GAAmB,IAInBmB,GACAA,EAAkBvvB,SAClBuvB,EAAkBvvB,QAElB4vB,GAAWL,EAAkBvvB,SAE7B4vB,GAAW,IAIXL,GACAA,EAAkBtvB,MAClBsvB,EAAkBtvB,KAElB4vB,GAAaN,EAAkBtvB,MAE/B4vB,GAAa,IAIbN,GACAA,EAAkBrvB,MAClBqvB,EAAkBrvB,KAElB4vB,GAAaP,EAAkBrvB,MAE/B4vB,GAAa,IAGXP,GAAqBA,EAAkB5xB,YACzCoyB,GAAeR,EAAkB5xB,aAEjCoyB,GAAe,IAIfR,GACAA,EAAkBxJ,IAClBwJ,EAAkBxJ,GAAlB,YAEAiK,GAAiBT,EAAkBxJ,GAAlB,aAEjBiK,GAAiB,IAIrBvzB,QAAQC,IAAI,iBACX,CAAC+wB,EAAmB5kB,OAEvBS,qBAAU,WACR,GAAImkB,EAAmB5kB,MAAQ/M,OAAOC,KAAK0xB,GAAoBzxB,OAAS,EAAG,CACzE,IAAM6K,EAAS4mB,EAAmBnwB,KAAKY,MACnConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC5BspB,EAAYze,GAIZ4mB,EAAmBnwB,KAAKQ,OACxB2vB,EAAmBnwB,KAAKQ,MAAxB,GAEe+I,EAAOoW,MACpB,SAAClgB,GAAD,OAAUA,EAAKU,KAAOgwB,EAAmBnwB,KAAKQ,MAAxB,QAGtBwnB,EAAS,CAAImI,EAAmBnwB,KAAKQ,OAA5B,oBAAsCwnB,KAGjDR,GAAgB2I,EAAmBnwB,KAAKQ,MAAxB,IAIlBid,EAAYuK,MAEb,CAACmI,EAAmB5kB,OAEvBS,qBAAU,WACR7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC/CS,QAAQC,IAAI,YAAaue,GAErB4J,KAAiB5J,EAAS,GAAGxd,KAC/BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,QAGrC,CAACA,IAEJ,IAAMuK,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,EAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OANF,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,EAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OAND,OACzBkoB,EADyB,OAW/BlpB,QAAQC,IAAI,eAAgBipB,GAGxBA,GAAwC,OAAxBA,EAAa5kB,OAC/B4Z,GAAwB,qBAExBuE,GAAsB,mDAjBO,2CAAH,sDAyBxB3T,GAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAjC,EAAA,yDAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACd,OAAOA,EAAMT,MAEb,KAEA8xB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GAR9C,oBASX8pB,EAAyB,GAE3BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAACymB,GACb8J,GAAqBA,EAAiB,QACnCA,EAAiB,MAAU5yB,SAAS8oB,IACvCK,EAAuB3mB,KAAKsmB,SAMhCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GArBhD,gCAsBTipB,EAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,KAG9B4D,KAAM,CACJnD,MAAO4nB,KA9BI,mCAkCfA,EAAuB,IACvBA,EAAuB9pB,OAAS,GAnCjB,kCAqCTkpB,EAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OA1CjB,yBAiDa07B,EAAyB,CACvDh9B,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,KAG1B4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBloB,YAAaA,GACbgzB,MAAOnlB,EAAOmlB,MACd5wB,KAAMyL,EAAOzL,KACbvC,SAAU2wB,GACV9tB,KAAMsvB,GACNvvB,MAAOotB,GACPtvB,MAAO0nB,EACP9nB,MAAO+mB,IAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD5lB,QAASA,GACTuiB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,IAAYA,GAAS3mB,OAAS,EAAI2mB,GAAS3lB,KAAK,KAAO,GAEjE+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SACEC,IAAcA,GAAW5mB,OAAS,EAAI4mB,GAAW5lB,KAAK,KAAO,GAC/DjC,KAAMyQ,EAAO6W,OAAOwD,OACpB9lB,KAAMyL,EAAOolB,SACbjzB,YAAa2kB,OA7EA,SAiDbgX,EAjDa,SAmFmC,OAA7BA,EAAkBv4B,SACzC4Z,GAAwB,mBAGlB+B,EAAU7S,GAAM8S,aAChBC,EAAgBF,EAAQG,QAAO,SAAAC,GACnC,IAAMC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOC,SAExB,MAAyB,aAAV,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAA6C,kBAAzB,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAW,OACvDxgB,KAAI,SAAAugB,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,aAUvB,QARMC,EAAaJ,EAAcK,MAAK,SAAAzhB,GAAQ,IAAD,EACvC0hB,GAAQ,EAKZ,OAHA,UAAIrT,GAAMsT,aAAa3hB,UAAvB,aAAI,EAAyB8B,KAAK2f,MAAK,SAAAlgB,GAAI,OAAIA,EAAKU,KAAO8xB,EAAkB9xB,SAC3Eyf,GAAQ,GAEHA,YAET,IAAIF,OAAJ,EAAIA,EAAa,KAEfnT,GAAMuT,aAAaJ,GAAa,SAACK,GAC/B,IAAM+R,EAAW,OAAG/R,QAAH,IAAGA,OAAH,EAAGA,EAAM/f,KAKpB2V,EAHGmc,EAAY7yB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQoyB,EAAkB9xB,IAmBtE,IAAMshB,EAAcjjB,OAAOkjB,OAAO,GAAIoQ,EAAYnc,GAA9BnX,OAAA,IAAAA,CAAA,GACfyzB,EADe,GAEf+J,EAFe,CAGlB77B,GAAI8xB,EAAkB9xB,IAAM8xB,EAAkB7xB,KAAO8N,EAAO/N,IAAM+N,EAAO9N,IAEzEI,MAnBF,SAAkBL,GAChB,KAAKA,GAAOwd,GAAaA,EAAS,IAChC,MAAO,GAEP,GAAIA,GAAYA,EAASjf,OAAS,EAAG,CACnC,IAAMe,EAAOke,EAASgC,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACjD,GAAIV,EACF,OAAOA,EAAKe,OAYXmoB,CAASpB,OAEZkM,EAAiB,uBAClB3B,EAAYlyB,MAAM,EAAG+V,IADH,CAErB8L,GAFqB,aAGlBqQ,EAAYlyB,MAAM+V,EAAQ,KAI/B,OAAO,eAEFoK,EAFL,CAIE/f,KAAMyzB,OAQZwD,GAAsB,IAmCxB9oB,EAAQC,eAAc,GA3LH,4CAAH,wDA8LlBjP,QAAQC,IAAI,qBAAsB8yB,GAClClmB,qBAAU,WACR,IAAKkmB,EAAkB,UAAe,CACpC,IAAMjnB,EAAQinB,EAAkB,MAChC,GAAIjnB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACmJ,IAEJ,IAoDM6H,GAAsB,SAACrE,GAC3B,IAIM/f,EAHGjT,GAAQzD,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ61B,EAAUv1B,IAMpDshB,EAAcjjB,OAAOkjB,OAAO,GAAIhf,GAAQiT,GAA1BnX,OAAA,IAAAA,CAAA,GAAuCk3B,IACrD2F,EAAiB,uBAClB34B,GAAQ9C,MAAM,EAAG+V,IADC,CAErB8L,GAFqB,aAGlB/e,GAAQ9C,MAAM+V,EAAQ,KAG3B2c,GAAW+I,GAEX7mB,KAAQ6c,KAAK,2BACb8J,IAAuB,GACvBD,GAAuB,MAGnBpB,GAAmB,SAACpE,GACxBpD,GAAW,CAAC,eAELoD,EAFG,CAGNv1B,GAAIuC,GAAQhE,UAHN,oBAKLgE,MAEL8R,KAAQ6c,KAAK,0BA2Df,OApBAlyB,QAAQC,IAAI,oBAAqB6yB,GACjC9yB,QAAQC,IAAI,qBAAsB+wB,GAElCnkB,qBAAU,WACR,GACEmkB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GAC9CyxB,EAAmBnwB,KAAKqlB,SACxB,CACA,IAAMA,EAAW8K,EAAmBnwB,KAAKqlB,SAASrmB,MAAM,KAGlDsmB,EAAa6K,EAAmBnwB,KAAKyoB,GAAxB,SAAuCzpB,MAAM,KAChE2zB,GAAYtN,GAAY,IACxBuN,GAActN,GAAc,OAE7B,CAAC6K,EAAkB,OAEtBhxB,QAAQC,IAAI,qBAGV,oCACE,kBAAC,IAAD,CACEmP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,kBAGNokB,EAHM,GAIL9B,EAAkB,MACpB3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GACjDyxB,EAAkB,KAAlB,IAAoC,CACpCjL,YAAaiL,EAAkB,KAAlB,GAAiClL,UAC9CG,kBACE+K,EAAkB,KAAlB,GAAiChL,gBACnCJ,OAAQoL,EAAkB,KAAlB,GAAiC1yB,KACzC61B,SAAUnD,EAAkB,KAAlB,GAAiC1tB,KAC3CuiB,cAAemL,EAAkB,KAAlB,GAAiC9vB,iBAKrD,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYG,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,qDACA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,WACbD,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAsjB,EAAmBjnB,MAAnB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAsjB,EAAmBjnB,MAAnB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAsjB,EAAmBjnB,MAAnB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAsjB,EAAmBjnB,MAAnB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAiEpB,kBAACjS,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzL,KACdhF,KAAK,OACLC,YAAa,cACbH,QACGsR,EAAQpM,MAAQkM,EAAOlM,OACtBmM,GACAsjB,EAAmBjnB,MAAnB,WAEJzN,YACGqR,EAAQpM,MAAQkM,EAAOlM,OACtBmM,GACAsjB,EAAmBjnB,MAAnB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO2sB,OACdn9B,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQgsB,QAAUlsB,EAAOksB,SACxBjsB,GACAsjB,EAAmBjnB,MAAnB,aAEJzN,YACGqR,EAAQgsB,QAAUlsB,EAAOksB,SACxBjsB,GACAsjB,EAAmBjnB,MAAnB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOmlB,MACd51B,KAAK,QACLF,QACGsR,EAAQwkB,OAAS1kB,EAAO0kB,QACvBzkB,GACAsjB,EAAmBjnB,MAAnB,YAEJzN,YACGqR,EAAQwkB,OAAS1kB,EAAO0kB,QACvBzkB,GACAsjB,EAAmBjnB,MAAnB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,wBAAIlR,UAAU,mBAAd,eAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMK,GACN0zB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBvB,GAAezyB,IAEjBqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,kBAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMglB,GACN+O,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBtB,GAAiB1yB,IAEnBqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,SAGZ,OAKP,yBAAKpX,UAAU,kCACb,yBAAKA,UAAU,wCACb,iDAEA,yBACEA,UACE8E,IAAWA,GAAQhE,OAAS,EACxB,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAIJ,yBAAK7W,UAAU,sCACb,kBAAC,KAAD,CACE09B,UAAU,EACVC,YAAY,MACZr+B,KAAK,OACLilB,UAAW8Y,GACX59B,SAAU,SAACF,GACT+9B,GAAuB,GAAD,OAAI/9B,MAG5B,kBAAC,GAAD,CAASilB,IAAI,gBAAgBlkB,IAAI,KAC/B,kBAAC,GAAD,CACE47B,iBAAkBA,GAClBvE,YAAawF,GACbhB,oBAAqBA,GACrBC,oBAAqBA,MAGzB,kBAAC,GAAD,CAAS5X,IAAI,eAAelkB,IAAI,KAC9B,yBAAKN,UAAU,uDACZ8E,GAAQhE,OAAS,GAChBgE,GAAQzD,KAAI,SAACQ,GACX,OACE,yBAAK7B,UAAU,4DACb,yBAAKA,UAAU,iEAIb,0BACEA,UAAU,kBACVwR,QAAS,YAjYrB,SAACjP,GACzBg7B,IAAuB,GACvB,IAAM5F,EAAc7yB,GAAQid,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACnDo1B,GACFyF,GAAmBzF,GA8XiBiG,CAAkB/7B,EAAKU,IACvB+6B,GAAuB,OAGzB,kBAAClP,GAAA,EAAD,OAEF,0BACEpuB,UAAU,oBACVwR,QAAS,kBAhZnB,SAACjP,GAC3B,IAAMs7B,EAAa/4B,GAAQ6c,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACxDmyB,GAAWmJ,GACXjnB,KAAQ6c,KAAK,2BA8YyBqK,CAAoBj8B,EAAKU,MAG3B,kBAACuiB,GAAA,EAAD,QAGJ,yBAAK9kB,UAAU,gEACb,6BACE,qCACA,yBAAKA,UAAU,iEACZ6B,EAAK8C,MAAM2wB,MACV,oCACE,4BAAKzzB,EAAK8C,MAAM2wB,OADlB,IAEA,wBACI90B,MAAO,CACLu9B,eAAgB,iBAGjBl8B,EAAK8C,MAAM0wB,UAId,4BAAKxzB,EAAK8C,MAAM0wB,WAKvBxzB,EAAKy6B,OAASz6B,EAAKy6B,MAAL,WACb,6BACE,kBAAC,KAAD,CACEpkB,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMj3B,WAElB,sCAEDxD,EAAKy6B,MAAL,SACC,oCACE,yBAAKt8B,UAAU,iEACb,6BACE,kCAEA,kBAAC,KAAD,CACIA,UAAU,qBACVkY,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMh3B,eAWjC04B,QAAO,OAACn8B,QAAD,IAACA,OAAD,EAACA,EAAM26B,uBACb,6BACE,sDACA,yBAAKx8B,UAAU,iEACb,mCAAK6B,QAAL,IAAKA,OAAL,EAAKA,EAAM26B,yBAOlB36B,EAAK21B,WACJ52B,OAAO0P,OAAOzO,EAAK21B,WAAW12B,OAC9B,GACE,oCACE,0CACA,yBAAKd,UAAU,iEACZ6B,EAAK21B,WACJ52B,OAAOC,KAAKgB,EAAK21B,WAAW12B,OAC5B,GACAF,OAAOC,KAAKgB,EAAK21B,WAAWn2B,KAC1B,SAACu6B,GACC,OACE,6BACE,4BAAKA,GACL,4BAEI/5B,EAAK21B,UACLoE,gBAe3B92B,GAAQhE,OAAS,IAClB,yBACEN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,CACEjT,YAAY,mBACZO,MAAOwS,KAAMI,6BAQzB,yBAAK5V,UAAU,mDAInB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETuyB,EAAmB7kB,WAClB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGH4a,EAAmB5kB,MAClB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YAtnBhB,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GA+mBsBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKnBonB,IACS,IAAV5R,IALF,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,IAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,aAShB,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAwBA,yBACEA,UACIw0B,GAAY1zB,OAAS,GACpBwzB,EAAmBjnB,MAAnB,eAECinB,EAAmBjnB,MAAnB,eACE,kBACA,mBAHF,aAMN,kBAACwJ,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,mDACb,kBAAC,GAAD,CACEkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMxB,yBAAKhzB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,qCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAKnB,yBAAKjxB,UAAU,kCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,sCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEuyB,mBAAoBA,EACpBD,QAASA,GACTD,WAAYA,QAMpB,yBACEryB,UAAU,iCACVQ,MAAO,CACL4W,UAAW,SAGb,yBAAKpX,UAAU,8CACb,yBAAKA,UAAU,qDACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,mDACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAsjB,EAAmBjnB,MAAnB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAsjB,EAAmBjnB,MAAnB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAsjB,EAAmBjnB,MAAnB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAsjB,EAAmBjnB,MAAnB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsjB,EAAmBjnB,MAAnB,sBAIJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsjB,EAAmBjnB,MAAnB,sBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAsjB,EAAmBjnB,MAAnB,wBAIJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAsjB,EAAmBjnB,MAAnB,wBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASmP,GACT5vB,KAAMsiB,KAGR,yBACEjnB,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAASoP,GACT7vB,KAAMuiB,UAQlB,yBACElnB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAM6nB,GAAsB,IACrC/5B,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAAS6iB,EAAmB5mB,UAC5BpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UAuDvBkU,GA9CO,SAAC,GAOT,IANZoF,EAMW,EANXA,mBACAC,EAKW,EALXA,sBACAhF,EAIW,EAJXA,kBACAD,EAGW,EAHXA,eACAF,EAEW,EAFXA,YACAgJ,EACW,EADXA,iBAEM9N,EAAe,WACnBiK,GAAsB,IAExB,OACE,kBAAC,KAAD,CACE74B,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXnE,MAAO,OACPpQ,MAAM,eACNuc,QAASyZ,EAEThV,SAAUgL,EACV1C,gBAAgB,EAChBpI,OAAO,SACPqI,QAAQ,EACRC,cAAe,CAEbC,SAAU,WAGZ,kBAAC,GAAD,CACEqH,YAAaA,EACbE,eAAgBA,EAChBiF,sBAAuBA,EACvBD,mBAAoBA,EACpB/E,kBAAmBA,EACnBjF,aAAcA,EACd8N,iBAAkBA,MC9gDlB7d,GAAYC,KAAZD,QAwIOgf,GA/HG,SAAC,GAGL,IAFVC,EAES,EAFTA,qBACAC,EACS,EADTA,wBACS,EACuB1vB,mBAAS,IADhC,mBACFwR,EADE,KACQC,EADR,OAEyBzR,oBAAS,GAFlC,mBAEF0R,EAFE,KAESC,EAFT,KAKHwC,EAAc,CAEhBC,UAAU,EACVC,SAAU,SAACT,GACPnC,GAAY,SAAC6C,GACT,IAAMpL,EAAQsI,EAASpe,QAAQwgB,GACzBW,EAAc/C,EAASre,QAE7B,OADAohB,EAAYC,OAAOtL,EAAO,GACnBqL,MAGfE,aAAc,SAACb,GAKX,OAJAnC,GAAY,SAAC6C,GACT,IAAMI,EAAWJ,EACjB,MAAM,GAAN,oBAAWI,GAAX,CAAqBd,QAElB,GAEXpC,YAKEiC,EAAY,uCAAG,4BAAAhU,EAAA,sDACXiU,EAAW,IAAIC,SACrBnC,EAASvc,SAAQ,SAAC2e,GACdF,EAASG,OAAO,MAAOD,EAAMA,EAAK5iB,SAGtC2gB,GAAa,GAEbmC,KAAQ,CACJ3hB,IAAI,GAAD,OAAK6B,EAAOqK,QAAZ,sCACHZ,OAAQ,OACRsW,aAAa,EACbxgB,KAAMmgB,EACNM,iBAAiB,EACjBja,QAAS,WACLgO,KAAQhO,QAAQ,yBAChB21B,GAAwB,GACxB/d,GAAa,GACbF,EAAY,KAEhBjT,MAAO,SAAC8d,GAEJ,GADA3K,GAAa,GACT2K,IAAG,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAM,IAEb,IADA,IAAMqT,EAAU59B,OAAOC,KAAKsqB,GAC5B,MAAmBqT,EAAnB,eAA4B,CAAvB,IAAIC,EAAM,KACX7nB,KAAQvJ,MAAMmxB,EAAQC,IAG9B7nB,KAAQvJ,MAAM,qBA5BL,2CAAH,qDAmClB,OACI,kBAAC,KAAD,CACI7M,MAAO,CACHuT,IAAK,QAETsQ,UAAW,CACP/S,OAAQ,EACRqG,QAAS,QAEbnE,MAAO,OACPpQ,MAAM,aACNuc,QAAS2e,EACTna,KAAM,SAAC5S,GAAD,OAAY,MAClB6S,SAAU,kBAAMma,GAAwB,IACxCja,OAAO,SACPqI,QAAQ,EACRC,cAAe,CACXnb,SAAS,EACTob,SAAU,WAGd,kBAAC,GAAD,eACI7sB,UAAU,qBACVykB,SAAS,UACTjkB,MAAO,CACHwW,WAAY,OACZvW,aAAc,QAEduiB,GAEJ,uBAAGhjB,UAAU,wBACT,kBAAC0kB,GAAA,EAAD,OAEJ,uBAAG1kB,UAAU,mBAAb,kDAGA,uBAAGA,UAAU,mBAAb,iCAMJ,kBAAC,IAAD,CACIA,UAAU,6BACVV,KAAK,UACLkS,QAAS8Q,EACT5iB,SAA8B,IAApB2gB,EAASvf,OACnB2Q,QAAS8O,EACTxd,KAAM,kBAAC4hB,GAAA,EAAD,MACNnkB,MAAO,CACH4W,UAAW,OACXoF,aAAc,SATtB,YCxFGkiB,GApCiB,SAAC,GAAwE,IAAtEh7B,EAAqE,EAArEA,SAAUtB,EAA2D,EAA3DA,KAAMu8B,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,MAAOntB,EAA4B,EAA5BA,QAASzL,EAAmB,EAAnBA,MAEjF,OACI,kBAAC,KAAD,CACIyL,QAASA,EACTjR,MAAO,CACHytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UACI,+FAER6G,KAAK,QACL4D,WACI,CACIze,SAAUk/B,EACVzZ,SAAU0Z,EACV54B,QAAOif,eAAgB,EAAG4Z,kBAAkB,GAGpDzgB,WAAYhc,EACZic,YAAa,OACbC,YAAa,SAACrP,GACV,MAAO,CACHzO,MAAO,CACHsW,MAAO,qBAKlBpT,IC/CEg7B,MC8CPhhB,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG3e,IAAXuuB,QAEF/N,GAA0B,SAAC5W,GAC/B8N,KAAa/N,QAAQ,CACnBgO,QAAS/N,GAAO,kBAChBpG,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAWzC2W,GAAU,SAAC,GAAqE,IAAD,IAAlErrB,EAAkE,EAAlEA,KAAMgyB,EAA4D,EAA5DA,eAAgB7hB,EAA4C,EAA5CA,MAAO2qB,EAAqC,EAArCA,iBAAqC,EACrDruB,oBAAS,GAD4C,mBAC5E8Q,EAD4E,KACnEC,EADmE,OAEzB/Q,oBAAS,GAFgB,mBAE5E8e,EAF4E,KAErDC,EAFqD,OAG5Bnf,EACrD,GACA,iBALiF,mBAGxDqwB,GAHwD,aAO3BjwB,oBAAS,GAPkB,gCAQpBJ,EAC7D,GACA,gBAViF,mBAQpDswB,GARoD,WAa7EjpB,EAAUC,eACVpH,EAAQC,cAIRowB,EAAmB,uCAAG,WAAOz8B,GAAP,qBAAA+L,EAAA,sEACKwwB,EAAyB,CACtD79B,WAAY,CACVE,aAAc,CACZoB,SAJoB,QACpB08B,EADoB,SAU0B,OAA5BA,EAAiBp5B,SACjC2b,EAAU7S,EAAM8S,aAChBC,EAAgBF,EAAQG,QAAO,SAAAC,GACnC,IAAMC,EAAQ,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOC,SAExB,MAAyB,aAAV,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAA6C,kBAAzB,OAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAW,OACvDxgB,KAAI,SAAAugB,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,aAUvB,QARMC,EAAaJ,EAAcK,MAAK,SAAAzhB,GAAQ,IAAD,EACvC0hB,GAAQ,EAKZ,OAHA,UAAIrT,EAAMsT,aAAa3hB,UAAvB,aAAI,EAAyB8B,KAAK2f,MAAK,SAAAlgB,GAAI,OAAIA,EAAKU,KAAOA,QACzDyf,GAAQ,GAEHA,YAET,IAAIF,OAAJ,EAAIA,EAAa,KAEfnT,EAAMuT,aAAaJ,GAAa,SAACK,GAAU,IAAD,EACxC,OAAO,eAEFA,EAFL,CAIE/f,KAAI,UAAE+f,EAAK/f,YAAP,aAAE,EAAWuf,QAAO,SAAA9f,GAAI,OAAIA,EAAKU,KAAOA,UAKlDhB,QAAQC,IAAI,CAAEsgB,WAAYA,IAE1BrC,MAxCwB,2CAAH,sDAgDnByf,EAAuB,uCAAG,WAAOxgB,EAAQnc,EAAI48B,GAAnB,qBAAA7wB,EAAA,sEACKywB,EAA6B,CAC9D54B,KAAM,CACJi5B,QAASD,GAEXl+B,WAAY,CACVE,aAAc,CACZoB,SAPwB,QACxB88B,EADwB,SAa8B,OAAhCA,EAAqBx5B,SAC/C4Z,GAAwB,iBAMlB1H,EAJgB,WACpB,OAAO3V,EAAKf,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,GAG/ByoB,GACdzpB,QAAQC,IAAI,WAAYkd,EAAQ3G,GAG1B8L,EAAcjjB,OAAOkjB,OAAO,GAAI1hB,EAAK2V,GAAQ,CACjDqnB,QAASD,IAELG,EAd0D,uBAe3Dl9B,EAAKJ,MAAM,EAAG+V,IAf6C,CAgB9D8L,GAhB8D,aAiB3DzhB,EAAKJ,MAAM+V,EAAQ,KAExBxW,QAAQC,IAAI,kBAAmB89B,EAAiB,QAASlL,GACzDA,EAAekL,IAjCa,2CAAH,0DA2DvBvU,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,MACF,IAGhB,OACE,oCACE,kBAAC,GAAD,CACER,MAAsB,OAAhB86B,QAAgB,IAAhBA,GAAA,UAAAA,EAAkB1tB,oBAAlB,eAAgCpN,OAAQ,GAC9C4D,MAAK,OAAEk3B,QAAF,IAAEA,GAAF,UAAEA,EAAkB1tB,oBAApB,aAAE,EAAgCxJ,MACvCyL,QAAqC,YAA5ByrB,EAAiBr3B,QAAwBq3B,EAAiB3tB,WACnEqvB,MAAO,GACPD,iBAAkB,SAACzvB,EAAYD,GACb,OAAhBiuB,QAAgB,IAAhBA,KAAkBpuB,QAAQI,KAG5B,kBAAC,GAAD,CACE9L,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,KACtCqrB,EAAyBlP,KAG3B,yBAAKnT,IAAKwf,EAASrM,GAASpb,IAAI,UAMxC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,KACtCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,cACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,YACNob,UAAU,YACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEmuB,MAAM,QACN/qB,MAAM,QACNob,UAAU,UACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACGjM,GAAS,gBAAiBF,GACzB,kBAAC,KAAD,CACEkF,QAAS,kBAnHF,SAACiH,EAAQnc,GAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAKtC,KAAN,CACEuR,QAAS,kBAAM0tB,EAAwBxgB,EAAQnc,GAAI,IACnDjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,YAQA,kBAAC,IAAK5kB,KAAN,CACEuR,QAAS,kBAAM0tB,EAAwBxgB,EAAQnc,GAAI,IACnDjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,iBAwGyB0a,CAAe7gB,EAAQA,EAAOnc,KAC7CiV,UAAU,eAEV,uBAAGM,KAAK,MACN,0BACEtX,MAAO,CACLqX,SAAU,SAGXzT,EAAO,WAAa,eACrB,0BACE5D,MAAO,CACL6W,WAAY,MACZQ,SAAU,SAGZ,kBAAC2nB,GAAA,EAAD,UAMN,uBAAG1nB,KAAK,MACN,0BACEtX,MAAO,CACLqX,SAAU,SAGXzT,EAAO,WAAa,eACrB,0BACE5D,MAAO,CACL6W,WAAY,MACZQ,SAAU,gBAS3BpF,GAAS,gBAAiBF,IACzB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,gBAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAM6Z,EAAoBtgB,EAAOnc,KAC5Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aASb6I,GACC,kBAAC8R,GAAD,CACEvL,YAAa9xB,EACb86B,iBAAkBA,EAClB9I,eAAgBA,EAChBiF,sBAAuBzZ,EACvBwZ,mBAAoBzZ,EACpB0U,kBAAmB1G,MAwJdta,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EA7IK,SAAC,GAAsB,IAAD,QAAnBd,EAAmB,EAAnBA,MAAmB,EACF1D,mBAAS,IADP,mBACpBulB,GADoB,aAEgBvlB,oBAAS,GAFzB,mBAEjCyvB,EAFiC,KAEXC,EAFW,OAIO9vB,EAC7C,GACA,eANsC,mBAIjCixB,EAJiC,KASlCxC,GATkC,KASfjc,EAAY,cAAe,CAClDhgB,WAAY,CACVC,OAAQ,CACNqL,YAAa,GACb+J,SAAU,QACVC,eAAgB,QALc,YATI,EAoBkB1H,oBAAS,GApB3B,mBAoBjCgZ,EApBiC,KAoBVC,EApBU,KAiCxC,OACE,oCACE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,YAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,oBACZjB,SAAU,SAAC8R,GAAD,OApBD,SAAChS,GACpB,GAAImgC,EAAat9B,KAAKtB,OAAS,EAAG,CAChC,IAAMg1B,EAAiB4J,EAAat9B,KAAKuf,QAAO,SAAC9f,GAAD,OAC9CA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzC+Z,EAAe0B,IAeU/G,CAAaxd,EAAE/F,OAAOjM,WAK3C,6BACGkT,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CACE/R,MAAO,CACL+W,YAAa,QAEfvX,UAAU,6BACV+C,KAAM,kBAAC48B,GAAA,EAAD,MACNnuB,QAAS,WACPouB,OAAOC,KAAP,UAAeh9B,EAAOqK,QAAtB,6BAPJ,cAcDuF,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CACE/R,MAAO,CACL+W,YAAa,QAEfvX,UAAU,6BACV+C,KAAM,kBAAC+8B,GAAA,EAAD,MACNtuB,QAAS,kBAAM+sB,GAAwB,KANzC,cAaD9rB,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,aAYN,yBAAK9nB,UAAU,uCAEf,yBAAKA,UAAU,wCACZ,UAAAk9B,EAAiB1tB,oBAAjB,mBAA+BpN,YAA/B,eAAqCtB,QAAS,GAC7C,kBAAC,GAAD,CACEo8B,iBAAkBA,EAClB3qB,MAAOA,EACP6hB,eAAgBA,EAChBhyB,KAAM,KAGmB,YAA5B86B,EAAiBr3B,QAAwB,kBAACmpB,GAAD,MACzCkO,EAAiBv9B,WAAW,UAAEu9B,EAAiB1tB,oBAAnB,iBAAE,EAA+BpN,YAAjC,aAAE,EAAqCtB,SAClE,yBACEN,MAAO,CACL4W,UAAW,SAGb,kBAAC,GAAD,CAAOhU,MAAM,wBAMpB85B,EAAiB5tB,WAChB,kBAAC,GAAD,CACEuY,sBAAuBA,EACvBC,yBAA0BA,EAC1BoM,YAAawL,EAAat9B,KAC1BgyB,eAAgBA,EAChB8I,iBAAkBA,IAItB,kBAAC,GAAD,CACEoB,qBAAsBA,EACtBC,wBAAyBA,QCrczBhf,GAAYC,KAAZD,QAEF3P,GAAmBC,MAAaC,MAAM,IAItCG,GAAgB,CACpBpQ,KAAM,GACN4C,YAAa,GACbgzB,MAAO,GACP5wB,KAAM,GACNwwB,QAAS,GACTC,MAAO,GACPjwB,UAAW,GACXC,QAAS,GACTtC,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACPkC,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACNg4B,cAAe,KACfC,OAAQ,GACR9V,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAURE,GAAsB,SAAC,GAKvB,EAJJwR,mBAIK,IAHLC,EAGI,EAHJA,sBACAhF,EAEI,EAFJA,kBACA0L,EACI,EADJA,qBACI,EACmDtxB,EACrD,GACA,iBAHE,mBACG6lB,EADH,KACuB2J,EADvB,OAKmDxvB,EACrD,GACA,qBAPE,mBAKG8jB,EALH,KAKuBgC,EALvB,OAYA9lB,EAAe,GAAI,6BAZnB,mBAWFsb,GAXE,aAgBAtb,EAAe,GAAI,2BAhBnB,mBAeFub,GAfE,aAoBAvb,EAAe,GAAI,+BApBnB,gCAwBAA,EAAe,GAAI,8BAxBnB,mBAuBFwb,GAvBE,aA4BAxb,EAAe,GAAI,6BA5BnB,mBA2BFyb,GA3BE,aA8B0Brb,oBAAS,GA9BnC,mBA8BG8Q,EA9BH,KA8BYC,EA9BZ,OA+B4B/Q,oBAAS,GA/BrC,mBA+BGkR,EA/BH,KA+BaF,EA/Bb,OAgC4ChR,oBAAS,GAhCrD,mBAgCqBoR,GAhCrB,aAiC0DpR,oBAAS,GAjCnE,mBAiCGmR,EAjCH,KAiC4B2I,EAjC5B,OAkCoD9Z,oBAAS,GAlC7D,mBAkCGiR,EAlCH,KAkCyB8I,GAlCzB,QAmCkC/Z,mBAAS,IAnC3C,qBAmCG2lB,GAnCH,MAmCgBxB,GAnChB,SAoCwBnkB,mBAAS,IApCjC,qBAoCG4lB,GApCH,MAoCWxD,GApCX,SAqC0BpiB,mBAAS,IArCnC,qBAqCGyjB,GArCH,MAqCYD,GArCZ,SAsC0BxjB,mBAAS,IAtCnC,qBAsCG/J,GAtCH,MAsCY4vB,GAtCZ,SAuCoC7lB,mBAAS,IAvC7C,qBAuCG8a,GAvCH,MAuCiBC,GAvCjB,SAwC0C/a,mBAAS,IAxCnD,qBAwCGokB,GAxCH,MAwCoBC,GAxCpB,SAyCoCrkB,mBAAS,IAzC7C,qBAyCGsiB,GAzCH,MAyCiBD,GAzCjB,SA0CyBriB,mBAAS,IA1ClC,qBA0CS8lB,IA1CT,gBA2CyB9lB,mBAAS,IA3ClC,qBA2CS+lB,IA3CT,gBA4CkC/lB,mBAAS,IA5C3C,qBA4CGpM,GA5CH,MA4CgBoyB,GA5ChB,SA6CsChmB,mBAAS,IA7C/C,qBA6CGuY,GA7CH,MA6CkB0N,GA7ClB,SA8C4BjmB,mBAAS,IA9CrC,qBA8CG4Y,GA9CH,MA8CasN,GA9Cb,SA+CgClmB,mBAAS,IA/CzC,qBA+CG6Y,GA/CH,MA+CesN,GA/Cf,SAgD0CnmB,mBAAS,IAhDnD,qBAgDGsuB,GAhDH,MAgDoBC,GAhDpB,SAiDkDvuB,mBAAS,KAjD3D,qBAiDGwuB,GAjDH,MAiDwBC,GAjDxB,SAkDkDzuB,oBAAS,GAlD3D,qBAkDGutB,GAlDH,MAkDwBmB,GAlDxB,MAoDJnvB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBimB,EAAyB,CAC7BtzB,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,OAJL,2CAAH,qDAUtB4nB,KACC,CAACkK,IAEJ9yB,QAAQC,IAAI,SAAUizB,IACtBlzB,QAAQC,IAAI,iBAAkB2vB,IAE9B/iB,qBAAU,WACR,GACEmkB,EAAmB5kB,MACnB4kB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,EAC9C,CACA,IAAMuzB,EAAoB9B,EAAmBnwB,KAO7C,GALIiyB,EAAkBnvB,MACpBmtB,GAAWgC,EAAkBnvB,MAAlB,IAEXmtB,GAAW,IAGXgC,GACAA,EAAkBlvB,MAClBkvB,EAAkBlvB,KAAKrE,OAAS,EAChC,CACA,IAAMo9B,EAAmB7J,EAAkBlvB,KAAK9D,KAC9C,SAACQ,GAAD,OAAUA,EAAKhC,QAGXs+B,EAAiB9J,EAAkBlvB,KAAK9D,KAAI,SAACQ,GAAD,OAAUA,EAAKW,OAEjE0uB,GAAgBgN,GAChB38B,QAAQC,IAAI,mBAAoB28B,GAChClN,GAAUkN,QAEVlN,GAAU,IACVC,GAAgB,IAElB,GACEmD,GACAA,EAAkB/xB,UAClB+xB,EAAkB/xB,SAASxB,OAAS,EACpC,CACA,IAAMk1B,EAAc3B,EAAkB/xB,SAASjB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAClE2wB,GAAmB8C,QAEnB9C,GAAmB,IAInBmB,GACAA,EAAkBvvB,SAClBuvB,EAAkBvvB,QAElB4vB,GAAWL,EAAkBvvB,SAE7B4vB,GAAW,IAIXL,GACAA,EAAkBtvB,MAClBsvB,EAAkBtvB,KAElB4vB,GAAaN,EAAkBtvB,MAE/B4vB,GAAa,IAIbN,GACAA,EAAkBrvB,MAClBqvB,EAAkBrvB,KAElB4vB,GAAaP,EAAkBrvB,MAE/B4vB,GAAa,IAGXP,GAAqBA,EAAkB5xB,YACzCoyB,GAAeR,EAAkB5xB,aAEjCoyB,GAAe,IAIfR,GACAA,EAAkBxJ,IAClBwJ,EAAkBxJ,GAAlB,YAEAiK,GAAiBT,EAAkBxJ,GAAlB,aAEjBiK,GAAiB,IAIrBvzB,QAAQC,IAAI,iBACX,CAAC+wB,EAAmB5kB,OAEvBS,qBAAU,WACR,GAAImkB,EAAmB5kB,MAAQ/M,OAAOC,KAAK0xB,GAAoBzxB,OAAS,EAAG,CACzE,IAAM6K,EAAS4mB,EAAmBnwB,KAAKY,MACnConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC5BspB,EAAYze,GAIZ4mB,EAAmBnwB,KAAKQ,OACxB2vB,EAAmBnwB,KAAKQ,MAAxB,GAEe+I,EAAOoW,MACpB,SAAClgB,GAAD,OAAUA,EAAKU,KAAOgwB,EAAmBnwB,KAAKQ,MAAxB,QAGtBwnB,EAAS,CAAImI,EAAmBnwB,KAAKQ,OAA5B,oBAAsCwnB,KAGjDR,GAAgB2I,EAAmBnwB,KAAKQ,MAAxB,IAIlBid,EAAYuK,MAEb,CAACmI,EAAmB5kB,OAEvBS,qBAAU,WACR7M,QAAQC,IAAI,WAAYue,GAEpBA,GAAYA,EAAS,IAAMA,EAASjf,OAAS,IAC/CS,QAAQC,IAAI,YAAaue,GAErB4J,KAAiB5J,EAAS,GAAGxd,KAC/BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,QAGrC,CAACA,IAEJ,IAAMuK,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,EAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OANF,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,EAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OAND,OACzBkoB,EADyB,OAW/BlpB,QAAQC,IAAI,eAAgBipB,GAGxBA,GAAwC,OAAxBA,EAAa5kB,OAC/B4Z,GAAwB,qBAiBxBuE,GAAsB,mDAhCO,2CAAH,sDAwCxB3T,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAjC,EAAA,yDAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,KAEA8xB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GAR9C,oBASX8pB,EAAyB,GAE3BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAACymB,GACb8J,GAAqBA,EAAiB,QACnCA,EAAiB,MAAU5yB,SAAS8oB,IACvCK,EAAuB3mB,KAAKsmB,SAMhCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GArBhD,gCAsBTipB,EAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,KAG9B4D,KAAM,CACJnD,MAAO4nB,KA9BI,mCAkCfA,EAAuB,IACvBA,EAAuB9pB,OAAS,GAnCjB,kCAqCTkpB,EAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,UACZtjB,OAAQmtB,EAAkB9xB,OA1CjB,yBAiDa07B,EAAyB,CACvDh9B,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,KAG1B4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBloB,YAAaA,GACbgzB,MAAOnlB,EAAOmlB,MACd5wB,KAAMyL,EAAOzL,KACbvC,SAAU2wB,GACV9tB,KAAMsvB,GACNvvB,MAAOotB,GACPtvB,MAAO0nB,EACP9nB,MAAO+mB,IAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD5lB,QAASA,GACTuiB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,IAAYA,GAAS3mB,OAAS,EAAI2mB,GAAS3lB,KAAK,KAAO,GAEjE+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SACEC,IAAcA,GAAW5mB,OAAS,EAAI4mB,GAAW5lB,KAAK,KAAO,GAC/DjC,KAAMyQ,EAAO6W,OAAOwD,OACpB9lB,KAAMyL,EAAOolB,SACbjzB,YAAa2kB,OA7EA,SAiDbgX,EAjDa,SAmFmC,OAA7BA,EAAkBv4B,SACzC4Z,GAAwB,mBAExB4Z,GAAsB,GAEtBA,GAAsB,GACtB0G,EAAqB,eAEhB3B,EAFe,CAGlB97B,SAAU+xB,EAAkB/xB,SAC5B4C,MAAOmvB,EAAkBnvB,MACzBC,KAAMkvB,EAAkBlvB,KACxBvC,MAAOyxB,EAAkBzxB,MACzBI,MAAOqxB,EAAkBrxB,MACzBT,GAAI8xB,EAAkB9xB,OAoC1BgO,EAAQC,eAAc,GArIH,4CAAH,wDAwIlBjP,QAAQC,IAAI,qBAAsB8yB,GAClClmB,qBAAU,WACR,IAAKkmB,EAAkB,UAAe,CACpC,IAAMjnB,EAAQinB,EAAkB,MAChC,GAAIjnB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACmJ,IAEJ,IAoDM6H,GAAsB,SAACrE,GAC3B,IAIM/f,EAHGjT,GAAQzD,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ61B,EAAUv1B,IAMpDshB,EAAcjjB,OAAOkjB,OAAO,GAAIhf,GAAQiT,GAA1BnX,OAAA,IAAAA,CAAA,GAAuCk3B,IACrD2F,EAAiB,uBAClB34B,GAAQ9C,MAAM,EAAG+V,IADC,CAErB8L,GAFqB,aAGlB/e,GAAQ9C,MAAM+V,EAAQ,KAG3B2c,GAAW+I,GAEX7mB,KAAQ6c,KAAK,2BACb8J,IAAuB,GACvBD,GAAuB,MAGnBpB,GAAmB,SAACpE,GACxBpD,GAAW,CAAC,eAELoD,EAFG,CAGNv1B,GAAIuC,GAAQhE,UAHN,oBAKLgE,MAEL8R,KAAQ6c,KAAK,0BA4Df,OArBAlyB,QAAQC,IAAI,oBAAqB6yB,GACjC9yB,QAAQC,IAAI,qBAAsB+wB,GAElCnkB,qBAAU,WACR,GACEmkB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GAC9CyxB,EAAmBnwB,KAAKqlB,SACxB,CACA,IAAMA,EAAW8K,EAAmBnwB,KAAKqlB,SAASrmB,MAAM,KAExDG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EAAa6K,EAAmBnwB,KAAKyoB,GAAxB,SAAuCzpB,MAAM,KAChE2zB,GAAYtN,GAAY,IACxBuN,GAActN,GAAc,OAE7B,CAAC6K,EAAkB,OAEtBhxB,QAAQC,IAAI,qBAGV,oCACE,kBAAC,IAAD,CACEmP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,kBAGNokB,EAHM,GAIL9B,EAAkB,MACpB3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GACjDyxB,EAAkB,KAAlB,IAAoC,CAClCjL,YAAaiL,EAAkB,KAAlB,GAAiClL,UAC9CG,kBACE+K,EAAkB,KAAlB,GAAiChL,gBACnCJ,OAAQoL,EAAkB,KAAlB,GAAiC1yB,KACzC61B,SAAUnD,EAAkB,KAAlB,GAAiC1tB,KAC3CuiB,cAAemL,EAAkB,KAAlB,GAAiC9vB,iBAKvD,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,qDACA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,WACbD,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAsjB,EAAmBjnB,MAAnB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAsjB,EAAmBjnB,MAAnB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAsjB,EAAmBjnB,MAAnB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAsjB,EAAmBjnB,MAAnB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAiEpB,kBAACjS,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzL,KACdhF,KAAK,OACLC,YAAa,cACbH,QACGsR,EAAQpM,MAAQkM,EAAOlM,OACtBmM,GACAsjB,EAAmBjnB,MAAnB,WAEJzN,YACGqR,EAAQpM,MAAQkM,EAAOlM,OACtBmM,GACAsjB,EAAmBjnB,MAAnB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO2sB,OACdn9B,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQgsB,QAAUlsB,EAAOksB,SACxBjsB,GACAsjB,EAAmBjnB,MAAnB,aAEJzN,YACGqR,EAAQgsB,QAAUlsB,EAAOksB,SACxBjsB,GACAsjB,EAAmBjnB,MAAnB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOmlB,MACd51B,KAAK,QACLF,QACGsR,EAAQwkB,OAAS1kB,EAAO0kB,QACvBzkB,GACAsjB,EAAmBjnB,MAAnB,YAEJzN,YACGqR,EAAQwkB,OAAS1kB,EAAO0kB,QACvBzkB,GACAsjB,EAAmBjnB,MAAnB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,wBAAIlR,UAAU,mBAAd,eAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMK,GACN0zB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBvB,GAAezyB,IAEjBqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,kBAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMglB,GACN+O,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBtB,GAAiB1yB,IAEnBqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,SAGZ,OAKP,yBAAKpX,UAAU,kCACb,yBAAKA,UAAU,wCACb,iDAEA,yBACEA,UACE8E,IAAWA,GAAQhE,OAAS,EACxB,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAIJ,yBAAK7W,UAAU,sCACb,kBAAC,KAAD,CACE09B,UAAU,EACVC,YAAY,MACZr+B,KAAK,OACLilB,UAAW8Y,GACX59B,SAAU,SAACF,GACT+9B,GAAuB,GAAD,OAAI/9B,MAG5B,kBAAC,GAAD,CAASilB,IAAI,gBAAgBlkB,IAAI,KAC/B,kBAAC,GAAD,CACE47B,iBAAkBA,GAClBvE,YAAawF,GACbhB,oBAAqBA,GACrBC,oBAAqBA,MAGzB,kBAAC,GAAD,CAAS5X,IAAI,eAAelkB,IAAI,KAC9B,yBAAKN,UAAU,uDACZ8E,GAAQhE,OAAS,GAChBgE,GAAQzD,KAAI,SAACQ,GACX,OACE,yBAAK7B,UAAU,4DACb,yBAAKA,UAAU,iEAIb,0BACEA,UAAU,kBACVwR,QAAS,YAlYnB,SAACjP,GACzBg7B,IAAuB,GACvB,IAAM5F,EAAc7yB,GAAQid,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACnDo1B,GACFyF,GAAmBzF,GA+XeiG,CAAkB/7B,EAAKU,IACvB+6B,GAAuB,OAGzB,kBAAClP,GAAA,EAAD,OAEF,0BACEpuB,UAAU,oBACVwR,QAAS,kBAjZjB,SAACjP,GAC3B,IAAMs7B,EAAa/4B,GAAQ6c,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACxDmyB,GAAWmJ,GACXjnB,KAAQ6c,KAAK,2BA+YuBqK,CAAoBj8B,EAAKU,MAG3B,kBAACuiB,GAAA,EAAD,QAGJ,yBAAK9kB,UAAU,gEACb,6BACE,qCACA,yBAAKA,UAAU,iEACZ6B,EAAK8C,MAAM2wB,MACV,oCACE,4BAAKzzB,EAAK8C,MAAM2wB,OADlB,IAEE,wBACE90B,MAAO,CACLu9B,eAAgB,iBAGjBl8B,EAAK8C,MAAM0wB,UAIhB,4BAAKxzB,EAAK8C,MAAM0wB,WAKrBxzB,EAAKy6B,OAASz6B,EAAKy6B,MAAL,WACb,6BACE,kBAAC,KAAD,CACEpkB,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMj3B,WAElB,sCAEDxD,EAAKy6B,MAAL,SACC,oCACE,yBAAKt8B,UAAU,iEACb,6BACE,kCAEE,kBAAC,KAAD,CACEA,UAAU,qBACVkY,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMh3B,eAWjC04B,QAAO,OAACn8B,QAAD,IAACA,OAAD,EAACA,EAAM26B,uBACZ,6BACA,sDACA,yBAAKx8B,UAAU,iEACf,mCAAK6B,QAAL,IAAKA,OAAL,EAAKA,EAAM26B,yBAOf36B,EAAK21B,WACJ52B,OAAO0P,OAAOzO,EAAK21B,WAAW12B,OAC5B,GACA,oCACE,0CACA,yBAAKd,UAAU,iEACZ6B,EAAK21B,WACJ52B,OAAOC,KAAKgB,EAAK21B,WAAW12B,OAC1B,GACFF,OAAOC,KAAKgB,EAAK21B,WAAWn2B,KAC1B,SAACu6B,GACC,OACE,6BACE,4BAAKA,GACL,4BAEI/5B,EAAK21B,UACHoE,gBAe7B92B,GAAQhE,OAAS,IAClB,yBACEN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,CACEjT,YAAY,mBACZO,MAAOwS,KAAMI,6BAQzB,yBAAK5V,UAAU,mDAInB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETuyB,EAAmB7kB,WAClB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGH4a,EAAmB5kB,MAClB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YAvnBd,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAgnBoBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKrBonB,IACS,IAAV5R,IALA,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,IAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,aAShB,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAwBA,yBACEA,UACIw0B,GAAY1zB,OAAS,GACtBwzB,EAAmBjnB,MAAnB,eAEGinB,EAAmBjnB,MAAnB,eACA,kBACA,mBAHA,aAMN,kBAACwJ,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,mDACb,kBAAC,GAAD,CACEkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMxB,yBAAKhzB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,qCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAKnB,yBAAKjxB,UAAU,kCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,sCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEuyB,mBAAoBA,EACpBD,QAASA,GACTD,WAAYA,QAMpB,yBACEryB,UAAU,iCACVQ,MAAO,CACL4W,UAAW,SAGb,yBAAKpX,UAAU,8CACb,yBAAKA,UAAU,qDACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,mDACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAsjB,EAAmBjnB,MAAnB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAsjB,EAAmBjnB,MAAnB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAsjB,EAAmBjnB,MAAnB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAsjB,EAAmBjnB,MAAnB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsjB,EAAmBjnB,MAAnB,sBAIJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsjB,EAAmBjnB,MAAnB,sBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAsjB,EAAmBjnB,MAAnB,wBAIJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAsjB,EAAmBjnB,MAAnB,wBAIJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASmP,GACT5vB,KAAMsiB,KAGR,yBACEjnB,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAASoP,GACT7vB,KAAMuiB,UAQlB,yBACElnB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAM6nB,GAAsB,IACrC/5B,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAAS6iB,EAAmB5mB,UAC5BpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UAmDrBkU,GA1CO,SAAC,GAKT,IAJZoF,EAIW,EAJXA,mBACAC,EAGW,EAHXA,sBACAhF,EAEW,EAFXA,kBACA0L,EACW,EADXA,qBAEM3Q,EAAe,WACnBiK,GAAsB,IAExB,OACE,kBAAC,KAAD,CACE74B,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXnE,MAAO,OACPpQ,MAAM,eACNuc,QAASyZ,EAEThV,SAAUgL,EACV1C,gBAAgB,EAChBpI,OAAO,SACPqI,QAAQ,EACRC,cAAe,CAEbC,SAAU,WAGZ,kBAAC,GAAD,CACEwM,sBAAuBA,EACvBD,mBAAoBA,EACpB2G,qBAAsBA,EACtB1L,kBAAmBA,EACnBjF,aAAcA,MCphCP/b,IAvciBsK,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OAscOna,aALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAhcQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACY9D,EACrD,GACA,qBAHyC,mBACpC8jB,EADoC,KAChBgC,EADgB,KAMrCrzB,EAASuuB,eACT3Z,EAAUC,eACV6gB,EAAY11B,EAAM,GARmB,EASS2N,oBAAS,GATlB,mBASpCuqB,EAToC,KAShBC,EATgB,OAUOxqB,mBAAS,IAVhB,mBAUpCwlB,EAVoC,KAUjB0L,EAViB,KAY3C3xB,qBAAU,YACc,uCAAG,4BAAAE,EAAA,sEACQimB,EAAyB,CACtDtzB,WAAY,CACVE,aAAc,CACZoB,GAAIq0B,MAJa,QACjBoJ,EADiB,SAYrBD,EAAqBC,GAGvBz+B,QAAQC,IAAI,mBAAoBw+B,GAfT,2CAAH,qDAkBtB7V,KACC,CAACyM,IAEJr1B,QAAQC,IAAI,qBAAsB+wB,GAElChxB,QAAQC,IAAI,cAAeN,GAE3B,IA0BMgvB,EACJqC,EAAmB5kB,MAAQ0mB,GAAqBA,EAAiB,MA3BxC,SAAClE,GAC1B,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9uB,KAAI,SAACQ,GAAD,OAAUA,EAAKe,SAC/B,IAAMwtB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAiBnB,OAfAH,EAAKrsB,SAAQ,SAACjC,EAAMkW,GACdsY,EAAa,GACXD,EAAQE,GACVF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzuB,IAC9CuuB,EAAQE,GAAgB,CAACzuB,GAEhCwuB,GAA0B,EAC1BC,GAA8B,IAE9BD,EAAa,EACbC,EAAe,EACf/uB,QAAQC,IAAI,aAAc6uB,OAIvBD,EAKHG,CAAmB8D,EAAiB,OACpC,GAEN,OACE,yBAAKr0B,UAAU,wBACb,yBAAKA,UAAU,iCACb,8CAECuyB,EAAmB5kB,MAClB0mB,GACAzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GACtC,oCACE,kBAACm/B,GAAD,CACE7G,mBAAoBA,EACpBC,sBAAuBA,EACvBhF,kBAAmBA,EACnB0L,qBAAsBA,IAEvBttB,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CACEf,QAAS,kBAAM6nB,GAAsB,IACrC/5B,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHR,UAWV,kBAAC,KAAD,CACEqC,QAAM,EACNC,UAAW,CAAEtR,KAAM,GACnB3N,QAAS8gB,EAAmB7kB,WAE3B6kB,EAAmB5kB,MAClB0mB,KACEzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,IACxC,kBAAC,KAAD,CACE2B,YAAY,mBACZO,MAAOwS,KAAMI,yBAIlB2c,EAAmB5kB,MAClB0mB,GACAzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GACtC,oCACE,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,mGACb,yBACEuL,IACE8oB,EAAiB,OACjBA,EAAiB,MAAjB,MAEF/wB,IAAI,MAGR,yBAAKtD,UAAU,qCACb,4BAAKq0B,EAAiB,MACtB,4BAAKA,EAAiB,OACtB,4BAAKA,EAAiB,aAErBA,EAAiB,KAChB,mCAEE,8BAAOA,EAAiB,MAqB3BA,EAAiB,UAChBA,EAAiB,SAAavzB,OAAS,GACrC,oCACE,0CAEGuzB,EAAiB,SAAahzB,KAAI,SAACqF,GAClC,OACE,0BACE8K,QAAS,kBACPsE,EAAQ7R,KAAR,0BAAgCyC,EAAInE,OAGrCmE,EAAI7G,WAQlBw0B,EAAiB,MAChBA,EAAiB,KAASvzB,OAAS,GACjC,oCACE,oCAEGuzB,EAAiB,KAAShzB,KAAI,SAACqF,GAC9B,OACE,0BACE8K,QAAS,kBACPsE,EAAQ7R,KAAR,qBAA2ByC,EAAIlE,QAGhCkE,EAAI7G,aAUtBw0B,EAAiB,MAChB,oCACE,yBAAKr0B,UAAU,iCACb,qCAGF,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,gGACb,yBACEuL,IACE8oB,EAAiB,MAAYA,EAAiB,KAEhD/wB,IAAI,OAKV,yBACE9C,MAAO,CACLgc,aAAc,WAMrB6X,EAAiB,SAChBA,EAAiB,QAAYvzB,OAAS,GACpC,oCACE,yBAAKd,UAAU,iCACb,wCAGF,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uDACZq0B,EAAiB,QAAYhzB,KAAI,SAACQ,GACjC,OACE,yBAAK7B,UAAU,4DACb,yBAAKA,UAAU,gEACb,6BACE,qCACA,yBAAKA,UAAU,iEACZ6B,EAAK8C,MAAM2wB,MACV,oCACE,4BAAKzzB,EAAK8C,MAAM2wB,OADlB,IAEE,wBACE90B,MAAO,CACLu9B,eAAgB,iBAGjBl8B,EAAK8C,MAAM0wB,UAIhB,4BAAKxzB,EAAK8C,MAAM0wB,WAKrBxzB,EAAKy6B,OACJ,6BACE,kBAAC,KAAD,CACEpkB,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMj3B,WAElB,sCAEF,yBAAKrF,UAAU,iEACb,6BACE,kCAEE,kBAAC,KAAD,CACEA,UAAU,qBACVkY,cAAe,IACfjR,MAAOpF,EAAKy6B,MAAMh3B,eAS/BzD,EAAK21B,WACJ52B,OAAO0P,OAAOzO,EAAK21B,WAAW12B,OAAS,GACrC,oCACE,0CACA,yBAAKd,UAAU,iEACZ6B,EAAK21B,WACJ52B,OAAOC,KAAKgB,EAAK21B,WAAW12B,OAC1B,GACFF,OAAOC,KAAKgB,EAAK21B,WAAWn2B,KAC1B,SAACu6B,GACC,OACE,6BACE,4BAAKA,GACL,4BAEI/5B,EAAK21B,UACHoE,gBAiBlC,yBACEp7B,MAAO,CACLgc,aAAc,WAMvB6X,EAAiB,OAChBA,EAAiB,MAAUvzB,OAAS,GAClC,oCACE,yBAAKd,UAAU,iCACb,8CAGF,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACZkwB,GACCtvB,OAAOC,KAAKqvB,GAAK7uB,KAAI,SAACkd,GACpB,OACE,yBAAKve,UAAU,qBACZkwB,EAAI3R,IACH2R,EAAI3R,GAAQld,KAAI,SAAC4B,GACf,OACE,yBACEsI,IAAKtI,EACLzC,MAAO,CACLgT,MAAO,oBAY/B,yBACEhT,MAAO,CACLgc,aAAc,WAMvB6X,EAAiB,OAChBzzB,OAAOC,KAAKwzB,EAAiB,OAAWvzB,OAAS,GAC/C,oCACE,yBAAKd,UAAU,iCACb,sCAGF,yBACEwR,QAAS,kBACPsE,EAAQ7R,KAAR,uBACkBowB,EAAiB,MAAjB,MAGpBr0B,UAAU,+BAEV,yBAAKA,UAAU,wCACb,yBACEuL,IACE8oB,EAAiB,MAAjB,OACAA,EAAiB,MAAjB,MAEF/wB,IAAI,MAGR,yBAAKtD,UAAU,oCACb,4BAAKq0B,EAAiB,MAAjB,MACL,4BAAKA,EAAiB,MAAjB,eAIT,yBACE7zB,MAAO,CACLgc,aAAc,WAMvB6X,EAAiB,iBAChBzzB,OAAOC,KAAKwzB,EAAiB,iBAAqBvzB,OAChD,GACA,oCACE,yBAAKd,UAAU,iCACb,iDAGF,yBACEwR,QAAS,kBACPsE,EAAQ7R,KAAR,0BACqBowB,EAAiB,gBAAjB,MAGvBr0B,UAAU,+BAEV,yBAAKA,UAAU,wCACb,yBACEuL,IACE8oB,EAAiB,gBAAjB,OACAA,EAAiB,gBAAjB,MAEF/wB,IAAI,MAGR,yBAAKtD,UAAU,oCACb,4BAAKq0B,EAAiB,gBAAjB,MACL,4BACGA,EAAiB,gBAAjB,eAKP,yBACE7zB,MAAO,CACLgc,aAAc,kBCjchC5M,GAAmBC,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWNikB,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAwYCwY,GAzXG,SAAC,GAML,IALZC,EAKW,EALXA,eACAC,EAIW,EAJXA,kBACAC,EAGW,EAHXA,cACA9H,EAEW,EAFXA,WACAO,EACW,EADXA,QACW,EACyCrqB,EAClD,GACA,aAHS,mBACJ6xB,EADI,KACYC,EADZ,OAKa1xB,mBAAS,IALtB,mBAKJ1J,EALI,KAKEygB,EALF,OAMiB/W,mBAAS,IAN1B,mBAMJ4a,EANI,KAMIC,EANJ,KAQXtb,qBAAU,WACR7M,QAAQC,IAAI,eACX,IACH,IAAM6O,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,sEACQiyB,EAA0B,CACnDt/B,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,YACpB4kB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAQ,OAAEtiB,QAAF,IAAEA,OAAF,EAAEA,EAAMrD,KAAK,KAErB+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAQ,OAAEgC,QAAF,IAAEA,OAAF,EAAEA,EAAQ3nB,KAAK,KACvBjC,KAAMyQ,EAAO6W,OACb1kB,YAAa6N,EAAO8W,kBAnBP,QACboZ,EADa,SAyByB,OAAxBA,EAAa36B,QAKzBkS,EAJgB,WACpB,OAAO+gB,EAAQz3B,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQqO,EAAO/N,IAGzCyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAIgV,EAAQ/gB,GAA1BnX,OAAA,IAAAA,CAAA,GACf0P,EADe,GAGfkwB,IAECvV,EAb0C,uBAc3C6N,EAAQ92B,MAAM,EAAG+V,IAd0B,CAe9C8L,GAf8C,aAgB3CiV,EAAQ92B,MAAM+V,EAAQ,KAE3BwgB,EAAWtN,GArGgBrU,OAuG3B6I,EAtGJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAoGzCspB,GAAkB,IAYlBpc,KAGFzT,EAAQC,eAAc,GA7DH,iCA1DS,IAACoG,IA0DV,OAAH,wDAgElBxI,qBAAU,WACR,IAAKkyB,EAAc,UAAe,CAChC,IAAMjzB,EAAQizB,EAAc,MAC5B,GAAIjzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACmV,IAEJ,IAAMlR,EAAe,SAAC7d,GACpB6uB,GAAkB,IA4BpB,OAlBAhyB,qBAAU,WAEN,GAAGiyB,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,EAAE,CACtD,IAAM2mB,EAAW4Y,EAAc5Y,SAASrmB,MAAM,KAE9CG,QAAQC,IAAI,gBAAgBimB,GAE5B,IAAMC,EAAa2Y,EAAcxV,GAAd,SAA6BzpB,MAAM,KAEtDwkB,EAAQ6B,GACRiC,EAAUhC,MAGhB,IAEFnmB,QAAQC,IAAI,gBAAiB6+B,GAI3B,kBAAC,IAAD,CACE1vB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERowB,EAFQ,GAGPA,GACFz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAAK,CACvCwmB,YACE+Y,EAAa,IACbA,EAAa,GAAOhZ,WACpBgZ,EAAa,GAAOhZ,UACtBG,kBACE6Y,EAAa,IACbA,EAAa,GAAO9Y,iBACpB8Y,EAAa,GAAO9Y,gBACtBJ,OACEkZ,EAAa,IACbA,EAAa,GAAOxgC,MACpBwgC,EAAa,GAAOxgC,KACtBunB,cACEiZ,EAAa,IACbA,EAAa,GAAO59B,aACpB49B,EAAa,GAAO59B,gBAI3B,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,WACNuc,QAASwgB,EACThc,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,kBAAC5tB,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,YACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgBsvB,EAAejzB,MAAf,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgBsvB,EAAejzB,MAAf,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,cACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgBsvB,EAAejzB,MAAf,kBAEpBzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgBsvB,EAAejzB,MAAf,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,iDACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAsvB,EAAejzB,MAAf,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAsvB,EAAejzB,MAAf,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgBsvB,EAAejzB,MAAf,gBAEpBzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgBsvB,EAAejzB,MAAf,gBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GAAgBsvB,EAAejzB,MAAf,kBAEpBzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GAAgBsvB,EAAejzB,MAAf,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsvB,EAAejzB,MAAf,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsvB,EAAejzB,MAAf,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAsvB,EAAejzB,MAAf,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAsvB,EAAejzB,MAAf,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,cAEA,kBAAC,GAAD,CAEE4lB,QAASA,EACTzgB,KAAMA,IAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,EACTvkB,KAAMskB,UC3Yd7Z,GAAmBC,MAAaC,MAAM,IAetCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAuVC6R,GA7UK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAgR,EAEW,EAFXA,QACAP,EACW,EADXA,WACW,EAC8B9pB,EAAe,GAAI,UADjD,mBACJgyB,EADI,KACSC,EADT,OAEqB7xB,oBAAS,GAF9B,mBAEJkR,EAFI,KAEMF,EAFN,OAG6BhR,oBAAS,GAHtC,mBAGJ+qB,EAHI,KAGUC,EAHV,OAIahrB,mBAAS,IAJtB,mBAIJ1J,EAJI,KAIEygB,EAJF,OAKiB/W,mBAAS,IAL1B,mBAKJ4a,EALI,KAKIC,EALJ,KAOLrZ,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACKoyB,EAAkB,CACxCz/B,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,YACpB4kB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,EAAKrD,KAAK,KAEpB+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,EAAO3nB,KAAK,KACtBjC,KAAMyQ,EAAO6W,OACb1kB,YAAa6N,EAAO8W,kBAnBP,QACbuZ,EADa,SAyBmB,OAArBA,EAAU96B,QAzEE+Q,OA0E3B6I,EAzEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAwEzCyhB,EAAW,CAAC,aAKRh2B,GAAIo+B,EAAS,KAAW,GACxBrgC,IAAKqgC,EAAS,KAAW,GACzB9gC,KAAM8gC,EAAS,MAAY,GAC3Bl+B,YAAak+B,EAAS,aAAmB,IACtCA,IATG,oBAWL7H,KAELvoB,EAAQ2a,YACRpD,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GA/CH,iCAhDS,IAACoG,IAgDV,OAAH,wDAkDlBxI,qBAAU,WACR,IAAKqyB,EAAW,UAAe,CAC7B,IAAMpzB,EAAQozB,EAAW,MACzB,GAAIpzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACsV,IAEJ,IAAMrR,EAAe,SAAC7d,GACpBuW,GAAyB,IAqB3B,OACE,kBAAC,IAAD,CACEnX,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,cACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,kBAAC5tB,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,YACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,cACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpBzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,iDACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpBzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgByvB,EAAYpzB,MAAZ,gBAEpBzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgByvB,EAAYpzB,MAAZ,gBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GAAgByvB,EAAYpzB,MAAZ,kBAEpBzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GAAgByvB,EAAYpzB,MAAZ,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GAAgByvB,EAAYpzB,MAAZ,sBAEpBzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GAAgByvB,EAAYpzB,MAAZ,sBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAyvB,EAAYpzB,MAAZ,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAyvB,EAAYpzB,MAAZ,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASA,EACTzgB,KAAMA,IAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,EACTvkB,KAAMskB,KAIV,kBAAC,GAAD,CACE7J,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCvU1BpC,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAEFC,GAAU,SAAC,GAAiC,IAA/BrrB,EAA8B,EAA9BA,KAAMm2B,EAAwB,EAAxBA,WAAYhmB,EAAY,EAAZA,MAAY,EACjB1D,oBAAS,GADQ,mBACxC8Q,EADwC,KAC/BC,EAD+B,OAEW/Q,oBAAS,GAFpB,mBAExC8e,EAFwC,KAEjBC,EAFiB,OAGAnf,EAC7C,GACA,aAL6C,mBAGxB+pB,GAHwB,WAQzC1iB,EAAUC,eAEV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAnDJ+Q,EAoDH,cAnD5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiDnC6hB,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACrDg2B,EAAWI,IAbS,iCAzCM,IAAC/hB,IAyCP,OAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,qBAA2Bya,EAAOnc,KAElCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,cACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAUXyS,GAAS,gBAAiBF,IACzB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,YAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aASb6I,GACC,kBAACiT,GAAD,CACE9H,QAAS12B,EACTm2B,WAAYA,EACZ4H,eAAgBxgB,EAChBygB,kBAAmBxgB,EACnBygB,cAAe1S,MAyHVta,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EA9GC,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACN1D,mBAAS,IADH,mBAC7BiqB,EAD6B,KACpBP,EADoB,OAGG9pB,EAAe,GAAI,WAHtB,mBAG7B4iB,EAH6B,KAGnBC,EAHmB,KAKpCljB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,CACpCrwB,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALR,OACRpR,EADQ,OAUdozB,EAAWpzB,GAVG,2CAAH,qDAYbygB,KACC,IAnBiC,MAqBKnX,EAAe,GAAI,UArBxB,gCAsBsBI,oBAAS,IAtB/B,mBAsB7BgZ,EAtB6B,KAsBNC,EAtBM,KAgDpC,OACE,oCACE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,QAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,gBACZjB,SAAU,SAAC8R,GAAD,OApBD,SAAChS,GACpB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAC9f,GAAD,OACtCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCke,EAAWS,IAecjK,CAAaxd,EAAE/F,OAAOjM,WAI1CkT,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YAUJ,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASyR,MAAOA,EAAOgmB,WAAYA,EAAYn2B,KAAM02B,IAEtDzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,gBACZO,MAAOwS,KAAMI,4BAOvB,kBAACirB,GAAD,CACE/H,QAASA,EACTP,WAAYA,EACZ1Q,sBAAuBA,EACvBC,yBAA0BA,QCjT5BlY,GAAmBC,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWNikB,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAkXCwY,GAxWG,SAAC,GAKL,IAJZC,EAIW,EAJXA,eACAC,EAGW,EAHXA,kBACAC,EAEW,EAFXA,cACAS,EACW,EADXA,iBACW,EACyCryB,EAClD,GACA,aAHS,mBACJ6xB,EADI,KACYC,EADZ,OAKa1xB,mBAAS,IALtB,mBAKJ1J,EALI,KAKEygB,EALF,OAMiB/W,mBAAS,IAN1B,mBAMJ4a,EANI,KAMIC,EANJ,KAQLrZ,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACQiyB,EAA0B,CACnDt/B,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,YACpB4kB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,EAAKrD,KAAK,KAEpB+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,EAAO3nB,KAAK,KACtBjC,KAAMyQ,EAAO6W,OACb1kB,YAAa6N,EAAO8W,kBAnBP,QACboZ,EADa,SAyByB,OAAxBA,EAAa36B,QAC/Bi7B,EAAiB,CACfv+B,GAAI+N,EAAO/N,GACXjC,IAAKgQ,EAAO/N,GACZ1C,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,cAEtBlB,QAAQC,IAAI,uBAAwBg/B,GAjFT5pB,OAkF3B6I,EAjFJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BA+EzCspB,GAAkB,IAYlBpc,KAGFzT,EAAQC,eAAc,GAjDH,iCAjDS,IAACoG,IAiDV,OAAH,wDAoDlBxI,qBAAU,WACR,IAAKkyB,EAAc,UAAe,CAChC,IAAMjzB,EAAQizB,EAAc,MAC5B,GAAIjzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACmV,IAEJ,IAAMlR,EAAe,SAAC7d,GACpB6uB,GAAkB,IA2BpB,OAFA7+B,QAAQC,IAAI,gBAAiB6+B,GAG3B,kBAAC,IAAD,CACE1vB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERowB,EAFQ,GAGPA,GACFz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAAK,CACvCwmB,YACE+Y,EAAa,IACbA,EAAa,GAAOhZ,WACpBgZ,EAAa,GAAOhZ,UACtBG,kBACE6Y,EAAa,IACbA,EAAa,GAAO9Y,iBACpB8Y,EAAa,GAAO9Y,gBACtBJ,OACEkZ,EAAa,IACbA,EAAa,GAAOxgC,MACpBwgC,EAAa,GAAOxgC,KACtBunB,cACEiZ,EAAa,IACbA,EAAa,GAAO59B,aACpB49B,EAAa,GAAO59B,gBAI3B,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,WACNuc,QAASwgB,EACThc,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,kBAAC5tB,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,YACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgBsvB,EAAejzB,MAAf,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgBsvB,EAAejzB,MAAf,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,cACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgBsvB,EAAejzB,MAAf,kBAEpBzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgBsvB,EAAejzB,MAAf,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,iDACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAsvB,EAAejzB,MAAf,oBAEJzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GACAsvB,EAAejzB,MAAf,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgBsvB,EAAejzB,MAAf,gBAEpBzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GAAgBsvB,EAAejzB,MAAf,gBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GAAgBsvB,EAAejzB,MAAf,kBAEpBzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GAAgBsvB,EAAejzB,MAAf,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsvB,EAAejzB,MAAf,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAsvB,EAAejzB,MAAf,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAsvB,EAAejzB,MAAf,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAsvB,EAAejzB,MAAf,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASA,EACTzgB,KAAMA,IAGR,yBACE3E,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,EACTvkB,KAAMskB,UC1XZ/L,GAAwBC,KAAxBD,OAkRSrK,IAlResK,KAAhBC,YACG0R,IAAX9B,OAiRSna,aALO,SAAA7F,GAAK,MAAK,CAC9B+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EA1QM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EACQ9D,EAAe,GAAI,aAD3B,mBAChCsyB,EADgC,KAChBC,EADgB,OAEYvyB,EAAe,GAAI,eAF/B,mBAEhCwyB,EAFgC,KAEdC,EAFc,OAGKryB,oBAAS,GAHd,mBAGhCsxB,EAHgC,KAGhBC,EAHgB,OAIEvxB,mBAAS,IAJX,mBAIhCwxB,EAJgC,KAIlBS,EAJkB,KAOjC5/B,EAASuuB,eACT3Z,EAAUC,eACViiB,EAAQ92B,EAAM,GAgDpB,OA9CAkN,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS0yB,EAAqB,CAC7C//B,WAAY,CACRE,aAAc,CACVoB,GAAIy1B,MAJG,QACbmJ,EADa,UAWf5/B,QAAQC,IAAI,eAAe2/B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpB5G,KAED,CAACvC,IAEJ5pB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4yB,EAAuB,CACzBjgC,WAAY,CACRE,aAAc,CACVoB,GAAIy1B,MAJG,2CAAH,qDAUpBoJ,KAED,CAACpJ,IAKJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAIvB,yBAAKlB,UAAU,wBACX,yBAAKA,UAAU,iCACX,0CAIC+gC,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,oCACI,kBAACugC,GAAD,CACIlB,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfS,iBAAkBA,IAIxCruB,GAAS,gBAAgBF,IACxB,kBAAC,IAAD,CACef,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHrB,UAaK,kBAAC,KAAD,CACIsC,UAAW,CAAEtR,KAAM,GACnB3N,QAASsvB,EAAerzB,WACvBqzB,EAAepzB,MAAQ0yB,KAAmBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IAC3E,kBAAC,KAAD,CAAO2B,YAAY,eAAeO,MAAOwS,KAAMI,yBAGlDmrB,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,yBAAKd,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKqgC,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,SAW1C,yBAAKrgC,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACVihC,EAAiBvzB,WAAa,kBAACshB,GAAD,MAC9BiS,EAAiBtzB,QAAUszB,EAAiB7+B,KAAKtB,OAAS,IACvD,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,kCAAkCO,MAAOwS,KAAMI,0BAIzEqrB,EAAiBtzB,MAAQszB,EAAiB7+B,MAAQ6+B,EAAiB7+B,KAAKtB,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UAAW,+FAOf6G,KAAK,QAEL8D,WAAY6iB,EAAiB7+B,KAC7Bic,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH/d,MAAO,CACHsW,MAAO,qBAMnB,kBAAC,GAAD,CACI1T,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OAEPxT,UAAU,uBAEVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACJ,oCACI,yBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,MAE1CgJ,IAAK3I,EAAOU,IAAI,YAAY9C,MAAO,CAC/BqT,OAAQ,OACRL,MAAO,OACPmd,UAAW,UACXlwB,aAAc,MACd6W,OAAQ,iBAU5B,kBAAC,GAAD,CACIlU,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACJ,oCACI,wBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,MAE1C/B,MAAO,CACH6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGXlT,OASjB,kBAAC,GAAD,CACIhB,MAAM,cACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,YACNob,UAAU,YACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,UACNob,UAAU,UACVle,IAAI,KACJN,UAAU,iCC5K3BgxB,GA3GF,SAAC,GAGA,IAFVkE,EAES,EAFTA,cACAD,EACS,EADTA,WACS,EACqBpmB,mBAAS,IAD9B,mBACF3C,EADE,KACOklB,EADP,OAEoCviB,mBAAS,IAF7C,mBAEFynB,EAFE,KAEcC,EAFd,OAG8B9nB,EAAe,GAAI,eAHjD,mBAGF4iB,EAHE,KAGQC,EAHR,KAKTljB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACagjB,EAAmB,CACxCrwB,WAAY,CACRC,OAAQ,CACJwtB,eAAe,MAJf,QACNiD,EADM,SAUMA,EAAW7wB,OAAS,IAE5B8wB,EAAaD,EAAWtwB,KAAI,SAACkH,GAC/B,OAAOA,EAAI1I,QAEfuxB,EAAWQ,IAfH,2CAAH,qDAoBbhM,KACD,IAIHxX,qBAAU,WACN,GAAG6mB,GAAcA,EAAWn0B,OAAS,EAAE,CACnCS,QAAQC,IAAI,mBACZ,IAAM8/B,EAAmBrM,EAAW5zB,KAAI,SAAAQ,GAAI,OAAIA,EAAKhC,QACrD02B,EAAmB+K,MAEzB,CAACrM,IAEH1zB,QAAQC,IAAI,8BAA8ByzB,GAiC1C,OACI,oCAEI,kBAAC,KAAD,CAAUxjB,QAAS4f,EAAS3jB,WACvB2jB,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1CqT,KAAK,WACLzT,YAAY,kBACZnB,MAAO+2B,EACP72B,SApCK,SAACg3B,GAKlB,GAJAF,EAAmBE,GAEnBl1B,QAAQC,IAAI,mBAAoBi1B,GAE5BpF,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAK21B,EAAY31B,OAAS,EAAG,CACrE,IAAMqxB,EAAsBsE,EAAYp1B,KAAI,SAACQ,GACzC,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MACnC,SAACrb,GAAD,OAASA,EAAI7G,KAAKwa,gBAAkBxY,EAAKwY,iBAE7C,GAAIqX,EACA,OAAOA,KAGfnwB,QAAQC,IAAI,sBAAuB2wB,GACnC+C,EAAc/C,QAGd+C,EAAc,KAmBN10B,MAAO,CAAEgT,MAAO,SAEftH,EAAQyV,QAAO,SAAA+U,GAAC,OAAKJ,EAAe70B,SAASi1B,MAAIr1B,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAO2W,OAAR,CAAelY,IAAKuB,EAAMtC,MAAOsC,GAC5BA,OAIZwvB,EAAS1jB,MAAQ0jB,EAASjvB,QAAUivB,EAASjvB,KAAKtB,OAAS,IACxD,yBAAKN,MAAO,CACR6W,WAAY,SAEZ,kBAAC,GAAD,CAAOjU,MAAM,mBAAmByQ,OAAQ,UCvDjDqkB,GApCY,SAAC,GAGd,IAFV9D,EAES,EAFTA,eACAF,EACS,EADTA,YAEA,OACI,yBACI1zB,MAAO,CAEH23B,cAAe,QAEnBn4B,UAAU,6CACV,yBAAKA,UAAU,qDACVk0B,GAAeA,EAAYpzB,OAAS,GAAKozB,EAAY7yB,KAAI,SAAAQ,GACtD,OAAO,kBAACu2B,GAAD,CACHhE,eAAgBA,EAChBF,YAAaA,EACb0C,UAAW/0B,EAAKW,IAChBkD,SAAU7D,EAAK6D,SACf7D,KAAMA,EACN2zB,UAAW3zB,EAAK2zB,iBAIrBtB,EAAYpzB,OAAS,IACpB,yBAAKN,MAAO,CACR6W,WAAY,SAEZ,kBAAC,GAAD,CAAOjU,MAAM,mBAAmByQ,OAAQ,UCPxD6E,GAAgBC,KAAhBD,YAEF9I,GAAmBC,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWNikB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACN+H,KAAM,GACNC,aAAc,KACdO,OAAQ,GACRD,WAAY,GACZF,gBAAiB,GACjBI,cAAc,EACdN,aAAc,IAynBDwxB,GA/mBK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAxlB,EAEW,EAFXA,SACAw+B,EACW,EADXA,iBACW,EACyCryB,EAClD,GACA,gBAHS,mBACJ8yB,EADI,KACYC,EADZ,OAK0C/yB,EACnD,GACA,gBAPS,mBAKJgzB,EALI,KAKeC,EALf,OASqB7yB,oBAAS,GAT9B,mBASJkR,EATI,KASMF,EATN,OAU6BhR,oBAAS,GAVtC,mBAUJ+qB,EAVI,KAUUC,EAVV,OAW6BhrB,mBAAS,IAXtC,mBAWJ8a,EAXI,KAWUC,EAXV,OAYyB/a,mBAAS,IAZlC,mBAYJomB,EAZI,KAYQC,EAZR,OAa2BrmB,mBAAS,IAbpC,mBAaJqlB,EAbI,KAaSE,EAbT,OAciCvlB,mBAAS,IAd1C,mBAcJ8yB,EAdI,aAemC9yB,mBAAS,KAf5C,mBAeJ+yB,EAfI,KAeaC,EAfb,OAgBuBhzB,mBAAS,IAhBhC,mBAgBJjI,EAhBI,KAgBOqS,EAhBP,QAiBmBpK,mBAAS,IAjB5B,qBAiBJhI,GAjBI,MAiBKqS,GAjBL,MAmBX9K,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBozB,EAAwB,CAC5BzgC,WAAY,CACVE,aAAc,CACZoB,GAAID,EAASC,OAJI,2CAAH,qDAUtB4nB,KACC,CAAC7nB,IAEJ8L,qBAAU,WACR,GACEqzB,EAAkBr/B,MAClBxB,OAAOC,KAAK4gC,EAAkBr/B,MAAMtB,OAAS,EAC7C,CACA,IAAM6K,EAAS81B,EAAkBr/B,KAAKY,MAClC2I,GAAUA,EAAO7K,OAAS,GAC5B+e,EAAYlU,GAGV81B,EAAkBr/B,KAAKQ,OAAS6+B,EAAkBr/B,KAAKQ,MAAvB,KAElCid,EAAY,CAAC4hB,EAAkBr/B,KAAKQ,QACpCgnB,EAAgB6X,EAAkBr/B,KAAKQ,MAAvB,QAGnB,CAAC6+B,EAAkBr/B,OAEtBgM,qBAAU,WAEJ2R,GAAYA,EAAS,IAAMA,EAASjf,OAAS,GAC3C6oB,IAAiB5J,EAAS,GAAGxd,IAC/BqnB,EAAgB7J,EAAS,GAAGxd,MAG/B,CAACwd,IAEJ,IAAM1P,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAjC,EAAA,6DAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GAEE0F,EACJisB,EAAYpzB,OAAS,EACjBozB,EAAY7yB,KAAI,SAACoD,GACf,MAAO,CACLjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAGtB,GAjBa,SA2BK87B,EAA0B,CAChDvgC,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClB/iB,KAAM0I,EAAO1I,KACbC,aAAcyI,EAAOzI,aACrBO,OAAQkI,EAAOlI,OACfD,WAAYmI,EAAOnI,WAEnBF,gBAAiBA,EAEjBrF,MAAO+mB,GAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD9jB,YACAC,cA5Ce,QA2Bb85B,EA3Ba,SAiDmB,OAArBA,EAAU96B,QApJE+Q,OAqJ3B6I,EApJJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAkJzCgR,GAAyB,GAEzBgZ,EAAiB,eACZx+B,EADW,GAGXq+B,KAKL3c,KAGFzT,EAAQC,eAAc,GAhEH,iCAnGS,IAACoG,IAmGV,OAAH,wDAmEZwY,GAAe,SAAC7d,GACpBuW,GAAyB,IAGrBrX,GAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAOzQ,OAAS6Q,GAMvBtC,qBAAU,WACR,GAAI9L,GAAY1B,OAAOC,KAAKyB,GAAUxB,OAAS,EAAG,CAChD,IAAM6K,EAASrJ,EAASU,MACpB2I,GAAUA,EAAO7K,OAAS,GAC5B+e,EAAYlU,GAGVrJ,EAASM,OAASN,EAASM,MAAT,KAEpBid,EAAY,CAACvd,EAASM,QACtBgnB,EAAgBtnB,EAASM,MAAT,QAGnB,CAACN,IAEJ8L,qBAAU,WACR,IAAKmzB,EAAc,UAAe,CAChC,IAAMl0B,EAAQk0B,EAAc,MAC5B,GAAIl0B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACoW,IAEJnzB,qBAAU,WACR,GACEqzB,EAAkB9zB,MAClB8zB,EAAiB,MACjB7gC,OAAOC,KAAK4gC,EAAiB,MAAU3gC,OAAS,GAGhD2gC,EAAiB,KAAjB,gBAA6C3gC,OAAS,EACtD,CACA,IAAMm0B,EAAawM,EAAiB,KAAjB,gBAA6CpgC,KAC9D,SAACQ,GAAD,OAAUA,KAEZqzB,EAAcD,GACd,IAAMf,EAAcuN,EAAiB,KAAjB,gBAA6CpgC,KAC/D,SAACQ,GACC,OAAO,eACFA,EADL,CAEEW,IAAKX,EAAKW,IACVgzB,UAAW3zB,EAAK2zB,UAChB9vB,SAAU7D,EAAK6D,cAIrB0uB,EAAeF,MAEhB,CAACuN,IAEJlgC,QAAQC,IAAI,wBAAyBigC,GAErCrzB,qBAAU,WACR,GAAI6mB,EAAWn0B,OAAS,GACtB,GAAIm0B,EAAWn0B,OAASozB,EAAYpzB,OAAQ,CAC1C,IAAM00B,EACJP,EAAWA,EAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GACtDm0B,EAAWA,EAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IACFS,QAAQC,IAAI,YAAag0B,GAEzBpB,EAAe,GAAD,oBACTF,GADS,gBAGPe,EAAWA,EAAWn0B,OAAS,GAHxB,CAIV0B,IAAKyyB,EAAWA,EAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIuvB,EAAWn0B,OAASozB,EAAYpzB,OAAQ,CACjDS,QAAQC,IAAI,aAAcyzB,GAC1B1zB,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB5B,EAAYvS,QAAO,SAAC9f,GACzC,IAAIk0B,GAAS,EAMb,OALAd,EAAWnxB,SAAQ,SAACW,GACdA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET3B,EAAe0B,SAGjB1B,EAAe,MAGhB,CAACa,IAEJ7mB,qBAAU,WACR,GAAIuzB,EAAe7gC,OAAS,GAC1B,GAAI6gC,EAAe7gC,OAAS8gC,EAAgB9gC,OAAQ,CAClD,IAAM00B,EACJmM,EAAeA,EAAe7gC,OAAS,GAAvC,QAAqDA,OAAS,GAC9D6gC,EAAeA,EAAe7gC,OAAS,GAAvC,QAAqD,GAArD,IACFS,QAAQC,IAAI,YAAag0B,GAEzBqM,EAAmB,GAAD,oBACbD,GADa,gBAGXD,EAAeA,EAAe7gC,OAAS,GAH5B,CAId0B,IAAKm/B,EAAeA,EAAe7gC,OAAS,GAAvC,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIi8B,EAAe7gC,OAAS8gC,EAAgB9gC,OAAQ,CACzDS,QAAQC,IAAI,iBAAkBmgC,GAC9BpgC,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB8L,EAAgBjgB,QAAO,SAAC9f,GAC7C,IAAIk0B,GAAS,EAMb,OALA4L,EAAe79B,SAAQ,SAACW,GAClBA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET8L,EAAmB/L,SAGrB+L,EAAmB,MAGpB,CAACF,IAaJvzB,qBAAU,WACR,GAAI9L,GAAY1B,OAAOC,KAAKyB,GAAUxB,OAAS,EAAG,CAChDS,QAAQC,IAAI,QAEZ,IAAIoF,EAAYtE,EAASsE,UACrBC,EAAUvE,EAASuE,QAEvBD,EAAYA,GAAa,IAAIgT,KAAK3B,IAAOrR,GAAW4F,UACpD3F,EAAUA,GAAW,IAAI+S,KAAK3B,IAAOpR,GAAS2F,UAE9CjL,QAAQC,IAAI,oBAAqBoF,GACjCrF,QAAQC,IAAI,oBAAqBqF,GAGjCoS,EAAarS,GAEbsS,GAAWrS,MAEZ,CAACvE,IAEJ,IAAMw/B,GAA8B,SAACvwB,GACnC,IAAM3K,EAAY2K,EAAE,IAAM,IAAIqI,KAAK3B,IAAO1G,EAAE,IAAI/E,UAC1C3F,EAAU0K,EAAE,IAAM,IAAIqI,KAAK3B,IAAO1G,EAAE,IAAI/E,UAE9CyM,EAAarS,GAEbsS,GAAWrS,IAKb,OACE,kBAAC,IAAD,CACE8J,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyB3N,KAErC,gBACCwO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEoC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,cACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,GAA0BH,EAAQI,KAG9C,yBAAK1Q,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBuwB,EAAel0B,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBuwB,EAAel0B,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAO1I,KACd/H,KAAK,OACLF,QACGsR,EAAQrJ,MAAQmJ,EAAOnJ,OACtBoJ,GAAgBuwB,EAAel0B,MAAf,WAEpBzN,YACGqR,EAAQrJ,MAAQmJ,EAAOnJ,OACtBoJ,GAAgBuwB,EAAel0B,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAMxB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOzI,aACdhI,KAAK,eACLF,QACGsR,EAAQpJ,cAAgBkJ,EAAOlJ,eAC9BmJ,GAAgBuwB,EAAel0B,MAAf,mBAEpBzN,YACGqR,EAAQpJ,cAAgBkJ,EAAOlJ,eAC9BmJ,GAAgBuwB,EAAel0B,MAAf,mBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAIpB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOlI,OACdvI,KAAK,SACLF,QACGsR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgBuwB,EAAel0B,MAAf,aAEpBzN,YACGqR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgBuwB,EAAel0B,MAAf,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,uBACNE,MAAO+Q,EAAOnI,WACdtI,KAAK,aACLF,QACGsR,EAAQ9I,YAAc4I,EAAO5I,aAC5B6I,GACAuwB,EAAel0B,MAAf,iBAEJzN,YACGqR,EAAQ9I,YAAc4I,EAAO5I,aAC5B6I,GACAuwB,EAAel0B,MAAf,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAOtB,yBACE1Q,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,sBACA,kBAAC,GAAD,CACEQ,MAAO,CACLC,aAAc,MACdoxB,YAAa,OACbre,MAAO,QAETjU,MAAO,CACL0Y,IAAOrR,EA3JN,cA2J6B8J,UAC1BuH,IAAOrR,EA5JV,mBA6JGm7B,EACJ9pB,IAAOpR,GA9JN,cA8J2B6J,UACxBuH,IAAOpR,GA/JV,mBAgKGk7B,GAENvmB,UAAU,EACV/b,SAAUqiC,GACVrmB,OAAQ,UAKd,yBACEzb,UAAU,gCACVQ,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,UAGF,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPqoB,GAAgB,KAGlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBA3OJ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAmOuBC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAmBRxM,KAEDA,GAAcA,GAAYA,EAASjf,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASsC,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAEV,kBAACwsB,GAAA,EAAD,MACA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,WAUZ,wBAAIhnB,UAAU,mBAAd,oBAEA,kBAACgiC,GAAD,CACE9M,cAAeA,EACfD,WAAYA,IAGd,yBACEz0B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,6BAEA,kBAACiiC,GAAD,CACE/N,YAAaA,EACbE,eAAgBA,KA0BpB,kBAAC,GAAD,CACExU,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCxcnBqZ,IAhNiBxb,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OAOe,SAAC3X,GAAkB,IAAD,EACUpH,EAAe,GAAI,gBAD7B,mBAC9BsyB,EAD8B,KACdC,EADc,OAEcvyB,EAAe,GAAI,eAFjC,mBAE9BwyB,EAF8B,aAGOpyB,oBAAS,IAHhB,mBAG9BsxB,EAH8B,KAGdC,EAHc,OAIIvxB,mBAAS,IAJb,mBAI9BwxB,EAJ8B,KAIhBS,EAJgB,KAM/B5/B,EAASuuB,eAETuI,GADUjiB,eACF7U,EAAM,IAkCpB,OAhCAkN,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACD0yB,EAAqB,CACnC//B,WAAY,CACRE,aAAc,CACVoB,GAAIy1B,MAJG,QACb7qB,EADa,SAYf2zB,EAAiB3zB,GAZF,2CAAH,qDAgBpBotB,KAED,CAACvC,IAOJz2B,QAAQC,IAAI,eAAgBu/B,GAE5Bx/B,QAAQC,IAAI,cAAeN,GAIvB,yBAAKlB,UAAU,wBACX,yBAAKA,UAAU,iCACX,6CAIC+gC,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,oCACI,kBAACohC,GAAD,CACIra,sBAAuBsY,EACvBrY,yBAA0BsY,EAC1B99B,SAAU+9B,EACVS,iBAAkBA,IAEtB,kBAAC,IAAD,CACItvB,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACIsC,UAAW,CAAEtR,KAAM,GACnB3N,QAASsvB,EAAerzB,WACvBqzB,EAAepzB,MAAQ0yB,KAAmBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IAC3E,kBAAC,KAAD,CAAO2B,YAAY,kBAAkBO,MAAOwS,KAAMI,yBAGrDmrB,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,yBAAKd,UAAU,gCACX,yBAAKA,UAAU,+CACX,yBAAKuL,IAAK80B,EAAa,OAAaA,EAAa,MAAb,MAAiC/8B,IAAI,MAE7E,yBAAKtD,UAAU,qCACX,4BACKqgC,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,MACV,oCAEI,8BACKA,EAAa,OAOzBA,EAAa,QACV,qCAEI,8BACKA,EAAa,SAOzBA,EAAa,WACV,0CAEI,8BACCpoB,IAAOooB,EAAa,WAAe7zB,OAAO,6BAQlD6zB,EAAa,SACV,wCAEI,8BACCpoB,IAAOooB,EAAa,SAAa7zB,OAAO,gCAWjE,yBAAKxM,UAAU,iCACX,iDAIJ,yBAAKA,UAAU,8BACVihC,EAAiBvzB,WAAa,kBAACshB,GAAD,MAC9B+R,EAAepzB,MAAQ0yB,GAAiBA,EAAa,mBAAyBA,EAAa,gBAAoBv/B,OAAS,IACrH,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,qCAAqCO,MAAOwS,KAAMI,0BAK5EmrB,EAAepzB,MAAQ0yB,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GACzE,oCACKu/B,EAAa,iBAAuBA,EAAa,gBAAoBv/B,OAAS,GAC3Eu/B,EAAa,gBAAoBh/B,KAAI,SAAAoD,GACjC,OACI,kBAAC,GAAD,CAAgBmyB,UAAWnyB,EAAO,cC/J9DiU,GAAgBC,KAAhBD,YAEF9I,GAAmBC,MAAaC,MAAM,IAYtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACN+H,KAAM,GACNC,aAAc,KACdO,OAAQ,GACRD,WAAY,GACZF,gBAAiB,GACjBI,cAAc,EACdN,aAAc,IAyqBDwxB,GA9pBK,SAAC,GAMP,IALZ1R,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACAgR,EAGW,EAHXA,QACAP,EAEW,EAFXA,WACAj2B,EACW,EADXA,SACW,EACyCmM,EAClD,GACA,gBAHS,mBACJ8yB,EADI,KACYC,EADZ,OAK0C/yB,EACnD,GACA,gBAPS,mBAKJgzB,EALI,KAKeC,EALf,OASqB7yB,oBAAS,GAT9B,mBASJkR,EATI,KASMF,EATN,OAU6BhR,oBAAS,GAVtC,mBAUJ+qB,EAVI,KAUUC,EAVV,OAW6BhrB,mBAAS,IAXtC,mBAWJ8a,EAXI,KAWUC,EAXV,OAYyB/a,mBAAS,IAZlC,mBAYJomB,EAZI,KAYQC,EAZR,OAa2BrmB,mBAAS,IAbpC,mBAaJqlB,EAbI,KAaSE,EAbT,OAciCvlB,mBAAS,IAd1C,mBAcJ8yB,EAdI,aAemC9yB,mBAAS,KAf5C,mBAeJ+yB,EAfI,KAeaC,EAfb,OAgBuBhzB,mBAAS,IAhBhC,mBAgBJjI,EAhBI,KAgBOqS,GAhBP,QAiBmBpK,mBAAS,IAjB5B,qBAiBJhI,GAjBI,MAiBKqS,GAjBL,MAmBX9K,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBozB,EAAwB,CAC5BzgC,WAAY,CACVE,aAAc,CACZoB,GAAID,EAASC,OAJI,2CAAH,qDAUtB4nB,KACC,CAAC7nB,IAEJ8L,qBAAU,WACR,GACEqzB,EAAkBr/B,MAClBxB,OAAOC,KAAK4gC,EAAkBr/B,MAAMtB,OAAS,EAC7C,CACA,IAAM6K,EAAS81B,EAAkBr/B,KAAKY,MAClC2I,GAAUA,EAAO7K,OAAS,GAC5B+e,EAAYlU,GAGV81B,EAAkBr/B,KAAKQ,OAAS6+B,EAAkBr/B,KAAKQ,MAAvB,KAElCid,EAAY,CAAC4hB,EAAkBr/B,KAAKQ,QACpCgnB,EAAgB6X,EAAkBr/B,KAAKQ,MAAvB,QAGnB,CAAC6+B,EAAkBr/B,OAEtBgM,qBAAU,WAEJ2R,GAAYA,EAAS,IAAMA,EAASjf,OAAS,GAC3C6oB,IAAiB5J,EAAS,GAAGxd,IAC/BqnB,EAAgB7J,EAAS,GAAGxd,MAG/B,CAACwd,IAEJ,IAAM1P,GAAY,uCAAG,WAAOC,EAAaC,GAApB,YA2DRwa,EA3DQ,aAAAzc,EAAA,6DAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GAEE0F,EACJisB,EAAYpzB,OAAS,EACjBozB,EAAY7yB,KAAI,SAACoD,GACf,MAAO,CACLjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAGtB,GAjBa,SA2BK87B,EAA0B,CAChDvgC,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClB/iB,KAAM0I,EAAO1I,KACbC,aAAcyI,EAAOzI,aACrBO,OAAQkI,EAAOlI,OACfD,WAAYmI,EAAOnI,WAEnBF,gBAAiBA,EAEjBrF,MAAO+mB,GAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD9jB,YACAC,cA5Ce,QA2Bb85B,EA3Ba,SAiDmB,OAArBA,EAAU96B,QAUhBklB,EAViC,SAUxBxoB,GAChB,KAAKA,GAAOwd,GAAaA,EAAS,IAChC,MAAO,GAEP,GAAIA,GAAYA,EAASjf,OAAS,EAAG,CACnC,IAAMe,EAAOke,EAASgC,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACjD,GAAIV,EACF,OAAOA,EAAKe,QAvKOgU,OAuJ3B6I,EAtJJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAoJzCgR,GAAyB,GAMnB/P,EAJgB,WACpB,OAAO+gB,EAAQz3B,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQqO,EAAO/N,IAGzCyoB,GAgBRnH,EAAcjjB,OAAOkjB,OAAO,GAAIgV,EAAQ/gB,GAA1BnX,OAAA,IAAAA,CAAA,GACf+/B,EADe,CAElB/9B,MAAOmoB,EAASpB,MAEZsB,EA5BoC,uBA6BrC6N,EAAQ92B,MAAM,EAAG+V,IA7BoB,CA8BxC8L,GA9BwC,aA+BrCiV,EAAQ92B,MAAM+V,EAAQ,KAE3BwgB,EAAWtN,GAEXmJ,EAAe,IACfc,EAAc,IACdjc,GAAa,IACbC,GAAW,IACX2G,GAAY,GACZ+J,EAAgB,IAChBiQ,GAAgB,GAChBtpB,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GAhGH,iCArGS,IAACoG,IAqGV,OAAH,wDAmGlBrV,QAAQC,IAAI,UAAWue,GACvBxe,QAAQC,IAAI,UAAWmoB,GACvB,IAAMyF,GAAe,SAAC7d,GACpBuW,GAAyB,GAEzBsM,EAAe,IACfc,EAAc,IACdjc,GAAa,IACbC,GAAW,IACX2G,GAAY,GACZ+J,EAAgB,IAChBiQ,GAAgB,IAUlBzrB,qBAAU,WACR,GAAI9L,GAAY1B,OAAOC,KAAKyB,GAAUxB,OAAS,EAAG,CAChD,IAAM6K,EAASrJ,EAASU,MACpB2I,GAAUA,EAAO7K,OAAS,GAC5B+e,EAAYlU,GAGVrJ,EAASM,OAASN,EAASM,MAAT,KAEpBid,EAAY,CAACvd,EAASM,QACtBgnB,EAAgBtnB,EAASM,MAAT,QAGnB,CAACN,IAEJ8L,qBAAU,WACR,GAAI9L,GAAY1B,OAAOC,KAAKyB,GAAUxB,OAAS,EAAG,CAChDS,QAAQC,IAAI,QAEZ,IAAIoF,EAAYtE,EAASsE,UACrBC,EAAUvE,EAASuE,QAEvBD,EAAYA,GAAa,IAAIgT,KAAK3B,IAAOrR,GAAW4F,UACpD3F,EAAUA,GAAW,IAAI+S,KAAK3B,IAAOpR,GAAS2F,UAE9CjL,QAAQC,IAAI,oBAAqBoF,GACjCrF,QAAQC,IAAI,oBAAqBqF,GAGjCoS,GAAarS,GAEbsS,GAAWrS,MAEZ,CAACvE,IAEJ,IAAMw/B,GAA8B,SAACvwB,GACnC,IAAM3K,EAAY2K,EAAE,IAAM,IAAIqI,KAAK3B,IAAO1G,EAAE,IAAI/E,UAC1C3F,EAAU0K,EAAE,IAAM,IAAIqI,KAAK3B,IAAO1G,EAAE,IAAI/E,UAE9CyM,GAAarS,GAEbsS,GAAWrS,IAGbuH,qBAAU,WACR,IAAKmzB,EAAc,UAAe,CAChC,IAAMl0B,EAAQk0B,EAAc,MAC5B,GAAIl0B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACoW,IAEJnzB,qBAAU,WACR,GACEqzB,EAAkB9zB,MAClB8zB,EAAiB,MACjB7gC,OAAOC,KAAK4gC,EAAiB,MAAU3gC,OAAS,GAGhD2gC,EAAiB,KAAjB,gBAA6C3gC,OAAS,EACtD,CACA,IAAMm0B,EAAawM,EAAiB,KAAjB,gBAA6CpgC,KAC9D,SAACQ,GAAD,OAAUA,KAEZqzB,EAAcD,GACd,IAAMf,EAAcuN,EAAiB,KAAjB,gBAA6CpgC,KAC/D,SAACQ,GACC,OAAO,eACFA,EADL,CAEEW,IAAKX,EAAKW,IACVgzB,UAAW3zB,EAAK2zB,UAChB9vB,SAAU7D,EAAK6D,cAIrB0uB,EAAeF,MAEhB,CAACuN,IAEJlgC,QAAQC,IAAI,wBAAyBigC,GAErCrzB,qBAAU,WACR,GAAI6mB,EAAWn0B,OAAS,GACtB,GAAIm0B,EAAWn0B,OAASozB,EAAYpzB,OAAQ,CAC1C,IAAM00B,EACJP,EAAWA,EAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GACtDm0B,EAAWA,EAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IACFS,QAAQC,IAAI,YAAag0B,GAEzBpB,EAAe,GAAD,oBACTF,GADS,gBAGPe,EAAWA,EAAWn0B,OAAS,GAHxB,CAIV0B,IAAKyyB,EAAWA,EAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIuvB,EAAWn0B,OAASozB,EAAYpzB,OAAQ,CACjDS,QAAQC,IAAI,aAAcyzB,GAC1B1zB,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB5B,EAAYvS,QAAO,SAAC9f,GACzC,IAAIk0B,GAAS,EAMb,OALAd,EAAWnxB,SAAQ,SAACW,GACdA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET3B,EAAe0B,SAGjB1B,EAAe,MAGhB,CAACa,IAEJ1zB,QAAQC,IAAI,cAAeoF,GAC3BrF,QAAQC,IAAI,YAAaqF,IAEzBuH,qBAAU,WACR,GAAIuzB,EAAe7gC,OAAS,GAC1B,GAAI6gC,EAAe7gC,OAAS8gC,EAAgB9gC,OAAQ,CAClD,IAAM00B,EACJmM,EAAeA,EAAe7gC,OAAS,GAAvC,QAAqDA,OAAS,GAC9D6gC,EAAeA,EAAe7gC,OAAS,GAAvC,QAAqD,GAArD,IACFS,QAAQC,IAAI,YAAag0B,GAEzBqM,EAAmB,GAAD,oBACbD,GADa,gBAGXD,EAAeA,EAAe7gC,OAAS,GAH5B,CAId0B,IAAKm/B,EAAeA,EAAe7gC,OAAS,GAAvC,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIi8B,EAAe7gC,OAAS8gC,EAAgB9gC,OAAQ,CACzDS,QAAQC,IAAI,iBAAkBmgC,GAC9BpgC,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB8L,EAAgBjgB,QAAO,SAAC9f,GAC7C,IAAIk0B,GAAS,EAMb,OALA4L,EAAe79B,SAAQ,SAACW,GAClBA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET8L,EAAmB/L,SAGrB+L,EAAmB,MAGpB,CAACF,IAeJ,OACE,kBAAC,IAAD,CACEhxB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyB3N,KAErC,gBACCwO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEoC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,cACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GAEV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,yBAAK7sB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBuwB,EAAel0B,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBuwB,EAAel0B,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAO1I,KACd/H,KAAK,OACLF,QACGsR,EAAQrJ,MAAQmJ,EAAOnJ,OACtBoJ,GAAgBuwB,EAAel0B,MAAf,WAEpBzN,YACGqR,EAAQrJ,MAAQmJ,EAAOnJ,OACtBoJ,GAAgBuwB,EAAel0B,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAMxB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOzI,aACdhI,KAAK,eACLF,QACGsR,EAAQpJ,cAAgBkJ,EAAOlJ,eAC9BmJ,GAAgBuwB,EAAel0B,MAAf,mBAEpBzN,YACGqR,EAAQpJ,cAAgBkJ,EAAOlJ,eAC9BmJ,GAAgBuwB,EAAel0B,MAAf,mBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAIpB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOlI,OACdvI,KAAK,SACLF,QACGsR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgBuwB,EAAel0B,MAAf,aAEpBzN,YACGqR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgBuwB,EAAel0B,MAAf,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,uBACNE,MAAO+Q,EAAOnI,WACdtI,KAAK,aACLF,QACGsR,EAAQ9I,YAAc4I,EAAO5I,aAC5B6I,GACAuwB,EAAel0B,MAAf,iBAEJzN,YACGqR,EAAQ9I,YAAc4I,EAAO5I,aAC5B6I,GACAuwB,EAAel0B,MAAf,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAOtB,yBACE1Q,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,sBACA,kBAAC,GAAD,CACEQ,MAAO,CACLC,aAAc,MACdoxB,YAAa,OACbre,MAAO,QAETjU,MAAO,CACL0Y,IAAOrR,EA5JN,cA4J6B8J,UAC1BuH,IAAOrR,EA7JV,mBA8JGm7B,EACJ9pB,IAAOpR,GA/JN,cA+J2B6J,UACxBuH,IAAOpR,GAhKV,mBAiKGk7B,GAENvmB,UAAU,EACV/b,SAAUqiC,GACVrmB,OAAQ,UAKd,yBACEzb,UAAU,gCACVQ,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,UAGF,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPqoB,GAAgB,KAGlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBA/MJ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAuMuBC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAmBRxM,KAEDA,GAAcA,GAAYA,EAASjf,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASsC,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAEV,kBAACwsB,GAAA,EAAD,MACA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,WAUZ,wBAAIhnB,UAAU,mBAAd,oBAEA,kBAACgiC,GAAD,CACE9M,cAAeA,EACfD,WAAYA,IAGd,yBACEz0B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,6BAEA,kBAACiiC,GAAD,CACE/N,YAAaA,EACbE,eAAgBA,KA0BpB,kBAAC,GAAD,CACExU,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC/rB1BpH,GAAgBC,KAAhBD,YAEF9I,GAAmBC,MAAaC,MAAM,IAetCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBpQ,KAAM,GACN+H,KAAM,GACNC,aAAc,KACdO,OAAQ,GACRD,WAAY,GACZF,gBAAiB,GACjBI,cAAc,EACdN,aAAc,IAqgBDwxB,GA3fK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAgR,EAEW,EAFXA,QACAP,EACW,EADXA,WACW,EACyC9pB,EAClD,GACA,aAHS,mBACJ8yB,EADI,KACYC,EADZ,OAKqB3yB,oBAAS,GAL9B,mBAKJkR,EALI,KAKMF,EALN,OAM6BhR,oBAAS,GANtC,mBAMJ+qB,EANI,KAMUC,EANV,OAO6BhrB,mBAAS,IAPtC,mBAOJ8a,EAPI,aAQyB9a,mBAAS,KARlC,mBAQJomB,EARI,KAQQC,EARR,OAS2BrmB,mBAAS,IATpC,mBASJqlB,EATI,KASSE,EATT,OAUiCvlB,mBAAS,IAV1C,mBAUJ8yB,EAVI,aAWmC9yB,mBAAS,KAX5C,mBAWJ+yB,EAXI,KAWaC,EAXb,OAYuBhzB,mBAAS,IAZhC,mBAYJjI,EAZI,KAYOqS,EAZP,OAamBpK,mBAAS,IAb5B,mBAaJhI,EAbI,KAaKqS,EAbL,KAeL7I,EAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAjC,EAAA,6DAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GAEE0F,EACJisB,EAAYpzB,OAAS,EACjBozB,EAAY7yB,KAAI,SAACoD,GACf,MAAO,CACLjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAGtB,GAjBa,SA2BK87B,EAA0B,CAChDvgC,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClB/iB,KAAM0I,EAAO1I,KACbC,aAAcyI,EAAOzI,aACrBO,OAAQkI,EAAOlI,OACfD,WAAYmI,EAAOnI,WAEnBF,gBAAiBA,EAEjBrF,MAAO+mB,GAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD9jB,YACAC,aA5Ce,QA2Bb85B,EA3Ba,SAiDmB,OAArBA,EAAU96B,QAvGE+Q,OAwG3B6I,EAvGJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqGzCgR,GAAyB,GAEzByQ,EAAW,CAAC,eAGLoI,EAHG,CAINp+B,GAAIo+B,EAAS,KAAW,GACxBrgC,IAAKqgC,EAAS,KAAW,GACzB9gC,KAAM8gC,EAAS,MAAY,MANrB,oBAQL7H,KAGLvoB,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GArEH,iCAtDS,IAACoG,IAsDV,OAAH,wDAwEZwY,GAAe,SAAC7d,GACpBuW,GAAyB,IAU3B1Z,qBAAU,WACR,IAAKmzB,EAAc,UAAe,CAChC,IAAMl0B,EAAQk0B,EAAc,MAC5B,GAAIl0B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACoW,IAEJnzB,qBAAU,WACR,GAAI6mB,EAAWn0B,OAAS,GACtB,GAAIm0B,EAAWn0B,OAASozB,EAAYpzB,OAAQ,CAC1C,IAAM00B,EACJP,EAAWA,EAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GACtDm0B,EAAWA,EAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IACFS,QAAQC,IAAI,YAAag0B,GAEzBpB,EAAe,GAAD,oBACTF,GADS,gBAGPe,EAAWA,EAAWn0B,OAAS,GAHxB,CAIV0B,IAAKyyB,EAAWA,EAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIuvB,EAAWn0B,OAASozB,EAAYpzB,OAAQ,CACjDS,QAAQC,IAAI,aAAcyzB,GAC1B1zB,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB5B,EAAYvS,QAAO,SAAC9f,GACzC,IAAIk0B,GAAS,EAMb,OALAd,EAAWnxB,SAAQ,SAACW,GACdA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET3B,EAAe0B,SAGjB1B,EAAe,MAGhB,CAACa,IAEJ7mB,qBAAU,WACR,GAAIuzB,EAAe7gC,OAAS,GAC1B,GAAI6gC,EAAe7gC,OAAS8gC,EAAgB9gC,OAAQ,CAClD,IAAM00B,EACJmM,EAAeA,EAAe7gC,OAAS,GAAvC,QAAqDA,OAAS,GAC9D6gC,EAAeA,EAAe7gC,OAAS,GAAvC,QAAqD,GAArD,IACFS,QAAQC,IAAI,YAAag0B,GAEzBqM,EAAmB,GAAD,oBACbD,GADa,gBAGXD,EAAeA,EAAe7gC,OAAS,GAH5B,CAId0B,IAAKm/B,EAAeA,EAAe7gC,OAAS,GAAvC,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIi8B,EAAe7gC,OAAS8gC,EAAgB9gC,OAAQ,CACzDS,QAAQC,IAAI,iBAAkBmgC,GAC9BpgC,QAAQC,IAAI,cAAe0yB,GAE3B,IAAM4B,EAAiB8L,EAAgBjgB,QAAO,SAAC9f,GAC7C,IAAIk0B,GAAS,EAMb,OALA4L,EAAe79B,SAAQ,SAACW,GAClBA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET8L,EAAmB/L,SAGrB+L,EAAmB,MAGpB,CAACF,IAEJ,IAWMG,GAA8B,SAACvwB,GACnC,IAAM3K,EAAY,IAAIgT,KAAK3B,IAAO1G,EAAE,IAAI/E,UAClC3F,EAAU,IAAI+S,KAAK3B,IAAO1G,EAAE,IAAI/E,UAEtCyM,EAAarS,GAEbsS,EAAWrS,IAGb,OACE,kBAAC,IAAD,CACE8J,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEoC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,iBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,yBAAK7sB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBuwB,EAAel0B,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBuwB,EAAel0B,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAO1I,KACd/H,KAAK,OACLF,QACGsR,EAAQrJ,MAAQmJ,EAAOnJ,OACtBoJ,GAAgBuwB,EAAel0B,MAAf,WAEpBzN,YACGqR,EAAQrJ,MAAQmJ,EAAOnJ,OACtBoJ,GAAgBuwB,EAAel0B,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAMxB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOzI,aACdhI,KAAK,eACLF,QACGsR,EAAQpJ,cAAgBkJ,EAAOlJ,eAC9BmJ,GAAgBuwB,EAAel0B,MAAf,mBAEpBzN,YACGqR,EAAQpJ,cAAgBkJ,EAAOlJ,eAC9BmJ,GAAgBuwB,EAAel0B,MAAf,mBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAIpB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOlI,OACdvI,KAAK,SACLF,QACGsR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgBuwB,EAAel0B,MAAf,aAEpBzN,YACGqR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgBuwB,EAAel0B,MAAf,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,uBACNE,MAAO+Q,EAAOnI,WACdtI,KAAK,aACLF,QACGsR,EAAQ9I,YAAc4I,EAAO5I,aAC5B6I,GACAuwB,EAAel0B,MAAf,iBAEJzN,YACGqR,EAAQ9I,YAAc4I,EAAO5I,aAC5B6I,GACAuwB,EAAel0B,MAAf,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBACE1Q,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,sBACA,kBAAC,GAAD,CACEQ,MAAO,CACLC,aAAc,MACdoxB,YAAa,OACbre,MAAO,QAETgI,UAAU,EACV/b,SAAUqiC,GACVrmB,OAAQ,UAIZ,yBACEzb,UAAU,gCACVQ,MAAO,CACLgc,aAAc,SAGhB,wBAAIxc,UAAU,mBAAd,UAGF,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPqoB,GAAgB,KAGlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBA3MJ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAmMuBC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAmBRxM,KAEDA,GAAcA,GAAYA,EAASjf,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASsC,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAEV,kBAACwsB,GAAA,EAAD,MACA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,WAUZ,wBAAIhnB,UAAU,mBAAd,oBAEA,kBAACgiC,GAAD,CACE9M,cAAeA,EACfD,WAAYA,IAGd,yBACEz0B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,6BAEA,kBAACiiC,GAAD,CACE/N,YAAaA,EACbE,eAAgBA,KA0BpB,kBAAC,GAAD,CACExU,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCrf1BpC,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAEFC,GAAU,SAAC,GAA0B,IAAxBrrB,EAAuB,EAAvBA,KAAMm2B,EAAiB,EAAjBA,WAAiB,EACV1pB,oBAAS,GADC,mBACjC8Q,EADiC,KACxBC,EADwB,OAEkB/Q,oBAAS,GAF3B,mBAEjC8e,EAFiC,KAEVC,EAFU,OAGOnf,EAC7C,GACA,gBALsC,mBAGjB+pB,GAHiB,WAQlC1iB,EAAUC,eAEV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAnDJ+Q,EAoDH,iBAnD5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiDnC6hB,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACrDg2B,EAAWI,IAbS,iCAzCM,IAAC/hB,IAyCP,OAAH,sDAyBfmU,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,MACF,IAGhB,OACE,oCACE,kBAAC,KAAD,CAME0X,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,KACrCqrB,EAAyBlP,KAG3B,yBAAKnT,IAAKwf,EAASrM,GAASpb,IAAI,UAMxC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,KAErCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,WACNob,UAAU,SACVle,IAAI,KACJN,UAAU,yBAWZ,kBAAC,GAAD,CACEoD,MAAM,iBACNob,UAAU,uBACVle,IAAI,KACJN,UAAU,yBAUZ,kBAAC,GAAD,CACEwT,MAAO,IACPpQ,MAAM,aACNob,UAAU,YACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACEle,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,UACRO,SAAU,SAGXzT,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BAMrC,kBAAC,GAAD,CACEgH,MAAO,IACPpQ,MAAM,WACNob,UAAU,UACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACEle,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BAMrC,kBAAC,GAAD,CACExM,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,eAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAACwU,GAAD,CACErJ,QAAS12B,EACTm2B,WAAYA,EACZzQ,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvBrd,SAAUqrB,MAgHLyU,GAvGI,SAAC,GAAe,qBACHvzB,mBAAS,IADP,mBACzBiqB,EADyB,KAChBP,EADgB,OAGO9pB,EAAe,GAAI,cAH1B,mBAGzB4iB,EAHyB,KAGfC,EAHe,KAKhCljB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,CACpCrwB,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALR,OACRpR,EADQ,OAUdozB,EAAWpzB,GAVG,2CAAH,qDAYbygB,KACC,IAEHrkB,QAAQC,IAAI,aAAc6vB,GArBM,MAuB0BxiB,oBAAS,GAvBnC,mBAuBzBgZ,EAvByB,KAuBFC,EAvBE,KAiDhC,OACE,oCACE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,WAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,kBACZjB,SAAU,SAAC8R,GAAD,OApBD,SAAChS,GACpB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAC9f,GAAD,OACtCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCke,EAAWS,IAecjK,CAAaxd,EAAE/F,OAAOjM,WAG3C,kBAAC,IAAD,CAEES,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YASF,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASy3B,WAAYA,EAAYn2B,KAAM02B,IAExCzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,kBACZO,MAAOwS,KAAMI,4BAOvB,kBAACysB,GAAD,CACEvJ,QAASA,EACTP,WAAYA,EACZ1Q,sBAAuBA,EACvBC,yBAA0BA,MCjX1BtP,GAAWC,KAAXD,OAEF5I,GAAmBC,MAAaC,MAAM,IAuBtCG,GAAgB,CACpBzI,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVK,SAAU,GACVC,SAAU,GACV46B,QAAS,GACTtyB,SAAU,GACVuyB,WAAY,IAWRve,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAme/B2V,GAxdQ,SAAC,GAKV,IAJZ5E,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACA0a,EAEW,EAFXA,aACAC,EACW,EADXA,gBACW,EACwCh0B,EACjD,GACA,eAHS,mBACJi0B,EADI,KACcC,EADd,OAK6C9zB,mBAAS,IALtD,mBAKJ+zB,EALI,KAKkBC,EALlB,OAMuCh0B,mBAAS,IANhD,mBAMJi0B,EANI,KAMeC,EANf,OAQiCl0B,mBAAS,IAR1C,mBAQJm0B,EARI,KAQYC,EARZ,OAS2Bp0B,mBAAS,IATpC,mBASJq0B,EATI,KASSC,EATT,OAWwC10B,EACjD,GACA,eAbS,mBAWJ20B,EAXI,KAWcC,EAXd,OAgBkC50B,EAAe,GAAI,YAhBrD,mBAgBJ60B,EAhBI,KAgBWC,EAhBX,OAiByC10B,oBAAS,GAjBlD,mBAiBJ20B,EAjBI,KAiBgBC,EAjBhB,OAmB2B50B,mBAAS,IAnBpC,gCAoBqBA,mBAAS,KApB9B,mBAsBLwB,GAtBK,UAsBO,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACUq0B,EAAuB,CAClDx8B,KAAM,CACJqB,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MAAMojB,OACpB3a,SAAUM,EAAON,SACjBvI,SAAU6I,EAAO7I,SACjBC,SAAU4I,EAAO5I,SACjBP,UAAWmJ,EAAOnJ,UAAUwjB,OAC5BvjB,SAAUkJ,EAAOlJ,SACjBC,QAASu7B,EACTt7B,KAAMw7B,EACNP,WAAYjyB,EAAOiyB,cAZJ,QACbmB,EADa,SAiB6B,OAA1BA,EAAe79B,QAnER+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,oBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAkEzC2rB,EAAgB,CAAC,aAEblgC,GAAImhC,EAAc,KAAW,GAC7BpjC,IAAKojC,EAAc,KAAW,GAC9B7jC,KAAM6jC,EAAc,UAAgB,IAAMA,EAAc,UAErDA,IANQ,oBAQVlB,KAEL1a,GAAyB,GACzBvX,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GApCH,iCAlDS,IAACoG,IAkDV,OAAH,yDAuClBxI,qBAAU,WACR,IAAKs0B,EAAgB,UAAe,CAClC,IAAMr1B,EAAQq1B,EAAgB,MAC9B,GAAIr1B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACuX,IAEJ,IAAMiB,EAAe,SAACpkC,GACpBwjC,EAAqBxjC,IAGjBqkC,EAAkB,SAACrkC,GACvBsjC,EAAwBtjC,IAG1B6O,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,IAEH11B,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,MAJC,QACVmB,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACpB,IAEJ,IAAMxT,GAAe,SAAC7d,GACpBuW,GAAyB,IAmB3B,OAFAvmB,QAAQC,IAAI,gBAAiB8hC,GAG3B,kBAAC,IAAD,CACE3yB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,IACRqG,QAAS,QAEXvU,MAAM,mBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,yBAAK7sB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAMxB,yBACElR,UAAU,kBACVQ,MAAK,aACHmV,WAAY,WACP6tB,GAAsB,CACzBlyB,OAAQ,YAIZ,yBAAKtR,UAAU,yBACZwjC,GACC,kBAACvkC,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOiyB,WACd1iC,KAAK,aACLF,QACGsR,EAAQsxB,YAAcxxB,EAAOwxB,aAC5BvxB,GACA0xB,EAAiBr1B,MAAjB,iBAEJzN,YACGqR,EAAQsxB,YAAcxxB,EAAOwxB,aAC5BvxB,GACA0xB,EAAiBr1B,MAAjB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAKxB,yBAAKlR,UAAU,yBACb,wBACEwR,QAAS,kBAAMiyB,GAAsB,SAAClkC,GAAD,OAAYA,MACjDiB,MAAO,CACLsW,MAAO,UACP0F,aAAc,OACdnF,WAAY,QACZC,OAAQ,WAEVtX,UAAU,mBARZ,uBAeJ,yBACEQ,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,aACNC,KAAK,WACLC,MAAO+Q,EAAON,SACdnQ,KAAK,WACLF,QACGsR,EAAQjB,UAAYe,EAAOf,WAC1BgB,GAAgB0xB,EAAiBr1B,MAAjB,eAEpBzN,YACGqR,EAAQjB,UAAYe,EAAOf,WAC1BgB,GAAgB0xB,EAAiBr1B,MAAjB,eAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAKtB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,aAEA,kBAAC,IAAKC,KAAN,CACEC,eACEwiC,EAAiBr1B,MAAjB,cAA6C,QAAU,GAEzDlN,KAAMuiC,EAAiBr1B,MAAjB,eAGN,kBAAC,KAAD,CACE42B,gBACE,kBAAC,KAAD,CACExhC,YAAY,mBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,EACV1pB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC+oB,EAAiBz1B,MAChBy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAClB,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMjD,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,UACA,kBAAC,IAAKC,KAAN,CAEEC,eACEwiC,EAAiBr1B,MAAjB,WAA0C,QAAU,GAEtDlN,KAAMuiC,EAAiBr1B,MAAjB,YAEN,kBAAC,KAAD,CACErN,UAAU,kBACVikC,gBACE,kBAAC,KAAD,CACExhC,YAAY,yBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAAUkkC,EACVzpB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpCipB,EAAc31B,MACb21B,EAAclhC,KAAKtB,OAAS,GAC5BoiC,EAAY7hC,KAAI,SAAC+Y,GACf,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,aAQnD,yBACEW,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAO7I,SACd5H,KAAK,WACLF,QACGsR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GAAgB0xB,EAAiBr1B,MAAjB,eAEpBzN,YACGqR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GAAgB0xB,EAAiBr1B,MAAjB,eAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBC5hB1BsH,GAAWC,KAAXD,OAEF5I,GAAmBC,MAAaC,MAAM,IA+BtCkU,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAYxC7G,GAAgB,CACpBzI,MAAO,GACPD,MAAO,GACPE,SAAU,GACVN,UAAW,GACXC,SAAU,GACVm7B,WAAY,IA+dCrC,GA5dG,SAAC,GAML,IALZn3B,EAKW,EALXA,SACA6W,EAIW,EAJXA,WACAD,EAGW,EAHXA,QACA6iB,EAEW,EAFXA,aACAC,EACW,EADXA,gBACW,EAC8Ch0B,EACvD,GACA,kBAHS,mBACJy1B,EADI,KACiBC,EADjB,OAM6Ct1B,mBAAS,IANtD,mBAMJ+zB,EANI,KAMkBC,EANlB,OAOuCh0B,mBAAS,IAPhD,mBAOJi0B,EAPI,KAOeC,EAPf,OASiCl0B,mBAAS,IAT1C,mBASJm0B,EATI,KASYC,EATZ,OAU2Bp0B,mBAAS,IAVpC,mBAUJq0B,EAVI,KAUSC,EAVT,OAYwC10B,EACjD,GACA,eAdS,mBAYJ20B,EAZI,KAYcC,EAZd,OAiBkC50B,EAAe,GAAI,YAjBrD,mBAiBJ60B,EAjBI,KAiBWC,EAjBX,OAmB2B10B,mBAAS,IAnBpC,gCAoBqBA,mBAAS,KApB9B,mBAsBLwB,GAtBK,UAsBO,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,sEACa61B,EAA0B,CACxDljC,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJqB,MAAO8I,EAAO9I,MAAMmjB,OACpBpjB,MAAO+I,EAAO/I,MAAMojB,OACpB3a,SAAUM,EAAON,SACjBvI,SAAU6I,EAAO7I,SAASkjB,OAC1BxjB,UAAWmJ,EAAOnJ,UAAUwjB,OAC5BvjB,SAAUkJ,EAAOlJ,SACjBC,QAASu7B,GAAwB75B,EAAS1B,QAC1CC,KAAMw7B,GAAqB/5B,EAASzB,KACpCi7B,WAAYjyB,EAAOiyB,WAAW5X,UAhBf,QACbyZ,EADa,SAqBmC,OAA7BA,EAAkBv+B,QAlFd+Q,OAmF3B6I,EAlFJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqFnCiB,EAJgB,WACpB,OAAOyqB,EAAanhC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAGhDyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAI0e,EAAazqB,GAA/BnX,OAAA,IAAAA,CAAA,GAEfwjC,EAFe,CAGlB7hC,GAAI+N,EAAO/N,GACX1C,KAAMukC,EAAkBj9B,UAAY,IAAMi9B,EAAkBh9B,YAExD6jB,EAhBoD,uBAiBrDuX,EAAaxgC,MAAM,EAAG+V,IAjB+B,CAkBxD8L,GAlBwD,aAmBrD2e,EAAaxgC,MAAM+V,EAAQ,KAEhC0qB,EAAgBxX,GAChBrL,GAAW,GACXmjB,EAAqB,IACrBF,EAAwB,KAIxB7e,KAGFzT,EAAQC,eAAc,GApDH,iCA7DS,IAACoG,IA6DV,OAAH,yDAuDZ+sB,EAAe,SAACpkC,GACpBwjC,EAAqBxjC,IAGjBqkC,EAAkB,SAACrkC,GACvBsjC,EAAwBtjC,IAG1B6O,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,CAAC/6B,IAEJqF,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,GAAwB75B,EAAS1B,YAJhC,QACV08B,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACj7B,EAAS1B,QAASu7B,IAEtBx0B,qBAAU,WACR,IAAK81B,EAAmB,UAAe,CACrC,IAAM72B,EAAQ62B,EAAmB,MACjC,GAAI72B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B+Y,EAAmB,WACpBtjC,OAAOC,KAAKqjC,EAAoB9hC,MAAMtB,OAAS,GAE3CojC,EAAmB,KAAnB,SAUL,CAACA,IAEJ,IAAM9U,EAAe,SAAC7d,GACpBqO,GAAW,GAEXmjB,EAAqB,IACrBF,EAAwB,KAkB1B,OACE,kBAAC,IAAD,CACElyB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBlH,KAErC,gBACC+H,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,gBACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV1C,gBAAgB,EAChBpI,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,IACRqG,QAAS,SAGX,yBAAK3X,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAkzB,EAAoB72B,MAApB,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAkzB,EAAoB72B,MAApB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAkzB,EAAoB72B,MAApB,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAkzB,EAAoB72B,MAApB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAkzB,EAAoB72B,MAApB,YAEJzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAkzB,EAAoB72B,MAApB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAkzB,EAAoB72B,MAApB,YAEJzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAkzB,EAAoB72B,MAApB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAMxB,yBACE1Q,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOiyB,WACd1iC,KAAK,aACLF,QACGsR,EAAQsxB,YAAcxxB,EAAOwxB,aAC5BvxB,GACAkzB,EAAoB72B,MAApB,iBAEJzN,YACGqR,EAAQsxB,YAAcxxB,EAAOwxB,aAC5BvxB,GACAkzB,EAAoB72B,MAApB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAKtB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,aAEA,kBAAC,IAAKC,KAAN,CACEC,eACEgkC,EAAoB72B,MAApB,cAAgD,QAAU,GAE5DlN,KAAM+jC,EAAoB72B,MAApB,eAGN,kBAAC,KAAD,CACE42B,gBACE,kBAAC,KAAD,CACExhC,YAAY,mBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChBhU,aAAcuJ,GAAYA,EAAS1B,QACnC3G,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,EACV1pB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC+oB,EAAiBz1B,MAChBy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAClB,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMjD,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,UACA,kBAAC,IAAKC,KAAN,CAEEC,eACEgkC,EAAoB72B,MAApB,WAA6C,QAAU,GAEzDlN,KAAM+jC,EAAoB72B,MAApB,YAEN,kBAAC,KAAD,CACErN,UAAU,kBACVikC,gBACE,kBAAC,KAAD,CACExhC,YAAY,yBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,gBACZlB,aAAcuJ,GAAYA,EAASzB,KACnC2S,iBAAiB,WACjBxa,SAAUkkC,EACVzpB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpCipB,EAAc31B,MACb21B,EAAclhC,KAAKtB,OAAS,GAC5BoiC,EAAY7hC,KAAI,SAAC+Y,GACf,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,aAQnD,yBACEW,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAO7I,SACd5H,KAAK,WACLF,QACGsR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAkzB,EAAoB72B,MAApB,eAEJzN,YACGqR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAkzB,EAAoB72B,MAApB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBC1f1BwM,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG3e,IAAXuuB,QAEAhV,GAAWC,KAAXD,OAuBFiV,GAAU,SAAC,GAA6C,IAA3CrrB,EAA0C,EAA1CA,KAAMqgC,EAAoC,EAApCA,gBAAoC,EAC7B5zB,oBAAS,GADoB,mBACpD8Q,EADoD,KAC3CC,EAD2C,OAED/Q,oBAAS,GAFR,mBAEpD8e,EAFoD,KAE7BC,EAF6B,KAIrD9X,EAAUC,eAJ2C,EAMFtH,EACvD,GACA,kBARyD,mBAM/B41B,GAN+B,WAUrDC,EAAoB,uCAAG,WAAO/hC,GAAP,iBAAA+L,EAAA,sEACK+1B,EAA0B,CACxDpjC,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrBgiC,EADqB,SAU2B,OAA7BA,EAAkB1+B,SAzCd+Q,EA0CH,mBAzC5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAuCnC0tB,EAAkBpiC,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KAC1DkgC,EAAgB+B,IAbS,iCA/BC,IAAC5tB,IA+BF,OAAH,sDAiB1B,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,0BAAgCya,EAAOnc,KAEvCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAUZ,kBAAC,GAAD,CACEoD,MAAM,SACNob,UAAU,aACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,aAIThR,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,cACNob,UAAU,kBACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEwT,MAAO,IACPpQ,MAAM,UACNob,UAAU,UACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BAAKlW,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BA+BvC,kBAAC,GAAD,CACExM,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,iBAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMmf,EAAqB5lB,EAAOnc,KAC7Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAAC,GAAD,CACE6U,aAAcpgC,EACdqgC,gBAAiBA,EACjB7iB,WAAYA,EACZD,QAASA,EACT5W,SAAU4kB,MAyMLW,iBA9LM,SAAC,GAAuB,EAArBxY,QAAsB,IAAD,EACHjH,mBAAS,IADN,mBACpC2zB,EADoC,KACtBC,EADsB,OAGMh0B,EAC/C,GACA,gBALyC,mBAGpCg2B,EAHoC,KAGrBC,EAHqB,OAOiB71B,mBAAS,IAP1B,mBAOpC81B,EAPoC,KAOZC,EAPY,KAS3CrjC,QAAQC,IAAI,eAAgBghC,GAE5Bp0B,qBAAU,YACU,uCAAG,8BAAAE,EAAA,6DACbu2B,EAAmB,WACvB,OAAQF,GACN,IAAK,WACH,MAAO,CACLruB,SAAU,QACVC,eAAgB,MAGpB,IAAK,iBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,MAGpB,IAAK,gBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,KAIpB,IAAK,iBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,MAIpB,IAAK,gBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,KAIpB,QACE,MAAO,CACLD,SAAU,QACVC,eAAgB,QAvCL,SA2CKmuB,EAAwB,CAC9CzjC,WAAY,CACVC,OAAO,eACF2jC,IADC,CAEJt4B,YAAa,eA/CA,OA2Cbu4B,EA3Ca,OAoDnBrC,EAAgBqC,GApDG,2CAAH,qDAsDlBC,KACC,CAACJ,IAEJ,IArE2C,EA8Ee91B,oBAAS,GA9ExB,mBA8EpCgZ,EA9EoC,KA8EbC,EA9Ea,KA6G3C,OACE,oCAIE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,aAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,oBACZjB,SAAU,SAAC8R,GAAD,OAtDD,SAAChS,GACpB,GAAIklC,EAAcriC,KAAKtB,OAAS,EAAG,CACjC,IAAM0jC,EAAkBC,EAAcriC,KAAKuf,QAAO,SAAC9f,GAAD,OAChDA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCooB,EAAgB+B,IAiDSzV,CAAaxd,EAAE/F,OAAOjM,WAK3C,6BACE,kBAAC,KAAD,CACEiB,MAAO,CACLC,aAAc,OACdqW,MAAO,UACPS,YAAa,OACb/D,MAAO,SAET9S,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAjCsB,SAACF,GACjCqlC,EAA0BrlC,IAiChBC,aAAc,WACdua,UAAU,GA1DO,CAC3B,CACEla,KAAM,YACNN,MAAO,YAET,CACEM,KAAM,2BACNN,MAAO,kBAET,CACEM,KAAM,2BACNN,MAAO,iBAET,CACEM,KAAM,2BACNN,MAAO,kBAET,CACEM,KAAM,2BACNN,MAAO,kBAyCuB8B,KAAI,SAAC+Y,GACzB,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,UAIhD,kBAAC,IAAD,CAEEG,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,aAWJ,yBAAK9nB,UAAU,uCASf,yBAAKA,UAAU,uCACZykC,EAAc92B,MAAQ60B,EAAa1hC,OAAS,GAC3C,kBAAC,GAAD,CAAS2hC,gBAAiBA,EAAiBrgC,KAAMogC,IAElDiC,EAAc/2B,WAAa,kBAACshB,GAAD,MAC3ByV,EAAc92B,QAAU60B,EAAa1hC,OAAS,IAC7C,kBAAC,GAAD,CAAOsC,MAAM,wBAKlBqhC,EAAc92B,MACb,kBAACq3B,GAAD,CACEvC,gBAAiBA,EACjB5a,sBAAuBA,EACvBC,yBAA0BA,EAC1B0a,aAAciC,EAAcriC,WClb9BoW,GAAWC,KAAXD,OAEF5I,GAAmBC,MAAaC,MAAM,IA2BtCkU,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAWxC7G,GAAgB,CACpBzI,MAAO,GACPD,MAAO,GACPE,SAAU,GACVN,UAAW,GACXC,SAAU,GACVm7B,WAAY,IAgbCrC,GA7aG,SAAC,GAKL,IAJZn3B,EAIW,EAJXA,SACA6W,EAGW,EAHXA,WACAD,EAEW,EAFXA,QACAslB,EACW,EADXA,sBACW,EAC8Cx2B,EACvD,GACA,kBAHS,mBACJy1B,EADI,KACiBC,EADjB,OAM6Ct1B,mBAAS,IANtD,mBAMJ+zB,EANI,KAMkBC,EANlB,OAOuCh0B,mBAAS,IAPhD,mBAOJi0B,EAPI,KAOeC,EAPf,OASiCl0B,mBAAS,IAT1C,mBASJm0B,EATI,KASYC,EATZ,OAU2Bp0B,mBAAS,IAVpC,mBAUJq0B,EAVI,KAUSC,EAVT,OAYwC10B,EACjD,GACA,eAdS,mBAYJ20B,EAZI,KAYcC,EAZd,OAiBkC50B,EAAe,GAAI,YAjBrD,mBAiBJ60B,EAjBI,KAiBWC,EAjBX,KAmBLlzB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACa61B,EAA0B,CACxDljC,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJqB,MAAO8I,EAAO9I,MAAMmjB,OACpBpjB,MAAO+I,EAAO/I,MAAMojB,OACpB3a,SAAUM,EAAON,SACjBvI,SAAU6I,EAAO7I,SAASkjB,OAC1BxjB,UAAWmJ,EAAOnJ,UAAUwjB,OAC5BvjB,SAAUkJ,EAAOlJ,SACjBC,QAASu7B,GAAwB75B,EAAS1B,QAC1CC,KAAMw7B,GAAqB/5B,EAASzB,KACpCi7B,WAAYjyB,EAAOiyB,WAAW5X,UAhBf,QACbyZ,EADa,SAqBmC,OAA7BA,EAAkBv+B,QA7Ed+Q,OA8E3B6I,EA7EJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BA4EzCmuB,EAAsB,eAEjBb,EAFgB,CAGnB7hC,GAAI+N,EAAO/N,GACX1C,KAAMukC,EAAkBj9B,UAAY,IAAMi9B,EAAkBh9B,YAG9DwY,GAAW,IAEXoE,KAGFzT,EAAQC,eAAc,GApCH,iCAxDS,IAACoG,IAwDV,OAAH,wDAuClBxI,qBAAU,WACR,IAAK81B,EAAmB,UAAe,CACrC,IAAM72B,EAAQ62B,EAAmB,MACjC,GAAI72B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAAC+Y,IAEJ,IAAMP,EAAe,SAACpkC,GACpBwjC,EAAqBxjC,IAGjBqkC,EAAkB,SAACrkC,GACvBsjC,EAAwBtjC,IAG1B6O,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,CAAC/6B,IAEJqF,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,GAAwB75B,EAAS1B,YAJhC,QACV08B,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACj7B,EAAS1B,QAASu7B,IAEtB,IAAMxT,EAAe,SAAC7d,GACpBqO,GAAW,IAGbre,QAAQC,IAAI,eAAgBuH,GAe5B,OACE,kBAAC,IAAD,CACE4H,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBlH,KAErC,gBACC+H,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,gBACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,IACRqG,QAAS,SAGX,yBAAK3X,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAkzB,EAAoB72B,MAApB,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAkzB,EAAoB72B,MAApB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAkzB,EAAoB72B,MAApB,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAkzB,EAAoB72B,MAApB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAkzB,EAAoB72B,MAApB,YAEJzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAkzB,EAAoB72B,MAApB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAkzB,EAAoB72B,MAApB,YAEJzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAkzB,EAAoB72B,MAApB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAMxB,yBACE1Q,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOiyB,WACd1iC,KAAK,aACLF,QACGsR,EAAQsxB,YAAcxxB,EAAOwxB,aAC5BvxB,GACAkzB,EAAoB72B,MAApB,iBAEJzN,YACGqR,EAAQsxB,YAAcxxB,EAAOwxB,aAC5BvxB,GACAkzB,EAAoB72B,MAApB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAKtB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,aAEA,kBAAC,IAAKC,KAAN,CACEC,eACEgkC,EAAoB72B,MAApB,cAAgD,QAAU,GAE5DlN,KAAM+jC,EAAoB72B,MAApB,eAGN,kBAAC,KAAD,CACE42B,gBACE,kBAAC,KAAD,CACExhC,YAAY,mBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChBhU,aAAcuJ,GAAYA,EAAS1B,QACnC3G,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,EACV1pB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC+oB,EAAiBz1B,MAChBy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAClB,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMjD,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,UACA,kBAAC,IAAKC,KAAN,CAEEC,eACEgkC,EAAoB72B,MAApB,WAA6C,QAAU,GAEzDlN,KAAM+jC,EAAoB72B,MAApB,YAEN,kBAAC,KAAD,CACErN,UAAU,kBACVikC,gBACE,kBAAC,KAAD,CACExhC,YAAY,yBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,gBACZlB,aAAcuJ,GAAYA,EAASzB,KACnC2S,iBAAiB,WACjBxa,SAAUkkC,EACVzpB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpCipB,EAAc31B,MACb21B,EAAclhC,KAAKtB,OAAS,GAC5BoiC,EAAY7hC,KAAI,SAAC+Y,GACf,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,aAQnD,yBACEW,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAO7I,SACd5H,KAAK,WACLF,QACGsR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAkzB,EAAoB72B,MAApB,eAEJzN,YACGqR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAkzB,EAAoB72B,MAApB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBCxc1BwM,GAAwBC,KAAxBD,OA0VOyb,IA1ViBxb,KAAhBC,YACG0R,IAAX9B,OAMe,SAAC3X,GAAkB,IAAD,EACoBpH,EAAe,GAAI,kBADvC,mBAC9By2B,EAD8B,KACTC,EADS,OAEU12B,EAAe,GAAI,wBAF7B,mBAE9B22B,EAF8B,KAEdC,EAFc,OAGOx2B,oBAAS,GAHhB,mBAG9BsxB,EAH8B,KAGdC,EAHc,OAIcvxB,mBAAS,IAJvB,mBAI9By2B,EAJ8B,KAIXL,EAJW,KAQrC1jC,QAAQC,IAAI,qBAAqB8jC,GACjC,IAAMpkC,EAASuuB,eACT3Z,EAAUC,eACV/K,EAAa9J,EAAM,GAkDzB,OAhDAkN,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACc62B,EAA0B,CAC1DlkC,WAAY,CACRE,aAAc,CACVoB,GAAIyI,MAJM,QAChBu6B,EADgB,SAYlBN,EAAsBM,GAG1BhkC,QAAQC,IAAI,wBAAwB+jC,GAfd,2CAAH,qDAkBvBC,KAED,CAACx6B,IAIJoD,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACX+2B,EAAqB,CACvBpkC,WAAY,CACRC,OAAQ,CACJ8J,WAAYA,MAJP,2CAAH,qDAUlBy6B,KAED,CAACz6B,IAKJzJ,QAAQC,IAAI,qBAAsB8jC,GAK9B,yBAAKtlC,UAAU,wBACX,yBAAKA,UAAU,iCACX,+CAICklC,EAAoBv3B,MAAQ23B,GAAuB1kC,OAAOC,KAAKykC,GAAoBxkC,OAAS,GACzF,oCACI,kBAAC4kC,GAAD,CACI/lB,QAASwgB,EACTvgB,WAAYwgB,EACZr3B,SAAUu8B,EACVL,sBAAuBA,IAE3B,kBAAC,IAAD,CACIzzB,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACIsC,UAAW,CAAEtR,KAAM,GACnB3N,QAASyzB,EAAoBx3B,WAC5Bw3B,EAAoBv3B,MAAQ23B,KAAwB1kC,OAAOC,KAAKykC,GAAoBxkC,OAAS,IAC1F,kBAAC,KAAD,CAAO2B,YAAY,oBAAoBO,MAAOwS,KAAMI,yBAGvDsvB,EAAoBv3B,MAAQ23B,GAAuB1kC,OAAOC,KAAKykC,GAAoBxkC,OAAS,GACzF,yBAAKd,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKslC,EAAkB,MAEvB,4BACKA,EAAkB,aAGtBA,EAAkB,SACf,uCAEI,8BACKA,EAAkB,UAM9BA,EAAkB,MACf,oCAEI,8BACKA,EAAkB,OAO9BA,EAAkB,UACf,uCAEI,8BACKA,EAAkB,WAM9BA,EAAkB,OACf,qCAEI,8BACKA,EAAkB,QAK7BA,EAAkB,OAChB,qCAEI,8BACKA,EAAkB,WAW/C,yBAAKtlC,UAAU,iCACX,uCAIJ,yBAAKA,UAAU,8BACVolC,EAAe13B,WAAa,kBAACshB,GAAD,MAC5BoW,EAAez3B,QAAUy3B,EAAehjC,KAAKtB,OAAS,IACnD,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,sCAAsCO,MAAOwS,KAAMI,0BAI7EwvB,EAAez3B,MAAQy3B,EAAehjC,MAAQgjC,EAAehjC,KAAKtB,OAAS,GACxE,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UAAW,+FAOf6G,KAAK,QAEL8D,WAAYgnB,EAAehjC,KAC3Bic,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH/d,MAAO,CACHsW,MAAO,qBAUvC,kBAAC,GAAD,CACE1T,MAAM,OACNob,UAAU,YACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCAEE,wBACElN,QAAS,WAEPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAEtC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YARZ,IAWIlT,OAQd,kBAAC,GAAD,CACMhB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCAEE,wBACElN,QAAS,WAEPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAEtC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAYT,kBAAC,GAAD,CACGhB,MAAM,WACNob,UAAU,eACVle,IAAI,KACJN,UAAU,yBAMX,kBAAC,GAAD,CACCoD,MAAM,UACNob,UAAU,eACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACP,oCAEE,wBAEEle,MAAO,CACL6X,WAAY,IACZvB,MAAO,SAGN1S,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BASjC,kBAAC,GAAD,CACEpJ,MAAM,cACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAMhB,kBAAC,GAAD,CACEwT,MAAO,IACRpQ,MAAM,SACNob,UAAU,SACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACP,oCAEC,uBAAG5G,KAAK,MACP,0BACAtX,MAAO,CACLqX,SAAS,SAGRzT,cC5UTsZ,GAAWC,KAAXD,OACA8P,GAAWvuB,IAAXuuB,OAwBFC,GAAU,SAAC,GAAiD,IAA/CrrB,EAA8C,EAA9CA,KAAMq3B,EAAwC,EAAxCA,aAAclnB,EAA0B,EAA1BA,MAA0B,EACL1D,oBAAS,GADJ,mBACjC+e,GADiC,aAEdnf,EAC/C,GACA,cAJ6D,mBAEvCk3B,GAFuC,WAOzD7vB,EAAUC,eAEV6vB,EAAgB,uCAAG,WAAOrjC,GAAP,iBAAA+L,EAAA,sEACKq3B,EAAsB,CAChD1kC,WAAY,CACVE,aAAc,CACZoB,SAJiB,QACjBsjC,EADiB,SAUuB,OAAzBA,EAAchgC,SAzCN+Q,EA0CH,eAzC5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,eACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAuCnC8jB,EAAex4B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACvDk3B,EAAamB,IAbQ,iCA/BK,IAAChkB,IA+BN,OAAH,sDAiBhBmU,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,MACF,IAGhB,OACE,oCACE,kBAAC,KAAD,CAME0X,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,QACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,sBAA4Bya,EAAOnc,KACnCqrB,EAAyBlP,KAG3B,yBAAKnT,IAAKwf,EAASrM,GAASpb,IAAI,UAKxC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WAEPsE,EAAQ7R,KAAR,sBAA4Bya,EAAOnc,MAErC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,gBACNob,UAAU,eACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACEle,MAAO,CACL6X,WAAY,IACZvB,MAAO,SAGR1S,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BAMrC,kBAAC,GAAD,CACEpJ,MAAM,UACNob,UAAU,QACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACEle,MAAO,CACL6X,WAAY,IACZvB,MAAO,SAGR1S,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BAiCpCiG,GAAS,WAAYF,IACpB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,aAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPsE,EAAQ7R,KAAR,2BAAiCya,EAAOnc,KACxCqrB,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMygB,EAAiBlnB,EAAOnc,KACzCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,eAgHLzR,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAhGE,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACL1D,mBAAS,IADJ,mBAC9Bi3B,EAD8B,KACpBC,EADoB,OAEIt3B,EAAe,GAAI,YAFvB,mBAE9Bu3B,EAF8B,KAEnBC,EAFmB,KAIrC1kC,QAAQC,IAAI,aAAcskC,GAC1B,IAAMhwB,EAAUC,eAEhB3H,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACK23B,EAAoB,CACtChlC,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALP,OACT2vB,EADS,OAUfH,EAAYG,GAVG,2CAAH,qDAYdC,KACC,IAWH,OACE,oCACE,yBAAKnmC,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,SAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,iBACZoxB,SAAU,SAACvyB,GAAD,OApBD,SAACA,GACpB,GAAIymC,EAAU5jC,KAAKtB,OAAS,EAAG,CAC7B,IAAM85B,EAAeoL,EAAU5jC,KAAKuf,QAAO,SAAC9f,GAAD,OACzCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzC0rB,EAAYnL,IAeiB7L,CAAaxvB,OAIrCkT,GAAS,WAAYF,IACpB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsE,EAAQ7R,KAAK,qBAJ9B,YAWJ,yBAAKjE,UAAU,uCASf,yBAAKA,UAAU,uCACZgmC,EAAUr4B,MAAQm4B,EAAShlC,OAAS,GACnC,kBAAC,GAAD,CAASyR,MAAOA,EAAOknB,aAAcsM,EAAa3jC,KAAM0jC,IAEzDE,EAAUt4B,WAAa,kBAACshB,GAAD,MACvBgX,EAAUr4B,QAAUm4B,EAAShlC,OAAS,IACrC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,gBACZO,MAAOwS,KAAMI,gC,qBChHdvC,IA9KiBsK,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OA6KOna,aALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAvKQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACQ9D,EACjD,GACA,eAHyC,mBACpCwyB,EADoC,KAClBC,EADkB,OAKCryB,oBAAS,GALV,gCAMIJ,EAC7C,GACA,eARyC,mBAMpCsyB,EANoC,KAMpBC,EANoB,OAUDnyB,mBAAS,IAVR,mBAUpCwxB,EAVoC,KAUrBS,EAVqB,KAYrC5/B,EAASuuB,eACT3Z,EAAUC,eACViiB,EAAQ92B,EAAM,GAyCpB,OAvCAkN,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACM0yB,EAAqB,CAC9C//B,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,QACfmJ,EADe,UAWnB5/B,QAAQC,IAAI,gBAAiB2/B,GAE7BL,EAAiBK,IAbE,2CAAH,qDAiBpB5G,KACC,CAACvC,IAEJ5pB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf4yB,EAAuB,CAC3BjgC,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,2CAAH,qDAUpBoJ,KACC,CAACpJ,IAEJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAGzB,yBAAKlB,UAAU,wBACb,yBAAKA,UAAU,iCACb,2CAEC+gC,EAAepzB,MACd0yB,GACAz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAClC,oCAQG2R,GAAS,WAAYF,IACpB,kBAAC,IAAD,CACEf,QAAS,WACPsE,EAAQ7R,KAAR,2BAAiCo8B,EAAa,OAEhD/gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OALR,UAaV,kBAAC,KAAD,CAAUsC,UAAW,CAAEtR,KAAM,GAAK3N,QAASsvB,EAAerzB,WACvDqzB,EAAepzB,MACd0yB,KACEz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IACpC,kBAAC,KAAD,CACE2B,YAAY,gBACZO,MAAOwS,KAAMI,yBAIlBmrB,EAAepzB,MACd0yB,GACAz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAClC,oCACE,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,+CACb,yBACEuL,IACE80B,EAAa,OAAaA,EAAa,MAAb,MAE5B/8B,IAAI,MAGR,yBAAKtD,UAAU,qCACb,4BAAKqgC,EAAa,MACjBA,EAAa,KACZ,mCAEE,8BAAOA,EAAa,MAIvBA,EAAa,cACZ,6CAEE,8BACGA,EAAa,cACZpoB,IAAOooB,EAAa,cAAkB7zB,OACpC,0BAMT6zB,EAAa,OACZ,uCAEE,8BACGA,EAAa,OACZpoB,IAAOooB,EAAa,OAAW7zB,OAC7B,4BAQd,yBAAKxM,UAAU,iCACb,wCAGF,yBACEA,UAAU,+BACVQ,MAAO,CACLiV,QAAS,UAGV2wB,KAAgB/F,EAAa,iB,UCrJxCrc,IAXavL,KAAXD,OACS6tB,KAATC,KAUsB,SAAC1vB,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,0BAIxClH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACRof,QAAS,GACTC,UAAW,GACXnf,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1mB,IAAK,IAyfQylC,GAreI,SAAC,GAAe,qBACUh4B,EAAe,GAAI,WAD9B,mBACzBi4B,EADyB,KACXC,EADW,OAEF93B,mBAAS,oCAFP,mBAEzB03B,EAFyB,KAEhBK,EAFgB,OAGE/3B,mBAAS,qHAHX,mBAGzB23B,EAHyB,KAGdK,EAHc,OAIAh4B,oBAAS,GAJT,mBAIzBkR,EAJyB,KAIfF,EAJe,OAKQhR,oBAAS,GALjB,mBAKzB+qB,EALyB,KAKXC,EALW,OAMQhrB,mBAAS,IANjB,mBAMX+a,GANW,aAOR/a,mBAAS,IAPD,mBAOzB1J,EAPyB,KAOnBygB,EAPmB,OAQJ/W,mBAAS,IARL,mBAQzB4a,EARyB,KAQjBC,EARiB,KAU1Bod,EAAmB,uCAAG,WAAOx2B,EAAaC,GAApB,eAAAjC,EAAA,sEACAq4B,EAAmB,CAC3CxgC,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb0mC,QAASA,EACTvlC,IAAKsP,EAAOtP,IAAI2pB,OAChB/nB,MAAOmd,EAAWA,EAAS,IAAMA,EAAS,GAAGxd,GAAK,GAClD8kB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,EAAKrD,KAAK,KAEpB+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,EAAO3nB,KAAK,KACtBjC,KAAMyQ,EAAO6W,OAAOwD,OACpB4b,QAASC,MAhBW,QACpBO,EADoB,SAsBgB,OAAvBA,EAAYlhC,QAE7B+jB,EAAgB,IAChBF,EAAU,IACV9D,EAAQ,IACRghB,EAAW,IACXC,EAAa,IACbhN,IACAha,EAAY,IACZtP,EAAQ2a,aAERlH,GAAsB,8CAGxBzT,EAAQC,eAAc,GApCI,2CAAH,wDA2GzB,OAlDApC,qBAAU,WACR,IAAKs4B,EAAY,UAAe,CAC9B,IAAMr5B,EAAQq5B,EAAY,MAC1B,GAAIr5B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,UA3IN,IAACvU,GAoJ1B8vB,EAAY,WACb9lC,OAAOC,KAAK6lC,EAAatkC,MAAMtB,OAAS,GAED,OAAnC4lC,EAAY,KAAZ,SAvJuB9vB,EAwJD,4BAvJ9BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,eACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCA8J1C,CAAC4vB,IAEJnlC,QAAQC,IAAI,aAAcue,GAGxB,kBAAC,IAAD,CACEpP,SAAU,SAACL,EAAQC,GAAT,OAAqBu2B,EAAoBx2B,EAAQC,IAC3DX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAKpR,UAAU,uBACb,wBAAIA,UAAU,gCAAd,gBAEA,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAY,sBACZH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB01B,EAAar5B,MAAb,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB01B,EAAar5B,MAAb,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,WACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,8BACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgB01B,EAAar5B,MAAb,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgB01B,EAAar5B,MAAb,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAMxB,kBAACjS,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOtP,IACdnB,KAAK,MACLF,QACGsR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgB01B,EAAar5B,MAAb,UAEpBzN,YACGqR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgB01B,EAAar5B,MAAb,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIlR,UAAU,mBAAd,aAEA,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPqoB,GAAgB,KAGlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBAtKN,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GA8JyBC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAMTxM,GACEA,EAAS,IACR,kBAAC,KAAD,CAAS3c,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,SAMR,kBAAC,KAAD,CAAS5jB,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,UAOV,uBACExmB,MAAO,CACLsW,MAAO,UACPM,UAAW,UAGZsvB,EAAar5B,MAAb,cAGL,yBAAKrN,UAAU,6BACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAMmkC,EACNpQ,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBwQ,EAAWxkC,IAEbqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,cAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAMokC,EACNrQ,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpByQ,EAAazkC,IAEfqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdxnB,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA01B,EAAar5B,MAAb,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA01B,EAAar5B,MAAb,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,GACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA01B,EAAar5B,MAAb,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA01B,EAAar5B,MAAb,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA01B,EAAar5B,MAAb,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA01B,EAAar5B,MAAb,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,uBAItB,yBAAKlR,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACA01B,EAAar5B,MAAb,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACA01B,EAAar5B,MAAb,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,0BAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASA,EACTzgB,KAAMA,KAGV,yBAAKnF,UAAU,yBACb,wBAAIA,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,EACTvkB,KAAMskB,OAMd,yBACEjpB,MAAO,CACL4W,UAAW,UAIf,kBAAC,IAAD,CACE3F,QAASi1B,EAAah5B,UACtB8D,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCvR,UAAU,8BAHZ,gBASF,kBAAC,GAAD,CACE4f,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC3gB5BL,IAHahH,KAAXD,OACS6tB,KAATC,KAEwB,SAAC1vB,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,eACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,gCAIzCkN,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxClH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACRof,QAAS,GACTC,UAAW,GACXnf,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1mB,IAAK,IAopBQylC,GAhoBI,SAAC,GAAe,qBACUh4B,EAAe,GAAI,cAD9B,mBACzBi4B,EADyB,KACXC,EADW,OAEF93B,mBAAS,IAFP,mBAEzB03B,EAFyB,KAEhBK,EAFgB,OAGE/3B,mBAAS,IAHX,mBAGzB23B,EAHyB,KAGdK,EAHc,OAIAh4B,oBAAS,GAJT,mBAIzBkR,EAJyB,KAIfF,EAJe,OAKQhR,oBAAS,GALjB,mBAKzB+qB,EALyB,KAKXC,EALW,OAMQhrB,mBAAS,IANjB,mBAMzB8a,EANyB,KAMXC,EANW,OAOR/a,mBAAS,IAPD,mBAOzB1J,EAPyB,KAOnBygB,EAPmB,OAQJ/W,mBAAS,IARL,mBAQzB4a,EARyB,KAQjBC,EARiB,OAUejb,EAC7C,GACA,cAZ8B,mBAUTuyB,GAVS,aAcUnyB,mBAAS,IAdnB,mBAczBwxB,EAdyB,KAcVS,EAdU,OAkB5BryB,EAAe,GAAI,6BAlBS,mBAiB9Byb,GAjB8B,cAsB5Bzb,EAAe,GAAI,6BAtBS,qBAqB9Bwb,IArB8B,aAyB1B+N,GADSvI,eACK,GAEpBrhB,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACM0yB,EAAqB,CAC9C//B,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,OAJW,QACfmJ,EADe,UAWnB5/B,QAAQC,IAAI,eAAgB2/B,GAE5BL,EAAiBK,IAbE,2CAAH,qDAiBpB5G,KACC,CAACvC,KAEJ5pB,qBAAU,WACJiyB,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GACnDu/B,EAAcz9B,OAASy9B,EAAcz9B,MAAd,KAEzBid,EAAY,CAACwgB,EAAcz9B,QAC3BgnB,EAAgByW,EAAcz9B,MAAd,OAGnB,CAACy9B,IAEJjyB,qBAAU,WACJiyB,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IACvD8lC,EAAWvG,EAAa,SAAe,IACvCwG,EACExG,EAAa,IAAUA,EAAa,GAAb,QACnBA,EAAa,GAAb,QACA,OAGP,CAACA,IAEJ,IAAMyG,GAAmB,uCAAG,WAAOx2B,EAAaC,GAApB,iBAAAjC,EAAA,6DACpBtN,EAAMsP,EAAOtP,IAAI2pB,OAAUra,EAAOtP,IAAIW,QAAQ,SAAS,IAAM,GADzC,SAEAglC,EAAmB,CAC3C1lC,WAAY,CACVE,aAAc,CACZoB,GAAI89B,EAAc79B,MAGtB2D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClB4b,QAASA,EACTvlC,IAAKA,EACL4B,MAAOmd,EAAWA,EAAS,IAAMA,EAAS,GAAGxd,GAAK,GAClD8kB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUtiB,GAAQA,EAAKrE,OAAS,EAAIqE,EAAKrD,KAAK,KAAO,GACrD+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,GAAUA,EAAO3oB,OAAS,EAAI2oB,EAAO3nB,KAAK,KAAO,GAC3DjC,KAAMyQ,EAAO6W,OAAOwD,OACpB4b,QAASC,MArBW,QAEpBO,EAFoB,SA2BgB,OAAvBA,EAAYlhC,QAW7Bme,GAAsB,8CAGxBzT,EAAQC,eAAc,GAzCI,2CAAH,wDA8DnB6Z,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,EAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,OACZtjB,OAAQm5B,EAAc99B,OANG,QACzBkoB,EADyB,SAYa,OAAxBA,EAAa5kB,OAC/B4Z,GAAwB,qBAexBuE,GAAsB,mDA5BO,2CAAH,sDAgC9B5V,qBAAU,WAEJ2R,GAAYA,EAAS,IAAMA,EAASjf,OAAS,GAC3C6oB,IAAiB5J,EAAS,GAAGxd,KAC/BqnB,EAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,OAGrC,CAACA,IAEJ3R,qBAAU,WACR,IAAKs4B,EAAY,UAAe,CAC9B,IAAMr5B,EAAQq5B,EAAY,MAC1B,GAAIr5B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/Bub,EAAY,WACb9lC,OAAOC,KAAK6lC,EAAatkC,MAAMtB,OAAS,GAED,OAAnC4lC,EAAY,KAAZ,QACFjnB,GAAwB,+BAU3B,CAACinB,IAEJt4B,qBAAU,WACR,GAAIiyB,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,EAAG,CAC1D,IAAM2mB,EACJ4Y,EAAc5Y,UAAY4Y,EAAc5Y,SAASrmB,MAAM,KAEzDG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJ2Y,EAAcxV,IACdwV,EAAcxV,GAAd,UACAwV,EAAcxV,GAAd,SAA6BzpB,MAAM,KACrCwkB,EAAQ6B,GAAY,IACpBiC,EAAUhC,GAAc,OAEzB,IAEH,IAAM4C,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,6DAC9B/M,QAAQC,IAAI,OAAQe,GACpBhB,QAAQC,IAAI,QAAS6+B,GAFS,SAGxBpW,GAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,OACZtjB,OAAQm5B,EAAc99B,OARE,2CAAH,sDAc7B,OACE,kBAAC,IAAD,CACEoO,SAAU,SAACL,EAAQC,GAAT,OAAqBu2B,GAAoBx2B,EAAQC,IAC3DX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERowB,EAFQ,GAGPA,GACFz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAAK,CACvCwmB,YACE+Y,EAAa,IACbA,EAAa,GAAOhZ,WACpBgZ,EAAa,GAAOhZ,UACtBG,kBACE6Y,EAAa,IACbA,EAAa,GAAO9Y,iBACpB8Y,EAAa,GAAO9Y,gBACtBJ,OACEkZ,EAAa,IACbA,EAAa,GAAOxgC,MACpBwgC,EAAa,GAAOxgC,KACtBunB,cACEiZ,EAAa,IACbA,EAAa,GAAO59B,aACpB49B,EAAa,GAAO59B,gBAI3B,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAKpR,UAAU,uBACb,wBAAIA,UAAU,gCAAd,aAEA,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAY,sBACZH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB01B,EAAar5B,MAAb,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB01B,EAAar5B,MAAb,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,WACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,8BACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgB01B,EAAar5B,MAAb,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgB01B,EAAar5B,MAAb,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAMxB,kBAACjS,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOtP,IACdnB,KAAK,MACLF,QACGsR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgB01B,EAAar5B,MAAb,UAEpBzN,YACGqR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgB01B,EAAar5B,MAAb,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIlR,UAAU,mBAAd,aAEA,yBAAKA,UAAU,gCACZqgC,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GACpD,oCACGif,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPqoB,GAAgB,KAIlB,yBAAKtuB,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YArQV,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GA8PgBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAmBRxM,KAEDA,GAAcA,GAAYA,EAASjf,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASsC,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAEV,kBAACwsB,GAAA,EAAD,MACA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,YAYhB,uBACExmB,MAAO,CACLsW,MAAO,UACPM,UAAW,UAGZsvB,EAAar5B,MAAb,cAGL,yBAAKrN,UAAU,6BACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAMmkC,EACNpQ,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpBwQ,EAAWxkC,IAEbqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,cAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAMokC,EACNrQ,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpByQ,EAAazkC,IAEfqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdxnB,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA01B,EAAar5B,MAAb,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA01B,EAAar5B,MAAb,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,GACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA01B,EAAar5B,MAAb,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACA01B,EAAar5B,MAAb,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA01B,EAAar5B,MAAb,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA01B,EAAar5B,MAAb,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,uBAItB,yBAAKlR,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACA01B,EAAar5B,MAAb,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACA01B,EAAar5B,MAAb,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,0BAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASA,EACTzgB,KAAMA,KAGV,yBAAKnF,UAAU,yBACb,wBAAIA,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAAS8D,EACTvkB,KAAMskB,OAMd,yBACEjpB,MAAO,CACL4W,UAAW,UAIf,kBAAC,IAAD,CACE3F,QAASi1B,EAAah5B,UACtB8D,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCvR,UAAU,8BAHZ,gBASF,kBAAC,GAAD,CACE4f,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCrtB5BlQ,GAAmBC,MAAaC,MAAM,CAC3CjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,wCACrE0C,YAAaoN,MAAaxQ,MAAM,eAAeF,SAAS,6BAsH1C+gC,GAzGG,SAAC,GAA8C,IAA5C59B,EAA2C,EAA3CA,SAAUsd,EAAiC,EAAjCA,WAAYD,EAAqB,EAArBA,QAAqB,EACNlR,EAAe,GAAI,kBADb,mBACxDu4B,EADwD,KACnCzG,EADmC,KAGzDlwB,EAAY,uCAAG,WAAOC,EAAcC,GAArB,SAAAjC,EAAA,sEACaiyB,EAA0B,CAC3Dt/B,WAAY,CACXE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGd4D,KAAM,CACLtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,eATD,cAanB8N,EAAQC,eAAc,GAbH,2CAAH,wDAiBZ4e,EAAe,SAAC7d,GACfqO,GAAW,IAKVnP,EAA4B,SAACH,EAAOI,GAC3C,QAAIJ,EAAOzQ,MAASyQ,EAAO7N,aAAgBiO,IAM5C,OACC,kBAAC,IAAD,CACAC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP3N,KAGL,gBACCwO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACAhO,MAAM,aACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAalB,EAAakB,IAChC6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACfnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAG7C,kBAACzR,EAAD,CACII,MAAM,QACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC/BmR,GAAgBg2B,EAAoB35B,MAApB,WAElBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBg2B,EAAoB35B,MAApB,WACnB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,WAGjB,kBAAC,GAAD,CACC7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLF,QAAUsR,EAAQxO,aAAesO,EAAOtO,cACtCuO,GAAgBg2B,EAAoB35B,MAApB,kBAElBzN,YAAcqR,EAAQxO,aAAesO,EAAOtO,cACzCuO,GAAgBg2B,EAAoB35B,MAApB,kBACnB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,wBCwBP+1B,G,6MAvIbz5B,MAAQ,CACNrI,KAAM,GACNmgB,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAGlBC,YAAc,SAAAC,GACZ,IAAMxgB,EAAO,EAAKqI,MAAMrI,KAAKwc,QAAO,SAAApZ,GAAG,OAAIA,IAAQod,KACnD,EAAKG,SAAS,CAAE3gB,U,EAGlB0gB,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAKnL,MAAM4L,Y,EAGzDC,kBAAoB,SAAAzU,GAClB,EAAKuU,SAAS,CAAEP,WAAYhU,EAAE/F,OAAOjM,S,EAGvC0mB,mBAAqB,WAAO,IAClBV,EAAe,EAAK/X,MAApB+X,WACFpgB,EAAS,EAAKqI,MAAdrI,KACFogB,IAA4C,IAA9BpgB,EAAKlD,QAAQsjB,KAC7BpgB,EAAI,uBAAOA,GAAP,CAAaogB,KAEnB,EAAKO,SAAS,CACZ3gB,OACAmgB,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAA3U,GACtB,EAAKuU,SAAS,CAAEL,eAAgBlU,EAAE/F,OAAOjM,S,EAG3C4mB,uBAAyB,WACvB,EAAKL,UAAS,YAA+C,IAA5C3gB,EAA2C,EAA3CA,KAAMqgB,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eAC/BW,EAAO,aAAOjhB,GAGpB,OAFAihB,EAAQZ,GAAkBC,EAEnB,CACLtgB,KAAMihB,EACNZ,gBAAiB,EACjBC,eAAgB,Q,EAKtBY,aAAe,SAAAlM,GACb,EAAKA,MAAQA,G,EAGfmM,iBAAmB,SAAAnM,GACjB,EAAKoM,UAAYpM,G,yEAGT,IAAD,SACoElO,KAAKuB,MAAxErI,EADD,EACCA,KAAMmgB,EADP,EACOA,aAAcC,EADrB,EACqBA,WAAYC,EADjC,EACiCA,eAAgBC,EADjD,EACiDA,eACxD,OACE,oCACGtgB,EAAK9D,KAAI,SAACkH,EAAKwP,GACd,GAAIyN,IAAmBzN,EACrB,OACE,kBAAC,IAAD,CACEyO,IAAK,EAAKF,iBACVhmB,IAAKiI,EACL+R,KAAK,QACLta,UAAU,YACVT,MAAOkmB,EACPhmB,SAAU,EAAKymB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYpe,EAAIzH,OAAS,GAEzB8lB,EACJ,kBAAC,KAAD,CACE5mB,UAAU,WACVM,IAAKiI,EACLse,SAAoB,IAAV9O,EACV+O,QAAS,kBAAM,EAAKpB,YAAYnd,KAEhC,0BACEwe,cAAe,SAAAxV,GACC,IAAVwG,IACF,EAAK+N,SAAS,CAAEN,eAAgBzN,EAAO0N,eAAgBld,IAAO,WAC5D,EAAKge,UAAUR,WAEjBxU,EAAEhR,oBAILomB,EAAS,UAAMpe,EAAIvG,MAAM,EAAG,IAAnB,OAA8BuG,IAI9C,OAAOoe,EACL,kBAAC,KAAD,CAASvjB,MAAOmF,EAAKjI,IAAKiI,GACvBqe,GAGHA,KAGHtB,GACC,kBAAC,IAAD,CACA9kB,MAAO,CACL8Q,OAAQ,UAERkV,IAAKva,KAAKoa,aACV/mB,KAAK,OACLgb,KAAK,QACLta,UAAU,YACVT,MAAOgmB,EACP9lB,SAAUwM,KAAK+Z,kBACfS,OAAQxa,KAAKga,mBACbS,aAAcza,KAAKga,sBAGrBX,GACA,kBAAC,KAAD,CAAKtlB,UAAU,gBAAgBwR,QAASvF,KAAK4Z,WAC3C,kBAACmB,GAAA,EAAD,MADF,mB,GA/HqBC,IAAMC,WCkC/BtX,GAAmBC,MAAaC,MAAM,CAC3CjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,wCACrE0C,YAAaoN,MAAaxQ,MAAM,eAAeF,SAAS,6BAInD8Q,GAAgB,CACrBpQ,KAAM,GACN4C,YAAa,IAINib,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAIFC,GAAU,SAAC,GAAY,IAAXrrB,EAAU,EAAVA,KAAU,EACKyM,oBAAS,GADd,mBACjB8Q,EADiB,KACTC,EADS,OAE8B/Q,oBAAS,GAFvC,mBAEpB8e,EAFoB,KAEEC,EAFF,OAGuBnf,EAAe,GAAI,aAH1C,mBAGD+pB,GAHC,WAMrB1K,EAAoB,uCAAG,WAAOvrB,GAAP,SAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,yDAAH,sDAsBvB,OACI,oCACC,kBAAC,KAAD,CAMD+X,KAAK,QAEL8D,WAAYhc,GAGV,kBAAC,GAAD,CACCgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,yBAIrB,kBAAC,GAAD,CACWoD,MAAM,cACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGb,kBAAC,GAAD,CAEAA,UAAU,uBACRoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UAET,kBAAC,KAAD,CAAS9C,UAAU,MAAMpU,MAAM,kBAChC,0BAAMpD,UAAU,WAAWwR,QAAS,WAClCoO,GAAW,GACXgO,EAAyBlP,KAE3B,kBAAC0P,GAAA,EAAD,QAOA,kBAAC,KAAD,CAAS5W,UAAU,MAAMpU,MAAM,cAGhC,0BACApD,UAAU,2BACVwR,QAAS,kBAAMsc,EAAqBpP,EAAOnc,MAE3C,kBAACuiB,GAAA,EAAD,aAcV6I,GAA2B,kBAAC,GAAD,CAC1B/N,WAAYA,EACZD,QAASA,EACTrd,SAAUqrB,MA8MCuZ,GAlLO,SAAC,GAAiB,eACvC,IAAM7V,EAAWvjB,EAAS,GAAI,GAAI,YAAa,CAC9C7M,WAAY,CACVC,OAAQ,CACTwtB,eAAe,MAJqB,EASqBjgB,EAAe,GAAI,kBATxC,mBAS7Bu4B,EAT6B,KASRzG,EATQ,OAUqB1xB,oBAAS,GAV9B,mBAc9BwB,GAd8B,UAclB,uCAAG,WAAOC,EAAcC,GAArB,SAAAjC,EAAA,sEACUiyB,EAA0B,CACxDt/B,WAAY,CACXE,aAAc,CACfoB,GAAI+N,EAAO/N,KAGX4D,KAAM,CACLtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,eATD,cAatB8N,EAAQC,eAAc,GAbA,2CAAH,yDAoBbC,EAA4B,SAACH,EAAOI,GACxC,QAAIJ,EAAOzQ,MAASyQ,EAAO7N,aAAgBiO,IAkB9C,OACC,yBAAK1Q,UAAU,yBAAyBQ,MAAO,CAAEmX,QAAS,sBAAuBolB,UAAW,MAC3F,yBAAK/8B,UAAU,mCACd,wBAAIA,UAAU,yBAAd,kBAED,yBAAKA,UAAU,8DACd,yBAAKA,UAAU,4CACf,kBAAC,IAAD,CACF2Q,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACD,kBAACnS,EAAD,CACII,MAAM,QACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC/BmR,GAAgBg2B,EAAoB35B,MAApB,WAElBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBg2B,EAAoB35B,MAApB,WACnB5N,SAAU,SAAC8R,GACXT,EAAaS,GACbL,EAAgB,WAIhB,yBAAK1Q,MAAO,CACX4W,UAAW,SAIb,wBAAIpX,UAAU,mBAAd,WAED,kBAACmnC,GAAD,MACG,kBAAC,IAAD,CACA3mC,MAAO,CACNiV,QAAS,QACT2B,UAAW,QAEZ9X,KAAK,UACLkS,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClC7R,SAAU+Q,EAA0BH,EAAOI,GAC3Ce,QAAST,GART,eAmBS,yBAAKhR,UAAU,6CAE3B,yBAAKA,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,+CAMf,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACZU,YAAY,sBACZoxB,SAAU,SAAAvyB,GAAK,OAAIgC,QAAQC,IAAIjC,QAe7B,yBAAKS,UAAU,uCAWxB,yBAAKA,UAAU,uCACbqxB,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAK,kBAAC,GAAD,CAASsB,KAAMivB,EAASjvB,OACrEivB,EAAS3jB,WAAa,kBAACshB,GAAD,Y,wEC3UrBoY,IAFa3uB,KAAXD,O,oLAGI,IAAD,EACwDvM,KAAK4J,MAA5DwxB,EADD,EACCA,iBAAkBC,EADnB,EACmBA,qBAAsBC,EADzC,EACyCA,WAEhD,OACE,oCACE,yBAAK/gB,IAAK+gB,EAAYvnC,UAAU,oBAC9B,2BACEwT,MAAM,OACNE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,YACV0nC,QAAQ,QAER,+BACE,4BACE,wBAAI7zB,OAAQ,MAEd,4BACE,4BACE,2BACEL,MAAO,IACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,YACV0nC,QAAQ,UACRlnC,MAAO,CAAEC,aAAc,kBAEvB,+BACE,4BACE,4BACE,2BACE+S,MAAO,IACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,eAEV,+BACE,4BACE,4BACE,2BACEwT,MAAO,OACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,OACNnuB,UAAU,MACVQ,MAAO,CACLmnC,aAAc,iBACdC,cAAe,OACfprB,aAAc,SAGhB,2BACEhc,MAAO,CACLgc,aAAc,SAGhB,4BACE,wBACEhc,MAAO,CACLqX,SAAU,GACVf,MAAO,UAEP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,SAGb,0BACEpX,MAAO,CACLiV,QAAS,eACToC,SAAU,OACVQ,WAAY,MACZvB,MAAO,SALX,cAUA,0BACEtW,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,SAGRuwB,EAAiBjlC,KAAjB,MAEH,0BACE5B,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,SAGRuwB,EAAiBjlC,KAAjB,SAEH,0BACE5B,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,SAGRuwB,EAAiBjlC,KAAjB,OAEH,0BACE5B,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,OACP0F,aAAc,SAGf6qB,EAAiBjlC,KAAjB,QAIL,wBACE5B,MAAO,CACLsnC,cAAe,OAEjB3Z,MAAM,SAEL,IACD,yBACE5iB,IAAG,UAAK1I,EAAOqK,QAAZ,oBACH1M,MAAO,CACLgT,MAAO,SAETlQ,IAAI,OACJoQ,OAAQ,QAMlB,2BACEF,MAAO,OACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,OACNnuB,UAAU,OAEV,+BACE,wBAAIA,UAAU,iBACZ,wBAAI6T,OAAQ,MAEd,4BACE,wBAAIA,OAAQ,KAEd,6BACA,6BACA,4BACE,wBACErT,MAAO,CACLqX,SAAU,GACVf,MAAO,UAEP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,SAGb,0BACEpX,MAAO,CACLiV,QAAS,eACToC,SAAU,OACVQ,WAAY,MACZvB,MAAO,SALX,YAUA,0BACEtW,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,SAGRwwB,EAAqB35B,MACpB25B,EAAqBllC,MACrBxB,OAAOC,KACLymC,EAAqBllC,MACrBtB,OAAS,GACXwmC,EAAqBllC,KAArB,cAIJ,0BACE5B,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,SAGRwwB,EAAqB35B,MACpB25B,EAAqBllC,MACrBxB,OAAOC,KACLymC,EAAqBllC,MACrBtB,OAAS,GACXwmC,EAAqBllC,KAArB,SAIJ,0BACE5B,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,SAGRwwB,EAAqB35B,MACpB25B,EAAqBllC,MACrBxB,OAAOC,KACLymC,EAAqBllC,MACrBtB,OAAS,GACXwmC,EAAqBllC,KAArB,OAIJ,0BACE5B,MAAO,CACLiV,QAAS,QACT2B,UAAW,OACXS,SAAU,OACVQ,WAAY,MACZvB,MAAO,SAGRwwB,EAAqB35B,MACpB25B,EAAqBllC,MACrBxB,OAAOC,KACLymC,EAAqBllC,MACrBtB,OAAS,GACXwmC,EAAqBllC,KAArB,QAMN,wBACE5B,MAAO,CACLqX,SAAU,GACVf,MAAO,UAEP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,UAGb,wCAVF,KAWGyvB,EAAiBjlC,KAAjB,UACD,6BACA,8BACGilC,EAAiBjlC,KAAjB,cAGC6V,IACEovB,EAAiBjlC,KAAjB,cAGAoK,OAAO,yCAkB5C66B,EAAiBjlC,MAChBilC,EAAiBjlC,KAAjB,UACAilC,EAAiBjlC,KAAjB,SAAkCtB,OAAS,GACzC,2BACE0S,MAAM,OACNE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,YACV0nC,QAAQ,QAER,+BACE,4BACE,4BACE,2BACEl0B,MAAO,IACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,YACV0nC,QAAQ,WAER,+BACE,6BACA,wBAAI1nC,UAAU,gBACZ,wBAAI6T,OAAQ,MAEd,wBAAI7T,UAAU,iBACZ,wBAAI6T,OAAQ,MAEd,4BACE,4BACE,2BACEL,MAAO,IACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,eAEV,+BACE,wBACEQ,MAAO,CACLkX,gBAAiB,SAGnB,wBACElX,MAAO,CACLqX,SAAU,GACVf,MAAO,UACPuB,WAAY,SACZwvB,WAAY,IACZC,cAAe,MACfnwB,QAAS,oBAEXnE,MAAM,MACN2a,MAAM,QAVR,QAcA,wBACE3tB,MAAO,CACLqX,SAAU,GACVf,MAAO,UACPuB,WAAY,SACZwvB,WAAY,IACZC,cAAe,UAEjB3Z,MAAM,QARR,YAYA,wBACE3tB,MAAO,CACLqX,SAAU,GACVf,MAAO,UACPuB,WAAY,SACZwvB,WAAY,IACZC,cAAe,UAEjB3Z,MAAM,QARR,cAYA,wBACE3tB,MAAO,CACLqX,SAAU,GACVf,MAAO,UACPuB,WAAY,SACZwvB,WAAY,IACZC,cAAe,UAEjB3Z,MAAM,UAMTkZ,EAAiBjlC,KAAjB,SAAkCf,KACjC,SAACQ,GACC,OACE,oCACE,4BACE,wBACEgS,OAAQ,EACRrT,MAAO,CACLwW,WAAY,WAEd+wB,QAAS,KAGb,4BACE,wBAAIl0B,OAAQ,GAAIk0B,QAAS,KAE3B,4BACE,wBACEv0B,MAAM,MACNhT,MAAO,CACLqX,SAAU,GACVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACfnwB,QAAS,UAEX3X,UAAU,WAET6B,EAAKhC,MAGR,wBACEW,MAAO,CACLqX,SAAU,GACVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACfnwB,QAAS,UAEXwW,MAAM,QAELtsB,EAAK6D,UAER,wBACElF,MAAO,CACLqX,SAAU,GACVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACfnwB,QAAS,UAEXwW,MAAM,QAELtsB,EAAKmmC,WAGR,wBACExnC,MAAO,CACLqX,SAAU,GAEVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACfnwB,QAAS,UAEXwW,MAAM,QAELtsB,EAAK6D,SAAW7D,EAAKmmC,gBAOlC,4BACE,wBACEn0B,OAAQ,EACRk0B,QAAS,EACTvnC,MAAO,CACLmnC,aAAc,yBAQ5B,4BACE,wBAAI9zB,OAAQ,YAS9B,2BACEL,MAAM,OACNE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,YACV0nC,QAAQ,QAER,+BACE,4BACE,4BACE,2BACEl0B,MAAO,IACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,YACV0nC,QAAQ,WAER,2BACElnC,MAAO,CACLgc,aAAc,SAGhB,4BACE,4BAEE,2BACEhc,MAAO,CACLgc,aAAc,OACdpF,UAAW,QAEb5D,MAAO,IACPE,OAAQ,EACR8zB,YAAa,EACbC,YAAa,EACbtZ,MAAM,SACNnuB,UAAU,eAEV,+BACE,4BACE,wBACEQ,MAAO,CACLqX,SAAU,GACVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,UANf,eAWA,wBACEpX,MAAO,CACLqX,SAAU,GACVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,QACXqwB,WAAY,SACZ5vB,WAAY,MACZmE,aAAc,OAEhBhJ,MAAO,IAEN6zB,EAAiBjlC,KAAjB,QAGL,4BACE,wBACE5B,MAAO,CACLqX,SAAU,GACVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,UANf,uBAWA,wBACEpX,MAAO,CACLqX,SAAU,GACVf,MAAO,UACP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,UAGZyvB,EAAiBjlC,MAClBilC,EAAiBjlC,KAAjB,MAAiC,KAE7BilC,EAAiBjlC,MAGX,IAFNilC,EAAiBjlC,KAAjB,eAFA,OACA,WAMEilC,EAAiBjlC,MACjBilC,EAAiBjlC,KAAjB,kBAIV,4BACE,wBACE5B,MAAO,CACLqX,SAAU,GACVf,MAAO,OACP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,UAGb,gEAEF,wBACEpX,MAAO,CACLqX,SAAU,GACVf,MAAO,OACP+wB,WAAY,IACZC,cAAe,MACflwB,UAAW,UAGb,gCACGyvB,EAAiBjlC,KAAjB,MACCilC,EAAiBjlC,KAAjB,gBACA,qB,GApnBP6kB,IAAMC,YAmwBtBghB,GA3HM,SAAC,GAAyC,IAAvC3lC,EAAsC,EAAtCA,GAAI4lC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAAkB,EACT35B,EACjD,GACA,eAH0D,mBACrD44B,EADqD,KACnCgB,EADmC,KAKtDC,EAAeC,mBAEf/hB,EAAMS,IAAMuhB,YAP0C,EAcE/5B,EAC5D,GACA,yBAhB0D,mBAcrD64B,EAdqD,KAc/BmB,EAd+B,KAmB5Dr6B,qBAAU,YACa,uCAAG,sBAAAE,EAAA,sEACWm6B,EAA8B,IADzC,yDAAH,qDAIrBC,KACC,IAEHt6B,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf+5B,EAAuB,CAC3BpnC,WAAY,CACVE,aAAc,CACZoB,SAJe,2CAAH,qDAUpBomC,KACC,CAACpmC,IAEJhB,QAAQC,IAAI,mBAAoB6lC,GAMhC,OACE,kBAAC,KAAD,CACEjkC,MAAM,UACNuc,QAASyoB,EACT/jB,UAAW,CACT/S,OAAQ,IACRqG,QAAS,QAEXnX,MAAO,CACLuT,IAAK,QAEPqQ,SAAU,kBAAM+jB,GAAe,IAC/B30B,MAAO,OACP8Q,OAAO,QACPH,KAAM,WAjBRyb,OAAOgJ,SAkBLjc,QAAQ,GAEP0a,EAAiB35B,WAAa,kBAAC,KAAD,MAC9B25B,EAAiBjlC,MAAQxB,OAAOC,KAAKwmC,EAAiBjlC,MAAMtB,OAAS,GACpE,oCACE,yBACEN,MAAO,CACLiV,QAAS,OACTjC,MAAO,OACPkC,eAAgB,WAChBiC,QAAS,wBAGX,kBAAC,KAAD,CACEkxB,UAAWriB,EACXrJ,EAAG,GACHF,EAAG,GACHsQ,SAAQ,gBAAW8Z,EAAiBjlC,KAAjB,UAAX,YACR8J,QAAS,CACPgP,YAAa,QAGd,gBAAG4tB,EAAH,EAAGA,MAAH,OACC,kBAAC,IAAD,CACEtoC,MAAO,CACL+W,YAAa,QAEf/F,QAASs3B,EAET9oC,UAAU,6BACV+C,KAAM,kBAACgmC,GAAA,EAAD,OAPR,sBAaJ,kBAAC,KAAD,CACEC,cAAc,gBACdC,QAAS,kBACP,kBAAC,IAAD,CAEEjpC,UAAU,6BACV+C,KAAM,kBAACmmC,GAAA,EAAD,OAHR,UAQF3C,QAAS,kBAAM+B,EAAaa,YAGhC,kBAAC,GAAD,CACE3iB,IAAK8hB,EACLf,WAAY/gB,EACZ8gB,qBAAsBA,EACtBD,iBAAkBA,OC5oBf1Q,GArHa,SAAC,GAKf,IAJVC,EAIS,EAJTA,UACAlxB,EAGS,EAHTA,SACA7D,EAES,EAFTA,KACA2zB,EACS,EADTA,UACS,EAGwC/mB,EAC7C,GACA,qBALK,mBAGF8jB,EAHE,KAGkBsE,EAHlB,OAOqBhoB,mBAAS,IAP9B,mBAOOioB,GAPP,aAQyBjoB,oBAAS,GARlC,mBAQSkoB,GART,aASiCloB,mBAAS,IAT1C,mBASFmoB,EATE,aAU6CnoB,mBAAS2mB,IAVtD,6BAuCT,OAzBApnB,qBAAU,WACN2oB,GAAa,GACS,uCAAG,4BAAAzoB,EAAA,sEACCuoB,EAAmB,CACrC51B,WAAY,CACRE,aAAc,CACVoB,GAAIq0B,MAJK,OACfnyB,EADe,OAUrBqyB,EAAWryB,GACXsyB,GAAa,GAXQ,2CAAH,oDAatBK,KACD,IAQH71B,QAAQC,IAAI,gBAAiBw1B,GAEzB,oCAEI,kBAAC,KAAD,CAAUvlB,QAAS8gB,EAAmB7kB,WACjC6kB,EAAmBnwB,MAAQxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,GACtE,yBAAKd,UAAU,YAAYM,IAAK,IAG5B,yBAEIiL,IAAKgnB,EAAmBnwB,KAAnB,OAAoCmwB,EAAmBnwB,KAAnB,YACzCkB,IAAI,MACJ9C,MAAO,CACH8W,OAAQ,aAGhB,yBAAKtX,UAAU,kBACX,4BAGKuyB,EAAmBnwB,KAAnB,MAEL,0CAEgBsD,GAEhB,4BAEK7D,EAAI,gBC7E7B2W,GAAWC,KAAXD,OAGF5I,GAAmBC,MAAaC,MAAM,IA2BtCkU,GAAwB,SAACpN,GAC3BD,KAAatJ,MAAM,CACfuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBA0cnCopB,GA7bG,SAAC,GAAuE,IAArEn3B,EAAoE,EAApEA,SAAU6W,EAA0D,EAA1DA,WAAYD,EAA8C,EAA9CA,QAASypB,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UAAuB,EAClC56B,EAAe,GAAI,eADe,mBAC9E66B,EAD8E,KAC5DC,EAD4D,KAGrFhoC,QAAQC,IAAI,cAAeuH,GAH0D,MAK7B8F,mBAAS,IALoB,mBAK9E+zB,EAL8E,KAKxDC,EALwD,OAMnCh0B,mBAAS,IAN0B,mBAM9Ei0B,EAN8E,KAM3DC,EAN2D,OAQzCl0B,mBAAS,IARgC,mBAQ9Em0B,EAR8E,KAQ9DC,EAR8D,OAS/Cp0B,mBAAS,IATsC,mBAS9Eq0B,EAT8E,KASjEC,EATiE,OAWlC10B,EAC/C,GACA,eAbiF,mBAW9E20B,EAX8E,KAW5DC,EAX4D,OAgBxC50B,EAAe,GAAI,YAhBqB,mBAgB9E60B,EAhB8E,KAgB/DC,EAhB+D,OAkB/C10B,mBAAS,IAlBsC,gCAmBrDA,mBAAS,KAnB4C,gCAoB/CA,oBAAS,IApBsC,mBAoB9Eu5B,EApB8E,KAoBjED,EApBiE,KAwB/E93B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,6DAEjB/M,QAAQC,IAAI,SAAUuH,GAFL,SAIUwgC,EAAuB,CAC9CtoC,WAAY,CACRE,aAAc,CACVoB,GAAIwG,EAASxG,KAGrB4D,KAAM,CACF8E,eAAgB,CACZzD,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MACdE,SAAU6I,EAAO7I,SACjBC,SAAU4I,EAAO5I,SACjBP,UAAWmJ,EAAOnJ,UAClBC,SAAUkJ,EAAOlJ,SACjBE,KAAMw7B,GAAqB/5B,EAAQ,eAAR,KAC3B1B,QAASu7B,GAAwB75B,EAAQ,eAAR,SAErChC,SAAUgC,EAAShC,SACnBiE,WAAYjC,EAASiC,cAtBZ,QAIXw+B,EAJW,SA4B2B,OAAxBA,EAAa3jC,QA9ER+Q,OA+ErB6I,EA9ER9I,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiFjCiB,EAJgB,WAClB,OAAOsxB,EAAUhoC,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAG7CyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAIulB,EAAUtxB,GAA5BnX,OAAA,IAAAA,CAAA,GAAyC4oC,IACvDC,EAXwC,uBAWjBJ,EAAUrnC,MAAM,EAAG+V,IAXF,CAWU8L,GAXV,aAW0BwlB,EAAUrnC,MAAM+V,EAAQ,KAChGqxB,EAAaK,IAIbzlB,KAGJzT,EAAQC,eAAc,GACtBoP,GAAW,GAhDM,iCAlDO,IAAChJ,IAkDR,OAAH,wDAqDZ+sB,GAAe,SAACpkC,GAClBwjC,EAAqBxjC,IAGnBqkC,GAAkB,SAACrkC,GACrBsjC,EAAwBtjC,IAG5B6O,qBAAU,YACY,uCAAG,8BAAAE,EAAA,sEACY+0B,EAAuB,IADnC,QACXQ,EADW,SAIKA,EAAe/iC,OAAS,IAEpCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACvC,MAAO,CACH9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGtBojC,EAAkBD,IAZL,2CAAH,qDAgBlBc,KACD,IAGH11B,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACYi1B,EAAoB,CAC1CtiC,WAAY,CACRE,aAAc,CACVkG,QAASu7B,MAJP,QACRmB,EADQ,SAUKA,EAAYjjC,OAAS,IAE9BoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACjC,MAAO,CACH/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGnBsjC,EAAeD,IAlBL,2CAAH,qDAsBfc,KACD,CAACpB,IAQJ,IAAMxT,GAAe,SAAC7d,GAClBqO,GAAW,IAef,OACI,kBAAC,IAAD,CACIjP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJlH,EAASkC,eAAiBlC,EAASkC,eAAiB,MAG5D,gBACG6F,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhO,MAAM,eACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,UAGdxI,UAAW,CACP/S,OAAQ,IACRqG,QAAS,QAEbnE,MAAO,QAIP,yBAAKxT,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,aACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QAAUsR,EAAQ9J,WAAa4J,EAAO5J,YAChC6J,GAAgBs4B,EAAiBj8B,MAAjB,gBAEtBzN,YAAcqR,EAAQ9J,WAAa4J,EAAO5J,YACpC6J,GAAgBs4B,EAAiBj8B,MAAjB,gBACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAKlR,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QAAUsR,EAAQ7J,UAAY2J,EAAO3J,WAC/B4J,GAAgBs4B,EAAiBj8B,MAAjB,eAEtBzN,YAAcqR,EAAQ7J,UAAY2J,EAAO3J,WACnC4J,GAAgBs4B,EAAiBj8B,MAAjB,eACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,iBAYhC,yBAAKlR,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QAAUsR,EAAQzJ,OAASuJ,EAAOvJ,QAC5BwJ,GAAgBs4B,EAAiBj8B,MAAjB,YAEtBzN,YAAcqR,EAAQzJ,OAASuJ,EAAOvJ,QAChCwJ,GAAgBs4B,EAAiBj8B,MAAjB,YACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAKlR,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QAAUsR,EAAQ1J,OAASwJ,EAAOxJ,QAC5ByJ,GAAgBs4B,EAAiBj8B,MAAjB,YAEtBzN,YAAcqR,EAAQ1J,OAASwJ,EAAOxJ,QAChCyJ,GAAgBs4B,EAAiBj8B,MAAjB,YACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,cAOhC,yBAAKlR,UAAU,mBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACIC,eAAiBopC,EAAiBj8B,MAAjB,cAA8C,QAAU,GACzElN,KAAMmpC,EAAiBj8B,MAAjB,eAGN,kBAAC,KAAD,CACI7N,aAAc8Q,EAAOjJ,QACrB48B,gBAAiB,kBAAC,KAAD,CAAOxhC,YAAY,mBAAmBO,MAAOwS,KAAMI,yBACpEoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,GACV1pB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IAE9F+oB,EAAiBz1B,MACdy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAChB,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAUhE,yBAAKG,UAAU,yBACX,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAEIC,eAAiBopC,EAAiBj8B,MAAjB,WAA2C,QAAU,GACtElN,KAAMmpC,EAAiBj8B,MAAjB,YAGN,kBAAC,KAAD,CACI7N,aAAc8Q,EAAOhJ,KACrBtH,UAAU,kBACVikC,gBAAiB,kBAAC,KAAD,CAAOxhC,YAAY,yBAAyBO,MAAOwS,KAAMI,yBAC1EoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAAUkkC,GACVzpB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IAE9FipB,EAAc31B,MACX21B,EAAclhC,KAAKtB,OAAS,GAC5BoiC,EAAY7hC,KAAI,SAAC+Y,GACb,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,aAQpE,yBAAKW,MAAO,CACR4W,UAAW,UAKf,yBAAKpX,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,UACNE,MAAO+Q,EAAO7I,SACd5H,KAAK,WACLF,QAAUsR,EAAQxJ,UAAYsJ,EAAOtJ,WAC/BuJ,GAAgBs4B,EAAiBj8B,MAAjB,eAEtBzN,YAAcqR,EAAQxJ,UAAYsJ,EAAOtJ,WACnCuJ,GAAgBs4B,EAAiBj8B,MAAjB,eACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,gBAI5B,yBAAKlR,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,YACNE,MAAO+Q,EAAO5I,SACd7H,KAAK,WACLF,QAAUsR,EAAQvJ,UAAYqJ,EAAOrJ,WAC/BsJ,GAAgBs4B,EAAiBj8B,MAAjB,eAEtBzN,YAAcqR,EAAQvJ,UAAYqJ,EAAOrJ,WACnCsJ,GAAgBs4B,EAAiBj8B,MAAjB,eACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,iBAOhC,yBAAK1Q,MAAO,CACR4W,UAAW,UAKNrO,EAAShC,UAAYgC,EAAShC,SAASjG,OAAS,GAC7C,wBAAId,UAAU,mBAAd,YAMX+I,EAAShC,UAAYgC,EAAShC,SAASjG,OAAS,GAAK,oCAEjDiI,EAAShC,SAAS1F,KAAI,SAAAQ,GACnC,OAAO,kBAAC,GAAD,CACH+0B,UAAW/0B,EAAKW,IAChBkD,SAAU7D,EAAK6D,SACf7D,KAAMA,EACN2zB,UAAW3zB,EAAK2zB,gBAOZ,yBAAKh1B,MAAO,CACR4W,UAAW,UAEvB,kBAAC,IAAD,CACA5F,QAAS,kBAAM22B,GAAe,IAC9BnoC,UAAU,8BAFV,oBAQR,yBAAKQ,MAAO,CACQgc,aAAc,UAGlC,kBAAC,GAAD,CACAja,GAAIwG,EAASxG,GACb4lC,eAAgBA,EACfC,YAAaA,UC1blB1qB,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG3e,IAAXuuB,QACA9U,GAAgBC,KAAhBD,YAEF+G,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAYvC0B,GAAWC,KAAXD,OAQFiV,GAAU,SAAC,GAAiD,IAA/CrrB,EAA8C,EAA9CA,KAAMgnC,EAAwC,EAAxCA,aAAc72B,EAA0B,EAA1BA,MAA0B,EACjC1D,oBAAS,GADwB,mBACxD8Q,EADwD,KAC/CC,EAD+C,OAEL/Q,oBAAS,GAFJ,mBAExD8e,EAFwD,KAEjCC,EAFiC,OAGZnf,EACjD,GACA,eAL6D,gCAOAA,EAC7D,GACA,sBAT6D,mBAOhCswB,GAPgC,WAYzDjpB,EAAUC,eAmBVmpB,EAAuB,uCAAG,WAAOxgB,EAAQnc,EAAI48B,GAAnB,qBAAA7wB,EAAA,sEACKywB,EAA6B,CAC9D99B,WAAY,CACVC,OAAQ,CACNwoC,eAAgBvK,GAElBh+B,aAAc,CACZoB,SAPwB,QACxB88B,EADwB,SAa8B,OAAhCA,EAAqBx5B,QAC/C4Z,GAAwB,wBAMlB1H,EAJgB,WACpB,OAAO3V,EAAKf,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,GAG/ByoB,GACdzpB,QAAQC,IAAI,WAAYkd,EAAQ3G,GAG1B8L,EAAcjjB,OAAOkjB,OAAO,GAAI1hB,EAAK2V,GAAQ,CAAElS,OAAQs5B,IACvDG,EAZ0D,uBAa3Dl9B,EAAKJ,MAAM,EAAG+V,IAb6C,CAc9D8L,GAd8D,aAe3DzhB,EAAKJ,MAAM+V,EAAQ,KAExBxW,QAAQC,IAAI,kBAAmB89B,EAAiB,QAAS8J,GACzDA,EAAa9J,KA9EY1oB,EAiFvB,sDAhFND,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBA2Cb,iCA/CJ,IAACF,IA+CG,OAAH,0DA4F7B,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,YACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WAEPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,KACpCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YATZ,IAYIlT,OAMV,kBAAC,GAAD,CACEhB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WAEPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,KACpCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,WACNob,UAAU,eACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,UACNob,UAAU,eACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACEle,MAAO,CACL6X,WAAY,IACZvB,MAAO,SAGR1S,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BAMrC,kBAAC,GAAD,CACEpJ,MAAM,cACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEmuB,MAAM,QACN/qB,MAAM,SACNob,UAAU,SACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACGjM,GAAS,YAAaF,GACrB,kBAAC,KAAD,CACEkF,QAAS,kBA9JF,SAACiH,EAAQnc,GAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAKtC,KAAN,CACEuR,QAAS,kBAAM0tB,EAAwBxgB,EAAQnc,EAAI,YACnDjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,WAQA,kBAAC,IAAK5kB,KAAN,CACEuR,QAAS,kBAAM0tB,EAAwBxgB,EAAQnc,EAAI,eACnDjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,cAQA,kBAAC,IAAK5kB,KAAN,CACEuR,QAAS,kBAAM0tB,EAAwBxgB,EAAQnc,EAAI,oBACnDjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,qBAQA,kBAAC,IAAK5kB,KAAN,CACEuR,QAAS,kBAAM0tB,EAAwBxgB,EAAQnc,EAAI,aACnDjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,aAQA,kBAAC,IAAK5kB,KAAN,CACEuR,QAAS,kBAAM0tB,EAAwBxgB,EAAQnc,EAAI,WACnDjC,IAAI,IACJyC,KAAM,kBAAC8hB,GAAA,EAAD,OAHR,WA2HyB0a,CAAe7gB,EAAQA,EAAOnc,KAC7CiV,UAAU,eAEV,uBAAGM,KAAK,MACN,0BAEEtX,MAAO,CACLqX,SAAU,SAGXzT,EACD,0BACE5D,MAAO,CACL6W,WAAY,MACZQ,SAAU,SAGZ,kBAAC2nB,GAAA,EAAD,UAMR,uBAAG1nB,KAAK,MACN,0BAEEtX,MAAO,CACLqX,SAAU,SAGXzT,EACD,0BACE5D,MAAO,CACL6W,WAAY,MACZQ,SAAU,iBA6D3B8V,GACC,kBAAC,GAAD,CACE/N,WAAYA,EACZD,QAASA,EACT5W,SAAU4kB,EACV0b,UAAWjnC,EACXgnC,aAAcA,MAkVT/1B,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAvUM,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACP1D,mBAAS,IADF,mBAClCw6B,EADkC,KACvBD,EADuB,KAEnCtzB,EAAUC,eAFyB,EAIEtH,EAAe,GAAI,aAJrB,mBAIlCk7B,EAJkC,KAItBtE,EAJsB,OAKmBx2B,mBAAS,IAL5B,mBAKlC81B,EALkC,KAKVC,EALU,OAMqB/1B,mBAAS,IAN9B,mBAMlC+6B,EANkC,KAMTC,EANS,OAQPh7B,mBAAS,IARF,mBAQlCjI,EARkC,KAQvBqS,EARuB,OASXpK,mBAAS,IATE,mBASlChI,EATkC,KASzBqS,EATyB,KAsBzC3X,QAAQC,IAAI,aAAcmoC,GAE1Bv7B,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACM+2B,EAAqB,CACzCpkC,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,KAChBuzB,YAC6B,QAA3BnF,EAAmC,GAAKA,EAC1CnrB,eAAgB5S,EAChB6S,aAAc5S,EACd+iC,wBAAqD,QAA5BA,EAAoC,GAAKA,MAVxD,OACVG,EADU,OAehBX,EAAaW,GAfG,2CAAH,qDAiBfC,KACC,CAACrF,EAAwB/9B,EAAWC,EAAS+iC,IA3CP,MA6CL/6B,mBAAS,IA7CJ,mBA6ClCo7B,EA7CkC,KA6CtBC,EA7CsB,OA8CIz7B,EAAe,GAAI,cA9CvB,mBA8CrB07B,GA9CqB,WAgDzC/7B,qBAAU,YACQ,uCAAG,8BAAAE,EAAA,sEACK67B,EAAsB,CAC1ClpC,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALL,QACXwzB,EADW,SAWFA,EAAQjpC,OAAS,IAExBspC,EAAoBL,EAAQ1oC,KAAI,SAACQ,GACrC,MAAO,CACLhC,KAAMgC,EAAKhC,KACXN,MAAOsC,EAAKhC,SAIhBqqC,EAAc,CAAC,CAACrqC,KAAM,aAAcN,MAAO,QAA9B,oBAAwC6qC,MApBtC,2CAAH,qDAuBhBC,KACC,IAEH9oC,QAAQC,IAAI,eAAgByoC,GAI5B,IA4EM7nC,EAlBAinC,GAAaA,EAAUvoC,OAAS,EAClBuoC,EAAUhoC,KAAI,SAACQ,GAC7B,MAAO,CACLwI,UAAWxI,EAAKwI,UAChBxK,KAAMgC,EAAKhC,KACX4K,aAAc5I,EAAK4I,aACnBG,aAAc/I,EAAK+I,aACfqN,IAAOpW,EAAKyoC,aAAa99B,OAAO,wBAChC,GACJ3G,OAAQhE,EAAKgE,OACbG,MAAOnE,EAAKmE,UAKJ,GAKhB,OACE,oCAIE,yBAAKhG,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,UAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,6BACZjB,SAAU,SAAC8R,GAAD,OA5FD,SAAChS,GACpB,GAAIoqC,EAAWvnC,KAAKtB,OAAS,EAAG,CAC9B,IAAMypC,EAAeZ,EAAWvnC,KAAKuf,QAAO,SAAC9f,GAE3C,OADAN,QAAQC,IAAI,aAAaK,GAClB,WAAIA,EAAKwI,UAAUgQ,eAAgB5Y,SAASlC,EAAM8a,gBAAmB,UAAGxY,EAAKwI,UAAUgQ,eAAgB5Y,SAASlC,EAAM8a,kBAI/H+uB,EAAamB,IAoFYxb,CAAaxd,EAAE/F,OAAOjM,WAK3C,yBACEiB,MAAO,CACLiV,QAAS,OACTE,WAAY,WAGb0zB,GAAaA,EAAUvoC,OAAS,GAC/B,oCACE,yBACEN,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZ4B,YAAa,SAGf,kBAAC,WAAD,CACEgW,SAAU,aACVnrB,KAAMA,EACNwK,QAnEF,CACd,CAAEvN,MAAO,aAAciB,IAAK,aAC5B,CAAEjB,MAAO,OAAQiB,IAAK,QACtB,CAAEjB,MAAO,WAAYiB,IAAK,gBAC1B,CAAEjB,MAAO,UAAWiB,IAAK,gBACzB,CAAEjB,MAAO,cAAeiB,IAAK,SAC7B,CAAEjB,MAAO,SAAUiB,IAAK,YA0DV,iBAOA,0BACEE,MAAO,CACLsW,MAAO,UACPO,WAAY,SAGd,kBAACsoB,GAAA,EAAD,SAMPltB,GAAS,YAAaF,IACrB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsE,EAAQ7R,KAAK,sBAJ9B,aAYN,yBACEzD,MAAO,CACL4W,UAAW,QAEbpX,UAAU,iCAEV,8BAEA,6BACE,kBAAC,GAAD,CACEQ,MAAO,CACLgT,MAAO,IACPsD,MAAO,WAETrX,SAlOwB,SAAC8R,GACnChQ,QAAQC,IAAI,YAAayW,IAAO1G,EAAE,IAAI/E,UACtCjL,QAAQC,IAAI,UAAWyW,IAAO1G,EAAE,IAAI/E,UACpC,IAAM5F,EAAY,IAAIgT,KAAK3B,IAAO1G,EAAE,IAAI/E,UAClC3F,EAAU,IAAI+S,KAAK3B,IAAO1G,EAAE,IAAI/E,UAEtCyM,EAAarS,GAEbsS,EAAWrS,IA2ND4U,OAAQ,OACR1B,UAAU,IAGXkwB,GAAcA,EAAWnpC,OAAS,GACjC,oCACE,kBAAC,KAAD,CACEkZ,YAAU,EACVxZ,MAAO,CACLC,aAAc,OACdqW,MAAO,UACPtD,MAAO,QACP+D,YAAa,QAEf7W,YAAY,kBACZuZ,iBAAiB,WACjBxa,SA/JmB,SAACF,GAClCsqC,EAA2BtqC,IAgKbwa,UAAU,EACVG,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,GAErC7a,aAAc,OAEbyqC,EAAW5oC,KAAI,SAAC+Y,GACf,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,WAMpD,kBAAC,KAAD,CACEW,MAAO,CAAEC,aAAc,OAAQqW,MAAO,UAAWtD,MAAO,SACxD9S,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAxLsB,SAACF,GACjCqlC,EAA0BrlC,IAwLhBC,aAAc,MACdua,UAAU,GAlLO,CAC3B,CACEla,KAAM,aACNN,MAAO,OAET,CACEM,KAAM,UACNN,MAAO,WAET,CACEM,KAAM,aACNN,MAAO,cAET,CACEM,KAAM,oBACNN,MAAO,mBAGT,CACEM,KAAM,YACNN,MAAO,YAET,CACEM,KAAM,SACNN,MAAO,WA4JuB8B,KAAI,SAAC+Y,GACzB,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMpD,yBAAKG,UAAU,uCASf,yBAAKA,UAAU,uCACZ2pC,EAAWh8B,MAAQ07B,EAAUvoC,OAAS,GACrC,kBAAC,GAAD,CACEyR,MAAOA,EACP62B,aAAcA,EACdhnC,KAAMinC,IAGTM,EAAWj8B,WAAa,kBAACshB,GAAD,MAExB2a,EAAWh8B,QAAU07B,EAAUvoC,OAAS,IACvC,kBAAC,GAAD,CAAOsC,MAAM,yB,kDCrpBVonC,mBA7CY,SAAC,GAA4C,IAA1CpW,EAAyC,EAAzCA,eAAgBF,EAAyB,EAAzBA,YAC5C,OACE,yBACE1zB,MAAO,CAEL23B,cAAe,QAEjBn4B,UAAU,6CAEV,wBAAIA,UAAU,kCACZ,8BACE,kBAACyqC,GAAA,EAAD,OAFJ,qBAMA,yBAAKzqC,UAAU,qDACZk0B,GACCA,EAAYpzB,OAAS,GACrBozB,EAAY7yB,KAAI,SAACQ,GACf,OACE,kBAACu2B,GAAD,CACEhE,eAAgBA,EAChBF,YAAaA,EACb0C,UAAW/0B,EAAKW,IAChBkD,SAAU7D,EAAK6D,SACf7D,KAAMA,EACN2zB,UAAW3zB,EAAK2zB,iBAKrBtB,EAAYpzB,OAAS,IACtB,yBACEN,MAAO,CACL6W,WAAY,SAGd,kBAAC,GAAD,CAAOjU,MAAM,mBAAmByQ,OAAQ,YCxC5C2E,GAAWC,KAAXD,OAoFO4Z,GAlFA,SAAC,GAAuD,IAArDsY,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,wBAAqC,EACpC97B,mBAAS,IAD2B,mBAC3D3C,EAD2D,KAClDklB,EADkD,OAEpBviB,mBAAS,IAFW,mBAE1C2jB,GAF0C,aAGzB/jB,EAAe,GAAI,gBAHM,mBAG3DgkB,EAH2D,KAG/CnB,EAH+C,KAyDlE,OA5BAljB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACagjB,EAAmB,CAC1CrwB,WAAW,CACPC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALZ,QACRmc,EADQ,SAWMA,EAAa5xB,OAAS,IAEhC6xB,EAAeD,EAAarxB,KAAI,SAAC6D,GACnC,OAAO,eACAA,EADP,CAEI3F,MAAO2F,EAAM3C,GACb1C,KAAK,GAAD,OAAKqF,EAAMiC,UAAX,YAAwBjC,EAAMkC,eAG1CgqB,EAAWuB,IApBD,2CAAH,qDAwBfC,KACD,IAGC,kBAAC,KAAD,CAAUnhB,QAASghB,EAAW/kB,WAC1B,kBAAC,KAAD,CACIsM,YAAU,EACVM,KAAK,SACL9Z,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,oBACZuZ,iBAAiB,WACjBxa,SA5DZ,SAAkB2a,GACd,GAAIlO,GAAWA,EAAQpL,OAAS,EAAG,CAC/B,IAAM8pC,EAAe1+B,EAAQ6V,MAAK,SAAAlgB,GAAI,OAAIA,EAAKtC,QAAU6a,KACrDwwB,GACAD,EAAwBC,GAGhCpY,EAAmBpY,GACnBswB,EAActwB,IAqDNyY,QA7CZ,aA8CYpM,OAlDZ,aAmDYqL,SA3CZ,SAAkBgB,KA4CN5Y,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAAkB,IAE9FoY,EAAW9kB,MACR8kB,EAAWrwB,KAAKtB,OAAS,GACzBoL,EAAQ7K,KAAI,SAAC+Y,GACT,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YCHrD2qC,mBAvEF,SAAC,GAIA,IAHVtV,EAGS,EAHTA,cAEAgI,GACS,EAFTjI,WAES,EADTiI,kBACS,EACqBruB,mBAAS,IAD9B,mBACF3C,EADE,KACOklB,EADP,OAEoCviB,mBAAS,IAF7C,mBAEFynB,EAFE,KAEcC,EAFd,KAKTnoB,qBAAU,WACN,GAAI8uB,EAAiBvvB,MAAQuvB,EAAiB96B,MAAS86B,EAAiB96B,KAAKtB,OAAS,EAAG,CAErF,IAAM+pC,EAAiB3N,EAAiB96B,KAAKf,KAAI,SAACoD,GAC9C,OAAOA,EAAQ5E,QAEnBuxB,EAAWyZ,MAGhB,CAAC3N,IA8BJ,OACI,oCACI,kBAAC,KAAD,CAAUzrB,QAASyrB,EAAiBxvB,WAC/BwvB,EAAiBvvB,MAAQuvB,EAAiB96B,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1DqT,KAAK,WACLzT,YAAY,kBACZnB,MAAO+2B,EACP72B,SAjCK,SAACg3B,GAKlB,GAJAF,EAAmBE,GAEnBl1B,QAAQC,IAAI,mBAAoBi1B,GAE5ByG,EAAiBvvB,MAAQuvB,EAAiB96B,KAAKtB,OAAS,GAAK21B,EAAY31B,OAAS,EAAG,CACrF,IAAMqxB,EAAsBsE,EAAYp1B,KAAI,SAACQ,GACzC,IAAM6vB,EAAmBwL,EAAiB96B,KAAK2f,MAC3C,SAACrb,GAAD,OAASA,EAAI7G,KAAKwa,gBAAkBxY,EAAKwY,iBAE7C,GAAIqX,EACA,OAAOA,KAGfnwB,QAAQC,IAAI,sBAAuB2wB,GACnC+C,EAAc/C,QAGd+C,EAAc,KAgBN10B,MAAO,CAAEgT,MAAO,SAEftH,EAAQyV,QAAO,SAAA+U,GAAC,OAAKJ,EAAe70B,SAASi1B,MAAIr1B,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAO2W,OAAR,CAAelY,IAAKuB,EAAMtC,MAAOsC,GAC5BA,YCnBrB2W,GAAWC,KAAXD,OACA8tB,GAASD,KAATC,KAUFtiB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxClH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpBzI,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVK,SAAU,GACVC,SAAU,GACV46B,QAAS,GACTwI,eAAgB,GAChBzjC,QAAS,GACTC,KAAM,IAGFyjC,GAAQ,CACZ,CACE3nC,MAAO,oBACPmjC,QAAS,IAGX,CACEnjC,MAAO,WAET,CACEA,MAAO,gBACPmjC,QAAS,KAmkCEyE,GA7jCK,SAAC,GAAe,qBACQv8B,EAAe,GAAI,YAD5B,mBAC1Bw8B,EAD0B,KACXC,EADW,OAEuBr8B,mBAAS,IAFhC,mBAE1B+zB,EAF0B,KAEJC,EAFI,OAGiBh0B,mBAAS,IAH1B,mBAG1Bi0B,EAH0B,KAGPC,EAHO,OAIGl0B,mBAAS,IAJZ,mBAI1B7D,EAJ0B,KAId0/B,EAJc,OAKuB77B,mBAAS,IALhC,mBAK1Bs8B,EAL0B,KAKJR,EALI,OAOW97B,mBAAS,IAPpB,mBAO1Bm0B,EAP0B,KAOVC,EAPU,OAQKp0B,mBAAS,IARd,mBAQ1Bq0B,EAR0B,KAQbC,EARa,OAUkB10B,EACjD,GACA,eAZ+B,mBAU1B20B,EAV0B,KAURC,EAVQ,OAeY50B,EAAe,GAAI,YAf/B,mBAe1B60B,EAf0B,KAeXC,EAfW,OAiBH10B,mBAAS,GAjBN,mBAiB1Bs6B,EAjB0B,KAiBjBiC,EAjBiB,OAkBGv8B,mBAAS,IAlBZ,oBAkB1BomB,GAlB0B,MAkBdC,GAlBc,SAmBKrmB,mBAAS,IAnBd,qBAmB1BqlB,GAnB0B,MAmBbE,GAnBa,SAqBkB3lB,EACjD,GACA,eAvB+B,qBAqB1ByuB,GArB0B,MAqBRmO,GArBQ,SAyBoB58B,EACnD,GACA,gBA3B+B,qBAyB1B68B,GAzB0B,MAyBP5G,GAzBO,SA8BwBj2B,EACvD,GACA,qBAhC+B,qBA8BL88B,IA9BK,gBAmCmB18B,mBAAS,IAnC5B,qBAmC1B28B,GAnC0B,MAmCNC,GAnCM,SAoCW58B,mBAAS,IApCpB,qBAoCV68B,IApCU,gBAqCuB78B,mBAAS,IArChC,qBAqC1B88B,GArC0B,MAqCJC,GArCI,MAuCjCx9B,qBAAU,WACJ+8B,GAAwBvqC,OAAOC,KAAKsqC,GAAsBrqC,OAAS,IACrEiiC,EAAqBoI,EAAoB,MACzCtI,EAAwBsI,EAAoB,YAE7C,CAACA,IAEJ,IAAMU,GAAyB,SAAC9B,GAC9B,QAAKA,GAKP37B,qBAAU,YAC6B,uCAAG,4BAAAE,EAAA,sEACJi9B,GAA0B,CAC1DtqC,WAAY,CACVE,aAAc,CACZ2qC,SAAUhJ,MAJsB,OAChCiJ,EADgC,OAStCH,GAAwBG,GATc,2CAAH,qDAYrCC,GACAzqC,QAAQC,IAAI,oBAAqBshC,KAChC,CAACA,IAqBJ10B,qBAAU,WACR,GACEy9B,GACEF,GAAqB7qC,OAAS,GAAK6qC,IAErC,CACA,IAEMM,EAFkBN,GAEe5pB,MACrC,SAACvY,EAAQuO,GAAT,OAAmB,IAAMA,KAEvBk0B,IACFR,GAAsBQ,EAAc,MACpCP,GAAkBO,OAGrB,CAACN,KAEJv9B,qBAAU,YACS,uCAAG,sBAAAE,EAAA,sEACW+8B,GAAuB,CAClDpqC,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,KAChBwiB,YAAa,cAND,yDAAH,qDAYjBmT,KACC,IAEH99B,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWo2B,GAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAUMoH,GAAoB,uCAAG,WAAO77B,EAAaC,GAApB,iBAAAjC,EAAA,6DACrBvH,EACJmtB,IAAeA,GAAYpzB,OAAS,EAChCozB,GAAY7yB,KAAI,SAACQ,GACf,MAAO,CACL4C,QAAS5C,EAAKW,IACdkD,SAAU7D,EAAK6D,SACf8vB,UAAW3zB,EAAK2zB,cAGpB,GAVqB,SAYD0V,EAAiB,CACzC/kC,KAAM,CACJiE,gBAAiB,CACf5C,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MACdE,SAAU6I,EAAO7I,SACjBC,SAAU4I,EAAO5I,SACjBP,UAAWmJ,EAAOnJ,UAClBC,SAAUkJ,EAAOlJ,SACjBE,KAAMw7B,GAAqBqI,EAAoB,KAC/C9jC,QAASu7B,GAAwBuI,EAAoB,SAEvD3lC,MAAOuB,EACPqlC,SAAUZ,GACVxgC,WAAYA,KA1BW,QAYrB+7B,EAZqB,SAgCe,OAAvBA,EAAYlhC,QAG7B0K,EAAQ2a,YAERkgB,EAAW,GACXlW,GAAc,IACdd,GAAe,IACfsW,EAAc,IACd3H,EAAqB,IACrBF,EAAwB,IACxB4I,GAAsB,IACtBC,GAAkB,IAClBE,GAAwB,IACxBjB,EAAwB,KAExB3mB,GAAsB,+CAGxBzT,EAAQC,eAAc,GAnDK,2CAAH,wDAsD1BpC,qBAAU,WACR,IAAK68B,EAAa,UAAe,CAC/B,IAAM59B,EAAQ49B,EAAa,MAC3B,GAAI59B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,UAxQN,IAACvU,GAiR1Bq0B,EAAa,WACdrqC,OAAOC,KAAKoqC,EAAc7oC,MAAMtB,OAAS,GAED,OAApCmqC,EAAa,KAAb,SApRuBr0B,EAqRD,6BApR9BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCA2R1C,CAACm0B,IAEJ,IAAMtH,GAAe,SAACpkC,GACpBwjC,EAAqBxjC,IAGjBqkC,GAAkB,SAACrkC,GACvBsjC,EAAwBtjC,IAG1B6O,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQ9E,GACf1C,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,IAEH11B,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,MAJC,QACVmB,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACpB,IAoDJ,OAzCAx0B,qBAAU,WACR,GAAI6mB,IAAcA,GAAWn0B,OAAS,GAAKozB,IACzC,GAAIe,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CAC1C,IAAM00B,EACJP,GAAWA,GAAWn0B,OAAS,GAA/B,SACAm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GACtDm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IAEFszB,GAAe,GAAD,oBACTF,IADS,gBAGPe,GAAWA,GAAWn0B,OAAS,GAHxB,CAIV0B,IAAKyyB,GAAWA,GAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIuvB,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CACjDS,QAAQC,IAAI,aAAcyzB,IAC1B1zB,QAAQC,IAAI,cAAe0yB,IAE3B,IAAM4B,EAAiB5B,GAAYvS,QAAO,SAAC9f,GACzC,IAAIk0B,GAAS,EAMb,OALAd,GAAWnxB,SAAQ,SAACW,GACdA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET3B,GAAe0B,SAGjB1B,GAAe,MAGhB,CAACa,KAGJ1zB,QAAQC,IAAI,uBAAwB2pC,GAGlC,kBAAC,IAAD,CACEx6B,SAAU,SAACL,EAAQC,GAAT,OAAqB47B,GAAqB77B,EAAQC,IAC5DX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBk7B,KAErC,gBACCr6B,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAKpR,UAAU,qBACb,6CACA,yBAAKA,UAAU,gCACb,kBAAC,KAAD,CAAOmpC,QAASA,GACb4B,GAAM1pC,KAAI,SAACQ,GAAD,OACT,kBAAC,GAAD,CAAMvB,IAAKuB,EAAKuB,MAAOA,MAAOvB,EAAKuB,YAI1B,IAAZ+lC,GACC,yBAAKnpC,UAAU,mDACb,yBAAKA,UAAU,wDACb,wBAAIQ,MAAO,GAAIR,UAAU,kCACvB,8BACE,kBAAC8U,GAAA,EAAD,OAFJ,0BAOA,yBACEtU,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,YACA,kBAACqsC,GAAD,CACEf,kBAAmBA,GACnBX,wBAAyBA,EACzBD,cAAeA,IAEjB,yBACElqC,MAAO,CACL4W,UAAW,UAGf,wBAAIpX,UAAU,mBAAd,YACA,kBAACssC,GAAD,CACEpP,iBAAkBA,GAClBjI,WAAYA,GACZC,cAAeA,MAGnB,yBAAKl1B,UAAU,yDACb,kBAAC,GAAD,CACEo0B,eAAgBA,GAChBF,YAAaA,OAMR,IAAZiV,GACC,yBAAKnpC,UAAU,wCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAi6B,EAAc59B,MAAd,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAi6B,EAAc59B,MAAd,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAi6B,EAAc59B,MAAd,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAi6B,EAAc59B,MAAd,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAi6B,EAAc59B,MAAd,YAEJzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAi6B,EAAc59B,MAAd,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAi6B,EAAc59B,MAAd,YAEJzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAi6B,EAAc59B,MAAd,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,IAAKC,KAAN,CACEC,eACE+qC,EAAc59B,MAAd,cAA0C,QAAU,GAEtDlN,KAAM8qC,EAAc59B,MAAd,eAGN,kBAAC,KAAD,CACE7N,aAAc8Q,EAAOjJ,QACrB48B,gBACE,kBAAC,KAAD,CACExhC,YAAY,mBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,GACV1pB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC+oB,EAAiBz1B,MAChBy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAClB,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OACnB6a,EAAOva,YAOtB,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,QACA,kBAAC,IAAKC,KAAN,CAEEC,eACE+qC,EAAc59B,MAAd,WAAuC,QAAU,GAEnDlN,KAAM8qC,EAAc59B,MAAd,YAEN,kBAAC,KAAD,CACE7N,aAAc8Q,EAAOhJ,KACrBtH,UAAU,kBACVikC,gBACE,kBAAC,KAAD,CACExhC,YAAY,yBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAAUkkC,GACVzpB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpCipB,EAAc31B,MACb21B,EAAclhC,KAAKtB,OAAS,GAC5BoiC,EAAY7hC,KAAI,SAAC+Y,GACf,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OACnB6a,EAAOva,aASxB,yBACEW,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO7I,SACd5H,KAAK,WACLF,QACGsR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAi6B,EAAc59B,MAAd,eAEJzN,YACGqR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAi6B,EAAc59B,MAAd,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAO5I,SACd7H,KAAK,WACLF,QACGsR,EAAQvJ,UAAYqJ,EAAOrJ,WAC1BsJ,GACAi6B,EAAc59B,MAAd,eAEJzN,YACGqR,EAAQvJ,UAAYqJ,EAAOrJ,WAC1BsJ,GACAi6B,EAAc59B,MAAd,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAQf,KAAZi4B,GACC,yBAAKnpC,UAAU,wCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAi6B,EAAc59B,MAAd,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACAi6B,EAAc59B,MAAd,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAi6B,EAAc59B,MAAd,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACAi6B,EAAc59B,MAAd,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAi6B,EAAc59B,MAAd,YAEJzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAi6B,EAAc59B,MAAd,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAi6B,EAAc59B,MAAd,YAEJzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAi6B,EAAc59B,MAAd,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,IAAKC,KAAN,CACEC,eACE+qC,EAAc59B,MAAd,cAA0C,QAAU,GAEtDlN,KAAM8qC,EAAc59B,MAAd,eAGN,kBAAC,KAAD,CACE7N,aAAc,UACdykC,gBACE,kBAAC,KAAD,CACExhC,YAAY,mBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,GACV1pB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpC+oB,EAAiBz1B,MAChBy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAClB,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OACnB6a,EAAOva,YAOtB,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,QACA,kBAAC,IAAKC,KAAN,CAEEC,eACE+qC,EAAc59B,MAAd,WAAuC,QAAU,GAEnDlN,KAAM8qC,EAAc59B,MAAd,YAEN,kBAAC,KAAD,CACE7N,aAAc,QACdQ,UAAU,kBACVikC,gBACE,kBAAC,KAAD,CACExhC,YAAY,yBACZO,MAAOwS,KAAMI,yBAGjBoE,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,gBACZuZ,iBAAiB,WACjBxa,SAAUkkC,GACVzpB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SACJ2W,cACApY,QAAQkY,EAAME,gBAAkB,IAGpCipB,EAAc31B,MACb21B,EAAclhC,KAAKtB,OAAS,GAC5BoiC,EAAY7hC,KAAI,SAAC+Y,GACf,OACE,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OACnB6a,EAAOva,aASxB,yBACEW,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO7I,SACd5H,KAAK,WACLF,QACGsR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAi6B,EAAc59B,MAAd,eAEJzN,YACGqR,EAAQxJ,UAAYsJ,EAAOtJ,WAC1BuJ,GACAi6B,EAAc59B,MAAd,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,wBACNE,MAAO+Q,EAAO5I,SACd7H,KAAK,WACLF,QACGsR,EAAQvJ,UAAYqJ,EAAOrJ,WAC1BsJ,GACAi6B,EAAc59B,MAAd,eAEJzN,YACGqR,EAAQvJ,UAAYqJ,EAAOrJ,WAC1BsJ,GACAi6B,EAAc59B,MAAd,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAQf,IAAZi4B,GACC,yBACE3oC,MAAO,CACLiV,QAAS,OACTC,eAAgB,SAChB0B,UAAW,OACXzB,WAAY,SACZwiB,cAAe,WAGjB,kBAAC,GAAD,CACE/D,eAAgBA,GAChBF,YAAaA,KAGf,yBACE1zB,MAAO,CACLiV,QAAS,OACT0iB,cAAe,SACfziB,eAAgB,SAChBC,WAAY,WAGd,wBACEnV,MAAO,CACL4W,UAAW,OACX3B,QAAS,eACTmC,UAAW,UAEb5X,UAAU,kCAEV,8BACE,kBAAC4U,GAAA,EAAD,OATJ,yBAWyBkuB,EAXzB,KAcC6I,IAAwBA,GAAqB7qC,OAAS,EACrD,oCACE,kBAAC,WAAMyrC,MAAP,CACE/rC,MAAO,CACLiV,QAAS,OACTC,eAAgB,SAChB82B,SAAU,QAEZjtC,MAAOisC,GACPhsC,aAAcgsC,GACd3rC,KAAK,cAEJ8rC,GAAqBtqC,KAAI,SAACorC,GACzB,OACE,yBACEj7B,QAAS,kBA71BF,SAACjS,GAGpC,GAFAksC,GAAsBlsC,GAGpBssC,GACEF,GAAqB7qC,OAAS,GAAK6qC,IAErC,CACA,IAEMM,EAFkBN,GAEe5pB,MACrC,SAACvY,GAAD,OAAYA,EAAM,MAAYjK,KAE5B0sC,GACFP,GAAkBO,IAg1BQS,CACED,EAAmBjqC,MAGvBxC,UAAU,gCAEV,yBAAKA,UAAU,uCACb,kBAAC,WAAD,CAAOT,MAAOktC,EAAmBjqC,OAEnC,yBAAKxC,UAAU,sCACb,4BAAKysC,EAAmB5sC,MACxB,4BACE,8BACE,kBAAC+U,GAAA,EAAD,OAED63B,EAAmBhjC,gBAEtB,4BACE,8BACE,kBAACkjC,GAAA,EAAD,OAEDF,EAAmBznC,aASlC,oCACE,wBACExE,MAAO,CACLoX,UAAW,SACXd,MAAO,OACPM,UAAW,SAJf,wBAaN,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,OACXoF,aAAc,SAGhB,kBAAC,IAAD,CACE/K,QAASw5B,EAAcv9B,UACvBlN,MAAO,CACL4W,UAAW,OACXC,WAAY,QAEdrX,UAAU,kCACVwR,QAAS,SAACD,GAAD,OAAYlB,EAAakB,KAPpC,cAUE,kBAACq7B,GAAA,EAAD,SAMR,yBACEpsC,MAAO,CACLiV,QAAS,OACTC,eAAgB,kBAGjByzB,EAAU,GACT,kBAAC,IAAD,CACE3oC,MAAO,CAAE+W,YAAa,OAAQH,UAAW,QAEzCpX,UAAU,6BACVV,KAAK,UACLkS,QAAS,WA12BzB45B,EADmBjC,EAAU,KA62Bb,kBAAC0D,GAAA,EAAD,MAPF,aAWD1D,EAAU4B,GAAMjqC,OAAS,GACxB,oCACE,6BACE,kBAAC,IAAD,CACEN,MAAO,CACL4W,UAAW,QAEbpX,UAAU,6BACVV,KAAK,UACLkS,QAAS,WAEL45B,EADc,IAAZjC,EACS,EAj4BhBA,EAAU,KAy3BX,OAeE,kBAACyD,GAAA,EAAD,iB,UCjmClBh9B,IAHa6I,KAAXD,OAGiB3I,MAAaC,MAAM,KAgBtCkU,GAAwB,SAACpN,GAC3BD,KAAatJ,MAAM,CACfuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAK5C7G,GAAgB,CAClB68B,QAAS,GACTC,KAAM,IA4HK7M,GAjHG,SAAC,GAAuF,IAArFn3B,EAAoF,EAApFA,SAAUq3B,EAA0E,EAA1EA,kBAAmBD,EAAuD,EAAvDA,eAAgB6M,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,WAAwB,EAClDx+B,EAAe,GAAI,gBAD+B,mBAC9F66B,EAD8F,KAC5EC,EAD4E,KAG/Fl5B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,6DACjB/M,QAAQC,IAAI,cAAc8O,GADT,SAGUi5B,EAAuB,CAC9CpjC,KAAM,CACF4mC,KAAMz8B,EAAOy8B,KACbD,QAASx8B,EAAOw8B,QAChB3iC,MAAOpB,EAASxG,MAPP,QAGXinC,EAHW,SAc2B,OAAxBA,EAAa3jC,QAlDR+Q,EAmDG,mBAlDhCD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiDvCk2B,EAAc,CAAC,eAAIxD,IAAN,oBAAuByD,KACpC7M,GAAkB,IAGlBpc,KAGJzT,EAAQC,eAAc,GAxBL,iCApCO,IAACoG,IAoCR,OAAH,wDA6BZwY,EAAe,SAAC7d,GAClB6uB,GAAkB,IAGtB,OACI,kBAAC,IAAD,CACIzvB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhO,MAAM,iBACNuc,QAASwgB,EACThc,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,UAGdxI,UAAW,CACP/S,OAAQ,IACRqG,QAAS,SAGb,kBAAC,GAAD,CACIyH,KAAM,EAC9B/f,MAAM,OACNE,MAAO+Q,EAAOy8B,KACdltC,KAAK,OACLF,QAAUsR,EAAQ87B,MAAQh8B,EAAOg8B,OAC9B/7B,GAAgBs4B,EAAiBj8B,MAAjB,WAEnBzN,YAAcqR,EAAQ87B,MAAQh8B,EAAOg8B,OAClC/7B,GAAgBs4B,EAAiBj8B,MAAjB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAGG,kBAAC,GAAD,CACIkO,KAAM,EAC9B/f,MAAM,UACNE,MAAO+Q,EAAOw8B,QACdjtC,KAAK,UACLF,QAAUsR,EAAQ67B,SAAW/7B,EAAO+7B,UACjC97B,GAAgBs4B,EAAiBj8B,MAAjB,cAEnBzN,YAAcqR,EAAQ67B,SAAW/7B,EAAO+7B,UACrC97B,GAAgBs4B,EAAiBj8B,MAAjB,cACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBC5InBtB,IAHa6I,KAAXD,OAGiB3I,MAAaC,MAAM,KAgBtCkU,GAAwB,SAACpN,GAC3BD,KAAatJ,MAAM,CACfuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAK5C7G,GAAgB,CAClB68B,QAAS,GACTC,KAAM,IA2IK7M,GA/HG,SAAC,GAAkG,IAAhGn3B,EAA+F,EAA/FA,SAAUq3B,EAAqF,EAArFA,kBAAmBD,EAAkE,EAAlEA,eAAgB6M,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,WAAWC,EAAwB,EAAxBA,WAAwB,EAC7Dz+B,EAAe,GAAI,mBAD0C,mBACzG66B,EADyG,KACvFC,EADuF,KAG1Gl5B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,6DACjB/M,QAAQC,IAAI,cAAc8O,GADT,SAGUi5B,EAAuB,CAC9CtoC,WAAY,CACRE,aAAc,CACVoB,GAAI2qC,EAAW1qC,MAGvB2D,KAAM,CACF4mC,KAAMz8B,EAAOy8B,KACbD,QAASx8B,EAAOw8B,QAChB3iC,MAAOpB,EAASxG,MAZP,QAGXinC,EAHW,SAmB2B,OAAxBA,EAAa3jC,QAxDR+Q,OAyDrB6I,EAxDR9I,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,qBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BA0D1CiB,EAJyB,WAC9B,OAAOk1B,EAAW5rC,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQirC,EAAW1qC,KAG9CwoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAImpB,EAAWl1B,GAA7BnX,OAAA,IAAAA,CAAA,GAA0C4oC,EAA1C,CAAwDhnC,IAAK0qC,EAAW1qC,OACtFyoB,EAViD,uBAU7BgiB,EAAWjrC,MAAM,EAAG+V,IAVS,CAUD8L,GAVC,aAUeopB,EAAWjrC,MAAM+V,EAAQ,KAC/Fi1B,EAAc/hB,GACLmV,GAAkB,IAIlBpc,KAGJzT,EAAQC,eAAc,GAtCL,iCArCO,IAACoG,IAqCR,OAAH,wDA2CZwY,EAAe,SAAC7d,GAClB6uB,GAAkB,IAGtB,OACI,kBAAC,IAAD,CACIzvB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACci9B,KAG1B,gBACGp8B,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhO,MAAM,oBACNuc,QAASwgB,EACThc,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,UAGdxI,UAAW,CACP/S,OAAQ,IACRqG,QAAS,SAGb,kBAAC,GAAD,CACIyH,KAAM,EAC9B/f,MAAM,OACNE,MAAO+Q,EAAOy8B,KACdltC,KAAK,OACLF,QAAUsR,EAAQ87B,MAAQh8B,EAAOg8B,OAC9B/7B,GAAgBs4B,EAAiBj8B,MAAjB,WAEnBzN,YAAcqR,EAAQ87B,MAAQh8B,EAAOg8B,OAClC/7B,GAAgBs4B,EAAiBj8B,MAAjB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAGG,kBAAC,GAAD,CACIkO,KAAM,EAC9B/f,MAAM,UACNE,MAAO+Q,EAAOw8B,QACdjtC,KAAK,UACLF,QAAUsR,EAAQ67B,SAAW/7B,EAAO+7B,UACjC97B,GAAgBs4B,EAAiBj8B,MAAjB,cAEnBzN,YAAcqR,EAAQ67B,SAAW/7B,EAAO+7B,UACrC97B,GAAgBs4B,EAAiBj8B,MAAjB,cACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBC1HjBwM,GAAwBC,KAAxBD,OAwiBOrK,IAxiBiBsK,KAAhBC,YACG0R,IAAX9B,OAuiBOna,aALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAjhBQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACI9D,EAC7C,GACA,eAHyC,mBACpCsyB,EADoC,KACpBC,EADoB,OAKkBvyB,EAC3D,GACA,gBAPyC,mBAKpC0+B,EALoC,KAKbC,EALa,OASQ3+B,EACjD,GACA,eAXyC,mBASlByyB,GATkB,aAagBzyB,EACzD,GACA,mBAfyC,mBAad4+B,GAbc,aAiBCx+B,oBAAS,GAjBV,mBAiBpCsxB,EAjBoC,KAiBpBC,EAjBoB,OAkBGvxB,mBAAS,IAlBZ,mBAkBpCy+B,EAlBoC,KAkBnBC,EAlBmB,OAmBG1+B,oBAAS,GAnBZ,mBAmBpC2+B,EAnBoC,KAmBnBC,EAnBmB,OAoBD5+B,oBAAS,GApBR,mBAoBpC6+B,EApBoC,KAoBrBC,EApBqB,KAsB3CpsC,QAAQC,IAAI,wBAAyB2rC,GAErC,IAAMjsC,EAASuuB,eACT3Z,EAAUC,eACViiB,EAAQ92B,EAAM,GA1BuB,EA2BP2N,mBAAS,IA3BF,mBA2BpCo+B,EA3BoC,KA2BxBD,EA3BwB,KA6B3C5+B,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACf0yB,EAAqB,CACzB//B,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,uBASIoV,EAA4B,CACnDnsC,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAZW,QASfiV,EATe,SAoBnBD,EAAcC,GApBK,2CAAH,qDAuBpB1S,KACC,CAACvC,IAEJz2B,QAAQC,IAAI,mBAAoBu/B,GAEhC3yB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf4yB,EAAuB,CAC3BjgC,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,2CAAH,qDAUpBoJ,KACC,CAACpJ,IAEJz2B,QAAQC,IAAI,mBAAoBu/B,GAEhCx/B,QAAQC,IAAI,cAAeN,GAE3B,IAAM0sC,EAAqB,uCAAG,WAAOrrC,GAAP,iBAAA+L,EAAA,sEACV++B,EAA2B,CAC3CpsC,WAAY,CACVE,aAAc,CACZoB,GAAIA,MAJkB,QACtB4K,EADsB,SAUF,OAAfA,EAAItH,SACPgoC,EACJZ,GAAcA,EAAWtrB,QAAO,SAAC9f,GAAD,OAAUA,EAAKW,MAAQD,KACzDyqC,EAAca,GA7Gaj3B,EA8GH,sBA7G5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BA4Ff,iCAhGA,IAACF,IAgGD,OAAH,sDAkB3BrV,QAAQC,IACN,kCACAu/B,EAAe3+B,KAAf,UAGF,IAAM2oB,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,MACF,IAIhB,OACE,yBAAK5C,UAAU,wBACb,kBAAC8tC,GAAD,CACEd,cAAeA,EACfC,WAAYA,EACZ9M,eAAgBqN,EAChBpN,kBAAmBqN,EACnB1kC,SAAUg4B,EAAe3+B,KACzB8qC,WAAYI,IAEd,yBAAKttC,UAAU,iCACb,4CAEC+gC,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GACxC,oCACE,6BACE,kBAAC,GAAD,CACEqnC,eAAgBwF,EAChBvF,YAAasF,EACbnrC,GAAIw+B,EAAc,KAAd,KAEN,kBAACgN,GAAD,CACEf,cAAeA,EACfC,WAAYA,EACZ9M,eAAgBA,EAChBC,kBAAmBA,EACnBr3B,SAAUg4B,EAAe3+B,OAE3B,kBAAC,IAAD,CACEoP,QAAS,kBAAMm8B,GAAiB,IAChCruC,KAAK,OACLyD,KAAM,kBAACirC,GAAA,EAAD,OAHR,oBAQCv7B,GAAS,YAAaF,IACrB,oCACE,kBAAC,IAAD,CACEf,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACikB,GAAA,EAAD,OAHR,gBAad,kBAAC,KAAD,CAAU0J,UAAW,CAAEtR,KAAM,GAAK3N,QAASsvB,EAAerzB,WACvDqzB,EAAepzB,MACdozB,EAAe3+B,QACbxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,IAC1C,kBAAC,KAAD,CACE2B,YAAY,iBACZO,MAAOwS,KAAMI,yBAIlBmrB,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GACxC,oCACE,yBACEN,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLytC,KAAM,EACN12B,YAAa,QAEfvX,UAAU,gCAEV,yBAAKA,UAAU,qCACZ+gC,EAAe3+B,KAAf,WACG,gCAAM2+B,EAAe3+B,KAAf,WAGV,4BAAK2+B,EAAe3+B,KAAf,MACL,4BAAK2+B,EAAe3+B,KAAf,aACJ2+B,EAAe3+B,KAAf,KACC,mCAEE,8BAAO2+B,EAAe3+B,KAAf,MAIV2+B,EAAc,KAAd,SACC,uCAEE,8BAAOA,EAAc,KAAd,UAIVA,EAAc,KAAd,MACC,oCAEE,8BAAOA,EAAc,KAAd,OAIVA,EAAc,KAAd,UACC,uCAEE,8BAAOA,EAAc,KAAd,WAIVA,EAAc,KAAd,OACC,qCAEE,8BAAOA,EAAc,KAAd,QAIVA,EAAc,KAAd,OACC,qCAEE,8BAAOA,EAAc,KAAd,QAIVA,EAAc,KAAd,eACC,8CAEE,8BAAOA,EAAc,KAAd,gBAIVA,EAAc,KAAd,eACC,8CAEE,8BAAOA,EAAc,KAAd,gBAIVA,EAAc,KAAd,QACC,4CAEE,8BAAOA,EAAc,KAAd,SAcVA,EAAc,KAAd,cACC,iDAEE,wCACMA,EAAc,KAAd,aADN,aACiDA,EAAc,KAAd,uBADjD,aACsGA,EAAc,KAAd,uBAKzGA,EAAc,KAAd,OACC,iDAEE,wCAAUA,EAAc,KAAd,WAMlB,yBACEvgC,MAAO,CACL6Q,SAAU,MACV68B,SAAU,OAEZluC,UAAU,gCAEV,yBACEQ,MAAO,CACLgT,MAAO,QAETxT,UAAU,qCAEV,qCAEA,yBACEQ,MAAO,CACLgT,MAAO,SAGR25B,EAAsBx/B,MACrBs/B,GACAA,EAAWnsC,OAAS,GACpBmsC,EAAW5rC,KAAI,SAAC8sC,GACd,OACE,yBAAKnuC,UAAU,iBACb,yBAAKA,UAAU,yBAIb,0BACEA,UAAU,6BACVwR,QAAS,WACP+7B,EAAmBY,GACnBV,GAAmB,KAGrB,kBAACrf,GAAA,EAAD,OAEF,0BACEpuB,UAAU,+BACVwR,QAAS,kBACPo8B,EAAsBO,EAAS3rC,OAGjC,kBAACsiB,GAAA,EAAD,QAGJ,4BACE,uCADF,WAEOqpB,EAASpB,OAGfoB,EAASrB,SACR,oCACE,4BACE,2CADF,WAGOqB,EAASrB,eAQ3BK,EAAsBx/B,MACrBs/B,KACErsC,OAAOC,KAAKosC,GAAYnsC,OAAS,IACjC,oCACE,yBACEN,MAAO,CACLgT,MAAO,OACPlC,OAAQ,UACRmE,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,CACEjT,YAAY,iBACZO,MAAOwS,KAAMI,8BAS7B,iCAMTmrB,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GACxC,oCACE,yBAAKd,UAAU,iCACb,0CAKR,yBAAKA,UAAU,8BACZ+gC,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GAC1CigC,EAAe3+B,KAAf,YACE2+B,EAAe3+B,KAAf,SAAgCtB,OAAS,IACzC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,oCACZO,MAAOwS,KAAMI,0BAKpBmrB,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GAC1CigC,EAAe3+B,KAAf,UACA2+B,EAAe3+B,KAAf,SAAgCtB,OAAS,GACvC,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UACE,+FAEJ6G,KAAK,QACL8D,WAAY2iB,EAAe3+B,KAAf,SACZic,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL/d,MAAO,CACLsW,MAAO,qBAKb,kBAAC,GAAD,CACE1T,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACA,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,OAGxC,yBAAKgJ,IAAKwf,EAASrM,GAASpb,IAAI,UAQtC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,MAExC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNob,UAAU,UACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACEle,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,EAAO,UAAY,oBAM5B,kBAAC,GAAD,CACEhB,MAAM,aACNob,UAAU,YACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,WACNob,UAAU,WACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,cACNob,UAAU,QACVle,IAAI,KACJN,UAAU,iCCxftB6Z,IAxCapB,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAsBD,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGS,IAAIhE,MACaE,aAGjBs0B,GAAsB,SAACjkC,GAAD,gBAC5BA,GAD4B,OACpB0P,KAGFhB,GAAyB,CAClCnF,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,oCA6IAoK,GAtII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtH,EAAe,GAAI,sBAH5D,mBAG1BiN,EAH0B,KAGCC,EAHD,OAIC9M,mBAAS,IAJV,mBAI1B+M,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzN,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqN,EAAqC,CAC9D1a,WAAY,CACRC,OAAQ,CACJqY,WAAY,iBALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFxa,QAAQC,IAAI,4BAA4Bka,GAOpC,yBAAK1b,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,0CAGA,+DAMR,yBAAKA,UAAU,gCACd0b,EAA0BhO,WACvB,oCACA,yBAAKlN,MAAO,CACRiV,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXrE,OAAO,YAEX,kBAAC,KAAD,CACAgJ,KAAK,YAQHoB,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GAC5D,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KAC1C,kBAAC,KAAD,CAAWzR,KAAMwZ,EAAW/D,SAAU,IAClC,8BACI,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,aACTC,cAAemzB,KAEhB,kBAAC,KAAD,CAEIlzB,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACImb,QAAQ,QACRnb,KAAK,QACLP,KAAK,QACLic,KAAK,yBAOhBG,EAA0B/N,QAAU+N,EAA0BtZ,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,0BAA6BO,MAAOwS,KAAMI,2BAO5E,yBAAK5V,UAAU,kCACX,4BACI,8BACI,kBAACyd,GAAA,EAAD,OAFR,wBC1JN4wB,IAxBa51B,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAsBF,CACV,MACA,MACA,MACA,OACA,MACA,OACA,QAIS0wB,GAAqB,SAACnkC,GAAD,OAC9BkkC,GAAMlkC,EAAQ,IAML0O,GAAyB,CAClCnF,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,oCA6IAoK,GAtII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtH,EAAe,GAAI,sBAH5D,mBAG1BiN,EAH0B,KAGCC,EAHD,OAIC9M,mBAAS,IAJV,mBAI1B+M,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzN,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqN,EAAqC,CAC9D1a,WAAY,CACRC,OAAQ,CACJqY,WAAY,gBALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFxa,QAAQC,IAAI,4BAA4Bka,GAOpC,yBAAK1b,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,yCAGA,8DAMR,yBAAKA,UAAU,gCACd0b,EAA0BhO,WACvB,oCACA,yBAAKlN,MAAO,CACRiV,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXrE,OAAO,YAEX,kBAAC,KAAD,CACAgJ,KAAK,YAQhBoB,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GAC/C,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KAC1C,kBAAC,KAAD,CAAWzR,KAAMwZ,EAAW/D,SAAU,IAClC,8BACI,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,YACTC,cAAeqzB,KAEhB,kBAAC,KAAD,CAEIpzB,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACImb,QAAQ,QACRnb,KAAK,QACLP,KAAK,QACLic,KAAK,yBAOhBG,EAA0B/N,QAAU+N,EAA0BtZ,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,0BAA6BO,MAAOwS,KAAMI,2BAO5E,yBAAK5V,UAAU,kCACX,4BACI,8BACI,kBAACyd,GAAA,EAAD,OAFR,wBCvIC5E,IAtCMJ,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAoCsB,CAClClK,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,qCAwIAoK,GApII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtH,EAAe,GAAI,sBAH5D,mBAG1BiN,EAH0B,KAGCC,EAHD,OAIC9M,mBAAS,IAJV,mBAI1B+M,EAJ0B,KAIfC,EAJe,KAiCjC,OA1BAzN,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqN,EAAqC,CAC9D1a,WAAY,CACRC,OAAQ,CACJqY,WAAY,WALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFxa,QAAQC,IAAI,4BAA4Bka,GAKpC,yBAAK1b,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,sDAMR,yBAAKA,UAAU,gCACd0b,EAA0BhO,WACvB,oCACA,yBAAKlN,MAAO,CACRiV,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXrE,OAAO,YAEX,kBAAC,KAAD,CACAgJ,KAAK,YAQHoB,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GAC5D,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KAC1C,kBAAC,KAAD,CAAWzR,KAAMwZ,EAAW/D,SAAU,IAClC,8BACI,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,SAGV,kBAAC,KAAD,CAEIE,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACImb,QAAQ,QACRnb,KAAK,QACLP,KAAK,QACLic,KAAK,yBAOhBG,EAA0B/N,QAAU+N,EAA0BtZ,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,qBAAwBO,MAAOwS,KAAMI,2BAOvE,yBAAK5V,UAAU,kCACX,4BACI,8BACI,kBAACyd,GAAA,EAAD,OAFR,wBC9IC8wB,IAtBM91B,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAoBgB,SAACzT,GAAD,gBACzBA,EADyB,QAInB0O,GAAyB,CAClCnF,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,oCA4IAoK,GAvII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtH,EAAe,GAAI,sBAH5D,mBAG1BiN,EAH0B,KAGCC,EAHD,OAIC9M,mBAAS,IAJV,mBAI1B+M,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzN,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqN,EAAqC,CAC9D1a,WAAY,CACRC,OAAQ,CACJqY,WAAY,WALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFxa,QAAQC,IAAI,4BAA4Bka,GAOpC,yBAAK1b,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,uDAOR,yBAAKA,UAAU,gCACd0b,EAA0BhO,WACvB,oCACA,yBAAKlN,MAAO,CACRiV,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXrE,OAAO,YAEX,kBAAC,KAAD,CACAgJ,KAAK,YAQHoB,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GAC5D,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KAC1C,kBAAC,KAAD,CAAWzR,KAAMwZ,EAAW/D,SAAU,IAClC,8BACI,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,OACTC,cAAeszB,KAEhB,kBAAC,KAAD,CAEIrzB,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACImb,QAAQ,QACRnb,KAAK,QACLP,KAAK,QACLic,KAAK,yBAOhBG,EAA0B/N,QAAU+N,EAA0BtZ,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,sBAAyBO,MAAOwS,KAAMI,2BAOxE,yBAAK5V,UAAU,kCACX,4BACI,8BACI,kBAACyd,GAAA,EAAD,OAFR,wBC/HN7E,IAjBaH,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAeD,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGWwwB,GAAsB,SAACjkC,GAAD,gBAC9ByO,GAAOzO,EAAQ,KAEP0O,GAAyB,CACpCnF,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,oCAyHEoK,GAtHI,SAAChI,GACFE,eAAhB,IADmC,EAM/BtH,EAAe,GAAI,sBANY,mBAIjCiN,EAJiC,KAKjCC,EALiC,OAOD9M,mBAAS,IAPR,mBAO5B+M,EAP4B,KAOjBC,EAPiB,KA8BnC,OArBAzN,qBAAU,YACgB,uCAAG,4BAAAE,EAAA,sEACGqN,EAAqC,CAC/D1a,WAAY,CACVC,OAAQ,CACNqY,WAAY,YAJO,QACnBuC,EADmB,SAYvBD,EAAaC,GAZU,2CAAH,qDAexBC,KACC,IAEHxa,QAAQC,IAAI,iCAAkCka,GAG5C,yBAAK1b,UAAU,qCACb,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,iDACb,wCACA,uDAIJ,yBAAKA,UAAU,gCACZ0b,EAA0BhO,WACzB,oCACE,yBACElN,MAAO,CACLiV,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,YAGV,kBAAC,KAAD,CAAMgJ,KAAK,YAKhBoB,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GACjE,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KACxC,kBAAC,KAAD,CAAWzR,KAAMwZ,EAAW/D,SAAU,IACpC,8BACE,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACxD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGlC,kBAAC,KAAD,CACEC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAET,kBAAC,KAAD,CAAOC,QAAS,QAASC,cAAemzB,KACxC,kBAAC,KAAD,CAEElzB,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEZ,kBAAC,KAAD,CACE9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAE9C,kBAAC,KAAD,CACEmb,QAAQ,QACRnb,KAAK,QACLP,KAAK,QACLic,KAAK,yBAMZG,EAA0B/N,QACvB+N,EAA0BtZ,KAAKtB,OAAS,IACxC,yBACEN,MAAO,CACL4W,UAAW,SAGb,kBAAC,KAAD,CACE3U,YAAW,4BACXO,MAAOwS,KAAMI,2BAKvB,yBAAK5V,UAAU,kCACb,4BACE,8BACE,kBAACyd,GAAA,EAAD,OAFJ,wBCvHK5E,IA1CMJ,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAwCsB,CAClClK,OAAQ,EACRjT,aAAc,MACdoX,SAAU,GACVpE,UAAW,qCA6IAoK,GAtII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtH,EAAe,GAAI,sBAH5D,mBAG1BiN,EAH0B,KAGCC,EAHD,OAIC9M,mBAAS,IAJV,mBAI1B+M,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzN,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqN,EAAqC,CAC9D1a,WAAY,CACRC,OAAQ,CACJqY,WAAY,WALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFxa,QAAQC,IAAI,4BAA4Bka,GAOpC,yBAAK1b,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,sDAMR,yBAAKA,UAAU,gCACd0b,EAA0BhO,WACvB,oCACA,yBAAKlN,MAAO,CACRiV,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXrE,OAAO,YAEX,kBAAC,KAAD,CACAgJ,KAAK,YAQHoB,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GAC5D,kBAAC,KAAD,CAAqB0S,MAAM,OAAOK,OAAQ,KAC1C,kBAAC,KAAD,CAAWzR,KAAMwZ,EAAW/D,SAAU,IAClC,8BACI,oCAAgBtV,GAAG,eAAegY,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,SAGV,kBAAC,KAAD,CAEIE,YAAY,OACZ1H,MAAO,GACP2H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI9D,QAAQ,EACR+D,aAAcxC,GACdyC,UAAW,SAAC/b,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACImb,QAAQ,QACRnb,KAAK,QACLP,KAAK,QACLic,KAAK,yBAOhBG,EAA0B/N,QAAU+N,EAA0BtZ,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR4W,UAAW,SAEX,kBAAC,KAAD,CAAO3U,YAAW,0BAA6BO,MAAOwS,KAAMI,2BAO5E,yBAAK5V,UAAU,kCACX,4BACI,8BACI,kBAACyd,GAAA,EAAD,OAFR,uBC/JJC,IAFWjF,KAAXD,OAEwBmF,KAAxBD,QAgLO8wB,IAhLiB7wB,KAAhBC,YA2Ba,SAAC/H,GACZE,eAAhB,IAD6C,EAMzCtH,EAAe,GAAI,sBANsB,mBAI3CiN,EAJ2C,KAK3CC,EAL2C,OAOX9M,mBAAS,IAPE,mBAOtC+M,EAPsC,KAO3BC,EAP2B,KA2C7C,OAlCAzN,qBAAU,YACgB,uCAAG,8BAAAE,EAAA,sEACGqN,EAAqC,CAC/D1a,WAAY,CACVC,OAAQ,CACNqY,WAAY,qBAJO,QACnBuC,EADmB,SAUJA,EAAchb,OAAS,GAEpC8a,EAAYE,EAAcza,KAAI,SAACQ,GACnC,OAAO,eACFA,EADL,CAEEhC,KACEgC,EAAI,gBACJjB,OAAOC,KAAKgB,EAAI,gBAAoBf,OAAS,EACzCe,EAAI,eAAJ,KACA,mBAIVga,EAAaD,IAEbC,EAAa,IAzBU,2CAAH,qDA4BxBE,KACC,IAEHxa,QAAQC,IAAI,4BAA6Bka,GAGvC,yBAAK1b,UAAU,qCACb,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,iDACb,kDACA,iEAIJ,yBAAKA,UAAU,gCACZ0b,EAA0BhO,WACzB,oCACE,yBACElN,MAAO,CACLiV,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,YAGV,kBAAC,KAAD,CAAMgJ,KAAK,YAKhBoB,EAA0B/N,MAAQiO,GAAaA,EAAU9a,OAAS,GACjE,oCACE,kBAAC,KAAD,CACEod,WAAY,CAAEC,gBAAiB,GAC/B3d,MAAO,GAMP8Z,KAAK,QAEL8D,WAAYxC,EACZyC,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL/d,MAAO,CACLsW,MAAO,qBAKb,kBAAC,GAAD,CACE1T,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,aAGThR,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACP6H,cAAe,cAGhBva,GAAI,eAMb,kBAAC,GAAD,CACEhB,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,2BAMjB0b,EAA0B/N,QACvB+N,EAA0BtZ,KAAKtB,OAAS,IACxC,yBACEN,MAAO,CACL4W,UAAW,SAGb,kBAAC,KAAD,CACE3U,YAAW,qBACXO,MAAOwS,KAAMI,2BAKvB,yBAAK5V,UAAU,kCACb,4BACE,8BACE,kBAACyd,GAAA,EAAD,OAFJ,yBC7NOgxB,GCsCE,SAAC54B,GAAkB,IAAD,EAC+CpH,EAAe,GAAI,8BADlE,mBACMoQ,GADN,aAEiDpQ,EAAe,GAAI,8BAFpE,mBAEOqQ,GAFP,aAG0BrQ,EAAe,GAAI,8BAH7C,mBAGNsQ,GAHM,WA2ClC,OApCA3Q,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACnByQ,EAA6B,IADV,2CAAH,qDAIvBC,KACE,IAIH5Q,qBAAU,YACiB,uCAAG,sBAAAE,EAAA,sEACtBuQ,EAAsC,CAC3C3d,OAAQ,YAFmB,2CAAH,qDAK1B+d,KACC,IAIF7Q,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACvBwQ,EAAuC,CAC5C5d,OAAQ,aAFoB,2CAAH,qDAK3Bge,KACC,IAQD,yBAAKlf,UAAU,qBACd,yBAAKA,UAAU,2BACd,kBAAC,GAAD,MACA,kBAAC0uC,GAAD,MACA,kBAACC,GAAD,OAGD,yBAAK3uC,UAAU,2BACd,kBAAC4uC,GAAD,MACA,kBAACC,GAAD,OAGD,yBAAK7uC,UAAU,2BACd,kBAAC8uC,GAAD,MACA,kBAACC,GAAD,SCnFWC,GARW,SAACn5B,GACvB,OACI,mD,UCkLOylB,GAtKE,SAAC,GAAgD,IAA9C2T,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAAoB,EAGTtgC,mBAAS,CACzDzL,MAAO+rC,EAAc/rC,MACrBoI,OAAQ2jC,EAAc3jC,OACtBpH,KAAM+qC,EAAc/qC,KACpBpB,MAAOmsC,EAAcnsC,QAPoC,mBAGtDosC,EAHsD,KAGlCC,EAHkC,OAU7BxgC,mBAAS,IAVoB,mBAUtDkR,EAVsD,KAU5CF,EAV4C,OAWrBhR,oBAAS,GAXY,mBAWtD+qB,EAXsD,KAWxCC,EAXwC,KAavDyV,EAA6B,SAAC/9B,GAChC,IAAM1R,EAAO0R,EAAE/F,OAAO3L,KAChBN,EAAQgS,EAAE/F,OAAOjM,MAEvB8vC,EAAsB,eACfD,EADc,gBAEhBvvC,EAAON,MAIhB6O,qBAAU,WACN,GAAI2R,EAASjf,OAAS,EAAG,CACrB,IAAMurB,EAAYtM,EAAS1e,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAC5C8sC,EAAsB,eACfD,EADc,CAEjBpsC,MAAM,aAAKqpB,WAIfgjB,EAAsB,eACfD,EADc,CAEjBpsC,MAAO,QAIhB,CAAC+c,IAEJ3R,qBAAU,WACN,IAIM2J,EAHKm3B,EAAU7tC,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQktC,EAAc5sC,IAK1DshB,EAAcjjB,OAAOkjB,OAAO,GAAIorB,EAAUn3B,GAA5BnX,OAAA,IAAAA,CAAA,GAAyCwuC,IACvDG,EAAmB,uBAAOL,EAAUltC,MAAM,EAAG+V,IAA1B,CAAkC8L,GAAlC,aAAkDqrB,EAAUltC,MAAM+V,EAAQ,KACnGk3B,EAAaM,KAEd,CAACH,IAuBJ,OACI,oCAGI,yBAAKpvC,UAAU,iCACX,kBAACq2B,GAAD,CACIh3B,MAAM,QACNE,MAAO6vC,EAAmBhsC,MAC1BvD,KAAK,QACLJ,SAAU6vC,IAEd,kBAACjZ,GAAD,CACIh3B,MAAM,OACNE,MAAO6vC,EAAmBhrC,KAC1BvE,KAAK,OACLJ,SAAU6vC,IAGd,kBAACjZ,GAAD,CACIh3B,MAAM,SACNE,MAAO6vC,EAAmB5jC,OAC1B3L,KAAK,SACLJ,SAAU6vC,IAId,wBAAItvC,UAAU,yBAAd,UACA,yBAAKQ,MAAO,CACRgc,aAAc,UAGlB,yBAAKxc,UAAU,gCACV+f,GAEGA,EAASjf,OAAS,GAAKif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACxC,OACI,yBAAK/X,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAKuL,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACIkO,QAAS,kBAzDlB,SAACjP,GAExB,IAAM8pB,EAAYtM,GAAYA,EAAS4B,QAAO,SAAA3e,GAC1C,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAmDmCC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACInpB,MAAO,iBAEP,yBACIoO,QAAS,WACLqoB,GAAgB,IAEpB75B,UAAU,2FAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACZ,kBAACgnB,GAAA,EAAD,WAUpB,kBAAC,GAAD,CACIpH,WAAYia,EACZla,QAASia,EACT7Z,SAAUA,EACVF,YAAaA,EACbC,sBAAsB,MC/IhClQ,GAAmBC,MAAaC,MAAM,CAC1C0/B,UAAW3/B,MACRxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWNikB,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBu/B,UAAW,GACXhqC,MAAO,IA8MM+zB,GApMK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACA2nB,EAEW,EAFXA,cACAC,EACW,EADXA,iBACW,EAC0CjhC,EACnD,GACA,gBAHS,mBACJkhC,EADI,KACeC,EADf,OAKqB/gC,oBAAS,GAL9B,gCAMuBA,mBAAS,KANhC,mBAMJqgC,EANI,KAMOD,EANP,KAQL5+B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACWshC,EAAwB,CACpDzpC,KAAM,CACJqpC,UAAWl/B,EAAOk/B,UAClBhqC,MAAO0pC,KAJQ,QACbW,EADa,SAS+B,OAA3BA,EAAgBhqC,QAlDV+Q,OAmD3B6I,EAlDJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,oBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAgDzC44B,EAAiB,GAAD,oBACXD,GADW,cAGZltC,GAAIstC,EAAe,KAAW,GAC9BvvC,IAAKuvC,EAAe,KAAW,GAC/BL,UAAWK,EAAe,WAAiB,IAExCA,MAGPt/B,EAAQ2a,YACR+jB,EAAa,IACbnnB,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GA5BH,iCAzCS,IAACoG,IAyCV,OAAH,wDA+BlBxI,qBAAU,WACR,IAAKuhC,EAAiB,UAAe,CACnC,IAAMtiC,EAAQsiC,EAAiB,MAC/B,GAAItiC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACwkB,IAEJ,IAAMvgB,EAAe,SAAC7d,GACpBuW,GAAyB,IAGrBrX,EAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAOk/B,WAMRM,EAAyB,WAC7Bb,EAAa,GAAD,oBACPC,GADO,CAEV,CACE9rC,MAAO,GACPoI,OAAQ,GACRpH,KAAM,GACNpB,MAAO,GACPT,GAAG,GAAD,OAAK2sC,EAAUpuC,aAKvB,OACE,kBAAC,IAAD,CACE6P,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,oBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,IAEtCkD,MAAO,OACP6Q,UAAW,CACT/S,OAAQ,IACRqG,QAAS,SAGX,kBAAC1Y,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOk/B,UACd3vC,KAAK,YACLF,QACGsR,EAAQu+B,WAAaz+B,EAAOy+B,YAC3Bx+B,GAAgB2+B,EAAkBtiC,MAAlB,WAEpBzN,YACGqR,EAAQu+B,WAAaz+B,EAAOy+B,YAC3Bx+B,GAAgB2+B,EAAkBtiC,MAAlB,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAGpB,yBACE1Q,MAAO,CACL4W,UAAW,UAGf,wBAAIpX,UAAU,mBAAd,YAEA,yBAAKA,UAAU,2BACZkvC,EAAU7tC,KAAI,SAAC0uC,GACd,OACE,kBAACC,GAAD,CACEb,cAAeY,EACfb,UAAWA,EACXD,aAAcA,OAKpB,kBAAC,IAAD,CACE30B,KAAK,QACL9I,QAASs+B,EACTtvC,MAAO,CACLgT,MAAO,QACPupB,UAAW,QACX3lB,UAAW,MACX3W,aAAc,OAEhBnB,KAAK,SACLyD,KAAM,kBAACikB,GAAA,EAAD,OAVR,kBAgBF,yBACExmB,MAAO,CACL4W,UAAW,gB,UC7BZkkB,GA3ME,SAAC,GAA0F,EAAxFoU,iBAAwF,EAAtED,cAAuE,IAAxD5tC,EAAuD,EAAvDA,KAAM0H,EAAiD,EAAjDA,UAAU0mC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,gBAAsB,EAEpDrhC,mBAAS,CACzDzL,MAAOvB,EAAKuB,MACZoI,OAAQ3J,EAAK2J,OACbpH,KAAMvC,EAAKuC,KACXpB,MAAOnB,EAAKmB,QANwF,mBAEjGosC,EAFiG,KAE7EC,EAF6E,KAUxG9tC,QAAQC,IAAI,qBAAqB4tC,GACjC7tC,QAAQC,IAAI,gBAAgBK,GAX4E,MA2BxEgN,mBAAS,IA3B+D,mBA2BjGkR,EA3BiG,KA2BvFF,EA3BuF,OA4BhEhR,oBAAS,GA5BuD,mBA4BjG+qB,EA5BiG,KA4BnFC,EA5BmF,KA8BlGyV,EAA6B,SAAC/9B,GAChC,IAAM1R,EAAO0R,EAAE/F,OAAO3L,KAChBN,EAAQgS,EAAE/F,OAAOjM,MAEvB8vC,EAAsB,eACfD,EADc,gBAEhBvvC,EAAON,MAShB6O,qBAAU,WACF2R,EAASjf,OAAS,GAClBuuC,EAAsB,eACfD,EADc,CAGjBpsC,MAAM,aAAK,IAAImtC,IAAJ,uBAAYf,EAAmBpsC,OAA/B,aAAyC+c,WAU7D,CAACA,IAKJ3R,qBAAU,WAEHvM,GAAQA,EAAKmB,OAASnB,EAAKmB,MAAMlC,OAAS,GACzC+e,EAAYhe,EAAKmB,SAGvB,IA2BF,OACI,oCACI,yBACIxC,MAAO,CACHgT,MAAO,OACPC,UAAW,QAEfzT,UAAU,iCACV,kBAACq2B,GAAD,CACIh3B,MAAM,QACNE,MAAO6vC,EAAmBhsC,MAC1BvD,KAAK,QACLJ,SAAU6vC,IAEd,kBAACjZ,GAAD,CACIh3B,MAAM,OACNE,MAAO6vC,EAAmBhrC,KAC1BvE,KAAK,OACLJ,SAAU6vC,IAGd,kBAACjZ,GAAD,CACIh3B,MAAM,SACNE,MAAO6vC,EAAmB5jC,OAC1B3L,KAAK,SACLJ,SAAU6vC,IAId,wBAAItvC,UAAU,yBAAd,UACA,yBAAKQ,MAAO,CACRgc,aAAc,UAIlB,yBAAKxc,UAAU,gCACVovC,EAAmBpsC,OAEhBosC,EAAmBpsC,MAAMlC,OAAS,GAAKsuC,EAAmBpsC,MAAM3B,KAAI,SAAC2B,EAAO+U,GACxE,OACI,yBAAK/X,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAKuL,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACIkO,QAAS,kBAxElB,SAACjP,GAExB,IAAM8pB,EAAY+iB,EAAmBpsC,OAASosC,EAAmBpsC,MAAMlC,OAAS,GAAKsuC,EAAmBpsC,MAAM2e,QAAO,SAAA3e,GACjH,OAAOA,EAAMT,KAAOA,KAGxB8sC,EAAsB,eACfD,EADc,CAEjBpsC,MAAM,aAAKqpB,MAGfxM,EAAYwM,GA6DmCC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACInpB,MAAO,iBAEP,yBACIoO,QAAS,WACLqoB,GAAgB,IAEpB75B,UAAU,2FAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACZ,kBAACgnB,GAAA,EAAD,UAMhB,kBAAC,IAAD,CACAxmB,MAAO,CACH4W,UAAW,QAEXrU,KAAM,kBAACqtC,GAAA,EAAD,MAChBpwC,UAAU,6BACVwR,QAAS,WA7FXy+B,EAAgBpuC,EAAK0H,EAAU6lC,KAgG1Bc,EAAkB,YAAc,SAIjC,kBAAC,GAAD,CACItwB,WAAYia,EACZla,QAASia,EACT7Z,SAAUA,EACVF,YAAaA,EACbC,sBAAsB,MCSvByZ,IA3MU1pB,MAAaC,MAAM,CAC1C0/B,UAAW3/B,MACRxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAiCQ,SAAC,GAOP,IANZ8nB,EAMW,EANXA,sBACAC,EAKW,EALXA,yBAGAuoB,GAEW,EAJXZ,cAIW,EAHXC,iBAGW,EAFXW,6BACAC,EACW,EADXA,YACW,EACyCzhC,mBAAS,CAC3DzL,MAAO,GACPoI,OAAQ,GACRpH,KAAM,GACNpB,MAAO,KALE,mBACJosC,EADI,KACgBC,EADhB,OAQqBxgC,mBAAS,IAR9B,mBAQJkR,EARI,KAQMF,EARN,OAS6BhR,oBAAS,GATtC,mBASJ+qB,EATI,KASUC,EATV,KAWLyV,EAA6B,SAAC/9B,GAClC,IAAM1R,EAAO0R,EAAE/F,OAAO3L,KAChBN,EAAQgS,EAAE/F,OAAOjM,MAEvB8vC,EAAsB,eACjBD,EADgB,gBAElBvvC,EAAON,MAeZ6O,qBAAU,WACR,GAAI2R,EAASjf,OAAS,EAAG,CACvB,IAAMurB,EAAYtM,EAAS1e,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAC9C8sC,EAAsB,eACjBD,EADgB,CAEnBpsC,MAAM,aAAKqpB,WAGbgjB,EAAsB,eACjBD,EADgB,CAEnBpsC,MAAO,QAGV,CAAC+c,IAiBJ,OACE,oCACE,kBAAC,KAAD,CACEvf,MAAO,CACLuT,IAAK,QAEP2Y,gBAAgB,EAChBtpB,MAAM,yBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAZX8+B,EAA4BjB,EAAoBkB,IAa5ClsB,SAnDe,SAAC7S,GACpBuW,GAAyB,IAmDrBxD,OAAO,MACPsI,cAAe,CACbC,SAAU,UAEZrZ,MAAO,QACP6Q,UAAW,CACT/S,OAAQ,IACRqG,QAAS,SAGX,kBAAC1Y,EAAD,CACEI,MAAM,QACNE,MAAO6vC,EAAmBhsC,MAC1BvD,KAAK,QACLJ,SAAU6vC,IAEZ,kBAACrwC,EAAD,CACEI,MAAM,OACNE,MAAO6vC,EAAmBhrC,KAC1BvE,KAAK,OACLJ,SAAU6vC,IAGZ,kBAACrwC,EAAD,CACEI,MAAM,SACNE,MAAO6vC,EAAmB5jC,OAC1B3L,KAAK,SACLJ,SAAU6vC,IAGZ,wBAAItvC,UAAU,yBAAd,UAEA,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBAAKA,UAAU,mDACb,yBAAKuL,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBAtEA,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GA8DmBC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,WAMV,kBAAC,KAAD,CAASnpB,MAAO,iBACd,yBACEoO,QAAS,WACPqoB,GAAgB,IAElB75B,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,UAMR,kBAAC,GAAD,CACEpH,WAAYia,EACZla,QAASia,EACT7Z,SAAUA,EACVF,YAAaA,EACbC,sBAAsB,QC9LxBywB,GAAUC,KAAVD,MACA/iB,GAAWvuB,IAAXuuB,OAEF/N,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,oBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAqB/C,IAAM25B,GAAW,SAACC,EAA2BnnC,EAAWhH,GAAvC,OACf,yBACE/B,MAAO,CACLiV,QAAS,SAGX,kBAAC,KAAD,CAAS+B,UAAU,MAAMpU,MAAM,kBAC7B,uBAAG0U,KAAK,MACN,kBAACsW,GAAA,EAAD,CACE5c,QAAS,SAACnR,SAQhB,yBACEG,MAAO,CACL6W,WAAY,UAGhB,uBACES,KAAK,KACLtX,MAAO,CACLsW,MAAO,qBAGT,kBAAC,KAAD,CACEqO,UAAW,kBAAMurB,EAA0BnuC,EAAIgH,IAC/CnG,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,kBAACN,GAAA,EAAD,CACEtT,QAAS,SAACnR,GAERA,EAAMswC,yBAQZC,GAAmB,SACvBC,EACAC,EACAvuC,EACAwuC,GAJuB,OAMvB,yBACEvwC,MAAO,CACLiV,QAAS,SAGX,kBAAC,KAAD,CAAS+B,UAAU,MAAMpU,MAAM,0BAC7B,uBAAG0U,KAAK,MACN,kBAACkP,GAAA,EAAD,CACExV,QAAS,SAACnR,GAGRwwC,GAAe,GACfE,EAAexuC,QAMvB,yBACE/B,MAAO,CACL6W,WAAY,UAGhB,kBAAC,KAAD,CAASG,UAAU,MAAMpU,MAAM,kBAC7B,uBAAG0U,KAAK,MACN,kBAACsW,GAAA,EAAD,CACE5c,QAAS,SAACnR,SAQhB,yBACEG,MAAO,CACL6W,WAAY,UAGhB,uBACES,KAAK,KACLtX,MAAO,CACLsW,MAAO,qBAGT,kBAAC,KAAD,CACEqO,UAAW,kBAAM2rB,EAAsBvuC,IACvCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,kBAACN,GAAA,EAAD,CACEtT,QAAS,SAACnR,GAERA,EAAMswC,yBA8aHzpB,GAtaG,SAACrR,GAAW,IAAD,EACGhH,oBAAS,GADZ,gCAEaA,oBAAS,IAFtB,mBAEpBmiC,EAFoB,KAENC,EAFM,OAGWpiC,oBAAS,GAHpB,mBAGpBqiC,EAHoB,KAGPL,EAHO,OAIWhiC,mBAAS,IAJpB,mBAIpByhC,EAJoB,KAIPS,EAJO,OAOwBtiC,EACjD,GACA,iBATyB,mBAOpB0iC,EAPoB,KAOJC,EAPI,OAWgC3iC,EACzD,GACA,mBAbyB,mBAWE4iC,GAXF,aAegC5iC,EACzD,GACA,mBAjByB,mBAepB6iC,EAfoB,KAeEC,EAfF,OAsBe1iC,mBAAS,IAtBxB,mBAsBpB4gC,EAtBoB,KAsBLC,EAtBK,KAwB3BthC,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACK8iC,EAAyB,CAChDnwC,WAAY,CACVC,OAAQ,CACNswC,YAAY,MAJE,OACdloC,EADc,OASpBomC,EAAiBpmC,GATG,2CAAH,qDAWnBmoC,KACC,IAEHlwC,QAAQC,IAAI,iBAAkBiuC,GAE9B,IASMqB,EAAqB,uCAAG,WAAOvuC,GAAP,iBAAA+L,EAAA,sEACK+iC,EAA2B,CAC1DpwC,WAAY,CACVE,aAAc,CACZoB,SAJsB,QACtBmvC,EADsB,SAU4B,OAA9BA,EAAmB7rC,QAC3C4Z,GAAwB,qBAClBkyB,EAAmBlC,EAAc9tB,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACpEmtC,EAAiBiC,IAEjB3tB,GAAsB,yCAfI,2CAAH,sDAkCrBisB,EAAe,uCAAG,WAAOpuC,EAAM0H,EAAW6lC,GAAxB,mCAAA9gC,EAAA,6DAKhBsjC,EAA6B,WACjC,OAAOroC,EAAU/D,MAAMnE,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQJ,EAAKU,KAGvDsvC,EARuB,WAC3B,OAAOpC,EAAcpuC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQsH,EAAUhH,IAOzCuvC,GAEjBC,EAAYH,IAEZI,EACJ5C,EAAmBpsC,MAAMlC,OAAS,EAAlC,eAESsuC,EAFT,CAGMpsC,MACEosC,EAAmBpsC,MAAMlC,OAAS,EAC9BsuC,EAAmBpsC,MAAM3B,KAAI,SAAC4B,GAAD,OAASA,EAAIV,MAC1C,KAER6sC,EAEA6C,EACJ1oC,EAAU/D,MAAM1E,OAAS,EACrByI,EAAU/D,MAAMnE,KAAI,SAAC8tC,GACnB,OAAO,eACFA,EADL,CAEEnsC,MACEmsC,EAAcnsC,OAASmsC,EAAcnsC,MAAMlC,OAAS,EAChDquC,EAAcnsC,MAAM3B,KAAI,SAAC6wC,GAAD,OAAaA,EAAO,IAAU,MACtD,QAGV,GAEAC,EArCgB,uBAsCjB5oC,EAAU/D,MAAMxD,MAAM,EAAG+vC,IAtCR,CAuCpB3C,GAvCoB,aAwCjB7lC,EAAU/D,MAAMxD,MAAM+vC,EAAY,KAGvCxwC,QAAQC,IAAI,2BAA4B2wC,GAElCC,EA7CgB,uBA8CjBH,EAAejwC,MAAM,EAAG+vC,IA9CP,CA+CpBC,GA/CoB,aAgDjBC,EAAejwC,MAAM+vC,EAAY,KAGhCM,EAAyBzxC,OAAOkjB,OACpC,GACA2rB,EAAcoC,GAFejxC,OAAA,IAAAA,CAAA,GAIxB2I,EAJwB,CAK3B/D,MAAO4sC,KAILvuB,EAAcjjB,OAAOkjB,OAAO,GAAI2rB,EAAcoC,GAAhCjxC,OAAA,IAAAA,CAAA,GACf2I,EADe,CAElB/D,MAAO2sC,KAGH5C,EAjEgB,uBAkEjBE,EAAcztC,MAAM,EAAG6vC,IAlEN,CAmEpBhuB,GAnEoB,aAoEjB4rB,EAAcztC,MAAM6vC,EAAiB,KApEpB,UAuEWN,EAA2B,CAC1DtwC,WAAY,CACVE,aAAc,CACZoB,GAAIgH,EAAUhH,KAGlB4D,KAAK,eACAksC,EADD,CAEF7C,UAAW3rB,EAAYhkB,SA/EL,SAuEhByyC,EAvEgB,SAoFkC,OAA9BA,EAAmBzsC,QAC3C4Z,GAAwB,qBACxBiwB,EAAiBH,IAEjBvrB,KAxFoB,4CAAH,0DA4Ff0sB,EAAyB,uCAAG,WAAOnuC,EAAIgH,GAAX,2BAAA+E,EAAA,6DAK1BsjC,EAA6B,WACjC,OAAOroC,EAAU/D,MAAMnE,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,IAGlDsvC,EARuB,WAC3B,OAAOpC,EAAcpuC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQsH,EAAUhH,IAOzCuvC,GAEjBC,EAAYH,IAEZO,EAb0B,uBAc3B5oC,EAAU/D,MAAMxD,MAAM,EAAG+vC,IAdE,aAe3BxoC,EAAU/D,MAAMxD,MAAM+vC,EAAY,KAGjCluB,EAAcjjB,OAAOkjB,OAAO,GAAI2rB,EAAcoC,GAAhCjxC,OAAA,IAAAA,CAAA,GACf2I,EADe,CAElB/D,MAAO2sC,KAGH5C,EAvB0B,uBAwB3BE,EAAcztC,MAAM,EAAG6vC,IAxBI,CAyB9BhuB,GAzB8B,aA0B3B4rB,EAAcztC,MAAM6vC,EAAiB,KA1BV,SA6BCN,EAA2B,CAC1DtwC,WAAY,CACVE,aAAc,CACZoB,GAAIgH,EAAUhH,KAGlB4D,KAAK,eACA0d,EADD,CAEF2rB,UAAW3rB,EAAYhkB,SArCK,QA6B1ByyC,EA7B0B,SA0CwB,OAA9BA,EAAmBzsC,QAC3C4Z,GAAwB,0BACxBiwB,EAAiBH,IAEjBvrB,KA9C8B,4CAAH,wDAkDzBqsB,EAA2B,uCAAG,WAAOjB,EAAoB7sC,GAA3B,uBAAA+L,EAAA,6DAK5BujC,EAJuB,WAC3B,OAAOpC,EAAcpuC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,GAG/BuvC,GAEjBK,EAP4B,uBAQ7B1C,EAAcoC,GAAgBrsC,OARD,CAShC4pC,IAGIvrB,EAAcjjB,OAAOkjB,OAAO,GAAI2rB,EAAcoC,GAAhCjxC,OAAA,IAAAA,CAAA,GACf6uC,EAAcoC,GADC,CAElBrsC,MAAO2sC,KAGH5C,EAjB4B,uBAkB7BE,EAAcztC,MAAM,EAAG6vC,IAlBM,CAmBhChuB,GAnBgC,aAoB7B4rB,EAAcztC,MAAM6vC,EAAiB,KApBR,SAuBDN,EAA2B,CAC1DtwC,WAAY,CACVE,aAAc,CACZoB,GAAIA,IAGR4D,KAAK,eACA0d,EADD,CAEF2rB,UAAW3rB,EAAYhkB,SA/BO,QAuB5ByyC,EAvB4B,SAoCsB,OAA9BA,EAAmBzsC,QAC3C4Z,GAAwB,wBACxBiwB,EAAiBH,GACjBsB,GAAe,IAEf7sB,KAzCgC,2CAAH,wDA6CjC,OACE,oCACE,yBAAKhkB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,cAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,sBAEZjB,SAAU,SAAC8R,GAAD,OAlPD,SAAChS,GACpB,GAAI4xC,EAAe/uC,KAAKtB,OAAS,EAAG,CAClC,IAAM6wC,EAAmBR,EAAe/uC,KAAKuf,QAAO,SAAC9f,GAAD,OAClDA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCq1B,EAAiBiC,IA6OQ5iB,CAAaxd,EAAE/F,OAAOjM,WAG3C,kBAAC,IAAD,CAEES,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMy/B,GAAgB,KAJjC,YAUF,yBAAKjxC,UAAU,uCAEf,yBAAKA,UAAU,uCACZmxC,EAAezjC,WAAa,kBAACshB,GAAD,MAE5BmiB,EAAexjC,QAAU8hC,EAAc3uC,OAAS,IAC/C,yBACEN,MAAO,CACL4W,UAAW,SAGb,kBAAC,GAAD,CAAOhU,MAAM,wBAIhB+tC,EAAexjC,MAAQ8hC,EAAc3uC,OAAS,GAC7C,yBAAKd,UAAU,2BACZyvC,EAAcpuC,KAAI,SAACkI,GAClB,OACE,yBAAKvJ,UAAU,gCACb,kBAAC,KAAD,CACEuyC,WAAW,EACXx4B,UAAU,EACVy4B,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACV,kBAAC9F,GAAA,EAAD,CAAoB+F,OAAQD,EAAW,GAAK,KAE9C1yC,UAAU,iCAEV,kBAACuwC,GAAD,CACEqC,OAAQrpC,EAAU1J,KAClBS,IAAI,IACJN,UAAU,6BACV6yC,MAAOjC,GACLC,EACAC,EACAvnC,EAAUhH,GACVwuC,IAGF,yBAAK/wC,UAAU,kCACZuJ,EAAU/D,OACT+D,EAAU/D,MAAM1E,OAAS,GACzByI,EAAU/D,MAAMnE,KAAI,SAACQ,GACnB,OACE,yBAAK7B,UAAU,qCACb,kBAAC,KAAD,CACEuyC,WAAW,EACXx4B,UAAU,EACVy4B,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACV,kBAAC9F,GAAA,EAAD,CACE+F,OAAQD,EAAW,GAAK,KAG5B1yC,UAAU,iCAEV,kBAACuwC,GAAD,CACEqC,OAAQ/wC,EAAKuB,OAAS,GACtB9C,IAAI,IACJN,UAAU,6BACV6yC,MAAOpC,GACLC,EACAnnC,EACA1H,EAAKU,KAGP,kBAACuwC,GAAD,CACEpD,iBAAkBA,EAClBD,cAAeA,EACf5tC,KAAMA,EACN0H,UAAWA,EACX0mC,gBAAiBA,EACjBC,gBACEoB,EAAqB5jC,oBASlCnE,EAAU/D,MAAM1E,OAAS,IAC1B,kBAAC,GAAD,CAAOsC,MAAM,4BAanC,kBAAC2vC,GAAD,CACElrB,sBAAuBmpB,EACvBlpB,yBAA0BmpB,EAC1BvB,iBAAkBA,EAClBD,cAAeA,IAEjB,kBAACuD,GAAD,CACEnrB,sBAAuBqpB,EACvBppB,yBAA0B+oB,EAC1BnB,iBAAkBA,EAClBD,cAAeA,EACfY,4BAA6BA,EAC7BC,YAAaA,IAGf,kBAAC,KAAD,CACEltC,MAAM,0BACNuc,SAAS,EACTwE,KA/UgB,SAAC5S,GACrB0/B,GAAgB,IA+UZ7sB,SA5UoB,SAAC7S,GACzB0/B,GAAgB,IA4UZtkB,OAAQ,KACRrI,OAAO,QAEP,kBAACrlB,EAAD,CAAYI,MAAM,4B,UCljBlBggB,GAAYC,KAAZD,QASFI,GAA0B,SAAC7I,GAC7BD,KAAatJ,MAAM,CACfuJ,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAK7CkN,GAAwB,SAACpN,GAC3BD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAqWpCyiB,GA9UK,SAAC,GAAyF,IAAvF1R,EAAsF,EAAtFA,sBAAuBC,EAA+D,EAA/DA,yBAA0BmrB,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAA0B,EAE5DzkC,EAAe,GAAI,WAAY,QAF6B,mBAElG0kC,EAFkG,KAEnFC,EAFmF,OAGzEvkC,oBAAS,GAHgE,mBAGxFgR,GAHwF,aAIjEhR,oBAAS,GAJwD,mBAIlG+qB,EAJkG,KAIpFC,EAJoF,OAKzDhrB,mBAAS,IALgD,mBAKlGqR,EALkG,KAKhFD,EALgF,OAM3CpR,oBAAS,GANkC,mBAMlGmR,EANkG,aAO7CnR,mBAAS,KAPoC,mBAO1EwkC,GAP0E,aAQzExkC,mBAAS,IARgE,mBAQlGwR,EARkG,KAQxFC,EARwF,OASvEzR,oBAAS,GAT8D,mBASlG0R,EATkG,KASvFC,EATuF,OAU1D3R,oBAAS,GAViD,mBAUlG0a,EAVkG,KAUjFC,EAViF,OAWzE3a,mBAAS,IAXgE,mBAWlGoa,EAXkG,KAWxFC,EAXwF,OAYjFra,mBAAS,IAZwE,mBAYlGhP,EAZkG,KAY5FyzC,EAZ4F,QAa/DzkC,mBAAS,IAbsD,qBAalG0kC,GAbkG,MAanFC,GAbmF,MAmBnGnjC,GAAY,uCAAG,8BAAA/B,EAAA,6DACjBkS,GAAa,GAEP+B,EAAW,IAAIC,SACrBnC,EAASvc,SAAQ,SAAA2e,GACbF,EAASG,OAAO,SAAUD,EAAMA,EAAK5iB,SAEzC0iB,EAASG,OAAO,OAAQ7iB,GACxB0iB,EAASG,OAAO,YAAa6wB,IARZ,SAWSH,EAAoB,CAC1CjtC,KAAMoc,IAZO,OAWXkxB,EAXW,OAgBjBjzB,GAAa,GAETizB,GAAsC,OAAvBA,EAAY5tC,QAE3BqtC,EAAa,GAAD,oBAAKD,GAAL,cACR1wC,GAAIkxC,EAAW,KAAW,GAC1BnzC,IAAKmzC,EAAW,KAAW,GAC3B5zC,KAAM4zC,EAAW,MAAY,GAC7B3wC,UAAW2wC,EAAW,WAAiB,GACvCC,KAAMD,EAAW,MAAY,GAC7BtwC,MAAOswC,EAAW,OAAa,IAE5BA,MAGPnzB,EAAY,IACZE,GAAa,GACbf,GAAwB,mBACxBqI,GAAyB,GACzBwrB,EAAQ,IACRD,EAA0B,IAK1BvrB,GAAyB,IAGzB9D,GAAsB,6CA5CT,4CAAH,qDAmGZhB,GAAc,CAEhBE,SAAU,SAAAT,GACNnC,GAAY,SAAA6C,GACR,IAAMpL,EAAQsI,EAASpe,QAAQwgB,GACzBW,EAAc/C,EAASre,QAE7B,OADAohB,EAAYC,OAAOtL,EAAO,GACnBqL,MAIfE,aAAc,SAAAb,GAIV,OAHAnC,GAAY,SAAA6C,GACR,MAAM,GAAN,oBAAW9C,GAAX,CAAqBoC,QAElB,GAEXpC,YAwFJ,IAAM4L,GACF,6BACK1C,EAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAIR,OACI,oCACI,kBAAC,KAAD,CACIQ,MAAO,CACHuT,IAAK,QAET3Q,MAAM,gBACNuc,QAASkI,EACT1D,KAAM9T,GACN+T,SAxKS,SAAC7S,GAClBuW,GAAyB,IAwKjBxD,OAAO,eACPsI,cAAe,CACXnb,QAAS8O,EACTsM,SAAU,SACVntB,WAvKRyzC,EAAczlC,WA0KV2W,UAAW,CACP/S,OAAQ,IACRqG,QAAS,SAIb,kBAAC1Y,EAAD,CACII,MAAM,OACNE,MAAOM,EACPA,KAAK,OACLJ,SAAU,SAAC8R,GAAD,OAAY+hC,EAAQ/hC,EAAE/F,OAAOjM,QACvCI,QAASwzC,EAAc9lC,MAAd,WAETzN,YAAauzC,EAAc9lC,MAAd,aAGjB,yBAAK7M,MAAO,CACR4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,aACA,kBAAC,KAAD,CACIH,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAzEhB,SAAsBb,GAiBlB,MAhBiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAElDsX,KAAQvJ,MAAM,qCAEHoV,EAAKnI,KAAO,KAAO,KAAO,GAErC1D,KAAQvJ,MAAM,gCAbtB,SAAmBpK,EAAKwoB,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc7oB,GAcrBuoB,CAAU/I,GAAM,SAAAwG,GACZC,EAAYD,GACZuqB,GAAiB/wB,GACjB+G,GAAoB,OAGjB,GAyDKvG,UAAU,GAETgG,EAAW,yBAAK1d,IAAK0d,EAAU3lB,IAAI,SAAS9C,MAAO,CAAEgT,MAAO,UAAeyY,IAKhF,yBAAKzrB,MAAO,CACR4W,UAAW,SAEf,wBAAIpX,UAAU,mBAAd,uBAKA,kBAAC,GAAD,eACIijB,UAAU,EACVjjB,UAAU,qBACVykB,SAAS,UACTjkB,MAAO,CACHwW,WAAY,SAEZgM,IAEJ,uBAAGhjB,UAAU,wBACT,kBAAC2zC,GAAA,EAAD,OAEJ,uBAAG3zC,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2GAMHmzC,EAAc9lC,MAAd,cACG,uBAAG7M,MAAO,CACNsW,MAAO,2BACPq8B,EAAc9lC,MAAd,eASZ,kBAAC,GAAD,CACIuS,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbC,sBAAsB,EACtBG,oBAAqBA,EACrBD,wBAAyBA,EACzBE,iBAAkBA,MCxX1BsN,GAAWvuB,IAAXuuB,OAEF/N,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBA8L/BwX,iBAtLM,SAAC,GAAuB,EAArBxY,QAAsB,IAAD,EACTjH,mBAAS,IADA,mBACpCokC,EADoC,KACzBC,EADyB,OAGAzkC,EAAe,GAAI,aAHnB,mBAGpCmlC,EAHoC,KAGxBC,EAHwB,OAIQplC,EACjD,GACA,eANyC,mBAIlBqlC,GAJkB,aAQcrlC,EACvD,GACA,eAVyC,mBAQZslC,GARY,WAa3C3lC,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACKulC,EAAqB,IAD1B,OACVG,EADU,OAGhBd,EAAac,GAHG,2CAAH,qDAKfC,KACC,IApBwC,MAsBeplC,oBAAS,GAtBxB,mBAsBpCgZ,EAtBoC,KAsBbC,EAtBa,KAiCrCosB,EAAiB,uCAAG,WAAO3xC,GAAP,eAAA+L,EAAA,sEACKwlC,EAAuB,CAClD7yC,WAAY,CACVE,aAAc,CACZoB,SAJkB,QAClB4xC,EADkB,SAUwB,OAA1BA,EAAetuC,OACnC4Z,GAAwB,mBAExBuE,GACE,qDAdoB,2CAAH,sDAmBjBowB,EAAiB,uCAAG,WAAO7xC,GAAP,iBAAA+L,EAAA,sEACKylC,EAAuB,CAClD9yC,WAAY,CACVE,aAAc,CACZoB,SAJkB,QAClB8xC,EADkB,SAUwB,OAA1BA,EAAexuC,QACnC4Z,GAAwB,iBAClB60B,EAAerB,EAAUtxB,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KAC5D2wC,EAAaoB,IAEbtwB,GAAsB,yCAfA,2CAAH,sDAmBvB,OACE,oCAIE,yBAAKhkB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,UAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,kBACZoxB,SAAU,SAACvyB,GAAD,OA7DD,SAACA,GACpB,GAAIq0C,EAAWxxC,KAAKtB,OAAS,EAAG,CAC9B,IAAMwzC,EAAeV,EAAWxxC,KAAKuf,QAAO,SAAC9f,GAAD,OAC1CA,EAAKhC,KAAK4B,SAASlC,MAErB2zC,EAAaoB,IAwDgBvlB,CAAaxvB,OAItC,kBAAC,IAAD,CAEES,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YAUF,yBAAK9nB,UAAU,uCAEf,yBAAKA,UAAU,uCACZ4zC,EAAWjmC,MAAQslC,EAAUnyC,OAAS,GACrC,yBAAKd,UAAU,4CACZizC,EAAU5xC,KAAI,SAACgI,GACd,OACE,yBAAKrJ,UAAU,iDAIb,yBAAKA,UAAU,qDACb,yBAAKsD,IAAI,YAAYiI,IAAKlC,EAAMvG,aAElC,yBAAK9C,UAAU,sDACb,gCAAMqJ,EAAMxJ,KAAZ,KAEA,yBACEW,MAAO,CACLiV,QAAS,OACTC,eAAgB,kBAGlB,kBAAC,KAAD,CAAS8B,UAAU,MAAMpU,MAAM,qBAC7B,kBAAC,IAAD,CACEkX,KAAK,QACLta,UAAU,6BACV+C,KAAM,kBAAC8hB,GAAA,EAAD,MACNrT,QAAS,kBAAM0iC,EAAkB7qC,EAAM9G,MAEvC,0BACE/B,MAAO,CACLqX,SAAU,SAFd,gBAUJ,kBAAC,KAAD,CAASL,UAAU,MAAMpU,MAAM,gBAC7B,kBAAC,KAAD,CACE+hB,UAAW,kBAAMivB,EAAkB/qC,EAAM9G,KACzCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,kBAAC,IAAD,CACE9K,KAAK,QACLhb,KAAK,OACLi1C,QAAQ,EACRxxC,KAAM,kBAAC+hB,GAAA,EAAD,iBAYzB8uB,EAAWlmC,WAAa,kBAACshB,GAAD,MAExB4kB,EAAWjmC,QAAUslC,EAAUnyC,OAAS,IACvC,kBAAC,GAAD,CAAOsC,MAAM,qBAKlBwwC,EAAWjmC,MACV,kBAAC6mC,GAAD,CACE3sB,sBAAuBA,EACvBC,yBAA0BA,EAC1BmrB,UAAWW,EAAWxxC,KACtB8wC,aAAcA,QCtNTuB,GARD,SAAC5+B,GACX,OACI,uCCAO6+B,GAJC,SAAC7+B,GAChB,OAAO,yCC2BFmO,IAfmBnU,MAAaC,MAAM,CAC1C1M,MAAOyM,MAAaxQ,MAAM,SAASF,SAAS,+BAC5Cw1C,WAAY9kC,MACTxQ,MAAM,eACNF,SAAS,kCAWgB,SAACyX,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,0BAIzC7G,GAAgB,CACpB7M,MAAO,GACPwxC,UAAW,GACXD,WAAY,GACZE,WAAY,IAqNCC,GAhNQ,SAAC,GAAe,qBAIjCrmC,EAAe,GAAI,sBAJa,mBAElCsmC,EAFkC,KAGlCC,EAHkC,OAKgBvmC,EAClD,GACA,gBAPkC,mBAK7BwmC,EAL6B,KAKVC,EALU,KAUpC9mC,qBAAU,YACa,uCAAG,sBAAAE,EAAA,sEACQ4mC,EAAuB,IAD/B,yDAAH,qDAKrBxM,KACC,CAACqM,IAIJ,IAAM1kC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACU0mC,EAA8B,CACzD7uC,KAAM,CACJ/C,MAAOkN,EAAOlN,MACdwxC,UAAWtkC,EAAOskC,UAClBD,WAAYrkC,EAAOqkC,WACnBE,WAAYvkC,EAAOukC,cANJ,QACbM,EADa,SAW6B,OAA1BA,EAAetvC,QAzDR+Q,OA0D3B6I,EAzDJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,oBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzCvG,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GA5BH,iCA9CS,IAACoG,IA8CV,OAAH,wDA+BZnG,EAA4B,SAACH,EAAQI,GACzC,QAAKJ,EAAOlN,OAAUkN,EAAOqkC,YAAejkC,IAiB9C,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAbAglC,EAAkB7yC,MAClBxB,OAAOC,KAAKo0C,EAAkB7yC,MAAMtB,OAAS,EAEtC,eAAKm0C,EAAkB7yC,MAEvB6N,KAUN,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAKpR,UAAU,2BACb,yBAAKA,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOlN,MACdvD,KAAK,QACLF,QACGsR,EAAQ7N,OAAS2N,EAAO3N,QACvB4N,GACA+jC,EAAwB1nC,MAAxB,YAEJzN,YACGqR,EAAQ7N,OAAS2N,EAAO3N,QACvB4N,GACA+jC,EAAwB1nC,MAAxB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAOskC,UACd/0C,KAAK,YACLF,QACGsR,EAAQ2jC,WAAa7jC,EAAO6jC,YAC3B5jC,GACA+jC,EAAwB1nC,MAAxB,gBAEJzN,YACGqR,EAAQ2jC,WAAa7jC,EAAO6jC,YAC3B5jC,GACA+jC,EAAwB1nC,MAAxB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,qCACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOukC,WACdh1C,KAAK,aACLF,QACGsR,EAAQ4jC,YAAc9jC,EAAO8jC,aAC5B7jC,GACA+jC,EAAwB1nC,MAAxB,iBAEJzN,YACGqR,EAAQ4jC,YAAc9jC,EAAO8jC,aAC5B7jC,GACA+jC,EAAwB1nC,MAAxB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAKtB,yBACElR,UAAU,+BACVQ,MAAO,CACL6W,WAAY,SAGd,kBAACpY,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOqkC,WACd90C,KAAK,aACLF,QACGsR,EAAQ0jC,YAAc5jC,EAAO4jC,aAC5B3jC,GACA+jC,EAAwB1nC,MAAxB,iBAEJzN,YACGqR,EAAQ0jC,YAAc5jC,EAAO4jC,aAC5B3jC,GACA+jC,EAAwB1nC,MAAxB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,kBAAC,IAAD,CACE5F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACTtR,SAAU+Q,EAA0BH,EAAQI,GAC5C1Q,UAAU,8BAJZ,qBASA,yBACEQ,MAAO,CACLgc,aAAc,eCvOtB5M,GAAmBC,MAAaC,MAAM,CAC1CslC,aAAcvlC,MACXxQ,MAAM,SACNF,SAAS,+BAWR6kB,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBmlC,aAAc,GACdlsC,QAAS,GACT1B,MAAO,GACPD,MAAO,GACP8tC,eAAgB,IAsOHP,GAjOQ,SAAC,GAAe,qBAIjCrmC,EAAe,GAAI,yBAJa,mBAElC6mC,EAFkC,KAGlCC,EAHkC,OAK0B9mC,EAC5D,GACA,yBAPkC,mBAK7B+mC,EAL6B,KAKP/M,EALO,KAUpCr6B,qBAAU,YACa,uCAAG,sBAAAE,EAAA,sEACQm6B,EAA8B,IADtC,yDAAH,qDAKrBC,KACC,CAAC4M,IAEJ,IAAMjlC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACYinC,EAAiC,CAC9DpvC,KAAM,CACJivC,aAAc9kC,EAAO8kC,aACrBlsC,QAASoH,EAAOpH,QAChB1B,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MACd8tC,eAAgB/kC,EAAO+kC,kBAPR,QACbI,EADa,SAYiC,OAA5BA,EAAiB5vC,QAzDZ+Q,OA0D3B6I,EAzDJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzCvG,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GA7BH,iCA7CS,IAACoG,IA6CV,OAAH,wDAgCZnG,EAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAO8kC,eAAiB1kC,GAiB/B,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBiB,oBAAoB,EACpBZ,cAdAulC,EAAqBpzC,MACrBxB,OAAOC,KAAK20C,EAAqBpzC,MAAMtB,OAAS,EAEzC,eAAK00C,EAAqBpzC,MAE1B6N,KAWN,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAKpR,UAAU,2BACb,yBAAKA,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAO8kC,aACdv1C,KAAK,eACLF,QACGsR,EAAQmkC,cAAgBrkC,EAAOqkC,eAC9BpkC,GACAskC,EAAyBjoC,MAAzB,mBAEJzN,YACGqR,EAAQmkC,cAAgBrkC,EAAOqkC,eAC9BpkC,GACAskC,EAAyBjoC,MAAzB,mBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAItB,yBAAKlR,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAskC,EAAyBjoC,MAAzB,YAEJzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GACAskC,EAAyBjoC,MAAzB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAskC,EAAyBjoC,MAAzB,YAEJzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GACAskC,EAAyBjoC,MAAzB,YAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKlR,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAO+kC,eACdx1C,KAAK,iBACLF,QACGsR,EAAQokC,gBAAkBtkC,EAAOskC,iBAChCrkC,GACAskC,EAAyBjoC,MAAzB,qBAEJzN,YACGqR,EAAQokC,gBAAkBtkC,EAAOskC,iBAChCrkC,GACAskC,EAAyBjoC,MAAzB,qBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAKtB,yBAAKlR,UAAU,qCACb,kBAAC,GAAD,CACEX,MAAM,UACNE,MAAO+Q,EAAOpH,QACdrJ,KAAK,UACLF,QACGsR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACAskC,EAAyBjoC,MAAzB,cAEJzN,YACGqR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACAskC,EAAyBjoC,MAAzB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAMxB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,kBAAC,IAAD,CACE5F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACTtR,SAAU+Q,EAA0BH,EAAQI,GAC5C1Q,UAAU,8BAJZ,uBASA,yBACEQ,MAAO,CACLgc,aAAc,eCzOtBwH,IAfmBnU,MAAaC,MAAM,CAC1C1M,MAAOyM,MAAaxQ,MAAM,SAASF,SAAS,+BAC5Cw1C,WAAY9kC,MACTxQ,MAAM,eACNF,SAAS,kCAWgB,SAACyX,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,0BAIxC7G,GAAgB,CACpBoX,UAAW,GACXI,SAAU,GACVF,gBAAiB,GACjBmuB,WAAY,IAqNCC,GAhNO,SAAC,GAAe,qBAIhClnC,EAAe,GAAI,iBAJY,mBAEjCsmC,EAFiC,KAGjCC,EAHiC,OAKiBvmC,EAClD,GACA,cAPiC,mBAK5BwmC,EAL4B,KAKTC,EALS,KAUnC9mC,qBAAU,YACa,uCAAG,sBAAAE,EAAA,sEACQ4mC,EAAuB,IAD/B,yDAAH,qDAGrBxM,KACC,CAACqM,IAIJ,IAAM1kC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACU0mC,EAA8B,CACzD7uC,KAAM,CACJkhB,UAAW/W,EAAO+W,UAClBI,SAAUnX,EAAOmX,SACjBF,gBAAiBjX,EAAOiX,gBACxBmuB,WAAYplC,EAAOolC,cANJ,QACbP,EADa,SAW6B,OAA1BA,EAAetvC,QAvDR+Q,OAwD3B6I,EAvDJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,oBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BA+DzCvG,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GA5BH,iCA5CS,IAACoG,IA4CV,OAAH,wDAiDlB,OACE,kBAAC,IAAD,CACEjG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAbAglC,EAAkB7yC,MAClBxB,OAAOC,KAAKo0C,EAAkB7yC,MAAMtB,OAAS,EAEtC,eAAKm0C,EAAkB7yC,MAEvB6N,KAUN,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAKpR,UAAU,2BACb,yBAAKA,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdxnB,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA+jC,EAAwB1nC,MAAxB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACA+jC,EAAwB1nC,MAAxB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOmX,SACd5nB,KAAK,WACLF,QACGsR,EAAQwW,UAAY1W,EAAO0W,WAC1BzW,GACA+jC,EAAwB1nC,MAAxB,eAEJzN,YACGqR,EAAQwW,UAAY1W,EAAO0W,WAC1BzW,GACA+jC,EAAwB1nC,MAAxB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAItB,yBAAKlR,UAAU,qCACb,kBAAC,GAAD,CACEX,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd1nB,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA+jC,EAAwB1nC,MAAxB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACA+jC,EAAwB1nC,MAAxB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBASxB,yBACIlR,UAAU,gCACV,kBAAC,GAAD,CACEof,KAAM,EACN/f,MAAM,2CACNE,MAAO+Q,EAAOolC,WACd71C,KAAK,aACLF,QACGsR,EAAQykC,YAAc3kC,EAAO2kC,aAC5B1kC,GACA+jC,EAAwB1nC,MAAxB,iBAEJzN,YACGqR,EAAQykC,YAAc3kC,EAAO2kC,aAC5B1kC,GACA+jC,EAAwB1nC,MAAxB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAOxB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,kBAAC,IAAD,CACE5F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EAEThR,UAAU,8BAJZ,UASA,yBACEQ,MAAO,CACLgc,aAAc,eCvMtBwH,IA1BmBnU,MAAaC,MAAM,CACxC8lC,YAAa/lC,MACZxQ,MAAM,gBACNF,WACAY,IAAI,EAAG,gDACV81C,aAAchmC,MACXxQ,MAAM,wBACNF,WACAY,IAAI,EAAG,wDACP+1C,MACC,CAACjmC,IAAQ,eAAgB,MACzB,qDAewB,SAAC+G,GAC3BD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,0BAK7C7G,GAAgB,CAClBpQ,KAAM,GACN2H,MAAO,GACPD,MAAO,GACPwuC,QAAS,GACT/lC,SAAS,GACT4lC,YAAa,GACbC,aAAc,IA8PHG,GApPa,SAAC,GAAgB,qBAEwBvnC,EAAe,GAAI,yBAF5C,mBAEjCsmC,EAFiC,KAERC,EAFQ,OAGYvmC,EAAe,GAAI,sBAH/B,mBAGjCwmC,EAHiC,KAGdC,EAHc,KAOxC9mC,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACU4mC,EAAuB,IADjC,yDAAH,qDAIrBxM,KACD,CAACqM,IAIJxzC,QAAQC,IAAI,oBAAoByzC,GAIhC,IAAM5kC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEAGY0mC,EAA8B,CACvD7uC,KAAM,CACFtG,KAAMyQ,EAAOzQ,KACb2H,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MACdyI,SAAUM,EAAON,SACjB+lC,QAASzlC,EAAOslC,YAChBK,cAAe3lC,EAAOulC,gBAVb,QAGXV,EAHW,SAe+B,OAA1BA,EAAetvC,QAvEZ+Q,OAwErB6I,EAvER9I,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,oBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAgFvCvG,EAAQ2a,aAGRlH,KAMJzT,EAAQC,eAAc,GArCL,iCAxDO,IAACoG,IAwDR,OAAH,wDAsDlB,OACI,kBAAC,IAAD,CACIjG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAbAglC,EAAkB7yC,MAAQxB,OAAOC,KAAKo0C,EAAkB7yC,MAAMtB,OAAS,EAChE,eAAKm0C,EAAkB7yC,MAGvB6N,KAaN,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCAEI,yBAAKpR,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,OACLD,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC3BmR,GAAgB+jC,EAAwB1nC,MAAxB,WAEtBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAC/BmR,GAAgB+jC,EAAwB1nC,MAAxB,WACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,YAI5B,yBAAKlR,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,OACLD,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QAAUsR,EAAQzJ,OAASuJ,EAAOvJ,QAC5BwJ,GAAgB+jC,EAAwB1nC,MAAxB,YAEtBzN,YAAcqR,EAAQzJ,OAASuJ,EAAOvJ,QAChCwJ,GAAgB+jC,EAAwB1nC,MAAxB,YACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,cAMhC,yBAAK1Q,MAAO,CACRgT,MAAO,MACP0iC,aAAc,SAEL,kBAACj3C,EAAD,CACDK,KAAK,OACLD,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QAAUsR,EAAQ1J,OAASwJ,EAAOxJ,QAC5ByJ,GAAgB+jC,EAAwB1nC,MAAxB,YAEtBzN,YAAcqR,EAAQ1J,OAASwJ,EAAOxJ,QAChCyJ,GAAgB+jC,EAAwB1nC,MAAxB,YACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,aAMhC,yBAAK1Q,MAAO,CACRgT,MAAO,MACP0iC,aAAc,SAEN,kBAACj3C,EAAD,CACAK,KAAK,WACLD,MAAM,0DACNE,MAAO+Q,EAAON,SACdnQ,KAAK,WACLF,QAAUsR,EAAQjB,UAAYe,EAAOf,WAC/BgB,GAAgB+jC,EAAwB1nC,MAAxB,eAEtBzN,YAAcqR,EAAQjB,UAAYe,EAAOf,WACnCgB,GAAgB+jC,EAAwB1nC,MAAxB,eACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,gBAMhC,yBAAKlR,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,WACLD,MAAM,eACNE,MAAO+Q,EAAOslC,YACd/1C,KAAK,cACLF,QAAUsR,EAAQ2kC,aAAe7kC,EAAO6kC,cAClC5kC,GAAgB+jC,EAAwB1nC,MAAxB,kBAEtBzN,YAAcqR,EAAQ2kC,aAAe7kC,EAAO6kC,cACtC5kC,GAAgB+jC,EAAwB1nC,MAAxB,kBACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,mBAI5B,yBAAKlR,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,WACLD,MAAM,uBACNE,MAAO+Q,EAAOulC,aACdh2C,KAAK,eACLF,QAAUsR,EAAQ4kC,cAAgB9kC,EAAO8kC,eACnC7kC,GAAgB+jC,EAAwB1nC,MAAxB,mBAEtBzN,YAAcqR,EAAQ4kC,cAAgB9kC,EAAO8kC,eACvC7kC,GAAgB+jC,EAAwB1nC,MAAxB,mBACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,qBAOhC,yBAAK1Q,MAAO,CACR4W,UAAW,UAGf,kBAAC,IAAD,CAEI5F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EAEThR,UAAU,8BALd,sBAUA,yBAAKQ,MAAO,CACRgc,aAAc,eC5PlC+C,IAPiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQyf,KAAZD,SAEFE,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBA+U/Bq/B,GA5TE,SAAC,GAKL,EAJXtuB,sBAIW,EAHXC,yBAGW,EAFX0R,UAEW,EADXC,aACY,IAAD,EAIPhrB,EAAe,GAAI,wBAAyB,QAJrC,mBAGT2nC,GAHS,aAMqBvnC,mBAAS,GAAD,OAAIhM,EAAOqK,QAAX,qBAN7B,mBAMJ+b,EANI,KAMMC,EANN,OAOoCra,oBAAS,GAP7C,mBAOJ0a,EAPI,KAOaC,EAPb,OAS6B3a,mBAAS,GAAD,OAC3ChM,EAAOqK,QADoC,iBATrC,mBASJmpC,EATI,KASUC,EATV,OAY2BznC,oBAAS,GAZpC,mBAYJ0nC,EAZI,KAYSC,EAZT,OAcmB3nC,mBAAS,GAAD,OACjChM,EAAOqK,QAD0B,yBAd3B,mBAcJupC,EAdI,KAcKC,EAdL,OAiBiC7nC,oBAAS,GAjB1C,mBAiBJ8nC,EAjBI,KAiBYC,EAjBZ,KAmBX,SAASprB,EAAUvoB,EAAKwoB,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc7oB,GAkHvB,IAAMgpB,EACJ,6BACG1C,EAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAIE62C,EACJ,6BACGN,EAAc,kBAACrqB,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACrC,yBAAKhnB,UAAU,mBAAf,WAIE82C,EACJ,6BACGH,EAAiB,kBAACzqB,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACxC,yBAAKhnB,UAAU,mBAAf,WAIJ,OACE,oCACE,yBAAKA,UAAU,qBACb,kBAAC,KAAD,CAAM+2C,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,YAAYlkB,IAAI,KAC3B,kBAAC02C,GAAD,OAEF,kBAAC,GAAD,CAASxyB,IAAI,YAAYlkB,IAAI,KAC3B,yBACEE,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZyB,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,yBAAKvX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,UACA,kBAAC,KAAD,CAASwX,UAAU,OAAOpU,MAAO,0BAC/B,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aAzKhB,SAAsBb,GAkCpB,MAjCiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,EAAU/I,GAAM,SAACwG,GACfC,EAAYD,GACI,uCAAG,8BAAA3a,EAAA,6DACXiU,EAAW,IAAIC,UACZE,OAAO,OAAQD,GAFP,SAIC2zB,EAAiC,CACjDjwC,KAAMoc,IALS,QAIXpV,EAJW,SASS,OAAfA,EAAItH,OACb4Z,GAAwB,sBAExBuE,GACE,mDAba,2CAAH,oDAkBhB+H,GACAvC,GAAoB,OAGf,GAwIOvG,UAAU,GAETgG,EACC,yBACEguB,QAAS,kBAAM/tB,EAAY,KAC3B3d,IAAK0d,EACL3lB,IAAI,SACJ9C,MAAO,CAAEgT,MAAO,UAGlByY,IAKN,yBACEzrB,MAAO,CACL+W,YAAa,SAGf,yBAAKvX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,UACA,kBAAC,KAAD,CAASwX,UAAU,OAAOpU,MAAO,qBAC/B,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aA1KhB,SAA0Bb,GAkCxB,MAjCiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,EAAU/I,GAAM,SAACwG,GACfqtB,EAAgBrtB,GACA,uCAAG,8BAAA3a,EAAA,6DACXiU,EAAW,IAAIC,UACZE,OAAO,OAAQD,GAFP,SAIC2zB,EAAiC,CACjDjwC,KAAMoc,IALS,QAIXpV,EAJW,SASS,OAAfA,EAAItH,OACb4Z,GAAwB,sBAExBuE,GACE,mDAba,2CAAH,oDAkBhB+H,GACAyqB,GAAe,OAGV,GAyIOvzB,UAAU,GAETozB,EACC,yBACEY,QAAS,kBAAMX,EAAgB,KAC/B/qC,IAAK8qC,EACL/yC,IAAI,SACJ9C,MAAO,CAAEgT,MAAO,UAGlBqjC,IAKN,yBACEr2C,MAAO,CACL+W,YAAa,SAGf,yBAAKvX,UAAU,iCACb,wBAAIA,UAAU,mBAAd,cACA,kBAAC,KAAD,CAASwX,UAAU,OAAOpU,MAAO,yBAC/B,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEzjB,MAAO,CACLC,aAAc,OAEhBZ,KAAK,SACL4kB,SAAS,eACTzkB,UAAU,kBACVosB,gBAAgB,EAChB9I,aA3KhB,SAA6Bb,GAkC3B,MAjCiC,eAAdA,EAAKnjB,MAAuC,cAAdmjB,EAAKnjB,MAEpDsX,KAAQvJ,MAAM,qCAEDoV,EAAKnI,KAAO,KAAO,KAAO,GAEvC1D,KAAQvJ,MAAM,gCAGhBme,EAAU/I,GAAM,SAACwG,GACfytB,EAAWztB,GACK,uCAAG,8BAAA3a,EAAA,6DACXiU,EAAW,IAAIC,UACZE,OAAO,UAAWD,GAFV,SAIC2zB,EAAiC,CACjDjwC,KAAMoc,IALS,QAIXpV,EAJW,SASS,OAAfA,EAAItH,OACb4Z,GAAwB,qBAExBuE,GACE,kDAba,2CAAH,oDAkBhB+H,GACA6qB,GAAkB,OAGb,GA0IO3zB,UAAU,GAETwzB,EACC,yBACEQ,QAAS,kBAAMP,EAAW,KAC1BnrC,IAAKkrC,EACLnzC,IAAI,SACJ9C,MAAO,CAAEgT,MAAO,UAGlBsjC,KAMR,yBACEt2C,MAAO,CACLgc,aAAc,WAKpB,kBAAC,GAAD,CAASgI,IAAI,WAAWlkB,IAAI,KAC1B,kBAAC42C,GAAD,OAGF,kBAAC,GAAD,CAAS1yB,IAAI,sBAAsBlkB,IAAI,KACrC,kBAAC62C,GAAD,OAGF,kBAAC,GAAD,CAAS3yB,IAAI,qBAAqBlkB,IAAI,KACpC,kBAAC,GAAD,W,8BC9XJktB,GAAWvuB,IAAXuuB,OAmIO4pB,GAjIQ,SAAC,GASV,IARZC,EAQW,EARXA,YACAC,EAOW,EAPXA,eACAC,EAMW,EANXA,aAMW,IALX/3C,oBAKW,MALI,GAKJ,EAJXg4C,EAIW,EAJXA,SACAC,EAGW,EAHXA,YACAnU,EAEW,EAFXA,cACAoU,EACW,EADXA,gBACW,EAC2B7oC,oBAAS,GADpC,mBACS8oC,GADT,aAE2B9oC,mBAAS,IAFpC,mBAEJ0iB,EAFI,KAESC,EAFT,KAyBXjwB,QAAQC,IAAI,eAAgBhC,GA+B5B,OACE,oCACE,yBACEgB,MAAO,CACLmnC,aAAc,iBACdnrB,aAAc,QAEhBxc,UAAU,6BAEV,kBAAC,KAAD,CACEQ,MAAO,CACLgc,aAAc,QAGhB/c,SA1DiB,SAAC8R,GACxB,IAAMqmC,EACJL,GAAgBA,EAAaz2C,OAAS,EAClCy2C,EAAal2C,KAAI,SAACiG,GAChB,OAAOA,EAAK/H,SAEd,GACN+3C,EAAe/lC,EAAE/F,OAAO8f,QAAUssB,EAAgB,IAClDD,GAAe,GACfp2C,QAAQC,IAAI,mBAAoB+P,EAAE/F,OAAO8f,SACzCmsB,EAAYlmC,EAAE/F,OAAO8f,UAiDfA,QAASksB,GANX,cAWA,kBAAC,GAAD,CACEhkC,MAAO,OACPhT,MAAO,CACLqT,OAAQ,OACRpT,aAAc,iBACdoxB,YAAa,kBACbvgB,OAAQ,UAEVgJ,KAAK,SACL5Z,YAAY,GACZoxB,SAAU,SAACvyB,GAAD,OAAWgC,QAAQC,IAAIjC,IACjCE,SA5De,SAAC8R,GAGtB,GAFAigB,EAAejgB,EAAE/F,OAAOjM,OAED,KAAnBgS,EAAE/F,OAAOjM,OACX,GAAI+jC,EAAclhC,MAAQkhC,EAAclhC,KAAKtB,OAAS,EAAG,CAEvD,IAAMixB,EAAgBuR,EAAclhC,KAAKf,KAAI,SAACiG,GAC5C,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGf63C,EAAgB3lB,QAEb,CACL,IAAMC,EACJulB,EAAaz2C,OAAS,EAClBy2C,EAAa51B,QAAO,SAACvH,GACnB,OACEA,GACAA,EAAOva,KAAKwa,cAAc5Y,SAAS8vB,EAAYlX,kBAGnD,GAENq9B,EAAgB1lB,OAqCd,yBACExxB,MAAO,CACLgc,aAAc,WAIpB,kBAAC,KAAS+vB,MAAV,CACE/rC,MAAO,CAAEgT,MAAO,QAChBjU,MAAO83C,EACP73C,aAAcA,EACdC,SA/FW,SAAC43C,GAChBC,EAAeD,GACfM,IACIN,EAAYv2C,QAAUu2C,EAAYv2C,OAASy2C,EAAaz2C,QAE5D22C,EAAYJ,EAAYv2C,SAAWy2C,EAAaz2C,UA4F5C,kBAAC,KAAD,KACGy2C,EAAal2C,KAAI,SAACw2C,GACjB,OACE,kBAAC,KAAD,CACEr3C,MAAO,CACLgc,aAAc,QAEhBs7B,KAAM,GAEN,kBAAC,KAAD,CAAUv4C,MAAOs4C,EAAWt4C,OAAQs4C,EAAWt4C,eCJhDw4C,GAzGQ,SAAC,GAIV,IAHZC,EAGW,EAHXA,mBACAC,EAEW,EAFXA,sBACAC,EACW,EADXA,mBAEMC,EAA6B,SAAC5mC,GAAO,IAAD,EAClC1R,EAAO0R,EAAE/F,OAAO3L,KAChBN,EAAQgS,EAAE/F,OAAOjM,MAEjB64C,EAAY,eACbJ,GADa,oBAEfn4C,EAAON,GAFQ,oBAGZy4C,EAAmBz1C,IAHP,IAYZwV,EALGmgC,EACJ72C,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MACnBN,QAAQ+1C,EAAmBz1C,IAK1B+0B,EAAmB,uBACpB4gB,EAAmBl2C,MAAM,EAAG+V,IADR,CAEvBqgC,GAFuB,aAGpBF,EAAmBl2C,MAAM+V,EAAQ,KAEtCkgC,EAAsB3gB,IAwBxB,OACE,yBACE92B,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZnC,MAAO,SAGT,yBACEhT,MAAO,CACLgT,MAAO,MACP+D,YAAa,SAGf,kBAACtY,EAAD,CACEc,IAAK,EACLT,KAAK,SACLF,YAAY,gBACZG,MAAOy4C,EAAmBnwC,aAC1BhI,KAAK,eACLJ,SAAU04C,KAGd,yBACE33C,MAAO,CACLgT,MAAO,MACP+D,YAAa,SAGf,kBAACtY,EAAD,CACEc,IAAK,EACLT,KAAK,SACLF,YAAY,SACZG,MAAOy4C,EAAmBpuC,OAC1B/J,KAAK,SACLJ,SAAU04C,KAGd,yBACE3mC,QAAS,kBA5De,WAC5BjQ,QAAQC,IAAI,8BAA+Bw2C,GAC3Cz2C,QAAQC,IAAI,gCAAiC02C,GAE7C,IAMMngC,EALGmgC,EACJ72C,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MACnBN,QAAQ+1C,EAAmBz1C,IAK1B+0B,EAAmB,uBACpB4gB,EAAmBl2C,MAAM,EAAG+V,IADR,aAEpBmgC,EAAmBl2C,MAAM+V,EAAQ,KAEtCkgC,EAAsB,aAAI3gB,IAE1B/1B,QAAQC,IAAI,iCAAkC81B,GA0C3B+gB,IACf73C,MAAO,CACLgT,MAAO,KACPgJ,aAAc,OACd3E,SAAU,OACVP,OAAQ,YAGV,kBAACiV,GAAA,EAAD,SCjFA/T,GAAWC,KAAXD,OAEFiH,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzClH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpBpQ,KAAM,GACN4J,eAAgB,GAChBzE,KAAM,IAsfOszC,GA5eM,SAAC,GAKR,IAJZzwB,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAmiB,EAEW,EAFXA,WACAC,EACW,EADXA,cACW,EACiCz7B,EAAe,GAAI,aADpD,mBACJ8pC,EADI,KACYC,EADZ,OAE6C3pC,mBAAS,IAFtD,mBAEJ+zB,EAFI,KAEkBC,EAFlB,OAGuCh0B,mBAAS,IAHhD,mBAGJi0B,EAHI,aAKiCj0B,mBAAS,KAL1C,mBAKJm0B,EALI,KAKYC,EALZ,OAM2Bp0B,mBAAS,IANpC,mBAMJq0B,EANI,KAMSC,EANT,OAQuCt0B,mBAAS,IARhD,mBAQJ4pC,EARI,KAQeC,EARf,OASqB7pC,oBAAS,GAT9B,mBASJ2oC,EATI,KASMC,EATN,OAWwChpC,EACjD,GACA,eAbS,mBAWJ20B,EAXI,KAWcC,EAXd,OAgBkC50B,EAAe,GAAI,YAhBrD,mBAgBJ60B,EAhBI,KAgBWC,EAhBX,OAkB2B10B,mBAAS,IAlBpC,gCAmBqBA,mBAAS,KAnB9B,oCAqByCA,mBAAS,CAC3D,CACEhH,aAAc,GACd+B,OAAQ,GACRrH,GAAG,GAAD,OAAK+Z,KAAKq8B,MAAM,IAAyB,IAAhBr8B,KAAKs8B,eAzBzB,qBAqBJV,GArBI,MAqBgBD,GArBhB,MA6BL5nC,GAAY,uCAAG,WAAOC,EAAaC,GAApB,+BAAAjC,EAAA,2DAGf4pC,GAAmBp3C,OAAS,GAHb,iBAMjB,IAFM8I,EAAS,GAJE,4BAMjB,EAAiBsuC,GAAjB,+CAASr2C,EAA4B,QACE,KAAjC+H,EAAO/H,EAAI,eAA+C,KAAnBA,EAAI,SAC7C+H,EAAO/H,EAAI,cAAoBA,EAAI,QARtB,wPAYU22C,EAAkB,CAC3CryC,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4J,eAAgB6G,EAAO7G,eACvBzE,KAAMsL,EAAOtL,KACbqC,QAASu7B,EACTt7B,KAAMmxC,EACN7uC,YAnBa,SAYX4/B,EAZW,SAwB2B,OAAxBA,EAAa3jC,QAC/B4Z,KAEAyqB,EAAc,CAAC,aAEX3nC,GAAIinC,EAAY,KAAW,GAC3BlpC,IAAKkpC,EAAY,KAAW,GAC5B3pC,KAAM2pC,EAAY,MAAY,IAE3BA,IANM,oBAQRS,KAELniB,GAAyB,GACzBvX,EAAQ2a,aAERlH,KAxCe,yCA2CUw0B,EAAkB,CAC3CryC,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4J,eAAgB6G,EAAO7G,eACvBzE,KAAMsL,EAAOtL,KACbqC,QAASu7B,EACTt7B,KAAMw7B,EACNl5B,OAAQ,MAlDK,SA2CX4/B,EA3CW,SAuD2B,OAAxBA,EAAa3jC,QAC/B4Z,KAEAyqB,EAAc,GAAD,oBACRD,GADQ,cAGT1nC,GAAIinC,EAAY,IAAU,GAC1BlpC,IAAKkpC,EAAY,IAAU,GAC3B3pC,KAAM2pC,EAAY,MAAY,IAE3BA,MAGP1hB,GAAyB,GACzBvX,EAAQ2a,aAERlH,KAvEe,QA2EnBzT,EAAQC,eAAc,GA3EH,2EAAH,wDAkFZozB,GAAkB,SAACrkC,GACvBsjC,EAAwBtjC,IAG1B6O,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,IAEH11B,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,MAJC,QACVmB,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACpB,IAEJx0B,qBAAU,WACR,IAAKmqC,EAAc,UAAe,CAChC,IAAMlrC,EAAQkrC,EAAc,MAC5B,GAAIlrC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/BotB,EAAc,WACf33C,OAAOC,KAAK03C,EAAen2C,MAAMtB,OAAS,GAEtCy3C,EAAc,KAAd,SAUL,CAACA,IAEJ,IAAMnpB,GAAe,SAAC7d,GACpBuW,GAAyB,IAU3BvmB,QAAQC,IAAI,+BAAgC02C,IAE5C,IAAMW,GAA0B,WAC9BZ,GAAsB,GAAD,oBAChBC,IADgB,CAEnB,CACErwC,aAAc,GACd+B,OAAQ,GACRrH,GAAG,GAAD,OAAK+Z,KAAKq8B,MAAM,IAAyB,IAAhBr8B,KAAKs8B,gBAKtC,OACE,kBAAC,IAAD,CACEjoC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,IACRqG,QAAS,QAEXvU,MAAM,iBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,yBAAK7sB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBunC,EAAelrC,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBunC,EAAelrC,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,mBACNE,MAAO+Q,EAAO7G,eACd5J,KAAK,iBACLF,QACGsR,EAAQxH,gBAAkBsH,EAAOtH,iBAChCuH,GACAunC,EAAelrC,MAAf,qBAEJzN,YACGqR,EAAQxH,gBAAkBsH,EAAOtH,iBAChCuH,GACAunC,EAAelrC,MAAf,qBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,uBAMxB,yBACE1Q,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOtL,KACdnF,KAAK,OACLF,QACGsR,EAAQjM,MAAQ+L,EAAO/L,OACtBgM,GAAgBunC,EAAelrC,MAAf,WAEpBzN,YACGqR,EAAQjM,MAAQ+L,EAAO/L,OACtBgM,GAAgBunC,EAAelrC,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAKtB,wBAAIlR,UAAU,mBAAd,oBAEA,kBAAC,IAAKC,KAAN,CACEC,eACEq4C,EAAelrC,MAAf,aAA0C,QAAU,GAEtDlN,KAAMo4C,EAAelrC,MAAf,cAEL6qC,GAAmB72C,KAAI,SAAC22C,GAEvB,OADAz2C,QAAQC,IAAI,4BAA6Bw2C,GAEvC,kBAAC,GAAD,CACEA,mBAAoBA,EACpBE,mBAAoBA,GACpBD,sBAAuBA,SAM/B,yBACEz3C,MAAO,CACL4W,UAAW,SAGf,kBAAC,IAAD,CACEkD,KAAK,SACL9I,QAASqnC,GACTv5C,KAAK,SACLyD,KAAM,kBAACikB,GAAA,EAAD,OAJR,cASA,yBACExmB,MAAO,CACL4W,UAAW,UAGf,wBAAIpX,UAAU,mBAAd,WACA,kBAAC,IAAKC,KAAN,CACEC,eACEq4C,EAAelrC,MAAf,cAA2C,QAAU,GAEvDlN,KAAMo4C,EAAelrC,MAAf,eAEN,kBAAC,KAAD,CACE42B,gBACE,kBAAC,GAAD,CAAO7gC,MAAM,mBAAmByQ,OAAQ,MAE1CmG,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,GACV1pB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAC5C,IAGD+oB,EAAiBz1B,MAChBy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAClB,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,WAKpD,yBACEW,MAAO,CACL4W,UAAW,UAGf,wBAAIpX,UAAU,mBAAd,UAECsjC,EAAc31B,MAAQi1B,IAAyBM,EAAY,IAC1D,oCACE,yBACE1iC,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOvS,MAAM,gBAAgByQ,OAAQ,SAKzC+uB,GACA,oCACE,yBACEpiC,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,WAGV,kBAAC,GAAD,CAAOlO,MAAM,uBAAuByQ,OAAQ,QAKjDyvB,EAAc51B,WACb,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIHutB,GAAeA,EAAYpiC,OAAS,GACnC,kBAAC,IAAKb,KAAN,CACEC,eACEq4C,EAAelrC,MAAf,WAAwC,QAAU,GAEpDlN,KAAMo4C,EAAelrC,MAAf,YAEN,kBAACyrC,GAAD,CACEtB,SAAUA,EACVC,YAAaA,EACbF,aAAcrU,EACdwU,gBAAiBvU,EACjBkU,YAAaoB,EACbnB,eAAgBoB,EAChBpV,cAAeA,WC1hBzB9qB,GAAWC,KAAXD,OAEF5I,GAAmBC,MAAaC,MAAM,IAuBtCkU,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBA+gB/BopB,GAngBG,SAAC,GAML,IALZn3B,EAKW,EALXA,SACA6W,EAIW,EAJXA,WACAD,EAGW,EAHXA,QACAuqB,EAEW,EAFXA,cACAD,EACW,EADXA,WACW,EAC0Cx7B,EACnD,GACA,gBAHS,mBACJsqC,EADI,KACeC,EADf,KAMXz3C,QAAQC,IAAI,iBAAkBuH,GANnB,MAQ6C8F,mBAAS,IARtD,mBAQJ+zB,EARI,KAQkBC,EARlB,OASuCh0B,mBAAS,IAThD,mBASJi0B,EATI,KASeC,EATf,OAWiCl0B,mBAAS,IAX1C,mBAWJm0B,EAXI,KAWYC,EAXZ,OAY2Bp0B,mBAAS,IAZpC,mBAYJq0B,EAZI,KAYSC,EAZT,OAcwC10B,EACjD,GACA,eAhBS,mBAcJ20B,EAdI,KAccC,EAdd,OAmBkC50B,EAAe,GAAI,YAnBrD,mBAmBJ60B,EAnBI,KAmBWC,EAnBX,OAqB2B10B,mBAAS,IArBpC,gCAsBqBA,mBAAS,KAtB9B,gCAwBuCA,mBAAS,KAxBhD,mBAwBJ4pC,EAxBI,KAwBeC,EAxBf,OAyBqB7pC,oBAAS,GAzB9B,oBAyBJ2oC,GAzBI,MAyBMC,GAzBN,SA2ByC5oC,mBAAS,IA3BlD,qBA2BJqpC,GA3BI,MA2BgBD,GA3BhB,MA6BX7pC,qBAAU,WACR,GAAIrF,EAASa,QAAUhJ,OAAOC,KAAKkI,EAASa,QAAQ9I,OAAS,EAAG,CAC9D,IAAMm4C,EAAqC,GACxBr4C,OAAOC,KAAKkI,EAASa,QAC7B9F,SAAQ,SAACo1C,GAClBD,EAAmCh1C,KAAK,CACtC4D,aAAcqxC,EACdtvC,OAAQb,EAASa,OAAOsvC,GACxB32C,GAAG,GAAD,OAAK+Z,KAAKq8B,MAAM,IAAyB,IAAhBr8B,KAAKs8B,gBAGpCX,GAAsBgB,GAGpBlwC,EAASzB,MAAQyB,EAASzB,KAAKxG,OAAS,GAC1C43C,EAAqB3vC,EAASzB,MAC9Bu7B,EAAwB95B,EAASY,aAAe,MAEhD+uC,EAAqB,IACrB7V,EAAwB,OAEzB,CAAC95B,IAEJqF,qBAAU,cAAU,CAACrF,EAAU65B,IAE/BrhC,QAAQC,IAAI,oBAAqBuH,GAEjC,IAAMsH,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mCAAAjC,EAAA,yDAEb1E,EAAS,KAEXsuC,GAAmBp3C,OAAS,GAJb,iBAKjB,IALiB,4BAKjB,EAAiBo3C,GAAjB,+CAASr2C,EAA4B,QACE,KAAjC+H,EAAO/H,EAAI,eAA+C,KAAnBA,EAAI,SAC7C+H,EAAO/H,EAAI,cAAoBA,EAAI,QAPtB,wPAWQm3C,EAAwB,CACjD/3C,WAAY,CACVE,aAAc,CACZoB,GAAIwG,EAASxG,KAGjB4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4J,eAAgB6G,EAAO7G,eACvBzE,KAAMsL,EAAOtL,KACbqC,QAASu7B,GAAwB75B,EAAS1B,QAC1CC,KAAMw7B,GAAqB/5B,EAASzB,KACpCsC,YAvBe,SAWb4/B,EAXa,SA4ByB,OAAxBA,EAAa3jC,QAlHJ+Q,OAmH3B6I,EAlHJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,kBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqHnCiB,EAJgB,WACpB,OAAOkyB,EAAW5oC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAG9CyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAImmB,EAAWlyB,GAA7BnX,OAAA,IAAAA,CAAA,GAEf4oC,EAFe,CAGlBjnC,GAAIwG,EAASxG,MAETknC,EAf0C,uBAgB3CQ,EAAWjoC,MAAM,EAAG+V,IAhBuB,CAiB9C8L,GAjB8C,aAkB3ComB,EAAWjoC,MAAM+V,EAAQ,KAE9BmyB,EAAcT,GACd7pB,GAAW,GAEXq4B,GAAsB,IACtBlV,EAAqB,IACrBF,EAAwB,KAMxB7e,KAGFzT,EAAQC,eAAc,GA9DH,kCAtFS,IAACoG,IAsFV,sCAAH,wDAiElBxI,qBAAU,WACR,IAAK2qC,EAAiB,UAAe,CACnC,IAAM1rC,EAAQ0rC,EAAiB,MAC/B,GAAI1rC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B4tB,EAAiB,WAClBn4C,OAAOC,KAAKk4C,EAAkB32C,MAAMtB,OAAS,GAEzCi4C,EAAiB,KAAjB,SAUL,CAACA,IAEJ,IAIMnV,GAAkB,SAACrkC,GACvBsjC,EAAwBtjC,IAG1B6O,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,CAAC/6B,IAEJqF,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,GAAwB75B,EAASY,gBAJhC,QACVo6B,EADU,SAUGA,EAAYjjC,OAAS,KAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,UAICiB,SAAWiI,EAASzB,KAAKxG,QACvC22C,IAAY,GAGdtU,EAAeD,IAvBD,2CAAH,qDA2Bfc,KACC,CAACj7B,EAASY,YAAai5B,IAE1B,IAAMxT,GAAe,SAAC7d,GACpBqO,GAAW,GAEXq4B,GAAsB,IACtBlV,EAAqB,IACrBF,EAAwB,KAYpBgW,GAA0B,WAC9BZ,GAAsB,GAAD,oBAChBC,IADgB,CAEnB,CACErwC,aAAc,GACd+B,OAAQ,GACRrH,GAAG,GAAD,OAAK+Z,KAAKq8B,MAAM,IAAyB,IAAhBr8B,KAAKs8B,gBAKtC,OACE,kBAAC,IAAD,CACEjoC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOlH,KAEnB,gBACC+H,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEhO,MAAM,cACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPoI,gBAAgB,EAChBE,cAAe,CACbnb,QAAST,EACT6b,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,IACRqG,QAAS,SAGX,yBAAK3X,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB+nC,EAAkB1rC,MAAlB,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgB+nC,EAAkB1rC,MAAlB,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,mBACNE,MAAO+Q,EAAO7G,eACd5J,KAAK,iBACLF,QACGsR,EAAQxH,gBAAkBsH,EAAOtH,iBAChCuH,GACA+nC,EAAkB1rC,MAAlB,qBAEJzN,YACGqR,EAAQxH,gBAAkBsH,EAAOtH,iBAChCuH,GACA+nC,EAAkB1rC,MAAlB,qBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,uBAMxB,yBACE1Q,MAAO,CACL+W,YAAa,SAGf,kBAACtY,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOtL,KACdnF,KAAK,OACLF,QACGsR,EAAQjM,MAAQ+L,EAAO/L,OACtBgM,GAAgB+nC,EAAkB1rC,MAAlB,WAEpBzN,YACGqR,EAAQjM,MAAQ+L,EAAO/L,OACtBgM,GAAgB+nC,EAAkB1rC,MAAlB,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAKtB,wBAAIlR,UAAU,mBAAd,oBAEA,kBAAC,IAAKC,KAAN,CACEC,eACE64C,EAAkB1rC,MAAlB,aAA6C,QAAU,GAEzDlN,KAAM44C,EAAkB1rC,MAAlB,cAEL6qC,GAAmB72C,KAAI,SAAC22C,GAEvB,OADAz2C,QAAQC,IAAI,4BAA6Bw2C,GAEvC,kBAAC,GAAD,CACEA,mBAAoBA,EACpBE,mBAAoBA,GACpBD,sBAAuBA,SAM/B,yBACEz3C,MAAO,CACL4W,UAAW,SAGf,kBAAC,IAAD,CACEkD,KAAK,SACL9I,QAASqnC,GACTv5C,KAAK,SACLyD,KAAM,kBAACikB,GAAA,EAAD,OAJR,cASA,yBACExmB,MAAO,CACL4W,UAAW,UAGf,wBAAIpX,UAAU,mBAAd,WACA,kBAAC,IAAKC,KAAN,CACEC,eACE64C,EAAkB1rC,MAAlB,cAA8C,QAAU,GAE1DlN,KAAM44C,EAAkB1rC,MAAlB,eAEN,kBAAC,KAAD,CACE42B,gBACE,kBAAC,GAAD,CAAO7gC,MAAM,mBAAmByQ,OAAQ,MAE1CmG,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,QAChB9S,YAAY,mBACZuZ,iBAAiB,WACjBxa,SAAUmkC,GACVrkC,MAAOqjC,EACP1oB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO1W,SAAS2W,cAAcpY,QAAQkY,EAAME,gBAC5C,IAGD+oB,EAAiBz1B,MAChBy1B,EAAiBhhC,KAAKtB,OAAS,GAC/BkiC,EAAe3hC,KAAI,SAAC+Y,GAClB,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,WAKpD,yBACEW,MAAO,CACL4W,UAAW,UAGf,wBAAIpX,UAAU,mBAAd,UAECsjC,EAAc31B,MAAQi1B,IAAyBM,EAAY,IAC1D,oCACE,yBACE1iC,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOvS,MAAM,gBAAgByQ,OAAQ,SAKzC+uB,GACA,oCACE,yBACEpiC,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,WAGV,kBAAC,GAAD,CAAOlO,MAAM,uBAAuByQ,OAAQ,QAKjDyvB,EAAc51B,WACb,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIHutB,GAAeA,EAAYpiC,OAAS,GACnC,kBAAC,IAAKb,KAAN,CACEC,eACE64C,EAAkB1rC,MAAlB,WAA2C,QAAU,GAEvDlN,KAAM44C,EAAkB1rC,MAAlB,YAEN,kBAACyrC,GAAD,CACEtB,SAAUA,GACVC,YAAaA,GACbF,aAAcrU,EACdwU,gBAAiBvU,EACjBkU,YAAaoB,EACbnB,eAAgBoB,EAChBpV,cAAeA,WC9gBzB5lB,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG3e,IAAXuuB,QAwBFC,GAAU,SAAC,GAAkD,IAAhDrrB,EAA+C,EAA/CA,KAAM8nC,EAAyC,EAAzCA,cAAe33B,EAA0B,EAA1BA,MAA0B,EAClC1D,oBAAS,GADyB,mBACzD8Q,EADyD,KAChDC,EADgD,OAEN/Q,oBAAS,GAFH,mBAEzD8e,EAFyD,KAElCC,EAFkC,OAGZnf,EAClD,GACA,gBAL8D,mBAGtC0qC,GAHsC,WAQ1DC,EAAkB,uCAAG,WAAO72C,GAAP,iBAAA+L,EAAA,sEACK6qC,EAAuB,CACnDl4C,WAAY,CACVE,aAAc,CACZoB,SAJmB,QACnB82C,EADmB,SAUyB,OAA3BA,EAAgBxzC,SAxCV+Q,EAyCH,iBAxC5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAsCnCwiC,EAAgBl3C,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACxD2nC,EAAcoP,IAbS,iCA9BG,IAAC1iC,IA8BJ,OAAH,sDAiBxB,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,mBACNob,UAAU,iBACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,UACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEwT,MAAO,IACPpQ,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACtZ,GAAD,OACN,oCACGA,GACCA,EAAKrE,OAAS,GACdqE,EAAKnD,MAAM,EAAG,GAAGX,KAAI,SAACkH,GAAD,OACnB,kBAAC,KAAD,CACE/H,MAAO,CACLC,aAAc,MACd+b,aAAc,OAEhB1F,MAAM,OACNxW,IAAKiI,GAEJA,MAIP,0BACE/H,MAAO,CACLsW,MAAO,YAMR3R,GAAoC,IAA5BA,EAAKnD,MAAM,EAAG,GAAGlB,QAAzB,iBAMT,kBAAC,GAAD,CACEsC,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEwT,MAAO,IACPxT,UAAU,uBACVoD,MAAM,SACNob,UAAU,SACVle,IAAI,KACJme,OAAQ,SAAC86B,GAAD,OACN,oCACGA,GACC34C,OAAOC,KAAK04C,GAASz4C,OAAS,GAC9BF,OAAOC,KAAK04C,GAASl4C,KAAI,SAACf,GACxB,OACE,oCACE,yBACEE,MAAO,CACLgc,aAAc,SAGhB,kBAAC,KAAD,CAAK1F,MAAM,OAAOxW,IAAKA,GACpBA,GANL,oBASE,kBAAC,KAAD,CAAKwW,MAAM,OAAOxW,IAAKi5C,EAAQj5C,IAC5Bi5C,EAAQj5C,aAU1BmS,GAAS,eAAgBF,IACxB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,eAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMi0B,EAAmB16B,EAAOnc,KAC3Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aASb6I,GACC,kBAAC,GAAD,CACE/N,WAAYA,EACZD,QAASA,EACT5W,SAAU4kB,EACVsc,WAAY7nC,EACZ8nC,cAAeA,MAuHV72B,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EA5GM,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACL1D,mBAAS,IADJ,mBAClCo7B,EADkC,KACtBC,EADsB,OAGIz7B,EAAe,GAAI,cAHvB,mBAGlC+qC,EAHkC,KAGrBrP,EAHqB,KAKzC/7B,qBAAU,YACQ,uCAAG,4BAAAE,EAAA,sEACK67B,EAAsB,CAC1ClpC,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,KAChBhK,YAAa,QANF,OACXw9B,EADW,OAWjBG,EAAcH,GAXG,2CAAH,qDAahBM,KACC,IApBsC,MAsBiBx7B,oBAAS,GAtB1B,mBAsBlCgZ,EAtBkC,KAsBXC,EAtBW,KAwBzCvmB,QAAQC,IAAI,cAAeg4C,GAW3B,OACE,oCAIE,yBAAKx5C,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,WAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,mBACZoxB,SAAU,SAACvyB,GAAD,OAvBD,SAACA,GACpB,GAAIi6C,EAAYp3C,KAAKtB,OAAS,EAAG,CAC/B,IAAMk4B,EAAawgB,EAAYp3C,KAAKuf,QAAO,SAAC9f,GAAD,OACzCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzC6vB,EAAclR,IAkBejK,CAAaxvB,OAKrCkT,GAAS,eAAgBF,IACxB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YAWJ,yBAAK9nB,UAAU,uCASf,yBAAKA,UAAU,uCACZw5C,EAAY7rC,MAAQs8B,EAAWnpC,OAAS,GACvC,kBAAC,GAAD,CACEyR,MAAOA,EACP23B,cAAeA,EACf9nC,KAAM6nC,IAGTuP,EAAY9rC,WAAa,kBAACshB,GAAD,MAEzBwqB,EAAY7rC,QAAUs8B,EAAWnpC,OAAS,IACzC,kBAAC,GAAD,CAAOsC,MAAM,sBAKlBo2C,EAAY7rC,MACX,kBAAC,GAAD,CACEka,sBAAuBA,EACvBC,yBAA0BA,EAC1BmiB,WAAYuP,EAAYp3C,KACxB8nC,cAAeA,QCrTnBt6B,GAAmBC,MAAaC,MAAM,IAUtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAqBvC0B,GAAWC,KAAXD,OA8tBOihC,GA1tBO,SAAC,GAAe,qBAIhChrC,EAAe,GAAI,uBAJY,mBAEjCirC,EAFiC,KAGjCC,EAHiC,OAQ/BlrC,EAAe,GAAI,gBARY,mBAMjCmrC,EANiC,KAOjCC,EAPiC,OAUWhrC,oBAAS,GAVpB,mBAU5BirC,EAV4B,KAUXC,EAVW,OAWSlrC,oBAAS,GAXlB,mBAW5BmrC,EAX4B,KAWZC,EAXY,OAYeprC,mBAAS,IAZxB,mBAY5BqrC,EAZ4B,KAYTC,EAZS,OAaPtrC,mBAAS,IAbF,mBAa5BvC,EAb4B,KAapB8tC,EAboB,OAcHvrC,mBAAS,IAdN,mBAc5BwrC,EAd4B,KAclBC,EAdkB,KAgBnC/4C,QAAQC,IAAI,6BAA8Bk4C,GAE1CtrC,qBAAU,YACmB,uCAAG,4BAAAE,EAAA,sEACVqrC,EAAiC,IADvB,QACtBxsC,EADsB,UAK1BgtC,EAAqBhtC,GACrB4sC,EAAmB5sC,EAAG,gBACtBitC,EAAUjtC,EAAG,QACbmtC,EAAYntC,EAAG,WARW,2CAAH,qDAW3BotC,KACC,IAEHh5C,QAAQC,IAAI,6BAA8B8K,GAE1C,IAAM+D,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACKurC,EAA8B,CACpD1zC,KAAM,CACJnF,IAAKsP,EAAOtP,IACZq5C,SAAUA,EACV/tC,OAAQA,EACRkuC,eAAgBV,EAChBW,WAAY,CACVjyC,UAAW,CACTlI,IAAKgQ,EAAOoqC,aACZC,aAAcX,EACdY,UAAWtqC,EAAOsqC,WAEpBx2C,KAAM,CACJ9D,IAAKgQ,EAAOuqC,SAEdC,KAAM,CACJx6C,IAAKgQ,EAAOyqC,QACZx7C,MAAO+Q,EAAO0qC,WAEhBR,eAAgB,CACdzqC,SAAU,CACRzP,IAAKgQ,EAAO2qC,YACZ17C,MAAO+Q,EAAO4qC,eAEhBlrC,SAAU,CACR1P,IAAKgQ,EAAO6qC,YACZ57C,MAAO+Q,EAAO8qC,gBAGlBC,WAAY,CACVC,QAAShrC,EAAOirC,uBA/BL,QACb5a,EADa,SAsCFA,EAAU96B,OAK3B0K,EAAQC,eAAc,GA3CH,2CAAH,wDAuDlBpC,qBAAU,WACR,IAAKwrC,EAAuB,UAAe,CACzC,IAAMvsC,EAAQusC,EAAuB,MACrC,GAAIvsC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,UAtJN,IAACvU,GA+J1BgjC,EAAuB,WACxBh5C,OAAOC,KAAK+4C,EAAwBx3C,MAAMtB,OAAS,GAED,OAA9C84C,EAAuB,KAAvB,SAlKuBhjC,EAmKD,wBAlK9BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCAyK1C,CAAC8iC,IAEJ,IAAM4B,EAA4B,SAACjqC,GACjCwoC,EAAmBxoC,EAAE/F,OAAO8f,UAGxBmwB,EAAmB,CACvB,CACE57C,KAAM,OACNN,MAAO,QAET,CACEM,KAAM,QACNN,MAAO,UAILm8C,EAAgB,CACpB,CACE77C,KAAM,MACNN,MAAO,OAET,CACEM,KAAM,OACNN,MAAO,SAILo8C,EAAqB,SAACp8C,GAC1BgC,QAAQC,IAAI,gBAAiBjC,GAC7B66C,EAAU76C,IAGNq8C,EAAuB,SAACr8C,GAC5B+6C,EAAY/6C,IAoBd,OACE,kBAAC,IAAD,CACEoR,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAvBK,CACpBjP,IAAK,GACLq5C,SAAU,GACV/tC,OAAQ,GACRmuC,WAAY,GACZC,aAAc,GACdE,UAAW,GACXC,QAAS,GACTE,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,cAAe,GACfC,YAAa,GACbC,cAAe,GACfG,kBAAmB,IASJ,GAERrB,EAFQ,GAGPA,GACFt5C,OAAOC,KAAKq5C,GAAmBp5C,OAAS,GAAK,CAC3C45C,aACER,EAAiB,YACjBA,EAAiB,WAAe1xC,WAChC0xC,EAAiB,WAAe1xC,UAAUlI,IAC5Cs6C,UACEV,EAAiB,YACjBA,EAAiB,WAAe1xC,WAChC0xC,EAAiB,WAAe1xC,UAAUoyC,UAC5CC,QACEX,EAAiB,YACjBA,EAAiB,WAAe91C,MAChC81C,EAAiB,WAAe91C,KAAK9D,IACvCy6C,QACEb,EAAiB,YACjBA,EAAiB,WAAeY,MAChCZ,EAAiB,WAAeY,KAAKx6C,IACvC06C,UACEd,EAAiB,YACjBA,EAAiB,WAAeY,MAChCZ,EAAiB,WAAeY,KAAKv7C,MACvC07C,YACEf,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAezqC,UAC/CmqC,EAAiB,WAAeM,eAAezqC,SAASzP,IAC1D46C,cACEhB,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAezqC,UAC/CmqC,EAAiB,WAAeM,eAAezqC,SAASxQ,MAC1D47C,YACEjB,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAexqC,UAC/CkqC,EAAiB,WAAeM,eAAexqC,SAAS1P,IAC1D86C,cACElB,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAexqC,UAC/CkqC,EAAiB,WAAeM,eAAexqC,SAASzQ,MAC1Dg8C,kBACErB,EAAiB,YACjBA,EAAiB,WAAemB,YAChCnB,EAAiB,WAAemB,WAAWC,YAIlD,gBACCxqC,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBACE5Q,MAAO,CACLiV,QAAS,OACTC,eAAgB,kBAGlB,yBACElV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,MACNE,MAAO+Q,EAAOtP,IACdnB,KAAK,MACLF,QACGsR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GACA4oC,EAAwBvsC,MAAxB,UAEJzN,YACGqR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GACA4oC,EAAwBvsC,MAAxB,UAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAItB,yBACE1Q,MAAO,CACLgT,MAAO,QAGT,wBAAIxT,UAAU,mBAAd,YACA,kBAAC,KAAD,CACEga,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,OAAQ/S,aAAc,OACtCC,YAAY,oBACZlB,aAAc66C,EACd96C,MAAO86C,EACP56C,SAAUm8C,GAETH,EAAiBp6C,KAAI,SAAC+Y,GACrB,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,YAMpD,yBACEW,MAAO,CACLiV,QAAS,OACTC,eAAgB,kBAGlB,yBACElV,MAAO,CACLgT,MAAO,QAGT,wBAAIxT,UAAU,mBAAd,UAEA,kBAAC,KAAD,CACEP,SAAUk8C,EACV3hC,YAAU,EACVxZ,MAAO,CAAEgT,MAAO,OAAQ/S,aAAc,OACtCC,YAAY,kBACZlB,aAAc8M,EACd/M,MAAO+M,GAENovC,EAAcr6C,KAAI,SAAC+Y,GAClB,OAAO,kBAAC,GAAD,CAAQ7a,MAAO6a,EAAO7a,OAAQ6a,EAAOva,WAIlD,yBACEW,MAAO,CACLgT,MAAO,UAKb,yBACEhT,MAAO,CACL4W,UAAW,UAGf,wBAAI5W,MAAO,GAAIR,UAAU,kCAAzB,cAIA,wBAAIA,UAAU,mBAAd,aACA,yBACEQ,MAAO,CACLiV,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEnV,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,MACNE,MAAO+Q,EAAOoqC,aACd76C,KAAK,eACLF,QACGsR,EAAQypC,cAAgB3pC,EAAO2pC,eAC9B1pC,GACA4oC,EAAwBvsC,MAAxB,mBAEJzN,YACGqR,EAAQypC,cAAgB3pC,EAAO2pC,eAC9B1pC,GACA4oC,EAAwBvsC,MAAxB,mBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAKtB,yBACE1Q,MAAO,CACLgT,MAAO,MACP6D,WAAY,SAGd,kBAAC,KAAD,CACE9X,MAAOy6C,EACPv6C,SAAU,SAAC8R,GAAD,OAAO0oC,EAAkB1oC,EAAE/F,OAAO8f,WAE5C,0BAAMtrB,UAAU,sBAAhB,mBAIJ,yBACEQ,MAAO,CACLgT,MAAO,QAGRwmC,GACC,kBAAC3jB,GAAD,CACEh3B,MAAM,YACNE,MAAO+Q,EAAOsqC,UACd/6C,KAAK,YACLF,QACGsR,EAAQ2pC,WAAa7pC,EAAO6pC,YAC3B5pC,GACA4oC,EAAwBvsC,MAAxB,gBAEJzN,YACGqR,EAAQ2pC,WAAa7pC,EAAO6pC,YAC3B5pC,GACA4oC,EAAwBvsC,MAAxB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAO1B,wBAAIlR,UAAU,mBAAd,QACA,kBAACq2B,GAAD,CACEh3B,MAAM,YACNE,MAAO+Q,EAAOuqC,QACdh7C,KAAK,UACLF,QACGsR,EAAQ4pC,SAAW9pC,EAAO8pC,UACzB7pC,GACA4oC,EAAwBvsC,MAAxB,cAEJzN,YACGqR,EAAQ4pC,SAAW9pC,EAAO8pC,UACzB7pC,GACA4oC,EAAwBvsC,MAAxB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,cAIpB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,QACA,yBACEQ,MAAO,CACLiV,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEnV,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,MACNE,MAAO+Q,EAAOyqC,QACdl7C,KAAK,UACLF,QACGsR,EAAQ8pC,SAAWhqC,EAAOgqC,UACzB/pC,GACA4oC,EAAwBvsC,MAAxB,cAEJzN,YACGqR,EAAQ8pC,SAAWhqC,EAAOgqC,UACzB/pC,GACA4oC,EAAwBvsC,MAAxB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAItB,yBACE1Q,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,QACNE,MAAO+Q,EAAO0qC,UACdn7C,KAAK,YACLF,QACGsR,EAAQ+pC,WAAajqC,EAAOiqC,YAC3BhqC,GACA4oC,EAAwBvsC,MAAxB,gBAEJzN,YACGqR,EAAQ+pC,WAAajqC,EAAOiqC,YAC3BhqC,GACA4oC,EAAwBvsC,MAAxB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAMxB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,YACA,yBACEQ,MAAO,CACLiV,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEnV,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,MACNE,MAAO+Q,EAAO2qC,YACdp7C,KAAK,cACLF,QACGsR,EAAQgqC,aAAelqC,EAAOkqC,cAC7BjqC,GACA4oC,EAAwBvsC,MAAxB,kBAEJzN,YACGqR,EAAQgqC,aAAelqC,EAAOkqC,cAC7BjqC,GACA4oC,EAAwBvsC,MAAxB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBACE1Q,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,QACNE,MAAO+Q,EAAO4qC,cACdr7C,KAAK,gBACLF,QACGsR,EAAQiqC,eAAiBnqC,EAAOmqC,gBAC/BlqC,GACA4oC,EAAwBvsC,MAAxB,oBAEJzN,YACGqR,EAAQiqC,eAAiBnqC,EAAOmqC,gBAC/BlqC,GACA4oC,EAAwBvsC,MAAxB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAMxB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,YACA,yBACEQ,MAAO,CACLiV,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEnV,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,MACNE,MAAO+Q,EAAO6qC,YACdt7C,KAAK,cACLF,QACGsR,EAAQkqC,aAAepqC,EAAOoqC,cAC7BnqC,GACA4oC,EAAwBvsC,MAAxB,kBAEJzN,YACGqR,EAAQkqC,aAAepqC,EAAOoqC,cAC7BnqC,GACA4oC,EAAwBvsC,MAAxB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBACE1Q,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,QACNE,MAAO+Q,EAAO8qC,cACdv7C,KAAK,gBACLF,QACGsR,EAAQmqC,eAAiBrqC,EAAOqqC,gBAC/BpqC,GACA4oC,EAAwBvsC,MAAxB,oBAEJzN,YACGqR,EAAQmqC,eAAiBrqC,EAAOqqC,gBAC/BpqC,GACA4oC,EAAwBvsC,MAAxB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAMxB,yBACE1Q,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,cACA,yBACEQ,MAAO,CACLiV,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEnV,MAAO,CACLgT,MAAO,QAGT,kBAAC6iB,GAAD,CACEh3B,MAAM,WACNE,MAAO+Q,EAAOirC,kBACd17C,KAAK,oBACLF,QACGsR,EAAQsqC,mBAAqBxqC,EAAOwqC,oBACnCvqC,GACA4oC,EAAwBvsC,MAAxB,wBAEJzN,YACGqR,EAAQsqC,mBAAqBxqC,EAAOwqC,oBACnCvqC,GACA4oC,EAAwBvsC,MAAxB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,yBAItB,yBACE1Q,MAAO,CACLgT,MAAO,UAKb,kBAAC,KAAD,CACEjU,MAAOu6C,EACPr6C,SAAU+7C,GAEV,0BAAMx7C,UAAU,sBAAhB,mBAGF,yBACEQ,MAAO,CACL4W,UAAW,UAGf,yBACE5W,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASmoC,EAAwBlsC,UACjC1N,UAAU,8BAHZ,kCC5uBJuf,IAPiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQyf,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAulBhCyiB,GAzkBK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,4BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,+BAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,cACP0I,SAAS,eACJA,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gCACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,kBAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,sBAAuB2L,GAE/BA,IACFgvC,EAAShvC,EAAG,OAAa,IACzB8uC,EAAY9uC,EAAG,UAAgB,KAbN,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,8BACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,QAChB5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,KACfgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,cAuBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBASJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,iBC1kBR4H,IAPiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQyf,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBA+nBhCyiB,GAjnBK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,4BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,+BAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,YACPk8C,KAAK,eACAxzC,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,8BACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,gBAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,oBAAqB2L,GAE7BA,IACFgvC,EAAShvC,EAAG,OAAa,IACzB8uC,EAAY9uC,EAAG,MAAY,KAbF,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,4BACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,SAAW,GAC3B5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,MAAQ,GACvBgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAhBP,QAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yBAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,cAuBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBASJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAhBP,QAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yBAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,iBCrnBR4H,IAJiB1P,MAAaC,MAAM,IAIxB0P,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAgfhCyiB,GAleK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,4BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,+BAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,cACP0I,SAAS,eACJA,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gCACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,kBAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,cAAe2L,GAEvBA,IACFgvC,EAAShvC,EAAG,OAAa,IACzB8uC,EAAY9uC,EAAG,UAAgB,KAbN,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,wBACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,SAAW,GAC3B5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,MAAQ,GACvBgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,gBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,uBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,sBAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAhBP,kBAwBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,gBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,uBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,sBAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAhBP,qBC/dR4H,IAPiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQyf,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAsjBhCyiB,GAxiBK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,4BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,+BAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,QACP0I,SAAS,eACJA,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,6BACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,YAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,gBAAiB2L,GAEzBA,IACFgvC,EAAShvC,EAAG,OAAa,IACzB8uC,EAAY9uC,EAAG,UAAgB,KAbN,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,uBACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,QAChB5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,KACfgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAfP,eAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yCAQK,IAfP,uBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uCAQK,IAfP,oBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oCAQK,IAfP,qBAuBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBASJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFASA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAfP,eAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yCAQK,IAfP,uBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uCAQK,IAfP,oBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oCAQK,IAfP,wBC7hBVqM,IAfmBnU,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWkB,SAAC6W,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,0BAgYhC0lC,GA1XY,SAAC,GAAe,qBAIrC/tC,EAAe,GAAI,2BAJiB,mBAEtCguC,EAFsC,KAGtCC,EAHsC,OAQpCjuC,EAAe,GAAI,oBARiB,mBAMtCkuC,EANsC,KAOtCC,EAPsC,OAUU/tC,oBAAS,GAVnB,mBAUjCguC,EAViC,KAUbC,EAVa,OAWgBjuC,oBAAS,GAXzB,mBAWjCkuC,EAXiC,KAWVC,EAXU,OAaMnuC,oBAAS,GAbf,mBAajCouC,EAbiC,KAafC,EAbe,OAcEruC,oBAAS,GAdX,mBAcjCsuC,EAdiC,KAcpBC,EAdoB,OAgBFvuC,oBAAS,GAhBP,mBAgBjCwuC,EAhBiC,KAgBnBC,EAhBmB,OAiBUzuC,oBAAS,GAjBnB,mBAiBjC0uC,EAjBiC,KAiBbC,EAjBa,OAkBI3uC,oBAAS,GAlBb,mBAkBjC4uC,EAlBiC,KAkBhBC,EAlBgB,OAmBkB7uC,oBAAS,GAnB3B,mBAmBjC8uC,EAnBiC,KAmBVC,EAnBU,OAqBQ/uC,oBAAS,GArBjB,mBAqBjCgvC,EArBiC,KAqBfC,EArBe,OAsBIjvC,oBAAS,GAtBb,oBAsBjCkvC,GAtBiC,MAsBjBC,GAtBiB,SAuBJnvC,oBAAS,GAvBL,qBAuBjCovC,GAvBiC,MAuBrBC,GAvBqB,SAwBQrvC,oBAAS,GAxBjB,qBAwBjCsvC,GAxBiC,MAwBfC,GAxBe,SAyBEvvC,mBAAS,IAzBX,qBAyBjCwvC,GAzBiC,MAyBlBC,GAzBkB,MA2BxC/8C,QAAQC,IAAI,qBAAsBq7C,GAClCt7C,QAAQC,IAAI,wBAAyBu7C,GAErC3uC,qBAAU,YACuB,uCAAG,4BAAAE,EAAA,sEACdouC,EAAqC,IADvB,QAC1BvvC,EAD0B,UAI9BmxC,GAAiBD,IACjBvB,EAAoB3vC,EAAG,YAAH,OACpB6vC,EAAuB7vC,EAAG,YAAH,MACvB+vC,EAAkB/vC,EAAG,UAAH,OAClBiwC,EAAmBjwC,EAAG,UAAH,MACnBywC,EAAyBzwC,EAAG,YAAH,MACzBqwC,EAAoBrwC,EAAG,YAAH,OACpBmwC,EAAcnwC,EAAG,MAAH,OACduwC,EAAiBvwC,EAAG,MAAH,OAZa,2CAAH,qDAe/BoxC,KACC,IAEHh9C,QAAQC,IAAI,iCAAkCi7C,GAE9C,IAAM+B,GAAqB,uCAAG,4BAAAlwC,EAAA,sEACKsuC,EAAkC,CACjEz2C,KAAM,CACJs4C,YAAa,CACXvC,MAAOW,EACPN,KAAMQ,GAER5yC,MAAO,CACL+xC,MAAOmB,EACPd,KAAMkB,GAERiB,YAAa,CACXxC,MAAOqB,EACPhB,KAAMoB,GAERgB,UAAW,CACTzC,MAAOe,EACPV,KAAMY,MAjBgB,QACtByB,EADsB,SAuB4B,OAA9BA,EAAmB/4C,QA5FhB+Q,EA6FH,oCA5F5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BA2FzCkN,GACE,mEA3BwB,iCArEA,IAACpN,IAqED,OAAH,qDAgC3B,OACE,oCACE,yBACEpW,MAAO,CACLiV,QAAS,OACT0iB,cAAe,WAGjB,yBAAK33B,MAAO,IACV,yBACEA,MAAO,CACLiV,QAAS,OACTE,WAAY,WAGd,yBACEnV,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,iBAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAMssC,GAAoB,IACnCx+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBASF,yBACE5tB,MAAO,CACL4W,UAAW,UAGf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAASuxB,EACT1wB,eAAgB0wB,EAChBp9C,SAAU,SAAC8R,GAAD,OAAOurC,EAAoBvrC,EAAE/F,OAAO8f,WAE9C,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAASyxB,EACT5wB,eAAgB4wB,EAChBt9C,SAAU,SAAC8R,GAAD,OAAOyrC,EAAuBzrC,EAAE/F,OAAO8f,WAEjD,0BAAMtrB,UAAU,2BAAhB,gBAMR,yBACEQ,MAAO,CACL4W,UAAW,UAIf,yBAAK5W,MAAO,IACV,yBACEA,MAAO,CACLiV,QAAS,OACTE,WAAY,WAGd,yBACEnV,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,eAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAMwsC,IAAkB,IACjC1+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBASF,yBACE5tB,MAAO,CACL4W,UAAW,UAGf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAAS2xB,EACT9wB,eAAgB8wB,EAChBx9C,SAAU,SAAC8R,GAAD,OAAO2rC,EAAkB3rC,EAAE/F,OAAO8f,WAE5C,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAAS6xB,EACThxB,eAAgBgxB,EAChB19C,SAAU,SAAC8R,GAAD,OAAO6rC,EAAmB7rC,EAAE/F,OAAO8f,WAE7C,0BAAMtrB,UAAU,2BAAhB,gBAMR,6BACE,yBACEQ,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZyB,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,UAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAM0sC,IAAc,IAC7B5+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBAUF,yBACE5tB,MAAO,CACL4W,UAAW,SAIf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAAS+xB,EACTlxB,eAAgBkxB,EAChB59C,SAAU,SAAC8R,GAAD,OAAO+rC,EAAc/rC,EAAE/F,OAAO8f,WAExC,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAASmyB,EACTtxB,eAAgBsxB,EAChBh+C,SAAU,SAAC8R,GAAD,OAAOmsC,EAAiBnsC,EAAE/F,OAAO8f,WAE3C,0BAAMtrB,UAAU,2BAAhB,gBAMR,6BACE,yBACEQ,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZyB,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,iBAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAM4sC,IAAoB,IACnC9+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBASF,yBACE5tB,MAAO,CACL4W,UAAW,UAGf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAASiyB,EACTpxB,eAAgBoxB,EAChB99C,SAAU,SAAC8R,GAAD,OAAOisC,EAAoBjsC,EAAE/F,OAAO8f,WAE9C,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAASqyB,EACTxxB,eAAgBwxB,EAChBl+C,SAAU,SAAC8R,GAAD,OAAOqsC,EAAyBrsC,EAAE/F,OAAO8f,WAEnD,0BAAMtrB,UAAU,2BAAhB,cAIJ,yBAAKQ,MAAO,QAIlB,yBACEA,MAAO,CACL4W,UAAW,UAGf,kBAAC,IAAD,CACE5F,QAAS,SAACD,GAAD,OAAYitC,MACrB/sC,QAASkrC,EAAqCjvC,UAC9C1N,UAAU,8BAHZ,mCAOA,yBACEQ,MAAO,CACL4W,UAAW,SAGf,kBAACynC,GAAD,CACEl/B,QAASk+B,EACThC,WAAYiC,IAEd,kBAACgB,GAAD,CACEn/B,QAASo+B,GACTlC,WAAYmC,KAGd,kBAACe,GAAD,CACEp/B,QAASw+B,GACTtC,WAAYuC,KAEd,kBAACY,GAAD,CAAwBr/B,QAASs+B,GAAYpC,WAAYqC,O,UCrYzDl6B,IAVmBnU,MAAaC,MAAM,IAUd,SAAC8G,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,0BA6I/BmoC,GAlIY,SAAC,GAAe,qBACoBxwC,EAC3D,GACA,iBAHsC,mBACjCywC,EADiC,KACTC,EADS,OAMhBtwC,mBAAS,IANO,mBAMjCzK,EANiC,KAM3Bg7C,EAN2B,OAONvwC,mBAAS,IAPH,mBAOjCrG,EAPiC,KAOtB62C,EAPsB,KAaxC,IAAMC,EAAa,uCAAG,4BAAAhxC,EAAA,sEACI6wC,EAA2B,CACjDh5C,KAAM,CACJqC,UAAWA,EACXpE,KAAMA,KAJU,QACdu8B,EADc,SASkB,OAArBA,EAAU96B,SACzBu5C,EAAQ,IACRC,EAAa,IA/CczoC,EAgDH,YA/C5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAgCvB,iCApCQ,IAACF,IAoCT,OAAH,qDA2DnB,OAzCAxI,qBAAU,WACR,IAAK8wC,EAAsB,UAAe,CACxC,IAAM7xC,EAAQ6xC,EAAsB,MACpC,GAAI7xC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B+zB,EAAsB,WACvBt+C,OAAOC,KAAKq+C,EAAuB98C,MAAMtB,SAM1C,CAACo+C,IAGF,yBACE1+C,MAAO,CACLgT,MAAO,UAGT,wBAAIxT,UAAU,mBAAd,aAEA,kBAAC,KAAD,CACEQ,MAAO,CACLqT,OAAQ,OACRpT,aAAc,MACdoxB,YAAa,kBACbre,MAAO,QAETW,KAAK,OACL1U,SA/EN,SAAsBF,GACpB8/C,EAAa9/C,IA+ETggD,gBAAiB,CAAC,OAGpB,yBACE/+C,MAAO,CACL4W,UAAW,UAGf,kBAAC,GAAD,CACE/X,MAAM,OACNE,MAAO6E,EACPvE,KAAK,OACLJ,SAAU,SAAC8R,GACT6tC,EAAQ7tC,EAAE/F,OAAOjM,UAIrB,kBAAC,IAAD,CACEiB,MAAO,CACL4W,UAAW,QAEb5F,QAAS8tC,EACT7tC,QAASytC,EAAuBxxC,UAGhC1N,UAAU,iBARZ,OAUO,IACL,0BACEQ,MAAO,CACL6W,WAAY,SAGb,IACD,kBAACmoC,GAAA,EAAD,U,UCpEKC,GA5GW,SAAC,GAAuC,IAArCl9C,EAAoC,EAApCA,GAAIm9C,EAAgC,EAAhCA,mBAAgC,EACRjxC,EACrD,GACA,iBAH6D,mBACxDkxC,EADwD,KACnCC,EADmC,KAsB/D,OAhBAxxC,qBAAU,YACmB,uCAAG,sBAAAE,EAAA,sEACVsxC,EAAwB,CACxC3+C,WAAY,CACVE,aAAc,CACZoB,GAAIA,MAJkB,yDAAH,qDAU3Bg4C,KACC,IAEHh5C,QAAQC,IAAI,sBAAuBm+C,GAGjC,oCACGA,EAAoBjyC,WACnB,oCACE,yBACElN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,YAGV,kBAAC,KAAD,CAAMgJ,KAAK,YAKhBqlC,EAAoBhyC,OAASgyC,EAAoBv9C,KAChD,oCACE,yBACE5B,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,eACZO,MAAOwS,KAAMI,2BAKnB,IAGD+pC,EAAoBhyC,OACrBgyC,EAAoBv9C,MAClBxB,OAAOC,KAAK8+C,EAAoBv9C,MAAMtB,OAAS,EAc/C,GAbA,oCACE,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,eACZO,MAAOwS,KAAMI,2BAQpB+pC,EAAoBhyC,MACnBgyC,EAAoBv9C,MACpBxB,OAAOC,KAAK8+C,EAAoBv9C,MAAMtB,OAAS,GAC7C,oCACE,yBAAKd,UAAU,qBACb,yBACEwR,QAAS,kBAAMkuC,EAAmB,KAClC1/C,UAAU,8BAEV,kBAAC6/C,GAAA,EAAD,OAEF,yBAAK7/C,UAAU,6BACb,8BAAO2/C,EAAmB,KAAnB,OACP,4BAAKA,EAAmB,KAAnB,WACL,4BACGA,EAAmB,KAAnB,MACC1nC,IAAO0nC,EAAmB,KAAnB,MAAqCnzC,OAC1C,0BAIR,yBAAKxM,UAAU,2BACZ2/C,EAAmB,KAAnB,MACCA,EAAmB,KAAnB,UCRHG,GA1FD,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,UAAyBC,GAA+B,EAA7CC,aAA6C,EAA/BD,mBAA+B,EACzBnxC,mBAAS,IADgB,mBAChEqxC,EADgE,KAC/CR,EAD+C,KAKvE,OAFAn+C,QAAQC,IAAI,oBAAqBw+C,GAG/B,oCACGA,EAAkBtyC,WACjB,oCACE,yBACElN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,YAGV,kBAAC,KAAD,CAAMgJ,KAAK,YAKhB0lC,EAAkBryC,MAAQoyC,KAAeA,EAAUj/C,OAAS,IAC3D,oCACE,yBACEN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,WAGV,kBAAC,KAAD,CACE7O,YAAY,eACZO,MAAOwS,KAAMI,2BAMpBoqC,EAAkBryC,MAAQoyC,GAAaA,EAAUj/C,OAAS,GACzD,oCACE,yBAAKd,UAAU,2BACXkgD,GACA,oCACGF,EAAkBryC,MAAQoyC,GAAaA,EAAUj/C,OAAS,GACzD,oCACGi/C,EAAU1+C,KAAI,SAACQ,GACd,OACE,yBACE2P,QAAS,kBAAMkuC,EAAmB79C,EAAKU,KACvCvC,UAAU,gCAEV,yBAAKA,UAAU,qCACb,8CAAa6B,EAAK2G,YAClB,wCAAU3G,EAAKxB,OAAS,gBAG1B,4BACGwB,EAAKuC,MAAQvC,EAAKuC,KAAK+7C,UAAU,EAAG,KAAO,SAE9C,4BACGt+C,EAAKmD,MACJiT,IAAOpW,EAAKmD,MAAMwH,OAAO,uBAU1C0zC,GACC,oCACE,kBAAC,GAAD,CACER,mBAAoBA,EACpBn9C,GAAI29C,S,UC3Ed3gC,GAAYC,KAAZD,QACAiO,GAAWvuB,IAAXuuB,OAoHO4yB,GAhHH,SAACvqC,GAAkB,IAAD,EACyBpH,EACnD,GACA,kBAH0B,mBACrBuxC,EADqB,KACFJ,EADE,OAKM/wC,mBAAS,IALf,mBAKrBkxC,EALqB,KAKVE,EALU,KAO5B7xC,qBAAU,YACmB,uCAAG,4BAAAE,EAAA,sEACVsxC,EAAwB,CACxC3+C,WAAY,CACVC,OAAQ,CACNm/C,WAAY,IACZC,cAAe,OACf/pC,eAAgB,SANM,OACtBpJ,EADsB,OAW5B8yC,EAAa9yC,GAXe,2CAAH,qDAa3BotC,KACC,IAeH,OACE,oCACE,yBAAKv6C,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,OAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,eACZjB,SAAU,SAAC8R,GAAD,OAvBC,SAAChS,GACpB,GAAIygD,EAAkB59C,KAAKtB,OAAS,EAAG,CACrC,IAAMg1B,EAAiBkqB,EAAkB59C,KAAKuf,QAAO,SAAC9f,GACpD,OACGA,EAAKxB,OACJwB,EAAKxB,MAAMga,cAAc5Y,SAASlC,EAAM8a,gBACzCxY,EAAKuC,MAAQvC,EAAKuC,KAAKiW,cAAc5Y,SAASlC,EAAM8a,kBAGzD4lC,EAAanqB,IAcU/G,CAAaxd,EAAE/F,OAAOjM,YAM7C,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CAAM+2C,iBAAiB,KACrB,kBAAC,GAAD,CACEvyB,IACE,8BACE,kBAACmvB,GAAA,EAAD,MADF,UAKFrzC,IAAI,KAEJ,kBAAC,GAAD,CACE0/C,kBAAmBA,EACnBC,aAAcA,EACdF,UAAWA,KAIf,kBAAC,GAAD,CACEv7B,IACE,8BACE,kBAAC+7B,GAAA,EAAD,MADF,eAKFjgD,IAAI,KAEJ,kBAAC,GAAD,OAGF,kBAAC,GAAD,CACEkkB,IACE,8BACE,kBAACpP,GAAA,EAAD,MADF,iBAKF9U,IAAI,KAEJ,kBAAC,GAAD,OAGF,kBAAC,GAAD,CACEkkB,IACE,8BACE,kBAACpP,GAAA,EAAD,MADF,sBAKF9U,IAAI,KAEJ,kBAAC,GAAD,WChIGkgD,MC8BT5wC,GAAmBC,MAAaC,MAAM,IActCkU,GAAwB,SAACpN,GAC3BD,KAAatJ,MAAM,CACfuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAK7C7G,GAAgB,CAClB,UAAa,GACb,SAAY,GACZ,KAAQ,GACR,WAAa,GACb,KAAO,GACP,aAAe,GACf,aAAgB,IA8VLwpC,GAtVO,SAAC,GAAiB,qBAEmChrC,EAAe,GAAI,yBAFvD,mBAE5BirC,EAF4B,KAEAC,EAFA,OAG8BlrC,EAAe,GAAI,sBAHjD,mBAG5BmrC,EAH4B,KAGHC,EAHG,OAKUhrC,oBAAS,GALnB,mBAK5BirC,EAL4B,KAKZC,EALY,OAMclrC,mBAAS,IANvB,mBAM5BqrC,EAN4B,KAMVC,EANU,KAUnC/rC,qBAAU,YACmB,uCAAG,4BAAAE,EAAA,sEACRqrC,EAAiC,IADzB,QACpBxsC,EADoB,UAKxBgtC,EAAqBhtC,GACrB4sC,EAAmB5sC,EAAG,iBANE,2CAAH,qDAS3BotC,KACC,IAGHh5C,QAAQC,IAAI,6BAA6Bk4C,GAEzC,IAAMrpC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACOurC,EAA8B,CAClD1zC,KAAM,CACF,UAAamK,EAAOmwC,UAAU91B,OAC9B,SAAYra,EAAOowC,SAAS/1B,OAC5B,KAAQra,EAAOqwC,KAAKh2B,OACpB,WAAara,EAAOswC,WAAWj2B,OAC/B,KAAOra,EAAOuwC,KACd,eAAkB/G,EAClB,aAAexpC,EAAOwwC,aAAan2B,OACnC,aAAgBra,EAAOywC,aAAap2B,UAV3B,QACXgW,EADW,SAeAA,EAAU96B,OAQ3B0K,EAAQC,eAAc,GAvBL,2CAAH,wDAuCrBpC,qBAAU,WACT,IAAKwrC,EAAuB,UAAe,CAC1C,IAAMvsC,EAAQusC,EAAuB,MACrC,GAAIvsC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EAExDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACpCF,OAAO0P,OAAOjD,EAAK,OACnB,IACGvJ,SAAQ,SAACqnB,EAAKC,GACpB,GAAmB,kBAARD,EACVnH,GAAsBmH,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACvBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACZnH,GAAsBmH,UA9HE,IAACvU,GAwI7BgjC,EAAuB,WACxBh5C,OAAOC,KAAK+4C,EAAwBx3C,MAAMtB,OAAS,GAED,OAA9C84C,EAAuB,KAAvB,SA3I0BhjC,EA4IO,8BA3IpCD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCAkJ/C,CAAC8iC,IAID,IAAM4B,EAA4B,SAACjqC,GAC/BwoC,EAAmBxoC,EAAE/F,OAAO8f,UAKhC,OACI,kBAAC,IAAD,CACI3a,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACciqC,KAG1B,gBACGppC,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCAEsB,yBAAK5Q,MAAO,CAC1CiV,QAAS,OACTC,eAAgB,kBAEhB,yBAAKlV,MAAO,CACXgT,MAAO,QAEN,kBAACvU,EAAD,CACsCI,MAAM,aACNE,MAAO+Q,EAAOmwC,UACd5gD,KAAK,YACLF,QAAUsR,EAAQwvC,WAAa1vC,EAAO0vC,YAChCzvC,GAAgB4oC,EAAwBvsC,MAAxB,gBAEtBzN,YAAcqR,EAAQwvC,WAAa1vC,EAAO0vC,YACpCzvC,GAAgB4oC,EAAwBvsC,MAAxB,gBACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,iBAI5D,yBAAK1Q,MAAO,CACXgT,MAAO,QAGgC,kBAACvU,EAAD,CACAI,MAAM,YACNE,MAAO+Q,EAAOowC,SACd7gD,KAAK,WACLF,QAAUsR,EAAQyvC,UAAY3vC,EAAO2vC,WAC/B1vC,GAAgB4oC,EAAwBvsC,MAAxB,eAEtBzN,YAAcqR,EAAQyvC,UAAY3vC,EAAO2vC,WACnC1vC,GAAgB4oC,EAAwBvsC,MAAxB,eACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,iBAO5B,yBAAK1Q,MAAO,CAC5CiV,QAAS,OACTC,eAAgB,kBAEhB,yBAAKlV,MAAO,CACXgT,MAAO,QAEkC,kBAACvU,EAAD,CACFI,MAAM,OACNE,MAAO+Q,EAAOqwC,KACd9gD,KAAK,OACLF,QAAUsR,EAAQ0vC,MAAQ5vC,EAAO4vC,OAC3B3vC,GAAgB4oC,EAAwBvsC,MAAxB,WAEtBzN,YAAcqR,EAAQ0vC,MAAQ5vC,EAAO4vC,OAC/B3vC,GAAgB4oC,EAAwBvsC,MAAxB,WACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,YAM5D,yBAAK1Q,MAAO,CACXgT,MAAO,QAGgC,kBAACvU,EAAD,CACAI,MAAM,aACNE,MAAO+Q,EAAOswC,WACd/gD,KAAK,aACLF,QAAUsR,EAAQ2vC,YAAc7vC,EAAO6vC,aACjC5vC,GAAgB4oC,EAAwBvsC,MAAxB,iBAEtBzN,YAAcqR,EAAQ2vC,YAAc7vC,EAAO6vC,aACrC5vC,GAAgB4oC,EAAwBvsC,MAAxB,iBACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,mBAQ5B,yBAAK1Q,MAAO,CAC5CiV,QAAS,OACTC,eAAgB,kBAEhB,yBAAKlV,MAAO,CACXgT,MAAO,QAEN,kBAACvU,EAAD,CACsCI,MAAM,gBACNE,MAAO+Q,EAAOwwC,aACdjhD,KAAK,eACLF,QAAUsR,EAAQ6vC,cAAgB/vC,EAAO+vC,eACnC9vC,GAAgB4oC,EAAwBvsC,MAAxB,mBAEtBzN,YAAcqR,EAAQ6vC,cAAgB/vC,EAAO+vC,eACvC9vC,GAAgB4oC,EAAwBvsC,MAAxB,mBACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,oBAI5D,yBAAK1Q,MAAO,CACXgT,MAAO,QAGgC,kBAACvU,EAAD,CACAI,MAAM,gBACNE,MAAO+Q,EAAOywC,aACdlhD,KAAK,eACLF,QAAUsR,EAAQ8vC,cAAgBhwC,EAAOgwC,eACnC/vC,GAAgB4oC,EAAwBvsC,MAAxB,mBAEtBzN,YAAcqR,EAAQ8vC,cAAgBhwC,EAAOgwC,eACvC/vC,GAAgB4oC,EAAwBvsC,MAAxB,mBACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,qBAO5B,yBAAK1Q,MAAO,CAC3CgT,MAAO,QAE8B,kBAACvU,EAAD,CACGK,KAAK,SACND,MAAM,OACNE,MAAO+Q,EAAOuwC,KACdhhD,KAAK,OACLF,QAAUsR,EAAQ4vC,MAAQ9vC,EAAO8vC,OAC3B7vC,GAAgB4oC,EAAwBvsC,MAAxB,WAEtBzN,YAAcqR,EAAQ4vC,MAAQ9vC,EAAO8vC,OAC/B7vC,GAAgB4oC,EAAwBvsC,MAAxB,WACtB5N,SAAU,SAAC8R,GACPT,EAAaS,GACbL,EAAgB,YAM5B,kBAAC,KAAD,CACA3R,MAAOu6C,EACNr6C,SAAU+7C,GACH,0BAAMx7C,UAAU,sBAAhB,mBAQpD,yBAAKQ,MAAO,CACR4W,UAAU,UAEwB,yBAAK5W,MAAO,CACRiV,QAAQ,QACR+G,aAAa,OACbpF,UAAU,SAGd,kBAAC,IAAD,CAEE5F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASmoC,EAAwBlsC,UACjC1N,UAAU,8BAJZ,oCC7V9Buf,IAPiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQyf,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAulBhCyiB,GAzkBK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,8BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,iCAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,cACP0I,SAAS,eACJA,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gCACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,kBAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,sBAAuB2L,GAE/BA,IACFgvC,EAAShvC,EAAG,OACZ8uC,EAAY9uC,EAAG,WAbU,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,8BACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,QAChB5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,KACfgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,cAuBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBASJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,wBAQK,IAfP,iBC1kBR4H,IAPiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQyf,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBA+nBhCyiB,GAjnBK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,8BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,iCAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,YACPk8C,KAAK,eACAxzC,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,8BACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,gBAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,oBAAqB2L,GAE7BA,IACFgvC,EAAShvC,EAAG,OACZ8uC,EAAY9uC,EAAG,OAbU,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,4BACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,QAChB5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,KACfgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAhBP,QAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yBAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,cAuBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBASJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAhBP,QAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yBAQK,IAhBP,cAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,aAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,SAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uBAQK,IAfP,WAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oBAQK,IAfP,iBCrnBR4H,IAJiB1P,MAAaC,MAAM,IAIxB0P,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAgfhCyiB,GAleK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,8BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,iCAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,cACP0I,SAAS,eACJA,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gCACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,kBAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,cAAe2L,GAEvBA,IACFgvC,EAAShvC,EAAG,OACZ8uC,EAAY9uC,EAAG,WAbU,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,wBACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,QAChB5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,KACfgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,gBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,uBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,sBAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAhBP,kBAwBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,gBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,6BAQK,IAhBP,uBAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,4BAQK,IAhBP,sBAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAhBP,qBC/dR4H,IAPiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQyf,KAAZD,SAUFyE,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAsjBhCyiB,GAxiBK,SAAC,GAAoC,IAAlC5Z,EAAiC,EAAjCA,QAASk8B,EAAwB,EAAxBA,WAAwB,EACIptC,EACxD,GACA,8BAHoD,mBAC/CqtC,EAD+C,KAC5BC,EAD4B,OAQlDttC,EAAe,GAAI,iCAR+B,mBAOpDutC,GAPoD,aAUtBntC,mBAAS,CACvCpG,QAAS,GACTtC,KAAM,KAZ8C,mBAU/C4C,EAV+C,KAUrCkzC,EAVqC,OAe5BptC,mBAAS,CACjCpG,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C+1C,EAf+C,KAexCC,EAfwC,KAoBhD9rC,EAAY,uCAAG,4BAAA/B,EAAA,sEACgCytC,EACjD,CACE51C,KAAM,CACJ9F,MAAO,QACP0I,SAAS,eACJA,GAELmzC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCv2C,QAlEV+Q,OAoE3B6I,EAnEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,6BACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiEzC+kC,GAAW,IAEX73B,KAzBiB,iCA9CS,IAACpN,IA8CV,OAAH,qDA6BlBxI,qBAAU,WACR,IAAK0tC,EAAiB,UAAe,CACnC,IAAMzuC,EAAQyuC,EAAiB,MAC/B,GAAIzuC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B2wB,EAAiB,WAClBl7C,OAAOC,KAAKi7C,EAAkB15C,MAAMtB,SAMrC,CAACg7C,IAEJ1tC,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEACT0tC,EAAyC,CACzD/6C,WAAY,CACVE,aAAc,CACZk7C,UAAW,YAJU,OACrBlvC,EADqB,OAS3B5L,QAAQC,IAAI,gBAAiB2L,GAEzBA,IACFgvC,EAAShvC,EAAG,OACZ8uC,EAAY9uC,EAAG,WAbU,2CAAH,qDAiB1BmvC,KACC,IAMH,OACE,kBAAC,KAAD,CACE9oC,MAAO,OACPhT,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,uBACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,KAClB+T,SAbiB,SAAC7S,GACpBsqC,GAAW,IAaTv3B,OAAO,SACPsI,cAAe,CACbnb,QAASqqC,EAAkBpuC,UAC3Bmf,SAAU,UAGZxI,UAAW,CACT/S,OAAQ,OACRqG,QAAS,QAEXgV,QAAQ,GAER,kBAAC,KAAD,CAAMoqB,iBAAiB,KACrB,kBAAC,GAAD,CAASvyB,IAAI,WAAWlkB,IAAI,KAC1B,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAOwJ,EAASN,QAChB5I,KAAK,UACLJ,SAAU,SAAC8R,GACT0qC,EAAY,eACPlzC,EADM,CAETN,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM2G,EAAS5C,KACfgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6lB,EAAY,eACPlzC,EADM,CAET5C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBAUJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFAQA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAfP,eAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yCAQK,IAfP,uBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uCAQK,IAfP,oBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oCAQK,IAfP,qBAuBR,kBAAC,GAAD,CAAS6M,IAAI,QAAQlkB,IAAI,KACvB,yBACEE,MAAO,CACLiV,QAAS,SAGX,yBACEjV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO28C,EAAMzzC,QACb5I,KAAK,UACLJ,SAAU,SAAC8R,GACT4qC,EAAS,eACJD,EADG,CAENzzC,QAAS8I,EAAE/F,OAAOjM,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAM85C,EAAM/1C,KACZgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB+lB,EAAS,eACJD,EADG,CAEN/1C,KAAM/D,MAGVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACLiV,QAAS,QACT+G,aAAc,OACdpF,UAAW,SAGb,kBAAC,IAAD,CACE5F,QAASnB,EACToB,QAASqqC,EAAkBpuC,UAC3B1N,UAAU,8BAHZ,qBASJ,yBACEQ,MAAO,CACLgT,MAAO,MACPG,UAAW,OACXqD,WAAY,UACZK,WAAY,OACZM,QAAS,OACTlX,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLqX,SAAU,SAFd,iFASA,wBACErX,MAAO,CACLmX,QAAS,SAGX,wBACEnX,MAAO,CACLqX,SAAU,OACV2E,aAAc,OACdqrB,WAAY,IACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAoBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,0BAQK,IAfP,eAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,2BAQK,IAfP,aAmBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,yCAQK,IAfP,uBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,uCAQK,IAfP,oBAkBA,wBACEnX,MAAO,CACLqX,SAAU,OACVgwB,WAAY,EACZxvB,WAAY,MAGd,uBACE7X,MAAO,CACLC,aAAc,OACdiX,gBAAiB,OACjBC,QAAS,aAJb,oCAQK,IAfP,wBC7hBVqM,IAfmBnU,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWkB,SAAC6W,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,0BAgYhC0lC,GA1XY,SAAC,GAAe,qBAIrC/tC,EAAe,GAAI,6BAJiB,mBAEtCguC,EAFsC,KAGtCC,EAHsC,OAQpCjuC,EAAe,GAAI,sBARiB,mBAMtCkuC,EANsC,KAOtCC,EAPsC,OAUU/tC,oBAAS,GAVnB,mBAUjCguC,EAViC,KAUbC,EAVa,OAWgBjuC,oBAAS,GAXzB,mBAWjCkuC,EAXiC,KAWVC,EAXU,OAaMnuC,oBAAS,GAbf,mBAajCouC,EAbiC,KAafC,EAbe,OAcEruC,oBAAS,GAdX,mBAcjCsuC,EAdiC,KAcpBC,EAdoB,OAgBFvuC,oBAAS,GAhBP,mBAgBjCwuC,EAhBiC,KAgBnBC,EAhBmB,OAiBUzuC,oBAAS,GAjBnB,mBAiBjC0uC,EAjBiC,KAiBbC,EAjBa,OAkBI3uC,oBAAS,GAlBb,mBAkBjC4uC,EAlBiC,KAkBhBC,EAlBgB,OAmBkB7uC,oBAAS,GAnB3B,mBAmBjC8uC,EAnBiC,KAmBVC,EAnBU,OAqBQ/uC,oBAAS,GArBjB,mBAqBjCgvC,EArBiC,KAqBfC,EArBe,OAsBIjvC,oBAAS,GAtBb,oBAsBjCkvC,GAtBiC,MAsBjBC,GAtBiB,SAuBJnvC,oBAAS,GAvBL,qBAuBjCovC,GAvBiC,MAuBrBC,GAvBqB,SAwBQrvC,oBAAS,GAxBjB,qBAwBjCsvC,GAxBiC,MAwBfC,GAxBe,SAyBEvvC,mBAAS,IAzBX,qBAyBjCwvC,GAzBiC,MAyBlBC,GAzBkB,MA2BxC/8C,QAAQC,IAAI,qBAAsBq7C,GAClCt7C,QAAQC,IAAI,wBAAyBu7C,GAErC3uC,qBAAU,YACuB,uCAAG,4BAAAE,EAAA,sEACdouC,EAAqC,IADvB,QAC1BvvC,EAD0B,UAI9BmxC,GAAiBD,IACjBvB,EAAoB3vC,EAAG,YAAH,OACpB6vC,EAAuB7vC,EAAG,YAAH,MACvB+vC,EAAkB/vC,EAAG,UAAH,OAClBiwC,EAAmBjwC,EAAG,UAAH,MACnBywC,EAAyBzwC,EAAG,YAAH,MACzBqwC,EAAoBrwC,EAAG,YAAH,OACpBmwC,EAAcnwC,EAAG,MAAH,OACduwC,EAAiBvwC,EAAG,MAAH,OAZa,2CAAH,qDAe/BoxC,KACC,IAEHh9C,QAAQC,IAAI,iCAAkCi7C,GAE9C,IAAM+B,GAAqB,uCAAG,4BAAAlwC,EAAA,sEACKsuC,EAAkC,CACjEz2C,KAAM,CACJs4C,YAAa,CACXvC,MAAOW,EACPN,KAAMQ,GAER5yC,MAAO,CACL+xC,MAAOmB,EACPd,KAAMkB,GAERiB,YAAa,CACXxC,MAAOqB,EACPhB,KAAMoB,GAERgB,UAAW,CACTzC,MAAOe,EACPV,KAAMY,MAjBgB,QACtByB,EADsB,SAuB4B,OAA9BA,EAAmB/4C,QA5FhB+Q,EA6FH,oCA5F5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BA2FzCkN,GACE,mEA3BwB,iCArEA,IAACpN,IAqED,OAAH,qDAgC3B,OACE,oCACE,yBACEpW,MAAO,CACLiV,QAAS,OACT0iB,cAAe,WAGjB,yBAAK33B,MAAO,IACV,yBACEA,MAAO,CACLiV,QAAS,OACTE,WAAY,WAGd,yBACEnV,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,iBAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAMssC,GAAoB,IACnCx+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBASF,yBACE5tB,MAAO,CACL4W,UAAW,UAGf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAASuxB,EACT1wB,eAAgB0wB,EAChBp9C,SAAU,SAAC8R,GAAD,OAAOurC,EAAoBvrC,EAAE/F,OAAO8f,WAE9C,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAASyxB,EACT5wB,eAAgB4wB,EAChBt9C,SAAU,SAAC8R,GAAD,OAAOyrC,EAAuBzrC,EAAE/F,OAAO8f,WAEjD,0BAAMtrB,UAAU,2BAAhB,gBAMR,yBACEQ,MAAO,CACL4W,UAAW,UAIf,yBAAK5W,MAAO,IACV,yBACEA,MAAO,CACLiV,QAAS,OACTE,WAAY,WAGd,yBACEnV,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,eAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAMwsC,IAAkB,IACjC1+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBASF,yBACE5tB,MAAO,CACL4W,UAAW,UAGf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAAS2xB,EACT9wB,eAAgB8wB,EAChBx9C,SAAU,SAAC8R,GAAD,OAAO2rC,EAAkB3rC,EAAE/F,OAAO8f,WAE5C,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAAS6xB,EACThxB,eAAgBgxB,EAChB19C,SAAU,SAAC8R,GAAD,OAAO6rC,EAAmB7rC,EAAE/F,OAAO8f,WAE7C,0BAAMtrB,UAAU,2BAAhB,gBAMR,6BACE,yBACEQ,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZyB,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,UAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAM0sC,IAAc,IAC7B5+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBAUF,yBACE5tB,MAAO,CACL4W,UAAW,SAIf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAAS+xB,EACTlxB,eAAgBkxB,EAChB59C,SAAU,SAAC8R,GAAD,OAAO+rC,EAAc/rC,EAAE/F,OAAO8f,WAExC,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAASmyB,EACTtxB,eAAgBsxB,EAChBh+C,SAAU,SAAC8R,GAAD,OAAOmsC,EAAiBnsC,EAAE/F,OAAO8f,WAE3C,0BAAMtrB,UAAU,2BAAhB,gBAMR,6BACE,yBACEQ,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZyB,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,OACbH,UAAW,SAGb,wBAAIpX,UAAU,sBAAd,iBAEF,kBAAC,IAAD,CACEA,UAAU,oBACVwR,QAAS,kBAAM4sC,IAAoB,IACnC9+C,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAJR,uBASF,yBACE5tB,MAAO,CACL4W,UAAW,UAGf,yBACE5W,MAAO,CACLiV,QAAS,OACT2B,UAAW,SAGb,yBACE5W,MAAO,CACL+W,YAAa,SAGf,kBAAC,KAAD,CACE+T,QAASiyB,EACTpxB,eAAgBoxB,EAChB99C,SAAU,SAAC8R,GAAD,OAAOisC,EAAoBjsC,EAAE/F,OAAO8f,WAE9C,0BAAMtrB,UAAU,2BAAhB,WAGJ,yBAAKQ,MAAO,IACV,kBAAC,KAAD,CACE8qB,QAASqyB,EACTxxB,eAAgBwxB,EAChBl+C,SAAU,SAAC8R,GAAD,OAAOqsC,EAAyBrsC,EAAE/F,OAAO8f,WAEnD,0BAAMtrB,UAAU,2BAAhB,cAIJ,yBAAKQ,MAAO,QAIlB,yBACEA,MAAO,CACL4W,UAAW,UAGf,kBAAC,IAAD,CACE5F,QAAS,SAACD,GAAD,OAAYitC,MACrB/sC,QAASkrC,EAAqCjvC,UAC9C1N,UAAU,8BAHZ,mCAOA,yBACEQ,MAAO,CACL4W,UAAW,SAGf,kBAAC,GAAD,CACEuI,QAASk+B,EACThC,WAAYiC,IAEd,kBAAC,GAAD,CACEn+B,QAASo+B,GACTlC,WAAYmC,KAGd,kBAAC,GAAD,CACEr+B,QAASw+B,GACTtC,WAAYuC,KAEd,kBAAC,GAAD,CAAwBz+B,QAASs+B,GAAYpC,WAAYqC,OChZzDtuC,GAAmBC,MAAaC,MAAM,IAUtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpBzH,UAAW,GACXC,QAAS,IA2MIw2C,GAnMY,SAAC,GAAuC,EAArCc,UAAqC,EAA1BE,aAA2B,IAAD,EACJxxC,EAC3D,GACA,mBAH+D,mBAC1DywC,EAD0D,KAClCC,EADkC,OAMzCtwC,mBAAS,IANgC,mBAM1DnG,EAN0D,KAMpDs4C,EANoD,KAQ3D3wC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACK6wC,EAA2B,CACjDh5C,KAAM,CACJqC,UAAW8H,EAAO9H,UAAUmiB,OAC5BliB,QAAS6H,EAAO7H,QAAQkiB,OACxBjiB,KAAMA,KALS,QACbi4B,EADa,SAUmB,OAArBA,EAAU96B,SACzBtE,QAAQC,IAAI,cAAem/B,GAC3BqgB,EAAQ,IACRzwC,EAAQ2a,YA/CmBtU,EAgDH,cA/C5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,cACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAiD3CvG,EAAQC,eAAc,GAnBH,iCAlCS,IAACoG,IAkCV,OAAH,wDA+DlB,OAzCAxI,qBAAU,WACR,IAAK8wC,EAAsB,UAAe,CACxC,IAAM7xC,EAAQ6xC,EAAsB,MACpC,GAAI7xC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/B+zB,EAAsB,WACvBt+C,OAAOC,KAAKq+C,EAAuB98C,MAAMtB,SAM1C,CAACo+C,IAGF,kBAAC,IAAD,CACEvuC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBACE5Q,MAAO,CACLiV,QAAS,OACTC,eAAgB,kBAGlB,yBACElV,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,KACNE,MAAO+Q,EAAO9H,UACd3I,KAAK,YACLF,QACGsR,EAAQzI,WAAauI,EAAOvI,YAC3BwI,GACAkuC,EAAuB7xC,MAAvB,gBAEJzN,YACGqR,EAAQzI,WAAauI,EAAOvI,YAC3BwI,GACAkuC,EAAuB7xC,MAAvB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBACE1Q,MAAO,CACLgT,MAAO,QAGT,kBAACvU,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO7H,QACd5I,KAAK,UACLF,QACGsR,EAAQxI,SAAWsI,EAAOtI,UACzBuI,GACAkuC,EAAuB7xC,MAAvB,cAEJzN,YACGqR,EAAQxI,SAAWsI,EAAOtI,UACzBuI,GACAkuC,EAAuB7xC,MAAvB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAMxB,wBAAIlR,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACEi2B,OAAQC,KACR9zB,KAAMsG,EACNytB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB4qB,EAAQ5+C,IAEVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,MAI1B,yBACEz1B,MAAO,CACL4W,UAAW,UAGf,kBAAC,IAAD,CACE5F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASytC,EAAuBxxC,UAChC1N,UAAU,8BAHZ,QAQA,yBACEQ,MAAO,CACL4W,UAAW,eCxKVqoC,GAxEW,SAAC,GAAuC,IAArCl9C,EAAoC,EAApCA,GAAIm9C,EAAgC,EAAhCA,mBAAgC,EACRjxC,EACrD,GACA,mBAH6D,mBACxDkxC,EADwD,KACnCC,EADmC,KAsB/D,OAhBAxxC,qBAAU,YACmB,uCAAG,sBAAAE,EAAA,sEACVsxC,EAAwB,CACxC3+C,WAAY,CACVE,aAAc,CACZoB,GAAIA,MAJkB,yDAAH,qDAU3Bg4C,KACC,IAEHh5C,QAAQC,IAAI,sBAAuBm+C,GAGjC,oCACGA,EAAoBjyC,WACnB,oCACE,yBACElN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,YAGV,kBAAC,KAAD,CAAMgJ,KAAK,YAKhBqlC,EAAoBhyC,MACnBgyC,EAAoBv9C,MACpBxB,OAAOC,KAAK8+C,EAAoBv9C,MAAMtB,OAAS,GAC7C,oCACE,yBAAKd,UAAU,qBACb,yBACEwR,QAAS,kBAAMkuC,EAAmB,KAClC1/C,UAAU,8BAEV,kBAAC6/C,GAAA,EAAD,OAEF,yBAAK7/C,UAAU,6BACb,8BAAO2/C,EAAmB,KAAnB,SACP,4BAAKA,EAAmB,KAAnB,WACL,4BACGA,EAAmB,KAAnB,MACC1nC,IAAO0nC,EAAmB,KAAnB,MAAqCnzC,OAC1C,6BAIR,yBAAKxM,UAAU,2BACZ2/C,EAAmB,KAAnB,MACCvZ,KAAgBuZ,EAAmB,KAAnB,WC+BnBG,GA9FD,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,UAAyBC,GAA+B,EAA7CC,aAA6C,EAA/BD,mBAA+B,EACzBnxC,mBAAS,IADgB,mBAChEqxC,EADgE,KAC/CR,EAD+C,KAGvE,OACE,oCACGM,EAAkBtyC,WACjB,oCACE,yBACElN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,YAGV,kBAAC,KAAD,CAAMgJ,KAAK,YAKhB0lC,EAAkBryC,MAAQoyC,KAAeA,EAAUj/C,OAAS,IAC3D,oCACE,yBACEN,MAAO,CACLgT,MAAO,OACPiC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZrE,OAAQ,WAGV,kBAAC,KAAD,CACE7O,YAAY,iBACZO,MAAOwS,KAAMI,2BAMpBoqC,EAAkBryC,MAAQoyC,GAAaA,EAAUj/C,OAAS,GACzD,oCACE,yBAAKd,UAAU,2BACXkgD,GACA,oCACGF,EAAkBryC,MAAQoyC,GAAaA,EAAUj/C,OAAS,GACzD,oCACGi/C,EAAU1+C,KAAI,SAACQ,GACd,OACE,yBACE2P,QAAS,kBAAMkuC,EAAmB79C,EAAKU,KACvCvC,UAAU,gCAEV,yBAAKA,UAAU,qCACb,8CAAa6B,EAAK2G,YAClB,wCAAU3G,EAAK4G,SAAW,gBAG5B,4BACG29B,KACCvkC,EAAK6G,KAAKy3C,UAAU,EAAG,KAAO,UAGlC,wBACE3/C,MAAO,CACLqX,SAAU,SAGXhW,EAAKmD,MACJiT,IAAOpW,EAAKmD,MAAMwH,OAAO,uBAU1C0zC,GACC,oCACE,kBAAC,GAAD,CACER,mBAAoBA,EACpBn9C,GAAI29C,SC3Dd3gC,GAAYC,KAAZD,QACAiO,GAAWvuB,IAAXuuB,OAqHO4yB,GAjHH,SAACvqC,GAAkB,IAAD,EACyBpH,EACnD,GACA,mBAH0B,mBACrBuxC,EADqB,KACFJ,EADE,OAKM/wC,mBAAS,IALf,mBAKrBkxC,EALqB,KAKVE,EALU,KAO5B7xC,qBAAU,YACmB,uCAAG,4BAAAE,EAAA,sEACVsxC,EAAwB,CACxC3+C,WAAY,CACVC,OAAQ,CACNm/C,WAAY,IACZC,cAAe,OACf/pC,eAAgB,SANM,OACtBpJ,EADsB,OAW5B8yC,EAAa9yC,GAXe,2CAAH,qDAa3BotC,KACC,IAiBH,OACE,oCACE,yBAAKv6C,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,SAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,iBACZjB,SAAU,SAAC8R,GAAD,OAzBC,SAAChS,GACpB,GAAIygD,EAAkB59C,KAAKtB,OAAS,EAAG,CACrC,IAAMg1B,EAAiBkqB,EAAkB59C,KAAKuf,QAAO,SAAC9f,GACpD,OACGA,EAAK2G,WACJ3G,EAAK2G,UAAU6R,cAAc5Y,SAASlC,EAAM8a,gBAC7CxY,EAAK4G,SACJ5G,EAAK4G,QAAQ4R,cAAc5Y,SAASlC,EAAM8a,gBAC3CxY,EAAK6G,MAAQ7G,EAAK6G,KAAK2R,cAAc5Y,SAASlC,EAAM8a,kBAGzD4lC,EAAanqB,IAcU/G,CAAaxd,EAAE/F,OAAOjM,YAK7C,yBAAKS,UAAU,qBACb,kBAAC,KAAD,CAAM+2C,iBAAiB,KACrB,kBAAC,GAAD,CACEvyB,IACE,8BACE,kBAACmvB,GAAA,EAAD,MADF,UAKFrzC,IAAI,KAEJ,kBAAC,GAAD,CACE0/C,kBAAmBA,EACnBC,aAAcA,EACdF,UAAWA,KAIf,kBAAC,GAAD,CACEv7B,IACE,8BACE,kBAAC+7B,GAAA,EAAD,MADF,iBAKFjgD,IAAI,KAEJ,kBAAC,GAAD,OAGF,kBAAC,GAAD,CACEkkB,IACE,8BACE,kBAACpP,GAAA,EAAD,MADF,kBAKF9U,IAAI,KAEJ,kBAAC,GAAD,OAGF,kBAAC,GAAD,CACEkkB,IACE,8BACE,kBAACpP,GAAA,EAAD,MADF,wBAKF9U,IAAI,KAEJ,kBAAC,GAAD,WCdG2gD,IAhHIpuC,IAAXC,OAIiB,SAAC+C,GACxB,IAAMC,EAAUC,eADyB,EAGsBtH,EAC7D,GACA,0BALuC,mBAGlCuH,EAHkC,KAGTC,EAHS,KAazC7H,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACnB2H,EAA4B,CAChChV,WAAY,CACVC,OAAQ,CACNqL,YAAa,QAJM,2CAAH,qDAUxBiK,KACC,IAEHjV,QAAQC,IAAI,0BAA2BwU,GAEvC,IAAMe,EAAW,CACfhO,SAAU,kBAAC+L,GAAA,EAAD,MACV3K,MAAO,kBAAC0K,GAAA,EAAD,OAmET,OACE,oCACE,yBAAK7U,UAAU,oBACb,wBAAIA,UAAU,6BAAd,gBAlEAgW,EAAwBtI,UAExB,yBACElN,MAAO,CACLqT,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZyB,UAAW,UAGb,kBAAC,KAAD,OAKJpB,EAAwBrI,MACxBqI,EAAwB5T,OACvB4T,EAAwB5T,KAAK,GAG5B,yBACE5B,MAAO,CACLqT,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZyB,UAAW,UAGb,kBAAC,GAAD,CAAOhU,MAAM,2BAMjB,yBAAKpD,UAAU,iCACZgW,EAAwBrI,MACvBqI,EAAwB5T,KAAK,IAC7B4T,EAAwB5T,KAAKf,KAAI,SAACQ,EAAMkW,GACtC,OACE,yBACEvG,QAAS,kBAAMsE,EAAQ7R,KAAR,iBAAuBpC,EAAKvC,KAA5B,YAAoCuC,EAAKmW,WACxDhY,UAAU,uCAEV,0BAAMA,UAAU,4CACb+W,EAASlV,EAAI,OAEhB,yBAAK7B,UAAU,4CACb,4BAAK6B,EAAKsC,SACV,4BAAKtC,EAAKuC,MACV,4BACGvC,EAAKsB,OACJ8U,IAAOpW,EAAKsB,OAAOqJ,OAAO,mCClCjC4qC,GAvEQ,SAAC,GAOV,IANZC,EAMW,EANXA,YACAC,EAKW,EALXA,eACAC,EAIW,EAJXA,aAIW,IAHX/3C,oBAGW,MAHI,GAGJ,EAFXg4C,EAEW,EAFXA,SACAC,EACW,EADXA,YACW,EAC2B5oC,oBAAS,GADpC,mBACS8oC,GADT,WAmBX,OAFAp2C,QAAQC,IAAI,eAAgBhC,GAG1B,oCACE,yBACEgB,MAAO,CACLmnC,aAAc,iBACdnrB,aAAc,QAEhBxc,UAAU,6BAEV,kBAAC,KAAD,CACEQ,MAAO,CACLgc,aAAc,QAGhB/c,SAtBiB,SAAC8R,GACxB+lC,EAAe/lC,EAAE/F,OAAO8f,QAAUisB,EAAe,IACjDI,GAAe,GACfF,EAAYlmC,EAAE/F,OAAO8f,UAoBfA,QAASksB,GANX,gBAWF,kBAAC,KAASjL,MAAV,CACE/rC,MAAO,CAAEgT,MAAO,QAChBjU,MAAO83C,EACP73C,aAAcA,EACdC,SAxCW,SAAC43C,GAChBC,EAAeD,GACfM,IACIN,EAAYv2C,QAAUu2C,EAAYv2C,OAASy2C,EAAaz2C,QAE5D22C,EAAYJ,EAAYv2C,SAAWy2C,EAAaz2C,UAqC5C,kBAAC,KAAD,KACGy2C,EAAal2C,KAAI,SAACw2C,GACjB,OACE,kBAAC,KAAD,CACEr3C,MAAO,CACLgc,aAAc,QAEhBs7B,KAAM,GAEN,kBAAC,KAAD,CAAUv4C,MAAOs4C,GAAaA,WC7DxCxlC,GAAcC,GAAc,GAAdA,CAAA,gBCXY,gCDYJ,SAAC9E,EAAOC,GAEhC,OADoBA,EAAOG,YEXlBszC,GAAkB,SAAC3uC,GAAD,MAAY,CACvCjT,KDH4B,+BCI5BsO,QAAS2E,ICIEZ,GHUAU,GIQTzC,GAAmBC,MAAaC,MAAM,IAwBtCkU,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxCygC,GAAe,CACnB,eACA,gBACA,cACA,eACA,WACA,YACA,UACA,WACA,UACA,WACA,YACA,WACA,YACA,cAgTIpkC,GAAoB,CACxBX,UAAWY,EAAiBZ,UAC5B0uC,gBAAiBC,EAAsBD,iBAS1B7tC,gBANS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,YACb1F,YAAaa,EAAMb,eAImBwG,GAAzBE,EA5SG,SAAC,GASL,IARZ/Q,EAQW,EARXA,SACAsd,EAOW,EAPXA,WACAD,EAMW,EANXA,QACAmZ,EAKW,EALXA,QACAP,EAIW,EAJXA,WAIW,KAHX/lB,UAGW,EAFXD,MAEW,EADX2uC,gBAEoDzyC,EAClD,GACA,oBAHS,mBACJ6xB,EADI,KACYC,EADZ,OAKqB1xB,oBAAS,GAL9B,mBAKJ2oC,EALI,KAKMC,EALN,OAOuC5oC,mBAAS,IAPhD,mBAOJ4pC,EAPI,KAOeC,EAPf,KASXtqC,qBAAU,WACJ9L,EAASoQ,MAAQpQ,EAASoQ,KAAK5R,OAAS,IACtCwB,EAASoQ,KAAKjR,SAAS,eACzBg2C,GAAY,GACZiB,EAAqB,GAAD,OAAKnB,MAEzBmB,EAAqB,aAAIp2C,EAASoQ,UAGrC,CAACpQ,IAEJ,IAAM+N,EAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAjC,EAAA,6DACnB/M,QAAQC,IAAI,cAAe8O,GAEvBiC,EAHe,aAGHkmC,GACZjB,IACFjlC,EAAQ,CAAC,eALQ,SAQQguB,EAA0B,CACnDt/B,WAAY,CACVE,aAAc,CACZoB,GAAID,EAASE,MAGjB2D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACbuhD,OAAQ7uC,EACR/K,MAAO8I,EAAO9I,MACdwI,SAAUM,EAAON,SACjBqxC,UAAW/wC,EAAOgxC,wBAnBH,QAQb9gB,EARa,SAwByB,OAAxBA,EAAa36B,QAlGJ+Q,OAmG3B6I,EAlGJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAgGzC8I,GAAW,GAELoL,EAAgB,WACpB,OAAO8N,EAAQz3B,KAAI,SAACQ,GAAD,OAAUA,EAAKW,OAAKP,QAAQK,EAASE,MAG1DjB,QAAQC,IAAI,eAAgBg/B,GAQtBzoB,EAAQiT,IAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAIgV,EAAQ/gB,GAA1BnX,OAAA,IAAAA,CAAA,GAEf4/B,EAFe,CAGlBh+B,IAAKF,EAASE,OAEVyoB,EAxB0C,uBAyB3C6N,EAAQ92B,MAAM,EAAG+V,IAzB0B,CA0B9C8L,GA1B8C,aA2B3CiV,EAAQ92B,MAAM+V,EAAQ,KAE3BxW,QAAQC,IAAI,gBAAiBypB,GAC7BsN,EAAWtN,GAEX1a,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GA7DH,iCA1ES,IAACoG,IA0EV,OAAH,wDAgEZwY,EAAe,SAAC7d,GACpBqO,GAAW,IAkDb,OA/CAxR,qBAAU,WACR,IAAKkyB,EAAc,UAAe,CAChC,IAAMjzB,EAAQizB,EAAc,MAC5B,GAAIjzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/BmV,EAAc,WACf1/B,OAAOC,KAAKy/B,EAAel+B,MAAMtB,OAAS,GAEtCw/B,EAAc,KAAd,SAUL,CAACA,IAGF,kBAAC,IAAD,CACE3vB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAO3N,KAEnB,gBACCwO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACG7P,QAAQC,IAAI,SAAUuP,GACvB,kBAAC,KAAD,CACE3N,MAAM,aACNuc,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,kBAAC5tB,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,wBAAIlR,UAAU,mBAAd,uBAEA,kBAAC,GAAD,CACER,aAAc8C,EAASoQ,KACvB8kC,SAAUA,EACVC,YAAaA,EACbF,aAAcA,GACdF,YAAaoB,EACbnB,eAAgBoB,IAGlB,yBACEl4C,MAAO,CACL4W,UAAW,OACXoF,aAAc,SAGhB,yBACEhc,MAAO,CACLmnC,aAAc,iBACdnrB,aAAc,OACdpF,UAAW,SAGb,wBAAIpX,UAAU,mBAAd,qDAKF,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgBsvB,EAAejzB,MAAf,YAEpBzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgBsvB,EAAejzB,MAAf,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACjS,EAAD,CACEI,MAAM,WACNE,MAAO+Q,EAAON,SACdnQ,KAAK,WACLP,KAAK,WACLK,QACGsR,EAAQjB,UAAYe,EAAOf,WAC1BgB,GAAgBsvB,EAAejzB,MAAf,eAEpBzN,YACGqR,EAAQjB,UAAYe,EAAOf,WAC1BgB,GAAgBsvB,EAAejzB,MAAf,eAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAIpB,kBAACjS,EAAD,CACEI,MAAM,mBACNE,MAAO+Q,EAAOgxC,qBACdzhD,KAAK,uBACLP,KAAK,WACLK,QACGsR,EAAQqwC,sBACPvwC,EAAOuwC,uBACPtwC,GAAgBsvB,EAAejzB,MAAf,gBAEpBzN,YACGqR,EAAQqwC,sBACPvwC,EAAOuwC,uBACPtwC,GAAgBsvB,EAAejzB,MAAf,gBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oCCtU5BtB,GAAmBC,MAAaC,MAAM,IAsBtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACN2H,MAAO,GACPD,MAAO,GACPyI,SAAU,GACVsxC,qBAAsB,GACtBF,OAAQ,IAGJ7J,GAAe,CACnB,eACA,gBACA,cACA,eACA,WACA,YACA,UACA,WACA,UACA,WACA,YACA,WACA,YACA,cAuRagK,GA7QU,SAAC,GAKZ,IAJZ15B,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAgR,EAEW,EAFXA,QACAP,EACW,EADXA,WACW,EAC8B9pB,EACvC,GACA,qBAHS,mBACJgyB,EADI,KACSC,EADT,OAKqB7xB,oBAAS,GAL9B,mBAKJkR,EALI,KAKMF,EALN,OAM6BhR,oBAAS,GANtC,mBAMJ+qB,EANI,KAMUC,EANV,OAOuChrB,mBAAS,IAPhD,mBAOJ4pC,EAPI,KAOeC,EAPf,OAQqB7pC,oBAAS,GAR9B,mBAQJ2oC,EARI,KAQMC,EARN,KAULpnC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAjC,EAAA,6DACfiE,EADe,aACHkmC,GACZjB,IACFjlC,EAAQ,CAAC,eAHQ,SAKKmuB,EAAkB,CACxCv6B,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBpjB,MAAO+I,EAAO/I,MAAMojB,OACpBnjB,MAAO8I,EAAO9I,MACdwI,SAAUM,EAAON,SACjBqxC,UAAW/wC,EAAOgxC,qBAClBF,OAAQ7uC,KAZO,QAKbouB,EALa,SAiBmB,OAArBA,EAAU96B,QAGzB0yB,EAAW,GAAD,oBACLO,GADK,gBAIH6H,EAJG,CAKNp+B,GAAIo+B,EAAS,IAAU,GACvBrgC,IAAKqgC,EAAS,IAAU,GACxB9gC,KAAM8gC,EAAS,MAAY,QAG/BpwB,EAAQ2a,YACRpD,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GApCH,2CAAH,wDAuClBpC,qBAAU,WACR,IAAKqyB,EAAW,UAAe,CAC7B,IAAMpzB,EAAQozB,EAAW,MACzB,GAAIpzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,UA9HN,IAACvU,GAsIxB6pB,EAAW,WAAiB7/B,OAAOC,KAAK4/B,EAAYr+B,MAAMtB,OAAS,GAChC,OAAlC2/B,EAAW,KAAX,SAvIuB7pB,EAwID,6BAvI9BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCA8I1C,CAAC2pB,IAEJ,IAAMrR,EAAe,SAAC7d,GACpBuW,GAAyB,IAGrBrX,EAA4B,SAACH,EAAQI,GACzC,QACGJ,EAAOzQ,MACPyQ,EAAO9I,OACP8I,EAAON,UACPM,EAAOgxC,sBACP5wC,IAOL,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,qBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAG9C,kBAACzR,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgByvB,EAAYpzB,MAAZ,YAEpBzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgByvB,EAAYpzB,MAAZ,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACjS,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgByvB,EAAYpzB,MAAZ,YAEpBzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgByvB,EAAYpzB,MAAZ,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACjS,EAAD,CACEI,MAAM,WACNE,MAAO+Q,EAAON,SACdnQ,KAAK,WACLP,KAAK,WACLK,QACGsR,EAAQjB,UAAYe,EAAOf,WAC1BgB,GAAgByvB,EAAYpzB,MAAZ,eAEpBzN,YACGqR,EAAQjB,UAAYe,EAAOf,WAC1BgB,GAAgByvB,EAAYpzB,MAAZ,eAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAIpB,kBAACjS,EAAD,CACEI,MAAM,mBACNE,MAAO+Q,EAAOgxC,qBACdzhD,KAAK,uBACLP,KAAK,WACLK,QACGsR,EAAQqwC,sBAAwBvwC,EAAOuwC,uBACtCtwC,GACAyvB,EAAYpzB,MAAZ,2BAEJzN,YACGqR,EAAQqwC,sBAAwBvwC,EAAOuwC,uBACtCtwC,GAAgByvB,EAAYpzB,MAAZ,gBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,2BAIpB,wBAAIlR,UAAU,mBAAd,uBAEA,kBAAC,GAAD,CACEw3C,SAAUA,EACVC,YAAaA,EACbF,aAAcA,GACdF,YAAaoB,EACbnB,eAAgBoB,KAIpB,kBAAC,GAAD,CACE94B,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCxT5BL,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAIzCkN,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAgBvC4G,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAEFC,GAAU,SAAC,GAAiC,IAA/BrrB,EAA8B,EAA9BA,KAAMm2B,EAAwB,EAAxBA,WAAYhmB,EAAY,EAAZA,MAAY,EACjB1D,oBAAS,GADQ,mBACxC8Q,EADwC,KAC/BC,EAD+B,OAEW/Q,oBAAS,GAFpB,mBAExC8e,EAFwC,KAEjBC,EAFiB,OAGAnf,EAC7C,GACA,eAL6C,mBAGxC+yC,EAHwC,KAGxBhpB,EAHwB,KAQ/CpqB,qBAAU,WACR,IAAKozC,EAAc,UAAe,CAChC,IAAMn0C,EAAQm0C,EAAc,MAC5B,GAAIn0C,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/Bq2B,EAAc,WACf5gD,OAAOC,KAAK2gD,EAAep/C,MAAMtB,OAAS,GAED,OAArC0gD,EAAc,KAAd,QACF/hC,GAAwB,oBAU3B,CAAC+hC,IAEYzrC,eAAhB,IAEM0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAEzB8yB,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKW,MAAQD,KACtDg2B,EAAWI,IAbS,2CAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAMEre,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WAGPoc,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,SAIR1S,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEwT,MAAO,IACPpQ,MAAM,QACNob,UAAU,OACVle,IAAI,OACJN,UAAU,uBACVye,OAAQ,SAACtZ,GAAD,OACN,oCACGA,GACCA,EAAKrE,OAAS,GACdqE,EAAK9D,KAAI,SAACkH,GAAD,OACP,kBAAC,KAAD,CACE/H,MAAO,CACLC,aAAc,MACd+b,aAAc,OAEhB1F,MAAM,OACNxW,IAAKiI,GAEJA,UASZkK,GAAS,aAAcF,IACtB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,cAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOlc,MACxCY,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aASb6I,GACC,kBAAC,GAAD,CACEmL,QAAS12B,EACTm2B,WAAYA,EACZ3Y,WAAYA,EACZD,QAASA,EACTrd,SAAUqrB,MAkJLta,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAvIC,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACN1D,mBAAS,IADH,mBAC7BiqB,EAD6B,KACpBP,EADoB,OAGG9pB,EAAe,GAAI,aAHtB,mBAG7B4iB,EAH6B,KAGnBC,EAHmB,KAKpCljB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,IADxB,OACRnsB,EADQ,OAGdozB,EAAWpzB,GAHG,2CAAH,qDAKbygB,KACC,IAZiC,MAcKnX,EAAe,GAAI,UAdxB,gCAesBI,oBAAS,IAf/B,mBAe7BgZ,EAf6B,KAeNC,EAfM,KAyEpC,OADAvmB,QAAQC,IAAI,iBAAkB6vB,GAE5B,oCACE,yBAAKrxB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,UAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,kBACZjB,SAAU,SAAC8R,GAAD,OArBD,SAAChS,GACpB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAC9f,GAAD,OACtCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCke,EAAWS,IAgBcjK,CAAaxd,EAAE/F,OAAOjM,WAI1CkT,GAAS,aAAcF,IACtB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YAUJ,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASyR,MAAOA,EAAOgmB,WAAYA,EAAYn2B,KAAM02B,IAEtDzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,iBACZO,MAAOwS,KAAMI,4BAOvB,kBAAC6rC,GAAD,CACE3oB,QAASA,EACTP,WAAYA,EACZ1Q,sBAAuBA,EACvBC,yBAA0BA,QCrZ5BlY,GAAmBC,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,wCACV0C,YAAaoN,MACVxQ,MAAM,eACNF,SAAS,6BAWR6kB,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAmJ/BopB,GAxIG,SAAC,GAKL,IAJZC,EAIW,EAJXA,eACAC,EAGW,EAHXA,kBACAC,EAEW,EAFXA,cACAS,EACW,EADXA,iBACW,EACyCryB,EAClD,GACA,aAHS,mBACJ6xB,EADI,KACYC,EADZ,OAKqB1xB,oBAAS,GAL9B,mBAMLwB,GANK,UAMO,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACQiyB,EAA0B,CACnDt/B,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,eATL,QACb+9B,EADa,SAcyB,OAAxBA,EAAa36B,QAC/Bi7B,EAAiB,CACfv+B,GAAI+N,EAAO/N,GACXjC,IAAKgQ,EAAO/N,GACZ1C,KAAMyQ,EAAOzQ,KACb4C,YAAa6N,EAAO7N,cArDKmU,OAuD3B6I,EAtDJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BA+DzCkN,KAGFzT,EAAQC,eAAc,GACtB4vB,GAAkB,GArCC,iCAlCS,IAACxpB,IAkCV,OAAH,yDAwCZwY,EAAe,SAAC7d,GACpB6uB,GAAkB,IAGd3vB,EAA4B,SAACH,EAAQI,GACzC,QAAKJ,EAAOzQ,MAASyQ,EAAO7N,aAAgBiO,IAM9C,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOowB,KAEnB,gBACCvvB,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEhO,MAAM,aACNuc,QAASwgB,EACThc,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAG9C,kBAACzR,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBsvB,EAAejzB,MAAf,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAGpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLF,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgBsvB,EAAejzB,MAAf,kBAEpBzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgBsvB,EAAejzB,MAAf,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBCvBjBioB,IA7HiBxb,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OAOe,SAAC3X,GAAkB,IAAD,EACUpH,EAAe,GAAI,eAD7B,mBAC9BsyB,EAD8B,KACdC,EADc,OAEcvyB,EAAe,GAAI,eAFjC,mBAE9BwyB,EAF8B,KAEZC,EAFY,OAGOryB,oBAAS,GAHhB,mBAG9BsxB,EAH8B,KAGdC,EAHc,OAIIvxB,mBAAS,IAJb,mBAI9BwxB,EAJ8B,KAIhBS,EAJgB,KAO/B5/B,EAASuuB,eAETuI,GADUjiB,eACF7U,EAAM,IAgDpB,OA9CAkN,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS0yB,EAAqB,CAC7C//B,WAAY,CACRE,aAAc,CACVoB,GAAIy1B,MAJG,QACbmJ,EADa,UAWf5/B,QAAQC,IAAI,eAAe2/B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpB5G,KAED,CAACvC,IAEJ5pB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4yB,EAAuB,CACzBjgC,WAAY,CACRE,aAAc,CACVoB,GAAIy1B,MAJG,2CAAH,qDAUpBoJ,KAED,CAACpJ,IAKJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAIvB,yBAAKlB,UAAU,wBACX,yBAAKA,UAAU,iCACX,4CAIC+gC,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,oCACI,kBAAC4gD,GAAD,CACIvhB,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfS,iBAAkBA,IAEtB,kBAAC,IAAD,CACItvB,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACIsC,UAAW,CAAEtR,KAAM,GACnB3N,QAASsvB,EAAerzB,WACvBqzB,EAAepzB,MAAQ0yB,KAAmBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IAC3E,kBAAC,KAAD,CAAO2B,YAAY,iBAAiBO,MAAOwS,KAAMI,yBAGpDmrB,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,yBAAKd,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKqgC,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,YChI9CvP,GAAiBC,KAAjBD,aACAtD,GAAWvuB,IAAXuuB,OAiNOwD,GAzMF,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,aAA0B,EACtCtiB,mBAAS,IAD6B,mBAC7D3C,EAD6D,KACpDklB,EADoD,OAEvBviB,mBAAS,IAFc,gCAG7BJ,EAAe,GAAI,gBAHU,mBAG7D4iB,EAH6D,KAGnDC,EAHmD,OAI9BziB,mBAAS,IAJqB,mBAI7D0iB,EAJ6D,KAIhDC,EAJgD,KA6BpEpjB,qBAAU,WACR,GAAIijB,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAKqwB,EAAarwB,OAAS,EAAG,CACxE,IAAMqxB,EAAsBhB,EAAa9vB,KAAI,SAACQ,GAC5C,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MAAK,SAACrb,GAAD,OAASA,EAAInE,KAAOV,KAChE,GAAI6vB,EACF,OAAOA,EAAiB7xB,QAG5BqxB,EAAgBiB,MAEjB,CAACd,IAEJjjB,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACWgjB,EAAmB,CAC1CrwB,WAAY,CACVC,OAAQ,CACNwtB,eAAe,MAJP,QACRiD,EADQ,SAUIA,EAAW7wB,OAAS,IAE9B8wB,EAAaD,EAAWtwB,KAAI,SAACkH,GACjC,OAAOA,EAAI1I,QAEbuxB,EAAWQ,IAfC,2CAAH,qDAmBbhM,KACC,IA0CH,OAFArkB,QAAQC,IAAI,eAAgB2vB,GAG1B,oCACGE,EAAS3jB,WACR,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIH0b,EAAS1jB,MACR,yBAAK3N,UAAU,8CACb,kBAAC,GAAD,CACEwT,MAAO,MACPhT,MAAO,CACLqT,OAAQ,OACRpT,aAAc,iBACdoxB,YAAa,mBAEfvX,KAAK,SACL5Z,YAAY,WACZoxB,SAAU,SAACvyB,GAAD,OAAWgC,QAAQC,IAAIjC,IACjCE,SApDa,SAAC8R,GAGtB,GAFAigB,EAAejgB,EAAE/F,OAAOjM,OAED,KAAnBgS,EAAE/F,OAAOjM,OACX,GAAI8xB,EAASjvB,MAAQivB,EAASjvB,KAAKtB,OAAS,EAAG,CAE7C,IAAMixB,EAAgBV,EAASjvB,KAAKf,KAAI,SAACqF,GAAD,OAASA,EAAI7G,QACrDuxB,EAAWW,QAER,CACL,IAAMC,EACJ9lB,EAAQpL,OAAS,EACboL,EAAQyV,QAAO,SAACvH,GACd,OAAOA,EAAOC,cAAc5Y,SAAS8vB,EAAYlX,kBAEnD,GAEN+W,EAAWY,QAwCVX,EAAS1jB,QAAUzB,EAAQpL,OAAS,IACnC,yBACEN,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOvS,MAAM,gBAAgByQ,OAAQ,OAmBxCwd,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAKoL,EAAQpL,OAAS,GAC7D,oCACGoL,EAAQ7K,KAAI,SAACkH,GAAD,OACX,oCACE,kBAAC,GAAD,CACEjI,IAAKiI,EACL+iB,QAAS6F,EAAalvB,QAAQsG,IAAQ,EACtC9I,SAAU,SAAC6rB,GAAD,OAxKH,SAAC/iB,EAAK+iB,GACzB,IAAM2G,EAAmB3G,EAAO,uBACxB6F,GADwB,CACV5oB,IAClB4oB,EAAaxP,QAAO,SAACuQ,GAAD,OAAOA,IAAM3pB,KAGrC,GAFA2oB,EAAgBe,GAGdZ,EAAS1jB,MACT0jB,EAASjvB,KAAKtB,OAAS,GACvBmxB,EAAiBnxB,OAAS,EAC1B,CACA,IAAMqxB,EAAsBF,EAAiB5wB,KAAI,SAACQ,GAChD,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MACrC,SAACrb,GAAD,OAASA,EAAI7G,KAAKwa,gBAAkBxY,EAAKwY,iBAE3C,GAAIqX,EACF,OAAOA,EAAiBnvB,MAG5B0uB,EAAUkB,IAqJuBrhB,CAAavI,EAAK+iB,KAExC/iB,UCzLTilB,GAAWvuB,IAAXuuB,OAyKOuF,GAjKI,SAAC,GAIN,IAHZC,EAGW,EAHXA,eACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,mBACW,EACmBrkB,mBAAS,IAD5B,mBACJ3C,EADI,KACKklB,EADL,OAE2BviB,mBAAS,IAFpC,mBAEJ0iB,EAFI,KAESC,EAFT,OAIsC/iB,EAC/C,GACA,0BANS,mBAIJ8f,EAJI,KAIWC,EAJX,KASXpgB,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACUkgB,EAAwB,IADlC,QACd2E,EADc,SAIGA,EAAgBryB,OAAS,GAE9CswB,EAAW+B,GANO,2CAAH,qDAUnBtE,KACC,IA2CH,OAHAttB,QAAQC,IAAI,gBAAiB+sB,GAC7BhtB,QAAQC,IAAI,aAAc0K,GAGxB,yBAAKlM,UAAU,oCACZuuB,EAAc7gB,WACb,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIH4Y,EAAc5gB,MACb,yBAAK3N,UAAU,8CACb,kBAAC,GAAD,CACEwT,MAAO,OACPhT,MAAO,CACLqT,OAAQ,OACRpT,aAAc,iBACdoxB,YAAa,mBAEfvX,KAAK,SACL5Z,YAAY,GACZoxB,SAAU,SAACvyB,GAAD,OAAWgC,QAAQC,IAAIjC,IACjCE,SA5Da,SAAC8R,GAGtB,GAFAigB,EAAejgB,EAAE/F,OAAOjM,OAED,KAAnBgS,EAAE/F,OAAOjM,OACX,GAAIgvB,EAAcnsB,MAAQmsB,EAAcnsB,KAAKtB,OAAS,EAAG,CAEvD,IAAMixB,EAAgBxD,EAAcnsB,KAAKf,KAAI,SAACqF,GAC5C,OAAO,eACFA,MAGP0qB,EAAWW,QAER,CACL,IAAMC,EACJ9lB,EAAQpL,OAAS,EACboL,EAAQyV,QAAO,SAACvH,GACd,OACEA,GACAA,EAAOhX,MAAMiX,cAAc5Y,SAAS8vB,EAAYlX,kBAGpD,GAEN+W,EAAWY,QAyCVzD,EAAc5gB,MACb4gB,EAAcnsB,KAAKtB,OAAS,GAC5BoL,EAAQpL,OAAS,GACf,oCACE,yBACEN,MACE,IAKD0L,EAAQpL,OAAS,GAChB,kBAAC,KAAD,CACEuyB,WAAS,EACTC,YAAaL,EACbM,SA1FC,SAACC,EAAcC,KA2FhBC,QAvFA,SAACJ,EAAaG,GAC5B,IAAME,EAAaL,EAAYhI,SAAW,GAC1C0H,EAAeW,GACfT,EAAmBS,IAqFLC,SAAU1nB,EACV2nB,kBAAkB,EAClBC,eAAe,MAO1BvF,EAAc5gB,QAAUzB,EAAQpL,OAAS,IACxC,yBACEN,MAAO,CACLgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOvS,MAAM,oBAAoByQ,OAAQ,SCvCpCmd,GA3GF,SAAC,GAGA,IAFVkE,EAES,EAFTA,cACAD,EACS,EADTA,WACS,EACqBpmB,mBAAS,IAD9B,mBACF3C,EADE,KACOklB,EADP,OAEoCviB,mBAAS,IAF7C,mBAEFynB,EAFE,KAEcC,EAFd,OAG8B9nB,EAAe,GAAI,eAHjD,mBAGF4iB,EAHE,KAGQC,EAHR,KAKTljB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACagjB,EAAmB,CACxCrwB,WAAY,CACRC,OAAQ,CACJwtB,eAAe,MAJf,QACNiD,EADM,SAUMA,EAAW7wB,OAAS,IAE5B8wB,EAAaD,EAAWtwB,KAAI,SAACkH,GAC/B,OAAOA,EAAI1I,QAEfuxB,EAAWQ,IAfH,2CAAH,qDAoBbhM,KACD,IAIHxX,qBAAU,WACN,GAAG6mB,GAAcA,EAAWn0B,OAAS,EAAE,CACnCS,QAAQC,IAAI,mBACZ,IAAM8/B,EAAmBrM,EAAW5zB,KAAI,SAAAQ,GAAI,OAAIA,EAAKhC,QACrD02B,EAAmB+K,MAEzB,CAACrM,IAEH1zB,QAAQC,IAAI,8BAA8ByzB,GAiC1C,OACI,oCAEI,kBAAC,KAAD,CAAUxjB,QAAS4f,EAAS3jB,WACvB2jB,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1CqT,KAAK,WACLzT,YAAY,kBACZnB,MAAO+2B,EACP72B,SApCK,SAACg3B,GAKlB,GAJAF,EAAmBE,GAEnBl1B,QAAQC,IAAI,mBAAoBi1B,GAE5BpF,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAK21B,EAAY31B,OAAS,EAAG,CACrE,IAAMqxB,EAAsBsE,EAAYp1B,KAAI,SAACQ,GACzC,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MACnC,SAACrb,GAAD,OAASA,EAAI7G,KAAKwa,gBAAkBxY,EAAKwY,iBAE7C,GAAIqX,EACA,OAAOA,KAGfnwB,QAAQC,IAAI,sBAAuB2wB,GACnC+C,EAAc/C,QAGd+C,EAAc,KAmBN10B,MAAO,CAAEgT,MAAO,SAEftH,EAAQyV,QAAO,SAAA+U,GAAC,OAAKJ,EAAe70B,SAASi1B,MAAIr1B,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAO2W,OAAR,CAAelY,IAAKuB,EAAMtC,MAAOsC,GAC5BA,OAIZwvB,EAAS1jB,MAAQ0jB,EAASjvB,QAAUivB,EAASjvB,KAAKtB,OAAS,IACxD,yBAAKN,MAAO,CACR6W,WAAY,SAEZ,kBAAC,GAAD,CAAOjU,MAAM,mBAAmByQ,OAAQ,UCvDjDqkB,GApCY,SAAC,GAGd,IAFV9D,EAES,EAFTA,eACAF,EACS,EADTA,YAEA,OACI,yBACI1zB,MAAO,CAEH23B,cAAe,QAEnBn4B,UAAU,6CACV,yBAAKA,UAAU,qDACVk0B,GAAeA,EAAYpzB,OAAS,GAAKozB,EAAY7yB,KAAI,SAAAQ,GACtD,OAAO,kBAACu2B,GAAD,CACHhE,eAAgBA,EAChBF,YAAaA,EACb0C,UAAW/0B,EAAKW,IAChBkD,SAAU7D,EAAK6D,SACf7D,KAAMA,EACN2zB,UAAW3zB,EAAK2zB,iBAIrBtB,EAAYpzB,OAAS,IACpB,yBAAKN,MAAO,CACR6W,WAAY,SAEZ,kBAAC,GAAD,CAAOjU,MAAM,mBAAmByQ,OAAQ,UCW1DjE,IAFc4P,KAAZD,QAEiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,2CAGNkQ,GAAgB,CACpBpQ,KAAM,GACNmB,IAAK,GACLoF,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbH,KAAM,GACNghB,OAAQ,GACRw6B,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACfz6B,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAWRq6B,GAAsB,SAAC,GAMvB,EALJl6B,sBAKK,IAJLC,EAII,EAJJA,yBACamM,EAGT,EAHJC,YACgBC,EAEZ,EAFJC,eACAC,EACI,EADJA,kBACI,EAC6C5lB,EAC/C,GACA,cAHE,mBACG0mB,EADH,KACoBC,EADpB,OAKmD3mB,EACrD,GACA,cAPE,mBAKG8jB,EALH,KAKuBgC,EALvB,OAS0B1lB,oBAAS,GATnC,mBASG8Q,EATH,KASYC,EATZ,OAU4B/Q,oBAAS,GAVrC,mBAUGkR,EAVH,KAUaF,EAVb,OAW4ChR,oBAAS,GAXrD,mBAWqBoR,GAXrB,aAY0DpR,oBAAS,GAZnE,mBAYGmR,EAZH,KAY4B2I,EAZ5B,OAaoD9Z,oBAAS,GAb7D,mBAaGiR,EAbH,KAayB8I,EAbzB,OAckC/Z,mBAAS,IAd3C,mBAcG2lB,EAdH,KAcgBxB,EAdhB,OAewBnkB,mBAAS,IAfjC,mBAeG4lB,EAfH,KAeWxD,EAfX,OAgB0BpiB,mBAAS,IAhBnC,mBAgBYwjB,GAhBZ,aAiB0BxjB,mBAAS,IAjBnC,oBAiBG/J,GAjBH,MAiBY4vB,GAjBZ,SAkBoC7lB,mBAAS,IAlB7C,qBAkBG8a,GAlBH,MAkBiBC,GAlBjB,SAmB0C/a,mBAAS,IAnBnD,qBAmBGokB,GAnBH,MAmBoBC,GAnBpB,SAoBoCrkB,mBAAS,IApB7C,qBAoBGsiB,GApBH,MAoBiBD,GApBjB,SAqBoBriB,mBAAS,IArB7B,qBAqBG1I,GArBH,MAqBS67C,GArBT,SAsBwBnzC,mBAAS,IAtBjC,qBAsBG8yC,GAtBH,MAsBWM,GAtBX,SAuBgCpzC,mBAAS,IAvBzC,qBAuBGomB,GAvBH,MAuBeC,GAvBf,SAwBkCrmB,mBAAS,IAxB3C,qBAwBGqlB,GAxBH,MAwBgBE,GAxBhB,SAyB4BvlB,mBAAS,IAzBrC,qBAyBG4Y,GAzBH,MAyBasN,GAzBb,SA0BgClmB,mBAAS,IA1BzC,qBA0BG6Y,GA1BH,MA0BesN,GA1Bf,SA+BAvmB,EAAe,GAAI,6BA/BnB,qBA8BFsb,IA9BE,gBAmCAtb,EAAe,GAAI,2BAnCnB,qBAkCFub,IAlCE,gBAuCAvb,EAAe,GAAI,+BAvCnB,qCA2CAA,EAAe,GAAI,8BA3CnB,qBA0CFwb,IA1CE,gBA+CAxb,EAAe,GAAI,6BA/CnB,qBA8CFyb,IA9CE,aAiDJ3oB,QAAQC,IAAI,cAAe+wB,GAC3BnkB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBimB,EAAyB,CAC7BtzB,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,IAExBrB,OAAQ,CACNswC,WAAY,EACZ0Q,QAAS,IACTC,YAAa,QATI,2CAAH,qDAetBh4B,KACC,CAACkK,IAEJjmB,qBAAU,WACR,GACEmkB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,EAC9C,CACA,IAAM6K,EAAS4mB,EAAmBnwB,KAAKY,MACnConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC5BspB,EAAYze,GAIZ4mB,EAAmBnwB,KAAKQ,OACxB2vB,EAAmBnwB,KAAKQ,MAAxB,GAEe+I,EAAOoW,MACpB,SAAClgB,GAAD,OAAUA,EAAKU,KAAOgwB,EAAmBnwB,KAAKQ,MAAxB,QAGtBwnB,EAAS,CAAImI,EAAmBnwB,KAAKQ,OAA5B,oBAAsCwnB,KAGjDR,GAAgB2I,EAAmBnwB,KAAKQ,MAAxB,IAIlBid,EAAYuK,MAEb,CAACmI,EAAmBnwB,OAEvBgM,qBAAU,WAEJ2R,GAAYA,EAAS,IAAMA,EAASjf,OAAS,GAC3C6oB,KAAiB5J,EAAS,GAAGxd,KAC/BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,OAGrC,CAACA,IAEJxe,QAAQC,IAAI,eAAgBue,GAE5B,IAAMuK,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,GAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,OANF,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,GAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,OAND,QACzBkoB,EADyB,SAYa,OAAxBA,EAAa5kB,QAG/Bme,GAAsB,mDAfO,2CAAH,sDA8B9B5V,qBAAU,WACR,GACEmkB,EAAmB5kB,MACnB4kB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,EAC9C,CACAS,QAAQC,IAAI,OAAQ+wB,GACpB,IAAM8B,EAAoB9B,EAAmBnwB,KAO7C,GANIiyB,GAAqBA,EAAkBnvB,MACzCmtB,EAAWgC,EAAkBnvB,MAAlB,IAEXmtB,EAAW,IAIXgC,GACAA,EAAkBlvB,MAClBkvB,EAAkBlvB,KAAKrE,OAAS,EAChC,CACA,IAAMshD,EAAW/tB,EAAkBlvB,KAAK9D,KAAI,SAACQ,GAAD,OAAUA,EAAKhC,QACrD40B,EAASJ,EAAkBlvB,KAAK9D,KAAI,SAACQ,GAAD,OAAUA,EAAKW,OACzDjB,QAAQC,IAAI,aAAc4gD,EAAU3tB,GACpCvD,GAAgBkxB,GAChBnxB,EAAUwD,QAEVxD,EAAU,IACVC,GAAgB,IAElB,GACEmD,GACAA,EAAkB/xB,UAClB+xB,EAAkB/xB,SAASxB,OAAS,EACpC,CACA,IAAMk1B,EAAc3B,EAAkB/xB,SACtC4wB,GAAmB8C,QAEnB9C,GAAmB,IAGjBmB,GAAqBA,EAAkBluB,KACzC67C,GAAQ3tB,EAAkBluB,MAE1B67C,GAAQ,IAIR3tB,GACAA,EAAkBxJ,IAClBwJ,EAAkBxJ,GAAlB,KAEAo3B,GAAU5tB,EAAkBxJ,GAAlB,MAEVo3B,GAAU,OAGb,CAAC1vB,IAEJhxB,QAAQC,IAAI,sBAAuB2vB,IACnC5vB,QAAQC,IAAI,UAAWizB,GACvBrmB,qBAAU,WACR,GACEmkB,EAAmB5kB,MACnB4kB,EAAkB,MAClB3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GAGjDyxB,EAAkB,KAAlB,iBAA+CzxB,OAAS,EACxD,CACA,IAAMm0B,EAAa1C,EAAkB,KAAlB,iBAA+ClxB,KAChE,SAACQ,GAAD,OAAUA,KAEZqzB,GAAcD,GACd,IAAMf,EAAc3B,EAAkB,KAAlB,iBAA+ClxB,KACjE,SAACQ,GACC,OAAO,eACFA,EADL,CAEEW,IAAKX,EAAKW,IACVgzB,UAAW3zB,EAAK2zB,UAChB9vB,SAAU7D,EAAK6D,cAIrB0uB,GAAeF,MAEhB,CAAC3B,IAEJhxB,QAAQC,IAAI,wBAAyB+wB,GAErCnkB,qBAAU,WACR,GAAI6mB,GAAWn0B,OAAS,GACtB,GAAIm0B,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CAC1C,IAAM00B,EACJP,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GACtDm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IACFS,QAAQC,IAAI,YAAag0B,GAEzBpB,GAAe,GAAD,oBACTF,IADS,gBAGPe,GAAWA,GAAWn0B,OAAS,GAHxB,CAIV0B,IAAKyyB,GAAWA,GAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIuvB,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CACjDS,QAAQC,IAAI,aAAcyzB,IAC1B1zB,QAAQC,IAAI,cAAe0yB,IAE3B,IAAM4B,EAAiB5B,GAAYvS,QAAO,SAAC9f,GACzC,IAAIk0B,GAAS,EAMb,OALAd,GAAWnxB,SAAQ,SAACW,GACdA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET3B,GAAe0B,SAGjB1B,GAAe,MAGhB,CAACa,KAEJ,IAAM5kB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,6BAAAjC,EAAA,yDAEboc,EACJ3K,GAAYA,EAAS,GAEjBA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GAEAwE,EACJmtB,GAAYpzB,OAAS,EACjBozB,GAAY7yB,KAAI,SAACoD,GACf,MAAO,CACLjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAGtB,KAEF2uB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GArB9C,oBAsBX8pB,EAAyB,GAE3BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAACymB,GACb8J,GAAqBA,EAAiB,QACnCA,EAAiB,MAAU5yB,SAAS8oB,IACvCK,EAAuB3mB,KAAKsmB,SAMhCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GAlChD,iCAmCTipB,GAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,KAG9B4D,KAAM,CACJnD,MAAO4nB,KA3CI,oCA+CfA,EAAuB,IACvBA,EAAuB9pB,OAAS,GAhDjB,kCAkDTkpB,GAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,OAvDjB,yBA8DS6yB,EAAsB,CAChDn0B,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,KAG1B4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBroB,SAAU2wB,GACV9tB,KAAMsvB,EACNzxB,MAAO0nB,EACPvkB,KAAMA,GACNI,iBAAkBQ,EAClBX,gBAAiBkK,EAAOlK,gBACxBC,YAAaiK,EAAOjK,YACpBC,YAAagK,EAAOhK,YACpB+gB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,IAAYA,GAAS3mB,OAAS,EAAI2mB,GAAS3lB,KAAK,KAAO,GAEjE+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SACEC,IAAcA,GAAW5mB,OAAS,EAAI4mB,GAAW5lB,KAAK,KAAO,GAC/DjC,KAAMyQ,EAAO6W,OAAOwD,OACpBvkB,gBAAiBkK,EAAOsxC,kBACxBz7C,KAAMw7C,GACNt7C,YAAaiK,EAAOuxC,cACpBv7C,YAAagK,EAAOwxC,kBA3FP,QA8DbnsB,EA9Da,OAgGnBp0B,QAAQC,IAAI,gBAAiBm0B,GAGzBA,GAA0C,OAAzBA,EAAc9vB,SACjC4Z,GAAwB,kBAMlB1H,EAJgB,WACpB,OAAOkc,EAAW5yB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQoyB,EAAkB9xB,IAGvDyoB,GAERD,EAAW,SAACxoB,GAChB,KAAKA,GAAOwd,GAAaA,EAAS,IAChC,MAAO,GAEP,GAAIA,GAAYA,EAASjf,OAAS,EAAG,CACnC,IAAMe,EAAOke,EAASgC,MAAK,SAAClgB,GAAD,OAAUA,EAAKU,KAAOA,KACjD,GAAIV,EACF,OAAOA,EAAKe,QAOdihB,EAAcjjB,OAAOkjB,OAAO,GAAImQ,EAAWlc,GAA7BnX,OAAA,IAAAA,CAAA,GACf+0B,EADe,CAElBpzB,GAAIozB,EAAa,IAAU,GAC3Br1B,IAAKq1B,EAAa,IAAU,GAC5B91B,KAAMyQ,EAAOzQ,KAAK8qB,QAAU,GAC5B/nB,MAAOmoB,EAASpB,OAEZsB,EA9B4C,uBA+B7CgJ,EAAWjyB,MAAM,EAAG+V,IA/ByB,CAgChD8L,GAhCgD,aAiC7CoQ,EAAWjyB,MAAM+V,EAAQ,KAE9Boc,EAAclJ,GAEdnD,GAAyB,GAGzBjI,EAAY,IACZ+J,GAAgB,IAChB8K,GAAW,IACXzD,EAAU,IACVC,GAAgB,IAChBmB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnB+uB,GAAU,IACVD,GAAQ,IACRjtB,GAAY,IACZC,GAAc,IACdE,GAAc,IACdd,GAAe,IACf7jB,EAAQ2a,aAKV3a,EAAQC,eAAc,GA9JH,4CAAH,wDAiKlBpC,qBAAU,WACR,IAAK+mB,EAAe,UAAe,CACjC,IAAM9nB,EAAQ8nB,EAAe,MAC7B,GAAI9nB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACgK,IAoCJ,OAhBA/mB,qBAAU,WACR,GAAIimB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,EAAG,CAClE,IAAM2mB,EACJ4M,EAAkB5M,UAAY4M,EAAkB5M,SAASrmB,MAAM,KAEjEG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJ2M,EAAkBxJ,IAClBwJ,EAAkBxJ,GAAlB,UACAwJ,EAAkBxJ,GAAlB,SAAiCzpB,MAAM,KACzC2zB,GAAYtN,GAAY,IACxBuN,GAActN,GAAc,OAE7B,IAGD,kBAAC,IAAD,CACE/W,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,kBAGNokB,EAHM,GAIL9B,EAAkB,MACpB3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GACjDyxB,EAAkB,KAAlB,IAAoC,CAClCjL,YAAaiL,EAAkB,KAAlB,GAAiClL,UAC9CG,kBACE+K,EAAkB,KAAlB,GAAiChL,gBACnCJ,OAAQoL,EAAkB,KAAlB,GAAiC1yB,KACzC61B,SAAUnD,EAAkB,KAAlB,GAAiC1tB,KAC3CuiB,cAAemL,EAAkB,KAAlB,GAAiC9vB,iBAKvD,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,kDAEA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,OACNS,YAAY,YACZP,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBmkB,EAAgB9nB,MAAhB,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBmkB,EAAgB9nB,MAAhB,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACjS,EAAD,CACEI,MAAM,mBACNE,MAAO+Q,EAAOlK,gBACdtG,YAAY,SACZD,KAAK,kBACLF,QACGsR,EAAQ7K,iBAAmB2K,EAAO3K,kBACjC4K,GACAmkB,EAAgB9nB,MAAhB,sBAEJzN,YACGqR,EAAQ7K,iBAAmB2K,EAAO3K,kBACjC4K,GACAmkB,EAAgB9nB,MAAhB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAACjS,EAAD,CACEI,MAAM,sBACNE,MAAO+Q,EAAOsxC,kBACd9hD,YAAa,8CACbD,KAAK,oBACLF,QACGsR,EAAQ2wC,mBAAqB7wC,EAAO6wC,oBACnC5wC,GACAmkB,EAAgB9nB,MAAhB,wBAEJzN,YACGqR,EAAQ2wC,mBAAqB7wC,EAAO6wC,oBACnC5wC,GACAmkB,EAAgB9nB,MAAhB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNS,YAAa,SACbP,MAAO+Q,EAAOhK,YACdzG,KAAK,cACLF,QACGsR,EAAQ3K,aAAeyK,EAAOzK,cAC7B0K,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQ3K,aAAeyK,EAAOzK,cAC7B0K,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACjS,EAAD,CACEI,MAAM,kBACNS,YAAa,8CACbP,MAAO+Q,EAAOwxC,cACdjiD,KAAK,gBACLF,QACGsR,EAAQ6wC,eAAiB/wC,EAAO+wC,gBAC/B9wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJzN,YACGqR,EAAQ6wC,eAAiB/wC,EAAO+wC,gBAC/B9wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOjK,YACdxG,KAAK,cACLF,QACGsR,EAAQ5K,aAAe0K,EAAO1K,cAC7B2K,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQ5K,aAAe0K,EAAO1K,cAC7B2K,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACjS,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOuxC,cACdhiD,KAAK,gBACLF,QACGsR,EAAQ4wC,eAAiB9wC,EAAO8wC,gBAC/B7wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJzN,YACGqR,EAAQ4wC,eAAiB9wC,EAAO8wC,gBAC/B7wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,MACNE,MAAO+Q,EAAOtP,IACdnB,KAAK,MACLF,QACGsR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgBmkB,EAAgB9nB,MAAhB,UAEpBzN,YACGqR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgBmkB,EAAgB9nB,MAAhB,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIlR,UAAU,mBAAd,QAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAM+D,GACNgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB4rB,GAAQ5/C,IAEVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,WAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMu/C,GACNxrB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6rB,GAAU7/C,IAEZqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OA8B5B,yBACEz1B,MAAO,CACLgc,aAAc,YAwCtB,yBAAKxc,UAAU,kCACb,yBAAKA,UAAU,wCACb,wCAEA,yBACEA,UACE8E,IAAWA,GAAQhE,OAAS,EACxB,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAIJ,yBAAK7W,UAAU,sCACb,wBAAIA,UAAU,mBAAd,YACA,kBAAC,GAAD,CACEk1B,cAAeA,GACfD,WAAYA,KAGd,yBACEz0B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,oBAEA,kBAAC,GAAD,CACEk0B,YAAaA,GACbE,eAAgBA,OAKtB,yBAAKp0B,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETuyB,EAAmB7kB,WAClB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGH4a,EAAmB5kB,MAClB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YAvyBZ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAgyBkBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKrBonB,IACS,IAAV5R,IALA,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,YASd,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASmP,GACT5vB,KAAMsiB,KAGR,yBACEjnB,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAASoP,GACT7vB,KAAMuiB,QAKd,yBAAK1nB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,iDAEA,kBAAC,KAAD,CACE8W,MAAM,MACN6I,QACEwV,EAAgB9nB,MAAhB,kBACEmnB,EAAY1zB,OAAS,GAEzB0W,UAAU,OACVpU,MAAO,gCAEP,yBACEpD,UACIw0B,EAAY1zB,OAAS,GACtBq0B,EAAgB9nB,MAAhB,eAEG8nB,EAAgB9nB,MAAhB,eACA,kBACA,mBAHA,aAMN,kBAACwJ,GAAA,EAAD,SAIN,yBAAK7W,UAAU,mDACb,kBAAC,GAAD,CACEkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMxB,yBAAKhzB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,SAQvB,yBACEzwB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAMsW,GAAyB,IACxCxoB,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAAS0jB,EAAgBznB,UACzBpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SAqDnBkU,GA7CO,SAAC,GAMT,IALZnM,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACamM,EAGF,EAHXC,YACgBC,EAEL,EAFXC,eACAC,EACW,EADXA,kBAKA,OACE,oCACE,kBAAC,KAAD,CACE7zB,MAAO,CACLuT,IAAK,QAEP4Y,QAAQ,EACRtI,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXnE,MAAO,OACPpQ,MAAM,cACNuc,QAASkI,EAETzD,SAlBe,WACnB0D,GAAyB,IAkBrB4E,gBAAgB,EAChBpI,OAAO,SACPsI,cAAe,CAEbC,SAAU,WAGZ,kBAAC,GAAD,CACEhF,sBAAuBA,EACvBC,yBAA0BmM,EAC1BA,WAAYA,EACZE,cAAeA,EACfE,kBAAmBA,OClyCvBzkB,IAFc4P,KAAZD,QAEiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,2CAGNkQ,GAAgB,CACpBpQ,KAAM,GACNmB,IAAK,GACLoF,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbH,KAAM,GACNghB,OAAQ,GACRw6B,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACfz6B,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAo8BCsM,GA17BO,SAAC,GAKT,IAJZnM,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACamM,EAEF,EAFXC,YACgBC,EACL,EADXC,eACW,EACsC3lB,EAC/C,GACA,WAHS,mBACJ0mB,EADI,KACaC,EADb,OAKmBvmB,oBAAS,GAL5B,mBAKJ8Q,EALI,KAKKC,EALL,OAMqB/Q,oBAAS,GAN9B,mBAMJkR,EANI,KAMMF,EANN,OAOqChR,oBAAS,GAP9C,mBAOcoR,GAPd,aAQmDpR,oBAAS,GAR5D,mBAQJmR,EARI,KAQqB2I,EARrB,OAS6C9Z,oBAAS,GATtD,mBASJiR,EATI,KASkB8I,EATlB,OAU2B/Z,mBAAS,IAVpC,mBAUJ2lB,EAVI,KAUSxB,EAVT,OAWiBnkB,mBAAS,IAX1B,mBAWJ4lB,EAXI,KAWIxD,EAXJ,OAYmBpiB,mBAAS,IAZ5B,mBAYJyjB,EAZI,KAYKD,EAZL,OAamBxjB,mBAAS,IAb5B,mBAaJ/J,EAbI,KAaK4vB,EAbL,OAc6B7lB,mBAAS,IAdtC,oBAcJ8a,GAdI,MAcUC,GAdV,SAemC/a,mBAAS,IAf5C,qBAeJokB,GAfI,MAeaC,GAfb,SAgB6BrkB,mBAAS,IAhBtC,qBAgBJsiB,GAhBI,MAgBUD,GAhBV,SAiBkBriB,mBAAS,IAjB3B,qCAkBkBA,mBAAS,KAlB3B,qCAmB2BA,mBAAS,KAnBpC,qCAoBaA,mBAAS,KApBtB,qBAoBJ1I,GApBI,MAoBE67C,GApBF,SAqBiBnzC,mBAAS,IArB1B,qBAqBJ8yC,GArBI,MAqBIM,GArBJ,SAsByBpzC,mBAAS,IAtBlC,qBAsBJomB,GAtBI,MAsBQC,GAtBR,SAuB2BrmB,mBAAS,IAvBpC,qBAuBJqlB,GAvBI,MAuBSE,GAvBT,SAwB+BvlB,mBAAS,4CAxBxC,qCAyBqBA,mBAAS,KAzB9B,qBAyBJ4Y,GAzBI,MAyBMsN,GAzBN,SA0ByBlmB,mBAAS,IA1BlC,qBA0BJ6Y,GA1BI,MA0BQsN,GA1BR,SA4BenmB,mBAAS,CACjCwmB,QAAS,KACTC,MAAO,OA9BE,qBAqCLjlB,IArCK,YAqCO,uCAAG,WAAOC,EAAaC,GAApB,mBAAAjC,EAAA,6DAEboc,EAAY3K,EACdA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GAEEwE,EACJmtB,GAAYpzB,OAAS,EACjBozB,GAAY7yB,KAAI,SAACoD,GACf,MAAO,CACLjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAGtB,GAjBa,SAmBS0vB,EAAsB,CAChDjvB,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBroB,SAAUkyB,EACVrvB,KAAMsvB,EACNvvB,MAAO,CAACotB,GACRtvB,MAAO0nB,EACPvkB,KAAMA,GACNI,iBAAkBQ,EAClBX,gBAAiBkK,EAAOlK,gBACxBC,YAAaiK,EAAOjK,YACpBC,YAAagK,EAAOhK,YACpB+gB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,IAAYA,GAAS3mB,OAAS,EAAI2mB,GAAS3lB,KAAK,KAAO,GACjE+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SACEC,IAAcA,GAAW5mB,OAAS,EAAI4mB,GAAW5lB,KAAK,KAAO,GAC/DjC,KAAMyQ,EAAO6W,OAAOwD,OACpBvkB,gBAAiBkK,EAAOsxC,kBACxBz7C,KAAMw7C,GACNt7C,YAAaiK,EAAOuxC,cACpBv7C,YAAagK,EAAOwxC,kBA3CP,QAmBbnsB,EAnBa,SAiD2B,OAAzBA,EAAc9vB,SACjC4Z,GAAwB,kBAExB0U,EAAc,CAAC,eAGRwB,EAHM,CAITpzB,GAAIozB,EAAa,KAAW,GAC5Br1B,IAAKq1B,EAAa,KAAW,MALpB,oBASR1B,KAILpU,EAAY,IACZ+J,GAAgB,IAChB8K,EAAW,IACXzD,EAAU,IACVC,GAAgB,IAChBmB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnB+uB,GAAU,IACVD,GAAQ,IACRjtB,GAAY,IACZC,GAAc,IACdE,GAAc,IACdd,GAAe,IACf7jB,EAAQ2a,YAERpD,GAAyB,IAK3BvX,EAAQC,eAAc,GAtFH,2CAAH,yDAyFlBpC,qBAAU,WACR,IAAK+mB,EAAe,UAAe,CACjC,IAAM9nB,EAAQ8nB,EAAe,MAC7B,GAAI9nB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACgK,IAEJ/mB,qBAAU,WACR,GAAI6mB,GAAWn0B,OAAS,GACtB,GAAIm0B,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CAC1C,IAAM00B,EACJP,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GACtDm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IACFS,QAAQC,IAAI,YAAag0B,GAEzBpB,GAAe,GAAD,oBACTF,IADS,gBAGPe,GAAWA,GAAWn0B,OAAS,GAHxB,CAIV0B,IAAKyyB,GAAWA,GAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIuvB,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CACjDS,QAAQC,IAAI,aAAcyzB,IAC1B1zB,QAAQC,IAAI,cAAe0yB,IAE3B,IAAM4B,EAAiB5B,GAAYvS,QAAO,SAAC9f,GACzC,IAAIk0B,GAAS,EAMb,OALAd,GAAWnxB,SAAQ,SAACW,GACdA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET3B,GAAe0B,SAGjB1B,GAAe,MAGhB,CAACa,KAEJ,IAAM7F,GAAe,SAAC7d,GACpBuW,GAAyB,IA2E3B,OACE,kBAAC,IAAD,CACEnX,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXnE,MAAO,OACPpQ,MAAM,iBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAGZ,6BAAS7sB,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,kDAEA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,OACNS,YAAY,YACZP,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmkB,EAAgB9nB,MAAhB,WAEJzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GACAmkB,EAAgB9nB,MAAhB,WAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACjS,EAAD,CACEI,MAAM,mBACNE,MAAO+Q,EAAOlK,gBACdtG,YAAY,SACZD,KAAK,kBACLF,QACGsR,EAAQ7K,iBAAmB2K,EAAO3K,kBACjC4K,GACAmkB,EAAgB9nB,MAAhB,sBAEJzN,YACGqR,EAAQ7K,iBAAmB2K,EAAO3K,kBACjC4K,GACAmkB,EAAgB9nB,MAAhB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAACjS,EAAD,CACEI,MAAM,sBACNE,MAAO+Q,EAAOsxC,kBACd9hD,YAAa,8CACbD,KAAK,oBACLF,QACGsR,EAAQ2wC,mBACP7wC,EAAO6wC,oBACP5wC,GACAmkB,EAAgB9nB,MAAhB,wBAEJzN,YACGqR,EAAQ2wC,mBACP7wC,EAAO6wC,oBACP5wC,GACAmkB,EAAgB9nB,MAAhB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNS,YAAa,SACbP,MAAO+Q,EAAOhK,YACdzG,KAAK,cACLF,QACGsR,EAAQ3K,aAAeyK,EAAOzK,cAC7B0K,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQ3K,aAAeyK,EAAOzK,cAC7B0K,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACjS,EAAD,CACEI,MAAM,kBACNS,YAAa,8CACbP,MAAO+Q,EAAOwxC,cACdjiD,KAAK,gBACLF,QACGsR,EAAQ6wC,eAAiB/wC,EAAO+wC,gBAC/B9wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJzN,YACGqR,EAAQ6wC,eAAiB/wC,EAAO+wC,gBAC/B9wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOjK,YACdxG,KAAK,cACLF,QACGsR,EAAQ5K,aAAe0K,EAAO1K,cAC7B2K,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQ5K,aAAe0K,EAAO1K,cAC7B2K,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACjS,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOuxC,cACdhiD,KAAK,gBACLF,QACGsR,EAAQ4wC,eAAiB9wC,EAAO8wC,gBAC/B7wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJzN,YACGqR,EAAQ4wC,eAAiB9wC,EAAO8wC,gBAC/B7wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,MACNE,MAAO+Q,EAAOtP,IACdnB,KAAK,MACLF,QACGsR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgBmkB,EAAgB9nB,MAAhB,UAEpBzN,YACGqR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgBmkB,EAAgB9nB,MAAhB,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIlR,UAAU,mBAAd,QAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAM+D,GACNgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB4rB,GAAQ5/C,IAEVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,WAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMu/C,GACNxrB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6rB,GAAU7/C,IAEZqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OA8B5B,yBACEz1B,MAAO,CACLgc,aAAc,YAwCtB,yBAAKxc,UAAU,kCACb,yBAAKA,UAAU,wCACb,wCAEA,yBACEA,UACE8E,GAAWA,EAAQhE,OAAS,EACxB,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAIJ,yBAAK7W,UAAU,sCACb,wBAAIA,UAAU,mBAAd,YACA,kBAAC,GAAD,CACEk1B,cAAeA,GACfD,WAAYA,KAGd,yBACEz0B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,oBAEA,kBAAC,GAAD,CACEk0B,YAAaA,GACbE,eAAgBA,OAKtB,yBAAKp0B,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,sCACb,yBAAKA,UAAU,gCACZ+f,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,kBAAMoY,GAAgB5mB,EAAMT,MAErC,yBAAKgJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,kBAzfZ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAif+BC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKrBonB,IACS,IAAV5R,IALA,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,YAQZ,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJzN,YACGqR,EAAQuW,mBACPzW,EAAOyW,oBACPxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASmP,GACT5vB,KAAMsiB,KAGR,yBACEjnB,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAASoP,GACT7vB,KAAMuiB,QAKd,yBAAK1nB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,iDAEA,kBAAC,KAAD,CACE8W,MAAM,MACN6I,QACEwV,EAAgB9nB,MAAhB,kBACEmnB,EAAY1zB,OAAS,GAEzB0W,UAAU,OACVpU,MAAO,gCAEP,yBACEpD,UACIw0B,EAAY1zB,OAAS,GACtBq0B,EAAgB9nB,MAAhB,eAEG8nB,EAAgB9nB,MAAhB,eACA,kBACA,mBAHA,aAMN,kBAACwJ,GAAA,EAAD,SAIN,yBAAK7W,UAAU,mDACb,kBAAC,GAAD,CACEkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMxB,yBAAKhzB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,UASzB,kBAAC,GAAD,CACErR,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SCt7B1BpC,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAEFC,GAAU,SAAC,GAA0B,IAAxBrrB,EAAuB,EAAvBA,KAAMm2B,EAAiB,EAAjBA,WAAiB,EACV1pB,oBAAS,GADC,mBACjC8Q,EADiC,KACxBC,EADwB,OAEkB/Q,oBAAS,GAF3B,mBAEjC8e,EAFiC,KAEVC,EAFU,OAGOnf,EAC7C,GACA,cALsC,mBAGjB+pB,GAHiB,WAQlC1iB,EAAUC,eAEV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAnDJ+Q,EAoDH,iBAnD5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiDnC6hB,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACrDg2B,EAAWI,IAbS,iCAzCM,IAAC/hB,IAyCP,OAAH,sDAyBfmU,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,MACF,IAGhB,OACE,oCACE,kBAAC,KAAD,CAME0X,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,KACpCqrB,EAAyBlP,KAG3B,yBAAKnT,IAAKwf,EAASrM,GAASpb,IAAI,UAMxC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,KAEpCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,mBACNob,UAAU,kBACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,eACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,SACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEA,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,eAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAAC,GAAD,CACEuG,YAAa9xB,EACbgyB,eAAgBmE,EAChBzQ,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvB0U,kBAAmB1G,MA+GdkL,GAtGC,SAAC,GAAe,qBACAhqB,mBAAS,IADV,mBACtBiqB,EADsB,KACbP,EADa,OAGU9pB,EAAe,GAAI,YAH7B,mBAGtB4iB,EAHsB,KAGZC,EAHY,KAK7B/vB,QAAQC,IAAI,eAAgB6vB,GAE5BjjB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,CACpCrwB,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALR,OACRpR,EADQ,OAUdozB,EAAWpzB,GAVG,2CAAH,qDAYbygB,KACC,IArB0B,MAuB6B/W,oBAAS,GAvBtC,mBAuBtBgZ,EAvBsB,KAuBCC,EAvBD,KAiD7B,OACE,oCACE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,WACA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,mBACZjB,SAAU,SAAC8R,GAAD,OAnBD,SAAChS,GACpB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAC9f,GAAD,OACtCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCke,EAAWS,IAccjK,CAAaxd,EAAE/F,OAAOjM,WAG3C,kBAAC,IAAD,CAEES,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YASF,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASy3B,WAAYA,EAAYn2B,KAAM02B,IAExCzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,kBACZO,MAAOwS,KAAMI,4BAOvB,kBAAC,GAAD,CACEse,YAAa4E,EACb1E,eAAgBmE,EAChB1Q,sBAAuBA,EACvBC,yBAA0BA,MCnS5BlY,IAFc4P,KAAZD,QAEiB1P,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,2CAGNkQ,GAAgB,CACpBpQ,KAAM,GACNmB,IAAK,GACLoF,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbH,KAAM,GACNghB,OAAQ,GACRw6B,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACfz6B,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAURq6B,GAAsB,SAAC,GAKvB,EAJJl6B,sBAIK,IAHLC,EAGI,EAHJA,yBACAuM,EAEI,EAFJA,kBACAguB,EACI,EADJA,kBACI,EAC6C5zC,EAC/C,GACA,cAHE,mBACG0mB,EADH,KACoBC,EADpB,OAKmD3mB,EACrD,GACA,cAPE,mBAKG8jB,EALH,KAKuBgC,EALvB,OAS0B1lB,oBAAS,GATnC,mBASG8Q,EATH,KASYC,EATZ,OAU4B/Q,oBAAS,GAVrC,mBAUGkR,EAVH,KAUaF,EAVb,OAW4ChR,oBAAS,GAXrD,mBAWqBoR,GAXrB,aAY0DpR,oBAAS,GAZnE,mBAYGmR,EAZH,KAY4B2I,EAZ5B,OAaoD9Z,oBAAS,GAb7D,mBAaGiR,EAbH,KAayB8I,EAbzB,OAckC/Z,mBAAS,IAd3C,mBAcG2lB,EAdH,KAcgBxB,EAdhB,OAewBnkB,mBAAS,IAfjC,mBAeG4lB,EAfH,KAeWxD,EAfX,OAgB0BpiB,mBAAS,IAhBnC,mBAgBYwjB,GAhBZ,aAiB0BxjB,mBAAS,IAjBnC,mBAiBG/J,GAjBH,KAiBY4vB,GAjBZ,QAkBoC7lB,mBAAS,IAlB7C,qBAkBG8a,GAlBH,MAkBiBC,GAlBjB,SAmB0C/a,mBAAS,IAnBnD,qBAmBGokB,GAnBH,MAmBoBC,GAnBpB,SAoBoCrkB,mBAAS,IApB7C,qBAoBGsiB,GApBH,MAoBiBD,GApBjB,SAqBoBriB,mBAAS,IArB7B,qBAqBG1I,GArBH,MAqBS67C,GArBT,SAsBwBnzC,mBAAS,IAtBjC,qBAsBG8yC,GAtBH,MAsBWM,GAtBX,SAuBgCpzC,mBAAS,IAvBzC,qBAuBGomB,GAvBH,MAuBeC,GAvBf,SAwBkCrmB,mBAAS,IAxB3C,qBAwBGqlB,GAxBH,MAwBgBE,GAxBhB,SAyB4BvlB,mBAAS,IAzBrC,qBAyBG4Y,GAzBH,MAyBasN,GAzBb,SA0BgClmB,mBAAS,IA1BzC,qBA0BG6Y,GA1BH,MA0BesN,GA1Bf,SA+BAvmB,EAAe,GAAI,6BA/BnB,qBA8BFsb,IA9BE,gBAmCAtb,EAAe,GAAI,2BAnCnB,qBAkCFub,IAlCE,gBAuCAvb,EAAe,GAAI,+BAvCnB,qCA2CAA,EAAe,GAAI,8BA3CnB,qBA0CFwb,IA1CE,gBA+CAxb,EAAe,GAAI,6BA/CnB,qBA8CFyb,IA9CE,aAiDJ3oB,QAAQC,IAAI,cAAe+wB,GAC3BnkB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBimB,EAAyB,CAC7BtzB,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,IAExBrB,OAAQ,CACNswC,WAAY,EACZ0Q,QAAS,IACTC,YAAa,QATI,2CAAH,qDAetBh4B,KACC,CAACkK,IAEJjmB,qBAAU,WACR,GACEmkB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,EAC9C,CACA,IAAM6K,EAAS4mB,EAAmBnwB,KAAKY,MACnConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC5BspB,EAAYze,GAIZ4mB,EAAmBnwB,KAAKQ,OACxB2vB,EAAmBnwB,KAAKQ,MAAxB,GAEe+I,EAAOoW,MACpB,SAAClgB,GAAD,OAAUA,EAAKU,KAAOgwB,EAAmBnwB,KAAKQ,MAAxB,QAGtBwnB,EAAS,CAAImI,EAAmBnwB,KAAKQ,OAA5B,oBAAsCwnB,KAGjDR,GAAgB2I,EAAmBnwB,KAAKQ,MAAxB,IAIlBid,EAAYuK,MAEb,CAACmI,EAAmBnwB,OAEvBgM,qBAAU,WAEJ2R,GAAYA,EAAS,IAAMA,EAASjf,OAAS,GAC3C6oB,KAAiB5J,EAAS,GAAGxd,KAC/BqnB,GAAgB7J,EAAS,GAAGxd,IAC5B8nB,GAAyBtK,EAAS,OAGrC,CAACA,IAEJxe,QAAQC,IAAI,eAAgBue,GAE5B,IAAMuK,GAAuB,uCAAG,WAAO/nB,GAAP,SAAA+L,EAAA,sEACxB2b,GAAqC,CACzChpB,WAAY,CACVE,aAAc,CACZopB,QAAShoB,EACTioB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,OANF,2CAAH,sDAYvB8nB,GAAwB,uCAAG,WAAOrnB,GAAP,eAAAsL,EAAA,sEACJ4b,GAAqC,CAC9DjpB,WAAY,CACVE,aAAc,CACZopB,QAASvnB,EAAMT,GACfioB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,OAND,QACzBkoB,EADyB,SAYa,OAAxBA,EAAa5kB,QAG/Bme,GAAsB,mDAfO,2CAAH,sDA8B9B5V,qBAAU,WACR,GACEmkB,EAAmB5kB,MACnB4kB,EAAmBnwB,MACnBxB,OAAOC,KAAK0xB,EAAmBnwB,MAAMtB,OAAS,EAC9C,CACAS,QAAQC,IAAI,OAAQ+wB,GACpB,IAAM8B,EAAoB9B,EAAmBnwB,KAO7C,GANIiyB,GAAqBA,EAAkBnvB,MACzCmtB,EAAWgC,EAAkBnvB,MAAlB,IAEXmtB,EAAW,IAIXgC,GACAA,EAAkBlvB,MAClBkvB,EAAkBlvB,KAAKrE,OAAS,EAChC,CACA,IAAMshD,EAAW/tB,EAAkBlvB,KAAK9D,KAAI,SAACQ,GAAD,OAAUA,EAAKhC,QACrD40B,EAASJ,EAAkBlvB,KAAK9D,KAAI,SAACQ,GAAD,OAAUA,EAAKW,OACzDjB,QAAQC,IAAI,aAAc4gD,EAAU3tB,GACpCvD,GAAgBkxB,GAChBnxB,EAAUwD,QAEVxD,EAAU,IACVC,GAAgB,IAElB,GACEmD,GACAA,EAAkB/xB,UAClB+xB,EAAkB/xB,SAASxB,OAAS,EACpC,CACA,IAAMk1B,EAAc3B,EAAkB/xB,SACtC4wB,GAAmB8C,QAEnB9C,GAAmB,IAGjBmB,GAAqBA,EAAkBluB,KACzC67C,GAAQ3tB,EAAkBluB,MAE1B67C,GAAQ,IAIR3tB,GACAA,EAAkBxJ,IAClBwJ,EAAkBxJ,GAAlB,KAEAo3B,GAAU5tB,EAAkBxJ,GAAlB,MAEVo3B,GAAU,OAGb,CAAC1vB,IAEJhxB,QAAQC,IAAI,sBAAuB2vB,IACnC5vB,QAAQC,IAAI,UAAWizB,GACvBrmB,qBAAU,WACR,GACEmkB,EAAmB5kB,MACnB4kB,EAAkB,MAClB3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GAGjDyxB,EAAkB,KAAlB,iBAA+CzxB,OAAS,EACxD,CACA,IAAMm0B,EAAa1C,EAAkB,KAAlB,iBAA+ClxB,KAChE,SAACQ,GAAD,OAAUA,KAEZqzB,GAAcD,GACd,IAAMf,EAAc3B,EAAkB,KAAlB,iBAA+ClxB,KACjE,SAACQ,GACC,OAAO,eACFA,EADL,CAEEW,IAAKX,EAAKW,IACVgzB,UAAW3zB,EAAK2zB,UAChB9vB,SAAU7D,EAAK6D,cAIrB0uB,GAAeF,MAEhB,CAAC3B,IAEJhxB,QAAQC,IAAI,wBAAyB+wB,GAErCnkB,qBAAU,WACR,GAAI6mB,GAAWn0B,OAAS,GACtB,GAAIm0B,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CAC1C,IAAM00B,EACJP,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6CA,OAAS,GACtDm0B,GAAWA,GAAWn0B,OAAS,GAA/B,QAA6C,GAA7C,IACFS,QAAQC,IAAI,YAAag0B,GAEzBpB,GAAe,GAAD,oBACTF,IADS,gBAGPe,GAAWA,GAAWn0B,OAAS,GAHxB,CAIV0B,IAAKyyB,GAAWA,GAAWn0B,OAAS,GAA/B,GACL00B,UAAWA,EACX9vB,SAAU,YAGT,GAAIuvB,GAAWn0B,OAASozB,GAAYpzB,OAAQ,CACjDS,QAAQC,IAAI,aAAcyzB,IAC1B1zB,QAAQC,IAAI,cAAe0yB,IAE3B,IAAM4B,EAAiB5B,GAAYvS,QAAO,SAAC9f,GACzC,IAAIk0B,GAAS,EAMb,OALAd,GAAWnxB,SAAQ,SAACW,GACdA,EAAQlC,KAAOV,EAAKW,MACtBuzB,GAAS,MAGNA,KAET3B,GAAe0B,SAGjB1B,GAAe,MAGhB,CAACa,KAEJ,IAAM5kB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,yDAEboc,EACJ3K,GAAYA,EAAS,GAEjBA,EAAS1e,KAAI,SAAC2B,GACZ,OAAOA,EAAMT,MAEf,GAEAwE,EACJmtB,GAAYpzB,OAAS,EACjBozB,GAAY7yB,KAAI,SAACoD,GACf,MAAO,CACLjC,IAAKiC,EAAQjC,IACbgzB,UAAW/wB,EAAQ+wB,UACnB9vB,SAAUjB,EAAQiB,aAGtB,KAEF2uB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,GArB9C,oBAsBX8pB,EAAyB,GAE3BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAACymB,GACb8J,GAAqBA,EAAiB,QACnCA,EAAiB,MAAU5yB,SAAS8oB,IACvCK,EAAuB3mB,KAAKsmB,SAMhCK,EAAuB,IAAMA,EAAuB9pB,OAAS,GAlChD,iCAmCTipB,GAAqC,CACzC9oB,WAAY,CACVE,aAAc,CACZqpB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,KAG9B4D,KAAM,CACJnD,MAAO4nB,KA3CI,oCA+CfA,EAAuB,IACvBA,EAAuB9pB,OAAS,GAhDjB,kCAkDTkpB,GAAmC,CACvC/oB,WAAY,CACVE,aAAc,CACZopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,OACZtjB,OAAQmtB,EAAkB9xB,OAvDjB,yBA8DS6yB,EAAsB,CAChDn0B,WAAY,CACVE,aAAc,CACZoB,GAAI8xB,EAAkB9xB,KAG1B4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBroB,SAAU2wB,GACV9tB,KAAMsvB,EACNzxB,MAAO0nB,EACPvkB,KAAMA,GACNI,iBAAkBQ,EAClBX,gBAAiBkK,EAAOlK,gBACxBC,YAAaiK,EAAOjK,YACpBC,YAAagK,EAAOhK,YACpB+gB,UAAW/W,EAAO+W,UAClBE,gBAAiBjX,EAAOiX,gBACxBE,SAAUA,IAAYA,GAAS3mB,OAAS,EAAI2mB,GAAS3lB,KAAK,KAAO,GAEjE+oB,GAAI,CACFxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SACEC,IAAcA,GAAW5mB,OAAS,EAAI4mB,GAAW5lB,KAAK,KAAO,GAC/DjC,KAAMyQ,EAAO6W,OAAOwD,OACpBvkB,gBAAiBkK,EAAOsxC,kBACxBz7C,KAAMw7C,GACNt7C,YAAaiK,EAAOuxC,cACpBv7C,YAAagK,EAAOwxC,kBA3FP,QA8DbnsB,EA9Da,OAgGnBp0B,QAAQC,IAAI,gBAAiBm0B,GAGzBA,GAA0C,OAAzBA,EAAc9vB,SACjC4Z,GAAwB,kBAExB4iC,EAAkB,eACb1sB,EADY,CAEfpzB,GAAI8xB,EAAiB,IAAU,GAC/B/zB,IAAK+zB,EAAiB,IAAU,GAChCx0B,KAAMyQ,EAAOzQ,MAAQ,MAIvBioB,GAAyB,GAGzBjI,EAAY,IACZ+J,GAAgB,IAChB8K,GAAW,IACXzD,EAAU,IACVC,GAAgB,IAChBmB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnB+uB,GAAU,IACVD,GAAQ,IACRjtB,GAAY,IACZC,GAAc,IACdE,GAAc,IACdd,GAAe,IACf7jB,EAAQ2a,aAKV3a,EAAQC,eAAc,GApIH,4CAAH,wDAuIlBpC,qBAAU,WACR,IAAK+mB,EAAe,UAAe,CACjC,IAAM9nB,EAAQ8nB,EAAe,MAC7B,GAAI9nB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACgK,IAoCJ,OAhBA/mB,qBAAU,WACR,GAAIimB,GAAqBzzB,OAAOC,KAAKwzB,GAAmBvzB,OAAS,EAAG,CAClE,IAAM2mB,EACJ4M,EAAkB5M,UAAY4M,EAAkB5M,SAASrmB,MAAM,KAEjEG,QAAQC,IAAI,gBAAiBimB,GAE7B,IAAMC,EACJ2M,EAAkBxJ,IAClBwJ,EAAkBxJ,GAAlB,UACAwJ,EAAkBxJ,GAAlB,SAAiCzpB,MAAM,KACzC2zB,GAAYtN,GAAY,IACxBuN,GAActN,GAAc,OAE7B,IAGD,kBAAC,IAAD,CACE/W,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,kBAGNokB,EAHM,GAIL9B,EAAkB,MACpB3xB,OAAOC,KAAK0xB,EAAkB,MAAUzxB,OAAS,GACjDyxB,EAAkB,KAAlB,IAAoC,CAClCjL,YAAaiL,EAAkB,KAAlB,GAAiClL,UAC9CG,kBACE+K,EAAkB,KAAlB,GAAiChL,gBACnCJ,OAAQoL,EAAkB,KAAlB,GAAiC1yB,KACzC61B,SAAUnD,EAAkB,KAAlB,GAAiC1tB,KAC3CuiB,cAAemL,EAAkB,KAAlB,GAAiC9vB,iBAKvD,gBACCqO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,6BAASpR,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,kDAEA,yBACEA,UACEsQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAKiB,OAAS,EAChC,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAGJ,yBAAK7W,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,OACNS,YAAY,YACZP,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBmkB,EAAgB9nB,MAAhB,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgBmkB,EAAgB9nB,MAAhB,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GACAmkB,EAAgB9nB,MAAhB,aAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACjS,EAAD,CACEI,MAAM,mBACNE,MAAO+Q,EAAOlK,gBACdtG,YAAY,SACZD,KAAK,kBACLF,QACGsR,EAAQ7K,iBAAmB2K,EAAO3K,kBACjC4K,GACAmkB,EAAgB9nB,MAAhB,sBAEJzN,YACGqR,EAAQ7K,iBAAmB2K,EAAO3K,kBACjC4K,GACAmkB,EAAgB9nB,MAAhB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAACjS,EAAD,CACEI,MAAM,sBACNE,MAAO+Q,EAAOsxC,kBACd9hD,YAAa,8CACbD,KAAK,oBACLF,QACGsR,EAAQ2wC,mBAAqB7wC,EAAO6wC,oBACnC5wC,GACAmkB,EAAgB9nB,MAAhB,wBAEJzN,YACGqR,EAAQ2wC,mBAAqB7wC,EAAO6wC,oBACnC5wC,GACAmkB,EAAgB9nB,MAAhB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNS,YAAa,SACbP,MAAO+Q,EAAOhK,YACdzG,KAAK,cACLF,QACGsR,EAAQ3K,aAAeyK,EAAOzK,cAC7B0K,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQ3K,aAAeyK,EAAOzK,cAC7B0K,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACjS,EAAD,CACEI,MAAM,kBACNS,YAAa,8CACbP,MAAO+Q,EAAOwxC,cACdjiD,KAAK,gBACLF,QACGsR,EAAQ6wC,eAAiB/wC,EAAO+wC,gBAC/B9wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJzN,YACGqR,EAAQ6wC,eAAiB/wC,EAAO+wC,gBAC/B9wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOjK,YACdxG,KAAK,cACLF,QACGsR,EAAQ5K,aAAe0K,EAAO1K,cAC7B2K,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQ5K,aAAe0K,EAAO1K,cAC7B2K,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACjS,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOuxC,cACdhiD,KAAK,gBACLF,QACGsR,EAAQ4wC,eAAiB9wC,EAAO8wC,gBAC/B7wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJzN,YACGqR,EAAQ4wC,eAAiB9wC,EAAO8wC,gBAC/B7wC,GACAmkB,EAAgB9nB,MAAhB,oBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACjS,EAAD,CACEI,MAAM,MACNE,MAAO+Q,EAAOtP,IACdnB,KAAK,MACLF,QACGsR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgBmkB,EAAgB9nB,MAAhB,UAEpBzN,YACGqR,EAAQjQ,KAAO+P,EAAO/P,MACrBgQ,GAAgBmkB,EAAgB9nB,MAAhB,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIlR,UAAU,mBAAd,QAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAM+D,GACNgwB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB4rB,GAAQ5/C,IAEVqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OAK5B,yBACEz1B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,WAEA,yBACEQ,MAAO,CACLgT,MAAO,OACPnC,SAAU,SAGZ,kBAAC,KAAD,CACE4kB,OAAQC,KACR9zB,KAAMu/C,GACNxrB,OAAQ,SAACF,GAEP10B,QAAQC,IAAI,0BAA2By0B,IAEzCx2B,SAAU,SAACY,EAAO41B,GAChB,IAAM7zB,EAAO6zB,EAAOG,UACpB6rB,GAAU7/C,IAEZqkB,OAAQ,SAACpmB,EAAO41B,GACd10B,QAAQC,IAAI,QAASy0B,IAEvBpD,QAAS,SAACxyB,EAAO41B,GACf10B,QAAQC,IAAI,SAAUy0B,OA8B5B,yBACEz1B,MAAO,CACLgc,aAAc,YAwCtB,yBAAKxc,UAAU,kCACb,yBAAKA,UAAU,wCACb,wCAEA,yBACEA,UACE8E,IAAWA,GAAQhE,OAAS,EACxB,mBACA,aAGN,kBAAC+V,GAAA,EAAD,QAIJ,yBAAK7W,UAAU,sCACb,wBAAIA,UAAU,mBAAd,YACA,kBAAC,GAAD,CACEk1B,cAAeA,GACfD,WAAYA,KAGd,yBACEz0B,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,oBAEA,kBAAC,GAAD,CACEk0B,YAAaA,GACbE,eAAgBA,OAKtB,yBAAKp0B,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,uFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAKN,yBACEzjB,MAAO,CACLmX,QAAS,QAEX3X,UAAU,gCAETuyB,EAAmB7kB,WAClB,yBACElN,MAAO,CACLmX,QAAS,WAGX,kBAAC,KAAD,OAGH4a,EAAmB5kB,MAClB,oCACGoS,GAECA,EAASjf,OAAS,GAClBif,EAAS1e,KAAI,SAAC2B,EAAO+U,GACnB,OACE,yBAAK/X,UAAU,sCACb,yBACEA,UAAU,kDACVwR,QAAS,WACPoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACEkO,QAAS,YA7wBZ,SAACjP,GAE1B,IAAM8pB,EACJtM,GACAA,EAAS4B,QAAO,SAAC3e,GACf,OAAOA,EAAMT,KAAOA,KAGxBsd,EAAYwM,GAswBkBC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAEhCvC,UAAU,6CAEV,kBAACusB,GAAA,EAAD,QAGD5C,KAAiB3mB,EAAMT,KAKrBonB,IACS,IAAV5R,IALA,0BAAM/X,UAAU,4CACd,kBAAC6kB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAASzhB,MAAO,iBACd,yBACEoO,QAAS,WACPoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE7B3oB,UAAU,4CAKV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACd,kBAACgnB,GAAA,EAAD,YASd,yBAAKhnB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEwX,UAAU,OACVpU,MACE,sFAGF,uBAAG0U,KAAK,OACN,kBAACmM,GAAA,EAAD,SAIN,yBAAKjkB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,MACbD,KAAK,YACLF,QACGsR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJzN,YACGqR,EAAQoW,WAAatW,EAAOsW,YAC3BrW,GACAmkB,EAAgB9nB,MAAhB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACjS,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,MACbD,KAAK,cACLF,QACGsR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJzN,YACGqR,EAAQqW,aAAevW,EAAOuW,cAC7BtW,GACAmkB,EAAgB9nB,MAAhB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QACGsR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJzN,YACGqR,EAAQsW,iBAAmBxW,EAAOwW,kBACjCvW,GACAmkB,EAAgB9nB,MAAhB,sBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACE7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QACGsR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJzN,YACGqR,EAAQuW,mBAAqBzW,EAAOyW,oBACnCxW,GACAmkB,EAAgB9nB,MAAhB,wBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIlR,UAAU,mBAAd,aAEA,kBAAC,GAAD,CAEE4lB,QAASmP,GACT5vB,KAAMsiB,KAGR,yBACEjnB,MAAO,CACL4W,UAAW,UAIf,wBAAIpX,UAAU,mBAAd,gBAEA,kBAAC,GAAD,CAEE4lB,QAASoP,GACT7vB,KAAMuiB,QAKd,yBAAK1nB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,iDAEA,kBAAC,KAAD,CACE8W,MAAM,MACN6I,QACEwV,EAAgB9nB,MAAhB,kBACEmnB,EAAY1zB,OAAS,GAEzB0W,UAAU,OACVpU,MAAO,gCAEP,yBACEpD,UACIw0B,EAAY1zB,OAAS,GACtBq0B,EAAgB9nB,MAAhB,eAEG8nB,EAAgB9nB,MAAhB,eACA,kBACA,mBAHA,aAMN,kBAACwJ,GAAA,EAAD,SAIN,yBAAK7W,UAAU,mDACb,kBAAC,GAAD,CACEkzB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMxB,yBAAKhzB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEkxB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,SAQvB,yBACEzwB,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAMsW,GAAyB,IACxCxoB,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAAS0jB,EAAgBznB,UACzBpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,WAWF,kBAAC,GAAD,CACEjF,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SAmDnBkU,GA3CO,SAAC,GAKT,IAJZnM,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAuM,EAEW,EAFXA,kBACAguB,EACW,EADXA,kBAKA,OACE,oCACE,kBAAC,KAAD,CACE7hD,MAAO,CACLuT,IAAK,QAEP4Y,QAAQ,EACRtI,UAAW,CACT/S,OAAQ,EACRqG,QAAS,GAEXnE,MAAO,OACPpQ,MAAM,cACNuc,QAASkI,EAETzD,SAlBe,WACnB0D,GAAyB,IAkBrB4E,gBAAgB,EAChBpI,OAAO,SACPsI,cAAe,CAEbC,SAAU,WAGZ,kBAAC,GAAD,CACEhF,sBAAuBA,EACvBC,yBAA0BA,EAC1Bu6B,kBAAmBA,EACnBhuB,kBAAmBA,OC59Bd8E,IAxTiBxb,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OAMe,SAAC3X,GAAkB,IAAD,EACgBpH,EACrD,GACA,cAHqC,mBAChC8jB,EADgC,KACZgC,EADY,OAKK1lB,mBAAS,IALd,mBAKhCyzC,EALgC,KAKhBD,EALgB,KAMjCnhD,EAASuuB,eACT3Z,EAAUC,eACV6gB,EAAY11B,EAAM,GARe,EAUa2N,oBAAS,GAVtB,mBAUhCuqB,EAVgC,KAUZC,EAVY,KAYvCjrB,qBAAU,YACc,uCAAG,4BAAAE,EAAA,sEACLimB,EAAyB,CACzCtzB,WAAY,CACVC,OAAQ,CACNihD,YAAa,IACbD,QAAS,IACT1Q,WAAY,KAEdrwC,aAAc,CACZoB,GAAIq0B,MATa,QACjBzpB,EADiB,SAiBrBk1C,EAAkBl1C,GAjBG,2CAAH,qDAqBtBgd,KACC,CAACyM,IAEJr1B,QAAQC,IAAI,qBAAsB+wB,GAElChxB,QAAQC,IAAI,cAAeN,GAE3B,IA0BMgvB,EACJqC,EAAmB5kB,MAAQ20C,GAAkBA,EAAc,MA3BlC,SAACnyB,GAC1B,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9uB,KAAI,SAACQ,GAAD,OAAUA,EAAKe,SAC/B,IAAMwtB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAiBnB,OAfAH,EAAKrsB,SAAQ,SAACjC,EAAMkW,GACdsY,EAAa,GACXD,EAAQE,GACVF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzuB,IAC9CuuB,EAAQE,GAAgB,CAACzuB,GAEhCwuB,GAA0B,EAC1BC,GAA8B,IAE9BD,EAAa,EACbC,EAAe,EACf/uB,QAAQC,IAAI,aAAc6uB,OAIvBD,EAKHG,CAAmB+xB,EAAc,OACjC,GAGN,OADA/gD,QAAQC,IAAI,kBAAmB+wB,GAE7B,yBAAKvyB,UAAU,wBACb,yBAAKA,UAAU,iCACb,6CAECuyB,EAAmB5kB,MAClB20C,GACA1hD,OAAOC,KAAKyhD,GAAgBxhD,OAAS,GACnC,oCACE,kBAAC,GAAD,CACEuzB,kBAAmBiuB,EACnBz6B,sBAAuBuR,EACvBtR,yBAA0BuR,EAC1BgpB,kBAAmBA,IAErB,kBAAC,IAAD,CACE7wC,QAAS,kBAAM6nB,GAAsB,IACrC/5B,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHR,UAUR,kBAAC,KAAD,CACEqC,QAAM,EACNC,UAAW,CAAEtR,KAAM,GACnB3N,QAAS8gB,EAAmB7kB,WAE3B6kB,EAAmB5kB,MAClB20C,KACE1hD,OAAOC,KAAKyhD,GAAgBxhD,OAAS,IACrC,kBAAC,KAAD,CACE2B,YAAY,kBACZO,MAAOwS,KAAMI,yBAIlB2c,EAAmB5kB,MAClB20C,GACA1hD,OAAOC,KAAKyhD,GAAgBxhD,OAAS,GACnC,oCACE,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,mGACb,yBACEuL,IAAK+2C,EAAc,OAAaA,EAAc,MAC9Ch/C,IAAI,MAGR,yBAAKtD,UAAU,qCACb,4BAAKsiD,EAAc,MACnB,4BAAKA,EAAc,OACnB,4BAAKA,EAAc,aAElBA,EAAc,KACb,mCAEE,8BAAOA,EAAc,MAIc,IAAtCA,EAAc,iBACb,gDAEE,8BAAOA,EAAc,kBAIxBA,EAAc,aACb,4CAEE,8BAAOA,EAAc,cAIxBA,EAAc,aACb,sCAEE,8BAAOA,EAAc,cAoBxBA,EAAc,WACbA,EAAc,UAAcxhD,OAAS,GACnC,oCACE,0CAEGwhD,EAAc,UAAcjhD,KAAI,SAACqF,GAChC,OACE,0BACE8K,QAAS,kBACPsE,EAAQ7R,KAAR,gCAC2ByC,EAAInE,OAIhCmE,EAAI7G,WAQlByiD,EAAc,MAAYA,EAAc,KAASxhD,OAAS,GACzD,oCACE,oCAEGwhD,EAAc,KAASjhD,KAAI,SAACqF,GAC3B,OACE,0BACE8K,QAAS,kBACPsE,EAAQ7R,KAAR,2BAAiCyC,EAAIlE,QAGtCkE,EAAI7G,aAUpB0yB,EAAmB5kB,MAClB20C,GACA1hD,OAAOC,KAAKyhD,GAAgBxhD,OAAS,GACrCwhD,EAAc,UACdA,EAAc,SAAaxhD,OAAS,GAClC,yBAAKd,UAAU,iCACb,yCAIN,yBAAKA,UAAU,8BACZuyB,EAAmB5kB,MAClB20C,GACAA,EAAc,YACZA,EAAc,SAAaxhD,OAAS,IACpC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,qCACZO,MAAOwS,KAAMI,0BAKpB2c,EAAmB5kB,MAClB20C,GACA1hD,OAAOC,KAAKyhD,GAAgBxhD,OAAS,GACnC,oCACGwhD,EAAc,UACbA,EAAc,SAAaxhD,OAAS,GACpCwhD,EAAc,SAAajhD,KAAI,SAACoD,GAC9B,OACE,kBAAC,GAAD,CACEiB,SAAUjB,EAAQiB,SAClBkxB,UAAWnyB,EAAO,WAQjC69C,EAAc,OAAaA,EAAc,MAAUxhD,OAAS,GAC3D,oCACE,yBAAKd,UAAU,iCACb,8CAGF,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACZkwB,GACCtvB,OAAOC,KAAKqvB,GAAK7uB,KAAI,SAACkd,GACpB,OACE,yBAAKve,UAAU,qBACZkwB,EAAI3R,IACH2R,EAAI3R,GAAQld,KAAI,SAAC4B,GACf,OACE,yBACEsI,IAAKtI,EACLzC,MAAO,CACLgT,MAAO,oBAY/B,yBACEhT,MAAO,CACLgc,aAAc,gBCnS9B5M,GAAmBC,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWNikB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA8TC6R,GAnTK,SAAC,GAMP,IALZ1R,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACAuY,EAGW,EAHXA,cACA9H,EAEW,EAFXA,WACAO,EACW,EADXA,QACW,EAC8BrqB,EAAe,GAAI,iBADjD,mBACJgyB,EADI,KACSC,EADT,OAEqB7xB,oBAAS,GAF9B,mBAEJkR,EAFI,KAEMF,EAFN,OAG6BhR,oBAAS,GAHtC,mBAGJ+qB,EAHI,KAGUC,EAHV,OAIahrB,mBAAS,IAJtB,gCAKiBA,mBAAS,KAL1B,mBAOLwB,GAPK,UAOO,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,sEACKoyB,EAAkB,CACxCz/B,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBloB,YAAa6N,EAAO7N,YAKpBooB,GAAI,CAIFhrB,KAAMyQ,EAAO6W,OAAOwD,OACpBloB,YAAa6N,EAAO8W,kBAnBP,QACbuZ,EADa,SAyBmB,OAArBA,EAAU96B,QA3EE+Q,OA4E3B6I,EA3EJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,qBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BA8EnCiB,EAJgB,WACpB,OAAO+gB,EAAQz3B,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQqO,EAAO/N,IAGzCyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAIgV,EAAQ/gB,GAA1BnX,OAAA,IAAAA,CAAA,GACfy/B,EADe,GAGfM,IAEC1V,EAfoC,uBAgBrC6N,EAAQ92B,MAAM,EAAG+V,IAhBoB,CAiBxC8L,GAjBwC,aAkBrCiV,EAAQ92B,MAAM+V,EAAQ,KAE3BwgB,EAAWtN,GAEXnD,GAAyB,GAEzBvX,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GAtDH,iCAlDS,IAACoG,IAkDV,OAAH,yDAyDZwY,EAAe,SAAC7d,GACpBuW,GAAyB,IAGrBrX,EAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAOzQ,OAAS6Q,GAMvB,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBowB,KAErC,gBACCvvB,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,WACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAG9C,kBAACzR,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,YACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,cACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpBzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,iDACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpBzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,qBAyGtB,kBAAC,GAAD,CACE0O,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCtV5BlQ,GAAmBC,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWNikB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAuTC6R,GA7SK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAgR,EAEW,EAFXA,QACAP,EACW,EADXA,WACW,EAC8B9pB,EAAe,GAAI,cADjD,mBACJgyB,EADI,KACSC,EADT,OAEqB7xB,oBAAS,GAF9B,mBAEJkR,EAFI,KAEMF,EAFN,OAG6BhR,oBAAS,GAHtC,mBAGJ+qB,EAHI,KAGUC,EAHV,OAI6BhrB,mBAAS,IAJtC,gCAKaA,mBAAS,KALtB,gCAMiBA,mBAAS,KAN1B,mBAQLwB,GARK,UAQO,uCAAG,WAAOC,EAAaC,GAApB,iBAAAjC,EAAA,sEACKoyB,EAAkB,CACxCz/B,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBloB,YAAa6N,EAAO7N,YAKpBooB,GAAI,CAIFhrB,KAAMyQ,EAAO6W,OAAOwD,OACpBloB,YAAa6N,EAAO8W,kBAnBP,QACbuZ,EADa,SAyBmB,OAArBA,EAAU96B,QA1EE+Q,OA2E3B6I,EA1EJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,qBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAwEzCgR,GAAyB,GAErBkR,EAAaF,GAAW,GAC5Bv3B,QAAQC,IAAI,eAAew3B,GAE3BT,EAAW,GAAD,oBACLS,GADK,gBAIH2H,EAJG,CAKNp+B,GAAIo+B,EAAS,KAAW,GACxBrgC,IAAKqgC,EAAS,KAAW,GACzB9gC,KAAM8gC,EAAS,MAAY,GAC3Bl+B,YAAak+B,EAAS,aAAmB,QAI7CpwB,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GAjDH,iCAjDS,IAACoG,IAiDV,OAAH,yDAoDZwY,EAAe,SAAC7d,GACpBuW,GAAyB,IAGrBrX,EAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAOzQ,OAAS6Q,GAiBvB,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,qBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAG9C,kBAACzR,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,YACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,cACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpBzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,iDACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpBzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,qBA6FtB,kBAAC,GAAD,CACE0O,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC7S1BpC,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAEFC,GAAU,SAAC,GAA0B,IAAxBrrB,EAAuB,EAAvBA,KAAMm2B,EAAiB,EAAjBA,WAAiB,EACV1pB,oBAAS,GADC,mBACjC8Q,EADiC,KACxBC,EADwB,OAEkB/Q,oBAAS,GAF3B,mBAEjC8e,EAFiC,KAEVC,EAFU,OAGOnf,EAC7C,GACA,iBALsC,mBAGjB+pB,GAHiB,WAQlC1iB,EAAUC,eAEV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAnDJ+Q,EAoDH,qBAnD5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,qBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiDnC6hB,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACrDg2B,EAAWI,GAAc,KAbL,iCAzCM,IAAC/hB,IAyCP,OAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,2BAAiCya,EAAOnc,KAExCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,cACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEA,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,mBAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAAC,GAAD,CACEmL,QAAS12B,EACTm2B,WAAYA,EACZzQ,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvB0gB,cAAe1S,MA0FVkL,GAjFC,SAAC,GAAe,qBACAhqB,mBAAS,IADV,mBACtBiqB,EADsB,KACbP,EADa,OAGU9pB,EAAe,GAAI,eAH7B,mBAGtB4iB,EAHsB,KAGZC,EAHY,KAK7B/vB,QAAQC,IAAI,gBAAiB6vB,GAE7BjjB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,IADxB,OACRnsB,EADQ,OAGdozB,EAAWpzB,GAHG,2CAAH,qDAKbygB,KACC,IAd0B,MAgB6B/W,oBAAS,GAhBtC,mBAgBtBgZ,EAhBsB,KAgBCC,EAhBD,KA2B7B,OACE,oCACE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,eAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,uBACZjB,SAAU,SAAC8R,GAAD,OApBD,SAAChS,GACpB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAC9f,GAAD,OACtCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCke,EAAWS,IAecjK,CAAaxd,EAAE/F,OAAOjM,WAG3C,kBAAC,IAAD,CAEES,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YASF,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASy3B,WAAYA,EAAYn2B,KAAM02B,IAExCzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,uBACZO,MAAOwS,KAAMI,4BAOvB,kBAAC,GAAD,CACEkjB,QAASA,EACTP,WAAYA,EACZ1Q,sBAAuBA,EACvBC,yBAA0BA,MCnP5BlY,GAAmBC,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWNikB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA0TC6R,GAhTK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAgZ,EAEW,EAFXA,iBACAT,EACW,EADXA,cACW,EAC8B5xB,EAAe,GAAI,iBADjD,mBACJgyB,EADI,KACSC,EADT,OAEqB7xB,oBAAS,GAF9B,mBAEJkR,EAFI,KAEMF,EAFN,OAG6BhR,oBAAS,GAHtC,mBAGJ+qB,EAHI,KAGUC,EAHV,OAIahrB,mBAAS,IAJtB,gCAKiBA,mBAAS,KAL1B,mBAOLwB,GAPK,UAOO,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACKoyB,EAAkB,CACxCz/B,WAAY,CACVE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGf4D,KAAM,CACJtG,KAAMyQ,EAAOzQ,KAAK8qB,OAClBloB,YAAa6N,EAAO7N,YAKpBooB,GAAI,CAIFhrB,KAAMyQ,EAAO6W,OAAOwD,OACpBloB,YAAa6N,EAAO8W,kBAnBP,QACbuZ,EADa,SAyBmB,OAArBA,EAAU96B,QAzEE+Q,OA0E3B6I,EAzEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,qBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAuEzCgR,GAAyB,GACzBgZ,EAAiB,eACZT,EADW,GAGXM,EAHW,CAId9gC,KAAM8gC,EAAS,MAAY,GAC3Bl+B,YAAak+B,EAAS,aAAmB,MAG3CpwB,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GAzCH,iCAhDS,IAACoG,IAgDV,OAAH,yDA4CZwY,EAAe,SAAC7d,GACpBuW,GAAyB,IAGrBrX,EAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAOzQ,OAAS6Q,GAiBvB,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBowB,KAErC,gBACCvvB,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,WACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAG9C,kBAACzR,EAAD,CACEI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLC,YAAa,YACbH,QACGsR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpBzN,YACGqR,EAAQpR,MAAQkR,EAAOlR,OACtBmR,GAAgByvB,EAAYpzB,MAAZ,WAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACjS,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QACGsR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpBzN,YACGqR,EAAQkW,QAAUpW,EAAOoW,SACxBnW,GAAgByvB,EAAYpzB,MAAZ,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACE7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd5C,KAAK,cACLa,YAAa,cACbf,QACGsR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpBzN,YACGqR,EAAQxO,aAAesO,EAAOtO,cAC7BuO,GAAgByvB,EAAYpzB,MAAZ,kBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACE7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,iDACbb,KAAK,gBACLF,QACGsR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpBzN,YACGqR,EAAQmW,eAAiBrW,EAAOqW,gBAC/BpW,GAAgByvB,EAAYpzB,MAAZ,oBAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,qBAyGtB,kBAAC,GAAD,CACE0O,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC9V1BpC,GAAwBC,KAAxBD,OAyQOyb,IAzQiBxb,KAAhBC,YACG0R,IAAX9B,OAOe,SAAC3X,GAAkB,IAAD,EACUpH,EAAe,GAAI,iBAD7B,mBAC9BsyB,EAD8B,KACdC,EADc,OAEcvyB,EAAe,GAAI,eAFjC,mBAE9BwyB,EAF8B,KAEZC,EAFY,OAGOryB,oBAAS,GAHhB,mBAG9BsxB,EAH8B,KAGdC,EAHc,OAIIvxB,mBAAS,IAJb,mBAI9BwxB,EAJ8B,KAIhBS,EAJgB,KAQ/B5/B,EAASuuB,eACT3Z,EAAUC,eACViiB,EAAQ92B,EAAM,GAgDpB,OA9CAkN,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS0yB,EAAqB,CAC7C//B,WAAY,CACRE,aAAc,CACVoB,GAAIy1B,MAJG,QACbmJ,EADa,UAWf5/B,QAAQC,IAAI,eAAe2/B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpB5G,KAED,CAACvC,IAEJ5pB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4yB,EAAuB,CACzBjgC,WAAY,CACRE,aAAc,CACVoB,GAAIy1B,MAJG,2CAAH,qDAUpBoJ,KAED,CAACpJ,IAKJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAIvB,yBAAKlB,UAAU,wBACX,yBAAKA,UAAU,iCACX,iDAIC+gC,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,oCACI,kBAAC,GAAD,CACI+mB,sBAAuBsY,EACvBrY,yBAA0BsY,EAC1BC,cAAeA,EACfS,iBAAkBA,IAEtB,kBAAC,IAAD,CACItvB,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACIsC,UAAW,CAAEtR,KAAM,GACnB3N,QAASsvB,EAAerzB,WACvBqzB,EAAepzB,MAAQ0yB,KAAmBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IAC3E,kBAAC,KAAD,CAAO2B,YAAY,sBAAsBO,MAAOwS,KAAMI,yBAGzDmrB,EAAepzB,MAAQ0yB,GAAkBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAC1E,yBAAKd,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKqgC,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,SAW1C,yBAAKrgC,UAAU,iCACX,wCAIJ,yBAAKA,UAAU,8BACVihC,EAAiBvzB,WAAa,kBAACshB,GAAD,MAE9BiS,EAAiBtzB,QAAUszB,EAAiB7+B,KAAKtB,OAAS,IACvD,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,mBAAmBO,MAAOwS,KAAMI,0BAI1DqrB,EAAiBtzB,MAAQszB,EAAiB7+B,MAAQ6+B,EAAiB7+B,KAAKtB,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UAAW,+FAOf6G,KAAK,QAEL8D,WAAY6iB,EAAiB7+B,KAC7Bic,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH/d,MAAO,CACHsW,MAAO,qBAMnB,kBAAC,GAAD,CACI1T,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OAEPxT,UAAU,uBAEVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACJ,oCACI,yBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAExCgJ,IAAK3I,EAAOU,IAAI,YAAY9C,MAAO,CAC/BqT,OAAQ,OACRL,MAAO,OACPmd,UAAW,UACXlwB,aAAc,MACd6W,OAAQ,iBAU5B,kBAAC,GAAD,CACIlU,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACJ,oCACI,wBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAExC/B,MAAO,CACH6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGXlT,OASjB,kBAAC,GAAD,CACIhB,MAAM,cACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,YACNob,UAAU,YACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,UACNob,UAAU,UACVle,IAAI,KACJN,UAAU,+BClI3BqlB,G,6MAjJb7X,MAAQ,CACNrI,KAAM,GACNmgB,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAKlBC,YAAc,SAAAC,GAAe,IAAD,EACH,EAAK9P,OAE5B+P,EAH0B,EACnBA,SADmB,EACXzgB,KACQwc,QAAO,SAAApZ,GAAG,OAAIA,IAAQod,O,EAI/CE,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAKnL,MAAM4L,Y,EAGzDC,kBAAoB,SAAAzU,GAClB,EAAKuU,SAAS,CAAEP,WAAYhU,EAAE/F,OAAOjM,S,EAGvC0mB,mBAAqB,WACjB1kB,QAAQC,IAAI,qBAAqB,EAAKqU,OADf,IAEjB0P,EAAe,EAAK/X,MAApB+X,WAFiB,EAGD,EAAK1P,MAAvB1Q,EAHmB,EAGnBA,KAAMygB,EAHa,EAGbA,QACRL,GAAcpgB,IAAsC,IAA9BA,EAAKlD,QAAQsjB,KACrCpgB,EAAI,uBAAOA,GAAP,CAAaogB,KAEnBK,EAAQzgB,GACR,EAAK2gB,SAAS,CACZR,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAA3U,GACtB,EAAKuU,SAAS,CAAEL,eAAgBlU,EAAE/F,OAAOjM,QACzCgC,QAAQC,IAAI,WAAW+P,EAAE/F,OAAOjM,Q,EAGlC4mB,uBAAyB,WACvB,EAAKL,UAAS,YAAwC,EAArCN,eAAqC,EAArBC,eAC/B,MAAO,CACLD,gBAAiB,EACjBC,eAAgB,OAIpB,IAAMW,EAAO,aAAO,EAAKvQ,MAAM1Q,MAC/BihB,EAAQZ,gBAAkBC,eAC1B,EAAK5P,MAAM+P,QAAQQ,I,EAGrBC,aAAe,SAAAlM,GACb,EAAKA,MAAQA,G,EAGfmM,iBAAmB,SAAAnM,GACjB,EAAKoM,UAAYpM,G,yEAKT,IAAD,SAC8DlO,KAAKuB,MAAlE8X,EADD,EACCA,aAAcC,EADf,EACeA,WAAYC,EAD3B,EAC2BA,eAAgBC,EAD3C,EAC2CA,eAD3C,EAEsBxZ,KAAK4J,MAA1BnV,EAFD,EAECA,YAAYyE,EAFb,EAEaA,KAEpB,OACE,oCACGA,GAAQA,EAAKrE,OAAS,GAAKqE,EAAK9D,KAAI,SAACkH,EAAKwP,GACzC,GAAIyN,IAAmBzN,EACrB,OACE,kBAAC,IAAD,CACEyO,IAAK,EAAKF,iBACVhmB,IAAKiI,EACL+R,KAAK,QACL5Z,YAAaA,EACbV,UAAU,YACVT,MAAOkmB,EACPhmB,SAAU,EAAKymB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYpe,EAAIzH,OAAS,GAEzB8lB,EACJ,kBAAC,KAAD,CACE5mB,UAAU,WACVM,IAAKiI,EACLse,SAAoB,IAAV9O,EACV+O,QAAS,kBAAM,EAAKpB,YAAYnd,KAEhC,0BACEwe,cAAe,SAAAxV,GACC,IAAVwG,IACF,EAAK+N,SAAS,CAAEN,eAAgBzN,EAAO0N,eAAgBld,IAAO,WAC5D,EAAKge,UAAUR,WAEjBxU,EAAEhR,oBAILomB,EAAS,UAAMpe,EAAIvG,MAAM,EAAG,IAAnB,OAA8BuG,IAI9C,OAAOoe,EACL,kBAAC,KAAD,CAASvjB,MAAOmF,EAAKjI,IAAKiI,GACvBqe,GAGHA,KAGHtB,GACC,kBAAC,IAAD,CACA9kB,MAAO,CACL8Q,OAAQ,UAERkV,IAAKva,KAAKoa,aACV/mB,KAAK,OACLgb,KAAK,QACLta,UAAU,YACVT,MAAOgmB,EACP9lB,SAAUwM,KAAK+Z,kBACfS,OAAQxa,KAAKga,mBACbS,aAAcza,KAAKga,sBAGrBX,GACA,kBAAC,KAAD,CAAKtlB,UAAU,yBAAyBwR,QAASvF,KAAK4Z,WACpD,kBAACmB,GAAA,EAAD,MADF,mB,GAzIaC,IAAMC,WC+BvBtX,GAAmBC,MAAaC,MAAM,IAItC2P,GAA0B,SAAC7I,GAChCD,KAAa/N,QAAQ,CACpBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAKvCkN,GAAwB,SAACpN,GAC9BD,KAAatJ,MAAM,CAClBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAQvC7G,GAAgB,CACrBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACP+kB,aAAc,IA4tBA8E,IAztBIhU,KAAXD,OAUe,SAAC,GAG4C,IAFhEqP,EAE+D,EAF/DA,sBACAC,EAC+D,EAD/DA,yBACAG,EAA+D,EAA/DA,mBAA+D,KAA3CD,gBAA2C,EAA1BD,aAEWtZ,EAAe,GAAI,uBAFJ,mBAE3D0Z,EAF2D,KAEzCC,EAFyC,OAGD3Z,EAAe,GAAI,sBAHlB,gCAIaA,EAAe,GAAI,8BAJhC,mBAI3Bsb,GAJ2B,aAKYtb,EAAe,GAAI,2BAL/B,mBAK1Bub,GAL0B,aAMoBvb,EAAe,GAAI,+BANvC,gCAOgBA,EAAe,GAAI,8BAPnC,mBAOxBwb,GAPwB,aAQgBxb,EAAe,GAAI,6BARnC,mBAQxByb,GARwB,aAUpCrb,oBAAS,GAV2B,mBAU3D8Q,EAV2D,KAUlDC,EAVkD,OAWlB/Q,oBAAS,GAXS,mBAWzCoR,GAXyC,aAYJpR,oBAAS,GAZL,gCAaJA,oBAAS,IAbL,mBAa3DmR,EAb2D,KAalC2I,EAbkC,OAcV9Z,oBAAS,GAdC,mBAc3DiR,EAd2D,KAcrC8I,EAdqC,OAelB/Z,mBAAS,IAfS,mBAe3Dga,EAf2D,KAezCC,EAfyC,QAgBlCja,mBAAS,IAhByB,qBAgBjDqa,IAhBiD,gBAiBnBra,oBAAS,GAjBU,qBAiB3D0a,GAjB2D,gBAkBhC1a,mBAAS,KAlBuB,qBAkB3Dka,GAlB2D,gBAmB3Cla,mBAAS,KAnBkC,qBAmB3D1J,GAnB2D,MAmBtDygB,GAnBsD,SAoBvC/W,mBAAS,IApB8B,qBAoB3D4a,GApB2D,MAoBpDC,GApBoD,SAqBlC7a,oBAAS,GArByB,qBAqB3DkR,GArB2D,MAqBjDF,GArBiD,SAsBvBhR,mBAAS,IAtBc,qBAsBxD8a,GAtBwD,MAsB1CC,GAtB0C,SAuBpB/a,mBAAS,IAvBW,qCAyBNJ,EAAe,GAAI,uBAzBb,qBAyBxD4Z,GAzBwD,MAyBnCC,GAzBmC,MA4BlEla,qBAAU,YAEoB,uCAAG,sBAAAE,EAAA,sEACega,GAA0B,CAC3DrnB,WAAY,CACRE,aAAc,CACVoB,GAAI0lB,EAAmB1lB,OAJb,yDAAH,qDAUvBytB,KAED,CAAC/H,IAGP1mB,QAAQC,IAAI,kBAAkB6mB,IAC9B9mB,QAAQC,IAAI,0BAA0Bue,IAEtC3R,qBAAU,WACT,GAAIia,GAAoB1a,MAAQ0a,GAAoBjmB,MAAQxB,OAAOC,KAAKwnB,GAAoBjmB,MAAMtB,OAAS,EAAG,CAE7G,IAAM6K,EAAS0c,GAAoBjmB,KAAKY,MACpConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC7BspB,EAAYze,GAGT0c,GAAoBjmB,KAAKQ,OAASylB,GAAoBjmB,KAAKQ,MAAzB,GACtB+I,EAAOoW,MAAK,SAAAlgB,GAAI,OAAIA,EAAKU,KAAO8lB,GAAoBjmB,KAAKQ,MAAzB,QAE9CwnB,EAAS,CAAI/B,GAAoBjmB,KAAKQ,OAA7B,oBAAuCwnB,KAGjDR,GAAgBvB,GAAoBjmB,KAAKQ,MAAzB,IAIhBid,GAAYuK,MAGZ,CAAC/B,GAAoBjmB,OAGxBgM,qBAAU,WAEL2R,IAAYA,GAAS,IAAMA,GAASjf,OAAS,GAE5C6oB,KAAiB5J,GAAS,GAAGxd,KAChCqnB,GAAgB7J,GAAS,GAAGxd,IAC5B8nB,GAAyBtK,GAAS,OAKlC,CAACA,KAMJ,IAAM1P,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,yDAEdoc,EAAY3K,GAAWA,GAAS1e,KAAI,SAAA2B,GACzC,OAAOA,EAAMT,MACT,IAECggB,EAAW,IAAIC,UAEZE,OAAO,OAAQpS,EAAOzQ,KAAK8qB,QACpCpI,EAASG,OAAO,cAAepS,EAAO7N,aACtC8f,EAASG,OAAO,QAAS5V,KAAKC,UAAU2d,IACxCnI,EAASG,OAAO,QAASiH,IAAgBe,EAAU,GAAKA,EAAU,GAAK,IACvEnI,EAASG,OAAO,SAAUmG,GAC1BtG,EAASG,OAAO,eAAgBpS,EAAOqX,cAGvCpmB,QAAQC,IAAI,qBAAqBymB,GACjC1mB,QAAQC,IAAI,YAAYkpB,KAGpBzC,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GApB/C,oBAqBb8pB,EAAyB,GAE5BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAAAymB,GACdtC,GAAsBA,EAAkB,eACtCA,EAAkB,MAAUxmB,SAAS8oB,IACxCK,EAAuB3mB,KAAKsmB,SAOnBK,EAAuB,IAAMA,EAAuB9pB,OAAS,GAlCvD,kCAmCAipB,EAAqC,CACvC9oB,WAAY,CACRE,aAAc,CACVqpB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,KAGnC4D,KAAM,CACFnD,MAAO4nB,KA3CT,qCA+CDA,EAAuB,IAAMA,EAAuB9pB,OAAS,GA/C5D,kCAgDAkpB,EAAmC,CACrC/oB,WAAY,CACRE,aAAc,CACVopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,OArDjC,yBA8DS6lB,EAAuB,CAC1CnnB,WAAY,CACRE,aAAc,CACVoB,GAAI0lB,EAAmB1lB,KAG/B4D,KAAM,CACFtG,KAAMyQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAK8qB,OACjCloB,YAAa6N,EAAO7N,YACpBO,MAAO0nB,EACP9nB,MAAO+mB,IAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD/nB,OAAQkmB,EACR9lB,KAAMgmB,GACN1B,UAAW/W,EAAO+W,UAC9BE,gBAAiBjX,EAAOiX,gBACxBI,aAAcrX,EAAOqX,aACTF,SAAWtiB,IAAQA,GAAKrE,OAAS,EAAKqE,GAAKrD,KAAK,KAAO,GACvD+oB,GAAI,CACAxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACvCC,SAAWgC,IAAUA,GAAO3oB,OAAS,EAAK2oB,GAAO3nB,KAAK,KAAO,GAC9CjC,KAAMyQ,EAAO6W,QAAU7W,EAAO6W,OAAOwD,OACrCloB,YAAa6N,EAAO8W,kBApFlB,SA8Dd0D,EA9Dc,SA0F4B,OAA1BA,EAAejlB,QACpC4Z,GAAwB,qBACxBqI,GAAyB,GAoBzBvX,EAAQ2a,YAERrL,GAAY,IACZ+J,GAAgB,IAChBd,EAAoB,IACpBI,GAAY,KAGZlF,KAGDzT,EAAQC,eAAc,GA3HF,4CAAH,wDAgIT8Z,GAAuB,uCAAG,WAAM/nB,GAAN,SAAA+L,EAAA,sEACtB2b,EAAqC,CACvChpB,WAAY,CACRE,aAAc,CACVopB,QAAShoB,EACTioB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,OANX,2CAAH,sDAcvB8nB,GAAwB,uCAAG,WAAMrnB,GAAN,eAAAsL,EAAA,sEAEF4b,EAAqC,CAC5DjpB,WAAY,CACRE,aAAc,CACVopB,QAASvnB,EAAMT,GACfioB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,OAPV,QAEvBkoB,EAFuB,SAce,OAAxBA,EAAa5kB,OAC7B4Z,GAAwB,qBAgBxBuE,GAAsB,mDA/BG,2CAAH,sDAkD3BoL,GAAe,SAAC7d,GACrBuW,GAAyB,IAkEzB,6BACEyB,GAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAmCF,OA7BAoO,qBAAU,WAEH,GAAG6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAE,CAChE,IAAM+oB,EAAU5B,EAAmBllB,MAAQklB,EAAmBllB,KAEvEmmB,GAAYW,MAGT,IAEFzb,qBAAU,WAEN,GAAG6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAE,CAChE,IAAM2mB,EAAWQ,EAAmBR,UAAYQ,EAAmBR,SAASrmB,MAAM,KAElFG,QAAQC,IAAI,gBAAgBimB,GAE5B,IAAMC,EAAaO,EAAmB4C,IAAM5C,EAAmB4C,GAAnB,UAAqC5C,EAAmB4C,GAAnB,SAAkCzpB,MAAM,KACzHwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAG9B,IAGLnmB,QAAQC,IAAI,qBAAqB2D,IACjC5D,QAAQC,IAAI,qBAAqBymB,GACjC1mB,QAAQC,IAAI,WAAWue,IAGtB,kBAAC,IAAD,CACCpP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEKA,GAFL,GAGOgY,EAHP,GAISA,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GAAK,CACrEwmB,YAAaW,EAAkB,IAC5BA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC5BG,kBAAmBS,EAAkB,IAAWA,EAAkB,GAAOV,iBAAmBU,EAAkB,GAAOV,gBACrHJ,OAAQc,EAAkB,IAAUA,EAAkB,GAAOpoB,MAAQooB,EAAkB,GAAOpoB,KAC9FunB,cAAea,EAAkB,IAAUA,EAAkB,GAAOxlB,aAAewlB,EAAkB,GAAOxlB,gBAKhI,gBACAqO,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC5Q,MAAO,CACNuT,IAAK,QAEN3Q,MAAM,gBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACdnb,QAAST,EACT6b,SAAU,WAGX,kBAAC5tB,EAAD,CACCI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBmX,EAAiB9a,MAAjB,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBmX,EAAiB9a,MAAjB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACjS,EAAD,CACCI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,wFACbD,KAAK,SACLF,QAAUsR,EAAQkW,QAAUpW,EAAOoW,SAChCnW,GAAgBmX,EAAiB9a,MAAjB,aAEnBzN,YAAcqR,EAAQkW,QAAUpW,EAAOoW,SACpCnW,GAAgBmX,EAAiB9a,MAAjB,aACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACC7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd/B,YAAa,mBACbb,KAAK,cACLF,QAAUsR,EAAQxO,aAAesO,EAAOtO,cACrCuO,GAAgBmX,EAAiB9a,MAAjB,kBAEnBzN,YAAcqR,EAAQxO,aAAesO,EAAOtO,cACzCuO,GAAgBmX,EAAiB9a,MAAjB,kBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACC7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QAAUsR,EAAQmW,eAAiBrW,EAAOqW,gBACvCpW,GAAgBmX,EAAiB9a,MAAjB,oBAEnBzN,YAAcqR,EAAQmW,eAAiBrW,EAAOqW,gBAC3CpW,GAAgBmX,EAAiB9a,MAAjB,oBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBAMlB,yBACC1Q,MAAO,CACN4W,UAAW,UAQf,yBAAKpX,UAAU,gCAEYQ,MAAO,CACHgc,aAAc,SAGlB,wBAAIxc,UAAU,mBAAd,WAQzB,yBACqCQ,MAAO,CACHmX,QAAS,QAEb3X,UAAU,gCACTqoB,GAAoB3a,WACjB,yBAAKlN,MAAO,CACRmX,QAAS,WAET,kBAAC,KAAD,OAGP0Q,GAAoB1a,MACjB,oCACKoS,IAEGA,GAASjf,OAAS,GAAKif,GAAS1e,KAAI,SAAC2B,EAAO+U,GACxC,OACI,yBAAK/X,UAAU,sCACX,yBACIA,UAAU,kDACVwR,QAAS,WACLoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACIkO,QAAS,YA3RlD,SAACjP,GAExB,IAAM8pB,EAAYtM,IAAYA,GAAS4B,QAAO,SAAA3e,GAC1C,OAAOA,EAAMT,KAAOA,KAGxBsd,GAAYwM,GAsRwDC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAIlCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,QAIH5C,KAAiB3mB,EAAMT,KAInBonB,IAA0B,IAAV5R,IAHjB,0BAAM/X,UAAU,4CACZ,kBAAC6kB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACIzhB,MAAO,iBAEP,yBACIoO,QAAS,WACLoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE/B3oB,UAAU,4CAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACZ,kBAACgnB,GAAA,EAAD,WASzD,kBAAC/nB,EAAD,CACCI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAUsR,EAAQoW,WAAatW,EAAOsW,YACnCrW,GAAgBmX,EAAiB9a,MAAjB,gBAEnBzN,YAAcqR,EAAQoW,WAAatW,EAAOsW,YACvCrW,GAAgBmX,EAAiB9a,MAAjB,gBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACjS,EAAD,CACCI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAUsR,EAAQqW,aAAevW,EAAOuW,cACrCtW,GAAgBmX,EAAiB9a,MAAjB,kBAEnBzN,YAAcqR,EAAQqW,aAAevW,EAAOuW,cACzCtW,GAAgBmX,EAAiB9a,MAAjB,kBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACC7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QAAUsR,EAAQsW,iBAAmBxW,EAAOwW,kBACzCvW,GAAgBmX,EAAiB9a,MAAjB,sBAEnBzN,YAAcqR,EAAQsW,iBAAmBxW,EAAOwW,kBAC7CvW,GAAgBmX,EAAiB9a,MAAjB,sBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACC7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QAAUsR,EAAQuW,mBAAqBzW,EAAOyW,oBAC3CxW,GAAgBmX,EAAiB9a,MAAjB,wBAEnBzN,YAAcqR,EAAQuW,mBAAqBzW,EAAOyW,oBAC/CxW,GAAgBmX,EAAiB9a,MAAjB,wBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIlR,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA4lB,QAASA,GACTzgB,KAAMA,KAGN,yBAAK3E,MAAO,CACX4W,UAAU,UAGX,wBAAIpX,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA4lB,QAAS8D,GACTvkB,KAAMskB,MAKP,kBAAC,GAAD,CACC7J,WAAYA,EACZD,QAASA,EACTE,YAAaA,GACbE,SAAUA,GACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCzvBvBlQ,GAAmBC,MAAaC,MAAM,IAatCkU,GAAwB,SAACpN,GAC9BD,KAAatJ,MAAM,CAClBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAQvC7G,GAAgB,CACrBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACP+kB,aAAc,MAukBA8E,IApkBIhU,KAAXD,OASe,SAAC,GAA+F,IAA7FqP,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElEvZ,EAAe,GAAI,kBAAkB,QAF6B,mBAE9G0Z,EAF8G,KAE5FC,EAF4F,OAGvFvZ,oBAAS,GAH8E,mBAG9G8Q,EAH8G,KAGrGC,EAHqG,OAIrF/Q,oBAAS,GAJ4E,mBAI9GkR,EAJ8G,KAIpGF,EAJoG,OAKrEhR,oBAAS,GAL4D,mBAK5FoR,GAL4F,aAMvDpR,oBAAS,GAN8C,mBAMrF6Z,GANqF,aAOvD7Z,oBAAS,GAP8C,mBAO9GmR,EAP8G,KAOrF2I,EAPqF,OAQ7D9Z,oBAAS,GARoD,mBAQ9GiR,EAR8G,KAQxF8I,EARwF,OAS7E/Z,mBAAS,IAToE,mBAS9G8a,EAT8G,KAShGC,EATgG,OAUrE/a,mBAAS,IAV4D,mBAU9Gga,EAV8G,KAU5FC,EAV4F,OAWrFja,mBAAS,IAX4E,mBAWpGqa,GAXoG,aAYtEra,oBAAS,GAZ6D,mBAY9G0a,GAZ8G,cAanF1a,mBAAS,KAb0E,qCAc9FA,mBAAS,KAdqF,qBAc9G1J,GAd8G,MAczGygB,GAdyG,SAe1F/W,mBAAS,IAfiF,qBAe9G4a,GAf8G,MAevGC,GAfuG,MAkB/GrZ,GAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAjC,EAAA,6DAEdoc,EAAY3K,EAAWA,EAAS1e,KAAI,SAAA2B,GACzC,OAAOA,EAAMT,MACT,GAECggB,EAAW,IAAIC,SAEfqI,EAAK,CACVxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACxBC,SAAUgC,GAAO3nB,KAAK,KACtBjC,KAAMyQ,EAAO6W,OAAOwD,OACpBloB,YAAa6N,EAAO8W,eAGrB7E,EAASG,OAAO,OAAQpS,EAAOzQ,KAAK8qB,QACpCpI,EAASG,OAAO,cAAepS,EAAO7N,aACtC8f,EAASG,OAAO,QAAS5V,KAAKC,UAAU2d,IACxCnI,EAASG,OAAO,QAASiH,GAAgBe,EAAU,GAAKA,EAAU,GAAK,IACvEnI,EAASG,OAAO,SAAUmG,GAE1BtG,EAASG,OAAO,YAAapS,EAAO+W,WACpC9E,EAASG,OAAO,eAAgBpS,EAAOqX,cACvCpF,EAASG,OAAO,kBAAmBpS,EAAOiX,iBAC1ChF,EAASG,OAAO,WAAYpS,EAAOmX,UAI7BwH,EAASniB,KAAKC,UAAU8d,IACxBqE,EAAa,IAAI1M,UACZE,OAAO,KAAKuM,GAIvB1M,EAASG,OAAO,KAAMwM,EAAWC,IAAI,OAKrC5tB,QAAQC,IAAI,qBAAZ,eACI+gB,IAzCgB,UA+CS6F,EAAuB,CACnDjiB,KAAMoc,IAhDa,QA+CduI,EA/Cc,OAoDpBvpB,QAAQC,IAAI,sBAAsBspB,GAE9BA,GAAkBA,EAAe,IAAMA,EAAe,GAAGjrB,MAvH9B+W,EAwHN,2BAvH1BD,KAAa/N,QAAQ,CACpBgO,QAASA,GAAW,0BACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqH1CgR,GAAyB,GAEzBE,EAAgB,CAAC,eAEb8C,EAAe,GAFJ,CAGdvoB,GAAIuoB,EAAe,GAAf,KAA4B,GAChCxqB,IAAKwqB,EAAe,GAAf,KAA4B,GACjCjrB,KAAMirB,EAAe,GAAf,MAA6B,GACnCroB,YAAaqoB,EAAe,GAAf,aAAoC,GACjDloB,MAAOkoB,EAAe,GAAGloB,MAAlB,UACFC,EAAM,SADJ,OAENioB,EAAe,GAAGloB,MAAQkoB,EAAe,GAAGloB,MAAME,UAAY,IAE7D,MAXY,oBAYVilB,KAELxX,EAAQ2a,YAERrL,EAAY,IACZ+J,EAAgB,IAChBd,EAAoB,IACpBJ,GAA2B,GAC3BQ,EAAY,KAGZlF,KAMDzT,EAAQC,eAAc,GAvFF,kCAjEU,IAACoG,IAiEX,OAAH,wDA4FlBrV,QAAQC,IAAI,mBAAmB2mB,GAG/B/Z,qBAAU,WACT,IAAK+Z,EAAgB,UAAe,CACnC,IAAM9a,EAAQ8a,EAAgB,MAC9B,GAAI9a,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAI3DF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACpCF,OAAO0P,OAAOjD,EAAK,OACnB,IACGvJ,SAAQ,SAACqnB,EAAKC,GACpB,GAAmB,kBAARD,EACVnH,GAAsBmH,QAElB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACvBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACZnH,GAAsBmH,aAQ1B,CAAChD,IAMJ,IAKMiH,GAAe,SAAC7d,GACrBuW,GAAyB,IAuEzB,6BACEyB,GAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAMF,OACC,kBAAC,IAAD,CACC2Q,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC5Q,MAAO,CACNuT,IAAK,QAEN3Q,MAAM,mBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACdnb,QAAST,EACT6b,SAAU,WAGX,kBAAC5tB,EAAD,CACCI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBmX,EAAiB9a,MAAjB,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBmX,EAAiB9a,MAAjB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACjS,EAAD,CACCI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,wFACbD,KAAK,SACLF,QAAUsR,EAAQkW,QAAUpW,EAAOoW,SAChCnW,GAAgBmX,EAAiB9a,MAAjB,aAEnBzN,YAAcqR,EAAQkW,QAAUpW,EAAOoW,SACpCnW,GAAgBmX,EAAiB9a,MAAjB,aACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACC7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd/B,YAAa,mBACbb,KAAK,cACLF,QAAUsR,EAAQxO,aAAesO,EAAOtO,cACrCuO,GAAgBmX,EAAiB9a,MAAjB,kBAEnBzN,YAAcqR,EAAQxO,aAAesO,EAAOtO,cACzCuO,GAAgBmX,EAAiB9a,MAAjB,kBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACC7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QAAUsR,EAAQmW,eAAiBrW,EAAOqW,gBACvCpW,GAAgBmX,EAAiB9a,MAAjB,oBAEnBzN,YAAcqR,EAAQmW,eAAiBrW,EAAOqW,gBAC3CpW,GAAgBmX,EAAiB9a,MAAjB,oBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBAuBlB,yBACC1Q,MAAO,CACN4W,UAAW,UA8Bb,yBACC5W,MAAO,CACN4W,UAAW,UAKb,yBAAKpX,UAAU,gCAAgCQ,MAAO,CACrDgc,aAAc,SAEd,wBAAIxc,UAAU,mBAAd,UACA,kBAAC,KAAD,CACCwX,UAAU,OAAOpU,MAAO,uFACxB,uBAAG0U,KAAK,OACP,kBAACmM,GAAA,EAAD,SAIH,yBAAKjkB,UAAU,gCACb+f,GAEAA,EAASjf,OAAS,GAAKif,EAAS1e,KAAI,SAAC2B,EAAO+U,GAC3C,OACC,yBAAK/X,UAAU,sCACd,yBACCA,UAAU,kDACVwR,QAAS,kBAAMoY,EAAgB5mB,EAAMT,MAErC,yBAAKgJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACCkO,QAAS,kBA3PM,SAACjP,GAE3B,IAAM8pB,EAAYtM,GAAYA,EAAS4B,QAAO,SAAA3e,GAC7C,OAAOA,EAAMT,KAAOA,KAGrBsd,EAAYwM,GAqPcC,CAAmBtpB,EAAMT,KACxCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,QAIA5C,IAAiB3mB,EAAMT,KAInBonB,GAA0B,IAAV5R,IAHpB,0BAAM/X,UAAU,4CACf,kBAAC6kB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACCzhB,MAAO,iBAEP,yBACCoO,QAAS,WACRoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE5B3oB,UAAU,4CAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACf,kBAACgnB,GAAA,EAAD,UAOJ,kBAAC/nB,EAAD,CACCI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAUsR,EAAQoW,WAAatW,EAAOsW,YACnCrW,GAAgBmX,EAAiB9a,MAAjB,gBAEnBzN,YAAcqR,EAAQoW,WAAatW,EAAOsW,YACvCrW,GAAgBmX,EAAiB9a,MAAjB,gBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACjS,EAAD,CACCI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAUsR,EAAQqW,aAAevW,EAAOuW,cACrCtW,GAAgBmX,EAAiB9a,MAAjB,kBAEnBzN,YAAcqR,EAAQqW,aAAevW,EAAOuW,cACzCtW,GAAgBmX,EAAiB9a,MAAjB,kBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACC7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QAAUsR,EAAQsW,iBAAmBxW,EAAOwW,kBACzCvW,GAAgBmX,EAAiB9a,MAAjB,sBAEnBzN,YAAcqR,EAAQsW,iBAAmBxW,EAAOwW,kBAC7CvW,GAAgBmX,EAAiB9a,MAAjB,sBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACC7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QAAUsR,EAAQuW,mBAAqBzW,EAAOyW,oBAC3CxW,GAAgBmX,EAAiB9a,MAAjB,wBAEnBzN,YAAcqR,EAAQuW,mBAAqBzW,EAAOyW,oBAC/CxW,GAAgBmX,EAAiB9a,MAAjB,wBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIlR,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA4lB,QAASA,GACTzgB,KAAMA,KAGN,yBAAK3E,MAAO,CACX4W,UAAU,UAGX,wBAAIpX,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA4lB,QAAS8D,GACTvkB,KAAMskB,MAKP,kBAAC,GAAD,CACC7J,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCxmBrBpC,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG3e,IAAXuuB,QAwBFC,GAAU,SAAC,GAAsD,IAApDrrB,EAAmD,EAAnDA,KAAM4lB,EAA6C,EAA7CA,gBAAiBlS,EAA4B,EAA5BA,QAA4B,EACtCjH,oBAAS,GAD6B,mBAC7D8Q,EAD6D,KACpDC,EADoD,OAEV/Q,oBAAS,GAFC,mBAE7D8e,EAF6D,KAEtCC,EAFsC,OAGXnf,EACvD,GACA,sBALkE,mBAGxCof,GAHwC,WAS9DC,EAAoB,uCAAG,WAAOvrB,GAAP,iBAAA+L,EAAA,sEACKuf,EAA0B,CACxD5sB,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrBwrB,EADqB,SAU2B,OAA7BA,EAAkBloB,SAzCd+Q,EA0CH,0BAzC5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,sBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAuCnCkX,EAAkB5rB,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KAC1DylB,EAAgBgG,IAbS,iCA/BC,IAACpX,IA+BF,OAAH,sDAiBpBmU,EAAW,SAACrM,GAChB,OAAIA,EAAO9b,MACF8b,EAAO9b,MACF,IAGhB,OACE,oCACE,kBAAC,KAAD,CAME0X,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OACPxT,UAAU,uBACVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACN,oCACE,yBACE1e,UAAU,iBACVwR,QAAS,WACPsE,EAAQ7R,KAAR,gCAAsCya,EAAOnc,KAC7CqrB,EAAyBlP,KAG3B,yBAAKnT,IAAKwf,EAASrM,GAASpb,IAAI,UAKxC,kBAAC,GAAD,CACEF,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,gCAAsCya,EAAOnc,KAE7CqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAsBT,kBAAC,GAAD,CACEhB,MAAM,UACNob,UAAU,eACVle,IAAI,KACJN,UAAU,yBA6BZ,kBAAC,GAAD,CACEA,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,iBAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAM2I,EAAqBpP,EAAOnc,KAC7Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAAC,GAAD,CACE3F,gBAAiBA,EACjBD,aAAc3lB,EACd0lB,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvBsI,mBAAoB0F,MAiIfW,iBAtHM,SAAC,GAAwB,IAAtBxY,EAAqB,EAArBA,QAAqB,EACMrH,EAC/C,GACA,oBAHyC,mBACpC8f,EADoC,KACrBC,EADqB,OAKH3f,mBAAS,IALN,mBAKpCkZ,EALoC,KAKtBC,EALsB,KAO3C5Z,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACKkgB,EAAwB,CAC/CvtB,WAAY,CACVC,OAAQ,CACNwtB,eAAe,EACfC,mBAAmB,MALL,OACdC,EADc,OAUpB5G,EAAgB4G,GAVI,2CAAH,qDAYnBC,KACC,IArBwC,MAuBehgB,oBAAS,GAvBxB,mBAuBpCgZ,EAvBoC,KAuBbC,EAvBa,KA8C3C,OAFAvmB,QAAQC,IAAI,mBAAoB+sB,GAG9B,oCAIE,yBAAKvuB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,qBAIA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,6BACZjB,SAAU,SAAC8R,GAAD,OA3BD,SAAChS,GACpB,GAAIgvB,EAAcnsB,KAAKtB,OAAS,EAAG,CACjC,IAAMktB,EAAkBO,EAAcnsB,KAAKuf,QAAO,SAAC9f,GAAD,OAChDA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzC2N,EAAgBgG,IAsBSe,CAAaxd,EAAE/F,OAAOjM,WAG3C,kBAAC,IAAD,CAEES,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YAUF,yBAAK9nB,UAAU,uCASf,yBAAKA,UAAU,uCACZuuB,EAAc5gB,MAAQoa,EAAajnB,OAAS,GAC3C,kBAAC,GAAD,CACEgV,QAASA,EACTkS,gBAAiBA,EACjB5lB,KAAM2lB,IAGTwG,EAAc7gB,WAAa,kBAACshB,GAAD,MAE3BT,EAAc5gB,QAAUoa,EAAajnB,OAAS,IAC7C,yBACEN,MAAO,CACL4W,UAAW,SAGb,kBAAC,GAAD,CAAOhU,MAAM,gCAMpBmrB,EAAc5gB,MACb,kBAAC40C,GAAD,CACE16B,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,QClUrBpY,GAAmBC,MAAaC,MAAM,IAItC2P,GAA0B,SAAC7I,GAChCD,KAAa/N,QAAQ,CACpBgO,QAASA,GAAW,mBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAKvCkN,GAAwB,SAACpN,GAC9BD,KAAatJ,MAAM,CAChBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAQxC7G,GAAgB,CACrBpQ,KAAM,GACNsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1kB,MAAO,GACPhC,IAAK,GACL4B,MAAO,GACP+kB,aAAc,IA4sBA8E,IAzsBIhU,KAAXD,OASe,SAAC,GAGmC,IAFvDqP,EAEsD,EAFtDA,sBACAC,EACsD,EADtDA,yBACAG,EAAsD,EAAtDA,mBAAoBoH,EAAkC,EAAlCA,sBAAkC,EAEN5gB,EAAe,GAAI,sBAFb,mBAElD0Z,EAFkD,KAEhCC,EAFgC,OAGQ3Z,EAAe,GAAI,sBAH3B,gCAIsBA,EAAe,GAAI,8BAJzC,mBAIlBsb,GAJkB,aAKqBtb,EAAe,GAAI,2BALxC,mBAKjBub,GALiB,aAM6Bvb,EAAe,GAAI,+BANhD,gCAOyBA,EAAe,GAAI,8BAP5C,mBAOfwb,GAPe,aAQyBxb,EAAe,GAAI,6BAR5C,mBAQfyb,GARe,aAU3Brb,oBAAS,GAVkB,mBAUlD8Q,EAVkD,KAUzCC,EAVyC,OAWT/Q,oBAAS,GAXA,mBAWhCoR,GAXgC,aAYKpR,oBAAS,GAZd,gCAaKA,oBAAS,IAbd,mBAalDmR,EAbkD,KAazB2I,EAbyB,OAcD9Z,oBAAS,GAdR,mBAclDiR,EAdkD,KAc5B8I,EAd4B,OAeT/Z,mBAAS,IAfA,mBAelDga,EAfkD,cAgBzBha,mBAAS,KAhBgB,qBAgBxCqa,IAhBwC,gBAiBVra,oBAAS,GAjBC,qBAiBlD0a,GAjBkD,gBAkBvB1a,mBAAS,KAlBc,qBAkBlDka,GAlBkD,gBAmBlCla,mBAAS,KAnByB,qBAmBlD1J,GAnBkD,MAmB7CygB,GAnB6C,SAoB9B/W,mBAAS,IApBqB,qBAoBlD4a,GApBkD,MAoB3CC,GApB2C,SAqBzB7a,oBAAS,GArBgB,qBAqBlDkR,GArBkD,MAqBxCF,GArBwC,SAsBdhR,mBAAS,IAtBK,qBAsB/C8a,GAtB+C,MAsBjCC,GAtBiC,SAuBX/a,mBAAS,IAvBE,qCAyBGJ,EAAe,GAAI,uBAzBtB,qBAyB/C4Z,GAzB+C,MAyB1BC,GAzB0B,MA4BzDla,qBAAU,YAEoB,uCAAG,sBAAAE,EAAA,sEACega,GAA0B,CAC3DrnB,WAAY,CACRE,aAAc,CACVoB,GAAI0lB,EAAmB1lB,OAJb,yDAAH,qDAUvBytB,KAED,CAAC/H,IAGP1mB,QAAQC,IAAI,kBAAkB6mB,IAC9B9mB,QAAQC,IAAI,0BAA0Bue,IAEtC3R,qBAAU,WACT,GAAIia,GAAoB1a,MAAQ0a,GAAoBjmB,MAAQxB,OAAOC,KAAKwnB,GAAoBjmB,MAAMtB,OAAS,EAAG,CAE7G,IAAM6K,EAAS0c,GAAoBjmB,KAAKY,MACpConB,EAAY,GAMhB,GAJIze,GAAUA,EAAO7K,OAAS,IAC7BspB,EAAYze,GAGT0c,GAAoBjmB,KAAKQ,OAASylB,GAAoBjmB,KAAKQ,MAAzB,GACtB+I,EAAOoW,MAAK,SAAAlgB,GAAI,OAAIA,EAAKU,KAAO8lB,GAAoBjmB,KAAKQ,MAAzB,QAE9CwnB,EAAS,CAAI/B,GAAoBjmB,KAAKQ,OAA7B,oBAAuCwnB,KAGjDR,GAAgBvB,GAAoBjmB,KAAKQ,MAAzB,IAIhBid,GAAYuK,MAGZ,CAAC/B,GAAoBjmB,OAGxBgM,qBAAU,WAEL2R,IAAYA,GAAS,IAAMA,GAASjf,OAAS,GAE5C6oB,KAAiB5J,GAAS,GAAGxd,KAChCqnB,GAAgB7J,GAAS,GAAGxd,IAC5B8nB,GAAyBtK,GAAS,OAKlC,CAACA,KAMJ,IAAM1P,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,yDAEdoc,EAAY3K,GAAWA,GAAS1e,KAAI,SAAA2B,GACzC,OAAOA,EAAMT,MACT,IAECggB,EAAW,IAAIC,UAEZE,OAAO,OAAQpS,EAAOzQ,KAAK8qB,QACpCpI,EAASG,OAAO,cAAepS,EAAO7N,aACtC8f,EAASG,OAAO,QAAS5V,KAAKC,UAAU2d,IACxCnI,EAASG,OAAO,QAASiH,IAAgBe,EAAU,GAAKA,EAAU,GAAK,IACvEnI,EAASG,OAAO,SAAUmG,GAC1BtG,EAASG,OAAO,eAAgBpS,EAAOqX,cAGvCpmB,QAAQC,IAAI,qBAAqBymB,GACjC1mB,QAAQC,IAAI,YAAYkpB,KAGpBzC,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GApB/C,oBAqBb8pB,EAAyB,GAE5BF,GAAaA,EAAU5pB,OAAS,GAClC4pB,EAAU5mB,SAAQ,SAAAymB,GACdtC,GAAsBA,EAAkB,eACtCA,EAAkB,MAAUxmB,SAAS8oB,IACxCK,EAAuB3mB,KAAKsmB,SAOnBK,EAAuB,IAAMA,EAAuB9pB,OAAS,GAlCvD,kCAmCAipB,EAAqC,CACvC9oB,WAAY,CACRE,aAAc,CACVqpB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,KAGnC4D,KAAM,CACFnD,MAAO4nB,KA3CT,qCA+CDA,EAAuB,IAAMA,EAAuB9pB,OAAS,GA/C5D,kCAgDAkpB,EAAmC,CACrC/oB,WAAY,CACRE,aAAc,CACVopB,QAASK,EAAuB,GAAGroB,GACnCioB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,OArDjC,yBA8DS6lB,EAAuB,CAC1CnnB,WAAY,CACRE,aAAc,CACVoB,GAAI0lB,EAAmB1lB,KAG/B4D,KAAM,CACFtG,KAAMyQ,EAAOzQ,MAAQyQ,EAAOzQ,KAAK8qB,OACjCloB,YAAa6N,EAAO7N,YACpBO,MAAO0nB,EACP9nB,MAAO+mB,IAAgBe,EAAU,GAAKA,EAAU,GAAK,GACrD/nB,OAAQkmB,EACR9lB,KAAMgmB,GACN1B,UAAW/W,EAAO+W,UAC9BE,gBAAiBjX,EAAOiX,gBACxBI,aAAcrX,EAAOqX,aACTF,SAAWtiB,IAAQA,GAAKrE,OAAS,EAAKqE,GAAKrD,KAAK,KAAO,GACvD+oB,GAAI,CACAxD,UAAW/W,EAAOgX,YAClBC,gBAAiBjX,EAAOkX,kBACvCC,SAAWgC,IAAUA,GAAO3oB,OAAS,EAAK2oB,GAAO3nB,KAAK,KAAO,GAC9CjC,KAAMyQ,EAAO6W,QAAU7W,EAAO6W,OAAOwD,OACrCloB,YAAa6N,EAAO8W,kBApFlB,SA8Dd0D,EA9Dc,SA0F4B,OAA1BA,EAAejlB,QACpC4Z,GAAwB,qBACxBqI,GAAyB,GAEzBuH,EAAsB,eAClBpH,EADiB,GAGjB6C,IAGJva,EAAQ2a,aAKRlH,KAGDzT,EAAQC,eAAc,GA5GF,4CAAH,wDAiHT8Z,GAAuB,uCAAG,WAAM/nB,GAAN,SAAA+L,EAAA,sEACtB2b,EAAqC,CACvChpB,WAAY,CACRE,aAAc,CACVopB,QAAShoB,EACTioB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,OANX,2CAAH,sDAcvB8nB,GAAwB,uCAAG,WAAMrnB,GAAN,eAAAsL,EAAA,sEAEF4b,EAAqC,CAC5DjpB,WAAY,CACRE,aAAc,CACVopB,QAASvnB,EAAMT,GACfioB,WAAY,eACZtjB,OAAQ+gB,EAAmB1lB,OAPV,QAEvBkoB,EAFuB,SAce,OAAxBA,EAAa5kB,OAC7B4Z,GAAwB,qBAgBxBuE,GAAsB,mDA/BG,2CAAH,sDAkD3BoL,GAAe,SAAC7d,GACrBuW,GAAyB,IAkEzB,6BACEyB,GAAkB,kBAAC2C,GAAA,EAAD,MAAsB,kBAAClF,GAAA,EAAD,MACzC,yBAAKhnB,UAAU,mBAAf,WAmCF,OA7BAoO,qBAAU,WAEH,GAAG6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAE,CAChE,IAAM+oB,EAAU5B,EAAmBllB,MAAQklB,EAAmBllB,KAEvEmmB,GAAYW,MAGT,IAEFzb,qBAAU,WAEN,GAAG6Z,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,EAAE,CAChE,IAAM2mB,EAAWQ,EAAmBR,UAAYQ,EAAmBR,SAASrmB,MAAM,KAElFG,QAAQC,IAAI,gBAAgBimB,GAE5B,IAAMC,EAAaO,EAAmB4C,IAAM5C,EAAmB4C,GAAnB,UAAqC5C,EAAmB4C,GAAnB,SAAkCzpB,MAAM,KACzHwkB,GAAQ6B,GAAY,IACpBiC,GAAUhC,GAAc,OAG9B,IAGLnmB,QAAQC,IAAI,qBAAqB2D,IACjC5D,QAAQC,IAAI,qBAAqBymB,GACjC1mB,QAAQC,IAAI,WAAWue,IAGtB,kBAAC,IAAD,CACCpP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEKA,GAFL,GAGOgY,EAHP,GAISA,GAAsBrnB,OAAOC,KAAKonB,GAAoBnnB,OAAS,GAAK,CACrEwmB,YAAaW,EAAkB,IAC5BA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC5BG,kBAAmBS,EAAkB,IAAWA,EAAkB,GAAOV,iBAAmBU,EAAkB,GAAOV,gBACrHJ,OAAQc,EAAkB,IAAUA,EAAkB,GAAOpoB,MAAQooB,EAAkB,GAAOpoB,KAC9FunB,cAAea,EAAkB,IAAUA,EAAkB,GAAOxlB,aAAewlB,EAAkB,GAAOxlB,gBAKhI,gBACAqO,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC5Q,MAAO,CACNuT,IAAK,QAEN3Q,MAAM,gBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,GACV9K,OAAO,SACPsI,cAAe,CACdnb,QAAST,EACT6b,SAAU,WAGX,kBAAC5tB,EAAD,CACCI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBmX,EAAiB9a,MAAjB,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBmX,EAAiB9a,MAAjB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACjS,EAAD,CACCI,MAAM,UACNE,MAAO+Q,EAAO6W,OACdrnB,YAAa,wFACbD,KAAK,SACLF,QAAUsR,EAAQkW,QAAUpW,EAAOoW,SAChCnW,GAAgBmX,EAAiB9a,MAAjB,aAEnBzN,YAAcqR,EAAQkW,QAAUpW,EAAOoW,SACpCnW,GAAgBmX,EAAiB9a,MAAjB,aACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACC7R,MAAM,cACNE,MAAO+Q,EAAO7N,YACd/B,YAAa,mBACbb,KAAK,cACLF,QAAUsR,EAAQxO,aAAesO,EAAOtO,cACrCuO,GAAgBmX,EAAiB9a,MAAjB,kBAEnBzN,YAAcqR,EAAQxO,aAAesO,EAAOtO,cACzCuO,GAAgBmX,EAAiB9a,MAAjB,kBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACC7R,MAAM,iBACNE,MAAO+Q,EAAO8W,cACd1mB,YAAa,yEACbb,KAAK,gBACLF,QAAUsR,EAAQmW,eAAiBrW,EAAOqW,gBACvCpW,GAAgBmX,EAAiB9a,MAAjB,oBAEnBzN,YAAcqR,EAAQmW,eAAiBrW,EAAOqW,gBAC3CpW,GAAgBmX,EAAiB9a,MAAjB,oBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBAMlB,yBACC1Q,MAAO,CACN4W,UAAW,UAQf,yBAAKpX,UAAU,gCAEYQ,MAAO,CACHgc,aAAc,SAGlB,wBAAIxc,UAAU,mBAAd,WAQzB,yBACqCQ,MAAO,CACHmX,QAAS,QAEb3X,UAAU,gCACTqoB,GAAoB3a,WACjB,yBAAKlN,MAAO,CACRmX,QAAS,WAET,kBAAC,KAAD,OAGP0Q,GAAoB1a,MACjB,oCACKoS,IAEGA,GAASjf,OAAS,GAAKif,GAAS1e,KAAI,SAAC2B,EAAO+U,GACxC,OACI,yBAAK/X,UAAU,sCACX,yBACIA,UAAU,kDACVwR,QAAS,WACLoY,GAAgB5mB,EAAMT,IACtB8nB,GAAyBrnB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACIkO,QAAS,YA3RlD,SAACjP,GAExB,IAAM8pB,EAAYtM,IAAYA,GAAS4B,QAAO,SAAA3e,GAC1C,OAAOA,EAAMT,KAAOA,KAGxBsd,GAAYwM,GAsRwDC,CAAmBtpB,EAAMT,IACzB+nB,GAAwBtnB,EAAMT,KAIlCvC,UAAU,6CACV,kBAACusB,GAAA,EAAD,QAIH5C,KAAiB3mB,EAAMT,KAInBonB,IAA0B,IAAV5R,IAHjB,0BAAM/X,UAAU,4CACZ,kBAAC6kB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACIzhB,MAAO,iBAEP,yBACIoO,QAAS,WACLoO,GAAW,GACXgJ,GAAwB,GACxBD,GAA2B,IAE/B3oB,UAAU,4CAIV,kBAACwsB,GAAA,EAAD,MAIA,0BAAMxsB,UAAU,iDACZ,kBAACgnB,GAAA,EAAD,WASzD,kBAAC/nB,EAAD,CACCI,MAAM,aACNE,MAAO+Q,EAAO+W,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAUsR,EAAQoW,WAAatW,EAAOsW,YACnCrW,GAAgBmX,EAAiB9a,MAAjB,gBAEnBzN,YAAcqR,EAAQoW,WAAatW,EAAOsW,YACvCrW,GAAgBmX,EAAiB9a,MAAjB,gBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACjS,EAAD,CACCI,MAAM,gBACNE,MAAO+Q,EAAOgX,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAUsR,EAAQqW,aAAevW,EAAOuW,cACrCtW,GAAgBmX,EAAiB9a,MAAjB,kBAEnBzN,YAAcqR,EAAQqW,aAAevW,EAAOuW,cACzCtW,GAAgBmX,EAAiB9a,MAAjB,kBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACC7R,MAAM,mBACNE,MAAO+Q,EAAOiX,gBACd7mB,YAAa,UACbb,KAAK,kBACLF,QAAUsR,EAAQsW,iBAAmBxW,EAAOwW,kBACzCvW,GAAgBmX,EAAiB9a,MAAjB,sBAEnBzN,YAAcqR,EAAQsW,iBAAmBxW,EAAOwW,kBAC7CvW,GAAgBmX,EAAiB9a,MAAjB,sBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACC7R,MAAM,sBACNE,MAAO+Q,EAAOkX,kBACd9mB,YAAa,2CACbb,KAAK,oBACLF,QAAUsR,EAAQuW,mBAAqBzW,EAAOyW,oBAC3CxW,GAAgBmX,EAAiB9a,MAAjB,wBAEnBzN,YAAcqR,EAAQuW,mBAAqBzW,EAAOyW,oBAC/CxW,GAAgBmX,EAAiB9a,MAAjB,wBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIlR,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA4lB,QAASA,GACTzgB,KAAMA,KAGN,yBAAK3E,MAAO,CACX4W,UAAU,UAGX,wBAAIpX,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA4lB,QAAS8D,GACTvkB,KAAMskB,MAKP,kBAAC,GAAD,CACC7J,WAAYA,EACZD,QAASA,EACTE,YAAaA,GACbE,SAAUA,GACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCtvBrBpC,GAAwBC,KAAxBD,OA2WOyb,IA3WiBxb,KAAhBC,YACG0R,IAAX9B,OAOe,SAAC3X,GAAkB,IAAD,EACoBpH,EAAe,GAAI,sBADvC,mBAC9B4Z,EAD8B,KACTC,EADS,OAEwB7Z,EAAe,GAAI,oBAF3C,mBAE9B8gB,EAF8B,KAEPC,EAFO,KAI/BtuB,EAASuuB,eACT3Z,EAAUC,eACV2Z,EAAaxuB,EAAM,GANY,EAOiB2N,oBAAS,GAP1B,mBAO9B8gB,EAP8B,KAOTC,EAPS,OAQM/gB,mBAAS,IARf,mBAQ9BghB,EAR8B,KAQfC,EARe,KAYrC1hB,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACega,EAA0B,CAC3DrnB,WAAY,CACRE,aAAc,CACVoB,GAAImtB,MAJM,QAChBK,EADgB,SAYlBD,EAAkBC,GAZA,2CAAH,qDAkBvBC,KAED,CAACN,IAEJthB,qBAAU,YAEmB,uCAAG,sBAAAE,EAAA,sEAClBkhB,EAA4B,CAC9BvuB,WAAY,CACRE,aAAc,CACVoB,GAAImtB,MAJQ,2CAAH,qDAUzBO,KAED,CAACP,IAKJnuB,QAAQC,IAAI,qBAAsBquB,GAElCtuB,QAAQC,IAAI,cAAeN,GAG3B,IA+BMgvB,EAAM7H,EAAoB1a,MAAQkiB,GAAkBA,EAAc,MA/B7C,SAACM,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9uB,KAAI,SAAAQ,GAAI,OAAIA,EAAKe,SAC7B,IAAMwtB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKrsB,SAAQ,SAACjC,EAAMkW,GACZsY,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzuB,IAElDuuB,EAAQE,GAAgB,CAACzuB,GAE9BwuB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACf/uB,QAAQC,IAAI,aAAc6uB,OAI3BD,EAIyEG,CAAmBV,EAAc,OAAa,GAIlI,OACI,yBAAK7vB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,sDAICqoB,EAAoB1a,MAAQkiB,GAAmBjvB,OAAOC,KAAKgvB,GAAgB/uB,OAAS,GACjF,oCACI,kBAAC,GAAD,CACI+mB,sBAAuB8H,EACvB7H,yBAA0B8H,EAC1B3H,mBAAoB4H,EACpBR,sBAAuBS,IAI3B,kBAAC,IAAD,CACIte,QAAS,kBAAMoe,GAAuB,IACtCtwB,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHV,UAWZ,kBAAC,KAAD,CACIqC,QAAM,EAACC,UAAW,CAAEtR,KAAM,GAC1B3N,QAAS4W,EAAoB3a,WAC5B2a,EAAoB1a,MAAQkiB,KAAoBjvB,OAAOC,KAAKgvB,GAAgB/uB,OAAS,IAClF,kBAAC,KAAD,CAAO2B,YAAY,2BAA2BO,MAAOwS,KAAMI,yBAK9DyS,EAAoB1a,MAAQkiB,GAAmBjvB,OAAOC,KAAKgvB,GAAgB/uB,OAAS,GACjF,oCACI,yBAAKd,UAAU,gCACX,yBAAKA,UAAU,oGACX,yBAAKuL,IAAKskB,EAAc,OAAaA,EAAc,MAAd,MAAkCvsB,IAAI,MAE/E,yBAAKtD,UAAU,qCACX,4BACK6vB,EAAc,MAEnB,4BACKA,EAAc,aAGlBA,EAAc,KACX,mCAEI,8BACKA,EAAc,QAUlCA,EAAc,MACX,oCACI,yBAAK7vB,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAKuL,IAAKskB,EAAc,MAAYA,EAAc,KAAUvsB,IAAI,OAKxE,yBAAK9C,MAAO,CACRgc,aAAc,WAMzBqT,EAAc,OAAaA,EAAc,MAAU/uB,OAAS,GACzD,oCACI,yBAAKd,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACVkwB,GAAOtvB,OAAOC,KAAKqvB,GAAK7uB,KAAI,SAAAkd,GACzB,OACI,yBAAKve,UAAU,qBACVkwB,EAAI3R,IAAW2R,EAAI3R,GAAQld,KAAI,SAAA4B,GAC5B,OAAO,yBACPK,IAAI,KACJiI,IAAKtI,EAAKzC,MAAO,CACbgT,MAAO,oBAcvC,yBAAKhT,MAAO,CACRgc,aAAc,aAYtC,yBAAKxc,UAAU,iCACX,wCAIJ,yBAAKA,UAAU,8BACVuvB,EAAsB7hB,WAAa,kBAACshB,GAAD,MACnCO,EAAsB5hB,QAAU4hB,EAAsBntB,KAAKtB,OAAS,IACjE,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,qCAAqCO,MAAOwS,KAAMI,0BAI5E2Z,EAAsB5hB,MAAQ4hB,EAAsBntB,MAAQmtB,EAAsBntB,KAAKtB,OAAS,GAC7F,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UAAW,+FAGf6G,KAAK,QACL8D,WAAYmR,EAAsBntB,KAClCic,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH/d,MAAO,CACHsW,MAAO,qBAO/B,kBAAC,GAAD,CACI1T,MAAM,GACNob,UAAU,QACVle,IAAI,KACJkT,MAAO,OAEPxT,UAAU,uBAEVye,OAAQ,SAAC7b,EAAO8b,GAAR,OACJ,oCACI,yBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAExCgJ,IAAK3I,EAAOU,IAAI,YAAY9C,MAAO,CAC/BqT,OAAQ,OACRL,MAAO,OACPmd,UAAW,UACXlwB,aAAc,MACd6W,OAAQ,iBAM5B,kBAAC,GAAD,CACIlU,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACJ,oCAEI,wBACIlN,QAAS,WACLsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAGxC/B,MAAO,CACH6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAEXlT,OAUjB,kBAAC,GAAD,CACIhB,MAAM,mBACNob,UAAU,kBACVle,IAAI,KACJN,UAAU,yBAKd,kBAAC,GAAD,CACIoD,MAAM,eACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAId,kBAAC,GAAD,CACIoD,MAAM,SACNob,UAAU,cACVle,IAAI,KACJN,UAAU,+BCnTfwiD,GA/Ca,SAAC,GAAmE,IAAjE/iD,EAAgE,EAAhEA,SAAUJ,EAAsD,EAAtDA,MAAOojD,EAA+C,EAA/CA,SAAU/hD,EAAqC,EAArCA,YAAaqE,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAOzE,OACI,oCACI,wBAAIhF,UAAU,mBAAmBX,GAEhCojD,EAAW,kBAAC,KAAD,eACRj2C,OAAO,sBACPxM,UAAU,iBACVU,YAAaA,EACbF,MAAO,CACHgT,MAAO,OACPqe,YAAa,QAIjBpyB,SAAUA,GACLuF,GAAQ,CACTxF,aAAcyY,IAAOjT,MAIrB,kBAAC,KAAD,eAEItE,YAAaA,EACbV,UAAU,iBACVQ,MAAO,CACHgT,MAAO,OACPqe,YAAa,QAEjBpyB,SAAUA,GACLsF,GAAQ,CACTvF,aAAcyY,IAAOlT,QAezB4T,KAAhBD,YC9BWD,KAAXD,O,IAEF5I,GAAmBC,MAAaC,MAAM,IAuBtCG,GAAgB,CACpB9I,UAAW,GACXC,SAAU,GACV8B,QAAS,GACTw5C,OAAQ,KACRC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,IAAK,GACLt7C,MAAO,GACPD,MAAO,GACPujC,eAAgB,GAChBR,YAAa,IAWTtmB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBA0f/B2V,GA/eQ,SAAC,GAKV,IAJZ5E,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACA0a,EAEW,EAFXA,aACAC,EACW,EADXA,gBACW,EACwCh0B,EACjD,GACA,YAHS,mBACJi0B,EADI,KACcC,EADd,OAK6C9zB,mBAAS,IALtD,mBAKJ+zB,EALI,aAMuC/zB,mBAAS,KANhD,gCAQiCA,mBAAS,KAR1C,mBAQYo0B,GARZ,aAS2Bp0B,mBAAS,IATpC,mBASSs0B,GATT,aAWwC10B,EACjD,GACA,eAbS,mBAWc40B,GAXd,aAgBkC50B,EAAe,GAAI,YAhBrD,mBAgBJ60B,EAhBI,KAgBWC,EAhBX,OAiBkB10B,mBAAS,IAjB3B,mBAiBJ7J,EAjBI,KAiBE4vB,EAjBF,OAmB2B/lB,mBAAS,IAnBpC,gCAoBqBA,mBAAS,KApB9B,mBAsBLwB,GAtBK,UAsBO,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACUq0B,EAAuB,CAClDx8B,KAAM,CACJqB,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MAAMojB,OACpB3a,SAAUM,EAAON,SACjB9G,QAASoH,EAAOpH,QAAQyhB,OACxBxjB,UAAWmJ,EAAOnJ,UAAUwjB,OAC5BvjB,SAAUkJ,EAAOlJ,SAASujB,OAC1BmgB,eAAgBx6B,EAAOw6B,eAAengB,OACtCm4B,IAAKxyC,EAAOwyC,IACZF,WAAYtyC,EAAOsyC,WAAWj4B,OAC9Bk4B,WAAYvyC,EAAOuyC,WAAWl4B,OAC9B+3B,OAAQpyC,EAAOoyC,OACfC,YAAaryC,EAAOqyC,YAAYh4B,OAChC2f,YAAatlC,KAfE,QACb0+B,EADa,SAoB6B,OAA1BA,EAAe79B,QAtER+Q,OAuE3B6I,EAtEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqEzCvV,QAAQC,IAAI,iBAAkBkiC,GAC9BjB,EAAgB,CAAC,aAEblgC,GAAImhC,EAAc,KAAW,GAC7BpjC,IAAKojC,EAAc,KAAW,GAC9B7jC,KAAM6jC,EAAc,UAAgB,IAAMA,EAAc,UAGrDA,IAPQ,oBASVlB,KAGL1a,GAAyB,GACzBvX,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GA1CH,iCAlDS,IAACoG,IAkDV,OAAH,yDA6ClBxI,qBAAU,WACR,IAAKs0B,EAAgB,UAAe,CAClC,IAAMr1B,EAAQq1B,EAAgB,MAC9B,GAAIr1B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/BuX,EAAgB,WACjB9hC,OAAOC,KAAK6hC,EAAiBtgC,MAAMtB,OAAS,GAExC4hC,EAAgB,KAAhB,SAUL,CAACA,IAUJt0B,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,IAEH11B,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,MAJC,QACVmB,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACpB,IAEJ,IAAMxT,EAAe,SAAC7d,GACpBuW,GAAyB,IAiB3BvmB,QAAQC,IAAI,gBAAiB8hC,GAC7B,IAAMyf,EAAmB,SAACh+C,EAAMi+C,GAC9BpuB,EAAaouB,IAGf,OACE,kBAAC,IAAD,CACEryC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,IACRqG,QAAS,QAEXvU,MAAM,gBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,yBAAK7sB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOqyC,YACd9iD,KAAK,cACLF,QACGsR,EAAQ0xC,aAAe5xC,EAAO4xC,cAC7B3xC,GACA0xB,EAAiBr1B,MAAjB,kBAEJzN,YACGqR,EAAQ0xC,aAAe5xC,EAAO4xC,cAC7B3xC,GACA0xB,EAAiBr1B,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEc,IAAK,EACLT,KAAM,SACND,MAAM,WACNE,MAAO+Q,EAAOoyC,OACd7iD,KAAK,SACLF,QACGsR,EAAQyxC,QAAU3xC,EAAO2xC,SACxB1xC,GAAgB0xB,EAAiBr1B,MAAjB,aAEpBzN,YACGqR,EAAQyxC,QAAU3xC,EAAO2xC,SACxB1xC,GAAgB0xB,EAAiBr1B,MAAjB,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,MACNE,MAAO+Q,EAAOwyC,IACdjjD,KAAK,MACLF,QACGsR,EAAQ6xC,KAAO/xC,EAAO+xC,MACrB9xC,GAAgB0xB,EAAiBr1B,MAAjB,UAEpBzN,YACGqR,EAAQ6xC,KAAO/xC,EAAO+xC,MACrB9xC,GAAgB0xB,EAAiBr1B,MAAjB,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOsyC,WACd/iD,KAAK,aACLF,QACGsR,EAAQ2xC,YAAc7xC,EAAO6xC,aAC5B5xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJzN,YACGqR,EAAQ2xC,YAAc7xC,EAAO6xC,aAC5B5xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOuyC,WACdhjD,KAAK,aACLF,QACGsR,EAAQ4xC,YAAc9xC,EAAO8xC,aAC5B7xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJzN,YACGqR,EAAQ4xC,YAAc9xC,EAAO8xC,aAC5B7xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKlR,UAAU,yBACb,kBAAC2Y,GAAD,CACE5T,KAAMC,EACNtE,YAAY,aACZrB,MAAM,eACNI,SAAUsjD,MAKhB,yBAAK/iD,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAOpH,QACdrJ,KAAK,UACLF,QACGsR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACA0xB,EAAiBr1B,MAAjB,cAEJzN,YACGqR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACA0xB,EAAiBr1B,MAAjB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAKtB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOw6B,eACdjrC,KAAK,iBACLF,QACGsR,EAAQ65B,gBAAkB/5B,EAAO+5B,iBAChC95B,GACA0xB,EAAiBr1B,MAAjB,qBAEJzN,YACGqR,EAAQ65B,gBAAkB/5B,EAAO+5B,iBAChC95B,GACA0xB,EAAiBr1B,MAAjB,qBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,6BC/hB9BtB,IAFa6I,KAAXD,OAEiB3I,MAAaC,MAAM,KAuBtCG,GAAgB,CACpB9I,UAAW,GACXC,SAAU,GACV8B,QAAS,GACTw5C,OAAQ,KACRC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,IAAK,GACLt7C,MAAO,GACPD,MAAO,GACPujC,eAAgB,GAChBR,YAAa,IAWTtmB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAohB/BmsC,GAxgBQ,SAAC,GAMV,IALZp7B,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACA0a,EAGW,EAHXA,aACAC,EAEW,EAFXA,gBACA15B,EACW,EADXA,SACW,EACwC0F,EACjD,GACA,eAHS,mBACJi0B,EADI,KACcC,EADd,OAK6C9zB,mBAAS,IALtD,mBAKJ+zB,EALI,aAMuC/zB,mBAAS,KANhD,gCAQiCA,mBAAS,KAR1C,mBAQYo0B,GARZ,aAS2Bp0B,mBAAS,IATpC,mBASSs0B,GATT,aAWwC10B,EACjD,GACA,eAbS,mBAWc40B,GAXd,aAgBkC50B,EAAe,GAAI,YAhBrD,mBAgBJ60B,EAhBI,KAgBWC,EAhBX,OAiBkB10B,mBAAS,IAjB3B,mBAiBJ7J,EAjBI,KAiBE4vB,EAjBF,KAmBXxmB,qBAAU,WACJrF,GAAYnI,OAAOC,KAAKkI,GAAUjI,OAAS,GAC7C8zB,EAAa7rB,EAAQ,eAEtB,CAACA,IAvBO,MAyB2B8F,mBAAS,IAzBpC,gCA0BqBA,mBAAS,KA1B9B,mBA4BLwB,GA5BK,UA4BO,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,sEACUq0B,EAAuB,CAClD1hC,WAAY,CACVE,aAAc,CACZoB,GAAIwG,EAASxG,KAGjB4D,KAAM,CACJqB,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MAAMojB,OACpBzhB,QAASoH,EAAOpH,QAAQyhB,OACxBxjB,UAAWmJ,EAAOnJ,UAAUwjB,OAC5BvjB,SAAUkJ,EAAOlJ,SAASujB,OAC1BmgB,eAAgBx6B,EAAOw6B,eAAengB,OACtCm4B,IAAKxyC,EAAOwyC,IACZF,WAAYtyC,EAAOsyC,WAAWj4B,OAC9Bk4B,WAAYvyC,EAAOuyC,WAAWl4B,OAC9B+3B,OAAQpyC,EAAOoyC,OACfC,YAAaryC,EAAOqyC,YAAYh4B,OAChC2f,YAAatlC,KAnBE,QACb0+B,EADa,SAwB6B,OAA1BA,EAAe79B,QAlFR+Q,OAmF3B6I,EAlFJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiFzCvV,QAAQC,IAAI,kBAAmBkiC,GAKzB3rB,EAJgB,WACpB,OAAOyqB,EAAanhC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAGhDyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAI0e,EAAazqB,GAA/BnX,OAAA,IAAAA,CAAA,GACf8iC,EADe,CAElB7jC,KAAM6jC,EAAev8B,UAAY,IAAMu8B,EAAet8B,YAGxD7F,QAAQC,IAAI,6BAA8BkiC,GAEpCzY,EAlB8C,uBAmB/CuX,EAAaxgC,MAAM,EAAG+V,IAnByB,CAoBlD8L,GApBkD,aAqB/C2e,EAAaxgC,MAAM+V,EAAQ,KAGhCxW,QAAQC,IAAI,2BAA4BypB,GAExCwX,EAAgBxX,GAEhBnD,GAAyB,GACzB8M,EAAa,IACbrkB,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GA3DH,iCA1DS,IAACoG,IA0DV,OAAH,yDA8DlBxI,qBAAU,WACR,IAAKs0B,EAAgB,UAAe,CAClC,IAAMr1B,EAAQq1B,EAAgB,MAC9B,GAAIr1B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/BuX,EAAgB,WACjB9hC,OAAOC,KAAK6hC,EAAiBtgC,MAAMtB,OAAS,GAExC4hC,EAAgB,KAAhB,SAUL,CAACA,IAUJt0B,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,IAEH11B,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,MAJC,QACVmB,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACpB,IAEJ,IAAMxT,EAAe,SAAC7d,GACpBuW,GAAyB,GACzB8M,EAAa,KAiBfrzB,QAAQC,IAAI,gBAAiB8hC,GAC7B,IAAMyf,EAAmB,SAACh+C,EAAMi+C,GAC9BpuB,EAAaouB,IAGf,OACE,kBAAC,IAAD,CACEryC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBlH,KAErC,gBACC+H,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,IACRqG,QAAS,QAEXvU,MAAM,gBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,yBAAK7sB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOqyC,YACd9iD,KAAK,cACLF,QACGsR,EAAQ0xC,aAAe5xC,EAAO4xC,cAC7B3xC,GACA0xB,EAAiBr1B,MAAjB,kBAEJzN,YACGqR,EAAQ0xC,aAAe5xC,EAAO4xC,cAC7B3xC,GACA0xB,EAAiBr1B,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEc,IAAK,EACLT,KAAM,SACND,MAAM,WACNE,MAAO+Q,EAAOoyC,OACd7iD,KAAK,SACLF,QACGsR,EAAQyxC,QAAU3xC,EAAO2xC,SACxB1xC,GAAgB0xB,EAAiBr1B,MAAjB,aAEpBzN,YACGqR,EAAQyxC,QAAU3xC,EAAO2xC,SACxB1xC,GAAgB0xB,EAAiBr1B,MAAjB,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,MACNE,MAAO+Q,EAAOwyC,IACdjjD,KAAK,MACLF,QACGsR,EAAQ6xC,KAAO/xC,EAAO+xC,MACrB9xC,GAAgB0xB,EAAiBr1B,MAAjB,UAEpBzN,YACGqR,EAAQ6xC,KAAO/xC,EAAO+xC,MACrB9xC,GAAgB0xB,EAAiBr1B,MAAjB,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOsyC,WACd/iD,KAAK,aACLF,QACGsR,EAAQ2xC,YAAc7xC,EAAO6xC,aAC5B5xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJzN,YACGqR,EAAQ2xC,YAAc7xC,EAAO6xC,aAC5B5xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOuyC,WACdhjD,KAAK,aACLF,QACGsR,EAAQ4xC,YAAc9xC,EAAO8xC,aAC5B7xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJzN,YACGqR,EAAQ4xC,YAAc9xC,EAAO8xC,aAC5B7xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKlR,UAAU,yBACb,kBAAC2Y,GAAD,CACE5T,KAAMC,EACNtE,YAAY,aACZrB,MAAM,eACNI,SAAUsjD,MAKhB,yBAAK/iD,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAOpH,QACdrJ,KAAK,UACLF,QACGsR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACA0xB,EAAiBr1B,MAAjB,cAEJzN,YACGqR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACA0xB,EAAiBr1B,MAAjB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAKtB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOw6B,eACdjrC,KAAK,iBACLF,QACGsR,EAAQ65B,gBAAkB/5B,EAAO+5B,iBAChC95B,GACA0xB,EAAiBr1B,MAAjB,qBAEJzN,YACGqR,EAAQ65B,gBAAkB/5B,EAAO+5B,iBAChC95B,GACA0xB,EAAiBr1B,MAAjB,qBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,6BC9jB5BwM,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG3e,IAAXuuB,QAuBFC,GAAU,SAAC,GAA6C,IAA3CrrB,EAA0C,EAA1CA,KAAMqgC,EAAoC,EAApCA,gBAAoC,EAC7B5zB,oBAAS,GADoB,mBACpD8Q,EADoD,KAC3CC,EAD2C,OAED/Q,oBAAS,GAFR,mBAEpD8e,EAFoD,KAE7BC,EAF6B,KAIrD9X,EAAUC,eAJ2C,EAMFtH,EACvD,GACA,eARyD,mBAM/B41B,GAN+B,WAUrDC,EAAoB,uCAAG,WAAO/hC,GAAP,iBAAA+L,EAAA,sEACK+1B,EAA0B,CACxDpjC,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrBgiC,EADqB,SAU2B,OAA7BA,EAAkB1+B,SAzCd+Q,EA0CH,gBAzC5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAuCnC0tB,EAAkBpiC,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KAC1DkgC,EAAgB+B,IAbS,iCA/BC,IAAC5tB,IA+BF,OAAH,sDAiB1B,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,KAEpCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,cACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,SACNob,UAAU,SACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,SACNob,UAAU,cACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BAAKlW,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BA+BvC,kBAAC,GAAD,CACExM,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,cAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMmf,EAAqB5lB,EAAOnc,KAC7Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAAC,GAAD,CACE6U,aAAcpgC,EACdqgC,gBAAiBA,EACjB3a,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvB5W,SAAU4kB,MAsKLW,iBA3JM,SAAC,GAAuB,EAArBxY,QAAsB,IAAD,EACHjH,mBAAS,IADN,mBACpC2zB,EADoC,KACtBC,EADsB,OAGMh0B,EAC/C,GACA,aALyC,mBAGpCg2B,EAHoC,KAGrBC,EAHqB,KAQ3CnjC,QAAQC,IAAI,YAAaijC,GAEzBr2B,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACKo2B,EAAwB,IAD7B,OACbI,EADa,OAGnBrC,EAAgBqC,GAHG,2CAAH,qDAKlBC,KACC,IAEH,IAnB2C,EA4Bel2B,oBAAS,GA5BxB,mBA4BpCgZ,EA5BoC,KA4BbC,EA5Ba,KA0DrC1lB,EAjBAogC,GAAgBA,EAAa1hC,OAAS,EACxB0hC,EAAanhC,KAAI,SAACQ,GAChC,MAAO,CACLhC,KAAMgC,EAAKhC,KACX2H,MAAO3F,EAAK2F,MACZm7C,YAAa9gD,EAAK8gD,YAClBD,OAAQ7gD,EAAK6gD,OACbpY,YAAazoC,EAAKyoC,YACdryB,IAAOpW,EAAKyoC,aAAa99B,OAAO,wBAChC,OAKI,GAKhB,OACE,oCAIE,yBAAKxM,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,UAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,kBACZjB,SAAU,SAAC8R,GAAD,OAvDD,SAAChS,GACpB,GAAIklC,EAAcriC,KAAKtB,OAAS,EAAG,CACjC,IAAM0jC,EAAkBC,EAAcriC,KAAKuf,QAAO,SAAC9f,GAAD,OAChDA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCooB,EAAgB+B,IAkDSzV,CAAaxd,EAAE/F,OAAOjM,WAK3C,yBACEiB,MAAO,CACLiV,QAAS,OACTE,WAAY,WAGb6sB,GAAgBA,EAAa1hC,OAAS,GACrC,oCACE,yBACEN,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZ4B,YAAa,SAGf,kBAAC,WAAD,CACEgW,SAAU,iBACVnrB,KAAMA,EACNwK,QAjEF,CACd,CAAEvN,MAAO,OAAQiB,IAAK,QACtB,CAAEjB,MAAO,QAASiB,IAAK,SACvB,CAAEjB,MAAO,cAAeiB,IAAK,eAC7B,CAAEjB,MAAO,SAAUiB,IAAK,UACxB,CAAEjB,MAAO,SAAUiB,IAAK,iBAyDV,iBAOA,0BACEE,MAAO,CACLsW,MAAO,UACPO,WAAY,SAGd,kBAACsoB,GAAA,EAAD,SAKR,kBAAC,IAAD,CAEE3/B,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,aAWJ,yBAAK9nB,UAAU,uCASf,yBAAKA,UAAU,uCACZykC,EAAc92B,MAAQ60B,EAAa1hC,OAAS,GAC3C,kBAAC,GAAD,CAAS2hC,gBAAiBA,EAAiBrgC,KAAMogC,IAElDiC,EAAc/2B,WAAa,kBAACshB,GAAD,MAC3ByV,EAAc92B,QAAU60B,EAAa1hC,OAAS,IAC7C,kBAAC,GAAD,CAAOsC,MAAM,qBAKlBqhC,EAAc92B,MACb,kBAACu1C,GAAD,CACEzgB,gBAAiBA,EACjB5a,sBAAuBA,EACvBC,yBAA0BA,EAC1B0a,aAAciC,EAAcriC,WCxVhCwN,IAFa6I,KAAXD,OAEiB3I,MAAaC,MAAM,KAEtCG,GAAgB,CACpB9I,UAAW,GACXC,SAAU,GACV8B,QAAS,GACTw5C,OAAQ,KACRC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,IAAK,GACLt7C,MAAO,GACPD,MAAO,GACPujC,eAAgB,GAChBR,YAAa,IAWTtmB,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAyf/BmsC,GA9eQ,SAAC,GAKV,IAJZp7B,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACA/e,EAEW,EAFXA,SACAo6C,EACW,EADXA,YACW,EACwC10C,EACjD,GACA,eAHS,mBACJi0B,EADI,KACcC,EADd,OAK6C9zB,mBAAS,IALtD,mBAKJ+zB,EALI,aAMuC/zB,mBAAS,KANhD,gCAQiCA,mBAAS,KAR1C,mBAQYo0B,GARZ,aAS2Bp0B,mBAAS,IATpC,mBASSs0B,GATT,aAWwC10B,EACjD,GACA,eAbS,mBAWc40B,GAXd,aAgBkC50B,EAAe,GAAI,YAhBrD,mBAgBJ60B,EAhBI,KAgBWC,EAhBX,OAiBkB10B,mBAAS,IAjB3B,mBAiBJ7J,EAjBI,KAiBE4vB,EAjBF,KAmBXxmB,qBAAU,WACJrF,GAAYnI,OAAOC,KAAKkI,GAAUjI,OAAS,GAC7C8zB,EAAa7rB,EAAQ,eAEtB,CAACA,IAEJ,IAAMsH,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACUq0B,EAAuB,CAClD1hC,WAAY,CACVE,aAAc,CACZoB,GAAIwG,EAASxG,KAGjB4D,KAAM,CACJqB,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MAAMojB,OACpBzhB,QAASoH,EAAOpH,QAAQyhB,OACxBxjB,UAAWmJ,EAAOnJ,UAAUwjB,OAC5BvjB,SAAUkJ,EAAOlJ,SAASujB,OAC1BmgB,eAAgBx6B,EAAOw6B,eAAengB,OACtCm4B,IAAKxyC,EAAOwyC,IACZF,WAAYtyC,EAAOsyC,WAAWj4B,OAC9Bk4B,WAAYvyC,EAAOuyC,WAAWl4B,OAC9B+3B,OAAQpyC,EAAOoyC,OACfC,YAAaryC,EAAOqyC,YAAYh4B,OAChC2f,YAAatlC,KAnBE,QACb0+B,EADa,SAwB6B,OAA1BA,EAAe79B,QA7ER+Q,OA8E3B6I,EA7EJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,gBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BA4EzCqsC,EAAY,eACPzf,EADM,CAET7jC,KAAM6jC,EAAev8B,UAAY,IAAMu8B,EAAet8B,YAGxD0gB,GAAyB,GACzBvX,EAAQ2a,aAERlH,KAGFzT,EAAQC,eAAc,GAtCH,iCArDS,IAACoG,IAqDV,OAAH,wDAyClBxI,qBAAU,WACR,IAAKs0B,EAAgB,UAAe,CAClC,IAAMr1B,EAAQq1B,EAAgB,MAC9B,GAAIr1B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAS/BuX,EAAgB,WACjB9hC,OAAOC,KAAK6hC,EAAiBtgC,MAAMtB,OAAS,GAExC4hC,EAAgB,KAAhB,SAUL,CAACA,IAUJt0B,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACU+0B,EAAuB,IADjC,QACbQ,EADa,SAIGA,EAAe/iC,OAAS,IAEtCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GACzC,MAAO,CACL9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGlBojC,EAAkBD,IAZD,2CAAH,qDAgBlBc,KACC,IAEH11B,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUi1B,EAAoB,CAC5CtiC,WAAY,CACVE,aAAc,CACZkG,QAASu7B,MAJC,QACVmB,EADU,SAUGA,EAAYjjC,OAAS,IAEhCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACnC,MAAO,CACL/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGfsjC,EAAeD,IAlBD,2CAAH,qDAsBfc,KACC,CAACpB,IAEJ,IAAMxT,EAAe,SAAC7d,GACpBuW,GAAyB,IAiB3BvmB,QAAQC,IAAI,gBAAiB8hC,GAC7B,IAAMyf,EAAmB,SAACh+C,EAAMi+C,GAC9BpuB,EAAaouB,IAGf,OACE,kBAAC,IAAD,CACEryC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBlH,KAErC,gBACC+H,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEPsQ,UAAW,CACT/S,OAAQ,IACRqG,QAAS,QAEXvU,MAAM,gBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,yBAAK7sB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QACGsR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJzN,YACGqR,EAAQ9J,WAAa4J,EAAO5J,YAC3B6J,GACA0xB,EAAiBr1B,MAAjB,gBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QACGsR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJzN,YACGqR,EAAQ7J,UAAY2J,EAAO3J,WAC1B4J,GACA0xB,EAAiBr1B,MAAjB,eAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,gBACNE,MAAO+Q,EAAOqyC,YACd9iD,KAAK,cACLF,QACGsR,EAAQ0xC,aAAe5xC,EAAO4xC,cAC7B3xC,GACA0xB,EAAiBr1B,MAAjB,kBAEJzN,YACGqR,EAAQ0xC,aAAe5xC,EAAO4xC,cAC7B3xC,GACA0xB,EAAiBr1B,MAAjB,kBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEc,IAAK,EACLT,KAAM,SACND,MAAM,WACNE,MAAO+Q,EAAOoyC,OACd7iD,KAAK,SACLF,QACGsR,EAAQyxC,QAAU3xC,EAAO2xC,SACxB1xC,GAAgB0xB,EAAiBr1B,MAAjB,aAEpBzN,YACGqR,EAAQyxC,QAAU3xC,EAAO2xC,SACxB1xC,GAAgB0xB,EAAiBr1B,MAAjB,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QACGsR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQzJ,OAASuJ,EAAOvJ,QACvBwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,MACNE,MAAO+Q,EAAOwyC,IACdjjD,KAAK,MACLF,QACGsR,EAAQ6xC,KAAO/xC,EAAO+xC,MACrB9xC,GAAgB0xB,EAAiBr1B,MAAjB,UAEpBzN,YACGqR,EAAQ6xC,KAAO/xC,EAAO+xC,MACrB9xC,GAAgB0xB,EAAiBr1B,MAAjB,UAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOsyC,WACd/iD,KAAK,aACLF,QACGsR,EAAQ2xC,YAAc7xC,EAAO6xC,aAC5B5xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJzN,YACGqR,EAAQ2xC,YAAc7xC,EAAO6xC,aAC5B5xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,kBAItB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAO+Q,EAAOuyC,WACdhjD,KAAK,aACLF,QACGsR,EAAQ4xC,YAAc9xC,EAAO8xC,aAC5B7xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJzN,YACGqR,EAAQ4xC,YAAc9xC,EAAO8xC,aAC5B7xC,GACA0xB,EAAiBr1B,MAAjB,iBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKlR,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QACGsR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpBzN,YACGqR,EAAQ1J,OAASwJ,EAAOxJ,QACvByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKlR,UAAU,yBACb,kBAAC2Y,GAAD,CACE5T,KAAMC,EACNtE,YAAY,aACZrB,MAAM,eACNI,SAAUsjD,MAKhB,yBAAK/iD,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAO+Q,EAAOpH,QACdrJ,KAAK,UACLF,QACGsR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACA0xB,EAAiBr1B,MAAjB,cAEJzN,YACGqR,EAAQ/H,SAAW6H,EAAO7H,UACzB8H,GACA0xB,EAAiBr1B,MAAjB,cAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,eAKtB,yBAAKlR,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAO+Q,EAAOw6B,eACdjrC,KAAK,iBACLF,QACGsR,EAAQ65B,gBAAkB/5B,EAAO+5B,iBAChC95B,GACA0xB,EAAiBr1B,MAAjB,qBAEJzN,YACGqR,EAAQ65B,gBAAkB/5B,EAAO+5B,iBAChC95B,GACA0xB,EAAiBr1B,MAAjB,qBAEJ5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,6BCzOrBioB,IAhSiBxb,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OAMe,SAAC3X,GAAkB,IAAD,EACQpH,EAC7C,GACA,eAHqC,mBAChCsyB,EADgC,KAChBC,EADgB,OAKYvyB,EACjD,GACA,eAPqC,mBAKhCwyB,EALgC,KAKdC,EALc,OASKryB,oBAAS,GATd,mBAShCsxB,EATgC,KAShBC,EATgB,KAWjCl/B,EAASuuB,eACTuI,EAAQ92B,EAAM,GAZmB,EAaK2N,mBAAS,IAbd,mBAahCu0C,EAbgC,KAahBC,EAbgB,KAsDvC,OAvCAj1C,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACH0yB,EAAqB,CACrC//B,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,QACf7qB,EADe,SAYnBk2C,EAAkBl2C,GAZC,2CAAH,qDAgBpBotB,KACC,CAACvC,IAEJ5pB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf4yB,EAAuB,CAC3BjgC,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,2CAAH,qDAUpBoJ,KACC,CAACpJ,IAEJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAC3BK,QAAQC,IAAI,cAAeu/B,GAGzB,yBAAK/gC,UAAU,wBACb,yBAAKA,UAAU,iCACb,4CAEC+gC,EAAepzB,MACdy1C,GACAxiD,OAAOC,KAAKuiD,GAAgBtiD,OAAS,GACnC,oCACE,kBAACwiD,GAAD,CACEz7B,sBAAuBsY,EACvBrY,yBAA0BsY,EAC1Br3B,SAAUq6C,EACVD,YAAaE,IAEf,kBAAC,IAAD,CACE7xC,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHR,UAUR,kBAAC,KAAD,CAAUsC,UAAW,CAAEtR,KAAM,GAAK3N,QAASsvB,EAAerzB,WACvDqzB,EAAepzB,MACdy1C,KACExiD,OAAOC,KAAKuiD,GAAgBtiD,OAAS,IACrC,kBAAC,KAAD,CACE2B,YAAY,kBACZO,MAAOwS,KAAMI,yBAIlBmrB,EAAepzB,MACdy1C,GACAxiD,OAAOC,KAAKuiD,GAAgBtiD,OAAS,GACnC,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,qCACb,4BAAKojD,EAAc,MACnB,4BAAKA,EAAc,aAClBA,EAAc,aACb,2CAEE,8BAAOA,EAAc,cAGxBA,EAAc,QACb,sCAEE,8BAAOA,EAAc,SAIxBA,EAAc,KACb,mCAEE,8BAAOA,EAAc,MAIxBA,EAAc,aACb,sCAEE,8BACGA,EAAc,aACbnrC,IAAOmrC,EAAc,aAAiB52C,OACpC,0BAMT42C,EAAc,YACb,6CAEE,8BAAOA,EAAc,aAGxBA,EAAc,YACb,6CAEE,8BAAOA,EAAc,aAIxBA,EAAc,OACb,qCAEE,8BAAOA,EAAc,QAGxBA,EAAc,OACb,qCAEE,8BAAOA,EAAc,c,UCwC1B9nB,GA1NE,SAAC,GAMX,IALL2T,EAKI,EALJA,aACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,cAEAp3B,GACI,EAFJ0a,WAEI,EADJ1a,OACI,EAC0BlJ,mBAAS,IADnC,mBACGyjB,EADH,KAGEgd,GAHF,KAG+B,SAAC/9B,GAAO,IAAD,EAClC1R,EAAO0R,EAAE/F,OAAO3L,KAChBN,EAAQgS,EAAE/F,OAAOjM,MAEjB64C,EAAY,eACbjJ,GADa,oBAEftvC,EAAON,GAFQ,oBAGZ4vC,EAAc5sC,IAHF,IAUZwV,EAHGm3B,EAAU7tC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQktC,EAAc5sC,IAK1D+0B,EAAmB,uBACpB4X,EAAUltC,MAAM,EAAG+V,IADC,CAEvBqgC,GAFuB,aAGpBlJ,EAAUltC,MAAM+V,EAAQ,KAE7Bk3B,EAAa3X,KAGflpB,qBAAU,WACR,IAAMgqC,EAAY,eACbjJ,EADa,CAEhB3sC,IAAK8vB,EACL/vB,GAAI4sC,EAAc5sC,KAOdwV,EAHGm3B,EAAU7tC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQktC,EAAc5sC,IAK1D+0B,EAAmB,uBACpB4X,EAAUltC,MAAM,EAAG+V,IADC,CAEvBqgC,GAFuB,aAGpBlJ,EAAUltC,MAAM+V,EAAQ,KAE7Bk3B,EAAa3X,KACZ,CAAChF,IAWJ,OAFA/wB,QAAQC,IAAI,mBACZ2tC,GAEE,oCACE,yBAAKnvC,UAAU,sCACb,yBACEA,UAAU,qCACVQ,MAAO,CACL4W,UAAqB,IAAVW,EAAc,OAAS,WAGlCA,GACA,wBAAI/X,UAAU,wBAAwBQ,MAAO,IAA7C,QAKF,wBACEA,MAAO,CACL8Q,OAAQ,EACRqG,QAAS,EACTgH,cAAe,YACf9G,SAAU,OACVT,UAAW,SAGZ+3B,EAActvC,OAInB,yBACEW,MAAO,CACL4W,UAAqB,IAAVW,EAAc,OAAS,SAEpC/X,UAAU,yCAER+X,GACA,wBAAI/X,UAAU,wBAAwBQ,MAAO,IAA7C,UAKF,wBACEA,MAAO,CACL8Q,OAAQ,EACRqG,QAAS,EACTE,SAAU,OACVT,UAAW,SAGZ+3B,EAAcuT,SAInB,yBAAK1iD,UAAU,wCACX+X,GACA,wBACE/X,UAAU,wBACVQ,MAAO,CACLgc,aAAc,SAHlB,SASF,6BACE,kBAAC6Z,GAAD,CACE/2B,KAAK,SACLD,MAAO,GACPE,MAAO4vC,EAAc/rC,MACrBvD,KAAK,QACLJ,SAAU6vC,MAIhB,yBAAKtvC,UAAU,wCACX+X,GACA,wBACE/X,UAAU,wBACVQ,MAAO,CACLgc,aAAc,SAHlB,YAUF,kBAAC6Z,GAAD,CACE/2B,KAAK,SACLD,MAAO,GACPE,MAAO4vC,EAAc/qC,KACrBvE,KAAK,WACLJ,SAAU6vC,KAGd,yBAAKtvC,UAAU,wCACX+X,GACA,wBACE/X,UAAU,wBACVQ,MAAO,CACLgc,aAAc,SAHlB,SAUF,kBAAC6Z,GAAD,CACE/2B,KAAK,SACLD,MAAO,GACPE,MAAO4vC,EAAc3jC,OACrB3L,KAAK,QACLJ,SAAU6vC,KAGd,yBAAKtvC,UAAU,wCACX+X,GACA,wBACE/X,UAAU,wBACVQ,MAAO,CACLgc,aAAc,SAHlB,YAUF,kBAAC6Z,GAAD,CACE/2B,KAAK,SACLD,MAAO,GACPE,MAAO4vC,EAAc3jC,OACrB3L,KAAK,WACLJ,SAAU6vC,KAId,yBACE99B,QAAS,kBAhJa,WAC5B,IAAM+9B,EAAsBL,EAAUvtB,QACpC,SAAC9f,GAAD,OAAUA,EAAKU,KAAO4sC,EAAc5sC,MAEtC0sC,EAAaM,GA4IQ8I,IACfr4C,UAAU,sCACVQ,MAAO,CACL4W,UAAqB,IAAVW,EAAc,OAAS,UAGpC,0BACEvX,MAAO,CACLsW,MAAO,2BACPQ,OAAQ,YAGV,kBAACwN,GAAA,EAAD,WC7LNlV,GAAmBC,MAAaC,MAAM,IAetCkU,GAAwB,SAACpN,GAC7BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAIxC7G,GAAgB,CACpBu/B,UAAW,GACXhqC,MAAO,IAUHoiB,GAAsB,SAAC,GAKvB,EAJJC,sBAIK,IAHLC,EAGI,EAHJA,yBACA2nB,EAEI,EAFJA,cACAC,EACI,EADJA,iBACI,EACiDjhC,EACnD,GACA,wBAHE,mBACGkhC,EADH,KACsBC,EADtB,OAMqCnhC,EAAe,GAAI,aANxD,mBAMGgkB,EANH,KAMenB,EANf,KAQJljB,qBAAU,YACO,uCAAG,sBAAAE,EAAA,sEACWgjB,EAAmB,IAD9B,yDAAH,qDAGfsB,KACC,IAbC,MAe4B/jB,oBAAS,GAfrC,gCAgB8BA,mBAAS,KAhBvC,mBAgBGqgC,EAhBH,KAgBcD,EAhBd,OAiByBpgC,mBAAS,IAjBlC,gCAkB2BA,mBAAS,KAlBpC,mBAkBG00C,EAlBH,KAkBUC,EAlBV,KAoBJjiD,QAAQC,IAAI,uBAAwB0tC,GAEpC,IAAM7+B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,uBAAAjC,EAAA,6DACbm1C,EAAgBF,EAAQA,EAAMniD,MAAM,KAAK,GAAK,GAC9CsiD,EAAiBH,EACnBA,EAAMniD,MAAM,KAAK,IACjBmiD,EAAMniD,MAAM,KAAK,GAAG,IACO,MAA3BmiD,EAAMniD,MAAM,KAAK,GAAG,GAClBmiD,EAAMniD,MAAM,KAAK,GAAG,GACpBmiD,EAAMniD,MAAM,KAAK,GACnB,GACEuiD,EACJzU,GAAaA,EAAUpuC,OAAS,EAC5BouC,EAAU7tC,KAAI,SAACQ,GACb,OAAO,eACFA,EADL,CAEE+hD,MAAO/hD,EAAK+hD,OAAS/hD,EAAK+hD,MAAQ,EAClCC,SAAUhiD,EAAKgiD,UAAYhiD,EAAKgiD,SAAW,EAC3ChR,MAAOhxC,EAAKgxC,OAAShxC,EAAKgxC,MAAQ,EAClCiR,SAAUjiD,EAAKiiD,UAAYjiD,EAAKiiD,SAAW,EAC3CvhD,GAAG,GAAD,OAAK2sC,EAAUpuC,aAGrB,GACAsB,EAAO,CACXmhD,MAAOG,GAAkBA,EAAiB,GAC1CK,KAAMN,GAAiBA,EAAgB,GACvCx5C,MAAO05C,GAzBU,SA2BW/T,EAAwB,CACpDzpC,KAAM/D,IA5BW,QA2BbytC,EA3Ba,SAgC+B,OAA3BA,EAAgBhqC,QAvFV+Q,OAwF3B6I,EAvFJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,wBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqFzC44B,EAAiB,CAAC,aAEdntC,GAAIstC,EAAe,KAAW,GAC9BvvC,IAAKuvC,EAAe,KAAW,IAE5BA,IALS,oBAOXJ,KAELl/B,EAAQ2a,YACR+jB,EAAa,IACbuU,EAAc,IACd17B,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GAnDH,iCAvDS,IAACoG,IAuDV,OAAH,wDAsDlBxI,qBAAU,WACR,IAAKuhC,EAAiB,UAAe,CACnC,IAAMtiC,EAAQsiC,EAAiB,MAC/B,GAAItiC,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,GAEzDF,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,aAOjC,CAACwkB,IA2BJvhC,qBAAU,WACR,GAAIqkB,EAAW9kB,MAAQ8kB,EAAWrwB,MAAQqwB,EAAWrwB,KAAKtB,OAAS,EAAG,CACpE,IAAM0E,EAAQitB,EAAWrwB,KAAKf,KAAI,SAAC4I,GACjC,OAAO,eACFA,EADL,CAEEzH,IAAKyH,EAAMzH,IACXohD,MAAO35C,EAAM25C,MACbC,SAAU55C,EAAM45C,SAChBhR,MAAO5oC,EAAM4oC,MACbiR,SAAU75C,EAAM65C,cAGpB7U,EAAazpC,MAEd,CAACitB,EAAWrwB,OAEf,IAKM4hD,EAAoB,SAACj/C,EAAMi+C,GAC/BQ,EAAcR,IAIhB,OACE,oCACE,kBAAC,IAAD,CACEryC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,cACCa,aADD,EAECR,OAFD,IAGCD,EAHD,EAGCA,aAHD,EAICU,OAJD,EAKCL,QALD,EAMCM,aAND,EAOCC,QAPD,EAQCE,WARD,EASCD,gBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,IAAKnR,KAAN,CACEC,eACEyvC,EAAkBtiC,MAAlB,YACAsiC,EAAkBtiC,MAAlB,YACI,QACA,GAENlN,KACEwvC,EAAkBtiC,MAAlB,YACAsiC,EAAkBtiC,MAAlB,aAIF,wBAAIrN,UAAU,mBAAd,QACA,kBAAC,KAAD,eACEyb,OAAO,QACP/a,YAAa,YACbV,UAAU,iBACVQ,MAAO,CACLgT,MAAO,OACPqe,YAAa,QAEfpyB,SAAUukD,GACLT,GAAS,CACZ/jD,aAAcyY,IAAOsrC,OAK3B,yBACE/iD,MAAO,CACL4W,UAAW,UAId83B,GAAaA,EAAU,IACtB,wBAAIlvC,UAAU,kCACZ,8BACE,kBAACikD,GAAA,EAAD,OAFJ,UAQF,yBACEzjD,MAAO,CACL4W,UAAW,UAIf,yBAAKpX,UAAU,gCACZkvC,EAAU7tC,KAAI,SAAC0uC,EAAeh4B,GAC7B,OACE,kBAAC,GAAD,CACEA,MAAOA,EACP0a,WAAYA,EACZ0c,cAAeY,EACfb,UAAWA,EACXD,aAAcA,OAKnBxc,EAAW9kB,MAAQuhC,IAAcA,EAAU,IAC1C,yBACE1uC,MAAO,CACL4W,UAAW,MACX5D,MAAO,OACPiC,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,CACEjT,YAAY,WACZO,MAAOwS,KAAMI,0BAIlB6c,EAAW/kB,WACV,yBACElN,MAAO,CACLmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,QAKN,yBACEnV,MAAO,CACLmX,QAAS,OACTlC,QAAS,OACTC,eAAgB,aAGlB,kBAAC,IAAD,CACElV,MAAO,CACLsW,MAAO,OACPS,YAAa,QAEfvX,UAAU,oCACVwR,QAAS,kBAAMsW,GAAyB,IACxCxoB,KAAK,WAPP,UAYA,kBAAC,IAAD,CACEU,UAAU,6BACVwR,QAASnB,EACToB,QAASk+B,EAAkBjiC,UAC3BpO,KAAK,OACLyD,KAAM,kBAAC8hB,GAAA,EAAD,OALR,mBAqDC0U,GApCK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACA2nB,EAEW,EAFXA,cACAC,EACW,EADXA,iBAMA,OACE,kBAAC,KAAD,CACElvC,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,oBACNuc,QAASkI,EACTzD,SAXiB,WACnB0D,GAAyB,IAWvB4E,gBAAgB,EAChBC,QAAQ,EACRnZ,MAAO,OACP6Q,UAAW,CACT/S,OAAQ,IACRqG,QAAS,SAGX,kBAAC,GAAD,CACEkQ,sBAAuBA,EACvBC,yBAA0BA,EAC1B2nB,cAAeA,EACfC,iBAAkBA,MC7WpBwU,GAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGIzkC,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,kBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAwBvC4G,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QAGF+P,IAH0B9P,KAAhBC,YACG0R,IAAX9B,OAEQ,SAAC,GAA0B,IAAxBprB,EAAuB,EAAvBA,KAAMm2B,EAAiB,EAAjBA,WAAiB,EACV1pB,oBAAS,GADC,gCAEkBA,oBAAS,IAF3B,gCAGOJ,EAC7C,GACA,uBALsC,mBAGjB+pB,GAHiB,WAQlC1iB,EAAUC,eAEV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAC/B4Z,GAAwB,yBAClBkZ,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACrDg2B,EAAWI,IAbS,2CAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAMEre,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,8BAAoCya,EAAOnc,MAE7C/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,8BAAoCya,EAAOnc,MAE7C/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,GAAQ8/C,GAAO9/C,QAMxB,kBAAC,GAAD,CACEhB,MAAM,eACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,cACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,cACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,iBACNob,UAAU,gBACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEA,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,kBAAC,KAAD,CACE6K,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,gBAgNH+T,GAnMC,SAAC,GAAe,qBACAhqB,mBAAS,IADV,mBACtBiqB,EADsB,KACbP,EADa,KAG7Bh3B,QAAQC,IAAI,gBAAiBs3B,GAHA,MAIUrqB,EAAe,GAAI,mBAJ7B,mBAItB4iB,EAJsB,KAIZC,EAJY,KAM7BljB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,IADxB,OACRnsB,EADQ,OAGdozB,EAAWpzB,GAHG,2CAAH,qDAKbygB,KACC,IAb0B,MAeYnX,EAAe,GAAI,UAf/B,gCAgB6BI,oBAAS,IAhBtC,mBAgBtBgZ,EAhBsB,KAgBCC,EAhBD,KAqGvB1lB,EAjBA02B,GAAWA,EAAQh4B,OAAS,EACdg4B,EAAQz3B,KAAI,SAACQ,GAC3B,MAAO,CACLkiD,KAAMliD,EAAKkiD,KACXR,MAAO1hD,EAAK0hD,MAAQW,GAAOriD,EAAK0hD,OAAS,GACzCY,YAAatiD,EAAKsiD,YAClBC,WAAYviD,EAAKuiD,WACjBC,cAAexiD,EAAKwiD,cACpBC,WAAYziD,EAAKyiD,WACjBC,cAAe1iD,EAAK0iD,kBAKZ,GAKhB,OACE,oCACE,yBAAKvkD,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,mBAYF,yBACEQ,MAAO,CACLiV,QAAS,OACTE,WAAY,WAGbmjB,GAAWA,EAAQh4B,OAAS,GAC3B,oCACE,yBACEN,MAAO,CACLiV,QAAS,OACTE,WAAY,SACZ4B,YAAa,SAGf,kBAAC,WAAD,CACEgW,SAAU,mBACVnrB,KAAMA,EACNwK,QAjEF,CACd,CAAEvN,MAAO,OAAQiB,IAAK,QACtB,CAAEjB,MAAO,QAASiB,IAAK,SACvB,CAAEjB,MAAO,eAAgBiB,IAAK,eAC9B,CAAEjB,MAAO,cAAeiB,IAAK,cAC7B,CAAEjB,MAAO,iBAAkBiB,IAAK,iBAChC,CAAEjB,MAAO,cAAeiB,IAAK,cAC7B,CAAEjB,MAAO,iBAAkBiB,IAAK,mBAuDlB,iBAOA,0BACEE,MAAO,CACLsW,MAAO,UACPO,WAAY,SAGd,kBAACsoB,GAAA,EAAD,SAMR,kBAAC,IAAD,CAEE3/B,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,aAUJ,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASy3B,WAAYA,EAAYn2B,KAAM02B,IAExCzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,mBACZO,MAAOwS,KAAMI,4BAOvB,kBAAC,GAAD,CACE65B,cAAe3W,EACf4W,iBAAkBnX,EAClB1Q,sBAAuBA,EACvBC,yBAA0BA,MCvY1BpK,GAAwBC,KAAxBD,OAGFwmC,IAH0BvmC,KAAhBC,YACG0R,IAAX9B,OAEO,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAyPa2L,GAlPQ,SAACtjB,GAAkB,IAAD,EACQpH,EAC7C,GACA,yBAHqC,mBAChCsyB,EADgC,KAChBC,EADgB,OAKYvyB,EACjD,GACA,eAPqC,mBAKhCwyB,EALgC,KAKdC,EALc,KAUjCprB,EAAUC,eAVuB,EAWKlH,oBAAS,GAXd,gCAYGA,mBAAS,KAZZ,mBAYhCwxB,EAZgC,KAYjBS,EAZiB,KAcvCv/B,QAAQC,IAAI,6BAA8B6+B,GAE1C,IAAMn/B,EAASuuB,eACTuI,EAAQ92B,EAAM,GAwCpB,OAtCAkN,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACH0yB,EAAqB,CACrC//B,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,QACf7qB,EADe,SAYnB2zB,EAAiB3zB,GAZE,2CAAH,qDAgBpBotB,KACC,CAACvC,IAEJ5pB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf4yB,EAAuB,CAC3BjgC,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,2CAAH,qDAUpBoJ,KACC,CAACpJ,IAEJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAGzB,yBAAKlB,UAAU,wBACb,yBAAKA,UAAU,iCACb,qDAEF,kBAAC,KAAD,CAAU0wB,UAAW,CAAEtR,KAAM,GAAK3N,QAASsvB,EAAerzB,WACvDqzB,EAAepzB,MACd0yB,KACEz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IACpC,kBAAC,KAAD,CACE2B,YAAY,mBACZO,MAAOwS,KAAMI,yBAIlBmrB,EAAepzB,MACd0yB,GACAz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAClC,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,qCACZqgC,EAAa,MACZ,oCAEE,8BAAOA,EAAa,OAGvBA,EAAa,OACZ,qCAEE,8BACGA,EAAa,OAAa6jB,GAAO7jB,EAAa,SAIpDA,EAAa,aACZ,4CAEE,8BAAOA,EAAa,cAIvBA,EAAa,WACZ,2CAEE,8BAAOA,EAAa,aAGtB,GAGDA,EAAa,eACZ,8CAEE,8BAAOA,EAAa,gBAGvBA,EAAa,YACZ,2CAEE,8BAAOA,EAAa,aAGvBA,EAAa,eACZ,8CAEE,8BAAOA,EAAa,mBAQjCU,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GACxC,oCACE,yBAAKd,UAAU,iCACb,wCAKR,yBAAKA,UAAU,8BACZ+gC,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GAC1CigC,EAAe3+B,KAAf,SACE2+B,EAAe3+B,KAAf,MAA6BtB,OAAS,IACtC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,0CACZO,MAAOwS,KAAMI,0BAKpBmrB,EAAepzB,MACdozB,EAAe3+B,MACfxB,OAAOC,KAAKkgC,EAAe3+B,MAAMtB,OAAS,GAC1CigC,EAAe3+B,KAAf,OACA2+B,EAAe3+B,KAAf,MAA6BtB,OAAS,GACpC,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UACE,+FAEJ6G,KAAK,QACL8D,WAAY2iB,EAAe3+B,KAAf,MACZic,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL/d,MAAO,CACLsW,MAAO,qBAKb,kBAAC,GAAD,CACE1T,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAGtC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,eACNob,UAAU,cACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,WACNob,UAAU,WACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,WACNob,UAAU,WACVle,IAAI,KACJN,UAAU,8BChQtB4P,GAAmBC,MAAaC,MAAM,IAUtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpB/F,MAAO,GACP9B,OAAQ,MA+PKmxB,GApPK,SAAC,GAMP,IALZ1R,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACAgR,EAGW,EAHXA,QACAP,EAEW,EAFXA,WACAj2B,EACW,EADXA,SACW,EAC8BmM,EAAe,GAAI,iBADjD,mBACJgyB,EADI,KACSC,EADT,OAEqB7xB,oBAAS,GAF9B,mBAEJkR,EAFI,KAEMF,EAFN,OAG6BhR,oBAAS,GAHtC,mBAGJ+qB,EAHI,KAGUC,EAHV,OAIkBhrB,mBAAS,IAJ3B,mBAIJ7J,EAJI,KAIE4vB,EAJF,OAKyB/lB,mBAAS,IALlC,mBAKJ7D,EALI,UASXoD,qBAAU,WACL9L,GAAYA,EAASyC,MACpB6vB,EAAatyB,EAASyC,QAE1B,CAACzC,IAbQ,MAgB0CmM,EACnD,GACA,aAlBS,mBAgBei2B,GAhBf,aAqB6C71B,mBAAS,IArBtD,6BAuBXT,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWo2B,EAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAAM10B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,sEACKoyB,EAAkB,CAC5Cz/B,WAAY,CACXE,aAAc,CACboB,GAAID,EAASC,IAAMD,EAASE,MAG1B2D,KAAM,CACJ+D,MAAOoG,EAAOpG,MAAMygB,OACpBviB,OAAQkI,EAAOlI,OACfrD,KAAMC,EACNiF,MAAOe,KAXQ,QACb21B,EADa,SAgBmB,OAArBA,EAAU96B,QAjFE+Q,OAkF3B6I,EAjFJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,kBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAqFxCiB,EAJkB,WACvB,OAAO+gB,EAAQz3B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQK,EAASC,IAAMD,EAASE,KAGvDwoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAIgV,EAAQ/gB,GAA1BnX,OAAA,IAAAA,CAAA,GAAuC+/B,IACrD1V,EAZyC,uBAYrB6N,EAAQ92B,MAAM,EAAG+V,IAZI,CAYI8L,GAZJ,aAYoBiV,EAAQ92B,MAAM+V,EAAQ,KACzFwgB,EAAWtN,GAEN1a,EAAQ2a,YACRpD,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GArCH,iCAjES,IAACoG,IAiEV,OAAH,wDAwClBxI,qBAAU,WACR,IAAKqyB,EAAW,UAAe,CAC7B,IAAMpzB,EAAQozB,EAAW,MACzB,GAAIpzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAQ7BsV,EAAW,WAAiB7/B,OAAOC,KAAK4/B,EAAYr+B,MAAMtB,OAAS,GAClE2/B,EAAW,KAAX,SAUL,CAACA,IAEJ,IAAMrR,EAAe,SAAC7d,GACpBuW,GAAyB,IAUrBi7B,EAAmB,SAACh+C,EAAMi+C,GAC9BpuB,EAAaouB,IAIf,OACE,kBAAC,IAAD,CACEryC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyB3N,KAErC,gBACCwO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,kBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,kBAAC5tB,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOpG,MACdrK,KAAK,QACLF,QACGsR,EAAQ/G,OAAS6G,EAAO7G,QACvB8G,GAAgByvB,EAAYpzB,MAAZ,YAEpBzN,YACGqR,EAAQ/G,OAAS6G,EAAO7G,QACvB8G,GAAgByvB,EAAYpzB,MAAZ,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACjS,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOlI,OACdvI,KAAK,SACLP,KAAM,SACNS,IAAK,EACLJ,QACGsR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgByvB,EAAYpzB,MAAZ,aAEpBzN,YACGqR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgByvB,EAAYpzB,MAAZ,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACyH,GAAD,CACE5T,KAAMC,EACNtE,YAAY,aACZrB,MAAM,OACNI,SAAUsjD,IAGZ,yBACEviD,MAAO,CACL4W,UAAW,WAYjB,kBAAC,GAAD,CACEwI,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC3Q5BlQ,GAAmBC,MAAaC,MAAM,IAUtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpB/F,MAAO,GACP9B,OAAQ,MA4OKmxB,GAlOK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAgR,EAEW,EAFXA,QACAP,EACW,EADXA,WACW,EAC8B9pB,EAAe,GAAI,cADjD,mBACJgyB,EADI,KACSC,EADT,OAEqB7xB,oBAAS,GAF9B,mBAEJkR,EAFI,KAEMF,EAFN,OAG6BhR,oBAAS,GAHtC,mBAGJ+qB,EAHI,KAGUC,EAHV,OAIkBhrB,mBAAS,IAJ3B,mBAIJ7J,EAJI,KAIE4vB,EAJF,OAKyB/lB,mBAAS,IALlC,mBAKJ7D,EALI,aAO0CyD,EACnD,GACA,cATS,mBAOei2B,GAPf,aAY6C71B,mBAAS,IAZtD,6BAcXT,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWo2B,EAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAAM10B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACKoyB,EAAkB,CACxCv6B,KAAM,CACJ+D,MAAOoG,EAAOpG,MAAMygB,OACpBviB,OAAQkI,EAAOlI,OACfrD,KAAMC,EACNiF,MAAOe,KANQ,QACb21B,EADa,SAWmB,OAArBA,EAAU96B,QAjEE+Q,OAkE3B6I,EAjEJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,kBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAgEzCyhB,EAAW,CAAC,eAGLoI,EAHG,CAINp+B,GAAIo+B,EAAS,KAAW,GACxBrgC,IAAKqgC,EAAS,KAAW,MALnB,oBAOL7H,KAELvoB,EAAQ2a,YACRpD,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GA7BH,iCAtDS,IAACoG,IAsDV,OAAH,wDAgClBxI,qBAAU,WACR,IAAKqyB,EAAW,UAAe,CAC7B,IAAMpzB,EAAQozB,EAAW,MACzB,GAAIpzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAQ7BsV,EAAW,WAAiB7/B,OAAOC,KAAK4/B,EAAYr+B,MAAMtB,OAAS,GAClE2/B,EAAW,KAAX,SAUL,CAACA,IAEJ,IAAMrR,EAAe,SAAC7d,GACpBuW,GAAyB,IAUrBi7B,EAAmB,SAACh+C,EAAMi+C,GAC9BpuB,EAAaouB,IAIf,OACE,kBAAC,IAAD,CACEryC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,kBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,kBAAC5tB,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOpG,MACdrK,KAAK,QACLF,QACGsR,EAAQ/G,OAAS6G,EAAO7G,QACvB8G,GAAgByvB,EAAYpzB,MAAZ,YAEpBzN,YACGqR,EAAQ/G,OAAS6G,EAAO7G,QACvB8G,GAAgByvB,EAAYpzB,MAAZ,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACjS,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOlI,OACdvI,KAAK,SACLP,KAAM,SACNS,IAAK,EACLJ,QACGsR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgByvB,EAAYpzB,MAAZ,aAEpBzN,YACGqR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgByvB,EAAYpzB,MAAZ,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACyH,GAAD,CACE5T,KAAMC,EACNtE,YAAY,aACZrB,MAAM,OACNI,SAAUsjD,KAiBd,kBAAC,GAAD,CACEnjC,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC9O5BL,GAA0B,SAAC7I,GAC/BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,kBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAwBvC4G,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAEFC,GAAU,SAAC,GAA0B,IAAxBrrB,EAAuB,EAAvBA,KAAMm2B,EAAiB,EAAjBA,WAAiB,EACV1pB,oBAAS,GADC,mBACjC8Q,EADiC,KACxBC,EADwB,OAEkB/Q,oBAAS,GAF3B,mBAEjC8e,EAFiC,KAEVC,EAFU,OAGOnf,EAC7C,GACA,iBALsC,mBAGjB+pB,GAHiB,WAQlC1iB,EAAUC,eAEV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAC/B4Z,GAAwB,mBAClBkZ,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACrDg2B,EAAWI,IAbS,2CAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAMEre,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,QACNob,UAAU,QACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,yBAA+Bya,EAAOnc,KAEtCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,SACNob,UAAU,SACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BAAKlW,GAAQ6T,IAAO7T,GAAMoI,OAAO,6BAKvC,kBAAC,GAAD,CACExM,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,gBAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAAC,GAAD,CACEmL,QAAS12B,EACTm2B,WAAYA,EACZzQ,yBAA0BlI,EAC1BiI,sBAAuBlI,EACvBrd,SAAUqrB,MAqMLkL,GA5LC,SAAC,GAAe,qBACAhqB,mBAAS,IADV,mBACtBiqB,EADsB,KACbP,EADa,OAGU9pB,EAAe,GAAI,eAH7B,mBAGtB4iB,EAHsB,KAGZC,EAHY,KAK7BljB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,IADxB,OACRnsB,EADQ,OAGdozB,EAAWpzB,GAHG,2CAAH,qDAKbygB,KACC,IAZ0B,MAcYnX,EAAe,GAAI,UAd/B,gCAe6BI,oBAAS,IAftC,mBAetBgZ,EAfsB,KAeCC,EAfD,KAiGvB1lB,EAfD02B,GAAWA,EAAQh4B,OAAS,EACbg4B,EAAQz3B,KAAI,SAAAQ,GAC1B,MAAO,CACLqI,MAAOrI,EAAKqI,MACZ9B,OAAQvG,EAAKuG,OACbrD,KAAOlD,EAAKkD,KAAOkT,IAAOpW,EAAKkD,MAAMyH,OAAO,wBAA0B,OAMhE,GASd,OACE,oCACE,yBAAKxM,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,YAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,mBACZoxB,SAAU,SAACvyB,GAAD,OAlDD,SAACA,GACpB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAC9f,GAAD,OACtCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCke,EAAWS,IA6CkBjK,CAAaxvB,OAKxC,yBAAKiB,MAAO,CACViV,QAAQ,OACRE,WAAW,WAGZmjB,GAAWA,EAAQh4B,OAAS,GAC3B,oCACA,yBAAKN,MAAO,CACZiV,QAAQ,OACRE,WAAW,SACX4B,YAAa,SAEf,kBAAC,WAAD,CACCgW,SAAU,eACVnrB,KAAMA,EAAMwK,QA1DH,CACd,CAAEvN,MAAO,QAASiB,IAAK,SACvB,CAAEjB,MAAO,SAAUiB,IAAK,UACxB,CAAEjB,MAAO,OAAQiB,IAAK,UAqDlB,iBAKA,0BAAME,MAAO,CACXsW,MAAM,UACNO,WAAY,SAEd,kBAACsoB,GAAA,EAAD,SAKE,kBAAC,IAAD,CAEE3/B,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,aAaF,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASy3B,WAAYA,EAAYn2B,KAAM02B,IAExCzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,mBACZO,MAAOwS,KAAMI,4BAOvB,kBAAC4uC,GAAD,CACE1rB,QAASA,EACTP,WAAYA,EACZ1Q,sBAAuBA,EACvBC,yBAA0BA,MC7W5BlY,GAAmBC,MAAaC,MAAM,IAUtCkU,GAAwB,SAACpN,GAC7BD,KAAatJ,MAAM,CACjBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAIzC7G,GAAgB,CACpB/F,MAAO,GACP9B,OAAQ,MAyPKmxB,GA7OK,SAAC,GAKP,IAJZ1R,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAxlB,EAEW,EAFXA,SACAw+B,EACW,EADXA,iBACW,EAC8BryB,EAAe,GAAI,iBADjD,mBACJgyB,EADI,KACSC,EADT,OAEqB7xB,oBAAS,GAF9B,mBAEJkR,EAFI,KAEMF,EAFN,OAG6BhR,oBAAS,GAHtC,mBAGJ+qB,EAHI,KAGUC,EAHV,OAIkBhrB,mBAAS,IAJ3B,mBAIJ7J,EAJI,KAIE4vB,EAJF,OAKyB/lB,mBAAS,IALlC,mBAKJ7D,EALI,UASXoD,qBAAU,WACL9L,GAAYA,EAASyC,MACpB6vB,EAAatyB,EAASyC,QAE1B,CAACzC,IAbQ,MAgB0CmM,EACnD,GACA,aAlBS,mBAgBei2B,GAhBf,aAqB6C71B,mBAAS,IArBtD,6BAuBXT,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWo2B,EAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAAM10B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACKoyB,EAAkB,CAC5Cz/B,WAAY,CACXE,aAAc,CACboB,GAAID,EAASC,IAAMD,EAASE,MAG1B2D,KAAM,CACJ+D,MAAOoG,EAAOpG,MAAMygB,OACpBviB,OAAQkI,EAAOlI,OACfrD,KAAMC,EACNiF,MAAOe,KAXQ,QACb21B,EADa,SAgBmB,OAArBA,EAAU96B,QAjFE+Q,OAkF3B6I,EAjFJ9I,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,kBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAgFzCgqB,EAAiB,eACVx+B,EADS,GAGXq+B,IAGLpwB,EAAQ2a,YACRpD,GAAyB,IAEzB9D,KAGFzT,EAAQC,eAAc,GA/BH,iCAjES,IAACoG,IAiEV,OAAH,wDAkClBxI,qBAAU,WACR,IAAKqyB,EAAW,UAAe,CAC7B,IAAMpzB,EAAQozB,EAAW,MACzB,GAAIpzB,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EACvDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACnCF,OAAO0P,OAAOjD,EAAK,OACnB,IACCvJ,SAAQ,SAACqnB,EAAKC,GACnB,GAAmB,kBAARD,EACTnH,GAAsBmH,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACtBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAACqnB,GACZnH,GAAsBmH,WAQ7BsV,EAAW,WAAiB7/B,OAAOC,KAAK4/B,EAAYr+B,MAAMtB,OAAS,GAClE2/B,EAAW,KAAX,SAUL,CAACA,IAEJ,IAAMrR,EAAe,SAAC7d,GACpBuW,GAAyB,IAUrBi7B,EAAmB,SAACh+C,EAAMi+C,GAC9BpuB,EAAaouB,IAIf,OACE,kBAAC,IAAD,CACEryC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyB3N,KAErC,gBACCwO,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE5Q,MAAO,CACLuT,IAAK,QAEP3Q,MAAM,kBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACbnb,QAAST,EACT6b,SAAU,WAIZ,kBAAC5tB,EAAD,CACEI,MAAM,QACNE,MAAO+Q,EAAOpG,MACdrK,KAAK,QACLF,QACGsR,EAAQ/G,OAAS6G,EAAO7G,QACvB8G,GAAgByvB,EAAYpzB,MAAZ,YAEpBzN,YACGqR,EAAQ/G,OAAS6G,EAAO7G,QACvB8G,GAAgByvB,EAAYpzB,MAAZ,YAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACjS,EAAD,CACEI,MAAM,SACNE,MAAO+Q,EAAOlI,OACdvI,KAAK,SACLP,KAAM,SACNS,IAAK,EACLJ,QACGsR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgByvB,EAAYpzB,MAAZ,aAEpBzN,YACGqR,EAAQ7I,QAAU2I,EAAO3I,SACxB4I,GAAgByvB,EAAYpzB,MAAZ,aAEpB5N,SAAU,SAAC8R,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACyH,GAAD,CACE5T,KAAMC,EACNtE,YAAY,aACZrB,MAAM,OACNI,SAAUsjD,IAGZ,yBACEviD,MAAO,CACL4W,UAAW,WAYjB,kBAAC,GAAD,CACEwI,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCtHnBqZ,IA5IiBxb,KAAxBD,OAAwBC,KAAhBC,YACG0R,IAAX9B,OAMe,SAAC3X,GAAkB,IAAD,EACQpH,EAC7C,GACA,iBAHqC,mBAChCsyB,EADgC,KAChBC,EADgB,OAKYvyB,EACjD,GACA,eAPqC,mBAKhCwyB,EALgC,KAKdC,EALc,OASKryB,oBAAS,GATd,mBAShCsxB,EATgC,KAShBC,EATgB,OAUEvxB,mBAAS,IAVX,mBAUhCwxB,EAVgC,KAUlBS,EAVkB,KAYjC5/B,EAASuuB,eACTuI,EAAQ92B,EAAM,GA2CpB,OAzCAkN,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACH0yB,EAAqB,CACrC//B,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,QACf7qB,EADe,SAYnB2zB,EAAiB3zB,GAZE,2CAAH,qDAmBpBotB,KACC,CAACvC,IAEJ5pB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf4yB,EAAuB,CAC3BjgC,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,2CAAH,qDAUpBoJ,KACC,CAACpJ,IAEJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAGzB,yBAAKlB,UAAU,wBACb,yBAAKA,UAAU,iCACb,8CAEC+gC,EAAepzB,MACd0yB,GACAz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAClC,oCACE,kBAAC2jD,GAAD,CACE58B,sBAAuBsY,EACvBrY,yBAA0BsY,EAC1B99B,SAAU+9B,EACVS,iBAAkBA,IAEpB,kBAAC,IAAD,CACEtvB,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHR,UAUR,kBAAC,KAAD,CAAUsC,UAAW,CAAEtR,KAAM,GAAK3N,QAASsvB,EAAerzB,WACvDqzB,EAAepzB,MACd0yB,KACEz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IACpC,kBAAC,KAAD,CACE2B,YAAY,mBACZO,MAAOwS,KAAMI,yBAIlBmrB,EAAepzB,MACd0yB,GACAz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAClC,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,qCACZqgC,EAAa,OACZ,qCAEE,8BAAOA,EAAa,QAGvBA,EAAa,QACZ,sCAEE,8BAAOA,EAAa,SAGvBA,EAAa,MACZ,oCAEE,8BACGU,EAAc,KAAd,MACC9oB,IAAO8oB,EAAc,KAAd,MAAgCv0B,OACrC,0BAKT6zB,EAAc,KACb,iDAEE,8BAAOA,EAAa,aCzJhCvP,GAAiBC,KAAjBD,aACAtD,GAAWvuB,IAAXuuB,OAkNOwD,GAzMF,SAAC,GAKA,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,aAEW,EACmBtiB,mBAAS,IAD5B,mBACJ3C,EADI,KACKklB,EADL,OAEkCviB,mBAAS,IAF3C,gCAG4BJ,EAAe,GAAI,mBAH/C,mBAGJ4iB,EAHI,KAGMC,EAHN,OAI2BziB,mBAAS,IAJpC,mBAIJ0iB,EAJI,KAISC,EAJT,KAyBXpjB,qBAAU,WAER,GADA7M,QAAQC,IAAI,WACR6vB,EAASjvB,MAAQivB,EAASjvB,KAAKtB,OAAS,GAAKqwB,EAAarwB,OAAS,EAAG,CACxE,IAAMqxB,EAAsBhB,EAAa9vB,KAAI,SAACQ,GAC5C,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MACrC,SAACrb,GAAD,OAASA,EAAInE,KAAOV,KAEtB,GAAI6vB,EACF,OAAOA,EAAiB7xB,QAG5BqxB,EAAgBiB,MAEjB,CAACd,IAGJ9vB,QAAQC,IAAI,mBAAmB2vB,GAC/B/iB,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACWgjB,EAAmB,CAC1CrwB,WAAY,CACVC,OAAQ,CACNwtB,eAAe,MAJP,QACRiD,EADQ,SAUIA,EAAW7wB,OAAS,IAE9B8wB,EAAaD,EAAWtwB,KAAI,SAACkH,GACjC,OAAOA,EAAI1I,QAEbuxB,EAAWQ,IAfC,2CAAH,qDAoBbhM,KACC,IAiDH,OAJArkB,QAAQC,IAAI,iBAAkB6vB,GAK5B,oCAEGA,EAAS3jB,WACR,yBAAKlN,MAAO,CACVmX,QAAS,SACTnE,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMH0b,EAAS1jB,QAAU0jB,EAASjvB,KAAKtB,OAAS,IACzC,yBAAKN,MAAO,CACVgT,MAAO,OACPK,OAAQ,OACR4B,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOvS,MAAM,gBAAgByQ,OAAQ,OAOxCwd,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAKoL,EAAQpL,OAAS,GAC7D,oCACE,yBAAKd,UAAU,8CACb,kBAAC,GAAD,CACEwT,MAAO,MACPhT,MAAO,CACLqT,OAAQ,OACRpT,aAAc,iBACdoxB,YAAa,mBAEfvX,KAAK,SACL5Z,YAAY,oBACZoxB,SAAU,SAACvyB,GAAD,OAAWgC,QAAQC,IAAIjC,IACjCE,SAxEW,SAAC8R,GAGtB,GAFAigB,EAAejgB,EAAE/F,OAAOjM,OAED,KAAnBgS,EAAE/F,OAAOjM,OACX,GAAI8xB,EAASjvB,MAAQivB,EAASjvB,KAAKtB,OAAS,EAAG,CAE7C,IAAMixB,EAAgBV,EAASjvB,KAAKf,KAAI,SAACqF,GAAD,OAASA,EAAI7G,QACrDuxB,EAAWW,QAER,CACL,IAAMC,EACJ9lB,EAAQpL,OAAS,EACboL,EAAQyV,QAAO,SAACvH,GAChB,OAAOA,EAAOC,cAAc5Y,SAAS8vB,EAAYlX,kBAEjD,GAEN+W,EAAWY,QA2DN9lB,EAAQ7K,KAAI,SAAAkH,GAAG,OACd,oCACE,kBAAC,GAAD,CACEjI,IAAKiI,EACL+iB,QAAS6F,EAAalvB,QAAQsG,IAAQ,EACtC9I,SAAU,SAAA6rB,GAAO,OAjKV,SAAC/iB,EAAK+iB,GACzB,IAAM2G,EAAmB3G,EAAO,uBAAO6F,GAAP,CAAqB5oB,IAAO4oB,EAAaxP,QAAO,SAAAuQ,GAAC,OAAIA,IAAM3pB,KAG3F,GAFA2oB,EAAgBe,GAEZZ,EAAS1jB,MAAQ0jB,EAASjvB,KAAKtB,OAAS,GAAKmxB,EAAiBnxB,OAAS,EAAG,CAC5E,IAAMqxB,EAAsBF,EAAiB5wB,KAAI,SAACQ,GAChD,IAAM6vB,EAAmBL,EAASjvB,KAAK2f,MACrC,SAACrb,GAAD,OAASA,EAAI7G,KAAKwa,gBAAkBxY,EAAKwY,iBAE3C,GAAIqX,EACF,OAAOA,EAAiBnvB,MAG5B0uB,EAAUkB,IAoJqBrhB,CAAavI,EAAK+iB,KAEtC/iB,UC3KXqH,IAJa6I,KAAXD,OAIiB3I,MAAaC,MAAM,CAC3C3I,UAAW0I,MACTxQ,MAAM,cACNF,WACAY,IAAI,EAAG,+CACTqH,SAAUyI,MACRxQ,MAAM,YACNF,WACAY,IAAI,EAAG,8CACTyH,MAAOqI,MACL1Q,SAAS,sCACTulD,IAAI,GAAI,uCACV10C,SAAUH,MACRxQ,MAAM,YACNF,WACAY,IAAI,EAAG,4CAETwH,MAAOsI,MAAaxQ,MAAM,SAASkI,MAAM,iCAMpC0I,GAAgB,CACrBzI,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACV8B,QAAS,GACTo5B,QAAS,GACTtyB,SAAU,GACVpI,KAAM,GACNuB,WAAY,GACZC,aAAc,IAaT4a,GAAwB,SAACpN,GAC9BD,KAAatJ,MAAM,CAChBuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBA0f/B2V,GA9eQ,SAAC,GAA+F,IAA7F5E,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0B0a,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElEh0B,EAAe,GAAI,aAF+C,mBAE9Gi0B,EAF8G,KAE5FC,EAF4F,OAG7D9zB,mBAAS,IAHoD,mBAG9G+zB,EAH8G,aAInE/zB,mBAAS,KAJ0D,gCAMzEA,mBAAS,KANgE,mBAM9Fo0B,GAN8F,aAO/Ep0B,mBAAS,IAPsE,mBAOjGs0B,GAPiG,aASlE10B,EAClD,GACA,eAXoH,mBAS5F40B,GAT4F,aAcxE50B,EAAe,GAAI,YAdqD,mBAc9G60B,EAd8G,KAc/FC,EAd+F,OAgBzF10B,mBAAS,IAhBgF,mBAgB9G4lB,EAhB8G,KAgBtGxD,EAhBsG,OAiB7EpiB,mBAAS,IAjBoE,mBAiB9GsiB,EAjB8G,KAiBhGD,EAjBgG,KAsB/G7gB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEAESq0B,EAAuB,CAEnDx8B,KAAM,CACLqB,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MACdyI,SAAUM,EAAON,SACjB9G,QAASoH,EAAOpH,QAChB/B,UAAWmJ,EAAOnJ,UAClBC,SAAUkJ,EAAOlJ,SACjBQ,KAAM0I,EAAO1I,KACbuB,WAAYmH,EAAOnH,WACnBC,aAAckH,EAAOlH,aACrBu7C,WAAYlwB,KAdM,QAEdiP,EAFc,SAoB4B,OAA1BA,EAAe79B,QAGpC48B,EAAgB,CAAC,aAChBlgC,GAAImhC,EAAc,KAAW,GAC7BpjC,IAAKojC,EAAc,KAAW,GAC9B7jC,KAAM6jC,EAAc,UAAgB,IAAMA,EAAc,UAErDA,IALW,oBAMVlB,KACL1a,GAAyB,GACzBvX,EAAQ2a,aAGRlH,KAKDzT,EAAQC,eAAc,GAvCF,2CAAH,wDAoDlBpC,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS+0B,EAAuB,IADhC,QACdQ,EADc,SAIEA,EAAe/iC,OAAS,IAEvCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GAC1C,MAAO,CACN9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGhBojC,EAAkBD,IAZC,2CAAH,qDAgBlBc,KACE,IAGH11B,qBAAU,WACT7M,QAAQC,IAAI,wBAAwBohC,GACrB,uCAAG,8BAAAt0B,EAAA,sEACSi1B,EAAoB,CAC7CtiC,WAAY,CACXE,aAAc,CACbkG,QAASu7B,MAJK,QACXmB,EADW,SAUEA,EAAYjjC,OAAS,IAEjCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACpC,MAAO,CACN/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGbsjC,EAAeD,IAlBC,2CAAH,oDAsBfc,KACE,CAACpB,IAKJx0B,qBAAU,WACT,IAAKs0B,EAAgB,UAAe,CACnC,IAAMr1B,EAAQq1B,EAAgB,MAC9B,GAAIr1B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EAExDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACpCF,OAAO0P,OAAOjD,EAAK,OACnB,IACGvJ,SAAQ,SAACqnB,EAAKC,GACpB,GAAmB,kBAARD,EACVnH,GAAsBmH,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACvBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACZnH,GAAsBmH,UAlLE,IAACvU,GA4L7B8rB,EAAgB,WACjB9hC,OAAOC,KAAK6hC,EAAiBtgC,MAAMtB,OAAS,GAED,OAAvC4hC,EAAgB,KAAhB,SA/L0B9rB,EAgML,8BA/L3BD,KAAa/N,QAAQ,CACpBgO,QAASA,GAAW,kBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCAsMzC,CAAC4rB,IAKJ,IAAMtT,EAAe,SAAC7d,GACrBuW,GAAyB,IAIpBrX,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAOnJ,WACPmJ,EAAOlJ,UACPkJ,EAAON,UACPM,EAAO9I,OACP8I,EAAO1I,OAcV,OALArG,QAAQC,IAAI,gBAAiB8hC,GAM5B,kBAAC,IAAD,CACC3yB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC5Q,MAAO,CACNuT,IAAK,QAGNsQ,UAAW,CACV/S,OAAQ,EACRqG,QAAS,GAEVnE,MAAO,OACPpQ,MAAM,iBACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACdnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAM7C,6BAAS1Q,UAAU,2BAClB,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAMD,yBAAKA,UAAU,sCAEf,yBAAKA,UAAU,mBACjB,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,aACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QAAUsR,EAAQ9J,WAAa4J,EAAO5J,YACnC6J,GAAgB0xB,EAAiBr1B,MAAjB,gBAEnBzN,YAAcqR,EAAQ9J,WAAa4J,EAAO5J,YACvC6J,GAAgB0xB,EAAiBr1B,MAAjB,gBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAKlR,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QAAUsR,EAAQ7J,UAAY2J,EAAO3J,WAClC4J,GAAgB0xB,EAAiBr1B,MAAjB,eAEnBzN,YAAcqR,EAAQ7J,UAAY2J,EAAO3J,WACtC4J,GAAgB0xB,EAAiBr1B,MAAjB,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QAAUsR,EAAQzJ,OAASuJ,EAAOvJ,QAC/BwJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEnBzN,YAAcqR,EAAQzJ,OAASuJ,EAAOvJ,QACnCwJ,GAAgB0xB,EAAiBr1B,MAAjB,YACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAKlR,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QAAUsR,EAAQ1J,OAASwJ,EAAOxJ,QAC/ByJ,GAAgB0xB,EAAiBr1B,MAAjB,YAEnBzN,YAAcqR,EAAQ1J,OAASwJ,EAAOxJ,QACnCyJ,GAAgB0xB,EAAiBr1B,MAAjB,YACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,cAWpB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,cACNC,KAAK,OACLC,MAAO+Q,EAAO1I,KACd/H,KAAK,OACLF,QAAUsR,EAAQrJ,MAAQmJ,EAAOnJ,OAC9BoJ,GAAgB0xB,EAAiBr1B,MAAjB,WAEnBzN,YAAcqR,EAAQrJ,MAAQmJ,EAAOnJ,OAClCoJ,GAAgB0xB,EAAiBr1B,MAAjB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,YAIlB,yBAAKlR,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,WACNC,KAAK,WACLC,MAAO+Q,EAAON,SACdnQ,KAAK,WACLF,QAAUsR,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgB0xB,EAAiBr1B,MAAjB,eAEnBzN,YAAcqR,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgB0xB,EAAiBr1B,MAAjB,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAUnB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,gBACNC,KAAK,OACLC,MAAO+Q,EAAOlH,aACdvJ,KAAK,eACLF,QAAUsR,EAAQ7H,cAAgB2H,EAAO3H,eACtC4H,GAAgB0xB,EAAiBr1B,MAAjB,mBAEnBzN,YAAcqR,EAAQ7H,cAAgB2H,EAAO3H,eAC1C4H,GAAgB0xB,EAAiBr1B,MAAjB,mBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKlR,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,aACNC,KAAK,aACLC,MAAO+Q,EAAOnH,WACdtJ,KAAK,aACLF,QAAUsR,EAAQ9H,YAAc4H,EAAO5H,aACpC6H,GAAgB0xB,EAAiBr1B,MAAjB,iBAEnBzN,YAAcqR,EAAQ9H,YAAc4H,EAAO5H,aACxC6H,GAAgB0xB,EAAiBr1B,MAAjB,iBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,mBAQnB,yBAAK1Q,MAAO,CACX4W,UAAW,UAIV,kBAACnY,EAAD,CACCI,MAAM,UACNE,MAAO+Q,EAAOpH,QACdrJ,KAAK,UACLF,QAAUsR,EAAQ/H,SAAW6H,EAAO7H,UACjC8H,GAAgB0xB,EAAiBr1B,MAAjB,cAEnBzN,YAAcqR,EAAQ/H,SAAW6H,EAAO7H,UACrC8H,GAAgB0xB,EAAiBr1B,MAAjB,cACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAYnB,yBAAKlR,UAAU,kCAEd,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,wCAID,yBAAKA,UAAU,mDACd,kBAAC4kD,GAAD,CACC1zB,gBAAiBA,EACjBC,aAAcA,EACdF,UAAWA,eChiBlBrhB,IAHa6I,KAAXD,OAGiB3I,MAAaC,MAAM,CACxC3I,UAAW0I,MACRxQ,MAAM,aACNF,WACAY,IAAI,EAAG,+CACVqH,SAAUyI,MACPxQ,MAAM,YACNF,WACAY,IAAI,EAAG,6CACVyH,MAAOqI,MACJ1Q,SAAS,sCACTulD,IAAI,GAAI,uCACX10C,SAAUH,MACPxQ,MAAM,YACNU,IAAI,EAAG,4CACVwH,MAAOsI,MAAaxQ,MAAM,SAASkI,MAAM,iCAerCyc,GAAwB,SAACpN,GAChCD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBAshB9BopB,GApgBG,SAAC,GAA6E,IAA3En3B,EAA0E,EAA1EA,SAAU6W,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAAS6iB,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EACrCh0B,EAAe,GAAI,gBADkB,mBACvFy1B,EADuF,KAClEC,EADkE,OAIvCt1B,mBAAS,IAJ8B,mBAIvF+zB,EAJuF,aAK1C/zB,mBAAS,KALiC,gCAOhDA,mBAAS,KAPuC,mBAOrEo0B,GAPqE,aAQtDp0B,mBAAS,IAR6C,mBAQxEs0B,GARwE,aAUxC10B,EAC/C,GACA,eAZuF,mBAUlE40B,GAVkE,aAe5C50B,EAAe,GAAI,YAfyB,mBAenE80B,GAfmE,aAkBhE10B,mBAAS,IAlBuD,mBAkBrF4lB,EAlBqF,KAkB7ExD,EAlB6E,OAmBpDpiB,mBAAS,IAnB2C,mBAmBrFsiB,EAnBqF,KAmBvED,EAnBuE,KAuB5F9iB,qBAAU,WAGX,GADA7M,QAAQC,IAAI,oBAAoBuH,GAC5BA,GAAYA,EAAS87C,MAAQ97C,EAAS87C,KAAK/jD,OAAS,EAAG,CAC1D,IAAM2zB,EAAS1rB,EAAS87C,KAAKxjD,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAE9C0uB,EAAgBuD,GAChBxD,EAAUwD,QAGDvD,EAAgB,MAGxB,CAACnoB,EAASxG,KAKb,IAAM8N,EAAY,uCAAG,WAAOC,EAAcC,GAArB,qBAAAjC,EAAA,sEACa61B,EAA0B,CAC3DljC,WAAY,CACXE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGd4D,KAAM,CACLqB,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MACdyI,SAAUM,EAAON,SACjB9G,QAASoH,EAAOpH,QAChB/B,UAAWmJ,EAAOnJ,UAClBC,SAAUkJ,EAAOlJ,SACjBQ,KAAM0I,EAAO1I,KACbuB,WAAYmH,EAAOnH,WACnBC,aAAckH,EAAOlH,aACrBu7C,WAAYlwB,KAjBO,QACb2P,EADa,SAuBmC,OAA7BA,EAAkBv+B,QAG1C+Z,GAAW,GAMH7H,EAJc,WACrB,OAAOyqB,EAAanhC,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAG3CyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAI0e,EAAazqB,GAA/BnX,OAAA,IAAAA,CAAA,GAElBwjC,EAFkB,CAIrB7hC,GAAI6hC,EAAiB,KAAW,GAChC9jC,IAAK8jC,EAAiB,KAAW,GACjCvkC,KAAMukC,EAAiB,UAAgB,IAAMA,EAAiB,YAGvDnZ,EArBkD,uBAqB9BuX,EAAaxgC,MAAM,EAAG+V,IArBQ,CAqBA8L,GArBA,aAqBgB2e,EAAaxgC,MAAM+V,EAAQ,KACnG0qB,EAAgBxX,IAIlBjH,KAGCzT,EAAQC,eAAc,GApDL,2CAAH,wDAyDlBpC,qBAAU,WACT,IAAK81B,EAAmB,UAAe,CACtC,IAAM72B,EAAQ62B,EAAmB,MACjC,GAAI72B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EAExDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACpCF,OAAO0P,OAAOjD,EAAK,OACnB,IACGvJ,SAAQ,SAACqnB,EAAKC,GACpB,GAAmB,kBAARD,EACVnH,GAAsBmH,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACvBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACZnH,GAAsBmH,UA7JE,IAACvU,GAuK7BstB,EAAmB,WACpBtjC,OAAOC,KAAKqjC,EAAoB9hC,MAAMtB,OAAS,GAED,OAA1CojC,EAAmB,KAAnB,SA1K0BttB,EA2KL,8BA1K3BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCAiL1C,CAACotB,IAcJ91B,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS+0B,EAAuB,IADhC,QACdQ,EADc,SAIEA,EAAe/iC,OAAS,IAEvCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GAC1C,MAAO,CACN9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGhBojC,EAAkBD,IAZC,2CAAH,qDAgBlBc,KACK,IAGH11B,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACSi1B,EAAoB,CACjCtiC,WAAY,CACRE,aAAc,CACZkG,QAASu7B,MAJX,QACXmB,EADW,SAUEA,EAAYjjC,OAAS,IAEjCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACpC,MAAO,CACN/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGbsjC,EAAeD,IAlBC,2CAAH,qDAsBfc,KACK,CAACpB,IAQP,IAAMxT,EAAe,SAAC7d,GACfqO,GAAW,IAKVnP,EAA4B,SAACH,EAAOI,GAC3C,QAAIA,GACFJ,EAAOnJ,WACPmJ,EAAOlJ,UAEPkJ,EAAO9I,OACP8I,EAAO1I,OAMV,OACC,kBAAC,IAAD,CACA+I,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPlH,KAGL,gBACC+H,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACAhO,MAAM,aACNoQ,MAAO,OACPmM,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAalB,EAAakB,IAChC6S,SAAUgL,EACV9K,OAAO,SACPoI,gBAAgB,EAChBE,cAAe,CACfnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,IAE5C2T,UAAW,CACE/S,OAAQ,IACRqG,QAAS,SAIrBpW,QAAQC,IAAI,qBAAqBuP,GAErC,6BAAS/Q,UAAU,2BACX,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAMD,yBAAKA,UAAU,sCAEf,yBAAKA,UAAU,mBACjB,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,aACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QAAUsR,EAAQ9J,WAAa4J,EAAO5J,YACnC6J,GAAgBkzB,EAAoB72B,MAApB,gBAEnBzN,YAAcqR,EAAQ9J,WAAa4J,EAAO5J,YACvC6J,GAAgBkzB,EAAoB72B,MAApB,gBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAKlR,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QAAUsR,EAAQ7J,UAAY2J,EAAO3J,WAClC4J,GAAgBkzB,EAAoB72B,MAApB,eAEnBzN,YAAcqR,EAAQ7J,UAAY2J,EAAO3J,WACtC4J,GAAgBkzB,EAAoB72B,MAApB,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QAAUsR,EAAQzJ,OAASuJ,EAAOvJ,QAC/BwJ,GAAgBkzB,EAAoB72B,MAApB,YAEnBzN,YAAcqR,EAAQzJ,OAASuJ,EAAOvJ,QACnCwJ,GAAgBkzB,EAAoB72B,MAApB,YACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAKlR,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QAAUsR,EAAQ1J,OAASwJ,EAAOxJ,QAC/ByJ,GAAgBkzB,EAAoB72B,MAApB,YAEnBzN,YAAcqR,EAAQ1J,OAASwJ,EAAOxJ,QACnCyJ,GAAgBkzB,EAAoB72B,MAApB,YACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,cAOpB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,cACNC,KAAK,OACLC,MAAO+Q,EAAO1I,KACd/H,KAAK,OACLF,QAAUsR,EAAQrJ,MAAQmJ,EAAOnJ,OAC9BoJ,GAAgBkzB,EAAoB72B,MAApB,WAEnBzN,YAAcqR,EAAQrJ,MAAQmJ,EAAOnJ,OAClCoJ,GAAgBkzB,EAAoB72B,MAApB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,YAIlB,yBAAKlR,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,WACNC,KAAK,WACLC,MAAO+Q,EAAON,SACdnQ,KAAK,WACLF,QAAUsR,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBkzB,EAAoB72B,MAApB,eAEnBzN,YAAcqR,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBkzB,EAAoB72B,MAApB,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAUnB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,gBACNC,KAAK,OACLC,MAAO+Q,EAAOlH,aACdvJ,KAAK,eACLF,QAAUsR,EAAQ7H,cAAgB2H,EAAO3H,eACtC4H,GAAgBkzB,EAAoB72B,MAApB,mBAEnBzN,YAAcqR,EAAQ7H,cAAgB2H,EAAO3H,eAC1C4H,GAAgBkzB,EAAoB72B,MAApB,mBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKlR,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,aACNC,KAAK,aACLC,MAAO+Q,EAAOnH,WACdtJ,KAAK,aACLF,QAAUsR,EAAQ9H,YAAc4H,EAAO5H,aACpC6H,GAAgBkzB,EAAoB72B,MAApB,iBAEnBzN,YAAcqR,EAAQ9H,YAAc4H,EAAO5H,aACxC6H,GAAgBkzB,EAAoB72B,MAApB,iBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,mBAYjB,yBAAK1Q,MAAO,CACV4W,UAAW,UAIb,kBAACnY,EAAD,CACCI,MAAM,UACNE,MAAO+Q,EAAOpH,QACdrJ,KAAK,UACLF,QAAUsR,EAAQ/H,SAAW6H,EAAO7H,UACjC8H,GAAgBkzB,EAAoB72B,MAApB,cAEnBzN,YAAcqR,EAAQ/H,SAAW6H,EAAO7H,UACrC8H,GAAgBkzB,EAAoB72B,MAApB,cACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAcnB,yBAAKlR,UAAU,kCAEd,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,wCAID,yBAAKA,UAAU,mDACd,kBAAC4kD,GAAD,CACC1zB,gBAAiBA,EACjBC,aAAcA,EACdF,UAAWA,eC9gBhBvT,GAAwBC,KAAxBD,OACA8P,IADwB7P,KAAhBC,YACG3e,IAAXuuB,QAwBFC,GAAU,SAAC,GAAoD,IAAlDrrB,EAAiD,EAAjDA,KAAMqgC,EAA2C,EAA3CA,gBAAiBlwB,EAA0B,EAA1BA,MAA0B,EACpC1D,oBAAS,GAD2B,mBAC3D8Q,EAD2D,KAClDC,EADkD,OAER/Q,oBAAS,GAFD,mBAE3D8e,EAF2D,KAEpCC,EAFoC,KAI5D9X,EAAUC,eAJkD,EAMTtH,EACvD,GACA,gBARgE,mBAMtC41B,GANsC,WAU5DC,EAAoB,uCAAG,WAAO/hC,GAAP,iBAAA+L,EAAA,sEACK+1B,EAA0B,CACxDpjC,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrBgiC,EADqB,SAU2B,OAA7BA,EAAkB1+B,SA1Cd+Q,EA2CH,iBA1C5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAwCnC0tB,EAAkBpiC,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KAC1DkgC,EAAgB+B,IAbS,iCAhCC,IAAC5tB,IAgCF,OAAH,sDAiB1B,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,KAErCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,KAErCqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAaT,kBAAC,GAAD,CACEhB,MAAM,aACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,gBACNob,UAAU,eACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,QACNob,UAAU,OACVle,IAAI,OACJN,UAAU,uBACVye,OAAQ,SAACqmC,EAAOpmC,GAAR,OACN,oCACGomC,GACCA,EAAMhkD,OAAS,GACfgkD,EAAM9iD,MAAM,EAAG,GAAGX,KAAI,SAACkH,GAAD,OACpB,kBAAC,KAAD,CACE/H,MAAO,CACLC,aAAc,OAEhBqW,MAAM,OACNxW,IAAKiI,EAAI/F,KAER+F,EAAI1I,SAIX,0BACEW,MAAO,CACL8W,OAAQ,WAEV9F,QAAS,WACPsE,EAAQ7R,KAAR,wBAA8Bya,EAAM,OAGrComC,GAA0B,IAAjBA,EAAMhkD,QAAgB,eAMxC,kBAAC,GAAD,CACE0S,MAAO,IACPpQ,MAAM,UACNob,UAAU,UACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BAAKlW,GAAQ6T,IAAO7T,GAAMoI,OAAO,gCAgCtCiG,GAAS,aAAcF,IACtB,kBAAC,GAAD,CACEvS,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,eAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMmf,EAAqB5lB,EAAOnc,KAC7Ca,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aASb6I,GACC,kBAAC,GAAD,CACE6U,aAAcpgC,EACdqgC,gBAAiBA,EACjB7iB,WAAYA,EACZD,QAASA,EACT5W,SAAU4kB,MA2HLta,gBALS,SAAC7F,GAAD,MAAY,CAClC+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EAhHM,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACD1D,mBAAS,IADR,mBAClC2zB,EADkC,KACpBC,EADoB,OAGQh0B,EAC/C,GACA,cALuC,mBAGlCg2B,EAHkC,KAGnBC,EAHmB,KAQzCnjC,QAAQC,IAAI,aAAcghC,GAE1Bp0B,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACKo2B,EAAwB,CAC9CzjC,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,KAChBhK,YAAa,QANA,OACbu4B,EADa,OAWnBrC,EAAgBqC,GAXG,2CAAH,qDAalBC,KACC,IAEH,IA3ByC,EAoCiBl2B,oBAAS,GApC1B,mBAoClCgZ,EApCkC,KAoCXC,EApCW,KAwCzC,OACE,oCAIE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,WAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,mBACZjB,SAAU,SAAC8R,GAAD,OA3BD,SAAChS,GACpB,GAAIklC,EAAcriC,KAAKtB,OAAS,EAAG,CACjC,IAAM0jC,EAAkBC,EAAcriC,KAAKuf,QAAO,SAAC9f,GAAD,OAChDA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCooB,EAAgB+B,IAsBSzV,CAAaxd,EAAE/F,OAAOjM,WAK1CkT,GAAS,aAAcF,IACtB,kBAAC,IAAD,CAEEvS,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YAWJ,yBAAK9nB,UAAU,uCASf,yBAAKA,UAAU,uCACZykC,EAAc92B,MAAQ60B,EAAa1hC,OAAS,GAC3C,kBAAC,GAAD,CACEyR,MAAOA,EACPkwB,gBAAiBA,EACjBrgC,KAAMogC,IAGTiC,EAAc/2B,WAAa,kBAACshB,GAAD,MAC3ByV,EAAc92B,QAAU60B,EAAa1hC,OAAS,IAC7C,kBAAC,GAAD,CAAOsC,MAAM,sBAKlBqhC,EAAc92B,MACb,kBAAC,GAAD,CACE80B,gBAAiBA,EACjB5a,sBAAuBA,EACvBC,yBAA0BA,EAC1B0a,aAAciC,EAAcriC,WClYhCwN,IAHa6I,KAAXD,OAGiB3I,MAAaC,MAAM,CACxC3I,UAAW0I,MACRxQ,MAAM,aACNF,WACAY,IAAI,EAAG,+CACVqH,SAAUyI,MACPxQ,MAAM,YACNF,WACAY,IAAI,EAAG,6CACVyH,MAAOqI,MACJ1Q,SAAS,sCACTulD,IAAI,GAAI,uCACX10C,SAAUH,MACPxQ,MAAM,YACNU,IAAI,EAAG,4CACVwH,MAAOsI,MAAaxQ,MAAM,SAASkI,MAAM,iCAerCyc,GAAwB,SAACpN,GAChCD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAACkhB,GAAA,EAAD,CAAoBzjB,MAAO,CAAEsW,MAAO,yBA0gB9BopB,GAzfG,SAAC,GAAqE,IAAnEn3B,EAAkE,EAAlEA,SAAU6W,EAAwD,EAAxDA,WAAYD,EAA4C,EAA5CA,QAASslB,EAAmC,EAAnCA,sBAAmC,EAC7Bx2B,EAAe,GAAI,gBADU,mBAC/Ey1B,EAD+E,KAC1DC,EAD0D,OAI/Bt1B,mBAAS,IAJsB,mBAI/E+zB,EAJ+E,aAKlC/zB,mBAAS,KALyB,gCAOxCA,mBAAS,KAP+B,mBAO7Do0B,GAP6D,aAQ9Cp0B,mBAAS,IARqC,mBAQhEs0B,GARgE,aAUhC10B,EAC/C,GACA,eAZ+E,mBAU1D40B,GAV0D,aAepC50B,EAAe,GAAI,YAfiB,mBAe3D80B,GAf2D,aAkBxD10B,mBAAS,IAlB+C,mBAkB7E4lB,EAlB6E,KAkBrExD,EAlBqE,OAmB5CpiB,mBAAS,IAnBmC,mBAmB7EsiB,EAnB6E,KAmB/DD,EAnB+D,KAuBpF9iB,qBAAU,WAGX,GADA7M,QAAQC,IAAI,oBAAoBuH,GAC5BA,GAAYA,EAAS87C,MAAQ97C,EAAS87C,KAAK/jD,OAAS,EAAG,CAC1D,IAAM2zB,EAAS1rB,EAAS87C,KAAKxjD,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAE9C0uB,EAAgBuD,GAChBxD,EAAUwD,QAGDvD,EAAgB,MAGxB,CAACnoB,EAASxG,KAKb,IAAM8N,EAAY,uCAAG,WAAOC,EAAcC,GAArB,eAAAjC,EAAA,sEACa61B,EAA0B,CAC3DljC,WAAY,CACXE,aAAc,CACZoB,GAAI+N,EAAO/N,KAGd4D,KAAM,CACLqB,MAAO8I,EAAO9I,MACdD,MAAO+I,EAAO/I,MACdyI,SAAUM,EAAON,SACjB9G,QAASoH,EAAOpH,QAChB/B,UAAWmJ,EAAOnJ,UAClBC,SAAUkJ,EAAOlJ,SACjBQ,KAAM0I,EAAO1I,KACbuB,WAAYmH,EAAOnH,WACnBC,aAAckH,EAAOlH,aACrBu7C,WAAYlwB,KAjBO,QACb2P,EADa,SAuBmC,OAA7BA,EAAkBv+B,QAG9B+Z,GAAW,GAEXqlB,EAAsB,eAEfb,EAFc,CAGhC7hC,GAAI6hC,EAAiB,KAAW,GAChC9jC,IAAK8jC,EAAiB,KAAW,GACjCvkC,KAAMukC,EAAiB,UAAgB,IAAMA,EAAiB,aAK/DpgB,KAGCzT,EAAQC,eAAc,GAzCL,2CAAH,wDA8ClBpC,qBAAU,WACT,IAAK81B,EAAmB,UAAe,CACtC,IAAM72B,EAAQ62B,EAAmB,MACjC,GAAI72B,EAAK,SAAezM,OAAOC,KAAKwM,EAAK,OAAWvM,OAAS,EAExDuM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVzM,OAAO0P,OAAOjD,EAAK,OAAWvM,OAAS,EACpCF,OAAO0P,OAAOjD,EAAK,OACnB,IACGvJ,SAAQ,SAACqnB,EAAKC,GACpB,GAAmB,kBAARD,EACVnH,GAAsBmH,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOvqB,OAAOC,KAAKsqB,GAAKrqB,OAAS,EACvBF,OAAO0P,OAAO6a,GACtBrnB,SAAQ,SAAAqnB,GACZnH,GAAsBmH,UAjJE,IAACvU,GA2J7BstB,EAAmB,WACpBtjC,OAAOC,KAAKqjC,EAAoB9hC,MAAMtB,OAAS,GAED,OAA1CojC,EAAmB,KAAnB,SA9J0BttB,EA+JL,8BA9J3BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,iBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,iCAqK1C,CAACotB,IAcJ91B,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS+0B,EAAuB,IADhC,QACdQ,EADc,SAIEA,EAAe/iC,OAAS,IAEvCkiC,EAAiBa,EAAexiC,KAAI,SAACgG,GAC1C,MAAO,CACN9H,MAAO8H,EAAQxH,KACfA,KAAMwH,EAAQxH,SAGhBojC,EAAkBD,IAZC,2CAAH,qDAgBlBc,KACK,IAGH11B,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACSi1B,EAAoB,CACjCtiC,WAAY,CACRE,aAAc,CACZkG,QAASu7B,MAJX,QACXmB,EADW,SAUEA,EAAYjjC,OAAS,IAEjCoiC,EAAca,EAAY1iC,KAAI,SAACiG,GACpC,MAAO,CACN/H,MAAO+H,EAAKzH,KACZA,KAAMyH,EAAKzH,SAGbsjC,EAAeD,IAlBC,2CAAH,qDAsBfc,KACK,CAACpB,IAQP,IAAMxT,EAAe,SAAC7d,GACfqO,GAAW,IAKVnP,EAA4B,SAACH,EAAOI,GAC3C,QAAIA,GACFJ,EAAOnJ,WACPmJ,EAAOlJ,UAEPkJ,EAAO9I,OACP8I,EAAO1I,OAMV,OACC,kBAAC,IAAD,CACA+I,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPlH,KAGL,gBACC+H,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACAhO,MAAM,aACNoQ,MAAO,OACPmM,QAASA,EACTwE,KAAM,SAAC5S,GAAD,OAAalB,EAAakB,IAChC6S,SAAUgL,EACV9K,OAAO,SACPoI,gBAAgB,EAChBE,cAAe,CACfnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,IAE5C2T,UAAW,CACE/S,OAAQ,IACRqG,QAAS,SAIrBpW,QAAQC,IAAI,qBAAqBuP,GAErC,6BAAS/Q,UAAU,2BACX,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAMD,yBAAKA,UAAU,sCAEf,yBAAKA,UAAU,mBACjB,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,aACNE,MAAO+Q,EAAOnJ,UACdtH,KAAK,YACLF,QAAUsR,EAAQ9J,WAAa4J,EAAO5J,YACnC6J,GAAgBkzB,EAAoB72B,MAApB,gBAEnBzN,YAAcqR,EAAQ9J,WAAa4J,EAAO5J,YACvC6J,GAAgBkzB,EAAoB72B,MAApB,gBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAKlR,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAO+Q,EAAOlJ,SACdvH,KAAK,WACLF,QAAUsR,EAAQ7J,UAAY2J,EAAO3J,WAClC4J,GAAgBkzB,EAAoB72B,MAApB,eAEnBzN,YAAcqR,EAAQ7J,UAAY2J,EAAO3J,WACtC4J,GAAgBkzB,EAAoB72B,MAApB,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAO+Q,EAAO9I,MACd3H,KAAK,QACLF,QAAUsR,EAAQzJ,OAASuJ,EAAOvJ,QAC/BwJ,GAAgBkzB,EAAoB72B,MAApB,YAEnBzN,YAAcqR,EAAQzJ,OAASuJ,EAAOvJ,QACnCwJ,GAAgBkzB,EAAoB72B,MAApB,YACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAKlR,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAO+Q,EAAO/I,MACd1H,KAAK,QACLF,QAAUsR,EAAQ1J,OAASwJ,EAAOxJ,QAC/ByJ,GAAgBkzB,EAAoB72B,MAApB,YAEnBzN,YAAcqR,EAAQ1J,OAASwJ,EAAOxJ,QACnCyJ,GAAgBkzB,EAAoB72B,MAApB,YACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,cAOpB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,cACNC,KAAK,OACLC,MAAO+Q,EAAO1I,KACd/H,KAAK,OACLF,QAAUsR,EAAQrJ,MAAQmJ,EAAOnJ,OAC9BoJ,GAAgBkzB,EAAoB72B,MAApB,WAEnBzN,YAAcqR,EAAQrJ,MAAQmJ,EAAOnJ,OAClCoJ,GAAgBkzB,EAAoB72B,MAApB,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,YAIlB,yBAAKlR,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,WACNC,KAAK,WACLC,MAAO+Q,EAAON,SACdnQ,KAAK,WACLF,QAAUsR,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBkzB,EAAoB72B,MAApB,eAEnBzN,YAAcqR,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBkzB,EAAoB72B,MAApB,eACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAUnB,yBAAKlR,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,gBACNC,KAAK,OACLC,MAAO+Q,EAAOlH,aACdvJ,KAAK,eACLF,QAAUsR,EAAQ7H,cAAgB2H,EAAO3H,eACtC4H,GAAgBkzB,EAAoB72B,MAApB,mBAEnBzN,YAAcqR,EAAQ7H,cAAgB2H,EAAO3H,eAC1C4H,GAAgBkzB,EAAoB72B,MAApB,mBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKlR,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,aACNC,KAAK,aACLC,MAAO+Q,EAAOnH,WACdtJ,KAAK,aACLF,QAAUsR,EAAQ9H,YAAc4H,EAAO5H,aACpC6H,GAAgBkzB,EAAoB72B,MAApB,iBAEnBzN,YAAcqR,EAAQ9H,YAAc4H,EAAO5H,aACxC6H,GAAgBkzB,EAAoB72B,MAApB,iBACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,mBAYjB,yBAAK1Q,MAAO,CACV4W,UAAW,UAIb,kBAACnY,EAAD,CACCI,MAAM,UACNE,MAAO+Q,EAAOpH,QACdrJ,KAAK,UACLF,QAAUsR,EAAQ/H,SAAW6H,EAAO7H,UACjC8H,GAAgBkzB,EAAoB72B,MAApB,cAEnBzN,YAAcqR,EAAQ/H,SAAW6H,EAAO7H,UACrC8H,GAAgBkzB,EAAoB72B,MAApB,cACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBAcnB,yBAAKlR,UAAU,kCAEd,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,wCAID,yBAAKA,UAAU,mDACd,kBAAC4kD,GAAD,CACC1zB,gBAAiBA,EACjBC,aAAcA,EACdF,UAAWA,eCngBhBvT,GAAwBC,KAAxBD,OAkfSrK,IAlfesK,KAAhBC,YACG0R,IAAX9B,OAifSna,aALO,SAAA7F,GAAK,MAAK,CAC9B+E,MAAO/E,EAAM6E,eAIyB,KAAzBgB,EA1eM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EACkB9D,EAAe,GAAI,gBADrC,mBAChCy2B,EADgC,KACXC,EADW,OAEQ12B,EAAe,GAAI,mBAF3B,mBAEhC22B,EAFgC,KAEhBC,EAFgB,OAGkC52B,EAAe,GAAI,gCAHrD,mBAGhCs2C,EAHgC,KAGHC,EAHG,OAIKn2C,oBAAS,GAJd,mBAIhCsxB,EAJgC,KAIhBC,EAJgB,OAKYvxB,mBAAS,IALrB,mBAKhCy2B,EALgC,KAKbL,EALa,KASjC/jC,EAASuuB,eACT3Z,EAAUC,eACV/K,EAAa9J,EAAM,GA8DzB,OA5DAkN,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACc62B,EAA0B,CAC1DlkC,WAAY,CACRE,aAAc,CACVoB,GAAIyI,MAJM,QAChBu6B,EADgB,SAYlBN,EAAsBM,GAG1BhkC,QAAQC,IAAI,wBAAwB+jC,GAfd,2CAAH,qDAkBvBC,KAED,CAACx6B,IAIJoD,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACX+2B,EAAqB,CACvBpkC,WAAY,CACRE,aAAc,CACVoB,GAAIyI,MAJC,2CAAH,qDAUlBy6B,GAE4B,uCAAG,sBAAAn3B,EAAA,sEACrB02C,EAAkC,CACpC/jD,WAAY,CACRE,aAAc,CACVoB,GAAIyI,MAJW,2CAAH,oDAU5Bi6C,KAKD,CAACj6C,IAGJzJ,QAAQC,IAAI,mBAAoB8jC,GAI5B,yBAAKtlC,UAAU,wBACX,yBAAKA,UAAU,iCACX,6CAICklC,EAAoBv3B,MAAQ23B,GAAuB1kC,OAAOC,KAAKykC,GAAoBxkC,OAAS,GACzF,oCACI,kBAAC,GAAD,CACI6e,QAASwgB,EACTvgB,WAAYwgB,EACZr3B,SAAUu8B,EACVL,sBAAuBA,IAGlCxyB,GAAS,aAAaF,IACH,kBAAC,IAAD,CACAf,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHN,UAcxB,kBAAC,KAAD,CACIsC,UAAW,CAAEtR,KAAM,GACnB3N,QAASyzB,EAAoBx3B,WAC5Bw3B,EAAoBv3B,MAAQ23B,KAAwB1kC,OAAOC,KAAKykC,GAAoBxkC,OAAS,IAC1F,kBAAC,KAAD,CAAO2B,YAAY,kBAAkBO,MAAOwS,KAAMI,yBAGrDsvB,EAAoBv3B,MAAQ23B,GAAuB1kC,OAAOC,KAAKykC,GAAoBxkC,OAAS,GACzF,yBAAKd,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKslC,EAAkB,MAKtBA,EAAkB,MACf,oCAEI,8BACKA,EAAkB,OAQ9BA,EAAkB,WACf,0CAEI,8BACKA,EAAkB,YAK9BA,EAAkB,cACf,6CAEI,8BACKA,EAAkB,eAM9BA,EAAkB,MACf,oCAEI,8BACKA,EAAkB,OAO9BA,EAAkB,UACf,uCAEI,8BACKA,EAAkB,WAM9BA,EAAkB,OACf,qCAEI,8BACKA,EAAkB,QAK7BA,EAAkB,OAChB,qCAEI,8BACKA,EAAkB,QAM5BA,EAAkB,MAAYA,EAAkB,KAASxkC,OAAS,GAC5D,oCACG,qCAECwkC,EAAkB,KAASjkC,KAAI,SAAAqF,GAC5B,OACI,8BAIKA,EAAI7G,cAejD,yBAAKG,UAAU,6BACX,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,iCACX,uCAIJ,yBAAKA,UAAU,8BACVolC,EAAe13B,WACd,oCACA,yBAAKlN,MAAO,CACV8Q,OAAQ,UAEV,kBAAC,KAAD,CAAMgJ,KAAK,YAKI8qB,EAAez3B,QAAUy3B,EAAehjC,KAAKtB,OAAS,IAEnE,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,kBAAkBO,MAAOwS,KAAMI,0BAIzDwvB,EAAez3B,MAAQy3B,EAAehjC,MAAQgjC,EAAehjC,KAAKtB,OAAS,GACxE,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UAAW,+FAOf6G,KAAK,QAEL8D,WAAYgnB,EAAehjC,KAC3Bic,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH/d,MAAO,CACHsW,MAAO,qBAUvC,kBAAC,GAAD,CACE1T,MAAM,OACNob,UAAU,YACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCAEE,wBACElN,QAAS,WAEPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAEtC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YARZ,IAWIlT,OAUV,kBAAC,GAAD,CACEhB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCAEE,wBACElN,QAAS,WAEPsE,EAAQ7R,KAAR,uBAA6Bya,EAAOnc,MAEtC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAUH,kBAAC,GAAD,CACEhB,MAAM,cACNob,UAAU,QACVle,IAAI,KACJN,UAAU,yBAMhB,kBAAC,GAAD,CACEwT,MAAO,IACRpQ,MAAM,SACNob,UAAU,SACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACP,oCAEC,uBAAG5G,KAAK,MACP,0BACAtX,MAAO,CACLqX,SAAS,SAGRzT,YAcL,yBAAKpE,UAAU,mCACf,yBAAKA,UAAU,iCACX,0CAIJ,yBAAKA,UAAU,8BACV+kD,EAA4Br3C,WAC3B,oCACA,yBAAKlN,MAAO,CACV8Q,OAAQ,UAEV,kBAAC,KAAD,CAAMgJ,KAAK,YAIZyqC,EAA4Bp3C,QAAUo3C,EAA4B3iD,KAAKtB,OAAS,IAC7E,yBAAKN,MAAO,CACR4W,UAAW,UAEX,kBAAC,KAAD,CAAO3U,YAAY,oBAAoBO,MAAOwS,KAAMI,0BAI3DmvC,EAA4Bp3C,MAAQo3C,EAA4B3iD,MAAQ2iD,EAA4B3iD,KAAKtB,OAAS,GAC/G,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UAAW,+FAOf6G,KAAK,QAEL8D,WAAY2mC,EAA4B3iD,KACxCic,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH/d,MAAO,CACHsW,MAAO,qBASrB,kBAAC,GAAD,CACJ1T,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,0BAAgCya,EAAOnc,MAGzC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAETlT,OAYnB,kBAAC,GAAD,CACChB,MAAM,QACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAIb,kBAAC,GAAD,CACGoD,MAAM,cACNob,UAAU,kBACVle,IAAI,KACJN,UAAU,mCCtff4P,GAAmBC,MAAaC,MAAM,CACxCjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnEikB,GAAwB,SAACpN,GAC3BD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAK7C7G,GAAgB,CAClBpQ,KAAM,GACTsnB,OAAQ,GACR1kB,YAAa,GACb2kB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAoJEwY,GArIG,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,eAAgBC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,cAAc9H,EAAgC,EAAhCA,WAAWO,EAAqB,EAArBA,QAAqB,EAC9CrqB,EAAe,GAAI,oBAD2B,mBAC3F6xB,EAD2F,KAC3EC,EAD2E,KAI5FlwB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAjC,EAAA,sEACUiyB,EAA0B,CACjDt/B,WAAY,CACRE,aAAc,CACVoB,GAAI+N,EAAO/N,KAGnB4D,KAAM,CACFtG,KAAMyQ,EAAOzQ,QARJ,QACX2gC,EADW,SAa2B,OAAxBA,EAAa36B,QAOhCkS,EAJgB,WACrB,OAAO+gB,EAAQz3B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQqO,EAAO/N,IAGtCyoB,GAGRnH,EAAcjjB,OAAOkjB,OAAO,GAAIgV,EAAQ/gB,GAA1BnX,OAAA,IAAAA,CAAA,GAAuC4/B,IACrDvV,EAXiD,uBAW7B6N,EAAQ92B,MAAM,EAAG+V,IAXY,CAWJ8L,GAXI,aAWYiV,EAAQ92B,MAAM+V,EAAQ,KACzFwgB,EAAWtN,GAGF1pB,QAAQC,IAAI,uBAAuBg/B,GA3Ed5pB,OA4E9B6I,EA3EC9I,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,eACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAyEhDspB,GAAkB,IAITpc,KAGJzT,EAAQC,eAAc,GArCL,iCA/CO,IAACoG,IA+CR,OAAH,wDAyCZwY,EAAe,SAAC7d,GAClB6uB,GAAkB,IAIhB3vB,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOzQ,OAAS6Q,GAOzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENowB,EAFM,GAGJA,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAAK,CAC3DwmB,YAAa+Y,EAAa,IACvBA,EAAa,GAAOhZ,WACpBgZ,EAAa,GAAOhZ,UACvBG,kBAAmB6Y,EAAa,IAAWA,EAAa,GAAO9Y,iBAAmB8Y,EAAa,GAAO9Y,gBACtGJ,OAAQkZ,EAAa,IAAUA,EAAa,GAAOxgC,MAAQwgC,EAAa,GAAOxgC,KAC/EunB,cAAeiZ,EAAa,IAAUA,EAAa,GAAO59B,aAAe49B,EAAa,GAAO59B,gBAIpG,gBACGqO,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACC5Q,MAAO,CACxBuT,IAAK,QAGe3Q,MAAM,YACNuc,QAASwgB,EACThc,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAGhD,kBAACzR,EAAD,CACpBI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBsvB,EAAejzB,MAAf,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBsvB,EAAejzB,MAAf,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBCjJnBtB,GAAmBC,MAAaC,MAAM,CACxCjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnEikB,GAAwB,SAACpN,GAC3BD,KAAatJ,MAAM,CACfuJ,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAK7C7G,GAAgB,CAClBpQ,KAAM,IA6IK05B,GAhIK,SAAC,GAAqF,IAAnF1R,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0BgR,EAAiC,EAAjCA,QAASP,EAAwB,EAAxBA,WAAwB,EAE5D9pB,EAAe,GAAI,iBAFyC,mBAE9FgyB,EAF8F,KAEjFC,EAFiF,OAGrE7xB,oBAAS,GAH4D,mBAG9FkR,EAH8F,KAGpFF,EAHoF,OAI7DhR,oBAAS,GAJoD,mBAI9F+qB,EAJ8F,KAIhFC,EAJgF,KAM/FxpB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACOoyB,EAAkB,CACtCz/B,WAAY,CACRE,aAAc,CACVoB,GAAI+N,EAAO/N,KAGnB4D,KAAM,CACFtG,KAAMyQ,EAAOzQ,KAAK8qB,UART,QACXgW,EADW,SAaqB,OAArBA,EAAU96B,QAnDF+Q,OAoDrB6I,EAnDR9I,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,eACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAkDvCyhB,EAAW,CAAC,CACRh2B,GAAIo+B,EAAS,KAAW,GACxBrgC,IAAKqgC,EAAS,KAAW,GACzB9gC,KAAM8gC,EAAS,MAAY,KAHrB,oBAIL7H,KACLvoB,EAAQ2a,YACRpD,GAAyB,IAGzB9D,KAIJzT,EAAQC,eAAc,GA7BL,iCAtCO,IAACoG,IAsCR,OAAH,wDAkCZwY,EAAe,SAAC7d,GAClBuW,GAAyB,IAIvBrX,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOzQ,OAAS6Q,GASzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI5Q,MAAO,CACHuT,IAAK,QAET3Q,MAAM,eACNuc,QAASkI,EACT1D,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAGvD,kBAACzR,EAAD,CACbI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgByvB,EAAYpzB,MAAZ,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgByvB,EAAYpzB,MAAZ,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,YAMD,kBAAC,GAAD,CACI0O,WAAYia,EACZla,QAASia,EACT/Z,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCjH1CpC,IAZiB7N,MAAaC,MAAM,CAC1CjQ,KAAMgQ,MACHxQ,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoB4d,KAAxBD,QACA8P,IADwB7P,KAAhBC,YACG0R,IAAX9B,QAEFC,GAAU,SAAC,GAA0B,IAAxBrrB,EAAuB,EAAvBA,KAAMm2B,EAAiB,EAAjBA,WAAiB,EACV1pB,oBAAS,GADC,mBACjC8Q,EADiC,KACxBC,EADwB,OAEkB/Q,oBAAS,GAF3B,mBAEjC8e,EAFiC,KAEVC,EAFU,OAGOnf,EAC7C,GACA,oBALsC,mBAGjB+pB,GAHiB,WAQlC1iB,EAAUC,eAEV0iB,EAAe,uCAAG,WAAOl2B,GAAP,iBAAA+L,EAAA,sEACKkqB,EAAqB,CAC9Cv3B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBm2B,EADgB,SAUsB,OAAxBA,EAAa7yB,SAnDJ+Q,EAoDH,eAnD5BD,KAAa/N,QAAQ,CACnBgO,QAASA,GAAW,eACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,8BAiDnC6hB,EAAav2B,EAAKuf,QAAO,SAAC9f,GAAD,OAAUA,EAAKU,KAAOA,KACrDg2B,EAAWI,IAbS,iCAzCM,IAAC/hB,IAyCP,OAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAME0D,KAAK,QAEL8D,WAAYhc,GAEZ,kBAAC,GAAD,CACEgB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,6BAAmCya,EAAOnc,KAE1CqrB,EAAyBlP,IAE3Ble,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEpE,UAAU,uBACVoD,MAAM,GACN9C,IAAI,SACJ6tB,MAAM,QACN1P,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGxC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMpU,MAAM,aAC7B,0BACEpD,UAAU,WACVwR,QAAS,WACPoO,GAAW,GACXgO,EAAyBlP,KAG3B,kBAAC0P,GAAA,EAAD,SAKN,kBAAC,KAAD,CACEjJ,UAAW,kBAAMsT,EAAgB/Z,EAAOnc,KACxCa,MAAM,qBACNkhB,OAAO,MACPc,WAAW,MAEX,0BAAMplB,UAAU,4BACd,kBAAC8kB,GAAA,EAAD,aAQX6I,GACC,kBAAC,GAAD,CACEmL,QAAS12B,EACTm2B,WAAYA,EACZ4H,eAAgBxgB,EAChBygB,kBAAmBxgB,EACnBygB,cAAe1S,MA8GVkL,GArGC,SAAC,GAAe,qBACAhqB,mBAAS,IADV,mBACtBiqB,EADsB,KACbP,EADa,OAGU9pB,EAAe,GAAI,kBAH7B,mBAGtB4iB,EAHsB,KAGZC,EAHY,KAK7BljB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKgjB,EAAmB,CACpCrwB,WAAY,CACVC,OAAQ,CACNoV,SAAU,QACVC,eAAgB,SALR,OACRpR,EADQ,OAUdozB,EAAWpzB,GAVG,2CAAH,qDAYbygB,KACC,IAnB0B,MAqB6B/W,oBAAS,GArBtC,mBAqBtBgZ,EArBsB,KAqBCC,EArBD,KA+C7B,OACE,oCACE,yBAAK9nB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,SAEA,kBAAC,GAAD,CACE8uB,aAAa,EACb9uB,UAAU,qBACVU,YAAY,iBACZjB,SAAU,SAAC8R,GAAD,OApBD,SAAChS,GACpB,GAAI8xB,EAASjvB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk4B,EAAa3H,EAASjvB,KAAKuf,QAAO,SAAC9f,GAAD,OACtCA,EAAKhC,KAAKwa,cAAc5Y,SAASlC,EAAM8a,kBAEzCke,EAAWS,IAecjK,CAAaxd,EAAE/F,OAAOjM,WAG3C,kBAAC,IAAD,CAEES,UAAU,6BACV+C,KAAM,kBAACikB,GAAA,EAAD,MACNxV,QAAS,kBAAMsW,GAAyB,KAJ1C,YASF,yBAAK9nB,UAAU,uCACZqxB,EAAS1jB,MAAQmrB,EAAQh4B,OAAS,GACjC,kBAAC,GAAD,CAASy3B,WAAYA,EAAYn2B,KAAM02B,IAExCzH,EAAS3jB,WAAa,kBAACshB,GAAD,MAEtBqC,EAAS1jB,QAAUmrB,EAAQh4B,OAAS,IACnC,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,gBACZO,MAAOwS,KAAMI,4BAOvB,kBAAC,GAAD,CACEkjB,QAASA,EACTP,WAAYA,EACZ1Q,sBAAuBA,EACvBC,yBAA0BA,MCzR5BlY,GAAmBC,MAAaC,MAAM,CACxCjQ,KAAMgQ,MAAaxQ,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnEikB,GAAwB,SAACpN,GAC3BD,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,uBACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,yBAK7C7G,GAAgB,CAClBpQ,KAAM,IAoKKqgC,GAzJG,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAcS,EAA8B,EAA9BA,iBAA8B,EAC5CryB,EAAe,GAAI,oBADyB,mBACzF6xB,EADyF,KACzEC,EADyE,KAK1FlwB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAjC,EAAA,sEACUiyB,EAA0B,CACjDt/B,WAAY,CACRE,aAAc,CACVoB,GAAI+N,EAAO/N,KAGnB4D,KAAM,CACFtG,KAAMyQ,EAAOzQ,QARJ,QACX2gC,EADW,SAc2B,OAAxBA,EAAa36B,QAC7Bi7B,EAAiB,CACbv+B,GAAG+N,EAAO/N,GACVjC,IAAIgQ,EAAO/N,GACX1C,KAAMyQ,EAAOzQ,OAEjB0B,QAAQC,IAAI,uBAAuBg/B,GAvDd5pB,OAwDrB6I,EAvDR9I,KAAa/N,QAAQ,CACjBgO,QAASA,GAAW,eACpBnU,YAAa,GACbM,KAAM,kBAAC8T,GAAA,EAAD,CAAqBrW,MAAO,CAAEsW,MAAO,+BAkEvCkN,KAGJzT,EAAQC,eAAc,GACtB4vB,GAAkB,GAvCD,iCAnCO,IAACxpB,IAmCR,OAAH,wDA2CZwY,EAAe,SAAC7d,GAClB6uB,GAAkB,IAIhB3vB,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOzQ,OAAS6Q,GA4BzB,OALAnP,QAAQC,IAAI,gBAAgB6+B,GAMxB,kBAAC,IAAD,CACI1vB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENowB,EAFM,GAGJA,GAAiBz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAAK,CAC3DwmB,YAAa+Y,EAAa,IACvBA,EAAa,GAAOhZ,WACpBgZ,EAAa,GAAOhZ,UACvBG,kBAAmB6Y,EAAa,IAAWA,EAAa,GAAO9Y,iBAAmB8Y,EAAa,GAAO9Y,gBACtGJ,OAAQkZ,EAAa,IAAUA,EAAa,GAAOxgC,MAAQwgC,EAAa,GAAOxgC,KAC/EunB,cAAeiZ,EAAa,IAAUA,EAAa,GAAO59B,aAAe49B,EAAa,GAAO59B,gBAIpG,gBACGqO,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACC5Q,MAAO,CACxBuT,IAAK,QAGe3Q,MAAM,YACNuc,QAASwgB,EACThc,KAAM,SAAC5S,GAAD,OAAYlB,EAAakB,IAC/B6S,SAAUgL,EACV9K,OAAO,SACPsI,cAAe,CACXnb,QAAST,EACT6b,SAAU,SACVntB,SAAU+Q,EAA0BH,EAAQI,KAGhD,kBAACzR,EAAD,CACpBI,MAAM,OACNE,MAAO+Q,EAAOzQ,KACdA,KAAK,OACLF,QAAUsR,EAAQpR,MAAQkR,EAAOlR,OAC9BmR,GAAgBsvB,EAAejzB,MAAf,WAEnBzN,YAAcqR,EAAQpR,MAAQkR,EAAOlR,OAClCmR,GAAgBsvB,EAAejzB,MAAf,WACnB5N,SAAU,SAAC8R,GACVT,EAAaS,GACbL,EAAgB,iBChKjBwM,GAAwBC,KAAxBD,OAuPOyb,IAvPiBxb,KAAhBC,YACG0R,IAAX9B,OAMe,SAAC3X,GAAkB,IAAD,EACQpH,EAC7C,GACA,oBAHqC,mBAChCsyB,EADgC,KAChBC,EADgB,OAKYvyB,EACjD,GACA,oBAPqC,mBAKhCwyB,EALgC,KAKdC,EALc,OAUKryB,oBAAS,GAVd,mBAUhCsxB,EAVgC,KAUhBC,EAVgB,OAWGvxB,mBAAS,IAXZ,mBAWhCwxB,EAXgC,KAWjBS,EAXiB,KAavCv/B,QAAQC,IAAI,mBAAoBy/B,GAChC,IAAM//B,EAASuuB,eACT3Z,EAAUC,eACViiB,EAAQ92B,EAAM,GAyCpB,OAvCAkN,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACM0yB,EAAqB,CAC9C//B,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,QACfmJ,EADe,UAWnB5/B,QAAQC,IAAI,eAAgB2/B,GAE5BL,EAAiBK,IAbE,2CAAH,qDAiBpB5G,KACC,CAACvC,IAEJ5pB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf4yB,EAAuB,CAC3BjgC,WAAY,CACVE,aAAc,CACZoB,GAAIy1B,MAJW,2CAAH,qDAUpBoJ,KACC,CAACpJ,IAEJz2B,QAAQC,IAAI,mBAAoBy/B,GAEhC1/B,QAAQC,IAAI,cAAeN,GAGzB,yBAAKlB,UAAU,wBACb,yBAAKA,UAAU,iCACb,2CAEC+gC,EAAepzB,MACd0yB,GACAz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAClC,oCACE,kBAAC,GAAD,CACEq/B,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfS,iBAAkBA,IAEpB,kBAAC,IAAD,CACEtvB,QAAS,kBAAM4uB,GAAkB,IACjC9gC,KAAK,OACLyD,KAAM,kBAACqrB,GAAA,EAAD,OAHR,UAUR,kBAAC,KAAD,CAAUsC,UAAW,CAAEtR,KAAM,GAAK3N,QAASsvB,EAAerzB,WACvDqzB,EAAepzB,MACd0yB,KACEz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,IACpC,kBAAC,KAAD,CACE2B,YAAY,gBACZO,MAAOwS,KAAMI,yBAIlBmrB,EAAepzB,MACd0yB,GACAz/B,OAAOC,KAAKw/B,GAAev/B,OAAS,GAClC,yBAAKd,UAAU,gCACb,yBAAKA,UAAU,qCACb,4BAAKqgC,EAAa,MACjBA,EAAa,KACZ,mCAEE,8BAAOA,EAAa,SAQlC,yBAAKrgC,UAAU,iCACb,wCAEF,yBAAKA,UAAU,8BACZihC,EAAiBvzB,WAAa,kBAACshB,GAAD,MAC9BiS,EAAiBtzB,QAAUszB,EAAiB7+B,KAAKtB,OAAS,IACzD,yBACEN,MAAO,CACL4W,UAAW,UAGb,kBAAC,KAAD,CACE3U,YAAY,iCACZO,MAAOwS,KAAMI,0BAKlBqrB,EAAiBtzB,MAChBszB,EAAiB7+B,MACjB6+B,EAAiB7+B,KAAKtB,OAAS,GAC7B,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLytB,WAAY,OACZxtB,aAAc,iBACdytB,SAAU,SACVza,UACE,+FAOJ6G,KAAK,QAEL8D,WAAY6iB,EAAiB7+B,KAC7Bic,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL/d,MAAO,CACLsW,MAAO,qBAKb,kBAAC,GAAD,CACE1T,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,MAGvC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,OACNob,UAAU,OACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,oCACE,wBACElN,QAAS,WACPsE,EAAQ7R,KAAR,wBAA8Bya,EAAOnc,MAGvC/B,MAAO,CACL6X,WAAY,IACZvB,MAAO,OACPQ,OAAQ,YAGTlT,OAMT,kBAAC,GAAD,CACEhB,MAAM,aACNob,UAAU,aACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEoD,MAAM,gBACNob,UAAU,eACVle,IAAI,KACJN,UAAU,yBAGZ,kBAAC,GAAD,CACEwT,MAAO,IACPpQ,MAAM,UACNob,UAAU,UACVle,IAAI,KACJN,UAAU,uBACVye,OAAQ,SAACra,EAAMsa,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BACGlW,GAAQ6T,IAAO7T,GAAMoI,OAAO,sCC/M7CuG,GAAYF,IAAZE,QCxDOA,GD4DU,SAAC8C,GACxB,OACE,kBAAC,GAAD,CACEqvC,UAAU,EACV1kD,MAAO,CACLkX,gBAAiB,OACjBuW,WAAY,OACZ5W,WAAY,QACZD,UAAW,SAGb,kBAAC,KAAD,KACE,kBAAC,KAAD,CACE+tC,OAAK,EACLzR,KAAK,IACLj1B,OAAQ,kBAAM,kBAAC,KAAD,CAAUpK,GAAG,uBAE7B,kBAAC,KAAD,CACE8wC,OAAK,EACLzR,KAAK,SACLj1B,OAAQ,kBAAM,kBAAC,KAAD,CAAUpK,GAAG,uBAE7B,kBAAC,KAAD,CAAOq/B,KAAK,kBAAkByR,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,kBAAkByR,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,sBAAsByR,OAAK,GACrC,kBAACC,GAAD,OAMF,kBAAC,KAAD,CAAO1R,KAAK,mBAAmByR,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,eAAeyR,OAAK,GAC9B,kBAACE,GAAD,OAEF,kBAAC,KAAD,CAAO3R,KAAK,mBAAmByR,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,iBAAiByR,OAAK,GAChC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,qBAAqByR,OAAK,GACpC,kBAACG,GAAD,OAEF,kBAAC,KAAD,CAAO5R,KAAK,gBAAgByR,OAAK,GAC/B,kBAACI,GAAD,OAEF,kBAAC,KAAD,CAAO7R,KAAK,oBAAoByR,OAAK,GACnC,kBAACK,GAAD,OAEF,kBAAC,KAAD,CAAO9R,KAAK,gBAAgByR,OAAK,GAC/B,kBAACM,GAAD,OAEF,kBAAC,KAAD,CAAO/R,KAAK,eAAeyR,OAAK,GAC9B,kBAACO,GAAD,OAEF,kBAAC,KAAD,CAAOhS,KAAK,mBAAmByR,OAAK,GAClC,kBAACQ,GAAD,OAEF,kBAAC,KAAD,CAAOjS,KAAK,wBAAwByR,OAAK,GACvC,kBAACS,GAAD,OAEF,kBAAC,KAAD,CAAOlS,KAAK,mBAAmByR,OAAK,GAClC,kBAACU,GAAD,OAEF,kBAAC,KAAD,CAAOnS,KAAK,uBAAuByR,OAAK,GACtC,kBAACW,GAAD,OAEF,kBAAC,KAAD,CAAOpS,KAAK,4BAA4ByR,OAAK,GAC3C,kBAACY,GAAD,OAEF,kBAAC,KAAD,CAAOrS,KAAK,oBAAoByR,OAAK,GACnC,kBAACa,GAAD,OAEF,kBAAC,KAAD,CAAOtS,KAAK,sBAAsByR,OAAK,GACrC,kBAAC,GAAD,OAKF,kBAAC,KAAD,CAAOzR,KAAK,aAAayR,OAAK,GAC5B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,iBAAiByR,OAAK,GAChC,kBAACtkB,GAAD,OAEF,kBAAC,KAAD,CAAO6S,KAAK,iBAAiByR,OAAK,GAChC,kBAACc,GAAD,OAEF,kBAAC,KAAD,CAAOvS,KAAK,mBAAmByR,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,eAAeyR,OAAK,GAC9B,kBAACe,GAAD,OAEF,kBAAC,KAAD,CAAOxS,KAAK,mBAAmByR,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,wBAAwByR,OAAK,GACvC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,sBAAsByR,OAAK,GACrC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,mBAAmByR,OAAK,GAClC,kBAACgB,GAAD,OAEF,kBAAC,KAAD,CAAOzS,KAAK,gBAAgByR,OAAK,GAC/B,kBAACiB,GAAD,OAEF,kBAAC,KAAD,CAAO1S,KAAK,qBAAqByR,OAAK,GACpC,kBAACkB,GAAD,OAEF,kBAAC,KAAD,CAAO3S,KAAK,yBAAyByR,OAAK,GACxC,kBAACmB,GAAD,OAEF,kBAAC,KAAD,CAAO5S,KAAK,oBAAoByR,OAAK,GACnC,kBAACoB,GAAD,OAEF,kBAAC,KAAD,CAAO7S,KAAK,eAAeyR,OAAK,GAC9B,kBAACqB,GAAD,OAEF,kBAAC,KAAD,CAAO9S,KAAK,sBAAsByR,OAAK,GACrC,kBAACsB,GAAD,OAEF,kBAAC,KAAD,CAAO/S,KAAK,0BAA0ByR,OAAK,GACzC,kBAACuB,GAAD,OAEF,kBAAC,KAAD,CAAOhT,KAAK,mBAAmByR,OAAK,GAClC,kBAACwB,GAAD,OAEF,kBAAC,KAAD,CAAOjT,KAAK,iBAAiByR,OAAK,GAChC,kBAACyB,GAAD,OAEF,kBAAC,KAAD,CAAOlT,KAAK,qBAAqByR,OAAK,GACpC,kBAAC0B,GAAD,OAGF,kBAAC,KAAD,CAAOnT,KAAK,8BAA8ByR,OAAK,GAC7C,kBAACe,GAAD,OAGF,kBAAC,KAAD,CAAOxS,KAAK,kBAAkByR,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,sBAAsByR,OAAK,GACrC,kBAAC2B,GAAD,OAEF,kBAAC,KAAD,CAAOpT,KAAK,cAAcyR,OAAK,GAC7B,kBAAC4B,GAAD,OAEF,kBAAC,KAAD,CAAOrT,KAAK,kBAAkByR,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,uBAAuByR,OAAK,GACtC,kBAAC6B,GAAD,OAGF,kBAAC,KAAD,CAAOtT,KAAK,kBAAkByR,OAAK,GACjC,kBAAC8B,GAAD,OAEF,kBAAC,KAAD,CAAOvT,KAAK,kBAAkByR,OAAK,GACjC,kBAAC+B,GAAD,OAEF,kBAAC,KAAD,CAAOxT,KAAK,6BAA6ByR,OAAK,GAC5C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,wBAAwByR,OAAK,GACvC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,yBAAyByR,OAAK,GACxC,kBAACgC,GAAD,OAEF,kBAAC,KAAD,CAAOzT,KAAK,0BAA0ByR,OAAK,GACzC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,2BAA2ByR,OAAK,GAC1C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,yBAAyByR,OAAK,GACxC,kBAACiC,GAAD,OAEF,kBAAC,KAAD,CAAO1T,KAAK,6BAA6ByR,OAAK,GAC5C,kBAACkC,GAAD,OAEF,kBAAC,KAAD,CAAO3T,KAAK,aAAayR,OAAK,GAC5B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,eAAeyR,OAAK,GAC9B,kBAACmC,GAAD,UE3PFt0C,GAAWH,IAAXG,OCJOA,GDWS,SAAC6C,GACrB,OACI,kBAAC,GAAD,CAAQrV,MAAO,CAAEoX,UAAW,SAAUZ,WAAY,OAAQF,MAAO,YAAjE,qEEkDF3D,GAAoB,CACxBX,UAAWY,EAAiBZ,UAC5B0uC,gBAAiBC,EAAsBD,iBAQ1B7tC,gBALS,SAAC7F,GAAD,MAAY,CAClC6E,YAAa7E,EAAM6E,eAImBc,GAAzBE,EAlDH,SAAC,GAAoC,IAAlCb,EAAiC,EAAjCA,UAAiC,KAAtB0uC,gBAIpBzyC,EAAe,GAAI,uBAJuB,mBAG5C84C,GAH4C,WAkB9C,OAZAn5C,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACHi5C,EAA6B,IAD1B,QACfp6C,EADe,SAIVA,EAAG,MACZqF,EAAUrF,EAAG,MAAY,IALN,2CAAH,qDAQpBq6C,KACC,IAGD,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO9T,KAAK,eAAeyR,OAAK,GAC9B,kBAAC,EAAD,QAGJ,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAQ3kD,MAAO,CAAEu8B,UAAW,UAC1B,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAQ/8B,UAAU,eAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEF,kBAAC,GAAD,Y,wCCzDH,SAASynD,GAAmBC,GAC/B,OAAQA,IAASA,EAAKC,QAAUD,EAAKE,SAGlC,SAASC,GAAiBvoD,GAC7B,OAAOA,EAAKmC,SAAU,eAAkBnC,EAAKmC,SAAU,WCH3D,I,GCAekQ,GDAK,WAA0B,IAAxBnE,EAAuB,uDAAf,EAAGC,EAAY,uCACzC,OAAKq6C,GAAyBr6C,EAAOi6C,MAC1Bl6C,EAENs6C,GAAsBr6C,EAAOnO,MACvBkO,EAAQ,EAEZA,EAAQ,GETZ,SAASu6C,GAAsBC,EAAMvjD,GAC1C,OAAOujD,EAAK3mD,KAAI,SAAAQ,GAAI,OAAIA,EAAK4C,QAAQlC,MAAIN,QAAQwC,EAAQlC,IAGpD,SAAS0lD,GAAYxjD,EAASiB,EAAUwiD,GAC7C,MAAO,CACLzjD,UACAiB,WACAwiD,yBCJG,I,GCMQv2C,GCKKW,GAFC,GAEDA,EAAA,sBCdE,eDeJ,SAAC9E,EAAOC,GAAY,IAAD,EACoBA,EAAOG,QAApDnJ,EADyB,EACzBA,QAASiB,EADgB,EAChBA,SAAUwiD,EADM,EACNA,sBAE3B,OAAe,IADDJ,GAA4Bt6C,EAAO/I,GAEzC,CACJqjD,GAAkBrjD,EAASiB,EAAUwiD,IADvC,oBAEK16C,IAI4BA,EAAMmU,QACvC,SAAC9f,GAAD,OAAUA,EAAK4C,QAAQlC,KAAOkC,EAAQlC,SAZxB,gBCbgB,6BD+BJ,SAACiL,EAAOC,GAAY,IACxClI,EAAckI,EAAOG,QAArBrI,UAER,OAAIA,EAAUzE,OAAS,EACdyE,EAEA,aAAIiI,MAxBG,gBCZuB,wCDwCJ,SAACA,EAAOC,GAAY,IAC/ChJ,EAAYgJ,EAAOG,QAAnBnJ,QAEFsT,EAAQ+vC,GAA4Bt6C,EAAO/I,EAAQA,SACzD,IAAe,IAAXsT,EACF,MAAM,GAAN,oBAAWvK,GAAX,gBAAuB/I,EAAvB,CAAgCyjD,uBAAuB,MAClD,IAAe,IAAXnwC,IAAiBtT,EAAQyjD,sBAAuB,CACzD,IAAMC,EAA6B36C,EAAMmU,QACvC,SAAC9f,GAAD,OAAUA,EAAK4C,QAAQlC,KAAOkC,EAAQA,QAAQlC,MAGhD,MAAM,GAAN,oBACK4lD,GADL,gBAEO1jD,EAFP,CAEgByjD,uBAAuB,MAIzC,IAAMC,EAA6B36C,EAAMmU,QACvC,SAAC9f,GAAD,OAAUA,EAAK4C,QAAQlC,KAAOkC,EAAQA,QAAQlC,MAGhD,MAAM,GAAN,oBACK4lD,GADL,gBAEO1jD,EAFP,CAEgByjD,uBAAuB,SAnDvB,gBCXW,wBDkEJ,SAAC16C,EAAOC,GAAY,IAAD,EACZA,EAAOG,QAA7BnJ,EADkC,EAClCA,QAASiB,EADyB,EACzBA,SACXqS,EAAQ+vC,GAA4Bt6C,EAAO/I,GAE3Cof,EAAcjjB,OAAOkjB,OAAO,GAAItW,EAAMuK,GAAQ,CAAErS,aACtD,MAAM,GAAN,oBAAW8H,EAAMxL,MAAM,EAAG+V,IAA1B,CAAkC8L,GAAlC,aAAkDrW,EAAMxL,MAAM+V,EAAQ,QA5DtD,gBCVE,eDwEJ,SAACvK,EAAOC,GAAY,IAE5BsK,EAAQ+vC,GAA4Bt6C,EADtBC,EAAOG,QAAnBnJ,SAER,MAAM,GAAN,oBAAW+I,EAAMxL,MAAM,EAAG+V,IAA1B,aAAqCvK,EAAMxL,MAAM+V,EAAQ,QAjEzC,gBCTC,cD4EJ,iBAAM,MAnEH,KEfb,SAASqwC,GAA0BC,EAAUzxB,GAClD,OAAOyxB,EAAShnD,KAAI,SAAAQ,GAAI,OAAIA,KAAMI,QAAQ20B,GCM7BjlB,I,GAAAA,GCOSW,GAFH,GAEGA,EAAA,sBCdF,mBDeJ,SAAC9E,EAAOC,GAAY,IAC1BmpB,EAAcnpB,EAAOG,QAArBgpB,UAGR,OAAe,IADDkxB,GAAgCt6C,EAAOopB,GAE7C,GAAN,oBAAWppB,GAAX,CAAkBopB,IAGeppB,EAAMmU,QACvC,SAAC9f,GAAD,OAAUA,IAAS+0B,QAVD,gBCbI,yBD4BJ,SAACppB,EAAOC,GAC5B,IAAM66C,EAAW76C,EAAOG,QACxB,OAAO,aAAI06C,MAjBS,gBCZF,mBDgCJ,SAAC96C,EAAOC,GAAY,IAE5BsK,EAAQ+vC,GAAgCt6C,EADxBC,EAAOG,QAArBgpB,WAER,MAAM,GAAN,oBAAWppB,EAAMxL,MAAM,EAAG+V,IAA1B,aAAqCvK,EAAMxL,MAAM+V,EAAQ,QAvBrC,gBCXH,kBDoCJ,iBAAM,MAzBC,KETjB,I,GCEQpG,GCQSW,GAFH,GAEGA,EAAA,sBCbgB,qCDcJ,SAAC9E,EAAOC,GAAY,IAC5C1G,EAAa0G,EAAOG,QAApB7G,SAER,OAAIA,EAASjG,OAAS,EACaiG,EAAS4a,QAAO,SAASld,GACxD,OAAkC,GAA3B+I,EAAMvL,QAAQwC,MAIhB,aAAI+I,MAVO,gBCXF,mBDwBJ,SAACA,EAAOC,GAAY,IAE5BsK,EE9BH,SAAgCiwC,EAAMvjD,GACzC,OAAOujD,EAAK3mD,KAAK,SAAAQ,GAAI,OAAIA,EAAK4C,QAAQlC,MAAKN,QAASwC,EAAQlC,IF6B9CulD,CAA4Bt6C,EADtBC,EAAOG,QAAnBnJ,SAER,MAAM,GAAN,oBAAW+I,EAAMxL,MAAM,EAAG+V,IAA1B,aAAqCvK,EAAMxL,MAAM+V,EAAQ,QAhBrC,gBCVH,kBD4BJ,iBAAM,MAlBC,KGfXwwC,GAAM,aCAZ,SAASC,GAAyBC,EAAW7mC,GAClD,OAAO6mC,EAAUpnD,KAAI,SAAAQ,GAAI,OAAIA,EAAKvB,OAAK2B,QAAQ2f,EAAMthB,KCMxCqR,I,YAAAA,GCWWW,GAFL,GAEKA,EAAA,sBACvBo2C,IAAY,SAACl7C,EAAOC,GAAY,IACvBmU,EAAUnU,EAAOG,QAAjBgU,MACF7J,EAAQ+vC,GAA+Bt6C,EAAOoU,GACpD,IAAe,IAAX7J,EACF,MAAM,CAAqB6J,GAA3B,oBAAsCpU,IAGxC,IAAMm7C,EAAcn7C,EAAMuK,GACpB8L,EAAcjjB,OAAOkjB,OAAO,GAAI6kC,GACtC,MAAM,GAAN,oBAAWn7C,EAAMxL,MAAM,EAAG+V,IAA1B,CAAkC8L,GAAlC,aAAkDrW,EAAMxL,MAAM+V,EAAQ,QAVhD,gBHjBJ,iBG6BJ,SAACvK,EAAOC,GAAY,IAC1BmU,EAAUnU,EAAOG,QAAjBgU,MACFgnC,EAAWp7C,EAAMuU,MAAK,SAAAlgB,GAAI,OAAIA,EAAKvB,MAAQshB,EAAMthB,OACjDuoD,EAA6Br7C,EAAMmU,QAAO,SAAA9f,GAAI,OAAIA,EAAKvB,MAAQshB,EAAMthB,OAC3E,MAAM,GAAN,oBAAWuoD,GAAX,gBAA4CD,EAA5C,GAAyDhnC,QAhBnC,gBHhBJ,iBGkCJ,SAACpU,EAAOC,GAAY,IAE5BsK,EAAQ+vC,GAA+Bt6C,EADzBC,EAAOG,QAAnBnJ,SAER,MAAM,GAAN,oBAAW+I,EAAMxL,MAAM,EAAG+V,IAA1B,aAAqCvK,EAAMxL,MAAM+V,EAAQ,QArBnC,gBHfL,gBGsCJ,iBAAM,MAvBG,KCPpB+wC,GAAiBx2C,GAAe,KAAfA,CAAA,gBCVgB,mCDWA,SAAE9E,EAAOC,GAAT,OAAqBA,EAAOG,QAAQnJ,YAGrEskD,GAAcz2C,GAAe,GAAfA,CAAA,gBCVgB,gCDWA,SAAE9E,EAAOC,GAAT,OAAqBA,EAAOG,QAAQ7G,aERzD4K,GFWAq3C,aAAiB,CAC5BC,QAASH,GACTI,KAAMH,KGVJI,GAAc72C,IAAc,EAAdA,EAAA,sBCXC,iBDYJ,kBAAM,KADH,gBCRE,kBDUJ,kBAAM,KAFJ,KAKd82C,GAA4B92C,GAAc,KAAdA,CAAA,gBCXM,oCDYJ,SAAC9E,EAAOC,GAAR,OAAmBA,EAAOG,QAAQy7C,gBETvD13C,GFYAq3C,aAAgB,CAC7BlP,gBAAiBqP,GACjBG,mBAAoBF,KGDPG,GAhBKj3C,GAFC,GAEDA,EAAA,sBCLU,2BDMJ,SAAC9E,EAAOC,GAAY,IAClCmhB,EAAenhB,EAAOG,QAAtBghB,WAER,OAAIA,GAIG,aAAIphB,MARK,gBCJU,2BDeJ,SAACA,EAAOC,GAC9B,OAAO,aAAID,MAZK,KEELmE,I,OAAAA,ICUA43C,GAZKj3C,GAFC,GAEDA,CAAA,gBCLa,8BDMJ,SAAC9E,EAAOC,GAAY,IACrCyE,EAAazE,EAAOG,QAApBsE,SAER,OAAIA,EACK,eAAK1E,EAAZ,GAAsB0E,GAGjB,eAAK1E,OENDmE,I,OAAAA,ICcA43C,GAhBKj3C,GAFC,GAEDA,EAAA,sBCLK,sBDMJ,SAAC9E,EAAOC,GAAY,IAC7BstB,EAAWttB,EAAOG,QAAlBmtB,OAER,OAAIA,GAIG,aAAIvtB,MARK,gBCJK,sBDeJ,SAACA,EAAOC,GACzB,OAAO,aAAID,MAZK,KEELmE,I,OAAAA,ICcA43C,GAhBKj3C,GAFC,GAEDA,EAAA,sBCLI,gBDMJ,SAAC9E,EAAOC,GAAY,IAC5BtI,EAASsI,EAAOG,QAAhBzI,KAER,OAAIA,GAIG,aAAIqI,MARK,gBCJI,gBDeJ,SAACA,EAAOC,GACxB,OAAO,aAAID,MAZK,KEELmE,I,OAAAA,ICLT63C,GAA8B,qBAAbC,SAA2B,4BAA8B,OAsBjEC,GApBI,kBAAO,SAAEnlD,GAAF,OAAY,SAAEkJ,GACpC,IAAMoe,EAAStnB,EAAMkJ,GACrB,IAAMA,EAAOi6C,OAASj6C,EAAOi6C,KAAKC,MAC9B,OAAO97B,EAHqC,MAMTpe,EAAOi6C,KAAtChU,EANwC,EAMxCA,KANwC,IAMlCpnC,cANkC,MAMzB,MANyB,EAMlBnG,EANkB,EAMlBA,KAE9B,IAAMutC,EACF,MAAM,IAAI7lC,MAAJ,gDAAqDJ,EAAOnO,OAGtE,IAAM0B,EAAG,UAAOwoD,IAAP,OAAmB9V,GAE5B,OAAOzmC,GAAOjM,EAAKsL,EAAQnG,GAAO2L,MAC9B,SAAA3E,GAAG,OAiBX,SAAyBA,EAAKM,EAAQlJ,GAOlC,OANAA,EAAM,CACFjF,KAAK,GAAD,OAAMmO,EAAOnO,KAAb,cACJsO,QAAST,EACTu6C,KAAMj6C,EAAOi6C,OAGVv6C,EAxBIw8C,CAAgBx8C,EAAKM,EAAQlJ,MACpC,SAAA4mB,GAAG,OAMX,SAAuBA,EAAK1d,EAAQlJ,GAOhC,OANAA,EAAM,CACFjF,KAAK,GAAD,OAAMmO,EAAOnO,KAAb,WACJsO,QAASud,EACTu8B,KAAMj6C,EAAOi6C,OAGV31C,QAAQE,OAAQkZ,GAbZy+B,CAAcz+B,EAAK1d,EAAQlJ,SCpB1B,CACZ,mBACA,gBACFzC,KAAM,KAEQ,CACZ,oBACA,gBACFA,KAAM,KAEQ,CACZ,yBACA,gBACFA,KAAM,KAEQ,CACZ,kBACA,gBACFA,KAAM,KCZR,IAAM+nD,GAAcb,aAAgBc,GAE9BC,GAAgB,CACpBzpD,IAAK,OACL0pD,QAASA,MAILC,GAAWC,aAAeH,GAAeF,IAe/C,IAbwB57C,GAalBk8C,IAbkBl8C,GAaK,GAZpBm8C,aACLH,GACAh8C,GACAo8C,aACEC,aAAgBZ,IAChB9pB,OAAO2qB,6BACH3qB,OAAO2qB,+BACP,SAACC,GAAD,OAAOA,M,IAOCC,aAAaN,I,eCZzBO,GAAa,IAAIC,IAMtBC,IAASnsC,OAER,kBAAC,IAAD,CAAe0rC,MAAOA,IACrB,kBAAC,gBAAD,KACC,kBAAC,IAAD,CAAyBO,WAAYA,IACpC,kBAAC,GAAD,SAMHjB,SAASoB,eAAe,W","file":"static/js/main.59eef80e.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst { TextArea } = Input;\n\ninterface Props {\n  label?: string;\n  type?: string;\n  defaultValue?: string;\n  value?: string;\n  onChange?: any;\n  disabled?: boolean;\n  isError?: boolean;\n  errorString?: string;\n  name?: string;\n  addonBefore?: string;\n  required?: boolean;\n  placeHolder?: string;\n  min?: any;\n}\n\nconst Demo = ({\n  required,\n  addonBefore,\n  label,\n  type,\n  defaultValue,\n  value,\n  onChange,\n  disabled,\n  isError,\n  errorString,\n  name,\n  placeHolder,\n  min,\n}: Props) => {\n  return (\n    <>\n      {label && <h3 className='inputFieldLabel'>{label}</h3>}\n\n      <Form.Item\n        // hasFeedback={true}\n        validateStatus={isError ? 'error' : ''}\n        // hasFeedback validateStatus=\"success\"\n        help={errorString}\n        // rules={[{ required: true }]}\n      >\n        <Input\n          onKeyDown={(event) => {\n            if (type === 'number') {\n              if (event.key === 'e' || event.key === '-') {\n                event.preventDefault();\n              }\n            }\n          }}\n          min={min}\n          required={required}\n          type={type}\n          addonBefore={addonBefore}\n          style={{\n            borderRadius: '0',\n          }}\n          name={name}\n          disabled={disabled}\n          value={value}\n          onChange={onChange}\n          className='inputclassName'\n          placeholder={placeHolder}\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Demo;\n","const isObjectEmpty = value => {\n  return !value || !Object.keys(value).length > 0;\n};\n\nconst manipulateURL = (url, urlOptions = {}) => {\n  if (isObjectEmpty(urlOptions)) return url;\n\n  const params = urlOptions.params || {};\n  const placeHolders = urlOptions.placeHolders || {};\n\n\n\n  return url\n    .split('/')\n    .map(currentValue => {\n      console.log({ currentValue })\n      if (currentValue?.includes(':') && !isObjectEmpty(placeHolders) && !currentValue?.includes('?')) {\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\n        currentValue = actualPlaceholderValue;\n      }\n\n      if (currentValue?.includes(':') && !isObjectEmpty(placeHolders) && currentValue?.includes('?')) {\n        let fuckValue = currentValue.split('?');\n        if (fuckValue && fuckValue.length > 0) {\n          fuckValue = fuckValue.map(item => {\n            return placeHolders[item.replace(':', '')] ? placeHolders[item.replace(':', '')] : item\n          })\n        }\n        let actualPlaceholderValue = fuckValue.join('?');\n        currentValue = actualPlaceholderValue;\n      }\n\n      if (currentValue?.includes('?') && !currentValue?.includes('/')) {\n        currentValue = currentValue\n          .split('&')\n          .map(currentValue => {\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\n            return currentValue.replace(param, params[param] || '');\n          })\n          .join('&');\n      }\n      return currentValue;\n    })\n    .join('/');\n};\n\nexport default manipulateURL;\n","import config from '../config.json';\nimport apiMap from '../apiMap.json';\nimport Converter from './converter.js';\n\n// import utils\nimport { manupulateURL } from './utils';\n\nlet converter = new Converter();\n\nclass Connector {\n  //TODO\n  constructor() {\n    this.options = {};\n  }\n\n  /**\n   * @method request sends request to server\n   * this function determines api url and method from config.json\n   * and sends request and converts recieved data to general format\n   * @param {String} item\n   * @param {String} format\n   * @param {Object} data optional\n   * @returns {Object}  converted data\n   */\n\n  async request(item, format = 'json', options = {}) {\n    let api = apiMap[config.server][item]; //api url & method\n\n    // configuring options for fetch request\n\n    this.options = {\n      ...this.options,\n      method: api.method,\n      credentials: 'include',\n      headers: new Headers({\n        ...(format === 'json' && {\n          'Content-Type': 'application/json',\n        }),\n        ...(options.headers && {\n          ...options.headers,\n        }),\n      }),\n\n      ...(format === 'json'\n        ? {\n          body: api.method !== 'get' ? JSON.stringify(options.body) : null,\n        }\n        : {\n          body: api.method !== 'get' ? options.body : null,\n        }),\n    };\n\n    function getUrlOptions(urlOptions) {\n      if (api.method === 'get') {\n        let params = {};\n\n        if (!urlOptions?.params?.limitNumber) {\n          params.limitNumber = 100000000000;\n        };\n\n        console.log('urlparams', urlOptions);\n\n        return {\n          ...(urlOptions && {\n            ...urlOptions,\n          }),\n          params: {\n            ...(urlOptions &&\n              urlOptions.params && {\n              ...urlOptions.params,\n            }),\n            ...params,\n          },\n        };\n      }\n      return urlOptions;\n    }\n\n    function getUrl(url) {\n      if (url && api.method === 'get') {\n        return url.includes('?')\n          ? url + '&limit=limitNumber'\n          : url + '?limit=limitNumber';\n      }\n      return url;\n    }\n\n    //*replace variable parts in url with actual data if params exists |or| just return the url\n\n    console.log('myUrl', getUrl(api.url), getUrlOptions(options.urlOptions));\n\n    const url = manupulateURL(\n      getUrl(api.url),\n      getUrlOptions(options.urlOptions)\n    );\n\n    console.log('myUrl', url);\n\n    // change the formate to text if the server is wooCommerce\n    if (config['server'] === 'wooCommerce') {\n      // format = 'text';\n    }\n\n    try {\n      let res = await fetch(config.baseURL + url, this.options);\n\n      if (res.status >= 200 && res.status < 300) {\n        let formattedData = await res['json'](); //await res.json(), res.text()\n        if (formattedData.status === 'error') {\n          throw formattedData.error;\n        }\n\n        let convertedData = await converter[item || ''](formattedData); //convert recieved data to app general format\n        return convertedData;\n      } else {\n        let error = await res['json']();\n\n        throw error;\n      }\n    } catch (err) {\n      throw err;\n      //TODO: breakdown errors\n    }\n  }\n}\n\nexport default Connector;\n","import config from '../config.json';\nimport dataMap from '../dataMap.json';\nimport moment from 'moment';\n\nclass Converter {\n  /**\n   * @public\n   * @method categoryList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async categoryList(resData) {\n    const data = resData.data || [];\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          ...category,\n          id: category._id || '',\n          key: category._id || '',\n          name: category.name && category.name,\n          description: category.description && category.description,\n          productCount: category.productCount || 0,\n          parent: category.parent || '',\n          cover: category.cover\n            ? `${config['baseURL']}${category.cover.thumbnail}`\n            : null,\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\n          thumbnail: category.thumbnail ? `${config['baseURL']}${category.thumbnail}` : null,\n          image:\n            (data.image &&\n              data.image.length > 0 &&\n              data.image.map((img) => {\n                return {\n                  id: img._id || '',\n                  name: img.name && img.name,\n                  cover: `${config['baseURL']}${img.medium}`,\n                  added: img.added,\n                  title: img.title,\n                  labels: img.labels,\n                  alt: img.alt,\n                  caption: img.caption,\n                };\n              })) ||\n            [],\n          subCount:\n            category.subCategory.length === 1\n              ? category.subCategory[0] && category.subCategory[0].name\n                ? category.subCategory.length\n                : 0\n              : category.subCategory.length,\n          ...(category.subCategory &&\n            category.subCategory.length > 0 &&\n            category.subCategory[0] &&\n            category.subCategory[0]['name'] && {\n            children: category.subCategory.map((subCat) => {\n              return {\n                id: subCat._id || '',\n                key: subCat._id,\n                name: subCat.name && subCat.name,\n                description: subCat.description && subCat.description,\n                cover: subCat.cover\n                  ? `${config['baseURL']}${subCat.cover.thumbnail}`\n                  : '',\n              };\n            }),\n          }),\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postCategoryList(resData) {\n    const data = resData.data && resData.data ? resData.data : [];\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          id: category._id || '',\n          key: category._id || '',\n          name: category.name && category.name,\n          description: category.description && category.description,\n          cover: category.cover\n            ? `${config['baseURL']}${category.cover.thumbnail}`\n            : null,\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postCategoryDetail(resData) {\n    const data = resData;\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        cover: {\n          cover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''\n            }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        url: data.url,\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    }\n  }\n\n  /**\n   * @public\n   * @method getAllNotification convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getAllNotification(resData) {\n    const data = resData.data || [];\n\n    let notiData = [];\n    if (data && data.length > 0) {\n      data.forEach((not) => {\n        if (!not.read) {\n          notiData.push(not);\n        }\n      });\n    }\n\n    return notiData;\n  }\n\n  /**\n   * @public\n   * @method getAllNotificationPage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getAllNotificationPage(resData) {\n    const data = resData.data || [];\n    const formatedData =\n      data.length > 0 &&\n      data.map((noti) => {\n        return {\n          id: noti._id || '',\n          key: noti._id || '',\n          heading: noti.heading && noti.heading,\n          text: noti.text && noti.text,\n          type: noti.type,\n          link: noti.link || '',\n          added: noti.added || '',\n          read: noti.read,\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method categorySelectist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async categorySelectist(resData) {\n    const data = resData.data || [];\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          id: category._id || '',\n          key: category._id || '',\n          title: category.name && category.name,\n          ...(category.subCategory &&\n            category.subCategory.length > 0 &&\n            category.subCategory[0] &&\n            category.subCategory[0]['name'] && {\n            children: category.subCategory.map((subCat) => {\n              return {\n                id: subCat._id || '',\n                key: subCat._id,\n                title: subCat.name && subCat.name,\n                cover: subCat.cover\n                  ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : ''\n                  }`\n                  : '',\n              };\n            }),\n          }),\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method categorySelectist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postSelectCategoryList(resData) {\n    const data = resData.data;\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          id: category._id || '',\n          key: category._id || '',\n          title: category.name && category.name,\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method categoryProducts convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async categoryProducts(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''\n            }`,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n              parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          available:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    // return {\n    // \tdata: convertedData,\n    // \tisNext: isNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getCart convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getCart(resData) {\n    const cartItems = resData.items || [];\n    const convertedData =\n      cartItems.length > 0 &&\n      cartItems.map((cartItem) => {\n        return {\n          id: cartItem._id || '',\n          name: cartItem.name && cartItem.name,\n          cover: `${config['baseURL']}${cartItem.cover.medium}`,\n          regularPrice: cartItem.price && cartItem.price['regular'],\n          offerPrice: cartItem.price && cartItem.price['offer'],\n          quantity: cartItem.quantity,\n          url: cartItem.url,\n          cartKey: cartItem.cartKey,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addtoCart convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async addtoCart(resData) {\n    let data = false;\n\n    if (resData['inserted']) {\n      data = {\n        id: resData['inserted']._id || '',\n        name: resData['inserted'].name && resData['inserted'].name,\n        cover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\n        regularPrice:\n          resData['inserted'].price && resData['inserted'].price['regular'],\n        offerPrice:\n          resData['inserted'].price && resData['inserted'].price['offer'],\n        quantity: resData['inserted'].quantity,\n        url: resData['inserted'].url,\n        cartKey: resData['inserted'].cartKey,\n      };\n    }\n\n    const convertedData = data;\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method removeFromCart convert api data from API to general format based on config server\n   * @param {Object} resData response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async removeFromCart(resData) {\n    let convertedData = false;\n    if (resData) {\n      convertedData = true;\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCartItem convert api data from API to general format based on config server\n   * @param {Object} resData response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updateCartItem(resData) {\n    let convertedData = false;\n    if (resData['updated']) {\n      convertedData = {\n        quantity: resData.updated['quantity'],\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method clearCart convert api data from API to general format based on config server\n   * @param {Object} resData response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async clearCart(data) {\n    if (data && data['msg']) {\n      return {\n        status: 'ok',\n      };\n    }\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getWishlist(resData) {\n    // const cartItems = resData.items || [];\n    const convertedData = resData;\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async addWishlist(resData) {\n    if (resData && resData['msg'] === 'wishlist updated') {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method removeFromWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async removeFromWishlist(resData) {\n    if (resData && resData['msg'] === 'wishlist updated') {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method removeAllWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async removeAllWishlist(resData) {\n    if (resData && resData['msg'] === 'wishlist updated') {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method tagProducts convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async tagProducts(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''\n            }`,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n              parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          avalable:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    // return {\n    // \tdata: convertedData,\n    // \tisNext: isNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method brandProducts convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async brandProducts(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''\n            }`,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n              parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          avalable:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    // return {\n    // \tdata: convertedData,\n    // \tisNext: isNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method productSearch convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async productSearch(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      (data.length > 0 &&\n        data.map((product) => {\n          return {\n            id: product._id || '',\n            name: product.name && product.name,\n            description: product.description && product.description,\n            cover: `${config['baseURL']}${product.cover.thumbnail}`,\n            regularPrice: product.price && product.price['regular'],\n            offerPrice: product.price && product.price['offer'],\n            url: product.url,\n            unit: product.unit,\n            date: product.date,\n            venue: product.venue,\n            pricing: product.pricing,\n          };\n        })) ||\n      [];\n\n    return {\n      data: convertedData,\n      isNext,\n    };\n  }\n\n  /**\n   * @public\n   * @method productList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async productList(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n    const total = resData.page?.totalIndex;\n\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          ...product,\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: product.cover\n            ? `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''\n            }`\n            : product.cover,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          image:\n            (data.image &&\n              data.image.length > 0 &&\n              data.image.map((img) => {\n                return {\n                  id: img._id || '',\n                  name: img.name && img.name,\n                  cover: `${config['baseURL']}${img.original}`,\n                  added: img.added,\n                  title: img.title,\n                  labels: img.labels,\n                  alt: img.alt,\n                  caption: img.caption,\n                };\n              })) ||\n            [],\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n              parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          available:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n              product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    convertedData = {\n      data: convertedData,\n      next: isNext,\n      total\n    };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postList(resData) {\n    const data = resData.data;\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((post) => {\n        return {\n          ...post,\n          id: post._id || '',\n          name: post.name && post.name,\n          body: post.body && post.body,\n          preparationTime: post.preparationTime && post.preparationTime,\n          servingSize: post.servingSize && post.servingSize,\n          cookingTime: post.cookingTime && post.cookingTime,\n          cover: post.cover\n            ? `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''\n            }`\n            : null,\n          url: post.url,\n          category: post.category,\n          tags: post.tags,\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method tagPostList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async tagPostList(resData) {\n    const data = resData.data;\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((post) => {\n        return {\n          ...post,\n          id: post._id || '',\n          name: post.name && post.name,\n          body: post.body && post.body,\n          preparationTime: post.preparationTime && post.preparationTime,\n          servingSize: post.servingSize && post.servingSize,\n          cookingTime: post.cookingTime && post.cookingTime,\n          cover: `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''\n            }`,\n          url: post.url,\n          category: post.category,\n          tags: post.tags,\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method categoryPostList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async categoryPostList(resData) {\n    const data = resData.data;\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((post) => {\n        return {\n          ...post,\n          id: post._id || '',\n          name: post.name && post.name,\n          body: post.body && post.body,\n          preparationTime: post.preparationTime && post.preparationTime,\n          servingSize: post.servingSize && post.servingSize,\n          cookingTime: post.cookingTime && post.cookingTime,\n          cover: `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''\n            }`,\n          url: post.url,\n          category: post.category,\n          tags: post.tags,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postDetail(resData) {\n    const data = resData;\n    // const isNext = resData.page.next;\n\n    console.log('upconvertedpostDetail', resData);\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        body: data.body && data.body,\n        preparationTime: data.preparationTime && data.preparationTime,\n        servingSize: data.servingSize && data.servingSize,\n        cookingTime: data.cookingTime && data.cookingTime,\n        cover: `${config['baseURL']}${(data.cover && data.cover['medium']) || ''\n          }`,\n        url: data.url,\n        requiredProducts:\n          data.requiredProducts && data.requiredProducts.length > 0\n            ? data.requiredProducts.map((item) => {\n              return {\n                ...item,\n                id: item.id,\n                ...(item.detail &&\n                  Object.keys(item.detail).length > 0 && {\n                  ...item.detail,\n                  cover: {\n                    cover: `${config['baseURL']}${item.detail.cover\n                      ? item.detail.cover.original &&\n                      item.detail.cover.original\n                      : ''\n                      }`,\n                    id: item.detail.cover ? item.detail.cover._id : '',\n                  },\n                  price:\n                    parseInt(item.detail.price['offer']) >\n                      parseInt(item.detail.price['regular'])\n                      ? item.detail.price['offer']\n                      : item.detail.price['regular'],\n                  image:\n                    (item.detail.image &&\n                      item.detail.image.length > 0 &&\n                      item.detail.image.map((img) => {\n                        return {\n                          id: img._id || '',\n                          name: img.name && img.name,\n                          cover: `${config['baseURL']}${img.original}`,\n                          added: img.added,\n                          title: img.title,\n                          labels: img.labels,\n                          alt: img.alt,\n                          caption: img.caption,\n                        };\n                      })) ||\n                    [],\n                }),\n              };\n            })\n            : [],\n        category2:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n              };\n            })) ||\n          data.category,\n        category:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return cat._id;\n            })) ||\n          data.category,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method postDetailEdit convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postDetailEdit(resData) {\n    const data = resData;\n    // const isNext = resData.page.next;\n\n    console.log('upconvertedpostDetail', resData);\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        body: data.body && data.body,\n        preparationTime: data.preparationTime && data.preparationTime,\n        servingSize: data.servingSize && data.servingSize,\n        cookingTime: data.cookingTime && data.cookingTime,\n        cover: `${config['baseURL']}${(data.cover && data.cover['medium']) || ''\n          }`,\n        url: data.url,\n        requiredProducts:\n          data.requiredProducts && data.requiredProducts.length > 0\n            ? data.requiredProducts.map((item) => {\n              return {\n                ...item,\n                id: item.id,\n                ...(item.detail &&\n                  Object.keys(item.detail).length > 0 && {\n                  ...item.detail,\n                  cover: {\n                    cover: `${config['baseURL']}${item.detail.cover\n                      ? item.detail.cover.original &&\n                      item.detail.cover.original\n                      : ''\n                      }`,\n                    id: item.detail.cover ? item.detail.cover._id : '',\n                  },\n                  price:\n                    parseInt(item.detail.price['offer']) >\n                      parseInt(item.detail.price['regular'])\n                      ? item.detail.price['offer']\n                      : item.detail.price['regular'],\n                  image:\n                    (item.detail.image &&\n                      item.detail.image.length > 0 &&\n                      item.detail.image.map((img) => {\n                        return {\n                          id: img._id || '',\n                          name: img.name && img.name,\n                          cover: `${config['baseURL']}${img.original}`,\n                          added: img.added,\n                          title: img.title,\n                          labels: img.labels,\n                          alt: img.alt,\n                          caption: img.caption,\n                        };\n                      })) ||\n                    [],\n                }),\n              };\n            })\n            : [],\n        category: data.category,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method bundleList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async bundleList(resData) {\n    const data = resData.data || [];\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          ...product,\n          anotherPrice: product.price,\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: product.cover\n            ? `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''\n            }`\n            : product.cover,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          startDate: product.startDate,\n          endDate: product.endDate,\n          actualPrice: product.actualPrice,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          product: product['product'],\n          productCount: product['product'].length,\n          price:\n            parseInt(product.price['offer']) >\n              parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method bundleDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async bundleDetail(resData) {\n    const data = resData || {};\n\n    if (Object.keys(data).length > 0) {\n      return {\n        id: data._id || '',\n        name: data.name && data.name,\n        description: data.description && data.description,\n        cover: data.cover\n          ? `${config['baseURL']}${(data.cover && data.cover['thumbnail']) || ''\n          }`\n          : '',\n        regularPrice: data.price && data.price['regular'],\n        offerPrice: data.price && data.price['offer'],\n        url: data.url,\n        startDate: data.startDate,\n        endDate: data.endDate,\n        actualPrice: data.actualPrice,\n        unit: data.unit,\n        category: data.category,\n        pricing: data.pricing,\n        date: data.date,\n        time: data.time,\n        venue: data.venue,\n        brand: data.brand,\n        tags: data.tags,\n        products: data.product,\n        productCount: data['product'].length,\n        price:\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\n            ? data.price['offer']\n            : data.price['regular'],\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    } else return data;\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsPageVisits(resData) {\n    const data = resData && resData.data ? resData.data : [];\n\n    console.log('getAnalyticsPageVisits', resData);\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((item) => {\n        return {\n          id: item._id || '',\n          visit: item.count || '',\n          name:\n            item['detail'] && item['detail'][0] && item['detail'][0]['name'],\n          url: item['detail'] && item['detail'][0] && item['detail'][0]['url'],\n          itemId:\n            item['detail'] && item['detail'][0] && item['detail'][0]['_id'],\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsPageVisitCount(resData) {\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsDemographicVisits(resData) {\n    const data = resData && resData.data ? resData.data : [];\n    if (data) {\n      return data;\n    } else return [];\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsOrders(resData) {\n    const data = resData.data || [];\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsTotalUserCount(resData) {\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method customerDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async customerDetail(resData) {\n    if (resData) {\n      return {\n        ...resData,\n        id: resData._id || '',\n        key: resData._id || '',\n        firstName: resData.firstName || '',\n        lastName: resData.lastName || '',\n        name: resData.firstName + ' ' + resData.lastName,\n        country: resData.country || '',\n        city: resData.city || '',\n        email: resData.email || '',\n        phone: resData.phone || '',\n        address1: resData.address1 || '',\n        address2: resData.address2 || '',\n        created: resData.created || '',\n      };\n    } else return resData;\n  }\n\n  /**\n   * @public\n   * @method couponList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async couponList(resData) {\n    const data = resData || [];\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          ...data,\n          id: product._id || '',\n          name: product.name && product.name,\n          code: product.code,\n          cover: product.cover\n            ? `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''\n            }`\n            : null,\n          minimumOrder: product.minimumOrder,\n          maximumOrder: product.maximumOrder,\n          offerPrice: product.price && product.price['offer'],\n          freeProducts: product.freeProducts,\n          orderedProductsCount:\n            product.orderedProducts && product.orderedProducts.length,\n          freeProductsCount:\n            product.freeProducts && product.freeProducts.length,\n          amountType: product.amountType,\n          amount: product.amount,\n          freeDelivery: product.freeDelivery,\n          startDate: product.startDate,\n          endDate: product.endDate,\n          maxUsePerUser: product.maxUsePerUser,\n          actualPrice: product.actualPrice,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n        };\n      });\n\n    console.log('convertedCouponData55', convertedData);\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method tagList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async tagList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          ...tag,\n          id: tag._id || '',\n          key: tag._id || '',\n          name: tag.name && tag.name,\n          description: tag.description && tag.description,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSetEmailList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getSetEmailList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((email) => {\n        return {\n          ...email,\n          id: email._id || '',\n          key: email._id || '',\n          recipient: email.recipient,\n          subject: email.subject,\n          html: email.html,\n          text: email.text,\n          time: email.time,\n          event: email.event,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSentSMSList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getSentSMSList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((sms) => {\n        return {\n          ...sms,\n          id: sms._id || '',\n          key: sms._id || '',\n          recipient: sms.recipient,\n          text: sms.text,\n          time: sms.time,\n          event: sms.event,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postTagList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postTagList(resData) {\n    const data = resData.data;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          id: tag._id || '',\n          key: tag._id || '',\n          name: tag.name && tag.name,\n          description: tag.description && tag.description,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postTagDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postTagDetail(resData) {\n    const data = resData;\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n        description: data.description && data.description,\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n\t\n   * @method dealerAreaDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerAreaDetail(resData) {\n    const data = resData;\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method brandList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async brandList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((brand) => {\n        return {\n          ...brand,\n          id: brand._id || '',\n          key: brand._id || '',\n          name: brand.name && brand.name,\n          description: brand.description && brand.description,\n          cover: brand.cover\n            ? `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\n            : null,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method setImageAsThumbnailToItem convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async setImageAsThumbnailToItem(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method deleteAdmin convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async deleteAdmin(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method markAllNotificationAsRead convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async markAllNotificationAsRead(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method configureEmailSTMP convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async configureEmailSTMP(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method configureSMS convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async configureSMS(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getEmailConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getEmailConfiguration(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getSMSConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getSMSConfiguration(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method sendCustomEmail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async sendCustomEmail(resData) {\n    if (resData && resData.msg) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method configureAutoEmailTemplate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async configureAutoEmailTemplate(resData) {\n    if (resData && resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getConfigureAutoEmailTemplate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getConfigureAutoEmailTemplate(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        id: resData._id,\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getConfigureAutoSMSTemplate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getConfigureAutoSMSTemplate(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        id: resData._id,\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method sendCustomSMS convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async sendCustomSMS(resData) {\n    if (resData && resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method updateSiteLogoAndIcon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updateSiteLogoAndIcon(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method updateStock convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updateStock(resData) {\n    if (resData.succes) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method brandDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async brandDetail(resData) {\n    const data = Object.keys(resData).length > 0 ? resData : null;\n    if (data) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n        description: data.description && data.description,\n        url: data.url && data.url,\n        cover: {\n          cover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''\n            }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.thumbnail}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    }\n\n    return {};\n  }\n\n  /**\n   * @public\n   * @method tagDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async tagDetail(resData) {\n    const data = Object.keys(resData).length > 0 ? resData : null;\n    if (data) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n        url: data.url && data.url,\n        description: data.description && data.description,\n      };\n    }\n\n    return {};\n  }\n\n  /**\n   * @public\n   * @method customerList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async customerList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          firstName: customer.firstName || '',\n          lastName: customer.lastName || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          dealerName:\n            customer.dealer && Object.keys(customer.dealer).length > 0\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\n              : 'None',\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method staffList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async staffList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          firstName: customer.firstName || '',\n          lastName: customer.lastName || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address: customer.address || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerRegisteredCustomerList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerRegisteredCustomerList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          firstName: customer.firstName || '',\n          lastName: customer.lastName || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          dealerName:\n            customer.dealer && Object.keys(customer.dealer).length > 0\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\n              : 'None',\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          code: customer.code || '',\n          commission: customer.commission || '',\n          depositMoney: customer.depositMoney || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerListByArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerListByArea(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          code: customer.code || '',\n          commission: customer.commission || '',\n          depositMoney: customer.depositMoney || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async dealerDetail(resData) {\n    if (resData) {\n      return {\n        ...resData,\n        id: resData._id || '',\n        key: resData._id || '',\n        code: resData.code || '',\n        commission: resData.commission || '',\n        depositMoney: resData.depositMoney || '',\n        name: resData.firstName + ' ' + resData.lastName,\n        country: resData.country || '',\n        city: resData.city || '',\n        email: resData.email || '',\n        phone: resData.phone || '',\n        address1: resData.address1 || '',\n        address2: resData.address2 || '',\n        created: resData.added || '',\n      };\n    } else return resData;\n  }\n\n  /**\n   * @public\n   * @method pageList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async pageList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((page) => {\n        return {\n          ...page,\n          id: page._id || '',\n          key: page._id || '',\n          name: page.name && page.name,\n          description: page.description && page.description,\n          cover: page.cover\n            ? `${config['baseURL']}${page.cover ? page.cover.thumbnail : ''}`\n            : null,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method themeList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async themeList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((theme) => {\n        return {\n          id: theme._id || '',\n          key: theme._id || '',\n          name: theme.name || '',\n          added: theme.added || '',\n          thumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : ''\n            }`,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method componentList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async componentList(resData) {\n    const components = resData.components || {};\n\n    if (components && components.length > 0) {\n      const convertedData =\n        components.length > 0 &&\n        components.map((component) => {\n          return {\n            id: component._id || '',\n            key: component._id || '',\n            name: component.name || '',\n            items:\n              component.items.length > 0\n                ? component.items.map((item) => {\n                  return {\n                    ...item,\n                    image:\n                      item.image.length > 0\n                        ? item.image.map((img) => {\n                          return {\n                            cover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : ''\n                              }`,\n                            id: img._id,\n                            name: img.name && img.name,\n                            added: img.added,\n                            title: img.title,\n                            labels: img.labels,\n                            alt: img.alt,\n                            caption: img.caption,\n                          };\n                        })\n                        : [],\n                  };\n                })\n                : [],\n          };\n        });\n\n      return convertedData;\n    }\n\n    return [];\n  }\n\n  /**\n   * @public\n   * @method regionList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async regionList(data) {\n    const convertedData =\n      data.length > 0 &&\n      data.map((region) => {\n        return {\n          id: region._id || '',\n          key: region._id || '',\n          name: region.name || '',\n          pickUpLocation: region.pickUpLocation || '',\n          country: region.country || '',\n          countryCode: region.countryCode || '',\n          countryName: region.countryName || '',\n          city: region.city || '',\n          time: region.time || '',\n          charge: region.charge || {},\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method attributeList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async attributeList(data) {\n    const convertedData = Object.keys(data).length > 0 && data;\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async ImageListFromLibrary(resData) {\n    const data = resData.data || [];\n    const next = resData.page?.next;\n    const total = resData.page?.totalIndex;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((image) => {\n        return {\n          id: image._id || '',\n          name: image.name && image.name,\n          cover: `${config['baseURL']}${image.thumbnail}`,\n          added: image.added,\n          title: image.title,\n          labels: image.labels,\n          alt: image.alt,\n          caption: image.caption,\n        };\n      });\n\n    return {\n      data: convertedData,\n      next,\n      total\n    };\n\n  }\n\n  /**\n   * @public\n   * @method countryList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async countryList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((country) => {\n        return {\n          id: country._id || '',\n          name: country.name && country.name,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getDeliveryRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n\n  async getDeliveryRegion(data) {\n    const convertedData = data;\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method cityList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async cityList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((city) => {\n        return {\n          id: city._id || '',\n          name: city.name && city.name,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method forAnalytics convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async forAnalytics(resData) {\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method productDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n\n  async productDetail(data) {\n    const convertedData =\n      (Object.keys(data).length > 0 && {\n        ...data,\n        id: data._id || data.id || '',\n        name: data.name || '',\n        description: data.description.replace(/<[^>]+>/g, '') || '',\n        regularPrice: data.price && data.price['regular'],\n        offerPrice: data.price && data.price['offer'],\n        url: data.url,\n        availableStock: data.availableStock,\n        minimumStock: data.minimumStock,\n        unit: data.unit,\n        date: data.date,\n        venue: data.venue,\n        brand:\n          data.brand && Object.key(data.brand).length > 0\n            ? {\n              id: data.brand.id,\n              name: data.brand.name,\n            }\n            : {},\n        price:\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\n            ? data.price['offer']\n            : data.price['regular'],\n        pricing: data.pricing,\n        category:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n              };\n            })) ||\n          data.category,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n\n        cover: {\n          cover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''\n            }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n        available:\n          data.pricing && data.pricing.length > 0\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['available']\n            : 0,\n        minimum:\n          data.pricing && data.pricing.length > 0\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['minimum']\n            : 0,\n      }) ||\n      {};\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method couponDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n\n  async couponDetail(data) {\n    const convertedData =\n      (Object.keys(data).length > 0 && {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        cover: {\n          cover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''\n            }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        code: data.code,\n        minimumOrder: data.minimumOrder,\n        maximumOrder: data.maximumOrder,\n        freeProducts: data.freeProducts || [],\n        orderedProducts:\n          data.orderedProducts && data.orderedProducts.length > 0\n            ? data.orderedProducts.map((item) => {\n              console.log('fuckingOrderProduct', item);\n              return {\n                ...item,\n                id: item.id,\n                ...(item.detail &&\n                  Object.keys(item.detail).length > 0 && {\n                  ...item.detail,\n                  cover: {\n                    cover: `${config['baseURL']}${item.detail.cover\n                      ? item.detail.cover.original &&\n                      item.detail.cover.original\n                      : ''\n                      }`,\n                    id: item.detail.cover ? item.detail.cover._id : '',\n                  },\n                  price:\n                    parseInt(item.detail.price['offer']) >\n                      parseInt(item.detail.price['regular'])\n                      ? item.detail.price['offer']\n                      : item.detail.price['regular'],\n                }),\n              };\n            })\n            : [],\n        freeProductsCount: data.freeProducts && data.orderedProducts.length,\n        amountType: data.amountType,\n        amount: data.amount,\n        freeDelivery: data.freeDelivery,\n        startDate: data.startDate,\n        endDate: data.endDate,\n        maxUsePerUser: data.maxUsePerUser,\n        actualPrice: data.actualPrice,\n        unit: data.unit,\n        category: data.category,\n        pricing: data.pricing,\n        date: data.date,\n        time: data.time,\n        venue: data.venue,\n        brand: data.brand,\n        tags: data.tags,\n      }) ||\n      {};\n\n    console.log('fuckingOrderProduct', convertedData);\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method productDetailById convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async productDetailById(data) {\n    const convertedData =\n      (Object.keys(data).length > 0 && {\n        ...data,\n        id: data._id || data.id || '',\n        name: data.name || '',\n        description: data.description.replace(/<[^>]+>/g, '') || '',\n        regularPrice: data.price && data.price['regular'],\n        offerPrice: data.price && data.price['offer'],\n        url: data.url,\n        unit: data.unit,\n        date: data.date,\n        venue: data.venue,\n        pricing: data.pricing,\n        price:\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\n            ? data.price['offer']\n            : data.price['regular'],\n        category:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n                cover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''\n                  }`,\n              };\n            })) ||\n          data.category,\n        brand:\n          data.brand && Object.keys(data.brand).length > 0\n            ? {\n              id: data.brand._id,\n              name: data.brand.name,\n              cover: `${config['baseURL']}${data.brand.cover\n                ? data.brand.cover.original && data.brand.cover.original\n                : ''\n                }`,\n            }\n            : data.brand,\n        primaryCategory:\n          data.primaryCategory && Object.keys(data.primaryCategory).length > 0\n            ? {\n              id: data.primaryCategory._id,\n              name: data.primaryCategory.name,\n              cover: `${config['baseURL']}${data.primaryCategory.cover\n                ? data.primaryCategory.cover.original &&\n                data.primaryCategory.cover.original\n                : ''\n                }`,\n            }\n            : data.primaryCategory,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n        availableStock: data.availableStock,\n        cover: {\n          cover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''\n            }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      }) ||\n      {};\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateProduct convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateProduct(data) {\n    const convertedData = data;\n\n    if (data && data.updated && Object.keys(data.updated).length > 0) {\n      return {\n        ...data.updated,\n        id: data.updated._id || data.updated.id || '',\n        name: data.updated.name || '',\n        description: data.updated.description.replace(/<[^>]+>/g, '') || '',\n        regularPrice: data.updated.price && data.updated.price['regular'],\n        offerPrice: data.updated.price && data.updated.price['offer'],\n        url: data.updated.url,\n        availableStock: data.updated.availableStock,\n        minimumStock: data.updated.minimumStock,\n        unit: data.updated.unit,\n        date: data.updated.date,\n        venue: data.updated.venue,\n        brand:\n          data.updated.brand && Object.keys(data.updated.brand).length > 0\n            ? {\n              id: data.updated.brand.id,\n              name: data.updated.brand.name,\n            }\n            : {},\n        price:\n          parseInt(data.updated.price['offer']) >\n            parseInt(data.updated.price['regular'])\n            ? data.updated.price['offer']\n            : data.updated.price['regular'],\n        pricing: data.updated.pricing,\n        category:\n          (data.updated.category &&\n            data.updated.category.length > 0 &&\n            data.updated.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n              };\n            })) ||\n          data.updated.category,\n        tags:\n          data.updated.tags && data.updated.tags.length > 0\n            ? data.updated.tags\n            : [],\n\n        cover: {\n          cover: `${config['baseURL']}${data.updated.cover\n            ? data.updated.cover.original && data.updated.cover.original\n            : ''\n            }`,\n          id: data.updated.cover ? data.updated.cover._id : '',\n        },\n        image:\n          (data.updated.image &&\n            data.updated.image.length > 0 &&\n            data.updated.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updatePost convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updatePost(data) {\n    const convertedData = data;\n\n    if (data && data.updated && data.updated[0]) {\n      console.log('dataUpdate', data.updated);\n      return {\n        ...data.updated[0],\n        id: data.updated[0]._id || data.updated[0].id || '',\n        name: data.updated[0].name || '',\n        url: data.updated[0].url,\n        category: data.updated[0].category,\n        tags:\n          data.updated[0].tags && data.updated[0].tags.length > 0\n            ? data.updated[0].tags\n            : [],\n\n        cover: {\n          cover: `${config['baseURL']}${data.updated[0].cover\n            ? data.updated[0].cover.original && data.updated[0].cover.original\n            : ''\n            }`,\n          id: data.updated[0].cover ? data.updated[0].cover._id : '',\n        },\n        image:\n          (data.updated[0].image &&\n            data.updated[0].image.length > 0 &&\n            data.updated[0].image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateComponent convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateComponent(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCoupon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCoupon(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n\n  /**\n   * @public\n   * @method uploadProductCSV convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n\n  async uploadProductCSV(data) {\n    const convertedData = data;\n    return convertedData;\n  }\n\n\n\n  /**\n   * @public\n   * @method categoryUpdateIcon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async categoryUpdateIcon(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n\n  /**\n * @public\n * @method categoryUpdateThumbnail convert api data from API to general format based on config server\n * @param {Object} data response objectc from wc\n * @returns {Object}  converted data\n */\n  async categoryUpdateThumbnail(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateImageFromLibrary(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateTag(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateDealerArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateDealerArea(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateDealer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateDealer(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updatePage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updatePage(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateBrand convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateBrand(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateBundle convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateBundle(data) {\n    const convertedData = data;\n\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCategory(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCustomer(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateStaff convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateStaff(data) {\n    const convertedData = data;\n\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...convertedData,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateRegion(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteProduct convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteProduct(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteExpense convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteExpense(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryDelete convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postCategoryDelete(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deletePost convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deletePost(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteBundle convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteBundle(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteCoupon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteCoupon(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method pageDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async pageDetail(data) {\n    const convertedData = data;\n    if (convertedData && Object.keys(convertedData).length > 0) {\n      return {\n        ...convertedData,\n        id: convertedData._id,\n        cover: {\n          cover: `${config['baseURL']}${convertedData.cover\n            ? convertedData.cover.original && convertedData.cover.original\n            : ''\n            }`,\n          id: convertedData.cover ? convertedData.cover._id : '',\n        },\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateOrderStatus convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateOrderStatus(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postUpdateTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postUpdateTag(data) {\n    const convertedData = data;\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n\n        name: data.updated.name && data.updated.name,\n        description: data.updated.description && data.updated.description,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateExpense convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateExpense(data) {\n    const convertedData = data;\n    if (data && Object.keys(convertedData).length > 0) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteImageFromLibrary(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deletePage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deletePage(data) {\n    const convertedData = data;\n    if (data && data.msg) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addTag(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addExpense convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addExpense(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addStaff convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addStaff(data) {\n    const convertedData = data;\n    if (data && data.inserted && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method generateSalaryReport convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async generateSalaryReport(data) {\n    const convertedData = data;\n    if (data && data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSalaryReport convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSalaryReport(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSalaryReportDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSalaryReportDetail(resData) {\n    const data = resData || [];\n\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        staff:\n          data.staff && data.staff.length > 0\n            ? data.staff.map((customer) => {\n              return {\n                ...customer,\n                id: customer._id || '',\n                key: customer._id || '',\n                firstName: customer.firstName || '',\n                lastName: customer.lastName || '',\n                name: customer.firstName + ' ' + customer.lastName,\n                country: customer.country || '',\n                city: customer.city || '',\n                email: customer.email || '',\n                phone: customer.phone || '',\n                address: customer.address || '',\n              };\n            })\n            : [],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method staffDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async staffDetail(data) {\n    const convertedData = data;\n    if (convertedData && Object.keys(convertedData).length > 0) {\n      return {\n        ...convertedData,\n        id: convertedData._id || '',\n        key: convertedData._id || '',\n        firstName: convertedData.firstName || '',\n        lastName: convertedData.lastName || '',\n        name: convertedData.firstName + ' ' + convertedData.lastName,\n        country: convertedData.country || '',\n        city: convertedData.city || '',\n        email: convertedData.email || '',\n        phone: convertedData.phone || '',\n        address: convertedData.address || '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method expenseDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async expenseDetail(data) {\n    const convertedData = data;\n    if (convertedData && Object.keys(convertedData).length > 0) {\n      return {\n        ...convertedData,\n        id: convertedData._id || '',\n        key: convertedData._id || '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addDealerArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addDealerArea(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postAddCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postAddCategory(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        cover: data[0].cover\n          ? `${config['baseURL']}${data[0].cover ? data[0].cover.thumbnail : ''\n          }`\n          : '',\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryUpdate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postCategoryUpdate(data) {\n    const convertedData = data;\n    if (data && data.updated) {\n      return {\n        ...data['updated'],\n        cover: data['updated'].cover\n          ? `${config['baseURL']}${data['updated'].cover ? data['updated'].cover.thumbnail : ''\n          }`\n          : '',\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerAreaList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async dealerAreaList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          ...tag,\n          id: tag._id || '',\n          key: tag._id || '',\n          name: tag.name && tag.name,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method expenseList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async expenseList(resData) {\n    const data = resData.data || [];\n\n    console.log('expenseList', data);\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          ...tag,\n          id: tag._id || '',\n          key: tag._id || '',\n          topic: tag.topic && tag.topic,\n          amount: tag.amount && tag.amount,\n        };\n      });\n\n    return convertedData;\n  }\n  tag;\n  /**\n   * @public\n   * @method addDealer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addDealer(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addCategory(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n          }`\n          : '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postAddCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postAddCategory(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addProduct convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addProduct(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n          }`\n          : '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addPost convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addPost(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n          }`\n          : '',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addOrderNote(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async updateOrderNote(data) {\n    const convertedData = data;\n    if (data && data['updated']) {\n      return {\n        ...data['updated'],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateAdminRole convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async updateAdminRole(data) {\n    const convertedData = data;\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postAddTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async postAddTag(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addOrder convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addOrder(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async getOrderNote(data) {\n    const convertedData = data;\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addTheme convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addTheme(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postDeleteTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postDeleteTag(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteSalaryReport convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteSalaryReport(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteOrderNote(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addPage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addPage(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addBrand convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addBrand(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n          }`\n          : '',\n      };\n    }\n\n    return convertedData;\n  }\n  /**\n   * @public\n   * @method addComponent convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addComponent(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addCustomer(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addRegion(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteTag(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteDealerArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteDealerArea(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteDealer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteDealer(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method logout convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async logout(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method activeTheme convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async activeTheme(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deletetheme convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deletetheme(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteCustomer(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteStaff convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteStaff(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteComponent convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteComponent(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteBrand convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteBrand(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteCategory(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteRegion(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method siteSettings convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async siteSettings(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSiteSEO convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSiteSEO(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getAdminCredential convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAdminCredential(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateSiteSettings convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateSiteSettings(data) {\n    if (data['updated']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method updateSiteSEO convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateSiteSEO(data) {\n    if (data['updated']) {\n      return {\n        ...data['updated'],\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method updateAdminCredential convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateAdminCredential(data) {\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method adminUpdatePassword convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async adminUpdatePassword(data) {\n    if (data['updated']) {\n      return {\n        ...data['updated'],\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method updateInvoiceSettings convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateInvoiceSettings(data) {\n    if (data['updated']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async invoiceSettingsDetail(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method categoryDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async categoryDetail(data) {\n    const convertedData = {\n      ...data,\n      id: data.id || data._id || '',\n      name: data.name && data.name,\n      description: data.description && data.description,\n      productCount: data.productCount || 0,\n      icon: data.icon ? `${config['baseURL']}${data.icon}` : '',\n      thumbnail: data.thumbnail ? `${config['baseURL']}${data.thumbnail}` : null,\n      type:\n        data.subCategory.length > 0 &&\n          data.subCategory[0] &&\n          data.subCategory[0]['name']\n          ? 'Top category'\n          : 'Child category',\n      url: data.url || '',\n      subCategory:\n        data.subCategory.length > 0 &&\n          data.subCategory[0] &&\n          data.subCategory[0]['name']\n          ? data.subCategory.map((subCat) => {\n            return {\n              id: subCat._id || '',\n              name: subCat.name && subCat.name,\n              description: subCat.description && subCat.description,\n              cover: subCat.cover\n                ? `${config['baseURL']}${subCat.cover.medium}`\n                : '',\n            };\n          })\n          : [],\n      cover: {\n        cover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''\n          }`,\n        id: data.cover ? data.cover._id : '',\n      },\n      image:\n        (data.image &&\n          data.image.length > 0 &&\n          data.image.map((img) => {\n            return {\n              id: img._id || '',\n              name: img.name && img.name,\n              cover: `${config['baseURL']}${img.medium}`,\n              added: img.added,\n              title: img.title,\n              labels: img.labels,\n              alt: img.alt,\n              caption: img.caption,\n            };\n          })) ||\n        [],\n    };\n\n    return convertedData;\n  }\n  /**\n   * @public\n   * @method createOrder convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async createOrder(data) {\n    //map props\n\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method adminRoleRegister convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async adminRoleRegister(data) {\n    //map props\n\n    if (data && data.length > 0) {\n      return {\n        status: 'ok',\n        ...data[0],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method adminList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async adminList(resData) {\n    //map props\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method adminDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async adminDetail(resData) {\n    //map props\n\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method orderDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async orderDetail(data) {\n    //map props\n    const order = data.order || false;\n    if (order) {\n      return {\n        ...order,\n        id: order.id || order._id,\n        shippingAddress: order.shippingAddress,\n        name:\n          order.shippingAddress['firstName'] +\n          ' ' +\n          order.shippingAddress['lastName'],\n        country: order.shippingAddress['country'],\n        city: order.shippingAddress['city'],\n        address: order.shippingAddress['address'],\n        phone: order.shippingAddress['phone'],\n        email: order.shippingAddress['email'],\n        shortCode: order.shortCode || '',\n        status:\n          typeof order.status === 'string'\n            ? order.status\n            : order.status && Object.keys(order.status).length > 0\n              ? order.status['name']\n              : 'pending',\n        total: order.totalPrice,\n        deliveryCharge: order.totalPrice,\n        deliveryRegion: order.deliveryRegion,\n        deliveryName: order.deliveryRegion && order.deliveryRegion['name'],\n        deliveryPickUpLocation:\n          order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\n        deliveryCountryName:\n          order.deliveryRegion && order.deliveryRegion['countryName'],\n        products:\n          order.products && order.products.length > 0\n            ? order.products.map((product) => {\n              return {\n                ...product,\n                id: product._id || '',\n                name: product.name && product.name,\n                description: product.description && product.description,\n                cover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''\n                  }`,\n                regularPrice: product.price && product.price['regular'],\n                offerPrice: product.price && product.price['offer'],\n                url: product.url,\n                unit: product.unit,\n                category: product.category,\n                pricing: product.pricing,\n                date: product.date,\n                time: product.time,\n                venue: product.venue,\n                brand: product.brand,\n                tags: product.tags,\n                price: product.price,\n                available:\n                  product.pricing && product.pricing.length > 0\n                    ? product.pricing[0]['stock'] &&\n                    product.pricing[0]['stock']['available']\n                    : 0,\n                minimum:\n                  product.pricing && product.pricing.length > 0\n                    ? product.pricing[0]['stock'] &&\n                    product.pricing[0]['stock']['minimum']\n                    : 0,\n              };\n            })\n            : [],\n        date_created: order.added,\n        paymentMethod: order['payment']['paymentMethod'],\n        paymentStatus: order['payment']['status'],\n        payment: order['payment'],\n        customerId: order['customer'] ? order['customer']['_id'] : '',\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method signup convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async signup(data) {\n    return {\n      status: 'ok',\n    };\n  }\n\n  /**\n   * @public\n   * @method signin convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async signin(data) {\n    if (data['msg']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method login convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async login(data) {\n    if (data['msg']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method addImageToLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addImageToLibrary(data) {\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getCurrentUserData convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getCurrentCustomerData(data) {\n    //map props\n    // let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\n\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getAutoEmailConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAutoEmailConfiguration(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getAutoSMSConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAutoSMSConfiguration(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getEmailDetails convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getEmailDetails(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getSMSDetails convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSMSDetails(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method currentCustomerData convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async currentCustomerData(data) {\n    //map props\n    // let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\n\n    const convertedData = {\n      ...data,\n    };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCurrentCustomerData(data) {\n    //map props\n    // let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\n\n    const convertedData = {\n      status: 'ok',\n    };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method changePassword convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async changePassword(data) {\n    if (data['success']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method configureAutoEmail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async configureAutoEmail(data) {\n    if (data['success']) {\n      return {\n        status: 'ok',\n      };\n    }\n    return data;\n  }\n\n  /**\n   * @public\n   * @method configureAutoSMS convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async configureAutoSMS(data) {\n    if (data['success']) {\n      return {\n        status: 'ok',\n      };\n    }\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getCurrentUserOrders(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...item,\n            id: item.id || item._id,\n            billingAddress: item.billingAddress,\n            status: item.status,\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.date,\n            paymentMethod: item['payment']['paymentMethod'],\n            customerId: item.customer['_id'],\n          };\n        })) ||\n      [];\n\n    convertedData = {\n      data: convertedData,\n      isNext,\n    };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method orderList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async orderList(resData) {\n    const data = resData.data || [];\n    // const isNext = resData.page.next;\n\n    console.log('orderListDAta', data);\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...item,\n            id: item.id || item._id,\n            shippingAddress: item.billingAddress,\n            shortCode: item.shortCode || '',\n            name:\n              item.shippingAddress &&\n              item.shippingAddress['firstName'] &&\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\n              item.shippingAddress['lastName'] &&\n              item.shippingAddress['lastName'],\n            country:\n              item.shippingAddress &&\n              item.shippingAddress['country'] &&\n              item.shippingAddress['country'],\n            city:\n              item.shippingAddress &&\n              item.shippingAddress['city'] &&\n              item.shippingAddress['city'],\n            status:\n              typeof item.status === 'string'\n                ? item.status\n                : item.status && Object.keys(item.status).length > 0\n                  ? item.status['name']\n                  : 'pending',\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.added,\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\n            paymentStatus: item['payment'] && item['payment']['status'],\n            payment: item['payment'],\n            customerId: item['customer'] ? item['customer']['_id'] : '',\n            deliveryName:\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\n                ? `${item.deliveryRegion['name']}`\n                : '',\n          };\n        })) ||\n      [];\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerOrderList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async dealerOrderList(resData) {\n    const data = resData.data || [];\n    // const isNext = resData.page.next;\n\n    console.log('orderListDAta', data);\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...item,\n            id: item.id || item._id,\n            shippingAddress: item.billingAddress,\n            shortCode: item.shortCode || '',\n            name:\n              item.shippingAddress &&\n              item.shippingAddress['firstName'] &&\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\n              item.shippingAddress['lastName'] &&\n              item.shippingAddress['lastName'],\n            country:\n              item.shippingAddress &&\n              item.shippingAddress['country'] &&\n              item.shippingAddress['country'],\n            city:\n              item.shippingAddress &&\n              item.shippingAddress['city'] &&\n              item.shippingAddress['city'],\n            status:\n              typeof item.status === 'string'\n                ? item.status\n                : item.status && Object.keys(item.status).length > 0\n                  ? item.status['name']\n                  : 'pending',\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.added,\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\n            paymentStatus: item['payment'] && item['payment']['status'],\n            payment: item['payment'],\n            customerId: item['customer'] ? item['customer']['_id'] : '',\n          };\n        })) ||\n      [];\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method orderListForCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async orderListForCustomer(resData) {\n    const data = resData.data || [];\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            id: item.id || item._id,\n            shortCode: item.shortCode || '',\n            shippingAddress: item.billingAddress,\n            status:\n              typeof item.status === 'string'\n                ? item.status\n                : item.status && Object.keys(item.status).length > 0\n                  ? item.status['name']\n                  : 'pending',\n            name:\n              item.shippingAddress &&\n              item.shippingAddress['firstName'] &&\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\n              item.shippingAddress['lastName'] &&\n              item.shippingAddress['lastName'],\n            country:\n              item.shippingAddress &&\n              item.shippingAddress['country'] &&\n              item.shippingAddress['country'],\n            city:\n              item.shippingAddress &&\n              item.shippingAddress['city'] &&\n              item.shippingAddress['city'],\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.added,\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\n            paymentStatus: item['payment'] && item['payment']['status'],\n            payment: item['payment'],\n            customerId: item['customer'] ? item['customer']['_id'] : '',\n            deliveryName:\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\n                ? `${item.deliveryRegion['name']}`\n                : '',\n          };\n        })) ||\n      [];\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method currentUserOrders convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async currentUserOrders(data) {\n    //map props\n    let generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\n\n    const convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...generalFormat,\n            id: item.id,\n            status: item.status,\n            total: item.total,\n            line_items: item.line_items,\n            date_created: item.date_created,\n          };\n        })) ||\n      [];\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method payment convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async payment(data) {\n    const paymentItems = data.items;\n    if (!paymentItems.length > 0) {\n      return paymentItems;\n    }\n\n    const items = paymentItems.map((item) => {\n      return {\n        name: item.name || '',\n        number: item.text || '',\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method welcome convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async welcome(data) {\n    return {\n      text: data.text,\n    };\n  }\n\n  /**\n   * @public\n   * @method logo convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async logo(data) {\n    const src =\n      data.image && data.image.length > 0\n        ? `${config['baseURL']}${data.image[0]['original']}`\n        : '';\n    return {\n      src,\n      target: data.target,\n    };\n  }\n\n  /**\n   * @public\n   * @method hotline convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async hotline(data) {\n    return {\n      text: data.text,\n    };\n  }\n\n  /**\n   * @public\n   * @method navLinks convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async navLinks(data) {\n    const navLinkItems = data.items;\n    if (!navLinkItems.length > 0) {\n      return [];\n    }\n\n    const items = navLinkItems.map((item) => {\n      return {\n        text: item.name || item.text,\n        target: item.target,\n      };\n    });\n\n    return items;\n  }\n\n  /**\n   * @public\n   * @method slider convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async slider(data) {\n    const sliderItems = data.items;\n    if (!sliderItems.length > 0) {\n      return sliderItems;\n    }\n\n    const images = sliderItems.map((item) => {\n      return {\n        target: item.target,\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\n      };\n    });\n    return images;\n  }\n\n  /**\n   * @public\n   * @method sliderRight convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async sliderRight(data) {\n    const sliderRightItems = data.items;\n    if (!sliderRightItems.length > 0) {\n      return sliderRightItems;\n    }\n\n    const images = sliderRightItems.map((item) => {\n      return {\n        target: item.target,\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\n      };\n    });\n    return images;\n  }\n\n  /**\n   * @public\n   * @method address convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async address(data) {\n    return {\n      name: data.name,\n      text: data.text,\n    };\n  }\n\n  /**\n   * @public\n   * @method Links convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async Links(data) {\n    const servicesItems = data.items;\n    if (!servicesItems.length > 0) {\n      return servicesItems;\n    }\n\n    const items = servicesItems.map((item) => {\n      return {\n        target: item.target,\n        name: item.name || item.text,\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method Account convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async Account(data) {\n    const accountItems = data.items;\n    if (!accountItems.length > 0) {\n      return accountItems;\n    }\n\n    const items = accountItems.map((item) => {\n      return {\n        target: item.target,\n        name: item.name || item.text,\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method 'About Us' convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async 'About Us'(data) {\n    const aboutUsItems = data.items;\n    if (!aboutUsItems.length > 0) {\n      return aboutUsItems;\n    }\n\n    const items = aboutUsItems.map((item) => {\n      return {\n        target: item.target,\n        name: item.name || item.text,\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getTotalUserCount(data) {\n    return data;\n  }\n\n  /**\n   * @public\n   * @method addCoupon Us' convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addCoupon(data) {\n    if (data && data[0]) {\n      return {\n        status: 'ok',\n        ...data[0],\n        cover: data[0].cover\n          ? `${config['baseURL']}${data[0].cover ? data[0].cover.thumbnail : ''\n          }`\n          : '',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method addBundle Us convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addBundle(data) {\n    if (data && data[0]) {\n      return {\n        status: 'ok',\n        ...data[0],\n        price:\n          parseInt(data[0].price['offer']) > parseInt(data[0].price['regular'])\n            ? data[0].price['offer']\n            : data[0].price['regular'],\n        cover: data[0].cover\n          ? `${config['baseURL']}${data[0].cover ? data[0].cover.thumbnail : ''\n          }`\n          : '',\n      };\n    }\n    return {};\n  }\n}\n\nexport default Converter;\n","import { useEffect, useReducer } from 'react';\nimport Connector from '../lib/connector.js';\n\ntype TInitialData = any;\ntype Tdependecies = any[] | [];\ntype TItem = string;\ntype IFormat = string | undefined;\n\ntype Actions = {\n  type: string;\n  payload?: any;\n};\n\ninterface IState {\n  readonly isLoading: boolean;\n  readonly error: object;\n  readonly data: TInitialData;\n  readonly done: boolean;\n}\n\nconst connector = new Connector();\n\nconst dataFetchReducer = (state: IState, action: Actions) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        error: {\n          isError: false,\n          error: {},\n        },\n        done: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n        done: true,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          isError: true,\n          error: action.payload,\n          done: true,\n        },\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetch = (\n  dependencies: Tdependecies = [],\n  initialData: TInitialData,\n  item: TItem,\n  options?: any,\n  format?: IFormat\n): IState => {\n  const initialState: IState = {\n    isLoading: false,\n    error: {\n      isError: false,\n      error: {},\n    },\n    data: initialData,\n    done: false,\n  };\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n      try {\n        // @ts-ignore\n        let data = await connector.request(item, format, options);\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\n        }\n      }\n    };\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, dependencies);\n\n  return state;\n};\n\nexport default useFetch;\n","import { useReducer } from 'react';\nimport Connector from '../lib/connector.js';\n\ntype TInitialData = any;\ntype TItem = string;\n\ntype Actions = {\n  type: string;\n  payload?: any;\n};\n\ninterface IState {\n  readonly isLoading: boolean;\n  readonly error: object;\n  readonly data: TInitialData;\n  readonly done: boolean;\n}\n\nconst connector = new Connector();\n\nconst dataFetchReducer = (state: IState, action: Actions) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        error: {\n          isError: false,\n          error: {},\n        },\n        done: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n        done: true,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          isError: true,\n          error: action.payload,\n        },\n        done: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useHandleFetch = (\n  initialData: TInitialData,\n  item: TItem,\n  format?: string\n): [IState, (values: any) => void] => {\n  const initialState: IState = {\n    isLoading: false,\n    error: {\n      isError: false,\n      error: {},\n    },\n    data: initialData,\n    done: false,\n  };\n\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\n\n  const handlePost = async (options: any) => {\n    dispatch({ type: 'FETCH_INIT' });\n\n    try {\n      // @ts-ignore\n      let data = await connector.request(item, format || 'json', options);\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      return data;\n    } catch (error) {\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\n      return initialData;\n    }\n  };\n\n  return [state, handlePost];\n};\n\nexport default useHandleFetch;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { usePaginatedQuery, useQueryCache } from 'react-query';\nimport Connector from '../lib/connector.js';\n\nconst connector = new Connector();\n\ntype TInitialData = any;\ntype TItem = string;\n\ninterface IState {\n    readonly isLoading: boolean;\n    readonly isFetching: boolean;\n    readonly status: any;\n    readonly resolvedData: any;\n    readonly latestData: any;\n    readonly error: any;\n    readonly data: TInitialData;\n    readonly isError: boolean;\n    readonly isSuccess: boolean;\n    setPage: any;\n    isFetchingMore: any;\n}\n\nconst useQueryPaginate = (\n    item: TItem,\n    options?: any,\n    key?: string,\n): IState => {\n    const cache = useQueryCache()\n    const [page, setPage] = useState(1)\n\n    const fetchProjects = useCallback(async (_, page = 1) => {\n        options = {\n            ...options,\n            urlOptions: {\n                ...options?.urlOptions,\n                params: {\n                    ...options?.urlOptions?.params,\n                    pageNumber: page\n                }\n            }\n        };\n        return connector.request(item, 'json', options);\n    }, [])\n\n\n    const { isLoading, isError, data, error, isSuccess, isFetching, status, resolvedData, latestData, isFetchingMore } = usePaginatedQuery(\n        [key || item, page],\n        fetchProjects,\n        {\n            retry: 0,\n            refetchOnWindowFocus: false,\n        }\n    );\n\n\n    // Prefetch the next page!\n    useEffect(() => {\n        // @ts-ignore\n        if (latestData?.next) {\n            cache.prefetchQuery([key || item, page + 1], fetchProjects)\n        }\n    }, [latestData, fetchProjects, page]);\n\n\n    return {\n        isLoading,\n        isError,\n        data,\n        error,\n        isSuccess,\n        isFetching,\n        status,\n        resolvedData,\n        latestData,\n        setPage,\n        isFetchingMore\n    };\n};\n\nexport default useQueryPaginate;\n","import { useInfiniteQuery } from 'react-query';\nimport Connector from '../lib/connector.js';\n\nconst connector = new Connector();\n\ntype TInitialData = any;\ntype TItem = string;\n\ninterface IState {\n    isLoading: boolean;\n    isFetching: any;\n    isFetchingMore: any;\n    canFetchMore: any;\n    status: any;\n    error: any;\n    data: TInitialData;\n    isError: boolean;\n    fetchMore: any;\n}\n\nconst useQueryPaginate = (\n    item: TItem,\n    options?: any,\n    key?: string,\n): IState => {\n\n    const {\n        isLoading, isError,\n        status, data, error,\n        isFetching, isFetchingMore,\n        fetchMore, canFetchMore,\n    } = useInfiniteQuery(\n        [key || item],\n        async (key, next = 1) => {\n            options = {\n                ...options,\n                urlOptions: {\n                    ...options?.urlOptions,\n                    params: {\n                        ...options?.urlOptions?.params,\n                        pageNumber: next\n                    }\n                }\n            };\n            return connector.request(item, 'json', options);\n        },\n        {\n            getFetchMore: lastGroup => lastGroup.next,\n            retry: 0,\n            refetchOnWindowFocus: false,\n        },\n    );\n\n\n\n    const handleFetchMore = () => {\n        if (canFetchMore) fetchMore();\n    };\n\n\n    return {\n        isLoading, isError, status, data, error, isFetching, isFetchingMore, canFetchMore, fetchMore: handleFetchMore\n    };\n};\n\nexport default useQueryPaginate;","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { useHandleFetch } from '../../../hooks';\n\nconst validationSchema = Yup.object().shape({\n\tusername: Yup.string()\n\t\t.label('Username')\n\t\t.required('Username is required')\n\t\t.min(3, 'Username must have at least 3 characters'),\n\n\tpassword: Yup.string().label('Password').required('Password is required'),\n});\n\nconst initialValues = {\n\tusername: '',\n\tpassword: '',\n};\n\ninterface Props {\n\n}\n\nconst QuickEdit = ({ }: Props) => {\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\tconst updateCategoryRes = await handleLoginFetch({\n\t\t\tbody: {\n\t\t\t\tusername: values.username,\n\t\t\t\tpassword: values.password,\n\t\t\t},\n\t\t});\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!values.username || !values.password || !isValid) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...initialValues }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\tmaxWidth: '400px',\n\t\t\t\t\t\t\tmargin: '20px'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\n\t\t\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","import Login from './Login';\nexport default Login;\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\n    const reducer = reducerMap[ action.type ];\n    return reducer ? reducer( state, action ) : state;\n};\n","import isomorphicFetch from 'isomorphic-fetch';\n\nexport default (url, method, body) => {\n\tconst options = {\n\t\tmethod,\n\t\theaders: requestHeaders(),\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\n\t};\n\n\treturn isomorphicFetch(url, options).then(res =>\n\t\tparseStatus(res.status, res.json())\n\t);\n};\n\nfunction parseStatus(status, res) {\n\treturn new Promise((resolve, reject) => {\n\t\tif (status >= 200 && status < 300) {\n\t\t\tres.then(response => resolve(response));\n\t\t} else {\n\t\t\tres.then(response => reject({ status, response }));\n\t\t}\n\t});\n}\n\nfunction requestHeaders() {\n\treturn {\n\t\tAccept: 'application/json',\n\t\t'Content-Type': 'application/json'\n\t};\n}\n","import { combineReducers } from 'redux';\nimport * as types from './types';\nimport { createReducer } from '../../utils';\n\n/* State shape\n{\n    isAuthenticated: bool,\n    redirectAfterLogin: string\n}\n*/\n\nconst globalState = createReducer([])({\n  [types.SAVE_ROLES]: (state, action) => {\n    const roles = action.payload;\n    return [...roles];\n  },\n});\n\nexport default globalState; ","export const SAVE_ROLES = \"session/SAVE_ROLES\";\n","import * as types from \"./types\";\n\nexport const saveRoles = (roles) => ({\n    type: types.SAVE_ROLES,\n    payload: roles\n});\n","import reducer from \"./reducers\";\n\nimport * as glboalOperations from \"./operations\";\n\nexport {\n    glboalOperations,\n};\n\nexport default reducer;\n","import getDeliveryChargeTotal from './getDeliveryChargeTotal';\n\nconst allRoles = [\n  'getCatalogue',\n  'postCatalogue',\n  'getDelivery',\n  'postDelivery',\n  'getOrder',\n  'postOrder',\n  'getBlog',\n  'postBlog',\n  'getPage',\n  'postPage',\n  'analytics',\n  'accounts',\n  'getDealer',\n  'postDealer',\n];\n\nconst isAccess = (role, adminRoles) => {\n  if (!adminRoles || !adminRoles[0]) return false;\n  if (adminRoles.includes('superAdmin')) return true;\n  return adminRoles.includes(role);\n};\n\nexport { getDeliveryChargeTotal, isAccess };\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  withRouter,\n} from 'react-router-dom';\nimport { Layout, Menu, Upload, message } from 'antd';\n\nimport {\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  TagOutlined,\n  BranchesOutlined,\n  GoldOutlined,\n  FilterOutlined,\n  TagsOutlined,\n  CarOutlined,\n  ShoppingCartOutlined,\n  MailOutlined,\n  SettingOutlined,\n  InboxOutlined,\n  SlidersOutlined,\n  DesktopOutlined,\n  RadarChartOutlined,\n  MessageOutlined,\n  UserOutlined,\n  FileAddOutlined,\n  FileSearchOutlined,\n  BgColorsOutlined,\n  BankOutlined,\n  FireOutlined,\n  MailTwoTone,\n  UserAddOutlined,\n  GlobalOutlined,\n  CalculatorOutlined,\n  UsergroupAddOutlined,\n  MoneyCollectOutlined,\n} from '@ant-design/icons';\n\n// import state\nimport { glboalOperations } from '../../state/ducks/globalState';\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst SiderComponent = ({ roles }: any) => {\n  const [collapsed, setcollapsed] = useState(false);\n  const onCollapse = (collapsed: any) => {\n    // console.log(collapsed);\n    setcollapsed(collapsed);\n  };\n\n  return (\n    <Sider\n      width={260}\n      className='siderForAlphaAdmin'\n      style={{\n        boxShadow: '7px 0 60px rgba(0,0,0,.05)',\n        border: 'none',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        height: 'calc(100vh - 100px)',\n        position: 'fixed',\n        top: '60px'\n      }}\n      collapsible\n      collapsed={collapsed}\n      onCollapse={onCollapse}\n      theme='light'\n    >\n      <Menu selectable={true} mode='inline'>\n        {isAccess('analytics', roles) && (\n          <Menu.Item key='1' icon={<PieChartOutlined />}>\n            <Link to='/admin'>Dashboard</Link>\n          </Menu.Item>\n        )}\n\n        {isAccess('getCatalogue', roles) && (\n          <SubMenu\n            key='sub3'\n            icon={<GoldOutlined />}\n            title='Product'\n            // onTitleClick={() => props.history.push('/product')}\n          >\n            <Menu.Item icon={<RadarChartOutlined />} key='6'>\n              <Link to='/admin/product'>Products</Link>\n            </Menu.Item>\n\n            {/* <Menu.Item\n                      icon={<BankOutlined />}\n                      key='2222'>\n                      <Link to='/admin/bundle'>Bundle</Link>\n                  </Menu.Item> */}\n\n            <Menu.Item key='9' icon={<TagsOutlined />}>\n              <Link to='/admin/tag'>Tags</Link>\n            </Menu.Item>\n\n            <Menu.Item key='2' icon={<TagOutlined />}>\n              <Link to='/admin/category'>Categories</Link>\n            </Menu.Item>\n\n            <Menu.Item key='5' icon={<BranchesOutlined />}>\n              <Link to='/admin/brand'>Brand</Link>\n            </Menu.Item>\n          </SubMenu>\n        )}\n\n        {/* <SubMenu\n          key='sub333'\n          icon={<GoldOutlined />}\n          title='Recipes'\n          // onTitleClick={() => props.history.push('/product')}\n        >\n          <Menu.Item icon={<RadarChartOutlined />} key='655'>\n            <Link to='/admin/posts'>List Recipe</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<TagOutlined />} key='2222444'>\n            <Link to='/admin/posts/category'>Recipe Category</Link>\n          </Menu.Item>\n\n          <Menu.Item key='955' icon={<TagsOutlined />}>\n            <Link to='/admin/posts/tag'>Recipe Tags</Link>\n          </Menu.Item>\n        </SubMenu> */}\n\n        {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\n                    <Link to='/admin/posts'>\n                        Recipies\n                    </Link>\n                </Menu.Item> */}\n\n        <Menu.Item key='1011' icon={<FireOutlined />}>\n          <Link to='/admin/coupon'>Coupon</Link>\n        </Menu.Item>\n\n        {isAccess('getDelivery', roles) && (\n          <Menu.Item key='10' icon={<CarOutlined />}>\n            <Link to='/admin/delivery'>Delivery</Link>\n          </Menu.Item>\n        )}\n\n        {/* {isAccess('accounts', roles) && (\n          <SubMenu key='sub33' icon={<CalculatorOutlined />} title='Accounting'>\n            <SubMenu key='sub3355' icon={<CalculatorOutlined />} title='Staff'>\n              <Menu.Item icon={<UsergroupAddOutlined />} key='66'>\n                <Link to='/admin/staff'>Staffs</Link>\n              </Menu.Item>\n              <Menu.Item icon={<MoneyCollectOutlined />} key='65257'>\n                <Link to='/admin/salaryReport'>Salary report</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item icon={<MoneyCollectOutlined />} key='67'>\n              <Link to='/admin/expense'>Expense</Link>\n            </Menu.Item>\n\n            <Menu.Item key='675454'>\n              <Link to='/admin/acccounting/overview'>Order report</Link>\n            </Menu.Item>\n          </SubMenu>\n        )} */}\n\n        {isAccess('getOrder', roles) && (\n          <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\n            <Menu.Item key='11'>\n              <Link to='/admin/order'>List Orders</Link>\n            </Menu.Item>\n            <Menu.Item key='11222'>\n              <Link to='/admin/order/overview'>Order Analytics</Link>\n            </Menu.Item>\n            <Menu.Item key='12'>\n              <Link to='/admin/order/new'>Add Order</Link>\n            </Menu.Item>\n            {/* <Menu.Item key='12'>\n                          <Link to='/admin/order/config'>\n                              Configure order status\n                          </Link>\n                      </Menu.Item> */}\n          </SubMenu>\n        )}\n\n        {/* {isAccess('getDealer', roles) && (\n          <SubMenu\n            key='sub5553'\n            icon={<TeamOutlined />}\n            title='Dealer'\n            // onTitleClick={() => props.history.push('/product')}\n          >\n            <Menu.Item icon={<TeamOutlined />} key='666655'>\n              <Link to='/admin/dealer'>List dealer</Link>\n            </Menu.Item>\n\n            <Menu.Item icon={<GlobalOutlined />} key='22534522444'>\n              <Link to='/admin/dealer/area'>Dealer Areas</Link>\n            </Menu.Item>\n          </SubMenu>\n        )} */}\n\n        <Menu.Item key='13' icon={<UserOutlined />}>\n          <Link to='/admin/customer'>Customer</Link>\n        </Menu.Item>\n        <Menu.Item key='1888' icon={<MailOutlined />}>\n          <Link to='/admin/email'>Email</Link>\n        </Menu.Item>\n        <Menu.Item key='199' icon={<MessageOutlined />}>\n          <Link to='/admin/sms'>SMS</Link>\n        </Menu.Item>\n\n        {isAccess('getDealer', roles) && (\n          <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\n            <Menu.Item key='18' icon={<FileSearchOutlined />}>\n              <Link to='/admin/page'> List Pages</Link>\n            </Menu.Item>\n            <Menu.Item icon={<FileAddOutlined />} key='17'>\n              <Link to='/admin/page/new'> Add new Page</Link>\n            </Menu.Item>\n          </SubMenu>\n        )}\n\n        <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\n          <Menu.Item icon={<UserOutlined />} key='19'>\n            <Link to='/admin/settings/siteInfo'>Site information</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<UserAddOutlined />} key='19999'>\n            <Link to='/admin/settings/admins'>Admins</Link>\n          </Menu.Item>\n\n          <Menu.Item key='23' icon={<SlidersOutlined />}>\n            <Link to='/admin/settings/components'>Components</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<BgColorsOutlined />} key='20'>\n            <Link to='/admin/settings/themes'>Themes</Link>\n          </Menu.Item>\n\n          {/* <Menu.Item key='21'>\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\n\t\t\t\t\t</Menu.Item> */}\n          {/* <Menu.Item key='22'>\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\n                    </Menu.Item> */}\n        </SubMenu>\n      </Menu>\n    </Sider>\n  );\n};\n\nconst mapDispathToProps = {\n  saveRoles: glboalOperations.saveRoles,\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispathToProps)(SiderComponent);\n\n/* \ngit checkout commit3 && git checkout -b newBranch && git cherry-pick 20ead887\naf2f73c541465d9067c3c6c70c398ac2\n*/\n","import Sider from \"./Sider\";\nexport default Sider; ","import Empty from \"./Empty\";\nexport default Empty; ","import React from 'react'\nimport { Empty } from 'antd';\n\n\ninterface Props {\n    title?: string;\n    height?: number\n}\n\nconst EmptyComponent = ({\n    title = 'No Data found',\n    height = 300\n}: Props) => {\n    return (\n        <div style={{\n            height: height,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }}>\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n        </div>\n    )\n}\n\nexport default EmptyComponent\n","// @ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { useHistory } from 'react-router';\nimport {\n  LogoutOutlined,\n  BellOutlined,\n  OrderedListOutlined,\n  TwitterSquareFilled,\n  ShoppingCartOutlined,\n  CheckCircleOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\nimport { Layout, Badge, Dropdown, Menu, Spin, notification } from 'antd';\nimport moment from 'moment';\nconst { Header } = Layout;\n\n// import styles\n\nconst openSuccessNotification = (msg?: any) => {\n  notification.success({\n    message: msg || 'Product Deleted',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\ninterface Props {}\n\nconst HeaderComponent = (props: Props) => {\n  const history = useHistory();\n\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\n    {},\n    'getAllNotification'\n  );\n  const [\n    getMarkNotificationAsReadState,\n    handleMarkNotificationAsReadFetch,\n  ] = useHandleFetch({}, 'markNotificationAsRead');\n  const [\n    getMarkAllNotificationAsReadState,\n    handleMarkAllNotificationAsReadFetch,\n  ] = useHandleFetch({}, 'markAllNotificationAsRead');\n\n  const [notificationList, setnotificationList] = useState({});\n\n  const handleMenuClick = (e) => {\n    if (e.key === '3') {\n    }\n  };\n\n  useEffect(() => {\n    const getAllNotification = async () => {\n      const res = await handleGetAllNOticationFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 100000,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setnotificationList(res);\n      }\n    };\n\n    getAllNotification();\n  }, []);\n\n  const handleNotificationAsRead = async (id) => {\n    await handleMarkNotificationAsReadFetch({\n      body: {\n        id: [id],\n      },\n    });\n  };\n\n  const handleAllNotificationAsRead = async () => {\n    const res = await handleMarkAllNotificationAsReadFetch({});\n    // @ts-ignore\n    if (res && res.status === 'ok') {\n      openSuccessNotification('Notification cleared!');\n      setnotificationList([]);\n    }\n  };\n\n  console.log('getAllNotificationState', getAllNotificationState);\n\n  const typeIcon = {\n    customer: <UserOutlined />,\n    order: <ShoppingCartOutlined />,\n  };\n\n  const menu = () => {\n    if (getAllNotificationState.isLoading)\n      return (\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: '#fff',\n            padding: '0 50px',\n          }}\n        >\n          <Spin />\n        </div>\n      );\n\n    if (\n      getAllNotificationState.done &&\n      notificationList &&\n      !notificationList[0]\n    ) {\n      return (\n        <div\n          className='notificationListItemContainer'\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: '#fff',\n            padding: '0 50px',\n          }}\n        >\n          <Empty title='No Notification found' />\n        </div>\n      );\n    }\n    return (\n      <div style={{}} className='notificationListItemContainer'>\n        {getAllNotificationState.done && notificationList[0] && (\n          <div style={{}}>\n            <div\n              style={{\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'space-around',\n              }}\n            >\n              <a\n                onClick={() => handleAllNotificationAsRead()}\n                style={{\n                  textAlign: 'center',\n                  backgroundColor: '#f7f7f7',\n                  padding: '10px',\n                  width: '50%',\n                  fontSize: '13px',\n                }}\n                href='##'\n              >\n                CLEAR ALL\n              </a>\n              <a\n                onClick={() => history.push('/admin/notification')}\n                style={{\n                  textAlign: 'center',\n                  backgroundColor: '#eee',\n                  padding: '10px',\n                  width: '50%',\n                  fontSize: '13px',\n                }}\n                href='##'\n              >\n                SEE ALL\n              </a>\n            </div>\n          </div>\n        )}\n\n        {getAllNotificationState.done &&\n          notificationList[0] &&\n          notificationList.map((item, index) => {\n            console.log('notificationItem', item);\n            return (\n              <div\n                onClick={() => {\n                  handleNotificationAsRead(item._id);\n                  history.push(`/admin/${item.type}/${item.eventId}`);\n                }}\n                className={\n                  !item.read\n                    ? 'notificationListItemContainer__item notificationListItemContainer__item-active'\n                    : 'notificationListItemContainer__item'\n                }\n              >\n                <span className='notificationListItemContainer__item-icon'>\n                  {typeIcon[item['type']]}\n                </span>\n                <div className='notificationListItemContainer__item-info'>\n                  <h3>{item.heading}</h3>\n                  <h4>{item.text}</h4>\n                  <h2>\n                    {item.added &&\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\n                  </h2>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  };\n\n  console.log('notificationList', notificationList);\n\n  return (\n    <Header\n      style={{\n        background: '#fff',\n        height: '60px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        boxShadow:\n          '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\n        zIndex: 10,\n        transition: ' all .2s',\n        alignItems: 'center',\n        alignContent: 'center',\n        position: 'fixed',\n        width: '100%'\n      }}\n    >\n      <h2\n        onClick={() => history.push('/admin')}\n        style={{\n          color: '#0072EA',\n          marginTop: '10px',\n          marginLeft: '-20px',\n          cursor: 'pointer',\n        }}\n      >\n        Admin\n      </h2>\n\n      <div\n        style={{\n          marginRight: '-28px',\n        }}\n      >\n        <Dropdown\n          placement='bottomLeft'\n          overlay={menu}\n          // visible={this.state.visible}\n        >\n          <a\n            style={{\n              marginRight: '10px',\n            }}\n            href='###'\n            className='notificationIconContainer'\n          >\n            <Badge\n              overflowCount={100}\n              // @ts-ignore\n              showZero={TwitterSquareFilled}\n              count={\n                getAllNotificationState.done && !notificationList\n                  ? 0\n                  : notificationList && notificationList.length\n                  ? notificationList.length\n                  : 0\n              }\n            >\n              <span\n                style={{\n                  marginLeft: '10px',\n                  fontWeight: 600,\n                  borderRadius: '25px',\n                  color: '#1890ff',\n                  padding: '2px 20px',\n                  cursor: 'pointer',\n                  marginRight: '-5px',\n                }}\n              >\n                <BellOutlined />\n              </span>\n            </Badge>\n          </a>\n        </Dropdown>\n\n        <a href='/admin/auth/logout'>\n          <span\n            style={{\n              marginLeft: '10px',\n              fontWeight: 600,\n              borderRadius: '25px',\n              color: '#1890ff',\n              padding: '2px 20px',\n              cursor: 'pointer',\n            }}\n          >\n            <LogoutOutlined />\n            <span\n              style={{\n                marginLeft: '10px',\n              }}\n            >\n              logout\n            </span>\n          </span>\n        </a>\n      </div>\n    </Header>\n  );\n};\n\nexport default HeaderComponent;\n","import Header from \"./Header\";\nexport default Header; ","import React, { useState, useEffect } from 'react'\n\n\n\n// import libraries \nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport {\n    DeleteOutlined,\n    FileAddOutlined,\n    CheckCircleOutlined,\n    FileImageFilled,\n    FileImageOutlined,\n    FileImageTwoTone,\n    PlusOutlined,\n    PlusCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    UserOutlined,\n    CalendarOutlined,\n    GoldOutlined,\n    ShoppingCartOutlined,\n    TagOutlined\n} from '@ant-design/icons';\n\n\nimport { useHandleFetch } from \"../../hooks\";\n\n\n\nimport { Select, Button, Spin, Empty,DatePicker } from 'antd';\nimport Moment from \"react-moment\";\nimport moment from 'moment'; \n\nconst { Option } = Select;\n\nconst { RangePicker } = DatePicker;\n\n\n\n\n\nexport const RAINFALL = {\n    \"2018\": [\n        {\n            month: 1,\n            rainfall: 65.4\n        },\n        {\n            month: 2,\n            rainfall: 1.6\n        },\n        {\n            month: 3,\n            rainfall: 23\n        },\n        {\n            month: 4,\n            rainfall: 16.4\n        },\n        {\n            month: 5,\n            rainfall: 65.6\n        },\n        {\n            month: 6,\n            rainfall: 43.2\n        },\n        {\n            month: 7,\n            rainfall: 19.4\n        },\n        {\n            month: 8,\n            rainfall: 42.8\n        },\n        {\n            month: 9,\n            rainfall: 16.4\n        },\n        {\n            month: 11,\n            rainfall: 97.8\n        },\n        {\n            month: 12,\n            rainfall: 104.8\n        }\n    ],\n    \"2019\": [\n        {\n            month: 1,\n            rainfall: 11.2\n        },\n        {\n            month: 2,\n            rainfall: 18.6\n        },\n        {\n            month: 3,\n            rainfall: 12\n        },\n        {\n            month: 4,\n            rainfall: 7.2\n        },\n        {\n            month: 5,\n            rainfall: 53.4\n        },\n        {\n            month: 6,\n            rainfall: 49.8\n        },\n        {\n            month: 7,\n            rainfall: 45.2\n        },\n        {\n            month: 8,\n            rainfall: 51.4\n        },\n        {\n            month: 9,\n            rainfall: 41\n        },\n        {\n            month: 10,\n            rainfall: 24\n        },\n        {\n            month: 11,\n            rainfall: 54.4\n        },\n        {\n            month: 12,\n            rainfall: 6.2\n        }\n    ]\n};\n\n\nconst MONTHS = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n];\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\ninterface Props {\n\n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    }, {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\nconst ApiVisits = (props: Props) => {\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\n    const [startDate,setStartDate] = useState('');\n    const [endDate,setEndDate] = useState('');\n\n\n\n    \n\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\n\n\n    const [userData, setuserData] = useState([]);\n\n    useEffect(()=>{\n        const getDemoGraphicVisitsValue = async () => {\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: selectedApiValue,\n                        startDateValue: startDate,\n                        endDateValue: endDate\n                    }\n                }\n            }); \n\n           console.log('uservisitsData',uservisitsDataRes); \n\n           // @ts-ignore\n           if(uservisitsDataRes){\n            // @ts-ignore\n            setuserData(uservisitsDataRes)\n           }\n\n\n           };\n\n\n           getDemoGraphicVisitsValue(); \n\n    },[selectedApiValue,startDate,endDate])\n\n\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\n\n\n\n    \n    const options = [\n        {\n            value: 'date',\n            name: 'Date'\n        },\n        {\n            value: 'hour',\n            name: 'Hour'\n        },\n        {\n            value: 'dayOfWeek',\n            name: 'Day of week'\n        },\n        {\n            value: 'dayOfMonth',\n            name: 'Day of month'\n        },\n         {\n            value: 'month',\n            name: 'Month'\n        },\n        {\n            value: 'year',\n            name: 'Year'\n        }\n    ]\n\n    \n\n    const date = new Date();\n    const thisMonth = MONTHS[date.getMonth()]\n    \n\n\n    const getFormateDateValue = (order) => {\n\n        if(selectedApiValue === 'day'){\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\n        }\n        else if (selectedApiValue === 'date'){\n            return order ? moment(order).format('MMMM Do YYYY') : order;\n        }\n        else if (selectedApiValue === 'month'){\n            return order ? MONTHS[order - 1] : order; ;\n        }\n        return order; \n    }\n    \n\n    const onChange = (value) => {\n        setSelectedApiValue(value);\n    }\n\n\n    const handleStartEndDateRangeDate = (e) => {\n       if(e && e[0]){\n        const startDate = new Date(moment(e[0]).format()); \n        const endDate = new Date(moment(e[1]).format()); \n        // @ts-ignore\n        setStartDate(startDate);\n        // @ts-ignore\n        setEndDate(endDate);\n       }\n      \n    }; \n\n\n\n    return (\n        <div className='overviewContainer__userVisits'>\n            <div className='overviewContainer__body-apiVisits-header'>\n                <div className='overviewContainer__body-apiVisits-header-info'>\n                    <h2>\n                        Users \n                    </h2>\n\n                        <h3>\n                          All users that visited\n                        </h3>\n                </div>\n\n\n                <div className='overviewContainer__body-apiVisits-header-controller'>\n                <Select\n                    bordered={false}\n                    showSearch\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n                    placeholder='Select an api'\n                    optionFilterProp='children'\n                    onChange={onChange}\n                    defaultValue={selectedApiValue}\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >\n                    {\n                        options.map((option) => {\n                            return <Option value={option.value}>{option.name}</Option>;\n                        })}\n                </Select>\n            </div>\n            </div>\n\n            <div className='overviewContainer__body-body'>\n            {demoGraphicVisitsState.isLoading && (\n            <>\n            <div style={{\n                margin:'100px 0',\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\"\n            }}>\n              <Spin size='large' />\n            </div>\n\n            </>\n        )}\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={userData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis dataKey={selectedApiValue} \n                        tickFormatter={getFormateDateValue}\n                         />\n                        <YAxis\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n            </div>\n            <div className=\"overviewContainer__body-footer\">\n                  <RangePicker \n                  showTime={true}\n                  onChange={handleStartEndDateRangeDate}\n                  bordered={false}\n                  picker=\"date\" />\n            </div>\n\n        </div>\n    )\n}\n\nexport default ApiVisits\n","import React, { useState, useEffect } from 'react';\n\n// import libraries\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Area,\n} from 'recharts';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  UserOutlined,\n  CalendarOutlined,\n  GoldOutlined,\n  ShoppingCartOutlined,\n  TagOutlined,\n} from '@ant-design/icons';\n\nimport { useHandleFetch } from '../../hooks';\n\nimport { Select, Button, Spin, Empty, DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst { RangePicker } = DatePicker;\n\nexport const RAINFALL = {\n  '2018': [\n    {\n      month: 1,\n      rainfall: 65.4,\n    },\n    {\n      month: 2,\n      rainfall: 1.6,\n    },\n    {\n      month: 3,\n      rainfall: 23,\n    },\n    {\n      month: 4,\n      rainfall: 16.4,\n    },\n    {\n      month: 5,\n      rainfall: 65.6,\n    },\n    {\n      month: 6,\n      rainfall: 43.2,\n    },\n    {\n      month: 7,\n      rainfall: 19.4,\n    },\n    {\n      month: 8,\n      rainfall: 42.8,\n    },\n    {\n      month: 9,\n      rainfall: 16.4,\n    },\n    {\n      month: 11,\n      rainfall: 97.8,\n    },\n    {\n      month: 12,\n      rainfall: 104.8,\n    },\n  ],\n  '2019': [\n    {\n      month: 1,\n      rainfall: 11.2,\n    },\n    {\n      month: 2,\n      rainfall: 18.6,\n    },\n    {\n      month: 3,\n      rainfall: 12,\n    },\n    {\n      month: 4,\n      rainfall: 7.2,\n    },\n    {\n      month: 5,\n      rainfall: 53.4,\n    },\n    {\n      month: 6,\n      rainfall: 49.8,\n    },\n    {\n      month: 7,\n      rainfall: 45.2,\n    },\n    {\n      month: 8,\n      rainfall: 51.4,\n    },\n    {\n      month: 9,\n      rainfall: 41,\n    },\n    {\n      month: 10,\n      rainfall: 24,\n    },\n    {\n      month: 11,\n      rainfall: 54.4,\n    },\n    {\n      month: 12,\n      rainfall: 6.2,\n    },\n  ],\n};\n\nconst MONTHS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const getMonthNameByOrder = (order: number): string | undefined =>\n  MONTHS[order - 1];\n\nexport const TooltipContainerStyles = {\n  border: 0,\n  borderRadius: '8px',\n  fontSize: 14,\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\n};\n\ninterface Props {}\n\nconst localOptions = [\n  {\n    value: 'category',\n    name: 'Category',\n  },\n  {\n    value: 'product',\n    name: 'Product',\n  },\n];\n\nconst ApiVisits = (props: Props) => {\n  const [selectedApiValue, setSelectedApiValue] = useState('date');\n  const [\n    orderAnalyticsVisitsState,\n    handleOrderAnalyticsVisitsStateFetch,\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\n  const [orderData, setorderData] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(() => {\n    const getAnalyticsOrders = async () => {\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\n        urlOptions: {\n          params: {\n            metricType: selectedApiValue,\n            startDateValue: startDate,\n            endDateValue: endDate,\n          },\n        },\n      });\n\n      console.log('ordersDataRes', ordersDataRes);\n\n      // @ts-ignore\n      if (ordersDataRes) {\n        // @ts-ignore\n        setorderData(ordersDataRes);\n      }\n    };\n    getAnalyticsOrders();\n  }, [selectedApiValue, startDate, endDate]);\n\n  console.log('orderAnalyticsVisitsState', orderAnalyticsVisitsState);\n\n  const onChange = (value) => {\n    setSelectedApiValue(value);\n  };\n\n  const options = [\n    {\n      value: 'date',\n      name: 'Date',\n    },\n    {\n      value: 'hour',\n      name: 'Hour',\n    },\n    {\n      value: 'dayOfWeek',\n      name: 'Day of week',\n    },\n    {\n      value: 'dayOfMonth',\n      name: 'Day of month',\n    },\n    {\n      value: 'month',\n      name: 'Month',\n    },\n    {\n      value: 'year',\n      name: 'Year',\n    },\n  ];\n\n  const date = new Date();\n  const thisMonth = MONTHS[date.getMonth()];\n\n  const getFormateDateValue = (order) => {\n    if (selectedApiValue === 'day') {\n      return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\n    } else if (selectedApiValue === 'date') {\n      return order ? moment(order).format('MMMM Do YYYY') : order;\n    } else if (selectedApiValue === 'month') {\n      return MONTHS[order - 1];\n    }\n    return order;\n  };\n\n  const getDatePickerValue = () => {\n    if (selectedApiValue === 'hour') {\n      return 'time';\n    }\n    if (selectedApiValue === 'month') {\n      return 'month';\n    } else if (selectedApiValue === 'dayOfWeek') {\n      return 'week';\n    } else if (selectedApiValue === 'year') {\n      return 'year';\n    }\n\n    return 'date';\n  };\n\n  const handleStartEndDateRangeDate = (e) => {\n    console.log('dateOrder', moment(e[0]).format());\n    console.log('dateOff', moment(e[1]).format());\n    const startDate = new Date(moment(e[0]).format());\n    const endDate = new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  return (\n    <div className='overviewContainer__userVisits'>\n      <div className='overviewContainer__body-apiVisits-header'>\n        <div className='overviewContainer__body-apiVisits-header-info'>\n          <h2>Orders</h2>\n\n          <h3>All orders that visited</h3>\n        </div>\n\n        <div className='overviewContainer__body-apiVisits-header-controller'>\n          <Select\n            bordered={false}\n            showSearch\n            style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n            placeholder='Select an api'\n            optionFilterProp='children'\n            onChange={onChange}\n            defaultValue={selectedApiValue}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {options.map((option) => {\n              return <Option value={option.value}>{option.name}</Option>;\n            })}\n          </Select>\n        </div>\n      </div>\n\n      <div className='overviewContainer__body-body'>\n        {orderAnalyticsVisitsState.isLoading && (\n          <>\n            <div\n              style={{\n                margin: '100px 0',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Spin size='large' />\n            </div>\n          </>\n        )}\n        {orderAnalyticsVisitsState.done &&\n          !(orderAnalyticsVisitsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '00px',\n              }}\n            >\n              <Empty\n                description={`No Orders Created`}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n          <ResponsiveContainer width='100%' height={300}>\n            <AreaChart data={orderData} fontSize={12}>\n              <defs>\n                <linearGradient id='rainGradient' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='0%' stopColor='#1890ff' />\n                  <stop offset='100%' stopColor='#3066BE22' />\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                vertical={false}\n                strokeDasharray='3 3'\n                stroke='#d6d9da'\n              />\n              <XAxis\n                dataKey={selectedApiValue}\n                tickFormatter={getFormateDateValue}\n              />\n              <YAxis\n                // unit=\"ml\"\n                orientation='left'\n                width={20}\n                axisLine={false}\n                tickLine={false}\n              />\n              <Tooltip\n                cursor={false}\n                contentStyle={TooltipContainerStyles}\n                formatter={(value, name) => [`${value}`, `${name}`]}\n              />\n              <Area\n                dataKey='count'\n                name='Count'\n                unit={selectedApiValue === 'month' ? thisMonth : ''}\n                type='basis'\n                fill='url(#rainGradient)'\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        )}\n      </div>\n      <div className='overviewContainer__body-footer'>\n        <RangePicker\n          showTime={true}\n          onChange={handleStartEndDateRangeDate}\n          picker={'date'}\n          bordered={false}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ApiVisits;\n","import React, { useState, useEffect } from 'react'\n\n\n\n\n// import lib \n\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\nimport {\n    DeleteOutlined,\n    FileAddOutlined,\n    CheckCircleOutlined,\n    FileImageFilled,\n    FileImageOutlined,\n    FileImageTwoTone,\n    PlusOutlined,\n    PlusCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    UserOutlined,\n    CalendarOutlined,\n    GoldOutlined,\n    ShoppingCartOutlined,\n    TagOutlined\n} from '@ant-design/icons';\n\nimport { Select, Button, Spin, Empty } from 'antd';\n\nconst { Option } = Select;\n\n\n\n\ninterface Props {\n\n}\n\nconst localOptions = [\n    {\n        value: 'browser',\n        name: 'Browser'\n    },\n    {\n        value: 'device',\n        name: 'Device'\n    },\n    {\n        value: 'os',\n        name: 'OS'\n    }, {\n        value: 'platform',\n        name: 'Platform'\n    },\n  \n\n];\n\n\nexport const AGE_GROUP = [\n    {\n        device: \"18-24\",\n        percentage: 14\n    },\n    {\n        device: \"25-34\",\n        percentage: 24\n    },\n    {\n        device: \"35-44\",\n        percentage: 22\n    },\n    {\n        device: \"45-54\",\n        percentage: 18\n    },\n    {\n        device: \"55-64\",\n        percentage: 16\n    },\n    {\n        device: \"65+\",\n        percentage: 6\n    }\n];\n\nexport const COLORS = [\n    '#1890ff',\n    '#20A39E',\n    '#61D095',\n    '#FFBA49',\n    '#EF5B5B',\n    '#A4036F',\n];\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\nconst PlatformVisits = (props: Props) => {\n    const [options, setoptions] = useState(localOptions);\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\n\n\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\n\n\n    const [demographicData, setdemographicData] = useState([]);\n\n    useEffect(()=>{\n        const getDemoGraphicVisitsValue = async () => {\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: selectedApiValue,\n                    }\n                }\n            }); \n           };\n\n           getDemoGraphicVisitsValue(); \n\n    },[selectedApiValue])\n\n\n\n    useEffect(()=>{\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\n            setdemographicData(demoGraphicVisitsState.data); \n        }; \n    },[demoGraphicVisitsState])\n\n\n\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\n    console.log('demographicData',demographicData)\n\n\n    const onChange = (value) => {\n        setSelectedApiValue(value);\n    }\n\n    const RADIAN = Math.PI / 180;\n\n\n    const renderCustomizedLabel = ({\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        value,\n        name,\n        index,\n        percent,\n    }) => {\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n        console.log('percent..',percent);\n        return (\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\n                {`${(percent * 100).toFixed(0)}%`}\n            </text>\n        );\n    };\n\n\n\n    return (\n        <div className='overviewContainer__body-platformVisits'>\n            <div className='overviewContainer__body-platformVisits-header'>\n                <div className='overviewContainer__body-platformVisits-header-info'>\n                    <h2>\n                        Demographic\n                        </h2>\n                    <h3>\n                       {selectedApiValue} demography\n                        </h3>\n                </div>\n                <div className='overviewContainer__body-platformVisits-header-controller'>\n                    <Select\n                        bordered={false}\n                        showSearch\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n                        placeholder='Select Type'\n                        optionFilterProp='children'\n                        onChange={onChange}\n                        defaultValue={'browser'}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        {\n                            options.map((option) => {\n                                return <Option value={option.value}>{option.name}</Option>;\n                            })}\n                    </Select>\n                </div>\n            </div>\n\n            <div className=\"overviewContainer__body-body\">\n\n            {demoGraphicVisitsState.isLoading && (\n            <>\n                <div style={{\n                    display:'flex',\n                    justifyContent:'center',\n                    alignItems:\"center\",\n                    marginTop:'100px',\n                    marginBottom:'100px',\n                }}>\n                <Spin\n                size='large'\n                />\n                </div>\n\n            </>\n        )}\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                        <PieChart fontSize={14}>\n                            <Tooltip\n                                cursor={false}\n                                contentStyle={TooltipContainerStyles}\n                                formatter={(value, name) => [`${value}`, `${name}`]}\n                            />\n\n                            <Pie\n                                dataKey=\"count\"\n                                data={demographicData}\n                                outerRadius={100}\n                                innerRadius={40}\n                                name={selectedApiValue}\n                                nameKey={selectedApiValue}\n                                unit=\"%\"\n                                label={renderCustomizedLabel}\n                                labelLine={false}\n                            >\n                                {demographicData && demographicData.map((entry, index) => (\n                                    <Cell\n                                        key={`cell-${index}`}\n                                        fill={COLORS[index % COLORS.length]}\n                                    />\n                                ))}\n                            </Pie>\n                            </PieChart>\n                        </ResponsiveContainer>\n                    )}\n            </div>\n\n            <div className=\"overviewContainer__body-footer\">\n                <h3>\n                    <span>\n                        <CalendarOutlined />\n                    </span>\n\n\t\t\t\t\t\t\t\tAll Time\n\t\t\t\t\t     </h3>\n            </div>\n\n        </div>\n    )\n}\n\nexport default PlatformVisits\n\n\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\nconst PageVisits = (props: Props) => {\n\n    const history = useHistory(); \n\n\n    const [options, setoptions] = useState(localOptions);\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\n\n\n    useEffect(()=>{\n        const getPageVisitsValue = async () => {\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        visitType: selectedApiValue,\n                        item: 'item',\n                    }\n                }\n            }); \n           };\n\n           getPageVisitsValue(); \n\n    },[selectedApiValue])\n\n    const onChange = (value) => {\n        setSelectedApiValue(value);\n    }\n\n\n    console.log('pageVisitsState',pageVisitsState)\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    Popularity\n                    </h2>\n                <h3>\n                      All {selectedApiValue} that were visited\n                    </h3>\n            </div>\n            <div className='overviewContainer__body-apiVisits-header-controller'>\n                <Select\n                    bordered={false}\n                    showSearch\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n                    placeholder='Select an api'\n                    optionFilterProp='children'\n                    onChange={onChange}\n                    defaultValue={selectedApiValue}\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >\n                    {\n                        options.map((option) => {\n                            return <Option value={option.value}>{option.name}</Option>;\n                        })}\n                </Select>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {pageVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\n                    <>\n                        <Table\n                        pagination={{ defaultPageSize: 6}}\n                            style={{\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={pageVisitsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                \n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                       <a href='##'>\n                                       <h4\n                                            onClick={() => {\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\n                                            }}  \n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                textTransform:'uppercase',\n                                                cursor: 'pointer'\n                                            }}>\n                                            {text || `${selectedApiValue} Deleted`}\n                                        </h4>\n                                       </a>\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Count\"\n                                dataIndex=\"visit\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                        </Table>\n                    </>\n                )}\n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            All Time\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React, { useEffect, useState } from 'react';\n\n// import components \nimport ApiVisits from \"./ApiVisits\";\nimport OrderOverView from \"./OrderOverView\";\nimport PlatformVisits from \"./PlatformVisits\";\nimport PageVisits from \"./PageVisits\";\n\n// import lib \nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tFileImageFilled,\n\tFileImageOutlined,\n\tFileImageTwoTone,\n\tPlusOutlined,\n\tPlusCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tUserOutlined,\n\tCalendarOutlined,\n\tGoldOutlined,\n\tShoppingCartOutlined,\n\tTagOutlined\n} from '@ant-design/icons';\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n\ninterface Props { }\n\nconst Overview = (props: Props) => {\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\n\n\n\n\tuseEffect(() => {\n\n\t\tconst getTotalUserCount = async () => {\n\t\t\tawait handleGetTotalUserCountFetch({});\n\t\t}\n\n\t\tgetTotalUserCount();\n\t}, []);\n\n\n\t\n\tuseEffect(()=>{\n\t\tconst getProductVisitCount = async () => {\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\n\t\t\t\tparams: 'product'\n\t\t\t})\n\t\t}; \n\t\tgetProductVisitCount();\n\t},[])\n\n\n\n\tuseEffect(()=>{\n\t\tconst getCategoryVisitCount = async () => {\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\n\t\t\t\tparams: 'category'\n\t\t\t})\n\t\t}; \n\t\tgetCategoryVisitCount();\n\t},[])\n\n\n\n\n\n\n\treturn (\n\t\t<div className='overviewContainer'>\n\t\t\t{/* <div className=\"overviewContainer__header\">\n\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\n\t\t\t\t\t<>\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<UserOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Users\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\n\t\t\t\t\t<>\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<UserOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Products\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\n\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\n\t\t\t\t\t<>\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<UserOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Category\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\n\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Orders\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t8503\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n */}\n\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<PageVisits />\n\t\t\t\t<PlatformVisits />\n\t\t\t</div>\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t</div>\n\t\t\t<OrderOverView />\n\t\t\t<ApiVisits />\n\t\t</div>\n\t);\n};\n\nexport default Overview;\n","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst { TextArea } = Input;\n\n\n\ninterface Props {\n    label?: string;\n    type?: string;\n    defaultValue?: string;\n    value?: string;\n    onChange?: any;\n    disabled?: boolean;\n    isError?: boolean;\n    errorString?: string;\n    name?: string;\n    rows?: number\n    placeholder?:any; \n}\n\nconst Demo = ({ label, type, defaultValue, value, \n    onChange, disabled, isError,\n     errorString, name, rows = 4,\n     placeholder\n     }: Props) => {\n    return (\n        <>\n            {label && (\n                <h3 className='inputFieldLabel'>\n                    {label}\n                </h3>\n            )}\n\n            <Form.Item\n                validateStatus={isError ? \"error\" : \"\"}\n                help={errorString}\n            // rules={[{ required: true }]}\n            >\n                <TextArea\n                    disabled={disabled}\n                    onChange={onChange}\n                    value={value}\n                    name={name}\n                    className='inputclassName'\n                    rows={rows} \n                    placeholder={placeholder}\n                    />\n\n            </Form.Item>\n        </>\n    );\n};\n\nexport default Demo; ","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useQueryCache } from 'react-query';\n\n// import libraries\nimport {\n  Upload,\n  Button,\n  Modal,\n  Tabs,\n  message,\n  notification,\n  Popconfirm,\n  Menu,\n  Dropdown,\n  Spin,\n  Pagination\n} from 'antd';\nimport reqwest from 'reqwest';\nimport { Formik } from 'formik';\nimport moment from 'moment';\n// import * as Yup from 'yup';\n\n\nimport {\n  CheckOutlined,\n  ArrowUpOutlined,\n  CheckCircleOutlined,\n  EllipsisOutlined,\n  FileImageOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport Empty from '../../components/Empty';\n\n// import hooks\nimport { useHandleFetch, usePaginate } from '../../hooks';\n\n// import configs\nimport config from '../../config.json';\n\nconst { Dragger } = Upload;\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  visible: boolean;\n  setvisible: (isVisible: any) => void;\n  setmyImages?: any;\n  setmyThumbnailImage?: any;\n  isModalOpenForThumbnail?: boolean;\n  isModalOpenForImages?: boolean;\n  myImages?: any;\n  myThumbnailImage?: any;\n  setMyGoddamnImages?: any;\n  myGoddamnImages?: any;\n}\n\nconst MediaLibrary = ({\n  visible,\n  setvisible,\n  setmyImages,\n  isModalOpenForImages,\n  isModalOpenForThumbnail,\n  setmyThumbnailImage,\n  myImages,\n  myThumbnailImage,\n  ...rest\n}: Props) => {\n  const [mediaLibTagActiveKey, setmediaLibTagActiveKey] = useState('2');\n  const [fileList, setfileList] = useState([]);\n  const [uploading, setuploading] = useState(false);\n  const [selectedimages, setselectedImages] = useState([]);\n  const [activeImageItem, setactiveImageItem] = useState(false);\n  const [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch(\n    {},\n    'updateImageFromLibrary'\n  );\n  const [\n    imageListFromLibraryState,\n    handleImageListFromLibraryFetch,\n  ] = useHandleFetch({}, 'ImageListFromLibrary');\n\n  const imageListState = usePaginate('ImageListFromLibrary', {\n    urlOptions: {\n      params: {\n        limitNumber: 11,\n        sortItem: 'added',\n        sortOrderValue: '-1',\n      }\n    },\n  }, `image`);\n\n  const cache = useQueryCache();\n\n\n\n  const [\n    deleteImageFromLibraryFetchState,\n    handleDeleteImageFromLibraryFetch,\n  ] = useHandleFetch({}, 'deleteImageFromLibrary');\n  const [localImageList, setLocalImageList] = useState([]);\n  const [isDoneOk, setisDoneOk] = useState(false);\n\n  const handleDeleteImageFromImageLibrary = async (id) => {\n    const deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (\n      deleteImageLibraryItemRes &&\n      deleteImageLibraryItemRes.status === 'ok'\n    ) {\n\n      const queries = cache.getQueries();\n      const queriesKeyMap = queries.filter(query => {\n        const queryKey = query?.queryKey;\n        // @ts-ignore\n        return queryKey?.[0] === 'image' && typeof queryKey?.[1] === 'number'\n      }).map(query => query?.queryKey);\n\n      const idQueryKey = queriesKeyMap.find(key => {\n        let isKey = false;\n        // @ts-ignore\n        if (cache.getQueryData(key)?.data.find(item => item.id === id)) {\n          isKey = true;\n        }\n        return isKey;\n      })\n      if (idQueryKey?.[0]) {\n        // @ts-ignore\n        cache.setQueryData(idQueryKey, ((prev) => {\n          return {\n            // @ts-ignore\n            ...prev,\n            // @ts-ignore\n            data: prev.data?.filter(item => item.id !== id),\n          }\n        }))\n      }\n      openSuccessNotification('Imaged Deleted');\n      // const newImageList = localImageList.filter((item) => item.id !== id);\n      // setLocalImageList(newImageList);\n    }\n  };\n\n  const getImageList = async () => {\n    const imageListRes = await handleImageListFromLibraryFetch({\n      urlOptions: {\n        params: {\n          limitNumber: 10000,\n          sortItem: 'added',\n          sortOrderValue: '-1',\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (imageListRes) {\n      // @ts-ignore\n      setLocalImageList(imageListRes);\n    }\n\n    // console.log('imageListRes', imageListRes);\n  };\n\n  useEffect(() => {\n    // getImageList();\n  }, []);\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    fileList.forEach((file) => {\n      formData.append('images', file, file.name);\n    });\n\n    setuploading(true);\n\n    //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\n    // \tbody: formData\n    //   });\n\n    //   console.log('addImageToLibraryRes',addImageToLibraryRes)\n\n    // You can use any AJAX library you like\n    reqwest({\n      url: `${config.baseURL}/admin/api/image/add`,\n      method: 'post',\n      processData: false,\n      data: formData,\n      withCredentials: true,\n      success: (res) => {\n        console.log('successResOfMediaLib', res);\n        setfileList([]);\n        setuploading(false);\n\n\n\n\n        const queries = cache.getQueries();\n        const queriesKeyMap = queries.filter(query => {\n          const queryKey = query?.queryKey;\n          // @ts-ignore\n          return queryKey?.[0] === 'image' && typeof queryKey?.[1] === 'number'\n        }).map(query => query?.queryKey);\n\n        const firstQueryKey = queriesKeyMap?.[0];\n\n\n        if (firstQueryKey) {\n          // @ts-ignore\n          cache.setQueryData(firstQueryKey, ((prev) => {\n            let newImageItem = res?.inserted?.[0];\n            newImageItem = {\n              ...newImageItem,\n              id: newImageItem._id,\n              cover: `${config.baseURL}${newImageItem?.thumbnail}`\n            }\n            return {\n              // @ts-ignore\n              ...prev,\n              // @ts-ignore\n              data: [newImageItem, ...prev?.data],\n            }\n          }))\n        }\n\n\n\n\n\n\n        getImageList();\n        message.success('upload successfully.');\n\n        if (res && res.inserted && res.inserted[0]) {\n          setactiveImageItem({\n            cover: `${config['baseURL']}${res.inserted[0].thumbnail && res.inserted[0].thumbnail\n              }`,\n            ...res.inserted[0],\n          });\n        }\n        setmediaLibTagActiveKey('2');\n\n        /* \n    added: \"2020-09-22T07:53:43.710Z\"\n    alt: \"\"\n    caption: \"\"\n    cover: \"http://localhost:5000\\images\\library\\thumbnail\\24582-group-2497.jpg\"\n    id: \"5f69ad8786d83f2becfe2d10\"\n    labels: []\n    name: \"Group 2497.png\"\n    title: \"\"\n  \t\n    */\n      },\n      error: () => {\n        setuploading(false);\n        message.error('upload failed.');\n      },\n    });\n  };\n\n  const handleOk = (e: any) => {\n    if (isModalOpenForImages) {\n      setmyImages(selectedimages);\n      setisDoneOk(true);\n    } else {\n      console.log('');\n      console.log('selectedimages,,,', selectedimages[0]);\n      setmyImages(\n        selectedimages && selectedimages[0] ? [selectedimages[0]] : []\n      );\n      setisDoneOk(true);\n    }\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  useEffect(() => {\n    if (myImages && myImages.length > 0) setselectedImages([...myImages]);\n  }, [myImages]);\n\n  useEffect(() => {\n    if (isDoneOk && isModalOpenForImages && myImages) {\n      setselectedImages([...myImages]);\n    }\n  }, [myImages, isDoneOk]);\n\n  useEffect(() => {\n    if (isDoneOk) {\n      // console.log('myThumbnail', myThumbnailImage)\n      // setselectedImages([...myThumbnailImage]);\n    }\n  }, [myThumbnailImage, isDoneOk]);\n\n  const uploadProps = {\n    //  listType: 'picture',\n    multiple: true,\n    onRemove: (file) => {\n      setfileList((filelist) => {\n        const index = fileList.indexOf(file);\n        const newFileList = fileList.slice();\n        newFileList.splice(index, 1);\n        return newFileList;\n      });\n    },\n    beforeUpload: (file) => {\n      setfileList((filelist) => {\n        const xflelist = filelist;\n        return [...xflelist, file];\n      });\n      return false;\n    },\n    fileList,\n  };\n\n  const handleAddToSelectedList = (image, id) => {\n    if (selectedimages && selectedimages.length > 0) {\n      const isImageExist = selectedimages.find((image) => image.id === id);\n      if (!isImageExist) {\n        setselectedImages([image, ...selectedimages]);\n        setactiveImageItem(image);\n      } else {\n        const newselectedImages = selectedimages.filter(\n          (image) => image.id !== id\n        );\n        setselectedImages(newselectedImages);\n      }\n    } else {\n      setselectedImages([image, ...selectedimages]);\n      setactiveImageItem(image);\n    }\n  };\n\n  const getisSelectedImage = (id) => {\n    if (selectedimages && selectedimages.length > 0) {\n      const isImageExist = selectedimages.find((image) => image.id === id);\n      if (isImageExist) {\n        return true;\n      }\n      return false;\n    } else {\n      return false;\n    }\n  };\n\n  const handleUpdateSubmit = async (values, actions) => {\n    const updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\n      body: {\n        id: values.id,\n        alt: values.alt,\n        title: values.title,\n        caption: values.caption,\n        labels: values.labels,\n      },\n    });\n\n    // @ts-ignore\n    if (\n      updateImageLibraryItemRes &&\n      updateImageLibraryItemRes.status === 'ok'\n    ) {\n      openSuccessNotification('Image Updated');\n\n      const queries = cache.getQueries();\n      const queriesKeyMap = queries.filter(query => {\n        const queryKey = query?.queryKey;\n        // @ts-ignore\n        return queryKey?.[0] === 'image' && typeof queryKey?.[1] === 'number'\n      }).map(query => query?.queryKey);\n\n      const idQueryKey = queriesKeyMap.find(key => {\n        let isKey = false;\n        // @ts-ignore\n        if (cache.getQueryData(key)?.data.find(item => item.id === id)) {\n          isKey = true;\n        }\n        return isKey;\n      })\n      if (idQueryKey?.[0]) {\n        // @ts-ignore\n        cache.setQueryData(idQueryKey, ((prev) => {\n          const localImageList = prev?.data;\n          const positionInImageList = () => {\n            return localImageList.map((item) => item.id).indexOf(values.id);\n          };\n\n          const index = positionInImageList();\n\n          // @ts-ignore\n          const updatedItem = Object.assign({}, localImageList[index], {\n            ...updateImageLibraryItemRes,\n          });\n          const updateImageList = [\n            ...localImageList.slice(0, index),\n            updatedItem,\n            ...localImageList.slice(index + 1),\n          ];\n\n\n          return {\n            // @ts-ignore\n            ...prev,\n            // @ts-ignore\n            data: updateImageList,\n          }\n        }))\n      }\n\n\n\n\n\n      // setLocalImageList(updateImageList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisUpdateSubmitButtonDisabled = (values, isValid) => {\n    // if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\n    // \treturn true;\n    // }\n    if (!isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  // console.log('selectedimages', selectedimages)\n\n  const ImageItemMenu = (\n    handleDeleteImageFromImageLibrary,\n    id,\n    handleAddToSelectedList,\n    image\n  ) => {\n    return (\n      <Menu>\n        <Menu.Item\n          onClick={() => handleAddToSelectedList(image, id)}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Select\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleDeleteImageFromImageLibrary(id)}\n          key='1'\n          icon={<DeleteOutlined color='red' />}\n        >\n          Delete\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        title='Media Library'\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        width={'80vw'}\n        bodyStyle={{\n          margin: '0',\n          padding: '0',\n        }}\n        okText='Done'\n      >\n        <div className='mediaLibraryBodyContainer'>\n          <div className='mediaLibraryBodyContainer-left'>\n            <Tabs\n              onChange={(value) => {\n                setmediaLibTagActiveKey(`${value}`);\n              }}\n              activeKey={mediaLibTagActiveKey}\n              type='card'\n              size='middle'\n            >\n              <TabPane tab='Upload New Media' key='1'>\n                <div className='mediaLibraryBodyContainer-left-header'>\n                  <div>\n                    <Dragger\n                      className='upload-list-inline'\n                      listType='picture'\n                      style={{\n                        background: '#fff',\n                        borderRadius: '8px',\n                      }}\n                      {...uploadProps}\n                    >\n                      <p className='ant-upload-drag-icon'>\n                        <FileImageOutlined />\n                      </p>\n                      <p className='ant-upload-text'>\n                        Click or drag file to this area to upload\n                      </p>\n                      <p className='ant-upload-hint'>\n                        Support for a single or bulk upload.\n                      </p>\n                    </Dragger>\n                  </div>\n                </div>\n\n                <Button\n                  className='btnPrimaryClassNameoutline'\n                  type='primary'\n                  onClick={handleUpload}\n                  disabled={fileList.length === 0}\n                  loading={uploading}\n                  icon={<ArrowUpOutlined />}\n                  style={{\n                    marginTop: '20px',\n                    marginBottom: '10px',\n                  }}\n                >\n                  Upload\n                </Button>\n              </TabPane>\n              <TabPane tab='Media Library' key='2'>\n                <div className='mediaLibraryBodyContainer-left-imageListContainer'>\n                  {imageListState.isSuccess &&\n                    imageListState?.resolvedData?.data.length > 0 &&\n                    imageListState?.resolvedData?.data.map((image) => {\n                      return (\n                        <div\n                          key={image.id}\n                          className='mediaLibraryBodyContainer-left-imageListContainer-item'\n                        >\n                          {getisSelectedImage(image.id) ? (\n                            <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\n                              <CheckOutlined />\n                            </div>\n                          ) : (\n                              ''\n                            )}\n\n                          <Dropdown\n                            overlay={() =>\n                              ImageItemMenu(\n                                handleDeleteImageFromImageLibrary,\n                                image.id,\n                                handleAddToSelectedList,\n                                image\n                              )\n                            }\n                            placement='bottomRight'\n                          >\n                            <div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\n                              <EllipsisOutlined />\n                            </div>\n                          </Dropdown>\n\n                          <img\n                            onClick={() => {\n                              handleAddToSelectedList(image, image.id);\n                            }}\n                            src={image.cover}\n                            alt='img'\n                          />\n                        </div>\n                      );\n                    })}\n\n                  {imageListState?.isError ||\n                    !(imageListState?.resolvedData?.data?.length > 0) && (\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'center',\n                          width: '100%',\n                        }}\n                      >\n                        <Empty title='No Image Found in the library' />\n                      </div>\n                    )}\n\n                  {imageListState.isLoading && (\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        width: '100%',\n                        margin: '100px 0 50px 0',\n                      }}\n                    >\n                      <Spin size='large' />\n                    </div>\n                  )}\n\n                </div>\n\n                <div style={{\n                  marginTop: '20px',\n                  display: 'block'\n                }}>\n                  <Pagination\n                    onChange={(pageNumber, _) => {\n                      imageListState?.setPage(pageNumber)\n                    }}\n                    defaultCurrent={1} total={imageListState?.resolvedData?.total} pageSize={11} />\n                </div>\n              </TabPane>\n            </Tabs>\n          </div>\n          <div className='mediaLibraryBodyContainer-right'>\n            {activeImageItem && (\n              <>\n                <Formik\n                  onSubmit={(values, actions) =>\n                    handleUpdateSubmit(values, actions)\n                  }\n                  validateOnBlur={false}\n                  enableReinitialize={true}\n                  initialValues={\n                    // @ts-ignore\n                    { ...activeImageItem }\n                  }\n                >\n                  {({\n                    handleChange,\n                    values,\n                    handleSubmit,\n                    errors,\n                    isValid,\n                    isSubmitting,\n                    touched,\n                    handleBlur,\n                    setFieldTouched,\n                    handleReset,\n                  }) => (\n                      <>\n                        <h4>Attachment Details</h4>\n                        <div className='mediaLibraryBodyContainer-right-ImageDetails'>\n                          <div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\n                            <img src={activeImageItem['cover']} alt='img' />\n                          </div>\n                          <div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\n                            <h5 className='imageLibnameText'>\n                              {activeImageItem['name']}\n                            </h5>\n                            <h5>\n                              {activeImageItem['added'] &&\n                                moment(activeImageItem['added']).format(\n                                  'MMMM Do YYYY, h:mm a'\n                                )}\n                            </h5>\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t        5000 X 500\n\t\t\t\t\t\t\t\t\t          </h5> */}\n\n                            <Popconfirm\n                              onConfirm={() =>\n                                handleDeleteImageFromImageLibrary(\n                                  activeImageItem['id']\n                                )\n                              }\n                              title='Are you sure？'\n                              okText='Yes'\n                              cancelText='No'\n                            >\n                              <h5 className='imageLibdeleteText'>\n                                Delete parmanently\n                            </h5>\n                            </Popconfirm>\n                          </div>\n                        </div>\n\n                        <Input\n                          label='Alternate Text'\n                          value={values.alt}\n                          name='alt'\n                          isError={\n                            (touched.alt && errors.alt) ||\n                            (!isSubmitting &&\n                              updateMediaLibrary.error['error']['alt'])\n                          }\n                          errorString={\n                            (touched.alt && errors.alt) ||\n                            (!isSubmitting &&\n                              updateMediaLibrary.error['error']['alt'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('alt');\n                          }}\n                        />\n\n                        <Input\n                          label='Title'\n                          value={values.title}\n                          name='title'\n                          isError={\n                            (touched.title && errors.title) ||\n                            (!isSubmitting &&\n                              updateMediaLibrary.error['error']['title'])\n                          }\n                          errorString={\n                            (touched.title && errors.title) ||\n                            (!isSubmitting &&\n                              updateMediaLibrary.error['error']['title'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('title');\n                          }}\n                        />\n\n                        <Input\n                          label='Caption'\n                          value={values.caption}\n                          name='caption'\n                          isError={\n                            (touched.caption && errors.caption) ||\n                            (!isSubmitting &&\n                              updateMediaLibrary.error['error']['caption'])\n                          }\n                          errorString={\n                            (touched.caption && errors.caption) ||\n                            (!isSubmitting &&\n                              updateMediaLibrary.error['error']['caption'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('caption');\n                          }}\n                        />\n\n                        <Button\n                          type='default'\n                          onClick={(e: any) => handleSubmit(e)}\n                          disabled={getisUpdateSubmitButtonDisabled(\n                            values,\n                            isValid\n                          )}\n                          loading={isSubmitting}\n                          style={\n                            {\n                              // marginTop: '20px'\n                            }\n                          }\n                        >\n                          Update\n                      </Button>\n                      </>\n                    )}\n                </Formik>\n              </>\n            )}\n\n            {!activeImageItem && (\n              <div\n                style={{\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <h4\n                  style={{\n                    textAlign: 'center',\n                    fontSize: '13px',\n                    color: '#8888',\n                  }}\n                >\n                  Select an image to preview details\n                </h4>\n              </div>\n            )}\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default MediaLibrary;\n","import MediaLibrary from './MediaLibrary';\nexport default MediaLibrary;\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { Tag, Input, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nclass MetaTags extends React.Component {\n  state = {\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n  };\n\n  handleClose = (removedTag) => {\n    const { setTags, tags } = this.props;\n    const localTags = tags.filter((tag) => tag !== removedTag);\n    setTags(localTags);\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    console.log('handleInputConfirm', this.props);\n    const { inputValue } = this.state;\n    let { tags, setTags } = this.props;\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n    setTags(tags);\n    this.setState({\n      inputVisible: false,\n      inputValue: '',\n    });\n  };\n\n  handleEditInputChange = (e) => {\n    this.setState({ editInputValue: e.target.value });\n    console.log('tagValue', e.target.value);\n  };\n\n  handleEditInputConfirm = () => {\n    this.setState(({ editInputIndex, editInputValue }) => {\n      return {\n        editInputIndex: -1,\n        editInputValue: '',\n      };\n    });\n\n    const newTags = [...this.props.tags];\n    newTags[editInputIndex] = editInputValue;\n    this.props.setTags(newTags);\n  };\n\n  saveInputRef = (input) => {\n    this.input = input;\n  };\n\n  saveEditInputRef = (input) => {\n    this.editInput = input;\n  };\n\n  render() {\n    const {\n      inputVisible,\n      inputValue,\n      editInputIndex,\n      editInputValue,\n    } = this.state;\n    const { placeholder, tags } = this.props;\n\n    return (\n      <>\n        {tags &&\n          tags.length > 0 &&\n          tags.map((tag, index) => {\n            if (editInputIndex === index) {\n              return (\n                <Input\n                  ref={this.saveEditInputRef}\n                  key={tag}\n                  size='small'\n                  placeholder={placeholder}\n                  className='tag-input'\n                  value={editInputValue}\n                  onChange={this.handleEditInputChange}\n                  onBlur={this.handleEditInputConfirm}\n                  onPressEnter={this.handleEditInputConfirm}\n                />\n              );\n            }\n\n            const isLongTag = tag.length > 20;\n\n            const tagElem = (\n              <Tag\n                className='edit-tag'\n                key={tag}\n                closable={true}\n                onClose={() => this.handleClose(tag)}\n              >\n                <span\n                  onDoubleClick={(e) => {\n                    if (index !== 0) {\n                      this.setState(\n                        { editInputIndex: index, editInputValue: tag },\n                        () => {\n                          this.editInput.focus();\n                        }\n                      );\n                      e.preventDefault();\n                    }\n                  }}\n                >\n                  {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                </span>\n              </Tag>\n            );\n            return isLongTag ? (\n              <Tooltip title={tag} key={tag}>\n                {tagElem}\n              </Tooltip>\n            ) : (\n              tagElem\n            );\n          })}\n        {inputVisible && (\n          <Input\n            style={{\n              margin: '10px 0',\n            }}\n            ref={this.saveInputRef}\n            type='text'\n            size='small'\n            className='tag-input'\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag className='site-tag-plus edit-tag' onClick={this.showInput}>\n            <PlusOutlined /> New Value\n          </Tag>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MetaTags;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\nimport config from '../../config.json'\n// import third party ui lib\nimport {\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Tooltip,\n  Upload,\n  message,\n  Button,\n  Spin,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from './MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n  displayOrder: null,\n};\n\nconst { Option } = Select;\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  categoryList?: any;\n  setcategoryList?: any;\n  categoryDetailData?: any;\n  categoryList2?: any;\n}\n\nconst ModalChildComponent = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  categoryList,\n  setcategoryList,\n  categoryDetailData,\n  categoryList2\n}) => {\n  console.log('categoryList211', categoryList2)\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\n    {},\n    'updateCategory'\n  );\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\n    {},\n    'categoryDetail'\n  );\n\n  const [\n    updateCategoryIconState,\n    handleUpdateCategoryIconFetch,\n  ] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\n\n  const [\n    updateCategoryThumbnailState,\n    handleUpdateCategoryThumbnailFetch,\n  ] = useHandleFetch({}, 'categoryUpdateThumbnail', 'form');\n\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [selectedParentId, setselectedParentId] = useState('');\n  const [imageFile, setImagefile] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n\n  const [iconUrl, setIconUrl] = useState('');\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCategoryDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryDetailData.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [categoryDetailData]);\n\n  useEffect(() => {\n    if (\n      categoryDetailState.done &&\n      Object.keys(categoryDetailState).length > 0\n    ) {\n      const images = categoryDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        categoryDetailState.data.cover &&\n        categoryDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === categoryDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [categoryDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(categoryDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [categoryDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n        return image.id;\n      })\n      : [];\n\n    const formData = new FormData();\n\n    formData.append('name', values.name?.trim());\n    formData.append('description', values.description);\n    formData.append('image', JSON.stringify(imagesIds));\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\n    formData.append('parent', selectedParentId);\n    formData.append('icon', imageFile);\n    formData.append('thumbnail', thumbnailImageFile);\n\n    console.log('categoryDetailData', categoryDetailData);\n\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (categoryDetailData && categoryDetailData['image']) {\n            if (!categoryDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addCategoryRes = await handleAddCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: categoryDetailData.id,\n        },\n      },\n      body: {\n        name: values.name?.trim(),\n        description: values.description,\n        displayOrder: values.displayOrder,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        parent: selectedParentId,\n        icon: imageFile,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName?.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\n      openSuccessNotification('Category Updated!');\n      setAddNewCategoryVisible(false);\n      const positionInTag = () => {\n        return categoryList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const getCover = (id) => {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, categoryList[index], {\n        name: addCategoryRes['name'] || '',\n        description: addCategoryRes['description'] || '',\n        id: categoryDetailData.id,\n        key: categoryDetailData['id'] || '',\n        icon: iconUrl,\n        // @ts-ignore\n        ...addCategoryRes,\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...categoryList.slice(0, index),\n        updatedItem,\n        ...categoryList.slice(index + 1),\n      ];\n      setcategoryList(updateTagList);\n\n      actions.resetForm();\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setselectedParentId('');\n      setisparentcategoryChecked(true);\n      setImageUrl('');\n      setThumbnailImageUrl('');\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCategoryState['isLoading']) {\n      const error = addCategoryState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCategoryState]);\n\n  const onSwitchChange = (checked: any) => {\n    setisparentcategoryChecked(checked);\n    if (checked) {\n      setselectedParentId('');\n    }\n  };\n\n\n  const handleCancel = (e: any) => {\n    setTags([]);\n    setBnTags([]);\n    setAddNewCategoryVisible(false);\n    setImagefile('');\n    setCoverImageId('');\n    setselectedParentId('');\n    setmyImages(false);\n  };\n\n  const onChangeSelect = (value) => {\n    setselectedParentId(value);\n  };\n\n\n\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      setImagefile(file);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('icon', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryIconFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n\n          setIconUrl(`${config.baseURL}${res.icon}`)\n          openSuccessNotification('Category Icon updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category icon, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n  function beforeThumbnailUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setThumbnailImageUrl(imageUrl)\n      setThumbnailImagefile(file)\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('thumbnail', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryThumbnailFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Category Thumbnail updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category Thumbnail, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\n\n      setImageUrl(iconUrl);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const parent = categoryDetailData?.parent;\n      if (parent) {\n        setselectedParentId(parent);\n        setisparentcategoryChecked(false);\n      }\n    }\n  }, [categoryDetailData]);\n\n\n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const metaTags =\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        categoryDetailData.bn &&\n        categoryDetailData.bn['metaTags'] &&\n        categoryDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...categoryDetailData,\n          ...(categoryDetailData &&\n            Object.keys(categoryDetailData).length > 0 && {\n            bnMetaTitle:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].metaTitle &&\n              categoryDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].metaDescription &&\n              categoryDetailData['bn'].metaDescription,\n            bnName:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].name &&\n              categoryDetailData['bn'].name,\n            bnDescription:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].description &&\n              categoryDetailData['bn'].description,\n          }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n            <>\n              <section className='addProductGridContainer'>\n                <div className='addProductGridContainer__left'>\n                  <div className='addProductGridContainer__name'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Category Information *</h3>\n                      <div\n                        className={\n                          values.name && values.name.length > 2\n                            ? 'checkicon-active'\n                            : 'checkicon'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n                    <div className='addProductGridContainer__item-body'>\n                      <Input\n                        label='Name *'\n                        value={values.name}\n                        placeHolder={'grocery,fashion'}\n                        name='name'\n                        isError={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['name'])\n                        }\n                        errorString={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['name'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('name');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Name'\n                        value={values.bnName}\n                        placeHolder={'মুদিখানা,ফ্যাশন'}\n                        name='bnName'\n                        isError={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnName'])\n                        }\n                        errorString={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnName');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Description'\n                        value={values.description}\n                        placeholder={'This category...'}\n                        name='description'\n                        isError={\n                          (touched.description && errors.description) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['description'])\n                        }\n                        errorString={\n                          (touched.description && errors.description) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['description'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('description');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Description'\n                        value={values.bnDescription}\n                        placeholder={'এই ক্যাটাগড়ি...'}\n                        name='bnDescription'\n                        isError={\n                          (touched.bnDescription && errors.bnDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnDescription'])\n                        }\n                        errorString={\n                          (touched.bnDescription && errors.bnDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnDescription');\n                        }}\n                      />\n\n                      <Input\n                        label='Display Order'\n                        value={values.displayOrder}\n                        placeHolder={'1,3,7'}\n                        name='displayOrder'\n                        type='number'\n                        isError={\n                          (touched.displayOrder && errors.displayOrder) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['displayOrder'])\n                        }\n                        errorString={\n                          (touched.displayOrder && errors.displayOrder) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['displayOrder'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('displayOrder');\n                        }}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '25px',\n                        }}\n                      ></div>\n\n                      <div className='switchLabelContainer'>\n                        <Switch\n                          checked={isparentCategoryChecked}\n                          defaultChecked\n                          onChange={onSwitchChange}\n                        />\n                        <div className='switchLabelContainer-textContainer'>\n                          <h5>Top level Category</h5>\n                          <h5 className='switchLabelContainer-desc'>\n                            Disable to select a Parent Category\n                        </h5>\n                        </div>\n                      </div>\n\n                      {!isparentCategoryChecked && (\n                        <>\n                          <h3 className='inputFieldLabel'>Parent Category</h3>\n                          <Select\n                            showSearch\n                            style={{ width: 300 }}\n                            placeholder='Select a Parent Category'\n                            optionFilterProp='children'\n                            value={selectedParentId}\n                            onChange={onChangeSelect}\n                            // onFocus={onFocus}\n                            // onBlur={onBlur}\n                            // onSearch={onSearch}\n                            filterOption={(input, option: any) =>\n                              option.children\n                                .toLowerCase()\n                                .indexOf(input.toLowerCase()) >= 0\n                            }\n                          >\n                            {categoryList2 && categoryList2.length > 0 &&\n                              categoryList2.map((category) => {\n                                return (\n                                  <Option value={category.id}>\n                                    {category.name}\n                                  </Option>\n                                );\n                              })}\n                          </Select>\n                        </>\n                      )}\n\n                      <div\n                        style={{\n                          marginTop: '20px',\n                        }}\n                      />\n\n                      <div className='addproductSection-left-header'>\n                        <h3 className='inputFieldLabel'>Icon </h3>\n                        <Tooltip\n                          placement='left'\n                          title={'Add Icon image for this category'}\n                        >\n                          <a href='###'>\n                            <InfoCircleOutlined />\n                          </a>\n                        </Tooltip>\n                      </div>\n\n                      <Upload\n                        style={{\n                          borderRadius: '8px',\n                        }}\n                        name='avatar'\n                        listType='picture-card'\n                        className='avatar-uploader'\n                        showUploadList={false}\n                        beforeUpload={beforeUpload}\n                        multiple={false}\n                      >\n                        {imageUrl ? (\n                          <img\n                            src={imageUrl}\n                            alt='avatar'\n                            style={{ width: '100%' }}\n                          />\n                        ) : (\n                            uploadButton\n                          )}\n                      </Upload>\n\n\n\n                      <div\n                        style={{\n                          marginTop: '20px',\n                        }}\n                      />\n\n                      <div className='addproductSection-left-header'>\n                        <h3 className='inputFieldLabel'>Thumbnail</h3>\n                        <Tooltip\n                          placement='left'\n                          title={'Add thumbnail image for this category'}\n                        >\n                          <a href='###'>\n                            <InfoCircleOutlined />\n                          </a>\n                        </Tooltip>\n                      </div>\n\n                      <Upload\n                        style={{\n                          borderRadius: '8px',\n                        }}\n                        name='avatar'\n                        listType='picture-card'\n                        className='avatar-uploader'\n                        showUploadList={false}\n                        beforeUpload={beforeThumbnailUpload}\n                        multiple={false}\n                      >\n                        {thumbnailImageUrl ? (\n                          <img\n                            src={thumbnailImageUrl}\n                            alt='avatar'\n                            style={{ width: '100%' }}\n                          />\n                        ) : (\n                            uploadButton\n                          )}\n                      </Upload>\n\n\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__image'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Image</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          'Click on the image to select cover image, By default 1st image is selected as cover'\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n\n                    <div\n                      style={{\n                        padding: '10px',\n                      }}\n                      className='aboutToUploadImagesContainer'\n                    >\n                      {categoryDetailState.isLoading && (\n                        <div\n                          style={{\n                            padding: '20px 0',\n                          }}\n                        >\n                          <Spin />\n                        </div>\n                      )}\n                      {categoryDetailState.done && (\n                        <>\n                          {myImages &&\n                            // @ts-ignore\n                            myImages.length > 0 &&\n                            myImages.map((image, index) => {\n                              return (\n                                <div className='aboutToUploadImagesContainer__item'>\n                                  <div\n                                    className='aboutToUploadImagesContainer__item-imgContainer'\n                                    onClick={() => {\n                                      setCoverImageId(image.id);\n                                      handleSetImageAsThumnail(image);\n                                    }}\n                                  >\n                                    <img src={image.cover} alt={image.alt} />\n                                  </div>\n\n                                  <span\n                                    onClick={() => {\n                                      handleImagesDelete(image.id);\n                                      handleDetachSingleImage(image.id);\n                                    }}\n                                    className='aboutToUploadImagesContainer__item-remove'\n                                  >\n                                    <CloseOutlined />\n                                  </span>\n\n                                  {coverImageId === image.id ? (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  ) : (\n                                      !coverImageId &&\n                                      index === 0 && (\n                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                          <CheckOutlined />\n                                        </span>\n                                      )\n                                    )}\n                                </div>\n                              );\n                            })}\n\n                          <Tooltip title={'Attach images'}>\n                            <div\n                              onClick={() => {\n                                setvisible(true);\n                                setisModalOpenForImages(true);\n                                setisModalOpenForThumbnail(false);\n                              }}\n                              className='aboutToUploadImagesContainer__uploadItem'\n                            >\n                              {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                              <FileImageFilled />\n                              {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                <PlusOutlined />\n                              </span>\n                            </div>\n                          </Tooltip>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__right'>\n                  <div className='addProductGridContainer__category'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Meta Tags</h3>\n\n                        <Tooltip\n                          placement='left'\n                          title={\n                            \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                          }\n                        >\n                          <a href='###'>\n                            <InfoCircleOutlined />\n                          </a>\n                        </Tooltip>\n\n                        {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Input\n                          label='Meta title'\n                          value={values.metaTitle}\n                          placeHolder={'...'}\n                          name='metaTitle'\n                          isError={\n                            (touched.metaTitle && errors.metaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaTitle'])\n                          }\n                          errorString={\n                            (touched.metaTitle && errors.metaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaTitle'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('metaTitle');\n                          }}\n                        />\n\n                        <Input\n                          label='BN Meta title'\n                          value={values.bnMetaTitle}\n                          placeHolder={'...'}\n                          name='bnMetaTitle'\n                          isError={\n                            (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['bnMetaTitle'])\n                          }\n                          errorString={\n                            (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['bnMetaTitle'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('bnMetaTitle');\n                          }}\n                        />\n\n                        <TextArea\n                          label='Meta description'\n                          value={values.metaDescription}\n                          placeholder={'meta...'}\n                          name='metaDescription'\n                          isError={\n                            (touched.metaDescription && errors.metaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaDescription'])\n                          }\n                          errorString={\n                            (touched.metaDescription && errors.metaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaDescription'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('metaDescription');\n                          }}\n                        />\n\n                        <TextArea\n                          label='BN Meta Description'\n                          value={values.bnMetaDescription}\n                          placeholder={'এইয় মেট...'}\n                          name='bnMetaDescription'\n                          isError={\n                            (touched.bnMetaDescription &&\n                              errors.bnMetaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error'][\n                              'bnMetaDescription'\n                              ])\n                          }\n                          errorString={\n                            (touched.bnMetaDescription &&\n                              errors.bnMetaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error'][\n                              'bnMetaDescription'\n                              ])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('bnMetaDescription');\n                          }}\n                        />\n\n                        <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                        <MetaTags\n                          // @ts-ignore\n                          setTags={setTags}\n                          tags={tags}\n                        />\n\n                        <div\n                          style={{\n                            marginTop: '15px',\n                          }}\n                        ></div>\n\n                        <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                        <MetaTags\n                          // @ts-ignore\n                          setTags={setBnTags}\n                          tags={bnTags}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <div\n                style={{\n                  padding: '15px',\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <Button\n                  style={{\n                    color: '#555',\n                    marginRight: '10px',\n                  }}\n                  className='btnPrimaryClassNameoutline-cancle'\n                  onClick={() => setAddNewCategoryVisible(false)}\n                  type='default'\n                >\n                  Cancel\n              </Button>\n\n                <Button\n                  className='btnPrimaryClassNameoutline'\n                  onClick={handleSubmit}\n                  loading={addCategoryState.isLoading}\n                  type='link'\n                  icon={<CheckOutlined />}\n                >\n                  Update\n              </Button>\n              </div>\n\n              <MediaLibrary\n                setvisible={setvisible}\n                visible={visible}\n                setmyImages={setmyImages}\n                myImages={myImages}\n                setmyThumbnailImage={setmyThumbnailImage}\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\n                isModalOpenForImages={isModalOpenForImages}\n              />\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  categoryList,\n  setcategoryList,\n  categoryDetailData,\n  categoryList2\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <Modal\n      destroyOnClose={true}\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Edit Category'\n      visible={addNewCategoryVisible}\n      onCancel={handleCancel}\n      footer={false}\n      okText='Update'\n      width={'70vw'}\n      okButtonProps={{\n        // loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        categoryList={categoryList}\n        setcategoryList={setcategoryList}\n        categoryDetailData={categoryDetailData}\n        categoryList2={categoryList2}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewCategory;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst DataTable = (props: any) => (\n\t<ContentLoader\n\t\tspeed={0.5}\n\t\twidth={1300}\n\t\theight={400}\n\t\tviewBox='0 0 1300 400'\n\t\tbackgroundColor='#f3f3f3'\n\t\tforegroundColor='#ecebeb'\n\t\t{...props}\n\t>\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='203' r='12' />\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='265' r='12' />\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='323' r='12' />\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='386' r='12' />\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='37' cy='97' r='11' />\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\n\t\t<circle cx='1316' cy='88' r='11' />\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\n\t\t<circle cx='77' cy='96' r='11' />\n\t</ContentLoader>\n);\n\nDataTable.metadata = {\n\tname: 'Mohd Arif Un',\n\tgithub: 'arif-un',\n\tdescription: 'Data Table skeleton',\n\tfilename: 'DataTable'\n};\n\nexport default DataTable;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Table,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Popconfirm,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport { AddNewCategory, QuickEdit } from \"../category\";\nimport CategoryNewQuickEdit from \"./CategoryNewQuickEdit\";\n\n/// import hooks\nimport { useFetch, useHandleFetch } from \"../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport Empty from \"../../components/Empty\";\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\nimport { setNestedObjectValues } from \"formik\";\n\nconst { Column } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || \"Category Created\",\n    description: \"\",\n    icon: <CheckCircleOutlined style={{ color: \"rgba(0, 128, 0, 0.493)\" }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || \"Something Went Wrong\",\n    description: \"\",\n    icon: <CheckCircleOutlined style={{ color: \"rgb(241, 67, 67)\" }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setcategoryList?: any;\n  history?: any;\n  roles?: any;\n  data2?: any;\n}\n\nconst MyTable = ({\n  data,\n  setcategoryList,\n  history,\n  roles,\n  data2,\n}: myTableProps) => {\n  console.log(\"categoryList22222\", data2);\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch(\n    {},\n    \"deleteCategory\"\n  );\n  // console.log('activeCategoryForEdit',activeCategoryForEdit);\n\n  const handleDeleteCategory = async (id) => {\n    const deleteCategoryRes = await handleDeleteCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCategoryRes && deleteCategoryRes.status === \"ok\") {\n      openSuccessNotification(\"Deleted Category\");\n      const newCategoryList = data.filter((item) => item.id !== id);\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else if (!record.cover && record.icon) {\n      return record.icon;\n    } else return \"\";\n  };\n\n  console.log(\"catshit\", data2);\n  return (\n    <>\n      <Table\n        style={{\n          paddingTop: \"10px\",\n          borderRadius: \"5px !important\",\n          overflow: \"hidden\",\n          boxShadow:\n            \"0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)\",\n        }}\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size=\"small\"\n        // pagination={false}\n        dataSource={data}\n        tableLayout={\"auto\"}\n        onHeaderRow={(column) => {\n          return {\n            style: {\n              color: \"red !important\",\n            },\n          };\n        }}\n      >\n        <Column\n          title=\"\"\n          dataIndex=\"cover\"\n          key=\"id\"\n          width={\"80px\"}\n          className=\"classnameofthecolumn\"\n          render={(cover, record: any) => (\n            <>\n              <div\n                className=\"listCoverImage\"\n                onClick={() => {\n                  history.push(`/admin/category/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt=\"\" />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/category/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: \"#555\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title=\"Sub Cateogory\"\n          dataIndex=\"subCount\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          title=\"Product\"\n          dataIndex=\"productCount\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess(\"postCatalogue\", roles) && (\n          <Column\n            className=\"classnameofthecolumn\"\n            title=\"\"\n            key=\"action\"\n            align=\"right\"\n            render={(text, record: any) => (\n              <Space size=\"middle\">\n                <a href=\"##\">\n                  <Tooltip placement=\"top\" title=\"Edit Category\">\n                    <span\n                      className=\"iconSize\"\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n                <Popconfirm\n                  onConfirm={() => handleDeleteCategory(record.id)}\n                  title=\"Are you sure？\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <span className=\"iconSize iconSize-danger\">\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <CategoryNewQuickEdit\n          categoryDetailData={activeCategoryForEdit}\n          setcategoryList={setcategoryList}\n          categoryList={data}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          categoryList2={data2}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n  roles?: any;\n}\n\nconst CategoryList = ({ history, roles }: Props) => {\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    \"categoryList\"\n  );\n  const [categoryList, setcategoryList] = useState([]);\n  const [categoryList2, setcategoryList2] = useState([]);\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categories = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n            sortItem: \"added\",\n            sortOrderValue: \"-1\",\n            limitNumber: 5000000,\n          },\n        },\n      });\n      // @ts-ignore\n      setcategoryList(categories);\n      // @ts-ignore\n      setcategoryList2(categories);\n    };\n    setCategories();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  // console.log('categoryState',categoryState);\n\n  const handleSearch = (value) => {\n    if (categoryState.data.length > 0) {\n      const newCategoryList = categoryState.data.filter((item) => {\n        if (item.name.toLowerCase().includes(value.toLowerCase())) {\n          return true;\n        }\n        if (\n          item.subCategory &&\n          item.subCategory.length > 0 &&\n          item.subCategory[0] &&\n          item.subCategory[0][\"name\"]\n            ?.toLowerCase()\n            .includes(value?.toLowerCase())\n        ) {\n          return true;\n        }\n        return false;\n      });\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  console.log(\"categoryList22\", categoryList2);\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className=\"categoryListContainer\">\n        <div className=\"categoryListContainer__header\">\n          <div className=\"categoryListContainer__header-searchBar\">\n            <h2 className=\"categoryListContainer__header-title\">Categories</h2>\n\n            <Search\n              enterButton={false}\n              className=\"searchbarClassName\"\n              placeholder=\"search categories..\"\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n\n          {isAccess(\"postCatalogue\", roles) && (\n            <Button\n              // type=\"primary\"\n              className=\"btnPrimaryClassNameoutline\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setAddNewCategoryVisible(true);\n              }}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className=\"categoryListContainer__afterHeader\">\n          {/* <Search\n              placeholder=\"search categories..\"\n              size=\"large\"\n              onSearch={value => console.log(value)}\n              style={{ width: 300 }}\n            /> */}\n        </div>\n\n        <div className=\"categoryListContainer__categoryList\">\n          {categoryState.done && categoryList.length > 0 && (\n            <MyTable\n              roles={roles}\n              history={history}\n              setcategoryList={setcategoryList}\n              data={categoryList}\n              data2={categoryList2}\n            />\n          )}\n          {categoryState.isLoading && <DataTableSkeleton />}\n\n          {categoryState.done && !(categoryList.length > 0) && (\n            <div\n              style={{\n                marginTop: \"50px\",\n              }}\n            >\n              <Empty title=\"No Category found\" />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {categoryState.done && (\n        <AddNewCategory\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          categoryList={categoryList}\n          setcategoryList={setcategoryList}\n          categoryList2={categoryList2}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(withRouter(CategoryList));\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Tooltip,\n  Upload,\n  message,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from './MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n  displayOrder: null,\n};\n\nconst { Option } = Select;\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  categoryList?: any;\n  setcategoryList?: any;\n  categoryList2?:any; \n}\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  categoryList,\n  setcategoryList,\n  categoryList2\n}: Props) => {\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\n    {},\n    'addCategory',\n    'form'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [selectedParentId, setselectedParentId] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n  const [imageFile, setImagefile] = useState('');\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const formData = new FormData();\n\n    const bn = {\n      metaTitle: values.bnMetaTitle,\n      metaDescription: values.bnMetaDescription,\n      metaTags: bnTags.join(','),\n      name: values.bnName?.trim(),\n      description: values.bnDescription,\n    };\n\n    formData.append('name', values.name?.trim());\n    formData.append('description', values.description);\n    formData.append('image', JSON.stringify(imagesIds));\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\n    formData.append('parent', selectedParentId);\n    formData.append('icon', imageFile);\n    formData.append('thumbnail', thumbnailImageFile);\n    formData.append('metaTitle', values.metaTitle);\n    formData.append('displayOrder', values.displayOrder);\n    formData.append('metaDescription', values.metaDescription);\n    formData.append('metaTags', tags);\n\n    const bnData = JSON.stringify(bn);\n    const bnFormData = new FormData();\n    bnFormData.append('bn', bnData);\n\n    formData.append('bn', bnFormData.get('bn'));\n\n    console.log('addcategoryREsBody', {\n      ...formData,\n      // ...bnFormData\n    });\n\n    const addCategoryRes = await handleAddCategoryFetch({\n      body: formData,\n    });\n\n    // @ts-ignore\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\n      openSuccessNotification('Category Created!');\n      setAddNewCategoryVisible(false);\n\n      setcategoryList([\n        {\n          id: addCategoryRes['_id'] || '',\n          key: addCategoryRes['_id'] || '',\n          name: addCategoryRes['name'] || '',\n          description: addCategoryRes['description'] || '',\n          cover: addCategoryRes['cover'] || '',\n          // @ts-ignore\n          ...addCategoryRes,\n        },\n        ...categoryList,\n      ]);\n\n      actions.resetForm();\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setselectedParentId('');\n      setisparentcategoryChecked(true);\n      setImageUrl('');\n      setThumbnailImageUrl('');\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('addCategoryState', addCategoryState);\n\n  useEffect(() => {\n    if (!addCategoryState['isLoading']) {\n      const error = addCategoryState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCategoryState]);\n\n  const onSwitchChange = (checked: any) => {\n    setisparentcategoryChecked(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const onChangeSelect = (value) => {\n    setselectedParentId(value);\n  };\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      setImagefile(file);\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n  function beforeThumbnailUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setThumbnailImageUrl(imageUrl);\n      setThumbnailImagefile(file); \n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n  \n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Category'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              placeHolder={''}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addCategoryState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addCategoryState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={''}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              placeholder={'This category...'}\n              name='description'\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ক্যাটাগড়ি...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Display Order'\n              value={values.displayOrder}\n              placeHolder={'1,3,7'}\n              name='displayOrder'\n              type='number'\n              isError={\n                (touched.displayOrder && errors.displayOrder) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['displayOrder'])\n              }\n              errorString={\n                (touched.displayOrder && errors.displayOrder) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['displayOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('displayOrder');\n              }}\n            />\n\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n            ></div>\n\n            <div className='switchLabelContainer'>\n              <Switch\n                checked={isparentCategoryChecked}\n                defaultChecked\n                onChange={onSwitchChange}\n              />\n              <div className='switchLabelContainer-textContainer'>\n                <h5>Top level Category</h5>\n                <h5 className='switchLabelContainer-desc'>\n                  Disable to select a Parent Category\n                </h5>\n              </div>\n            </div>\n\n            {!isparentCategoryChecked && (\n              <>\n                <h3 className='inputFieldLabel'>Parent Category</h3>\n                <Select\n                  showSearch\n                  style={{ width: 300 }}\n                  placeholder='Select a Parent Category'\n                  optionFilterProp='children'\n                  onChange={onChangeSelect}\n                  // onFocus={onFocus}\n                  // onBlur={onBlur}\n                  // onSearch={onSearch}\n                  filterOption={(input, option: any) =>\n                    option.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {categoryList2.length > 0 &&\n                    categoryList2.map((category) => {\n                      return (\n                        <Option value={category.id}>{category.name}</Option>\n                      );\n                    })}\n                </Select>\n              </>\n            )}\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n\n            <div className='addproductSection-left-header'>\n              <h3 className='inputFieldLabel'>Icon </h3>\n              <Tooltip\n                placement='left'\n                title={'Add Icon image for this category'}\n              >\n                <a href='###'>\n                  <InfoCircleOutlined />\n                </a>\n              </Tooltip>\n            </div>\n\n            <Upload\n              style={{\n                borderRadius: '8px',\n              }}\n              name='avatar'\n              listType='picture-card'\n              className='avatar-uploader'\n              showUploadList={false}\n              beforeUpload={beforeUpload}\n              multiple={false}\n            >\n              {imageUrl ? (\n                <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n            <div className='addproductSection-left-header'>\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\n              <Tooltip\n                placement='left'\n                title={'Add thumbnail image for this category'}\n              >\n                <a href='###'>\n                  <InfoCircleOutlined />\n                </a>\n              </Tooltip>\n            </div>\n\n            <Upload\n              style={{\n                borderRadius: '8px',\n              }}\n              name='avatar'\n              listType='picture-card'\n              className='avatar-uploader'\n              showUploadList={false}\n              beforeUpload={beforeThumbnailUpload}\n              multiple={false}\n            >\n              {thumbnailImageUrl ? (\n                <img src={thumbnailImageUrl} alt='avatar' style={{ width: '100%' }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n\n            <div\n              style={{\n                marginTop: '10px',\n              }}\n            />\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Images</h3>\n              <Tooltip\n                placement='left'\n                title={\n                  'Click on the image to select cover image, By default 1st image is selected as cover'\n                }\n              >\n                <a href='###'>\n                  <InfoCircleOutlined />\n                </a>\n              </Tooltip>\n            </div>\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => setCoverImageId(image.id)}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Tooltip title={'Attach images'}>\n                <div\n                  onClick={() => {\n                    setvisible(true);\n                    setisModalOpenForImages(true);\n                    setisModalOpenForThumbnail(false);\n                  }}\n                  className='aboutToUploadImagesContainer__uploadItem'\n                >\n                  {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                  <FileImageFilled />\n                  {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                  <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                    <PlusOutlined />\n                  </span>\n                </div>\n              </Tooltip>\n            </div>\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewCategory;\n","import React, { useState } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\n\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\n\n\n\nconst validationSchema = Yup.object().shape({\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\n\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\ninterface Props {\n\tcategory: any;\n\tsetvisible: any;\n\tvisible: any;\n\tsetcategoryList?: any;\n\tcategoryList?: any;\n}\n\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\n\t\t\turlOptions: {\n\t\t\t\tplaceHolders: {\n\t\t\t\t\tid: values.id,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbody: {\n\t\t\t\tname: values.name,\n\t\t\t\tdescription: values.description,\n\t\t\t},\n\t\t});\n\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \n\n\t\t// @ts-ignore\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\n\t\t\topenSuccessNotification();\n\n\t\t\tconst positionInTag = () => {\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\n\t\t\t}\n\n\t\t\tconst index = positionInTag();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\n\t\t\tsetcategoryList(updateCategoryList);\n\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\t\tactions.setSubmitting(false);\n\t\tsetvisible(false)\n\n\t};\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetvisible(false);\n\t};\n\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!values.name || !isValid) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...category }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Update'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Title'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\n\n// import config\nimport config from \"../../config.json\";\nimport {\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Tooltip,\n  Upload,\n  message,\n  Button,\n  Spin,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from './MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n  displayOrder: null,\n};\n\nconst { Option } = Select;\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  setcategoryDetailData?: any;\n  categoryDetailData?: any;\n  categoryList?: any;\n}\n\nconst ModalChildComponent = ({\n  setAddNewCategoryVisible,\n  categoryList,\n  categoryDetailData,\n  setcategoryDetailData,\n}) => {\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\n    {},\n    'updateCategory'\n  );\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\n    {},\n    'categoryDetail'\n  );\n\n  const [\n    updateCategoryIconState,\n    handleUpdateCategoryIconFetch,\n  ] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\n\n\n  const [\n    updateCategoryThumbnailState,\n    handleUpdateCategoryThumbnailFetch,\n  ] = useHandleFetch({}, 'categoryUpdateThumbnail', 'form');\n\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [selectedParentId, setselectedParentId] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n  const [imageFile, setImagefile] = useState('');\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n  const [iconUrl, setIconUrl] = useState('');\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCategoryDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryDetailData.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [categoryDetailData]);\n\n  useEffect(() => {\n    if (\n      categoryDetailState.done &&\n      Object.keys(categoryDetailState).length > 0\n    ) {\n      const images = categoryDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        categoryDetailState.data.cover &&\n        categoryDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === categoryDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [categoryDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(categoryDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [categoryDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n        return image.id;\n      })\n      : [];\n\n    const formData = new FormData();\n\n    formData.append('name', values.name?.trim());\n    formData.append('description', values.description);\n    formData.append('image', JSON.stringify(imagesIds));\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\n    formData.append('parent', selectedParentId);\n    formData.append('icon', imageFile);\n    formData.append('thumbnail', thumbnailImageFile);\n\n    console.log('categoryDetailData', categoryDetailData);\n\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (categoryDetailData && categoryDetailData['image']) {\n            if (!categoryDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addCategoryRes = await handleAddCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: categoryDetailData.id,\n        },\n      },\n      body: {\n        name: values.name?.trim(),\n        description: values.description,\n        displayOrder: values.displayOrder,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        parent: selectedParentId,\n        icon: imageFile,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName?.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\n      openSuccessNotification('Category Updated!');\n      setAddNewCategoryVisible(false);\n\n      setcategoryDetailData({\n        name: addCategoryRes['name'] || '',\n        description: addCategoryRes['description'] || '',\n        cover: categoryDetailData['cover'] || '',\n        id: categoryDetailData.id,\n        key: categoryDetailData['id'] || '',\n        icon: iconUrl,\n        // @ts-ignore\n        ...addCategoryRes,\n      });\n\n      actions.resetForm();\n      // @ts-ignore\n      // setmyImages([]);\n      // setCoverImageId('');\n      // setselectedParentId('');\n      // setisparentcategoryChecked(true);\n      // setImageUrl('');\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCategoryState['isLoading']) {\n      const error = addCategoryState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCategoryState]);\n\n  const onSwitchChange = (checked: any) => {\n    setisparentcategoryChecked(checked);\n    if (checked) {\n      setselectedParentId('');\n    }\n  };\n\n  const handleCancel = (e: any) => {\n    setTags([]);\n    setBnTags([]);\n    setAddNewCategoryVisible(false);\n    setImagefile('');\n    setCoverImageId('');\n    setselectedParentId('');\n    setmyImages(false);\n  };\n\n  const onChangeSelect = (value) => {\n    setselectedParentId(value);\n  };\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      setImagefile(file);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('icon', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryIconFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          setIconUrl(`${config.baseURL}${res.icon}`)\n          openSuccessNotification('Category Icon updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category icon, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n\n\n  function beforeThumbnailUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setThumbnailImageUrl(imageUrl)\n      setThumbnailImagefile(file)\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('thumbnail', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryThumbnailFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Category Thumbnail updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category Thumbnail, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n\n\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\n      setImageUrl(iconUrl);\n    }\n  }, [categoryDetailData]);\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const parent = categoryDetailData?.parent;\n      if (parent) {\n        setselectedParentId(parent);\n        setisparentcategoryChecked(false);\n      }\n    }\n  }, [categoryDetailData]);\n\n\n\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const thumbnailImageUrl = categoryDetailData.thumbnail && categoryDetailData.thumbnail;\n      setThumbnailImageUrl(thumbnailImageUrl);\n    }\n  }, []);\n\n\n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const metaTags =\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        categoryDetailData.bn &&\n        categoryDetailData.bn['metaTags'] &&\n        categoryDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...categoryDetailData,\n          ...(categoryDetailData &&\n            Object.keys(categoryDetailData).length > 0 && {\n            bnMetaTitle:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].metaTitle &&\n              categoryDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].metaDescription &&\n              categoryDetailData['bn'].metaDescription,\n            bnName:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].name &&\n              categoryDetailData['bn'].name,\n            bnDescription:\n              categoryDetailData['bn'] &&\n              categoryDetailData['bn'].description &&\n              categoryDetailData['bn'].description,\n          }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n            <>\n              <section className='addProductGridContainer'>\n                <div className='addProductGridContainer__left'>\n                  <div className='addProductGridContainer__name'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Category Information *</h3>\n                      <div\n                        className={\n                          values.name && values.name.length > 2\n                            ? 'checkicon-active'\n                            : 'checkicon'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n                    <div className='addProductGridContainer__item-body'>\n                      <Input\n                        label='Name *'\n                        value={values.name}\n                        placeHolder={''}\n                        name='name'\n                        isError={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['name'])\n                        }\n                        errorString={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['name'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('name');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Name'\n                        value={values.bnName}\n                        placeHolder={''}\n                        name='bnName'\n                        isError={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnName'])\n                        }\n                        errorString={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnName');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Description'\n                        value={values.description}\n                        placeholder={'This category...'}\n                        name='description'\n                        isError={\n                          (touched.description && errors.description) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['description'])\n                        }\n                        errorString={\n                          (touched.description && errors.description) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['description'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('description');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Description'\n                        value={values.bnDescription}\n                        placeholder={'এই ক্যাটাগড়ি...'}\n                        name='bnDescription'\n                        isError={\n                          (touched.bnDescription && errors.bnDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnDescription'])\n                        }\n                        errorString={\n                          (touched.bnDescription && errors.bnDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnDescription');\n                        }}\n                      />\n\n                      <Input\n                        label='Display Order'\n                        value={values.displayOrder}\n                        placeHolder={'1,3,7'}\n                        name='displayOrder'\n                        type='number'\n                        isError={\n                          (touched.displayOrder && errors.displayOrder) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['displayOrder'])\n                        }\n                        errorString={\n                          (touched.displayOrder && errors.displayOrder) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['displayOrder'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('displayOrder');\n                        }}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '25px',\n                        }}\n                      ></div>\n\n                      <div className='switchLabelContainer'>\n                        <Switch\n                          checked={isparentCategoryChecked}\n                          defaultChecked\n                          onChange={onSwitchChange}\n                        />\n                        <div className='switchLabelContainer-textContainer'>\n                          <h5>Top level Category</h5>\n                          <h5 className='switchLabelContainer-desc'>\n                            Disable to select a Parent Category\n                        </h5>\n                        </div>\n                      </div>\n\n                      {!isparentCategoryChecked && (\n                        <>\n                          <h3 className='inputFieldLabel'>Parent Category</h3>\n                          <Select\n                            showSearch\n                            style={{ width: 300 }}\n                            placeholder='Select a Parent Category'\n                            optionFilterProp='children'\n                            onChange={onChangeSelect}\n                            value={selectedParentId}\n                            // onFocus={onFocus}\n                            // onBlur={onBlur}\n                            // onSearch={onSearch}\n                            filterOption={(input, option: any) =>\n                              option.children\n                                .toLowerCase()\n                                .indexOf(input.toLowerCase()) >= 0\n                            }\n                          >\n                            {categoryList.length > 0 &&\n                              categoryList.map((category) => {\n                                return (\n                                  <Option value={category.id}>\n                                    {category.name}\n                                  </Option>\n                                );\n                              })}\n                          </Select>\n                        </>\n                      )}\n\n                      <div\n                        style={{\n                          marginTop: '20px',\n                        }}\n                      />\n\n                      <div className='addproductSection-left-header'>\n                        <h3 className='inputFieldLabel'>Icon </h3>\n                        <Tooltip\n                          placement='left'\n                          title={'Add Icon image for this category'}\n                        >\n                          <a href='###'>\n                            <InfoCircleOutlined />\n                          </a>\n                        </Tooltip>\n                      </div>\n\n                      <Upload\n                        style={{\n                          borderRadius: '8px',\n                        }}\n                        name='avatar'\n                        listType='picture-card'\n                        className='avatar-uploader'\n                        showUploadList={false}\n                        beforeUpload={beforeUpload}\n                        multiple={false}\n                      >\n                        {imageUrl ? (\n                          <img\n                            src={imageUrl}\n                            alt='avatar'\n                            style={{ width: '100%' }}\n                          />\n                        ) : (\n                            uploadButton\n                          )}\n                      </Upload>\n\n\n                      <div\n                        style={{\n                          marginTop: '20px',\n                        }}\n                      />\n\n                      <div className='addproductSection-left-header'>\n                        <h3 className='inputFieldLabel'>Thumbnail</h3>\n                        <Tooltip\n                          placement='left'\n                          title={'Add thumbnail image for this category'}\n                        >\n                          <a href='###'>\n                            <InfoCircleOutlined />\n                          </a>\n                        </Tooltip>\n                      </div>\n\n                      <Upload\n                        style={{\n                          borderRadius: '8px',\n                        }}\n                        name='avatar'\n                        listType='picture-card'\n                        className='avatar-uploader'\n                        showUploadList={false}\n                        beforeUpload={beforeThumbnailUpload}\n                        multiple={false}\n                      >\n                        {thumbnailImageUrl ? (\n                          <img\n                            src={thumbnailImageUrl}\n                            alt='avatar'\n                            style={{ width: '100%' }}\n                          />\n                        ) : (\n                            uploadButton\n                          )}\n                      </Upload>\n\n\n\n\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__image'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Image</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          'Click on the image to select cover image, By default 1st image is selected as cover'\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n\n                    <div\n                      style={{\n                        padding: '10px',\n                      }}\n                      className='aboutToUploadImagesContainer'\n                    >\n                      {categoryDetailState.isLoading && (\n                        <div\n                          style={{\n                            padding: '20px 0',\n                          }}\n                        >\n                          <Spin />\n                        </div>\n                      )}\n                      {categoryDetailState.done && (\n                        <>\n                          {myImages &&\n                            // @ts-ignore\n                            myImages.length > 0 &&\n                            myImages.map((image, index) => {\n                              return (\n                                <div className='aboutToUploadImagesContainer__item'>\n                                  <div\n                                    className='aboutToUploadImagesContainer__item-imgContainer'\n                                    onClick={() => {\n                                      setCoverImageId(image.id);\n                                      handleSetImageAsThumnail(image);\n                                    }}\n                                  >\n                                    <img src={image.cover} alt={image.alt} />\n                                  </div>\n\n                                  <span\n                                    onClick={() => {\n                                      handleImagesDelete(image.id);\n                                      handleDetachSingleImage(image.id);\n                                    }}\n                                    className='aboutToUploadImagesContainer__item-remove'\n                                  >\n                                    <CloseOutlined />\n                                  </span>\n\n                                  {coverImageId === image.id ? (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  ) : (\n                                      !coverImageId &&\n                                      index === 0 && (\n                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                          <CheckOutlined />\n                                        </span>\n                                      )\n                                    )}\n                                </div>\n                              );\n                            })}\n\n                          <Tooltip title={'Attach images'}>\n                            <div\n                              onClick={() => {\n                                setvisible(true);\n                                setisModalOpenForImages(true);\n                                setisModalOpenForThumbnail(false);\n                              }}\n                              className='aboutToUploadImagesContainer__uploadItem'\n                            >\n                              {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                              <FileImageFilled />\n                              {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                <PlusOutlined />\n                              </span>\n                            </div>\n                          </Tooltip>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__right'>\n                  <div className='addProductGridContainer__category'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Meta Tags</h3>\n\n                        <Tooltip\n                          placement='left'\n                          title={\n                            \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                          }\n                        >\n                          <a href='###'>\n                            <InfoCircleOutlined />\n                          </a>\n                        </Tooltip>\n\n                        {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Input\n                          label='Meta title'\n                          value={values.metaTitle}\n                          placeHolder={'...'}\n                          name='metaTitle'\n                          isError={\n                            (touched.metaTitle && errors.metaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaTitle'])\n                          }\n                          errorString={\n                            (touched.metaTitle && errors.metaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaTitle'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('metaTitle');\n                          }}\n                        />\n\n                        <Input\n                          label='BN Meta title'\n                          value={values.bnMetaTitle}\n                          placeHolder={'...'}\n                          name='bnMetaTitle'\n                          isError={\n                            (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['bnMetaTitle'])\n                          }\n                          errorString={\n                            (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['bnMetaTitle'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('bnMetaTitle');\n                          }}\n                        />\n\n                        <TextArea\n                          label='Meta description'\n                          value={values.metaDescription}\n                          placeholder={'meta...'}\n                          name='metaDescription'\n                          isError={\n                            (touched.metaDescription && errors.metaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaDescription'])\n                          }\n                          errorString={\n                            (touched.metaDescription && errors.metaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error']['metaDescription'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('metaDescription');\n                          }}\n                        />\n\n                        <TextArea\n                          label='BN Meta Description'\n                          value={values.bnMetaDescription}\n                          placeholder={'এইয় মেট...'}\n                          name='bnMetaDescription'\n                          isError={\n                            (touched.bnMetaDescription &&\n                              errors.bnMetaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error'][\n                              'bnMetaDescription'\n                              ])\n                          }\n                          errorString={\n                            (touched.bnMetaDescription &&\n                              errors.bnMetaDescription) ||\n                            (!isSubmitting &&\n                              addCategoryState.error['error'][\n                              'bnMetaDescription'\n                              ])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('bnMetaDescription');\n                          }}\n                        />\n\n                        <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                        <MetaTags\n                          // @ts-ignore\n                          setTags={setTags}\n                          tags={tags}\n                        />\n\n                        <div\n                          style={{\n                            marginTop: '15px',\n                          }}\n                        ></div>\n\n                        <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                        <MetaTags\n                          // @ts-ignore\n                          setTags={setBnTags}\n                          tags={bnTags}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <div\n                style={{\n                  padding: '15px',\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <Button\n                  style={{\n                    color: '#555',\n                    marginRight: '10px',\n                  }}\n                  className='btnPrimaryClassNameoutline-cancle'\n                  onClick={() => setAddNewCategoryVisible(false)}\n                  type='default'\n                >\n                  Cancel\n              </Button>\n\n                <Button\n                  className='btnPrimaryClassNameoutline'\n                  onClick={handleSubmit}\n                  loading={addCategoryState.isLoading}\n                  type='link'\n                  icon={<CheckOutlined />}\n                >\n                  Update\n              </Button>\n              </div>\n\n              <MediaLibrary\n                setvisible={setvisible}\n                visible={visible}\n                setmyImages={setmyImages}\n                myImages={myImages}\n                setmyThumbnailImage={setmyThumbnailImage}\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\n                isModalOpenForImages={isModalOpenForImages}\n              />\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewCategory = ({\n  setAddNewCategoryVisible,\n  addNewCategoryVisible,\n  categoryList,\n  categoryDetailData,\n  setcategoryDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <Modal\n      destroyOnClose={true}\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Edit Category'\n      visible={addNewCategoryVisible}\n      onCancel={handleCancel}\n      footer={false}\n      okText='Update'\n      width={'70vw'}\n      okButtonProps={{\n        // loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        categoryList={categoryList}\n        categoryDetailData={categoryDetailData}\n        setcategoryDetailData={setcategoryDetailData}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewCategory;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { EditOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Button,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport CategoryEdit from './CategoryEdit';\nimport CategoryNewEdit from './CategoryNewEdit';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\n    {},\n    'categoryDetail'\n  );\n  const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch(\n    {},\n    'categoryProducts'\n  );\n\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'categoryList'\n  );\n  const [categoryList, setcategoryList] = useState([]);\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categories = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 5000000,\n          },\n        },\n      });\n      // @ts-ignore\n      setcategoryList(categories);\n    };\n    setCategories();\n  }, []);\n\n  const params = useParams();\n  const history = useHistory();\n  const categoryId = params['id'];\n  const [categoryEditVisible, setCategoryEditVisible] = useState(false);\n  const [categoryDetail, setcategoryDetail] = useState({});\n\n  useEffect(() => {\n    const getCategoryDetail = async () => {\n      const categoryDetailDataRes = await handleCategoryDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (categoryDetailDataRes) {\n        // @ts-ignore\n        setcategoryDetail(categoryDetailDataRes);\n      }\n    };\n\n    getCategoryDetail();\n  }, [categoryId]);\n\n  useEffect(() => {\n    const getCategoryProducts = async () => {\n      await handleCategoryProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryId,\n          },\n        },\n      });\n    };\n\n    getCategoryProducts();\n  }, [categoryId]);\n\n  console.log('categoryProductsState', categoryProductsState);\n\n  console.log('brandParams', params);\n\n  const getImagesInCollumn = (imgs) => {\n    if (!imgs[0]) return false;\n    imgs = imgs.map((item) => item.cover);\n    const columns = {};\n\n    let localIndex = 0;\n    let columnNumber = 0;\n\n    imgs.forEach((item, index) => {\n      if (localIndex < 3) {\n        if (columns[columnNumber]) {\n          columns[columnNumber] = [...columns[columnNumber], item];\n        } else columns[columnNumber] = [item];\n\n        localIndex = localIndex + 1;\n        columnNumber = columnNumber + 1;\n      } else {\n        localIndex = 0;\n        columnNumber = 0;\n        console.log('localIndex', localIndex);\n      }\n    });\n\n    return columns;\n  };\n\n  const row =\n    categoryDetailState.done && categoryDetail && categoryDetail['image']\n      ? getImagesInCollumn(categoryDetail['image'])\n      : [];\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Category Detail</h3>\n\n        {categoryDetailState.done &&\n          categoryDetail &&\n          Object.keys(categoryDetail).length > 0 && (\n            <>\n              <CategoryNewEdit\n                addNewCategoryVisible={categoryEditVisible}\n                setAddNewCategoryVisible={setCategoryEditVisible}\n                categoryDetailData={categoryDetail}\n                setcategoryDetailData={setcategoryDetail}\n                categoryList={categoryList}\n              />\n\n              {isAccess('postCatalogue', roles) && (\n                <Button\n                  onClick={() => setCategoryEditVisible(true)}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={categoryDetailState.isLoading}\n      >\n        {categoryDetailState.done &&\n          categoryDetail &&\n          !(Object.keys(categoryDetail).length > 0) && (\n            <Empty\n              description='No Category found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {categoryDetailState.done &&\n          categoryDetail &&\n          Object.keys(categoryDetail).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\n                  <img\n                    src={\n                      categoryDetail['cover'] &&\n                      categoryDetail['cover']['cover']\n                    }\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{categoryDetail['name']}</h2>\n                  <h3>{categoryDetail['description']}</h3>\n                  <h3>\n                    Category type: <span>{categoryDetail['type']}</span>\n                  </h3>\n\n                  {categoryDetail['url'] && (\n                    <h3>\n                      URL:\n                      <span>{categoryDetail['url']}</span>\n                    </h3>\n                  )}\n                </div>\n              </div>\n\n              {categoryDetail['icon'] && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Icon</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__inlineBox'>\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                      <img\n                        src={categoryDetail['icon'] && categoryDetail['icon']}\n                        alt=''\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n\n          {categoryDetail['thumbnail'] && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Thumbnail</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__inlineBox'>\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-thumbnail'>\n                      <img\n                        src={categoryDetail['thumbnail'] && categoryDetail['thumbnail']}\n                        alt=''\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n\n\n              {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Image Gallary</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__imageGallary'>\n                    <div className='imgGallaryContainer'>\n                      <div className='imgGallary-row'>\n                        {row &&\n                          Object.keys(row).map((column) => {\n                            return (\n                              <div className='imgGallary-column'>\n                                {row[column] &&\n                                  row[column].map((img) => {\n                                    return (\n                                      <img\n                                        alt='..'\n                                        src={img}\n                                        style={{\n                                          width: '100%',\n                                        }}\n                                      />\n                                    );\n                                  })}\n                              </div>\n                            );\n                          })}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n              {categoryDetail['subCategory'] &&\n                categoryDetail['subCategory'].length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Child Categories</h3>\n                    </div>\n\n                    <div className='smallcatCardContainer'>\n                      {categoryDetail['subCategory'].map((subCat) => {\n                        return (\n                          <div\n                            onClick={() =>\n                              history.push(`/admin/category/${subCat.id}`)\n                            }\n                            className='smallcatCardContainer__card'\n                          >\n                            <div className='smallcatCardContainer__card-coverbox'>\n                              <img src={subCat.cover} alt='' />\n                            </div>\n                            <div className='smallcatCardContainer__card-info'>\n                              <h3>{subCat.name}</h3>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n            </>\n          )}\n      </Skeleton>\n\n      <div className='brandDetailContainer__heading'>\n        <h3>Products</h3>\n      </div>\n      <div className='brandDetailContainer__body'>\n        {categoryProductsState.isLoading && <DataTableSkeleton />}\n        {categoryProductsState.done &&\n          !(categoryProductsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '100px',\n              }}\n            >\n              <Empty\n                description='No Products exists in this category'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {categoryProductsState.done &&\n          categoryProductsState.data &&\n          categoryProductsState.data.length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                size='small'\n                dataSource={categoryProductsState.data}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title=''\n                  dataIndex='cover'\n                  key='id'\n                  width={'80px'}\n                  className='classnameofthecolumn'\n                  render={(cover, record: any) => (\n                    <>\n                      <img\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                          // go to product detail\n                        }}\n                        src={cover}\n                        alt='cover img'\n                        style={{\n                          height: '40px',\n                          width: '40px',\n                          objectFit: 'contain',\n                          borderRadius: '3px',\n                          cursor: 'pointer',\n                        }}\n                      />\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Offer Price'\n                  dataIndex='offerPrice'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Price'\n                  dataIndex='price'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Available'\n                  dataIndex='available'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Minimum'\n                  dataIndex='minimum'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React from 'react';\nimport { Form, Input } from 'antd';\n\ninterface Props {\n  label?: string;\n  type?: string;\n  defaultValue?: string;\n  value?: string;\n  onChange?: any;\n  disabled?: boolean;\n  isError?: boolean;\n  errorString?: string;\n  name?: string;\n  size?: any;\n  min?: any;\n}\n\nconst Demo = ({\n  min,\n  label,\n  type,\n  defaultValue,\n  value,\n  onChange,\n  disabled,\n  isError,\n  errorString,\n  name,\n  size = 'middle',\n}: Props) => {\n  return (\n    <>\n      {label && <h3 className='inputFieldLabel-small'>{label}</h3>}\n\n      <Form.Item\n        validateStatus={isError ? 'error' : ''}\n        // hasFeedback validateStatus=\"success\"\n        help={errorString}\n        // rules={[{ required: true }]}\n      >\n        <Input\n          onKeyDown={(event) => {\n            if (type === 'number') {\n              if (event.key === 'e' || event.key === '-') {\n                event.preventDefault();\n              }\n            }\n          }}\n          min={min}\n          type={type}\n          size={size}\n          allowClear\n          name={name}\n          disabled={disabled}\n          value={value}\n          onChange={onChange}\n          className='inputclassName-small'\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Demo;\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport {\n    CheckCircleOutlined,\n    ExclamationCircleOutlined\n} from '@ant-design/icons';\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Succeed',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nexport {\n    openSuccessNotification,\n    openErrorNotification\n}","import React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { Button, Tag, Input, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { CheckableTag } = Tag;\nconst { Search } = Input;\n\ninterface Props {\n  setTagIds?: any;\n  selectedTags?: any;\n  setSelectedTags?: any;\n}\n\nconst Tags = ({ setTagIds, setSelectedTags, selectedTags }: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedOpions, setselectedOptions] = useState([]);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\n  const [searchValue, setsearchValue] = useState('');\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked\n      ? [...selectedTags, tag]\n      : selectedTags.filter((t) => t !== tag);\n    setSelectedTags(nextSelectedTags);\n\n    if (\n      tagState.done &&\n      tagState.data.length > 0 &&\n      nextSelectedTags.length > 0\n    ) {\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\n        );\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n      setTagIds(selectedCategoryIds);\n    }\n  };\n\n  useEffect(() => {\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\n      const selectedCategoryName = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find((cat) => cat.name === item);\n        if (selectedcategory) {\n          return selectedcategory.name;\n        }\n      });\n\n      const selectedCategoryIds = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find((cat) => cat.name === item);\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n\n      setSelectedTags(selectedCategoryName);\n      // setTagIds(selectedCategoryIds);\n    }\n  }, [tagState]);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tagListRes = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: false,\n          },\n        },\n      });\n\n      // @ts-ignoref\n      if (tagListRes && tagListRes.length > 0) {\n        // @ts-ignore\n        const tagOptions = tagListRes.map((tag) => {\n          return tag.name;\n        });\n        setoptions(tagOptions);\n      }\n    };\n\n    setTags();\n  }, []);\n\n  // const handleChange = (selectItems) => {\n  //   setselectedOptions(selectItems)\n\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n  //     const selectedCategoryIds = selectItems.map((item) => {\n  //       const selectedcategory = tagState.data.find(\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\n  //       );\n  //       if (selectedcategory) {\n  //         return selectedcategory.id;\n  //       }\n  //     });\n  //     setTagIds(selectedCategoryIds);\n  //   }\n\n  // }\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (tagState.data && tagState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = tagState.data.map((cat) => cat.name);\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n              return option.toLowerCase().includes(searchValue.toLowerCase());\n            })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('selectedTags', selectedTags);\n\n  return (\n    <>\n      {tagState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {tagState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'90%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder='top, hot'\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {tagState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No Tags found' height={100} />\n        </div>\n      )}\n\n      {/* \n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\n        mode=\"multiple\"\n        placeholder=\"search tags\"\n        value={selectedOpions}\n        onChange={handleChange}\n        style={{ width: '100%' }}\n      >\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\n          <Select.Option key={item} value={item}>\n            {item}\n          </Select.Option>\n        ))}\n      </Select>} */}\n\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\n        <>\n          {options.map((tag) => (\n            <>\n              <CheckableTag\n                key={tag}\n                checked={selectedTags.indexOf(tag) > -1}\n                onChange={(checked) => handleChange(tag, checked)}\n              >\n                {tag}\n              </CheckableTag>\n            </>\n          ))}\n        </>\n      )}\n\n      {/* \n      <div style={{\n        marginTop: '15px'\n      }}>\n\n      </div>\n      <Button\n\n        // type=\"primary\"\n        className='btnSecondaryPlusOutline'\n        icon={<PlusOutlined />}\n      >\n        Add New\n      </Button> */}\n    </>\n  );\n};\n\nexport default Tags;\n","import React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { Select, Button, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\ninterface Props {\n  setBrandId?: any;\n  brandId?: any;\n  productDetailState?: any;\n}\n\nconst { Option } = Select;\n\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedBrandId, setSelectedBrandId] = useState('');\n  const [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\n\n  function onChange(value) {\n    setSelectedBrandId(value);\n    setBrandId(value);\n    // console.log(`selected ${value}`);\n  }\n\n  function onBlur() {\n    // console.log('blur');\n  }\n\n  function onFocus() {\n    // console.log('focus');\n  }\n\n  function onSearch(val) {\n    // console.log('search:', val);\n  }\n\n  useEffect(() => {\n    const setBrands = async () => {\n      const brandListRes = await handleTagListFetch({});\n\n      // @ts-ignore\n      if (brandListRes && brandListRes.length > 0) {\n        // @ts-ignore\n        const brandOptions = brandListRes.map((brand) => {\n          return {\n            value: brand.id,\n            name: brand.name,\n          };\n        });\n        setoptions(brandOptions);\n      }\n    };\n\n    setBrands();\n  }, []);\n\n  return (\n    <>\n      <div></div>\n\n      {brandState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {brandState.done && !(brandState.data.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No Brand found' height={100} />\n        </div>\n      )}\n\n      {brandState.done &&\n        brandState.data &&\n        brandState.data.length > 0 &&\n        options.length > 0 && (\n          <Select\n            showSearch\n            style={{ width: '210px', borderRadius: '6px' }}\n            placeholder='Select a Brand'\n            optionFilterProp='children'\n            onChange={onChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            onSearch={onSearch}\n            value={brandId}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {brandState.done &&\n              brandState.data.length > 0 &&\n              options.map((option) => {\n                return <Option value={option.value}>{option.name}</Option>;\n              })}\n          </Select>\n        )}\n\n      {/* \n\t\t\t<div style={{\n\t\t\t\tmarginTop: '15px'\n\t\t\t}}>\n\n\t\t\t</div>\n\t\t\t<Button\n\n\t\t\t\t// type=\"primary\"\n\t\t\t\tclassName='btnSecondaryPlusOutline'\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t>\n\t\t\t\tAdd New\n      </Button> */}\n    </>\n  );\n};\n\nexport default Brands;\n","import React, { useState, useEffect } from 'react';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Input, Tree, Button, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Search } = Input;\n\ninterface Props {\n  setcategoryIds?: any;\n  categoryOptions?: any;\n  setCategoryOptions?: any;\n}\n\nconst Categories = ({\n  setcategoryIds,\n  categoryOptions,\n  setCategoryOptions,\n}: Props) => {\n  const [options, setoptions] = useState([]);\n  const [searchValue, setsearchValue] = useState('');\n\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'categorySelectist'\n  );\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categoryListRes = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 5000000,\n          }\n        }\n      });\n\n      // @ts-ignore\n      if (categoryListRes && categoryListRes.length > 0) {\n        // @ts-ignore\n        setoptions(categoryListRes);\n      }\n    };\n\n    setCategories();\n  }, []);\n\n  const onSelect = (selectedKeys, info) => {\n    // console.log('selectedKeys', selectedKeys, info);\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    const checkedIds = checkedKeys.checked || [];\n    setcategoryIds(checkedIds);\n    setCategoryOptions(checkedIds);\n  };\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (categoryState.data && categoryState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = categoryState.data.map((cat) => {\n          return {\n            ...cat,\n          };\n        });\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n            return (\n              option &&\n              option.title.toLowerCase().includes(searchValue.toLowerCase())\n            );\n          })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('categoryState', categoryState);\n  console.log('optionsCat', options);\n\n  return (\n    <div className='addProduct__categoryBoxContainer'>\n      {categoryState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {categoryState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'100%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder=''\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {categoryState.done &&\n        categoryState.data.length > 0 &&\n        options.length > 0 && (\n          <>\n            <div\n              style={\n                {\n                  overflow: 'auto',\n                  maxHeight: '300px'\n\n                }\n              }\n            >\n              {options.length > 0 && (\n                <Tree\n                  checkable\n                  checkedKeys={categoryOptions}\n                  onSelect={onSelect}\n                  onCheck={onCheck}\n                  treeData={options}\n                  defaultExpandAll={true}\n                  checkStrictly={true}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n      {categoryState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No category found' height={100} />\n        </div>\n      )}\n\n      {/* <div style={{\n\t\t\t\tmarginTop: '15px'\n\t\t\t}}>\n\n\t\t\t</div>\n\t\t\t<Button\n\n\t\t\t\t// type=\"primary\"\n\t\t\t\tclassName='btnSecondaryPlusOutline'\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t>\n\t\t\t\tAdd New\n      </Button> */}\n\n      {/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState, useEffect } from 'react';\n\n// import hooks \nimport { useHandleFetch } from '../../hooks';\n\n\n// import libraries \nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nimport {\n    CheckCircleOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\nimport DatePicker from \"../../components/Field/DatePicker\";\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Tags from \"../product/Tags\";\nimport Brands from \"../product/Brands\";\nimport Categories from \"../product/Categories\";\nimport Pricing from \"../product/Pricing\";\nimport SelectProducts from \"./SelectProducts\";\nimport SelectedProductItems from \"./SelectedProductItems\";\nimport MetaTags from \"../category/MetaTags\";\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: \"\",\n    bundlePrice: null,\n    startDate: \"\",\n    endDate: \"\",\n    description: '',\n    bnName: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible: any;\n    setAddNewCategoryVisible: any;\n    productList?: any;\n    setProductList?: any;\n    productDetailData?:any; \n}\n\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList, productDetailData }: Props) => {\n\n  \n\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\n    const [productList,setProductList] = useState([]);\n    const [visible, setvisible] = useState(false);\n    const [myImages, setmyImages] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n    const [categoryids, setcategoryIds] = useState([]);\n    const [tagIds, setTagIds] = useState([]);\n    const [brandId, setBrandId] = useState('');\n    const [pricing, setPricing] = useState([]);\n    const [coverImageId, setCoverImageId] = useState('');\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [date, setDateFeild] = useState('');\n    const [time, setTimeFeild] = useState('');\n    const [description, setDescription] = useState('');\n\tconst [bnDescription, setBNDescription] = useState('');\n\tconst [metaTags,setMetaTags] = useState([]);\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \n\n    const [productIds,setProductIds] = useState([]); \n\n\n\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\n\n    useEffect(() => {\n        const getProductDetail = async () => {\n            await handleProductDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productDetailData.id\n                    }\n                }\n            })\n        };\n\n        getProductDetail();\n\n    }, [productDetailData]);\n\n\n    const [price, setPrice] = useState({\n        regular: null,\n        offer: null,\n    });\n\n\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // @ts-ignore\n        const imagesIds = myImages ? myImages.map(image => {\n            return image.id;\n        }) : [];\n\n        console.log('productList',productList);\n\n        const products = productList.length > 0 ? productList.map(product => {\n            return {\n                _id: product._id,\n                variation: product.variation,\n                quantity: product.quantity,\n            }\n        }) : [];\n\n    \n            if (productDetailData && Object.keys(productDetailData).length > 0) {\n                const aboutToUpdatedImageIds = []; \n    \n                if(imagesIds && imagesIds.length > 0){\n                    imagesIds.forEach(imageId => {\n                        if(productDetailData && productDetailData['image']){\n                            if(!productDetailData['image'].includes(imageId)){\n                                aboutToUpdatedImageIds.push(imageId)\n                            }\n                        }\n                    });\n                }\n    \n          \n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                    await handleAttachImageToItemMultipleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        },\n                        body: {\n                            image: aboutToUpdatedImageIds\n                        }\n                    });\n                }\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                    await handleAttachImageToItemSingleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                imageId: aboutToUpdatedImageIds[0].id,\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        }\n                    });\n                }\n            }\n        \n            \n\n\n\n        const addProductRes = await handleAddProductFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: productDetailData.id\n                }\n            },\n            body: {\n                name: values.name.trim(),\n                category: categoryids,\n                tags: tagIds,\n                brand: brandId,\n                price: price,\n                description: description,\n                model: values.model,\n                unit: values.unit,\n                image: imagesIds,\n                products,\n\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tmetaTags: metaTags.join(','),\n\n\t\t\t\t\n\t\t\t\tbn: {\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\n\t\t\t\t\tname: values.bnName.trim(),\n\t\t\t\t\tunit: values.metaUnit,\n\t\t\t\t\tdescription: values.bnDescription,\n                }\n                \n\n                // startDate, endDate,\n            }\n        });\n\n\n        // @ts-ignore\n        if (addProductRes && addProductRes.status === 'ok') {\n            openSuccessNotification('Bundle Updated');\n  \n\n            setAddNewCategoryVisible(false)\n\n\n            const positionInAttribute = () => {\n\t\t\t\treturn bundleList.map(item => item.id).indexOf(productDetailData.id);\n\t\t\t}\n\n\t\t\tconst index = positionInAttribute();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, bundleList[index], { ...productDetailData, ...addProductRes });\n\t\t\tconst updateProductList = [...bundleList.slice(0, index), updatedItem, ...bundleList.slice(index + 1)];\n            setBundleList(updateProductList);\n            \n\n\n\n\n            // @ts-ignore\n            setmyImages([]);\n            setCoverImageId('');\n            setPricing([]);\n            setTagIds([]);\n            setSelectedTags([]);\n            setBrandId(\"\");\n            setcategoryIds([]);\n            setCategoryOptions([]);\n            actions.resetForm();\n        }\n        else {\n            // openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n\n    };\n\n\n\n\n\n    useEffect(() => {\n        if (!addProductState['isLoading']) {\n            const error = addProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [addProductState])\n\n\n\n    useEffect(()=>{\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\n            const productIds = productDetailState['data']['products'].map(item => {\n              return {\n                ...item,\n                id: item._id,\n              }\n            }); \n            setProductIds(productIds); \n            const productList = productDetailState['data'].products.map(item => {\n                return {\n                    _id: item._id,\n                    variation: item.variation,\n                    quantity: item.quantity,\n                    totalPrice: item.totalPrice \n                }\n            }); \n           setProductList(productList); \n\n        }; \n        \n        console.log(\"productDetailState['data']\",productDetailState['data']);\n    },[productDetailState['done']])\n\n\n\n\n\n    useEffect(() => {\n\n        if (productIds && productIds.length > 0 && productList) {\n            if (productIds.length > productList.length) {\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\n                console.log('variation', variation)\n\n                setProductList([...productList, {\n                    ...productIds[productIds.length - 1],\n                    _id: productIds[productIds.length - 1]['id'],\n                    variation: variation,\n                    quantity: 1\n                }]);\n            }\n\n\n            else if (productIds.length < productList.length) {\n                console.log('productIds', productIds);\n                console.log('productList', productList);\n\n                const newProductList = productList.filter(item => {\n                    let isTrue = false;\n                    productIds.forEach(product => {\n                        if (product.id === item._id) {\n                            isTrue = true;\n                        }\n                    });\n                    return isTrue;\n                })\n                setProductList(newProductList);\n            }\n\n        }\n        else {\n            setProductList([]);\n        }\n        // console.log('productIds', productIds)\n\n    }, [productIds])\n\n\n\n\n\n\n\n    useEffect(() => {\n\n        if (productDetailData && productDetailData.brand) {\n            setBrandId(productDetailData.brand['id']);\n        }\n        else {\n            setBrandId('');\n        }\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\n            // const tagIds = productDetailData.tags.map(item => item.id);\n            setSelectedTags(productDetailData.tags);\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\n            // const categoryIds = productDetailData.category.map(item => item.id);\n\n            const categoryIds = productDetailData.category;\n            setCategoryOptions(categoryIds);\n            setcategoryIds(categoryIds); \n        }\n        else {\n            setCategoryOptions([]);\n        }\n\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\n            setPrice(productDetailData.anotherPrice); \n        }\n        else {\n            setPricing([]);\n\n        }\n\n\n        if (productDetailData && productDetailData.date && productDetailData.date) {\n            setDateFeild(productDetailData.date)\n        }\n        else {\n            setDateFeild('');\n\n        }\n\n        if (productDetailData && productDetailData.time && productDetailData.time) {\n            setTimeFeild(productDetailData.time);\n        }\n        else {\n            setTimeFeild('');\n        }\n\n\n\n    }, [productDetailData]);\n\n\n\n    useEffect(() => {\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n\n            const images = productDetailState.data.image;\n            if (images && images.length > 0) {\n                setmyImages(images);\n            }\n\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\n                // @ts-ignore\n                setmyImages([productDetailState.data.cover, ...images]);\n                console.log('catcat', [productDetailState.data.cover, ...images]);\n                setCoverImageId(productDetailState.data.cover['id']);\n            }\n        }\n    }, [productDetailState])\n\n\n    useEffect(() => {\n        console.log('thumnail', myImages);\n        // @ts-ignore\n        if (myImages && myImages[0] && myImages.length < 2) {\n            console.log('thumnail2', myImages);\n\n            if (coverImageId !== myImages[0].id) {\n                setCoverImageId(myImages[0].id);\n                handleSetImageAsThumnail(myImages[0]);\n            }\n\n        }\n\n    }, [myImages])\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n\n        console.log('thumbnailRes', thumbnailRes);\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\n\n            // if (prevItem) {\n            //     console.log('prevItem--', prevItem, 'image--', image);\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            //     setProductList(updateProductList);\n\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n\n    useEffect(() => {\n        if (!updateProductState['isLoading']) {\n            const error = updateProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [updateProductState])\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n    const handleDeleteFromSelectedImage = () => {\n\n    };\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        else setmyThumbnailImage(false);\n    }\n\n\n\n\n\n    useEffect(()=>{\n\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\n            const metaTags = productDetailState.data.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \n            setMetaTags(metaTags)\n            setBnMetaTags(bnMetaTags)\n        }\n\n    },[productDetailState['done']])\n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues,\n                    ...{\n                    ...productDetailData,\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\n                        bnName: productDetailState['data']['bn'].name,\n                        metaUnit: productDetailState['data']['bn'].unit,\n                        bnDescription: productDetailState['data']['bn'].description,\n                      }),\n                } }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px',\n\n                            }}\n                            bodyStyle={{\n                                margin: 0,\n                                padding: 0,\n                            }}\n                            width={'70vw'}\n                            title=\"Add New Bundle\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                            }}\n                        >\n\n\n                            <section className='addProductGridContainer'>\n                                <div className='addProductGridContainer__left'>\n                                    <div className='addProductGridContainer__name'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Bundle Information *\n\t\t\t                                </h3>\n\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                        <Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n                                    \n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n                                            {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                                            <div style={{\n                                                marginBottom: '15px'\n                                            }}></div>\n                                            {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\n                                                <h4>\n                                                    Price *\n\t\t\t                                \t</h4>\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                                                        <InputSmall\n                                                            label='Regular'\n                                                            value={price.regular}\n                                                            name='regular'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                regular: e.target.value\n                                                            })}\n                                                        />\n\n\n                                                    </div>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n\n                                                        <InputSmall\n                                                            label='Offer'\n                                                            value={price.offer}\n                                                            name='offer'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                offer: e.target.value\n                                                            })}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                            {/* <div style={{\n                                                display: 'flex',\n                                                justifyContent: 'space-between'\n                                            }}>\n                                                <div style={{\n                                                    width: '48%',\n                                                }}>\n                                                    <DatePicker\n                                                        date={startDate}\n                                                        label='Start Date'\n                                                        onChange={handleStartDataChange} />\n\n                                                </div>\n                                                <div style={{\n                                                    width: '48%'\n                                                }}>\n\n                                                    <DatePicker\n                                                        date={endDate}\n                                                        label='End Date'\n                                                        onChange={handleEndDataChange} />\n\n                                                </div>\n                                            </div> */}\n\n\n                                        </div>\n\n\n\n                                    </div>\n\n                                    {/* <div className='addProductGridContainer__price'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Products\n\t\t                                    </h3>\n\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n\n\n                                        <div className='addProductGridContainer__item-body'>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Products\n                                            </h3>\n                                            <SelectProducts\n                                                setProductIds={setProductIds}\n                                                productIds={productIds}\n                                            />\n\n                                            <div style={{\n                                                marginTop: \"15px\"\n                                            }}></div>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Selcted Products\n                                            </h3>\n\n                                            <SelectedProductItems\n                                                productList={productList}\n                                                setProductList={setProductList}\n                                            />\n                                        </div>\n                                    </div> */}\n\n\n                                    <div className='addProductGridContainer__image'>\n\n                                <div className='addProductGridContainer__item-header'>\n                                    <h3>\n                                        Image\n                                </h3>\n\n                                    <Tooltip\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n                                        <a href='###'>\n                                            <InfoCircleOutlined />\n                                        </a>\n                                    </Tooltip>\n</div>\n\n<div\n    style={{\n        padding: \"10px\"\n    }}\n    className='aboutToUploadImagesContainer'>\n    {productDetailState.isLoading && (\n        <div style={{\n            padding: '20px 0'\n        }}>\n            <Spin />\n        </div>\n    )}\n    {productDetailState.done && (\n        <>\n            {myImages &&\n                // @ts-ignore\n                myImages.length > 0 && myImages.map((image, index) => {\n                    return (\n                        <div className='aboutToUploadImagesContainer__item'>\n                            <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                }}\n                            >\n                                <img src={image.cover} alt={image.alt} />\n                            </div>\n\n                            <span\n                                onClick={() => {\n                                    handleImagesDelete(image.id)\n                                    handleDetachSingleImage(image.id)\n                                }\n\n                                }\n                                className='aboutToUploadImagesContainer__item-remove'>\n                                <CloseOutlined />\n                            </span>\n\n\n                            {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            ) : !coverImageId && index === 0 && (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            )}\n\n\n                        </div>\n                    )\n                })}\n\n\n            <Tooltip\n                title={'Attach images'}>\n\n                <div\n                    onClick={() => {\n                        setvisible(true);\n                        setisModalOpenForImages(true);\n                        setisModalOpenForThumbnail(false);\n                    }}\n                    className='aboutToUploadImagesContainer__uploadItem'>\n                    {/* <FileAddOutlined />\n            <FileImageTwoTone />\n            <FileImageOutlined /> */}\n                    <FileImageFilled />\n                    {/* <h5>\n             Select From Library\n    <     /h5> */}\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                    </span>\n                </div>\n            </Tooltip>\n        </>\n    )}\n\n</div>\n</div>\n\n\n<div className='addProductGridContainer__image'>\n\n<div className='addProductGridContainer__item-header'>\n    <h3>\n    Meta Data\n</h3>\n\n    <Tooltip\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\n        <a href='###'>\n            <InfoCircleOutlined />\n        </a>\n    </Tooltip>\n</div>\n<div className='addProductGridContainer__item-body'>\n\n                \n<Input\nlabel='Meta title'\nvalue={values.metaTitle}\nplaceHolder={'category...'}\nname='metaTitle'\nisError={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\n\nerrorString={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaTitle')\n}}\n/>\n\n<Input\nlabel='BN Meta title'\nvalue={values.bnMetaTitle}\nplaceHolder={'ক্যাটাগড়ি...'}\nname='bnMetaTitle'\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\n\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaTitle');\n}}\n/>\n\n<TextArea\nlabel='Meta description'\nvalue={values.metaDescription}\nplaceholder={'meta...'}\nname='metaDescription'\nisError={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\n\nerrorString={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaDescription');\n}}\n/>\n\n<TextArea\nlabel='BN Meta Description'\nvalue={values.bnMetaDescription}\nplaceholder={'এইয় মেট...'}\nname='bnMetaDescription'\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\n\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaDescription');\n}}\n/>\n\n<h3 className='inputFieldLabel'>\nMeta Tags (grocery,fashion)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setMetaTags}\ntags={metaTags}\n/>\n\n<div style={{\nmarginTop:'15px'\n}}></div>\n\n<h3 className='inputFieldLabel'>\nBN Meta Tags (মুদিখানা,ফ্যাশন)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setBnMetaTags}\ntags={bnMetaTags}\n/>\n</div>\n</div>\n\n\n\n\n\n\n                                </div>\n                                <div className='addProductGridContainer__right'>\n                                    <div className='addProductGridContainer__category'>\n\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Categories *\n\t\t\t                                \t</h3>\n\n                                                <Tooltip\n                                                    color='red'\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\n                                                    placement=\"left\" title={'Select at least one category'}>\n                                                    <div className={!(categoryids.length > 0)\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\n                                                        <CheckCircleOutlined />\n                                                    </div>\n                                                </Tooltip>\n\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Categories\n                                                    setCategoryOptions={setCategoryOptions}\n                                                    categoryOptions={categoryOptions}\n                                                    setcategoryIds={setcategoryIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__tag'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Tags\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Tags\n                                                    setSelectedTags={setSelectedTags}\n                                                    selectedTags={selectedTags}\n                                                    setTagIds={setTagIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className='addProductGridContainer__brand'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Brand\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Brands setBrandId={setBrandId} />\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </section>\n\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisible}\n                            visible={visible}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            setmyThumbnailImage={setmyThumbnailImage}\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\n                            isModalOpenForImages={isModalOpenForImages}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewProduct;\n\n\n\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*///","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\n    const [isProductIdsfirstTime,setProductIdsfirstTime] = useState(false); \n\n    useEffect(() => {\n        const setTags = async () => {\n            const tagListRes = await handleTagListFetch({\n                urlOptions: {\n                    params: {\n                        sortItem: 'added',\n                        sortOrderValue: '-1'\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if (tagListRes && tagListRes.length > 0) {\n                // @ts-ignore\n                const tagOptions = tagListRes.map((tag) => {\n                    return tag.name\n                });\n                setoptions(tagOptions);\n            }\n\n        };\n\n        setTags();\n    }, []);\n\n\n\n    useEffect(()=>{\n\n        if(productIds && productIds.length > 0 && !isProductIdsfirstTime){\n            const selectItems = productIds.map((tag) => {\n                return tag.id\n            });\n\n            setselectedOptions(selectItems);\n            // setoptions(tagOptions);\n        }; \n\n    },[productIds])\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n        console.log('selectItems',selectItems); \n\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = tagState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n    }\n\n\n    return (\n        <>\n            <Skeleton loading={tagState.isLoading}>\n                {tagState.done && tagState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n            </Skeleton>\n        </>\n    )\n}\n\nexport default Tags\n","import React, { useState, useEffect } from 'react';\nimport { useHandleFetch } from '../../hooks';\n\n\n// import lib \n\n\n\n\ninterface Props {\n    setProductList?: any;\n    productList?: any;\n    productId?: any;\n    quantity?: any;\n    item?: any\n    variation?: any;\n}\n\nconst CartOverLayCartItem = ({\n    productList,\n    setProductList,\n    productId,\n    quantity,\n    item,\n    variation\n}: Props) => {\n\n\n    const [productDetailState, handleProductFetch] = useHandleFetch(\n        {},\n        'productDetailById'\n    );\n    const [product, setProduct] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [modifiedPrice, setModifiedPrice] = useState('');\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\n\n\n\n    console.log('productDetailStateByOrder',productDetailState); \n    \n    useEffect(() => {\n        setIsLoading(true);\n        const getAndSetProduct = async () => {\n            const product = await handleProductFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId,\n                    },\n                },\n            });\n\n            // @ts-ignore\n            setProduct(product);\n            setIsLoading(false);\n        };\n        getAndSetProduct()\n    }, []);\n\n\n\n    // useEffect(() => {\n    //     const positionInAttribute = () => {\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\n    //     }\n\n    //     const index = positionInAttribute();\n\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\n    //     setProductList(updateProductList);\n\n    // }, [attributeItem])\n\n\n    const handleAttributeDelete = () => {\n\n        const updateProductList = productList.filter(item => item._id !== productId);\n        setProductList(updateProductList);\n    }\n\n\n    const handleChangeQuantity = async (value) => {\n        if (value === 'minus') {\n            if (quantity === 1) {\n                return;\n            }\n\n            const positionInAttribute = () => {\n                return productList.map(item => item._id).indexOf(productId);\n            }\n\n            const index = positionInAttribute();\n\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            setProductList(updateAttributeList);\n\n\n        } else {\n            const positionInAttribute = () => {\n                return productList.map(item => item._id).indexOf(productId);\n            }\n\n            const index = positionInAttribute();\n\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            setProductList(updateAttributeList)\n\n        }\n    };\n\n\n    const convertAttributeValuesToStringValue = (attribute) => {\n        const value = [];\n\n        let attributeValues = Object.values(attribute);\n        attributeValues.forEach(attributeValue => {\n            // @ts-ignore\n            value.push(attributeValue)\n        })\n\n        return value.join(',');\n    };\n\n\n\n\n    const getPricingOptions = (pricing) => {\n        if (pricing && pricing.length > 0) {\n            const pricingOptions = [];\n\n            pricing.forEach(pricingItem => {\n\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\n                    let pricingOption = {\n                        value: pricingItem._id,\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\n                    }\n                    // @ts-ignore\n                    pricingOptions.push(pricingOption)\n                }\n\n            })\n\n            return pricingOptions;\n        }\n        else return false\n    };\n\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\n\n\n    console.log('pricingOptions', pricingOptions);\n\n    const handleAttributeChange = (tagId) => {\n        setSelectedVariationId(tagId);\n\n        const positionInAttribute = () => {\n            return productList.map(item => item._id).indexOf(productId);\n        }\n\n        const index = positionInAttribute();\n\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n        setProductList(updateAttributeList);\n\n    }\n\n\n    useEffect(() => {\n\n        const getPriceByVariationId = (id) => {\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\n            if (pricing) {\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\n                console.log('priceItem', id);\n\n                if (priceItem && priceItem.price.regular) {\n                    return priceItem.price.offer\n                        && parseInt(priceItem.price.offer)\n                        ? priceItem.price.offer : priceItem.price.regular\n                }\n                else return false;\n            }\n        }\n\n        if (selectedVariationId) {\n            const price = getPriceByVariationId(selectedVariationId);\n            setModifiedPrice(price);\n        }\n\n    }, [selectedVariationId]);\n\n\n\n    console.log('modifiedPrice', modifiedPrice);\n    return (\n        <>\n\n            {item && Object.keys(item).length > 0 && (\n                <div className='cart-item' key={''}>\n                    <div className='cart-item-quantityCounter'>\n                        <i\n                            onClick={() => {\n                                handleChangeQuantity('plus');\n                            }}\n                            className='fa fa-chevron-up'\n\n                        ></i>\n                        <p className='item-amount'>{quantity}</p>\n                        <i\n                            onClick={() => {\n                                handleChangeQuantity('minus');\n                            }}\n                            className='fa fa-chevron-down'\n\n                        ></i>\n                    </div>\n\n\n                    <img\n\n                        src={item['cover'] && item['cover']}\n                        alt='Img'\n                        style={{\n                            cursor: 'pointer',\n                        }}\n                    />\n                    <div className='cart-item-info'>\n                        <h4\n\n                        >\n                            {item['name']}\n                        </h4>\n                        <h5\n                        >\n                            {modifiedPrice || item['price']}\n                        </h5>\n\n\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\n                            <>\n                                <span\n                                    onClick={() => handleAttributeChange(tag.value)}\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\n                                    {tag.label}\n                                </span>\n                            </>\n                        ))}\n\n                        {/* <span\n             style={{\n               display: 'inline-block',\n               background: '#fafafa',\n               padding: '3px 3px',\n               borderRadius: 1,\n               fontSize: '12px',\n               marginRight: '5px',\n               color: '#777',\n               marginTop: '5px'\n             }}\n           >\n             15KG\n             </span> */}\n\n                    </div>\n                    {/* <span\n                        onClick={handleAttributeDelete}\n                        className='remove-item' >\n                        <i className='fa fa-times'></i>\n                    </span> */}\n\n                </div>\n            )}\n        </>\n    );\n};\n\n// @ts-ignore\nexport default CartOverLayCartItem;\n","import React from 'react'\n\n\n// import components\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\nimport Empty from \"../../components/Empty\";\n\nimport {\n    ShopOutlined\n} from '@ant-design/icons';\n\n\ninterface Props {\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({\n    setProductList,\n    productList\n}: Props) => {\n    return (\n        <div\n            style={{\n                // @ts-ignore\n                flexDirection: 'flex'\n            }}\n            className='addOrderContainer__container-orderSummary'>\n            <div className='addOrderContainer__container-productItemContainer'>\n                {productList && productList.length > 0 && productList.map(item => {\n                    return <AddNewOrderProductItem\n                        setProductList={setProductList}\n                        productList={productList}\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                {!(productList.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Added' height={150} />\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default AddNewOrderSummary\n","import React, { useState, useEffect } from 'react';\n\n// import hooks \nimport { useHandleFetch } from '../../hooks';\n\n\n// import libraries \nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs  } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nimport {\n    CheckCircleOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\nimport DatePicker from \"../../components/Field/DatePicker\";\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Tags from \"../product/Tags\";\nimport Brands from \"../product/Brands\";\nimport Categories from \"../product/Categories\";\nimport Pricing from \"../product/Pricing\";\nimport SelectProducts from \"./SelectProducts\";\nimport SelectedProductItems from \"./SelectedProductItems\";\nimport MetaTags from \"../category/MetaTags\";\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: \"\",\n    bundlePrice: null,\n    startDate: \"\",\n    endDate: \"\",\n    description: '',\n    bnName: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible: any;\n    setAddNewCategoryVisible: any;\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\n\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\n    const [visible, setvisible] = useState(false);\n    const [myImages, setmyImages] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n    const [categoryids, setcategoryIds] = useState([]);\n    const [tagIds, setTagIds] = useState([]);\n    const [brandId, setBrandId] = useState('');\n    const [pricing, setPricing] = useState([]);\n    const [coverImageId, setCoverImageId] = useState('');\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [description, setDescription] = useState('');\n\tconst [bnDescription, setBNDescription] = useState('');\n    const [productIds, setProductIds] = useState([]);\n    const [productList, setProductList] = useState([]);\n\tconst [metaTags,setMetaTags] = useState([]);\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\n\n    const [price, setPrice] = useState({\n        regular: null,\n        offer: null,\n    });\n\n\n    const makeEmptyCategoryOptions = (setEmpty) => {\n        setEmpty([]);\n    }\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // @ts-ignore\n        const imagesIds = myImages ? myImages.map(image => {\n            return image.id;\n        }) : [];\n\n        console.log('productList',productList);\n\n        const products = productList.length > 0 ? productList.map(product => {\n            return {\n                _id: product._id,\n                variation: product.variation,\n                quantity: product.quantity,\n            }\n        }) : [];\n\n\n        const addProductRes = await handleAddProductFetch({\n            body: {\n                name: values.name.trim(),\n                category: categoryids,\n                tags: tagIds,\n                brand: brandId,\n                price: price,\n                description: description,\n                model: values.model,\n                unit: values.unit,\n                image: imagesIds,\n                products,\n                // startDate, endDate,\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tmetaTags: metaTags.join(','),\n\n\t\t\t\t\n\t\t\t\tbn: {\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\n\t\t\t\t\tname: values.bnName.trim(),\n\t\t\t\t\tunit: values.metaUnit,\n\t\t\t\t\tdescription: values.bnDescription,\n                }\n                \n\n            }\n        });\n\n\n        // @ts-ignore\n        if (addProductRes && addProductRes.status === 'ok') {\n            openSuccessNotification('Bundle Created');\n            console.log('addProductBundleRes',addProductRes);\n\n            setBundleList([{\n                id: addProductRes['_id'] || '',\n                key: addProductRes['_id'] || '',\n                name: addProductRes['name'] || '',\n                description: addProductRes['description'] || '',\n                // @ts-ignore\n                ...addProductRes\n            },...bundleList])\n            setAddNewCategoryVisible(false)\n            // @ts-ignore\n            setmyImages([]);\n            setCoverImageId('');\n            setPricing([]);\n            setTagIds([]);\n            setSelectedTags([]);\n            setBrandId(\"\");\n            setcategoryIds([]);\n            setCategoryOptions([]);\n            actions.resetForm();\n        }\n        else {\n            // openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n\n    };\n\n\n    console.log('productlistbundle',productList)\n\n\n\n    useEffect(() => {\n        if (!addProductState['isLoading']) {\n            const error = addProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [addProductState])\n\n\n\n\n\n    useEffect(() => {\n\n        if (productIds && productIds.length > 0 && productList) {\n            if (productIds.length > productList.length) {\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\n                console.log('variation', variation)\n\n                setProductList([...productList, {\n                    ...productIds[productIds.length - 1],\n                    _id: productIds[productIds.length - 1]['id'],\n                    variation: variation,\n                    quantity: 1\n                }]);\n            }\n\n\n            else if (productIds.length < productList.length) {\n                console.log('productIds', productIds);\n                console.log('productList', productList);\n\n                const newProductList = productList.filter(item => {\n                    let isTrue = false;\n                    productIds.forEach(product => {\n                        if (product.id === item._id) {\n                            isTrue = true;\n                        }\n                    });\n                    return isTrue;\n                })\n                setProductList(newProductList);\n\n            }\n\n        }\n        else {\n            setProductList([]);\n        }\n        // console.log('productIds', productIds)\n\n\n    }, [productIds])\n\n\n\n\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !(pricing.length > 0) || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n    const handleDeleteFromSelectedImage = () => {\n\n    };\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        else setmyThumbnailImage(false);\n    }\n\n\n\n\n\n    const handleAddPricing = (priceItem) => {\n        setPricing([{\n            ...priceItem,\n            id: pricing.length\n        }, ...pricing])\n        message.info('Product Pricing Added');\n    }\n\n\n    const handleDeletePricing = (id) => {\n        const newPricing = pricing.filter(item => item.id !== id);\n        setPricing(newPricing);\n        message.info('Product Pricing Deleted');\n    }\n\n\n\n    const isCategoryInValid = () => {\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\n            return true;\n        }\n        else if (categoryids && categoryids.length > 0) {\n            return false;\n        }\n    }\n\n\n    const handleStartDataChange = (date, dateString) => {\n        setStartDate(dateString);\n        // console.log('date', date, dateString);\n    }\n\n    const handleEndDataChange = (date, dateString) => {\n        setEndDate(dateString);\n        // console.log('date', date, dateString);\n    }\n\n\n    \n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px',\n\n                            }}\n                            bodyStyle={{\n                                margin: 0,\n                                padding: 0,\n                            }}\n                            width={'70vw'}\n                            title=\"Add New Bundle\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                            }}\n                        >\n\n\n                            <section className='addProductGridContainer'>\n                                <div className='addProductGridContainer__left'>\n                                    <div className='addProductGridContainer__name'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Bundle Information *\n\t\t\t                                </h3>\n\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                        <Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n                                    \n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n                                            {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                                            <div style={{\n                                                marginBottom: '15px'\n                                            }}></div>\n                                            {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\n                                                <h4>\n                                                    Price *\n\t\t\t                                \t</h4>\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                                                        <InputSmall\n                                                            label='Regular'\n                                                            value={price.regular}\n                                                            name='regular'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                regular: e.target.value\n                                                            })}\n                                                        />\n\n\n                                                    </div>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n\n                                                        <InputSmall\n                                                            label='Offer'\n                                                            value={price.offer}\n                                                            name='offer'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                offer: e.target.value\n                                                            })}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                            {/* <div style={{\n                                                display: 'flex',\n                                                justifyContent: 'space-between'\n                                            }}>\n                                                <div style={{\n                                                    width: '48%',\n                                                }}>\n                                                    <DatePicker\n                                                        date={startDate}\n                                                        label='Start Date'\n                                                        onChange={handleStartDataChange} />\n\n                                                </div>\n                                                <div style={{\n                                                    width: '48%'\n                                                }}>\n\n                                                    <DatePicker\n                                                        date={endDate}\n                                                        label='End Date'\n                                                        onChange={handleEndDataChange} />\n\n                                                </div>\n                                            </div> */}\n\n\n                                        </div>\n\n\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__price'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Products\n\t\t                                    </h3>\n\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n\n\n                                        <div className='addProductGridContainer__item-body'>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Products\n                                            </h3>\n                                            <SelectProducts\n                                                setProductIds={setProductIds}\n                                                productIds={productIds}\n                                            />\n\n                                            <div style={{\n                                                marginTop: \"15px\"\n                                            }}></div>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Selcted Products\n                                            </h3>\n\n                                            <SelectedProductItems\n                                                productList={productList}\n                                                setProductList={setProductList}\n                                            />\n                                        </div>\n                                    </div>\n\n\n\n\n                                    <div className='addProductGridContainer__image'>\n\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Image\n                                            </h3>\n\n                                            <Tooltip\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n                                                <a href='###'>\n                                                    <InfoCircleOutlined />\n                                                </a>\n                                            </Tooltip>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                            <div className='aboutToUploadImagesContainer'>\n                                                {myImages &&\n                                                    // @ts-ignore\n                                                    myImages.length > 0 && myImages.map((image, index) => {\n                                                        return (\n                                                            <div className='aboutToUploadImagesContainer__item'>\n                                                                <div\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\n                                                                    onClick={() => setCoverImageId(image.id)}\n                                                                >\n                                                                    <img src={image.cover} alt={image.alt} />\n                                                                </div>\n\n                                                                <span\n                                                                    onClick={() => handleImagesDelete(image.id)}\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\n                                                                    <CloseOutlined />\n                                                                </span>\n\n\n                                                                {coverImageId === image.id ? (\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                        <CheckOutlined />\n                                                                    </span>\n                                                                ) : !coverImageId && index === 0 && (\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                        <CheckOutlined />\n                                                                    </span>\n                                                                )}\n                                                            </div>\n                                                        )\n                                                    })}\n\n\n                                                <Tooltip\n                                                    title={'Attach images'}>\n\n                                                    <div\n                                                        onClick={() => {\n                                                            setvisible(true);\n                                                            setisModalOpenForImages(true);\n                                                            setisModalOpenForThumbnail(false);\n                                                        }}\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\n                                                        {/* <FileAddOutlined />\n                                                            <FileImageTwoTone />\n                                                            <FileImageOutlined /> */}\n                                                        <FileImageFilled />\n                                                        {/* <h5>\n                                                                Select From Library\n                                                        <     /h5> */}\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                                            <PlusOutlined />\n                                                        </span>\n                                                    </div>\n                                                </Tooltip>\n\n\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n\n                                    <div className='addProductGridContainer__image'>\n\n<div className='addProductGridContainer__item-header'>\n    <h3>\n    Meta Data\n</h3>\n\n    <Tooltip\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\n        <a href='###'>\n            <InfoCircleOutlined />\n        </a>\n    </Tooltip>\n</div>\n<div className='addProductGridContainer__item-body'>\n\n                \n<Input\nlabel='Meta title'\nvalue={values.metaTitle}\nplaceHolder={'category...'}\nname='metaTitle'\nisError={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\n\nerrorString={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaTitle')\n}}\n/>\n\n<Input\nlabel='BN Meta title'\nvalue={values.bnMetaTitle}\nplaceHolder={'ক্যাটাগড়ি...'}\nname='bnMetaTitle'\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\n\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaTitle');\n}}\n/>\n\n<TextArea\nlabel='Meta description'\nvalue={values.metaDescription}\nplaceholder={'meta...'}\nname='metaDescription'\nisError={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\n\nerrorString={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaDescription');\n}}\n/>\n\n<TextArea\nlabel='BN Meta Description'\nvalue={values.bnMetaDescription}\nplaceholder={'এইয় মেট...'}\nname='bnMetaDescription'\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\n\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaDescription');\n}}\n/>\n\n<h3 className='inputFieldLabel'>\nMeta Tags (grocery,fashion)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setMetaTags}\ntags={metaTags}\n/>\n\n<div style={{\nmarginTop:'15px'\n}}></div>\n\n<h3 className='inputFieldLabel'>\nBN Meta Tags (মুদিখানা,ফ্যাশন)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setBnMetaTags}\ntags={bnMetaTags}\n/>\n</div>\n</div>\n\n\n\n                                </div>\n                                <div className='addProductGridContainer__right'>\n                                    <div className='addProductGridContainer__category'>\n\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Categories *\n\t\t\t                                \t</h3>\n\n                                                <Tooltip\n                                                    color='red'\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\n                                                    placement=\"left\" title={'Select at least one category'}>\n                                                    <div className={!(categoryids.length > 0)\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\n                                                        <CheckCircleOutlined />\n                                                    </div>\n                                                </Tooltip>\n\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Categories\n                                                    setCategoryOptions={setCategoryOptions}\n                                                    categoryOptions={categoryOptions}\n                                                    setcategoryIds={setcategoryIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__tag'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Tags\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Tags\n                                                    setSelectedTags={setSelectedTags}\n                                                    selectedTags={selectedTags}\n                                                    setTagIds={setTagIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className='addProductGridContainer__brand'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Brand\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Brands setBrandId={setBrandId} />\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </section>\n\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisible}\n                            visible={visible}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            setmyThumbnailImage={setmyThumbnailImage}\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\n                            isModalOpenForImages={isModalOpenForImages}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewProduct;\n\n\n\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*///","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport Moment from 'react-moment';\n\n\n\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\n\n/// import hooks\nimport { useFetch, useHandleFetch } from \"../../hooks\";\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\nimport AddNewProductBundle from \"./AddNewProductBundle\"\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Bundle Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: '',\n    description: ''\n}\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\n\nconst MyTable = ({ data, setTagList }) => {\n    const [visible, setvisible] = useState(false);\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\n\n    const history = useHistory();\n\n\n    const handleDeleteTag = async (id) => {\n        const deleteTagRes = await handleDeleteTagFetch({\n            urlOptions: {\n                placeHolders: {\n                    id,\n                }\n            }\n        });\n\n\n\n        // @ts-ignore\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\n            openSuccessNotification('Deleted Bundle');\n            const newtagList = data.filter(item => item.id !== id);\n            setTagList(newtagList);\n        }\n\n\n    }\n\n\n    const handleOk = (e: any) => {\n        setvisible(false);\n\n    };\n\n    const handleCancel = (e: any) => {\n        setvisible(false);\n    };\n\n\n\n    return (\n        <>\n            <Table\n                // expandable={{\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                //     rowExpandable: record => record.name !== 'Not Expandable',\n                //   }}\n                // bordered={true}\n                size='small'\n                // pagination={false}\n                dataSource={data}\n            >\n\n                <Column\n                    title=\"\"\n                    dataIndex=\"cover\"\n                    key=\"id\"\n                    width={'80px'}\n\n                    className='classnameofthecolumn'\n\n                    render={(cover, record: any) => (\n                        <>\n                            <img\n                                onClick={() => {\n                                    history.push(`/admin/bundle/${record.id}`)\n                                    setactiveCategoryForEdit(record)\n                                }}\n                                src={cover} alt='cover img' style={{\n                                    height: '40px',\n                                    width: '40px',\n                                    objectFit: \"contain\",\n                                    borderRadius: '3px',\n                                    cursor: 'pointer'\n                                }} />\n                        </>\n                    )}\n                />\n\n                <Column\n                    title=\"Name\"\n                    dataIndex=\"name\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                    render={(text, record: any) => (\n                        <>\n\n                            <h4\n                                onClick={() => {\n                                    history.push(`/admin/bundle/${record.id}`)\n                                    // setBrandDetailVisible(true);\n                                    setactiveCategoryForEdit(record)\n                                }}\n                                style={{\n                                    fontWeight: 400,\n                                    color: '#555',\n                                    cursor: 'pointer'\n                                }}>\n                                {text}\n                            </h4>\n\n\n                        </>\n                    )}\n                />\n\n                <Column\n                    title=\"Price\"\n                    dataIndex=\"price\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                />\n\n\n                <Column\n                    title=\"Product\"\n                    dataIndex=\"productCount\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                />\n\n                {/* <Column\n                    title=\"Start Date\"\n                    dataIndex=\"startDate\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                    render={(text, record: any) => (\n                        <>\n                            <h4\n                                style={{\n                                    fontWeight: 400,\n                                    color: '#555',\n                                    cursor: 'pointer'\n                                }}>\n                                <Moment >\n                                    {text}\n                                </Moment>\n\n                            </h4>\n                        </>\n                    )}\n\n                />\n\n                <Column\n                    title=\"End Date\"\n                    dataIndex=\"endDate\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                /> */}\n\n                <Column\n\n                    className='classnameofthecolumn'\n                    title=\"\"\n                    key=\"action\"\n                    align='right'\n                    render={(text, record: any) => (\n                        <Space size=\"middle\">\n                            <a href='##'>\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\n                                    <span className='iconSize' onClick={() => {\n                                        setvisible(true)\n                                        setactiveCategoryForEdit(record);\n                                    }}>\n                                        <EditOutlined />\n                                    </span>\n                                </Tooltip>\n                            </a>\n\n\n\n                            <Popconfirm\n                                onConfirm={() => handleDeleteTag(record.id)}\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\n                                <span\n                                    className='iconSize iconSize-danger'\n                                >\n                                    <DeleteOutlined />\n                                </span>\n                            </Popconfirm>\n                        </Space>\n                    )}\n                />\n            </Table>\n\n\n\n\n\n\n            {activeCategoryForEdit && <ProductBundleQuickEdit\n             productList={data}\n             setProductList={setTagList}\n             setAddNewCategoryVisible={setvisible}\n             addNewCategoryVisible={visible}\n             productDetailData={activeCategoryForEdit} />}\n        </>\n    )\n}\n\n\n\n\ninterface Props { }\n\nconst TagList = ({ }: Props) => {\n\n\n    const [tagList, setTagList] = useState([]);\n\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\n\n\n    useEffect(() => {\n        const setTags = async () => {\n            const tags = await handleTagListFetch({\n                urlOptions:{\n                    params: {\n                      sortItem: 'added',\n                      sortOrderValue: '-1',\n                      productType: 'bundle'\n                    }\n                    }\n            });\n            // @ts-ignore\n            setTagList(tags);\n        }\n        setTags();\n    }, [])\n\n\n\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleOkAddNewCategory = (e: any) => {\n        setAddNewCategoryVisible(false);\n\n    };\n\n    const handleCancelAddNewCategory = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n    const handleSearch = (value) => {\n        if (tagState.data.length > 0) {\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\n            setTagList(newTagList);\n        }\n\n    }\n\n    return (\n        <>\n\n            <div className='categoryListContainer'>\n                <div className='categoryListContainer__header'>\n                    <div className='categoryListContainer__header-searchBar-tag'>\n                        <h2 className='categoryListContainer__header-title'>\n                            Bundles\n                       </h2>\n\n                        <Search\n                            enterButton={false}\n                            className='searchbarClassName'\n                            placeholder=\"search bundles..\"\n                            onChange={e => handleSearch(e.target.value)}\n                        />\n                    </div>\n                    <Button\n                        // type=\"primary\"\n                        className='btnPrimaryClassNameoutline'\n                        icon={<PlusOutlined />}\n                        onClick={() => setAddNewCategoryVisible(true)}\n                    >\n                        Add New\n\t\t\t\t\t</Button>\n                </div>\n                <div className='categoryListContainer__categoryList'>\n                    {tagState.done && tagList.length > 0 && <MyTable\n                        setTagList={setTagList}\n                        data={tagList} />}\n                    {tagState.isLoading && <DataTableSkeleton />}\n\n\n                    {tagState.done && !(tagList.length > 0) && (\n                        <div style={{\n                            marginTop: '200px'\n                        }}>\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <AddNewProductBundle\n                productList={tagList}\n                setProductList={setTagList}\n                addNewCategoryVisible={addNewCategoryVisible}\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\n\n            />\n        </>\n    );\n};\n\nexport default TagList;\n","import React, { useState, useEffect } from 'react';\n\n// import hooks \nimport { useHandleFetch } from '../../hooks';\n\n\n// import libraries \nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nimport {\n    CheckCircleOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\nimport DatePicker from \"../../components/Field/DatePicker\";\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Tags from \"../product/Tags\";\nimport Brands from \"../product/Brands\";\nimport Categories from \"../product/Categories\";\nimport Pricing from \"../product/Pricing\";\nimport SelectProducts from \"./SelectProducts\";\nimport SelectedProductItems from \"./SelectedProductItems\";\nimport MetaTags from \"../category/MetaTags\";\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: \"\",\n    bundlePrice: null,\n    startDate: \"\",\n    endDate: \"\",\n    description: '',\n    bnName: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible: any;\n    setAddNewCategoryVisible: any;\n    productDetailData?:any; \n}\n\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productDetailData }: Props) => {\n\n  \n\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\n    const [productList,setProductList] = useState([]);\n    const [visible, setvisible] = useState(false);\n    const [myImages, setmyImages] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n    const [categoryids, setcategoryIds] = useState([]);\n    const [tagIds, setTagIds] = useState([]);\n    const [brandId, setBrandId] = useState('');\n    const [pricing, setPricing] = useState([]);\n    const [coverImageId, setCoverImageId] = useState('');\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [date, setDateFeild] = useState('');\n    const [time, setTimeFeild] = useState('');\n    const [description, setDescription] = useState('');\n\tconst [bnDescription, setBNDescription] = useState('');\n\tconst [metaTags,setMetaTags] = useState([]);\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \n\n    const [productIds,setProductIds] = useState([]); \n\n\n\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\n\n    useEffect(() => {\n        const getProductDetail = async () => {\n            await handleProductDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productDetailData.id\n                    }\n                }\n            })\n        };\n\n        getProductDetail();\n\n    }, [productDetailData]);\n\n\n    const [price, setPrice] = useState({\n        regular: null,\n        offer: null,\n    });\n\n\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // @ts-ignore\n        const imagesIds = myImages ? myImages.map(image => {\n            return image.id;\n        }) : [];\n\n        console.log('productList',productList);\n\n        const products = productList.length > 0 ? productList.map(product => {\n            return {\n                _id: product._id,\n                variation: product.variation,\n                quantity: product.quantity,\n            }\n        }) : [];\n\n    \n            if (productDetailData && Object.keys(productDetailData).length > 0) {\n                const aboutToUpdatedImageIds = []; \n    \n                if(imagesIds && imagesIds.length > 0){\n                    imagesIds.forEach(imageId => {\n                        if(productDetailData && productDetailData['image']){\n                            if(!productDetailData['image'].includes(imageId)){\n                                aboutToUpdatedImageIds.push(imageId)\n                            }\n                        }\n                    });\n                }\n    \n          \n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                    await handleAttachImageToItemMultipleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        },\n                        body: {\n                            image: aboutToUpdatedImageIds\n                        }\n                    });\n                }\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                    await handleAttachImageToItemSingleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                imageId: aboutToUpdatedImageIds[0].id,\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        }\n                    });\n                }\n            }\n        \n            \n\n\n\n        const addProductRes = await handleAddProductFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: productDetailData.id\n                }\n            },\n            body: {\n                name: values.name.trim(),\n                category: categoryids,\n                tags: tagIds,\n                brand: brandId,\n                price: price,\n                description: description,\n                model: values.model,\n                unit: values.unit,\n                image: imagesIds,\n                products,\n\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tmetaTags: metaTags.join(','),\n\n\t\t\t\t\n\t\t\t\tbn: {\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\n\t\t\t\t\tname: values.bnName.trim(),\n\t\t\t\t\tunit: values.metaUnit,\n\t\t\t\t\tdescription: values.bnDescription,\n                }\n                \n                \n                // startDate, endDate,\n            }\n        });\n\n\n        // @ts-ignore\n        if (addProductRes && addProductRes.status === 'ok') {\n            openSuccessNotification('Bundle Updated');\n  \n\n            setAddNewCategoryVisible(false)\n\n\n            // updat bundle detail data\n\n\n\n\n            // @ts-ignore\n            setmyImages([]);\n            setCoverImageId('');\n            setPricing([]);\n            setTagIds([]);\n            setSelectedTags([]);\n            setBrandId(\"\");\n            setcategoryIds([]);\n            setCategoryOptions([]);\n            actions.resetForm();\n        }\n        else {\n            // openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n\n    };\n\n\n\n\n\n    useEffect(() => {\n        if (!addProductState['isLoading']) {\n            const error = addProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [addProductState])\n\n\n\n    useEffect(()=>{\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\n            const productIds = productDetailState['data']['products'].map(item => {\n              return {\n                ...item,\n                id: item._id,\n              }\n            }); \n            setProductIds(productIds); \n            const productList = productDetailState['data'].products.map(item => {\n                return {\n                    _id: item._id,\n                    variation: item.variation,\n                    quantity: item.quantity,\n                    totalPrice: item.totalPrice \n                }\n            }); \n           setProductList(productList); \n\n        }; \n        \n        console.log(\"productDetailState['data']\",productDetailState['data']);\n    },[productDetailState['done']])\n\n\n\n\n\n    useEffect(() => {\n\n        if (productIds && productIds.length > 0 && productList) {\n            if (productIds.length > productList.length) {\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\n                console.log('variation', variation)\n\n                setProductList([...productList, {\n                    ...productIds[productIds.length - 1],\n                    _id: productIds[productIds.length - 1]['id'],\n                    variation: variation,\n                    quantity: 1\n                }]);\n            }\n\n\n            else if (productIds.length < productList.length) {\n                console.log('productIds', productIds);\n                console.log('productList', productList);\n\n                const newProductList = productList.filter(item => {\n                    let isTrue = false;\n                    productIds.forEach(product => {\n                        if (product.id === item._id) {\n                            isTrue = true;\n                        }\n                    });\n                    return isTrue;\n                })\n                setProductList(newProductList);\n            }\n\n        }\n        else {\n            setProductList([]);\n        }\n        // console.log('productIds', productIds)\n\n    }, [productIds])\n\n\n\n\n\n\n\n    useEffect(() => {\n\n        if (productDetailData && productDetailData.brand) {\n            setBrandId(productDetailData.brand['id']);\n        }\n        else {\n            setBrandId('');\n        }\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\n            // const tagIds = productDetailData.tags.map(item => item.id);\n            setSelectedTags(productDetailData.tags);\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\n            // const categoryIds = productDetailData.category.map(item => item.id);\n\n            const categoryIds = productDetailData.category;\n            setCategoryOptions(categoryIds);\n            setcategoryIds(categoryIds); \n        }\n        else {\n            setCategoryOptions([]);\n        }\n\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\n            setPrice(productDetailData.anotherPrice); \n        }\n        else {\n            setPricing([]);\n\n        }\n\n\n        if (productDetailData && productDetailData.date && productDetailData.date) {\n            setDateFeild(productDetailData.date)\n        }\n        else {\n            setDateFeild('');\n\n        }\n\n        if (productDetailData && productDetailData.time && productDetailData.time) {\n            setTimeFeild(productDetailData.time);\n        }\n        else {\n            setTimeFeild('');\n        }\n\n\n\n    }, [productDetailData]);\n\n\n\n    useEffect(() => {\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n\n            const images = productDetailState.data.image;\n            if (images && images.length > 0) {\n                setmyImages(images);\n            }\n\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\n                // @ts-ignore\n                setmyImages([productDetailState.data.cover, ...images]);\n                console.log('catcat', [productDetailState.data.cover, ...images]);\n                setCoverImageId(productDetailState.data.cover['id']);\n            }\n        }\n    }, [productDetailState])\n\n\n    useEffect(() => {\n        console.log('thumnail', myImages);\n        // @ts-ignore\n        if (myImages && myImages[0] && myImages.length < 2) {\n            console.log('thumnail2', myImages);\n\n            if (coverImageId !== myImages[0].id) {\n                setCoverImageId(myImages[0].id);\n                handleSetImageAsThumnail(myImages[0]);\n            }\n\n        }\n\n    }, [myImages])\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n\n        console.log('thumbnailRes', thumbnailRes);\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\n\n            // if (prevItem) {\n            //     console.log('prevItem--', prevItem, 'image--', image);\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            //     setProductList(updateProductList);\n\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n\n    useEffect(() => {\n        if (!updateProductState['isLoading']) {\n            const error = updateProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [updateProductState])\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n    const handleDeleteFromSelectedImage = () => {\n\n    };\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        else setmyThumbnailImage(false);\n    }\n\n\n\n\n\n    useEffect(()=>{\n\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\n            const metaTags = productDetailState.data.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \n            setMetaTags(metaTags)\n            setBnMetaTags(bnMetaTags)\n        }\n\n    },[productDetailState['done']])\n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues,\n                    ...{\n                    ...productDetailData,\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\n                        bnName: productDetailState['data']['bn'].name,\n                        metaUnit: productDetailState['data']['bn'].unit,\n                        bnDescription: productDetailState['data']['bn'].description,\n                      }),\n                } }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px',\n\n                            }}\n                            bodyStyle={{\n                                margin: 0,\n                                padding: 0,\n                            }}\n                            width={'70vw'}\n                            title=\"Add New Bundle\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                            }}\n                        >\n\n\n                            <section className='addProductGridContainer'>\n                                <div className='addProductGridContainer__left'>\n                                    <div className='addProductGridContainer__name'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Bundle Information *\n\t\t\t                                </h3>\n\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                        <Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n                                    \n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n                                            {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                                            <div style={{\n                                                marginBottom: '15px'\n                                            }}></div>\n                                            {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\n                                                <h4>\n                                                    Price *\n\t\t\t                                \t</h4>\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                                                        <InputSmall\n                                                            label='Regular'\n                                                            value={price.regular}\n                                                            name='regular'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                regular: e.target.value\n                                                            })}\n                                                        />\n\n\n                                                    </div>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n\n                                                        <InputSmall\n                                                            label='Offer'\n                                                            value={price.offer}\n                                                            name='offer'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                offer: e.target.value\n                                                            })}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                            {/* <div style={{\n                                                display: 'flex',\n                                                justifyContent: 'space-between'\n                                            }}>\n                                                <div style={{\n                                                    width: '48%',\n                                                }}>\n                                                    <DatePicker\n                                                        date={startDate}\n                                                        label='Start Date'\n                                                        onChange={handleStartDataChange} />\n\n                                                </div>\n                                                <div style={{\n                                                    width: '48%'\n                                                }}>\n\n                                                    <DatePicker\n                                                        date={endDate}\n                                                        label='End Date'\n                                                        onChange={handleEndDataChange} />\n\n                                                </div>\n                                            </div> */}\n\n\n                                        </div>\n\n\n\n                                    </div>\n\n                                    {/* <div className='addProductGridContainer__price'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Products\n\t\t                                    </h3>\n\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n\n\n                                        <div className='addProductGridContainer__item-body'>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Products\n                                            </h3>\n                                            <SelectProducts\n                                                setProductIds={setProductIds}\n                                                productIds={productIds}\n                                            />\n\n                                            <div style={{\n                                                marginTop: \"15px\"\n                                            }}></div>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Selcted Products\n                                            </h3>\n\n                                            <SelectedProductItems\n                                                productList={productList}\n                                                setProductList={setProductList}\n                                            />\n                                        </div>\n                                    </div> */}\n\n\n                                    <div className='addProductGridContainer__image'>\n\n                                <div className='addProductGridContainer__item-header'>\n                                    <h3>\n                                        Image\n                                </h3>\n\n                                    <Tooltip\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n                                        <a href='###'>\n                                            <InfoCircleOutlined />\n                                        </a>\n                                    </Tooltip>\n</div>\n\n<div\n    style={{\n        padding: \"10px\"\n    }}\n    className='aboutToUploadImagesContainer'>\n    {productDetailState.isLoading && (\n        <div style={{\n            padding: '20px 0'\n        }}>\n            <Spin />\n        </div>\n    )}\n    {productDetailState.done && (\n        <>\n            {myImages &&\n                // @ts-ignore\n                myImages.length > 0 && myImages.map((image, index) => {\n                    return (\n                        <div className='aboutToUploadImagesContainer__item'>\n                            <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                }}\n                            >\n                                <img src={image.cover} alt={image.alt} />\n                            </div>\n\n                            <span\n                                onClick={() => {\n                                    handleImagesDelete(image.id)\n                                    handleDetachSingleImage(image.id)\n                                }\n\n                                }\n                                className='aboutToUploadImagesContainer__item-remove'>\n                                <CloseOutlined />\n                            </span>\n\n\n                            {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            ) : !coverImageId && index === 0 && (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            )}\n\n\n                        </div>\n                    )\n                })}\n\n\n            <Tooltip\n                title={'Attach images'}>\n\n                <div\n                    onClick={() => {\n                        setvisible(true);\n                        setisModalOpenForImages(true);\n                        setisModalOpenForThumbnail(false);\n                    }}\n                    className='aboutToUploadImagesContainer__uploadItem'>\n                    {/* <FileAddOutlined />\n            <FileImageTwoTone />\n            <FileImageOutlined /> */}\n                    <FileImageFilled />\n                    {/* <h5>\n             Select From Library\n    <     /h5> */}\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                    </span>\n                </div>\n            </Tooltip>\n        </>\n    )}\n\n</div>\n</div>\n\n\n\n\n<div className='addProductGridContainer__image'>\n\n<div className='addProductGridContainer__item-header'>\n    <h3>\n    Meta Data\n</h3>\n\n    <Tooltip\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\n        <a href='###'>\n            <InfoCircleOutlined />\n        </a>\n    </Tooltip>\n</div>\n<div className='addProductGridContainer__item-body'>\n\n                \n<Input\nlabel='Meta title'\nvalue={values.metaTitle}\nplaceHolder={'category...'}\nname='metaTitle'\nisError={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\n\nerrorString={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaTitle')\n}}\n/>\n\n<Input\nlabel='BN Meta title'\nvalue={values.bnMetaTitle}\nplaceHolder={'ক্যাটাগড়ি...'}\nname='bnMetaTitle'\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\n\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaTitle');\n}}\n/>\n\n<TextArea\nlabel='Meta description'\nvalue={values.metaDescription}\nplaceholder={'meta...'}\nname='metaDescription'\nisError={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\n\nerrorString={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaDescription');\n}}\n/>\n\n<TextArea\nlabel='BN Meta Description'\nvalue={values.bnMetaDescription}\nplaceholder={'এইয় মেট...'}\nname='bnMetaDescription'\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\n\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaDescription');\n}}\n/>\n\n<h3 className='inputFieldLabel'>\nMeta Tags (grocery,fashion)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setMetaTags}\ntags={metaTags}\n/>\n\n<div style={{\nmarginTop:'15px'\n}}></div>\n\n<h3 className='inputFieldLabel'>\nBN Meta Tags (মুদিখানা,ফ্যাশন)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setBnMetaTags}\ntags={bnMetaTags}\n/>\n</div>\n</div>\n\n\n\n\n\n\n                                </div>\n                                <div className='addProductGridContainer__right'>\n                                    <div className='addProductGridContainer__category'>\n\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Categories *\n\t\t\t                                \t</h3>\n\n                                                <Tooltip\n                                                    color='red'\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\n                                                    placement=\"left\" title={'Select at least one category'}>\n                                                    <div className={!(categoryids.length > 0)\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\n                                                        <CheckCircleOutlined />\n                                                    </div>\n                                                </Tooltip>\n\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Categories\n                                                    setCategoryOptions={setCategoryOptions}\n                                                    categoryOptions={categoryOptions}\n                                                    setcategoryIds={setcategoryIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__tag'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Tags\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Tags\n                                                    setSelectedTags={setSelectedTags}\n                                                    selectedTags={selectedTags}\n                                                    setTagIds={setTagIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className='addProductGridContainer__brand'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Brand\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Brands setBrandId={setBrandId} />\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </section>\n\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisible}\n                            visible={visible}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            setmyThumbnailImage={setmyThumbnailImage}\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\n                            isModalOpenForImages={isModalOpenForImages}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewProduct;\n\n\n\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*///","import React, { useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport { useHistory } from \"react-router-dom\";\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n\ninterface Props {\n    productId?: any;\n    quantity?: any;\n}\n\n\n\nconst CouponProducts = ({\n    productId,\n    quantity\n}: Props) => {\n\n    const history = useHistory();\n\n    const [productDetailState, handleProductFetch] = useHandleFetch(\n        {},\n        'productDetailById'\n    );\n\n    useEffect(() => {\n        const getAndSetProduct = async () => {\n            await handleProductFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId,\n                    },\n                },\n            });\n\n        };\n        getAndSetProduct();\n    }, []);\n\n\n    console.log('productDetailStatecoupon', productDetailState)\n\n\n    return (\n        <Skeleton\n            paragraph={{ rows: 2 }}\n            loading={productDetailState.isLoading}>\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\n                <>\n                    <div className='couponDetailProductItem'>\n                        <div\n                            onClick={() => history.push(`/admin/product/${productId}`)}\n                            className='couponDetailProductItem__cover'>\n                            <img src={productDetailState.data.cover && productDetailState.data.cover['cover']} alt=\"\" />\n                        </div>\n                        <div className='couponDetailProductItem__info'>\n                            <h2\n                                onClick={() => history.push(`/admin/product/${productId}`)}\n                            >\n                                {productDetailState.data.name}\n                            </h2>\n                            <h3>\n                                {productDetailState.data.price}\n                            </h3>\n                            <h3>\n                                Quantity: {quantity}\n                            </h3>\n                        </div>\n                    </div>\n                </>\n            )}\n\n        </Skeleton>\n    )\n}\n\n\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    EditOutlined,\n    DeleteOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\n\n\n// import moment\nimport Moment from \"react-moment\";\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport ProductBundleEdit from \"./ProductBundleEdit\";\nimport CouponProducts from \"../coupon/CouponProducts\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\n\n    const params = useParams();\n    const history = useHistory();\n    const productId = params['id'];\n    const [productEditVisible, setProductEditVisible] = useState(false);\n\n\n    useEffect(() => {\n\n        const getProductDetail = async () => {\n            await handleProductDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId\n                    }\n                }\n            })\n        };\n\n        getProductDetail();\n\n    }, [productId]);\n\n\n\n\n    console.log('productDetailState', productDetailState);\n\n    console.log('brandParams', params);\n\n    const getImagesInCollumn = (imgs) => {\n        if (!imgs[0]) return false;\n        imgs = imgs.map(item => item.cover);\n        const columns = {};\n\n        let localIndex = 0;\n        let columnNumber = 0;\n\n\n        imgs.forEach((item, index) => {\n            if (localIndex < 3) {\n                if (columns[columnNumber]) {\n                    columns[columnNumber] = [...columns[columnNumber], item]\n                }\n                else columns[columnNumber] = [item];\n\n                localIndex = localIndex + 1;\n                columnNumber = columnNumber + 1;\n\n            }\n            else {\n                localIndex = 0;\n                columnNumber = 0;\n                console.log('localIndex', localIndex)\n            }\n        });\n\n        return columns;\n    }\n\n\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\n\n\n    console.log('bundleDetail', productDetailState);\n    return (\n        <div className='brandDetailContainer'>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Bundle Detail\n                </h3>\n\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\n                    <>\n                     <ProductBundleEdit\n                          setAddNewCategoryVisible={setProductEditVisible}\n                         addNewCategoryVisible={productEditVisible}\n                            productDetailData={productDetailState.data}\n\n                        /> \n                         <Button\n                            onClick={() => setProductEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button> \n                    </>\n                )}\n\n            </div>\n            <Skeleton\n                avatar paragraph={{ rows: 3 }}\n                loading={productDetailState.isLoading}>\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\n                    <>\n                        <div className='brandDetailContainer__header'>\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\n                            </div>\n                            <div className='brandDetailContainer__header-info'>\n                                <h2>\n                                    {productDetailState.data['name']}\n                                </h2>\n                                <h4>\n                                    {productDetailState.data['price']}\n                                </h4>\n\n                                {productDetailState.data['description'] && (\n                                    <h3>\n                                    {productDetailState.data['description']}\n                                    </h3>\n                                )}\n                              \n\n                                {/* {productDetailState.data['startDate'] && (\n                                    <h3>\n                                        START DATE:\n                                        <span>\n                                            {productDetailState.data['startDate']}\n                                        </span>\n\n                                    </h3>\n                                )}\n\n                                {productDetailState.data['endDate'] && (\n                                    <h3>\n                                        END DATE:\n                                        <span>\n                                            {productDetailState.data['endDate']}\n                                        </span>\n\n                                    </h3>\n                                )} */}\n\n\n\n                                {productDetailState.data['url'] && (\n                                    <h3>\n                                        URL:\n                                        <span>\n                                            {productDetailState.data['url']}\n                                        </span>\n\n                                    </h3>\n                                )}\n                                {/* \n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            TAGS:\n                                        {productDetailState.data['tags'].map(tag => {\n                                            return (\n                                                <span>\n                                                    {tag.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                } */}\n\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            CATEGORIES:\n                                        {productDetailState.data['category'].map(cat => {\n                                            return (\n                                                <span\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\n\n                                                >\n                                                    {cat.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                }\n\n                            </div>\n                        </div>\n\n\n                        {productDetailState.data['icon'] && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Icon\n                            </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__inlineBox'>\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Image Gallary\n                                   </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__imageGallary'>\n                                    <div className='imgGallaryContainer'>\n\n                                        <div className=\"imgGallary-row\">\n                                            {row && Object.keys(row).map(column => {\n                                                return (\n                                                    <div className=\"imgGallary-column\">\n                                                        {row[column] && row[column].map(img => {\n                                                            return <img src={img} style={{\n                                                                width: '100%'\n                                                            }} />\n                                                        })}\n\n                                                    </div>\n                                                )\n                                            })}\n\n\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Brand\n                                   </h3>\n                                </div>\n\n                                <div\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\n\n                                    className='brandDetailContainer__brand'>\n                                    <div className='brandDetailContainer__brand-coverbox'>\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\n                                    </div>\n                                    <div className='brandDetailContainer__brand-info'>\n                                        <h2>\n                                            {productDetailState.data['brand']['name']}\n                                        </h2>\n                                        <h3>\n                                            {productDetailState.data['brand']['description']}\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Primary Category\n                                   </h3>\n                                </div>\n\n                                <div\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\n                                    className='brandDetailContainer__brand'>\n                                    <div className='brandDetailContainer__brand-coverbox'>\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\n                                    </div>\n                                    <div className='brandDetailContainer__brand-info'>\n                                        <h2>\n                                            {productDetailState.data['primaryCategory']['name']}\n                                        </h2>\n                                        <h3>\n                                            {productDetailState.data['primaryCategory']['description']}\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n\n\n                        \n\n\n                    {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\n                            <div className='brandDetailContainer__heading'>\n                                <h3>\n                                    Products\n                       </h3>\n                            </div>\n                        )\n                        }\n\n\n                        <div className='brandDetailContainer__body'>\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\n                                <div style={{\n                                    marginTop: '100px'\n                                }}>\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                                </div>\n                            )}\n\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\n                                <>\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\n                                        productDetailState.data['products'].map(product => {\n                                            return (\n                                                <CouponProducts\n                                                    quantity={product.quantity}\n                                                    productId={product['_id']} />\n                                            )\n                                        })}\n                                </>\n                            )}\n                        </div>\n\n\n\n                    </>\n\n                )}\n\n            </Skeleton>\n\n\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport MetaTags from '../../pages/category/MetaTags';\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  brandList?: any;\n  setBrandList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  brandList,\n  setBrandList,\n}: Props) => {\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\n    {},\n    'addBrand'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  console.log('brandList22', brandList);\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const addBrandRes = await handleUpdateBrandFetch({\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        type: values.type,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addBrandRes && addBrandRes.status === 'ok') {\n      openSuccessNotification();\n\n      setBrandList([\n        {\n          id: addBrandRes['_id'] || '',\n          key: addBrandRes['_id'] || '',\n          name: addBrandRes['name'] || '',\n          description: addBrandRes['description'] || '',\n          cover: addBrandRes['cover'] || '',\n          // @ts-ignore\n          ...addBrandRes,\n        },\n        ...brandList,\n      ]);\n\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateBrandState['isLoading']) {\n      const error = updateBrandState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateBrandState]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        // set thumbnail with server for edits\n        // handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const onSwitchChange = (checked: any) => {\n    // console.log(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Brand'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={''}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateBrandState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateBrandState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={''}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This brand...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ব্র্যান্ড...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          // setCoverImageId(image.id);\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {/* {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string()\n  //   .label('Name')\n  //   .required('Name is required')\n  //   .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  brandDetailData?: any;\n  brandEditVisible?: any;\n  setBrandEditVisible?: any;\n  brandList?: any;\n  setBrandList?: any;\n}\n\nconst ModalComponentChildItem = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  brandList,\n  setBrandList,\n}) => {\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\n    {},\n    'updateBrand'\n  );\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\n    {},\n    'brandDetail'\n  );\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [myImages, setmyImages]: any = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const brandDetailRes = await handleBrandDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandDetailData.id,\n          },\n        },\n      });\n    };\n\n    getBrandDetail();\n  }, [brandDetailData]);\n\n  useEffect(() => {\n    if (\n      brandDetailState.data &&\n      Object.keys(brandDetailState.data).length > 0\n    ) {\n      const images = brandDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n        setMyGoddamnImages(images);\n      }\n\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([brandDetailState.data.cover]);\n        setCoverImageId(brandDetailState.data.cover['id']);\n      }\n    }\n  }, [brandDetailState.data]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n      // if (prevItem) {\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n      //     setBrandList(updateBrandList);\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    console.log('myReadyToGoImages', myImages);\n\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      // @ts-ignore\n      const images =\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\n\n      if (images[0] && images.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n          body: {\n            image: images,\n          },\n        });\n      } else if (images[0] && images.length < 1) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: images[0].id,\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updateBrandRes = await handleUpdateBrandFetch({\n      urlOptions: {\n        placeHolders: {\n          id: brandDetailData.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName,\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\n      console.log('updateBrandRes', updateBrandRes);\n\n      const positionInTag = () => {\n        return brandList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      const getCover = (id) => {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      };\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, brandList[index], {\n        ...brandDetailData,\n        id: brandDetailData['id'] || '',\n        key: brandDetailData['id'] || '',\n        name: updateBrandRes['name'] || '',\n        description: updateBrandRes['description'] || '',\n        // @ts-ignore\n        ...updateBrandRes,\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...brandList.slice(0, index),\n        updatedItem,\n        ...brandList.slice(index + 1),\n      ];\n      setBrandList(updateTagList);\n\n      openSuccessNotification('Brand Updated!');\n      setBrandEditVisible(false);\n\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\n      // }\n\n      // const index = positionInBrand();\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\n      // console.log('updateBrandList', updatedItem)\n\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n\n      // setBrandList(updateBrandList);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateBrandState['isLoading']) {\n      const error = updateBrandState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateBrandState]);\n\n  const onSwitchChange = (checked: any) => {\n    // console.log(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setBrandEditVisible(false);\n    setBnTags([]);\n    setTags([]);\n    setCoverImageId('');\n    setvisibleMedia(false);\n    setmyImages(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  console.log('myImages', myImages);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  console.log('brandEdit', brandDetailData);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        // set thumbnail with server for edits\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...brandDetailData,\n          ...(brandDetailData &&\n            Object.keys(brandDetailData).length > 0 && {\n              bnMetaTitle:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaTitle &&\n                brandDetailData['bn'].metaTitle,\n              bnMetaDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaDescription &&\n                brandDetailData['bn'].metaDescription,\n              bnName:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].name &&\n                brandDetailData['bn'].name,\n              bnDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].description &&\n                brandDetailData['bn'].description,\n            }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Brand Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      name='name'\n                      placeHolder={''}\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={''}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Description'\n                      value={values.description}\n                      name='description'\n                      placeholder={'This brand...'}\n                      isError={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      errorString={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('description');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Description'\n                      value={values.bnDescription}\n                      placeholder={'এই ব্র্যান্ড...'}\n                      name='bnDescription'\n                      isError={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      errorString={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnDescription');\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Cover</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {brandDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {brandDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    // setCoverImageId(image.id);\n                                    // handleSetImageAsThumnail(image);\n                                    setvisibleMedia(true);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {/* {coverImageId === image.id ? (\n                            <span className='aboutToUploadImagesContainer__item-cover'>\n                              <CheckOutlined />\n                            </span>\n                          ) : (\n                            !coverImageId &&\n                            index === 0 && (\n                              <span className='aboutToUploadImagesContainer__item-cover'>\n                                <CheckOutlined />\n                              </span>\n                            )\n                          )} */}\n                              </div>\n                            );\n                          })}\n\n                        {!myImages ||\n                        // @ts-ignore\n                        (myImages && !(myImages && myImages.length > 0)) ? (\n                          <>\n                            <Tooltip title={'Attach images'}>\n                              <div\n                                onClick={() => {\n                                  setvisibleMedia(true);\n                                }}\n                                className='aboutToUploadImagesContainer__uploadItem'\n                              >\n                                <FileImageFilled />\n                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                  <PlusOutlined />\n                                </span>\n                              </div>\n                            </Tooltip>\n                          </>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setTags}\n                        tags={tags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnTags}\n                        tags={bnTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setBrandEditVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={updateBrandState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisibleMedia}\n              visible={visibleMedia}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              myGoddamnImages={myGoddamnImages}\n              setMyGoddamnImages={setMyGoddamnImages}\n              isModalOpenForImages={false}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewBrand = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  brandList,\n  setBrandList,\n}: Props) => {\n  const handleCancel = () => {\n    setBrandEditVisible(false);\n  };\n\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      width={'70vw'}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Brand Edit'\n      destroyOnClose={true}\n      visible={brandEditVisible}\n      onCancel={handleCancel}\n      footer={false}\n    >\n      <ModalComponentChildItem\n        brandDetailData={brandDetailData}\n        brandEditVisible={brandEditVisible}\n        setBrandEditVisible={setBrandEditVisible}\n        brandList={brandList}\n        setBrandList={setBrandList}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Empty,\n  Popconfirm,\n  Space,\n  Button,\n  Input,\n  Tooltip,\n  notification,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewBrand from './AddNewBrand';\n\n// @ts-ignore\nimport BrandQuickEdit from './BrandQuickEdit';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setBrandList: any;\n  roles?: any;\n}\n\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch(\n    {},\n    'deleteBrand'\n  );\n  const [brandDetailVisible, setBrandDetailVisible] = useState(false);\n  const history = useHistory();\n\n  const handleDeleteBrand = async (id) => {\n    const deleteBrandRes = await handleDeleteBrandFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteBrandRes && deleteBrandRes.status === 'ok') {\n      openSuccessNotification('Deleted Brand');\n      const newBrandList = data.filter((item) => item.id !== id);\n      setBrandList(newBrandList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/brand/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/brand/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Description'\n          dataIndex='description'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n           title=\"Product\" \n           dataIndex=\"productCount\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            /> */}\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess('postCatalogue', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Brand'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteBrand(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <BrandQuickEdit\n          brandList={data}\n          setBrandList={setBrandList}\n          setBrandEditVisible={setvisible}\n          brandEditVisible={visible}\n          brandDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst CategoryList = ({ roles }: Props) => {\n  const [brandList, setBrandList] = useState([]);\n\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\n\n  useEffect(() => {\n    const setBrands = async () => {\n      const brands = await handlebrandListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setBrandList(brands || []);\n    };\n    setBrands();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (brandState.data.length > 0) {\n      const newBrandList = brandState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setBrandList(newBrandList);\n    }\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Brand</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search brand..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          {isAccess('postCatalogue', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {brandState.done && brandList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setBrandList={setBrandList}\n              data={brandList}\n            />\n          )}\n          {brandState.isLoading && <DataTableSkeleton />}\n          {brandState.done && !(brandList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Brand found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewBrand\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        setBrandList={setBrandList}\n        brandList={brandList}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CategoryList);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string()\n  //   .label('Name')\n  //   .required('Name is required')\n  //   .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  brandDetailData?: any;\n  brandEditVisible?: any;\n  setBrandEditVisible?: any;\n  setBrandDetailData?: any;\n}\n\nconst ModalComponentChildItem = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  setBrandDetailData,\n}) => {\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\n    {},\n    'updateBrand'\n  );\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\n    {},\n    'brandDetail'\n  );\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [myImages, setmyImages]: any = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const brandDetailRes = await handleBrandDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandDetailData.id,\n          },\n        },\n      });\n    };\n\n    getBrandDetail();\n  }, [brandDetailData]);\n\n  useEffect(() => {\n    if (\n      brandDetailState.data &&\n      Object.keys(brandDetailState.data).length > 0\n    ) {\n      const images = brandDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n        setMyGoddamnImages(images);\n      }\n\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([brandDetailState.data.cover]);\n        setCoverImageId(brandDetailState.data.cover['id']);\n      }\n    }\n  }, [brandDetailState.data]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n      // if (prevItem) {\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n      //     setBrandList(updateBrandList);\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    console.log('myReadyToGoImages', myImages);\n\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      // @ts-ignore\n      const images =\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\n\n      if (images[0] && images.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n          body: {\n            image: images,\n          },\n        });\n      } else if (images[0] && images.length < 1) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: images[0].id,\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updateBrandRes = await handleUpdateBrandFetch({\n      urlOptions: {\n        placeHolders: {\n          id: brandDetailData.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName,\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\n      setBrandDetailData({\n        ...brandDetailData,\n        id: brandDetailData['id'] || '',\n        key: brandDetailData['id'] || '',\n        name: updateBrandRes['name'] || '',\n        description: updateBrandRes['description'] || '',\n        // @ts-ignore\n        ...updateBrandRes,\n      });\n\n      openSuccessNotification('Brand Updated!');\n      setBrandEditVisible(false);\n\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\n      // }\n\n      // const index = positionInBrand();\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\n      // console.log('updateBrandList', updatedItem)\n\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n\n      // setBrandList(updateBrandList);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateBrandState['isLoading']) {\n      const error = updateBrandState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateBrandState]);\n\n  const onSwitchChange = (checked: any) => {\n    // console.log(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setBrandEditVisible(false);\n    setBnTags([]);\n    setTags([]);\n    setCoverImageId('');\n    setvisibleMedia(false);\n    setmyImages(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  console.log('myImages', myImages);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  console.log('brandEdit', brandDetailData);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        // set thumbnail with server for edits\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...brandDetailData,\n          ...(brandDetailData &&\n            Object.keys(brandDetailData).length > 0 && {\n              bnMetaTitle:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaTitle &&\n                brandDetailData['bn'].metaTitle,\n              bnMetaDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaDescription &&\n                brandDetailData['bn'].metaDescription,\n              bnName:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].name &&\n                brandDetailData['bn'].name,\n              bnDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].description &&\n                brandDetailData['bn'].description,\n            }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Brand Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      name='name'\n                      placeHolder={''}\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={''}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Description'\n                      value={values.description}\n                      name='description'\n                      placeholder={'This brand...'}\n                      isError={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      errorString={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('description');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Description'\n                      value={values.bnDescription}\n                      placeholder={'এই ব্র্যান্ড...'}\n                      name='bnDescription'\n                      isError={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      errorString={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnDescription');\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Cover</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {brandDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {brandDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    // setCoverImageId(image.id);\n                                    // handleSetImageAsThumnail(image);\n                                    setvisibleMedia(true);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {/* {coverImageId === image.id ? (\n                            <span className='aboutToUploadImagesContainer__item-cover'>\n                              <CheckOutlined />\n                            </span>\n                          ) : (\n                            !coverImageId &&\n                            index === 0 && (\n                              <span className='aboutToUploadImagesContainer__item-cover'>\n                                <CheckOutlined />\n                              </span>\n                            )\n                          )} */}\n                              </div>\n                            );\n                          })}\n\n                        {!myImages ||\n                        // @ts-ignore\n                        (myImages && !(myImages && myImages.length > 0)) ? (\n                          <>\n                            <Tooltip title={'Attach images'}>\n                              <div\n                                onClick={() => {\n                                  setvisibleMedia(true);\n                                }}\n                                className='aboutToUploadImagesContainer__uploadItem'\n                              >\n                                <FileImageFilled />\n                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                  <PlusOutlined />\n                                </span>\n                              </div>\n                            </Tooltip>\n                          </>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setTags}\n                        tags={tags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnTags}\n                        tags={bnTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setBrandEditVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={updateBrandState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisibleMedia}\n              visible={visibleMedia}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              myGoddamnImages={myGoddamnImages}\n              setMyGoddamnImages={setMyGoddamnImages}\n              isModalOpenForImages={false}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewBrand = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  setBrandDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setBrandEditVisible(false);\n  };\n\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      width={'70vw'}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Brand Edit'\n      destroyOnClose={true}\n      visible={brandEditVisible}\n      onCancel={handleCancel}\n      footer={false}\n    >\n      <ModalComponentChildItem\n        brandDetailData={brandDetailData}\n        brandEditVisible={brandEditVisible}\n        setBrandEditVisible={setBrandEditVisible}\n        setBrandDetailData={setBrandDetailData}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport BrandEdit from './BrandEdit';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\n    {},\n    'brandDetail'\n  );\n  const [brandProductsState, handleBrandProductsFetch] = useHandleFetch(\n    {},\n    'brandProducts'\n  );\n\n  const params = useParams();\n  const history = useHistory();\n  const brandId = params['id'];\n  const [brandEditVisible, setBrandEditVisible] = useState(false);\n  const [brandDetailData, setBrandDetailData] = useState(false);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const brandDetailRes = await handleBrandDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (brandDetailRes) {\n        // @ts-ignore\n        setBrandDetailData(brandDetailRes);\n      }\n\n      console.log('brandDetailRes', brandDetailRes);\n    };\n\n    getBrandDetail();\n  }, [brandId]);\n\n  useEffect(() => {\n    const getBrandProducts = async () => {\n      await handleBrandProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandId,\n          },\n        },\n      });\n    };\n\n    getBrandProducts();\n  }, [brandId]);\n\n  console.log('brandProductsState', brandProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Brand Detail</h3>\n\n        {brandDetailState.done &&\n          brandDetailData &&\n          Object.keys(brandDetailData).length > 0 && (\n            <>\n              <BrandEdit\n                brandEditVisible={brandEditVisible}\n                setBrandEditVisible={setBrandEditVisible}\n                brandDetailData={brandDetailData}\n                setBrandDetailData={setBrandDetailData}\n              />\n\n              {isAccess('postCatalogue', roles) && (\n                <Button\n                  onClick={() => setBrandEditVisible(true)}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={brandDetailState.isLoading}\n      >\n        {brandDetailState.done &&\n          brandDetailData &&\n          !(Object.keys(brandDetailData).length > 0) && (\n            <Empty\n              description='No Brand found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {brandDetailState.done &&\n          brandDetailData &&\n          Object.keys(brandDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-coverContainer'>\n                <img\n                  src={\n                    brandDetailData['cover'] &&\n                    brandDetailData['cover']['cover']\n                  }\n                  alt=''\n                />\n              </div>\n              <div className='brandDetailContainer__header-info'>\n                <h2>{brandDetailData['name']}</h2>\n                <h3>{brandDetailData['description']}</h3>\n\n                {brandDetailData['url'] && (\n                  <h3>\n                    URL:\n                    <span>{brandDetailData['url']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      <div className='brandDetailContainer__heading'>\n        <h3>Products</h3>\n      </div>\n      <div className='brandDetailContainer__body'>\n        {brandProductsState.isLoading && <DataTableSkeleton />}\n        {brandProductsState.done && !(brandProductsState.data.length > 0) && (\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No Products exists for this brand'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        )}\n\n        {brandProductsState.done &&\n          brandProductsState.data &&\n          brandProductsState.data.length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                // expandable={{\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                //     rowExpandable: record => record.name !== 'Not Expandable',\n                //   }}\n                // bordered={true}\n                size='small'\n                // pagination={false}\n                dataSource={brandProductsState.data}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title=''\n                  dataIndex='cover'\n                  key='id'\n                  width={'80px'}\n                  className='classnameofthecolumn'\n                  render={(cover, record: any) => (\n                    <>\n                      <img\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        src={cover}\n                        alt='cover img'\n                        style={{\n                          height: '40px',\n                          width: '40px',\n                          objectFit: 'contain',\n                          borderRadius: '3px',\n                          cursor: 'pointer',\n                        }}\n                      />\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Offer Price'\n                  dataIndex='offerPrice'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Price'\n                  dataIndex='price'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Available'\n                  dataIndex='available'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Minimum'\n                  dataIndex='minimum'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete } from 'antd';\n\nimport InputSmall from '../../components/Field/InputSmall';\nimport { useFetch } from '../../hooks';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\n  const [suggestedOptions, setsuggesteOptions] = useState([]);\n  const attributeLisState = useFetch([], [], 'attributeList', {});\n\n  const [attributeItem, setAttributeITem] = useState({\n    name: attribute.name,\n    value: attribute.value,\n  });\n\n  useEffect(() => {\n    const positionInAttribute = () => {\n      return attributeList.map((item) => item.id).indexOf(attribute.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updatedItem = Object.assign({}, attributeList[index], {\n      ...attributeItem,\n    });\n    const updateAttributeList = [\n      ...attributeList.slice(0, index),\n      updatedItem,\n      ...attributeList.slice(index + 1),\n    ];\n    setAttributeList(updateAttributeList);\n  }, [attributeItem]);\n\n  const handleAttributeDelete = () => {\n    const updateAttributeList = attributeList.filter(\n      (item) => item.id !== attribute.id\n    );\n    setAttributeList(updateAttributeList);\n  };\n\n  useEffect(() => {\n    if (\n      attributeLisState.data &&\n      Object.keys(attributeLisState.data).length > 0\n    ) {\n      const options = Object.keys(attributeLisState.data);\n      const manupulatedOptions = options.map((option) => {\n        return {\n          value: option,\n        };\n      });\n      setsuggesteOptions(manupulatedOptions);\n    }\n  }, [attributeLisState.data]);\n\n  const handleAttributeSelect = (value) => {\n    if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\n      if (attributeLisState.data[value]) {\n        setAttributeITem({\n          ...attribute,\n          name: value,\n          value: attributeLisState.data[value],\n        });\n      }\n    } else {\n      setAttributeITem({\n        ...attribute,\n        name: value,\n      });\n    }\n  };\n\n  const handleAttributeValueChange = (e) => {\n    setAttributeITem({\n      ...attribute,\n      value: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <div\n        key={attribute.id}\n        className='addProductGridContainer__item-body-variationCard-item-attribute-item'\n      >\n        <div\n          onClick={handleAttributeDelete}\n          className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'\n        >\n          <DeleteOutlined />\n        </div>\n\n        <h3 className='inputFieldLabel-small'>Name</h3>\n        <AutoComplete\n          value={attribute.name}\n          style={{ width: '100%' }}\n          options={suggestedOptions}\n          placeholder='attribute'\n          onChange={handleAttributeSelect}\n          filterOption={(inputValue, suggestedOption) =>\n            suggestedOption.value\n              .toUpperCase()\n              .indexOf(inputValue.toUpperCase()) !== -1\n          }\n        />\n\n        {attribute.name && (\n          <>\n            <div style={{ marginTop: '10px' }}></div>\n            <InputSmall\n              label='Value'\n              value={attribute.value}\n              name='value'\n              onChange={handleAttributeValueChange}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Complete;\n","import React, { useState, useEffect } from 'react';\nimport Attributes from './Attributes';\nimport AddAttributeValues from '../attribute/AddAttributeValues';\nimport InputSmall from '../../components/Field/InputSmall';\nimport { Button } from 'antd';\nimport { PlusOutlined, CheckOutlined } from '@ant-design/icons';\n\ninterface Props {\n  handleAddPricing: any;\n  pricingItem?: any;\n  handleUpdatePricing?: any;\n  isPricingEditActive?: any;\n}\n\nconst Pricing = ({\n  handleAddPricing,\n  pricingItem,\n  handleUpdatePricing,\n  isPricingEditActive,\n}: Props) => {\n  const [price, setprice] = useState({\n    regular: '',\n    offer: '',\n  });\n  const [stock, setStock] = useState({\n    available: '',\n    minimum: '',\n  });\n\n\n  const [maximumPurchaseLimit,setMaximumPurchaseLimit] = useState(''); \n\n  const [attributeList, setAttributeList] = useState([]);\n\n  useEffect(() => {\n    if (pricingItem && Object.keys(pricingItem).length > 0) {\n      setprice({\n        ...price,\n        ...pricingItem['price'],\n      });\n\n      setStock({\n        ...stock,\n        ...pricingItem['stock'],\n      });\n\n\n      // set maximumPurchaseLimit as default\n      setMaximumPurchaseLimit(pricingItem?.maximumPurchaseLimit)\n\n      const attributeListItems = [];\n      if (\n        pricingItem.attribute &&\n        Object.keys(pricingItem.attribute).length > 0\n      ) {\n        const attributeKeys = Object.keys(pricingItem.attribute);\n        attributeKeys.forEach((attributeKey, index) => {\n          attributeListItems.push({\n            name: attributeKey,\n            value: pricingItem.attribute[attributeKey],\n            id: index,\n          });\n        });\n      }\n\n      setAttributeList(attributeListItems);\n    }\n  }, [pricingItem]);\n\n  console.log('pricingItem', pricingItem);\n  console.log('attributeList', attributeList);\n\n  const handlePriceChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setprice({\n      ...price,\n      [name]: value,\n    });\n  };\n\n  const handleStockChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setStock({\n      ...stock,\n      [name]: value,\n    });\n  };\n\n  const handleSavePricing = (e) => {\n    e.preventDefault();\n\n    if (attributeList.length > 0) {\n      const attribute = {};\n\n      for (let item of attributeList) {\n        console.log('itemofattribute', item);\n        if (item['value'] && item['name']) {\n          attribute[item['name']] = item['value'];\n        }\n      }\n\n      const priceItem = {\n        price,\n        stock,\n        attribute,\n        maximumPurchaseLimit\n      };\n\n\n      // resetting the fields\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setMaximumPurchaseLimit(''); \n      setAttributeList([]);\n\n      handleAddPricing(priceItem);\n    } else {\n      const priceItem = {\n        price: price,\n        stock: stock,\n        maximumPurchaseLimit,\n        attribute: {},\n      };\n\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setMaximumPurchaseLimit(''); \n      setAttributeList([]);\n      handleAddPricing(priceItem);\n    }\n  };\n\n  const handleUpdatePricingItem = (e) => {\n    e.preventDefault();\n\n    if (attributeList.length > 0) {\n      const attribute = {};\n\n      for (let item of attributeList) {\n        console.log('itemofattribute', item);\n        if (item['value'] && item['name']) {\n          attribute[item['name']] = item['value'];\n        }\n      }\n\n      const priceItem = {\n        price,\n        stock,\n        attribute,\n        maximumPurchaseLimit,\n        id: pricingItem.id,\n      };\n\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setAttributeList([]);\n      setMaximumPurchaseLimit(''); \n      handleUpdatePricing(priceItem);\n\n    } else {\n      const priceItem = {\n        price,\n        stock,\n        attribute: {},\n        maximumPurchaseLimit,\n        id: pricingItem.id,\n      };\n\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setAttributeList([]);\n      setMaximumPurchaseLimit(''); \n      handleUpdatePricing(priceItem);\n    }\n  };\n\n  const handleAddAttribute = () => {\n    setAttributeList([\n      ...attributeList,\n      {\n        name: '',\n        value: '',\n        id: `${attributeList.length}`,\n      },\n    ]);\n  };\n\n  const getiCreatePricingIsDisabled = () => {\n    if (!price.regular) {\n      return true;\n    } else return false;\n  };\n\n  const handleMaximumPurChaseLimit = (e) => {\n    setMaximumPurchaseLimit(e.target.value)\n  }\n\n  // console.log('attributeList', attributeList);\n\n  return (\n    <>\n      <div className='addProductGridContainer__item-body-variationCard'>\n        <div className='addProductGridContainer__item-body-variationCard-left'>\n          <div className='addProductGridContainer__item-body-variationCard-item'>\n            <h4>Price</h4>\n            <div className='addProductGridContainer__item-body-variationCard-item-container'>\n              <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                <InputSmall\n                  min={0}\n                  type='number'\n                  label='Regular  *'\n                  value={price.regular}\n                  name='regular'\n                  onChange={handlePriceChange}\n                />\n              </div>\n              <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n                <InputSmall\n                  min={0}\n                  type='number'\n                  size='small'\n                  label='Offer'\n                  value={price.offer}\n                  name='offer'\n                  onChange={handlePriceChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className='addProductGridContainer__item-body-variationCard-right'>\n            <div className='addProductGridContainer__item-body-variationCard-item'>\n              <h4>Attributes</h4>\n              <div className='addProductGridContainer__item-body-variationCard-item-attribute'>\n                {attributeList.map((attribute) => {\n                  return (\n                    <Attributes\n                      attribute={attribute}\n                      attributeList={attributeList}\n                      setAttributeList={setAttributeList}\n                    />\n                  );\n                })}\n                <Button\n                  size='small'\n                  onClick={handleAddAttribute}\n                  style={{\n                    width: '180px',\n                    minHeight: '75px',\n                    marginTop: '0px',\n                    borderRadius: '8px',\n                  }}\n                  type='dashed'\n                  icon={<PlusOutlined />}\n                >\n                  Add Attribute\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n              className='addProductGridContainer__item-body-variationCard-item'\n            >\n              <h4>Stock</h4>\n              <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                  <InputSmall\n                    min={0}\n                    type='number'\n                    label='Available'\n                    value={stock.available}\n                    name='available'\n                    onChange={handleStockChange}\n                  />\n                </div>\n                <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n                  <InputSmall\n                    min={0}\n                    type='number'\n                    label='Minimum'\n                    value={stock.minimum}\n                    name='minimum'\n                    onChange={handleStockChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n              className='addProductGridContainer__item-body-variationCard-item'\n            >\n              <h4>\n                Maximum Purchase Limit\n              </h4>\n              <div className='addProductGridContainer__item-body-variationCard-item-container'>\n              <InputSmall\n                    min={0}\n                    type='number'\n                    // label='Available'\n                    value={maximumPurchaseLimit}\n                    name='maximumPurchaseLimit'\n                    onChange={handleMaximumPurChaseLimit}\n                  />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <Button\n          // type=\"primary\"\n         \n          icon={<PlusOutlined />}\n          onClick={() => setAddNewCategoryVisible(true)}\n        >\n        Add New\n      </Button> */}\n\n      <Button\n        style={{\n          marginLeft: '10px',\n        }}\n        onClick={\n          isPricingEditActive ? handleUpdatePricingItem : handleSavePricing\n        }\n        disabled={getiCreatePricingIsDisabled()}\n        className='btnAddToPrice'\n        icon={<CheckOutlined />}\n      >\n        {isPricingEditActive ? 'Update Pricing' : 'Add To Pricing'}\n      </Button>\n    </>\n  );\n};\n\nexport default Pricing;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useQueryCache } from 'react-query';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport Pricing from './Pricing';\nimport MetaTags from '../category/MetaTags';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n  model: '',\n  unit: '',\n  regular: '',\n  offer: '',\n  available: '',\n  minimum: '',\n  image: [],\n  url: '',\n  cover: '',\n  pricing: [],\n  venue: '',\n  date: '',\n  time: '',\n  purchaseLimit: null,\n  bnUnit: '',\n  bnName: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  productList?: any;\n  setProductList?: any;\n  productListState?: any;\n}\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList,\n  setProductList,\n  productListState\n}: Props) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'addProduct'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [bnDescription, setBNDescription] = useState('');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n  const [editpricingItem, setEditPricingItem] = useState({});\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('1');\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\n  const cache = useQueryCache();\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n        return image.id;\n      })\n      : [];\n\n    const addProductRes = await handleAddProductFetch({\n      body: {\n        name: values.name.trim(),\n        description: description,\n        model: values.model,\n        unit: values.unit,\n        category: categoryids,\n        tags: tagIds,\n        brand: brandId,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        pricing: pricing,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnMetaTags.join(','),\n          name: values.bnName.trim(),\n          unit: values.metaUnit,\n          description: bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Product Created');\n      setAddNewCategoryVisible(false);\n\n      // console.log('addProductRes22', addProductRes);\n      // setProductList([\n      //   {\n      //     // @ts-ignore\n      //     ...addProductRes,\n      //     id: addProductRes['_id'] || '',\n      //     key: addProductRes['_id'] || '',\n      //     name: addProductRes['name'] || '',\n      //     description: addProductRes['description'] || '',\n      //     cover: addProductRes['cover'] || '',\n      //   },\n      //   ...productList,\n      // ]);\n\n      // productListState\n\n\n      const queries = cache.getQueries();\n      const queriesKeyMap = queries.filter(query => {\n        const queryKey = query?.queryKey;\n        // @ts-ignore\n        return queryKey?.[0] === 'product' && typeof queryKey?.[1] === 'number'\n      }).map(query => query?.queryKey);\n\n      const firstQueryKey = queriesKeyMap?.[0];\n\n\n      if (firstQueryKey) {\n        // @ts-ignore\n        cache.setQueryData(firstQueryKey, ((prev) => {\n          let newProductItem = {\n            ...addProductRes,\n            id: addProductRes['_id'] || '',\n            key: addProductRes['_id'] || '',\n            name: addProductRes['name'] || '',\n            description: addProductRes['description'] || '',\n            cover: addProductRes['cover'] || '',\n          }\n          return {\n            // @ts-ignore\n            ...prev,\n            // @ts-ignore\n            data: [newProductItem, ...prev?.data],\n          }\n        }))\n      }\n\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !(pricing.length > 0) ||\n      !(categoryids.length > 0) ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => { };\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleAddPricing = (priceItem) => {\n    console.log('addedPricing', priceItem);\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleUpdatePricing = (priceItem) => {\n    const positionInPricing = () => {\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\n    };\n\n    const index = positionInPricing();\n\n    // @ts-ignore\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\n    const updatePricingList = [\n      ...pricing.slice(0, index),\n      updatedItem,\n      ...pricing.slice(index + 1),\n    ];\n\n    setPricing(updatePricingList);\n\n    message.info('Product Pricing Updated');\n    seTisPricingEditActive(true);\n    setpricingTagActiveKey('2');\n  };\n\n  const handleEditPricing = (id) => {\n    seTisPricingEditActive(true);\n    const pricingItem = pricing.find((item) => item.id === id);\n    if (pricingItem) {\n      setEditPricingItem(pricingItem);\n    }\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      addProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  console.log('pricingingi', pricing);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n          <>\n            <Modal\n              style={{\n                top: '40px',\n              }}\n              bodyStyle={{\n                margin: 0,\n                padding: 0,\n              }}\n              width={'70vw'}\n              title='Add New Product'\n              visible={addNewCategoryVisible}\n              onOk={(e: any) => handleSubmit(e)}\n              onCancel={handleCancel}\n              okText='Create'\n              okButtonProps={{\n                loading: isSubmitting,\n                htmlType: 'submit',\n              }}\n            >\n              <section className='addProductGridContainer'>\n                <div className='addProductGridContainer__left'>\n                  <div className='addProductGridContainer__name'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Product Information *</h3>\n\n                      <div\n                        className={\n                          values.name && values.name.length > 2\n                            ? 'checkicon-active'\n                            : 'checkicon'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n                    <div className='addProductGridContainer__item-body'>\n                      <Input\n                        label='Name *'\n                        value={values.name}\n                        placeHolder={'Rafty ox'}\n                        name='name'\n                        isError={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['name'])\n                        }\n                        errorString={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['name'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('name');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Name'\n                        value={values.bnName}\n                        placeHolder={'রাফতি অক্স'}\n                        name='bnName'\n                        isError={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnName'])\n                        }\n                        errorString={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnName');\n                        }}\n                      />\n\n                      {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n\n                      {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                      <Input\n                        label='Unit'\n                        value={values.unit}\n                        name='unit'\n                        placeHolder={'KG,POUND,GM'}\n                        isError={\n                          (touched.unit && errors.unit) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['unit'])\n                        }\n                        errorString={\n                          (touched.unit && errors.unit) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['unit'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('unit');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Unit'\n                        value={values.bnUnit}\n                        placeHolder={'কেজি,গ্রাম'}\n                        name='bnUnit'\n                        isError={\n                          (touched.bnUnit && errors.bnUnit) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnUnit'])\n                        }\n                        errorString={\n                          (touched.bnUnit && errors.bnUnit) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnUnit'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnUnit');\n                        }}\n                      />\n\n                      <Input\n                        label='Model Number'\n                        value={values.model}\n                        name='model'\n                        isError={\n                          (touched.model && errors.model) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['model'])\n                        }\n                        errorString={\n                          (touched.model && errors.model) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['model'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('model');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Description</h3>\n\n                      <div\n                        style={{\n                          width: '100%',\n                          maxWidth: '100%',\n                        }}\n                      >\n                        <CKEditor\n                          editor={ClassicEditor}\n                          data={description}\n                          onInit={(editor) => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log('Editor is ready to use!', editor);\n                          }}\n                          onChange={(event, editor) => {\n                            const data = editor.getData();\n                            setDescription(data);\n                          }}\n                          onBlur={(event, editor) => {\n                            console.log('Blur.', editor);\n                          }}\n                          onFocus={(event, editor) => {\n                            console.log('Focus.', editor);\n                          }}\n                        />\n                      </div>\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Description</h3>\n\n                      <div\n                        style={{\n                          width: '100%',\n                          maxWidth: '100%',\n                        }}\n                      >\n                        <CKEditor\n                          editor={ClassicEditor}\n                          data={bnDescription}\n                          onInit={(editor) => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log('Editor is ready to use!', editor);\n                          }}\n                          onChange={(event, editor) => {\n                            const data = editor.getData();\n                            setBNDescription(data);\n                          }}\n                          onBlur={(event, editor) => {\n                            console.log('Blur.', editor);\n                          }}\n                          onFocus={(event, editor) => {\n                            console.log('Focus.', editor);\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__price'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Product Pricing *</h3>\n\n                      <div\n                        className={\n                          pricing && pricing.length > 0\n                            ? 'checkicon-active'\n                            : 'checkicon'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n\n                    <div className='addProductGridContainer__item-body'>\n                      <Tabs\n                        animated={true}\n                        tabPosition='top'\n                        type='card'\n                        activeKey={pricingTagActiveKey}\n                        onChange={(value) => {\n                          setpricingTagActiveKey(`${value}`);\n                        }}\n                      >\n                        <TabPane tab='Add Variation' key='1'>\n                          <Pricing\n                            handleAddPricing={handleAddPricing}\n                            pricingItem={editpricingItem}\n                            handleUpdatePricing={handleUpdatePricing}\n                            isPricingEditActive={isPricingEditActive}\n                          />\n                        </TabPane>\n                        <TabPane tab='Pricing List' key='2'>\n                          <div className='addProductGridContainer__item-body-pricingContainer'>\n                            {pricing.length > 0 &&\n                              pricing.map((item) => {\n                                return (\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\n                                      {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                      <span\n                                        className='pricingEditIcon'\n                                        onClick={() => {\n                                          handleEditPricing(item.id);\n                                          setpricingTagActiveKey('1');\n                                        }}\n                                      >\n                                        <EditOutlined />\n                                      </span>\n                                      <span\n                                        className='pricingDeleteIcon'\n                                        onClick={() =>\n                                          handleDeletePricing(item.id)\n                                        }\n                                      >\n                                        <DeleteOutlined />\n                                      </span>\n                                    </div>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                      <div>\n                                        <h3>Price</h3>\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                          {item.price.offer ? (\n                                            <>\n                                              <h4>{item.price.offer}</h4>/\n                                            <h5\n                                                style={{\n                                                  textDecoration: 'line-through',\n                                                }}\n                                              >\n                                                {item.price.regular}\n                                              </h5>\n                                            </>\n                                          ) : (\n                                              <h4>{item.price.regular}</h4>\n                                            )}\n                                        </div>\n                                      </div>\n\n                                      {item.stock && item.stock['available'] && (\n                                        <div>\n                                          <Badge\n                                            overflowCount={999}\n                                            count={item.stock.available}\n                                          >\n                                            <h3>Stock</h3>\n                                          </Badge>\n                                          {item.stock['minimum'] && (\n                                            <>\n                                              <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                                <div>\n                                                  <h6>\n                                                    min\n                                                  <Badge\n                                                      className='site-badge-count-4'\n                                                      overflowCount={999}\n                                                      count={item.stock.minimum}\n                                                    />\n                                                  </h6>\n                                                </div>\n                                              </div>\n                                            </>\n                                          )}\n                                        </div>\n                                      )}\n\n                                      {Boolean(item?.maximumPurchaseLimit) && (\n                                        <div>\n                                          <h3>Maximum Purchase Limit</h3>\n                                          <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                            <h4>{item?.maximumPurchaseLimit}</h4>\n                                          </div>\n                                        </div>\n                                      )}\n                                    </div>\n\n                                    {item.attribute &&\n                                      Object.values(item.attribute).length >\n                                      0 && (\n                                        <>\n                                          <h3>Attributes</h3>\n                                          <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                            {item.attribute &&\n                                              Object.keys(item.attribute).length >\n                                              0 &&\n                                              Object.keys(item.attribute).map(\n                                                (attributeItem) => {\n                                                  return (\n                                                    <div>\n                                                      <h6>{attributeItem}</h6>\n                                                      <h4>\n                                                        {\n                                                          item.attribute[\n                                                          attributeItem\n                                                          ]\n                                                        }\n                                                      </h4>\n                                                    </div>\n                                                  );\n                                                }\n                                              )}\n                                          </div>\n                                        </>\n                                      )}\n                                  </div>\n                                );\n                              })}\n\n                            {!(pricing.length > 0) && (\n                              <div\n                                style={{\n                                  width: '100%',\n                                  display: 'flex',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                <Empty\n                                  description='No Pricing added'\n                                  image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                />\n                              </div>\n                            )}\n                          </div>\n                        </TabPane>\n                      </Tabs>\n\n                      <div className='addProductGridContainer__item-body-container'></div>\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__image'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Image</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          'Click on the image to select cover image, By default 1st image is selected as cover'\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer__item-body'>\n                      <div className='aboutToUploadImagesContainer'>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => setCoverImageId(image.id)}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => handleImagesDelete(image.id)}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {coverImageId === image.id ? (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                ) : (\n                                    !coverImageId &&\n                                    index === 0 && (\n                                      <span className='aboutToUploadImagesContainer__item-cover'>\n                                        <CheckOutlined />\n                                      </span>\n                                    )\n                                  )}\n                              </div>\n                            );\n                          })}\n\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisible(true);\n                              setisModalOpenForImages(true);\n                              setisModalOpenForThumbnail(false);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__image'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Meta Data</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer__item-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['metaDescription'])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['metaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnMetaDescription'])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            addProductState.error['error']['bnMetaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>\n                        Meta Tags (grocery,fashion)\n                    </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setMetaTags}\n                        tags={metaTags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>\n                        BN Meta Tags (মুদিখানা,ফ্যাশন)\n                    </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnMetaTags}\n                        tags={bnMetaTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__right'>\n                  <div className='addProductGridContainer__category'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Categories *</h3>\n\n                        <Tooltip\n                          color='red'\n                          visible={\n                            addProductState.error['error']['category'] &&\n                            !(categoryids.length > 0)\n                          }\n                          placement='left'\n                          title={'Select at least one category'}\n                        >\n                          <div\n                            className={\n                              !(categoryids.length > 0) &&\n                                !addProductState.error['error']['category']\n                                ? 'checkicon'\n                                : addProductState.error['error']['category']\n                                  ? 'checkicon-error'\n                                  : 'checkicon-active'\n                            }\n                          >\n                            <CheckCircleOutlined />\n                          </div>\n                        </Tooltip>\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Categories\n                          setCategoryOptions={setCategoryOptions}\n                          categoryOptions={categoryOptions}\n                          setcategoryIds={setcategoryIds}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__tag'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Tags</h3>\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Tags\n                          setSelectedTags={setSelectedTags}\n                          selectedTags={selectedTags}\n                          setTagIds={setTagIds}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__brand'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Brand</h3>\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Brands setBrandId={setBrandId} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n            </Modal>\n\n            <MediaLibrary\n              setvisible={setvisible}\n              visible={visible}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              setmyThumbnailImage={setmyThumbnailImage}\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\n              isModalOpenForImages={isModalOpenForImages}\n            />\n          </>\n        )}\n    </Formik>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n  [regular input field] [offer inputfield]\n\nStock [title]\n  [available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n  [add attributes name]\n    [add attrubutes value]\n\n  [add attributes name]\n    [add attrubutes value\n\n*/ //\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { useQueryCache } from 'react-query'\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport Pricing from './Pricing';\nimport MetaTags from '../category/MetaTags';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n  model: '',\n  unit: '',\n  regular: '',\n  offer: '',\n  available: '',\n  minimum: '',\n  image: [],\n  url: '',\n  cover: '',\n  pricing: [],\n  venue: '',\n  date: '',\n  time: '',\n  purchaseLimit: null,\n  bnUnit: '',\n  bnName: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  productEditVisible?: any;\n  setProductEditVisible?: any;\n  productDetailData?: any;\n  productList?: any;\n  setProductList?: any;\n  productListState?: any;\n}\n\nconst ModalChildComponent = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductList,\n  productList,\n  productListState\n}) => {\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\n    {},\n    'updateProduct'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'productDetailById'\n  );\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [bnDescription, setBNDescription] = useState('');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n  const [editpricingItem, setEditPricingItem] = useState({});\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('2');\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\n  const cache = useQueryCache();\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id || productDetailData._id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const productDetailData = productDetailState.data;\n\n      if (productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const selectedTagNames = productDetailData.tags.map(\n          (item) => item.name\n        );\n\n        const selectedTagIds = productDetailData.tags.map((item) => item._id);\n\n        setSelectedTags(selectedTagNames);\n        console.log('selectedTagIds55', selectedTagIds);\n        setTagIds(selectedTagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category.map((item) => item.id);\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.pricing &&\n        productDetailData.pricing\n      ) {\n        setPricing(productDetailData.pricing);\n      } else {\n        setPricing([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.date &&\n        productDetailData.date\n      ) {\n        setDateFeild(productDetailData.date);\n      } else {\n        setDateFeild('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.time &&\n        productDetailData.time\n      ) {\n        setTimeFeild(productDetailData.time);\n      } else {\n        setTimeFeild('');\n      }\n\n      if (productDetailData && productDetailData.description) {\n        setDescription(productDetailData.description);\n      } else {\n        setDescription('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['description']\n      ) {\n        setBNDescription(productDetailData.bn['description']);\n      } else {\n        setBNDescription('');\n      }\n    }\n\n    console.log('runnedBitch');\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    console.log('thumbnailRes', thumbnailRes);\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n        return image.id;\n      })\n      : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updatedProductRes = await handleUpdateProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: description,\n        model: values.model,\n        unit: values.unit,\n        category: categoryOptions,\n        tags: tagIds,\n        brand: brandId,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        pricing: pricing,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          unit: values.metaUnit,\n          description: bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\n      openSuccessNotification('Product Updated');\n\n\n      const queries = cache.getQueries();\n      const queriesKeyMap = queries.filter(query => {\n        const queryKey = query?.queryKey;\n        // @ts-ignore\n        return queryKey?.[0] === 'product' && typeof queryKey?.[1] === 'number'\n      }).map(query => query?.queryKey);\n\n      const idQueryKey = queriesKeyMap.find(key => {\n        let isKey = false;\n        // @ts-ignore\n        if (cache.getQueryData(key)?.data.find(item => item.id === productDetailData.id)) {\n          isKey = true;\n        }\n        return isKey;\n      })\n      if (idQueryKey?.[0]) {\n        // @ts-ignore\n        cache.setQueryData(idQueryKey, ((prev) => {\n          const productList = prev?.data;\n          const positionInAttribute = () => {\n            return productList.map((item) => item.id).indexOf(productDetailData.id);\n          };\n\n          const index = positionInAttribute();\n\n          function getCover(id) {\n            if (!id || !myImages || !myImages[0]) {\n              return '';\n            } else {\n              if (myImages && myImages.length > 0) {\n                const item = myImages.find((item) => item.id === id);\n                if (item) {\n                  return item.cover;\n                }\n              }\n            }\n          }\n\n          // @ts-ignore\n          const updatedItem = Object.assign({}, productList[index], {\n            ...productDetailData,\n            ...updatedProductRes,\n            id: productDetailData.id || productDetailData._id || values.id || values._id,\n\n            cover: getCover(coverImageId),\n          });\n          const updateProductList = [\n            ...productList.slice(0, index),\n            updatedItem,\n            ...productList.slice(index + 1),\n          ];\n\n\n          return {\n            // @ts-ignore\n            ...prev,\n            // @ts-ignore\n            data: updateProductList,\n          }\n        }))\n      }\n\n\n      // setProductList(updateProductList);\n\n      setProductEditVisible(false);\n\n      // setProductDetailData({\n      //     // @ts-ignore\n      //     ...updatedProductRes,\n      //     category: productDetailData.category,\n      //     brand: productDetailData.brand,\n      //     tags: productDetailData.tags,\n      //     cover: productDetailData.cover,\n      //     image: productDetailData.image,\n      // });\n\n      // console.log('updatedProductRes', updatedProductRes);\n      // setProductList([...productList, {\n      //     id: updatedProductRes['id'] || '',\n      //     key: updatedProductRes['id'] || '',\n      //     name: updatedProductRes['name'] || '',\n      //     description: updatedProductRes['description'] || '',\n      //     // @ts-ignore\n      //     ...updatedProductRes\n      // }])\n      // @ts-ignore\n      //   setmyImages([]);\n      //   setCoverImageId('');\n      //   setPricing([]);\n      //   setTagIds([]);\n      //   setSelectedTags([]);\n      //   setBrandId('');\n      //   setcategoryIds([]);\n      //   setCategoryOptions([]);\n      //   actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('updateProductStaet', updateProductState);\n  useEffect(() => {\n    if (!updateProductState['isLoading']) {\n      const error = updateProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateProductState]);\n\n  const handleCancel = (e: any) => {\n    setProductEditVisible(false);\n    // setmyImages(false);\n    // setCoverImageId('');\n    // setPricing([]);\n    // setTagIds([]);\n    // setSelectedTags([]);\n    // setBrandId('');\n    // setcategoryIds([]);\n    // setCategoryOptions([]);\n    // setMetaTags([]);\n    // setBnMetaTags([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !(pricing.length > 0) ||\n      !(categoryOptions.length > 0) ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => { };\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleUpdatePricing = (priceItem) => {\n    const positionInPricing = () => {\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\n    };\n\n    const index = positionInPricing();\n\n    // @ts-ignore\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\n    const updatePricingList = [\n      ...pricing.slice(0, index),\n      updatedItem,\n      ...pricing.slice(index + 1),\n    ];\n\n    setPricing(updatePricingList);\n\n    message.info('Product Pricing Updated');\n    seTisPricingEditActive(true);\n    setpricingTagActiveKey('2');\n  };\n\n  const handleAddPricing = (priceItem) => {\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const handleEditPricing = (id) => {\n    seTisPricingEditActive(true);\n    const pricingItem = pricing.find((item) => item.id === id);\n    if (pricingItem) {\n      setEditPricingItem(pricingItem);\n    }\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      updateProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  console.log('productDetailData', productDetailData);\n  console.log('productDetailState', productDetailState);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0 &&\n      productDetailState.data.metaTags\n    ) {\n      const metaTags = productDetailState.data.metaTags.split(',');\n\n\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, [productDetailState['done']]);\n\n  console.log('productDetailData');\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...{\n            ...productDetailData,\n            ...(productDetailState['data'] &&\n              Object.keys(productDetailState['data']).length > 0 &&\n              productDetailState['data']['bn'] && {\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n              bnMetaDescription:\n                productDetailState['data']['bn'].metaDescription,\n              bnName: productDetailState['data']['bn'].name,\n              metaUnit: productDetailState['data']['bn'].unit,\n              bnDescription: productDetailState['data']['bn'].description,\n            }),\n          },\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n            <>\n              <section className='addProductGridContainer'>\n                <div className='addProductGridContainer__left'>\n                  <div className='addProductGridContainer__name'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Product Information *</h3>\n                      <div\n                        className={\n                          values.name && values.name.length > 2\n                            ? 'checkicon-active'\n                            : 'checkicon'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n                    <div className='addProductGridContainer__item-body'>\n                      <Input\n                        label='Name *'\n                        value={values.name}\n                        placeHolder={'Rafty ox'}\n                        name='name'\n                        isError={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['name'])\n                        }\n                        errorString={\n                          (touched.name && errors.name) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['name'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('name');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Name'\n                        value={values.bnName}\n                        placeHolder={'রাফতি অক্স'}\n                        name='bnName'\n                        isError={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnName'])\n                        }\n                        errorString={\n                          (touched.bnName && errors.bnName) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnName');\n                        }}\n                      />\n\n                      {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n\n                      {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                      <Input\n                        label='Unit'\n                        value={values.unit}\n                        name='unit'\n                        placeHolder={'KG,POUND,GM'}\n                        isError={\n                          (touched.unit && errors.unit) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['unit'])\n                        }\n                        errorString={\n                          (touched.unit && errors.unit) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['unit'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('unit');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Unit'\n                        value={values.bnUnit}\n                        placeHolder={'কেজি,গ্রাম'}\n                        name='bnUnit'\n                        isError={\n                          (touched.bnUnit && errors.bnUnit) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnUnit'])\n                        }\n                        errorString={\n                          (touched.bnUnit && errors.bnUnit) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnUnit'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnUnit');\n                        }}\n                      />\n\n                      <Input\n                        label='Model Number'\n                        value={values.model}\n                        name='model'\n                        isError={\n                          (touched.model && errors.model) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['model'])\n                        }\n                        errorString={\n                          (touched.model && errors.model) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['model'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('model');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Description</h3>\n\n                      <div\n                        style={{\n                          width: '100%',\n                          maxWidth: '100%',\n                        }}\n                      >\n                        <CKEditor\n                          editor={ClassicEditor}\n                          data={description}\n                          onInit={(editor) => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log('Editor is ready to use!', editor);\n                          }}\n                          onChange={(event, editor) => {\n                            const data = editor.getData();\n                            setDescription(data);\n                          }}\n                          onBlur={(event, editor) => {\n                            console.log('Blur.', editor);\n                          }}\n                          onFocus={(event, editor) => {\n                            console.log('Focus.', editor);\n                          }}\n                        />\n                      </div>\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Description</h3>\n\n                      <div\n                        style={{\n                          width: '100%',\n                          maxWidth: '100%',\n                        }}\n                      >\n                        <CKEditor\n                          editor={ClassicEditor}\n                          data={bnDescription}\n                          onInit={(editor) => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log('Editor is ready to use!', editor);\n                          }}\n                          onChange={(event, editor) => {\n                            const data = editor.getData();\n                            setBNDescription(data);\n                          }}\n                          onBlur={(event, editor) => {\n                            console.log('Blur.', editor);\n                          }}\n                          onFocus={(event, editor) => {\n                            console.log('Focus.', editor);\n                          }}\n                        />\n                      </div>\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      >\n                        {' '}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__price'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Product Pricing *</h3>\n\n                      <div\n                        className={\n                          pricing && pricing.length > 0\n                            ? 'checkicon-active'\n                            : 'checkicon'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n\n                    <div className='addProductGridContainer__item-body'>\n                      <Tabs\n                        animated={true}\n                        tabPosition='top'\n                        type='card'\n                        activeKey={pricingTagActiveKey}\n                        onChange={(value) => {\n                          setpricingTagActiveKey(`${value}`);\n                        }}\n                      >\n                        <TabPane tab='Add Variation' key='1'>\n                          <Pricing\n                            handleAddPricing={handleAddPricing}\n                            pricingItem={editpricingItem}\n                            handleUpdatePricing={handleUpdatePricing}\n                            isPricingEditActive={isPricingEditActive}\n                          />\n                        </TabPane>\n                        <TabPane tab='Pricing List' key='2'>\n                          <div className='addProductGridContainer__item-body-pricingContainer'>\n                            {pricing.length > 0 &&\n                              pricing.map((item) => {\n                                return (\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\n                                      {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                      <span\n                                        className='pricingEditIcon'\n                                        onClick={() => {\n                                          handleEditPricing(item.id);\n                                          setpricingTagActiveKey('1');\n                                        }}\n                                      >\n                                        <EditOutlined />\n                                      </span>\n                                      <span\n                                        className='pricingDeleteIcon'\n                                        onClick={() =>\n                                          handleDeletePricing(item.id)\n                                        }\n                                      >\n                                        <DeleteOutlined />\n                                      </span>\n                                    </div>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                      <div>\n                                        <h3>Price</h3>\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                          {item.price.offer ? (\n                                            <>\n                                              <h4>{item.price.offer}</h4>/\n                                            <h5\n                                                style={{\n                                                  textDecoration: 'line-through',\n                                                }}\n                                              >\n                                                {item.price.regular}\n                                              </h5>\n                                            </>\n                                          ) : (\n                                              <h4>{item.price.regular}</h4>\n                                            )}\n                                        </div>\n                                      </div>\n\n                                      {item.stock && item.stock['available'] && (\n                                        <div>\n                                          <Badge\n                                            overflowCount={999}\n                                            count={item.stock.available}\n                                          >\n                                            <h3>Stock</h3>\n                                          </Badge>\n                                          {item.stock['minimum'] && (\n                                            <>\n                                              <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                                <div>\n                                                  <h6>\n                                                    min\n                                                  <Badge\n                                                      className='site-badge-count-4'\n                                                      overflowCount={999}\n                                                      count={item.stock.minimum}\n                                                    />\n                                                  </h6>\n                                                </div>\n                                              </div>\n                                            </>\n                                          )}\n                                        </div>\n                                      )}\n\n\n                                      {Boolean(item?.maximumPurchaseLimit) && (\n                                        <div>\n                                          <h3>Maximum Purchase Limit</h3>\n                                          <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                            <h4>{item?.maximumPurchaseLimit}</h4>\n                                          </div>\n                                        </div>\n                                      )}\n\n                                    </div>\n\n                                    {item.attribute &&\n                                      Object.values(item.attribute).length >\n                                      0 && (\n                                        <>\n                                          <h3>Attributes</h3>\n                                          <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                            {item.attribute &&\n                                              Object.keys(item.attribute).length >\n                                              0 &&\n                                              Object.keys(item.attribute).map(\n                                                (attributeItem) => {\n                                                  return (\n                                                    <div>\n                                                      <h6>{attributeItem}</h6>\n                                                      <h4>\n                                                        {\n                                                          item.attribute[\n                                                          attributeItem\n                                                          ]\n                                                        }\n                                                      </h4>\n                                                    </div>\n                                                  );\n                                                }\n                                              )}\n                                          </div>\n                                        </>\n                                      )}\n                                  </div>\n                                );\n                              })}\n\n                            {!(pricing.length > 0) && (\n                              <div\n                                style={{\n                                  width: '100%',\n                                  display: 'flex',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                <Empty\n                                  description='No Pricing added'\n                                  image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                />\n                              </div>\n                            )}\n                          </div>\n                        </TabPane>\n                      </Tabs>\n\n                      <div className='addProductGridContainer__item-body-container'></div>\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__image'>\n                    <div className='addProductGridContainer__item-header'>\n                      <h3>Image</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          'Click on the image to select cover image, By default 1st image is selected as cover'\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n\n                    <div\n                      style={{\n                        padding: '10px',\n                      }}\n                      className='aboutToUploadImagesContainer'\n                    >\n                      {productDetailState.isLoading && (\n                        <div\n                          style={{\n                            padding: '20px 0',\n                          }}\n                        >\n                          <Spin />\n                        </div>\n                      )}\n                      {productDetailState.done && (\n                        <>\n                          {myImages &&\n                            // @ts-ignore\n                            myImages.length > 0 &&\n                            myImages.map((image, index) => {\n                              return (\n                                <div className='aboutToUploadImagesContainer__item'>\n                                  <div\n                                    className='aboutToUploadImagesContainer__item-imgContainer'\n                                    onClick={() => {\n                                      setCoverImageId(image.id);\n                                      handleSetImageAsThumnail(image);\n                                    }}\n                                  >\n                                    <img src={image.cover} alt={image.alt} />\n                                  </div>\n\n                                  <span\n                                    onClick={() => {\n                                      handleImagesDelete(image.id);\n                                      handleDetachSingleImage(image.id);\n                                    }}\n                                    className='aboutToUploadImagesContainer__item-remove'\n                                  >\n                                    <CloseOutlined />\n                                  </span>\n\n                                  {coverImageId === image.id ? (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  ) : (\n                                      !coverImageId &&\n                                      index === 0 && (\n                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                          <CheckOutlined />\n                                        </span>\n                                      )\n                                    )}\n                                </div>\n                              );\n                            })}\n\n                          <Tooltip title={'Attach images'}>\n                            <div\n                              onClick={() => {\n                                setvisible(true);\n                                setisModalOpenForImages(true);\n                                setisModalOpenForThumbnail(false);\n                              }}\n                              className='aboutToUploadImagesContainer__uploadItem'\n                            >\n                              {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                              <FileImageFilled />\n                              {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                <PlusOutlined />\n                              </span>\n                            </div>\n                          </Tooltip>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__right'>\n                  <div className='addProductGridContainer__category'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Categories *</h3>\n\n                        {/* <Tooltip\n                        color='red'\n                        visible={\n                          updateProductState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !updateProductState.error['error']['category']\n                              ? 'checkicon'\n                              : updateProductState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                              !updateProductState.error['error']['category']\n                              ? 'checkicon'\n                              : updateProductState.error['error']['category']\n                                ? 'checkicon-error'\n                                : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Categories\n                          setCategoryOptions={setCategoryOptions}\n                          categoryOptions={categoryOptions}\n                          setcategoryIds={setcategoryIds}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__tag'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Tags</h3>\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Tags\n                          setSelectedTags={setSelectedTags}\n                          selectedTags={selectedTags}\n                          setTagIds={setTagIds}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__brand'>\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Brand</h3>\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Brands\n                          productDetailState={productDetailState}\n                          brandId={brandId}\n                          setBrandId={setBrandId}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    className='addProductGridContainer__brand'\n                    style={{\n                      marginTop: '10px',\n                    }}\n                  >\n                    <div className='addProductGridContainer-rightItemContainer'>\n                      <div className='addProductGridContainer-rightItemContainer-header'>\n                        <h3>Meta Tags</h3>\n\n                        <Tooltip\n                          placement='left'\n                          title={\n                            \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                          }\n                        >\n                          <a href='###'>\n                            <InfoCircleOutlined />\n                          </a>\n                        </Tooltip>\n                      </div>\n                      <div className='addProductGridContainer-rightItemContainer-body'>\n                        <Input\n                          label='Meta title'\n                          value={values.metaTitle}\n                          placeHolder={'...'}\n                          name='metaTitle'\n                          isError={\n                            (touched.metaTitle && errors.metaTitle) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error']['metaTitle'])\n                          }\n                          errorString={\n                            (touched.metaTitle && errors.metaTitle) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error']['metaTitle'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('metaTitle');\n                          }}\n                        />\n\n                        <Input\n                          label='BN Meta title'\n                          value={values.bnMetaTitle}\n                          placeHolder={'...'}\n                          name='bnMetaTitle'\n                          isError={\n                            (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error']['bnMetaTitle'])\n                          }\n                          errorString={\n                            (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error']['bnMetaTitle'])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('bnMetaTitle');\n                          }}\n                        />\n\n                        <TextArea\n                          label='Meta description'\n                          value={values.metaDescription}\n                          placeholder={'meta...'}\n                          name='metaDescription'\n                          isError={\n                            (touched.metaDescription && errors.metaDescription) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error'][\n                              'metaDescription'\n                              ])\n                          }\n                          errorString={\n                            (touched.metaDescription && errors.metaDescription) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error'][\n                              'metaDescription'\n                              ])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('metaDescription');\n                          }}\n                        />\n\n                        <TextArea\n                          label='BN Meta Description'\n                          value={values.bnMetaDescription}\n                          placeholder={'এইয় মেট...'}\n                          name='bnMetaDescription'\n                          isError={\n                            (touched.bnMetaDescription &&\n                              errors.bnMetaDescription) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error'][\n                              'bnMetaDescription'\n                              ])\n                          }\n                          errorString={\n                            (touched.bnMetaDescription &&\n                              errors.bnMetaDescription) ||\n                            (!isSubmitting &&\n                              updateProductState.error['error'][\n                              'bnMetaDescription'\n                              ])\n                          }\n                          onChange={(e: any) => {\n                            handleChange(e);\n                            setFieldTouched('bnMetaDescription');\n                          }}\n                        />\n\n                        <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                        <MetaTags\n                          // @ts-ignore\n                          setTags={setMetaTags}\n                          tags={metaTags}\n                        />\n\n                        <div\n                          style={{\n                            marginTop: '15px',\n                          }}\n                        ></div>\n\n                        <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                        <MetaTags\n                          // @ts-ignore\n                          setTags={setBnMetaTags}\n                          tags={bnMetaTags}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              <div\n                style={{\n                  padding: '15px',\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                }}\n              >\n                <Button\n                  style={{\n                    color: '#555',\n                    marginRight: '10px',\n                  }}\n                  className='btnPrimaryClassNameoutline-cancle'\n                  onClick={() => setProductEditVisible(false)}\n                  type='default'\n                >\n                  Cancel\n              </Button>\n\n                <Button\n                  className='btnPrimaryClassNameoutline'\n                  onClick={handleSubmit}\n                  loading={updateProductState.isLoading}\n                  type='link'\n                  icon={<CheckOutlined />}\n                >\n                  Update\n              </Button>\n              </div>\n\n              <MediaLibrary\n                setvisible={setvisible}\n                visible={visible}\n                setmyImages={setmyImages}\n                myImages={myImages}\n                setmyThumbnailImage={setmyThumbnailImage}\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\n                isModalOpenForImages={isModalOpenForImages}\n              />\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewProduct = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductList,\n  productList,\n  productListState\n}: Props) => {\n  const handleCancel = () => {\n    setProductEditVisible(false);\n  };\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      width={'70vw'}\n      title='Product Edit'\n      visible={productEditVisible}\n      // onOk={(e: any) => handleSubmit(e)}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      okText='Update'\n      footer={false}\n      okButtonProps={{\n        //   loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        productList={productList}\n        setProductList={setProductList}\n        setProductEditVisible={setProductEditVisible}\n        productEditVisible={productEditVisible}\n        productDetailData={productDetailData}\n        handleCancel={handleCancel}\n        productListState={productListState}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n  [regular input field] [offer inputfield]\n\nStock [title]\n  [available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n  [add attributes name]\n    [add attrubutes value]\n\n  [add attributes name]\n    [add attrubutes value\n\n*/ //\n","import React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Modal, Upload, message, Button } from 'antd';\nimport reqwest from 'reqwest';\n\n// import config \nimport config from \"../../config.json\";\n\n\nimport {\n    FileImageOutlined,\n    ArrowUpOutlined\n} from '@ant-design/icons';\n\n\n\nimport {\n    openSuccessNotification,\n    openErrorNotification,\n} from '../../components/Notification';\n\nconst { Dragger } = Upload;\n\n\n\ninterface Props {\n    isUploadCSVModalOpen: any;\n    setIsUploadCSVModalOpen: any;\n}\n\nconst UploadCSV = ({\n    isUploadCSVModalOpen,\n    setIsUploadCSVModalOpen\n}: Props) => {\n    const [fileList, setfileList] = useState([]);\n    const [uploading, setuploading] = useState(false);\n\n\n    const uploadProps = {\n        //  listType: 'picture',\n        multiple: true,\n        onRemove: (file) => {\n            setfileList((filelist) => {\n                const index = fileList.indexOf(file);\n                const newFileList = fileList.slice();\n                newFileList.splice(index, 1);\n                return newFileList;\n            });\n        },\n        beforeUpload: (file) => {\n            setfileList((filelist) => {\n                const xflelist = filelist;\n                return [...xflelist, file];\n            });\n            return false;\n        },\n        fileList,\n    };\n\n\n\n    const handleUpload = async () => {\n        const formData = new FormData();\n        fileList.forEach((file) => {\n            formData.append('csv', file, file.name);\n        });\n\n        setuploading(true);\n\n        reqwest({\n            url: `${config.baseURL}/admin/api/product/update/bulk/csv`,\n            method: 'post',\n            processData: false,\n            data: formData,\n            withCredentials: true,\n            success: () => {\n                message.success('Product CSV Uploaded!')\n                setIsUploadCSVModalOpen(false);\n                setuploading(false);\n                setfileList([]);\n            },\n            error: (err) => {\n                setuploading(false);\n                if (err && err?.[0]) {\n                    const errKeys = Object.keys(err);\n                    for (let errkey of errKeys) {\n                        message.error(errKeys[errkey])\n                    }\n                }\n                message.error('upload failed.');\n            },\n        });\n    };\n\n\n\n    return (\n        <Modal\n            style={{\n                top: '40px',\n            }}\n            bodyStyle={{\n                margin: 0,\n                padding: '20px',\n            }}\n            width={'40vw'}\n            title='Upload CSV'\n            visible={isUploadCSVModalOpen}\n            onOk={(e: any) => null}\n            onCancel={() => setIsUploadCSVModalOpen(false)}\n            okText='Create'\n            footer={false}\n            okButtonProps={{\n                loading: false,\n                htmlType: 'submit',\n            }}\n        >\n            <Dragger\n                className='upload-list-inline'\n                listType='picture'\n                style={{\n                    background: '#fff',\n                    borderRadius: '8px',\n                }}\n                {...uploadProps}\n            >\n                <p className='ant-upload-drag-icon'>\n                    <FileImageOutlined />\n                </p>\n                <p className='ant-upload-text'>\n                    Click or drag .CSV file to this area to upload\n                </p>\n                <p className='ant-upload-hint'>\n                    Support for a single upload.\n               </p>\n            </Dragger>\n\n\n            <Button\n                className='btnPrimaryClassNameoutline'\n                type='primary'\n                onClick={handleUpload}\n                disabled={fileList.length === 0}\n                loading={uploading}\n                icon={<ArrowUpOutlined />}\n                style={{\n                    marginTop: '20px',\n                    marginBottom: '10px',\n                }}\n            >\n                Upload\n            </Button>\n\n        </Modal>\n    );\n};\n\nexport default UploadCSV;\n","import React, { Children } from 'react'\n\n// import 3rd-party lib\nimport {\n    Table\n} from \"antd\";\n\n\ninterface Props {\n    children: any,\n    data: any;\n    handlePageChange?: any\n    limit?: number;\n    loading?: any;\n    total?: any;\n    current?: any;\n}\n\nconst TableListWithPagination = ({ children, data, handlePageChange, limit, loading, total }: Props) => {\n\n    return (\n        <Table\n            loading={loading}\n            style={{\n                paddingTop: \"10px\",\n                borderRadius: \"5px !important\",\n                overflow: \"hidden\",\n                boxShadow:\n                    \"0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)\",\n            }}\n            size=\"small\"\n            pagination={\n                {\n                    onChange: handlePageChange,\n                    pageSize: limit,\n                    total, defaultCurrent: 1, hideOnSinglePage: true\n                }\n            }\n            dataSource={data}\n            tableLayout={\"auto\"}\n            onHeaderRow={(_) => {\n                return {\n                    style: {\n                        color: \"red !important\",\n                    },\n                };\n            }}\n        >\n            {children}\n        </Table>\n\n    )\n}\n\nexport default TableListWithPagination\n","import TableListWithPagination from \"./TableListWithPagination\";\nexport default TableListWithPagination;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { queryCache, useMutation, useQueryCache } from 'react-query'\nimport config from \"../../config.json\";\nimport {\n  notification,\n  Table,\n  Menu,\n  Dropdown,\n  Space,\n  Button,\n  Input,\n  Tooltip,\n  Popconfirm,\n} from \"antd\";\n\n\nimport {\n  CheckCircleOutlined,\n  DownOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckOutlined,\n  DownloadOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\n\n/// import hooks\nimport { useHandleFetch, usePaginate } from \"../../hooks\";\nimport Empty from \"../../components/Empty\";\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport AddNewProduct from \"./AddNewProduct\";\nimport ProductQuickEdit from \"./ProductQuickEdit\";\nimport UploadCSV from \"./UploadCSV\";\n// import QuickEdit from './QuickEdit';\n\n// ** IMPORT TABLE\nimport TableListWithPagination from \"../../components/TableListWithPagination\";\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (msg?: any) => {\n  notification.success({\n    message: msg || \"Product Deleted\",\n    description: \"\",\n    icon: <CheckCircleOutlined style={{ color: \"rgba(0, 128, 0, 0.493)\" }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setProductList: any;\n  roles: any;\n  productListState: any\n}\n\nconst MyTable = ({ data, setProductList, roles, productListState }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch(\n    {},\n    \"deleteProduct\"\n  );\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\n    {},\n    \"updateStock\"\n  );\n\n  const history = useHistory();\n  const cache = useQueryCache();\n\n\n\n  const handleDeleteProduct = async (id) => {\n    const deleteProductRes = await handleDeleteProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteProductRes && deleteProductRes.status === \"ok\") {\n      const queries = cache.getQueries();\n      const queriesKeyMap = queries.filter(query => {\n        const queryKey = query?.queryKey;\n        // @ts-ignore\n        return queryKey?.[0] === 'product' && typeof queryKey?.[1] === 'number'\n      }).map(query => query?.queryKey);\n\n      const idQueryKey = queriesKeyMap.find(key => {\n        let isKey = false;\n        // @ts-ignore\n        if (cache.getQueryData(key)?.data.find(item => item.id === id)) {\n          isKey = true;\n        }\n        return isKey;\n      })\n      if (idQueryKey?.[0]) {\n        // @ts-ignore\n        cache.setQueryData(idQueryKey, ((prev) => {\n          return {\n            // @ts-ignore\n            ...prev,\n            // @ts-ignore\n            data: prev.data?.filter(item => item.id !== id),\n          }\n        }))\n      }\n\n      console.log({ idQueryKey: idQueryKey })\n\n      openSuccessNotification();\n\n    }\n\n  };\n\n\n\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\n      body: {\n        inStock: newStatus,\n      },\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateOrderStatusRes && updateOrderStatusRes.status === \"ok\") {\n      openSuccessNotification(\"Updated Stock\");\n\n      const positionInTag = () => {\n        return data.map((item) => item.id).indexOf(id);\n      };\n\n      const index = positionInTag();\n      console.log(\"recordis\", record, index);\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, data[index], {\n        inStock: newStatus,\n      });\n      const updateOrderList = [\n        ...data.slice(0, index),\n        updatedItem,\n        ...data.slice(index + 1),\n      ];\n      console.log(\"updateOrderList\", updateOrderList, \"-----\", setProductList);\n      setProductList(updateOrderList);\n    }\n  };\n\n  const StatusItemMenu = (record, id) => {\n    return (\n      <Menu>\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, true)}\n          key=\"1\"\n          icon={<CheckOutlined />}\n        >\n          In stock\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, false)}\n          key=\"1\"\n          icon={<CheckOutlined />}\n        >\n          Out of stock\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return \"\";\n  };\n\n  return (\n    <>\n      <TableListWithPagination\n        data={productListState?.resolvedData?.data || []}\n        total={productListState?.resolvedData?.total}\n        loading={productListState.status === 'loading' || productListState.isFetching}\n        limit={11}\n        handlePageChange={(pageNumber, _) => {\n          productListState?.setPage(pageNumber)\n        }}\n      >\n        <Column\n          title=\"\"\n          dataIndex=\"cover\"\n          key=\"id\"\n          width={\"80px\"}\n          className=\"classnameofthecolumn\"\n          render={(cover, record: any) => (\n            <>\n              <div\n                className=\"listCoverImage\"\n                onClick={() => {\n                  history.push(`/admin/product/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt=\"\" />\n              </div>\n            </>\n          )}\n        />\n\n        <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/product/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: \"#555\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title=\"Offer Price\"\n          dataIndex=\"offerPrice\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          title=\"Price\"\n          dataIndex=\"price\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          title=\"Available\"\n          dataIndex=\"available\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          align=\"right\"\n          title=\"Stock\"\n          dataIndex=\"inStock\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n          render={(text, record: any) => (\n            <>\n              {isAccess(\"postCatalogue\", roles) ? (\n                <Dropdown\n                  overlay={() => StatusItemMenu(record, record.id)}\n                  placement=\"bottomRight\"\n                >\n                  <a href=\"##\">\n                    <span\n                      style={{\n                        fontSize: \"12px\",\n                      }}\n                    >\n                      {text ? \"In Stock\" : \"Out of stock\"}\n                      <span\n                        style={{\n                          marginLeft: \"5px\",\n                          fontSize: \"10px\",\n                        }}\n                      >\n                        <DownOutlined />\n                      </span>\n                    </span>\n                  </a>\n                </Dropdown>\n              ) : (\n                  <a href=\"##\">\n                    <span\n                      style={{\n                        fontSize: \"12px\",\n                      }}\n                    >\n                      {text ? \"In Stock\" : \"Out of stock\"}\n                      <span\n                        style={{\n                          marginLeft: \"5px\",\n                          fontSize: \"10px\",\n                        }}\n                      ></span>\n                    </span>\n                  </a>\n                )}\n            </>\n          )}\n        />\n        {isAccess(\"postCatalogue\", roles) && (\n          <Column\n            className=\"classnameofthecolumn\"\n            title=\"\"\n            key=\"action\"\n            align=\"right\"\n            render={(text, record: any) => (\n              <Space size=\"middle\">\n                <a href=\"##\">\n                  <Tooltip placement=\"top\" title=\"Edit Product\">\n                    <span\n                      className=\"iconSize\"\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteProduct(record.id)}\n                  title=\"Are you sure？\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <span className=\"iconSize iconSize-danger\">\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </TableListWithPagination>\n\n      {activeCategoryForEdit && (\n        <ProductQuickEdit\n          productList={data}\n          productListState={productListState}\n          setProductList={setProductList}\n          setProductEditVisible={setvisible}\n          productEditVisible={visible}\n          productDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst ProductList = ({ roles }: Props) => {\n  const [productList, setProductList] = useState([]);\n  const [isUploadCSVModalOpen, setIsUploadCSVModalOpen] = useState(false);\n\n  const [productState, handleProductListFetch] = useHandleFetch(\n    {},\n    \"productList\"\n  );\n\n  const productListState = usePaginate('productList', {\n    urlOptions: {\n      params: {\n        limitNumber: 11,\n        sortItem: 'added',\n        sortOrderValue: '-1',\n      }\n    },\n  }, `product`);\n\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('productState', productState)\n\n  const handleSearch = (value) => {\n    if (productState.data.length > 0) {\n      const newProductList = productState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setProductList(newProductList);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"categoryListContainer\">\n        <div className=\"categoryListContainer__header\">\n          <div className=\"categoryListContainer__header-searchBar\">\n            <h2 className=\"categoryListContainer__header-title\">Products</h2>\n\n            <Search\n              enterButton={false}\n              className=\"searchbarClassName\"\n              placeholder=\"search products..\"\n              onChange={(e) => handleSearch(e.target.value)}\n            // style={{ width: 300 }}\n            />\n          </div>\n\n          <div>\n            {isAccess(\"postCatalogue\", roles) && (\n              <Button\n                style={{\n                  marginRight: '15px'\n                }}\n                className=\"btnPrimaryClassNameoutline\"\n                icon={<DownloadOutlined />}\n                onClick={() => {\n                  window.open(`${config.baseURL}/admin/api/product/csv`);\n                }}\n              >\n                Export CSV\n              </Button>\n            )}\n\n            {isAccess(\"postCatalogue\", roles) && (\n              <Button\n                style={{\n                  marginRight: '15px'\n                }}\n                className=\"btnPrimaryClassNameoutline\"\n                icon={<UploadOutlined />}\n                onClick={() => setIsUploadCSVModalOpen(true)}\n              >\n                Upload CSV\n              </Button>\n            )}\n\n\n            {isAccess(\"postCatalogue\", roles) && (\n              <Button\n                // type=\"primary\"\n                className=\"btnPrimaryClassNameoutline\"\n                icon={<PlusOutlined />}\n                onClick={() => setAddNewCategoryVisible(true)}\n              >\n                Add New\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div className=\"categoryListContainer__afterHeader\" />\n\n        <div className=\"categoryListContainer__categoryList\">\n          {productListState.resolvedData?.data?.length > 0 && (\n            <MyTable\n              productListState={productListState}\n              roles={roles}\n              setProductList={setProductList}\n              data={[]}\n            />\n          )}\n          {productListState.status === 'loading' && <DataTableSkeleton />}\n          {productListState.isError || !(productListState.resolvedData?.data?.length) && (\n            <div\n              style={{\n                marginTop: \"50px\",\n              }}\n            >\n              <Empty title=\"No Product found\" />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {productListState.isSuccess && (\n        <AddNewProduct\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          productList={productState.data}\n          setProductList={setProductList}\n          productListState={productListState}\n        />\n      )}\n\n      <UploadCSV\n        isUploadCSVModalOpen={isUploadCSVModalOpen}\n        setIsUploadCSVModalOpen={setIsUploadCSVModalOpen}\n      />\n\n\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(ProductList);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport Pricing from './Pricing';\nimport MetaTags from '../category/MetaTags';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n  model: '',\n  unit: '',\n  regular: '',\n  offer: '',\n  available: '',\n  minimum: '',\n  image: [],\n  url: '',\n  cover: '',\n  pricing: [],\n  venue: '',\n  date: '',\n  time: '',\n  purchaseLimit: null,\n  bnUnit: '',\n  bnName: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  productEditVisible?: any;\n  setProductEditVisible?: any;\n  productDetailData?: any;\n  setProductDetailData?: any;\n}\n\nconst ModalChildComponent = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductDetailData,\n}) => {\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\n    {},\n    'updateProduct'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'productDetailById'\n  );\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [bnDescription, setBNDescription] = useState('');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n  const [editpricingItem, setEditPricingItem] = useState({});\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('2');\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n  console.log('tagIds', tagIds);\n  console.log('selectedtagIds', selectedTags);\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const productDetailData = productDetailState.data;\n\n      if (productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const selectedTagNames = productDetailData.tags.map(\n          (item) => item.name\n        );\n\n        const selectedTagIds = productDetailData.tags.map((item) => item._id);\n\n        setSelectedTags(selectedTagNames);\n        console.log('selectedTagIds55', selectedTagIds);\n        setTagIds(selectedTagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category.map((item) => item.id);\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.pricing &&\n        productDetailData.pricing\n      ) {\n        setPricing(productDetailData.pricing);\n      } else {\n        setPricing([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.date &&\n        productDetailData.date\n      ) {\n        setDateFeild(productDetailData.date);\n      } else {\n        setDateFeild('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.time &&\n        productDetailData.time\n      ) {\n        setTimeFeild(productDetailData.time);\n      } else {\n        setTimeFeild('');\n      }\n\n      if (productDetailData && productDetailData.description) {\n        setDescription(productDetailData.description);\n      } else {\n        setDescription('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['description']\n      ) {\n        setBNDescription(productDetailData.bn['description']);\n      } else {\n        setBNDescription('');\n      }\n    }\n\n    console.log('runnedBitch');\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    console.log('thumbnailRes', thumbnailRes);\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return productList.map(item => item.id).indexOf(productDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = productList.find(item => item.id === productDetailData.id);\n\n      // if (prevItem) {\n      //     console.log('prevItem--', prevItem, 'image--', image);\n      //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\n      //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n      //     setProductList(updateProductList);\n\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updatedProductRes = await handleUpdateProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: description,\n        model: values.model,\n        unit: values.unit,\n        category: categoryOptions,\n        tags: tagIds,\n        brand: brandId,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        pricing: pricing,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          unit: values.metaUnit,\n          description: bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\n      openSuccessNotification('Product Updated');\n\n      setProductEditVisible(false);\n\n      setProductEditVisible(false);\n      setProductDetailData({\n        // @ts-ignore\n        ...updatedProductRes,\n        category: productDetailData.category,\n        brand: productDetailData.brand,\n        tags: productDetailData.tags,\n        cover: productDetailData.cover,\n        image: productDetailData.image,\n        id: productDetailData.id\n      });\n\n      // setProductDetailData({\n      //     // @ts-ignore\n      //     ...updatedProductRes,\n      //     category: productDetailData.category,\n      //     brand: productDetailData.brand,\n      //     tags: productDetailData.tags,\n      //     cover: productDetailData.cover,\n      //     image: productDetailData.image,\n      // });\n\n      // console.log('updatedProductRes', updatedProductRes);\n      // setProductList([...productList, {\n      //     id: updatedProductRes['id'] || '',\n      //     key: updatedProductRes['id'] || '',\n      //     name: updatedProductRes['name'] || '',\n      //     description: updatedProductRes['description'] || '',\n      //     // @ts-ignore\n      //     ...updatedProductRes\n      // }])\n      // @ts-ignore\n      //   setmyImages([]);\n      //   setCoverImageId('');\n      //   setPricing([]);\n      //   setTagIds([]);\n      //   setSelectedTags([]);\n      //   setBrandId('');\n      //   setcategoryIds([]);\n      //   setCategoryOptions([]);\n      //   actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('updateProductStaet', updateProductState);\n  useEffect(() => {\n    if (!updateProductState['isLoading']) {\n      const error = updateProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateProductState]);\n\n  const handleCancel = (e: any) => {\n    setProductEditVisible(false);\n    // setmyImages(false);\n    // setCoverImageId('');\n    // setPricing([]);\n    // setTagIds([]);\n    // setSelectedTags([]);\n    // setBrandId('');\n    // setcategoryIds([]);\n    // setCategoryOptions([]);\n    // setMetaTags([]);\n    // setBnMetaTags([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !(pricing.length > 0) ||\n      !(categoryOptions.length > 0) ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => {};\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleUpdatePricing = (priceItem) => {\n    const positionInPricing = () => {\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\n    };\n\n    const index = positionInPricing();\n\n    // @ts-ignore\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\n    const updatePricingList = [\n      ...pricing.slice(0, index),\n      updatedItem,\n      ...pricing.slice(index + 1),\n    ];\n\n    setPricing(updatePricingList);\n\n    message.info('Product Pricing Updated');\n    seTisPricingEditActive(true);\n    setpricingTagActiveKey('2');\n  };\n\n  const handleAddPricing = (priceItem) => {\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const handleEditPricing = (id) => {\n    seTisPricingEditActive(true);\n    const pricingItem = pricing.find((item) => item.id === id);\n    if (pricingItem) {\n      setEditPricingItem(pricingItem);\n    }\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      updateProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  console.log('productDetailData', productDetailData);\n  console.log('productDetailState', productDetailState);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0 &&\n      productDetailState.data.metaTags\n    ) {\n      const metaTags = productDetailState.data.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, [productDetailState['done']]);\n\n  console.log('productDetailData');\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...{\n            ...productDetailData,\n            ...(productDetailState['data'] &&\n              Object.keys(productDetailState['data']).length > 0 &&\n              productDetailState['data']['bn'] && {\n                bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n                bnMetaDescription:\n                  productDetailState['data']['bn'].metaDescription,\n                bnName: productDetailState['data']['bn'].name,\n                metaUnit: productDetailState['data']['bn'].unit,\n                bnDescription: productDetailState['data']['bn'].description,\n              }),\n          },\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      placeHolder={'Rafty ox'}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={'রাফতি অক্স'}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n\n                    {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                    <Input\n                      label='Unit'\n                      value={values.unit}\n                      name='unit'\n                      placeHolder={'KG,POUND,GM'}\n                      isError={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['unit'])\n                      }\n                      errorString={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['unit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('unit');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Unit'\n                      value={values.bnUnit}\n                      placeHolder={'কেজি,গ্রাম'}\n                      name='bnUnit'\n                      isError={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnUnit'])\n                      }\n                      errorString={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnUnit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnUnit');\n                      }}\n                    />\n\n                    <Input\n                      label='Model Number'\n                      value={values.model}\n                      name='model'\n                      isError={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['model'])\n                      }\n                      errorString={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['model'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('model');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={description}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={bnDescription}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBNDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    >\n                      {' '}\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__price'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Pricing *</h3>\n\n                    <div\n                      className={\n                        pricing && pricing.length > 0\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__item-body'>\n                    <Tabs\n                      animated={true}\n                      tabPosition='top'\n                      type='card'\n                      activeKey={pricingTagActiveKey}\n                      onChange={(value) => {\n                        setpricingTagActiveKey(`${value}`);\n                      }}\n                    >\n                      <TabPane tab='Add Variation' key='1'>\n                        <Pricing\n                          handleAddPricing={handleAddPricing}\n                          pricingItem={editpricingItem}\n                          handleUpdatePricing={handleUpdatePricing}\n                          isPricingEditActive={isPricingEditActive}\n                        />\n                      </TabPane>\n                      <TabPane tab='Pricing List' key='2'>\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\n                          {pricing.length > 0 &&\n                            pricing.map((item) => {\n                              return (\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\n                                    {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                    <span\n                                      className='pricingEditIcon'\n                                      onClick={() => {\n                                        handleEditPricing(item.id);\n                                        setpricingTagActiveKey('1');\n                                      }}\n                                    >\n                                      <EditOutlined />\n                                    </span>\n                                    <span\n                                      className='pricingDeleteIcon'\n                                      onClick={() =>\n                                        handleDeletePricing(item.id)\n                                      }\n                                    >\n                                      <DeleteOutlined />\n                                    </span>\n                                  </div>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                    <div>\n                                      <h3>Price</h3>\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                        {item.price.offer ? (\n                                          <>\n                                            <h4>{item.price.offer}</h4>/\n                                            <h5\n                                              style={{\n                                                textDecoration: 'line-through',\n                                              }}\n                                            >\n                                              {item.price.regular}\n                                            </h5>\n                                          </>\n                                        ) : (\n                                          <h4>{item.price.regular}</h4>\n                                        )}\n                                      </div>\n                                    </div>\n\n                                    {item.stock && item.stock['available'] && (\n                                      <div>\n                                        <Badge\n                                          overflowCount={999}\n                                          count={item.stock.available}\n                                        >\n                                          <h3>Stock</h3>\n                                        </Badge>\n                                        {item.stock['minimum'] && (\n                                          <>\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                              <div>\n                                                <h6>\n                                                  min\n                                                  <Badge\n                                                    className='site-badge-count-4'\n                                                    overflowCount={999}\n                                                    count={item.stock.minimum}\n                                                  />\n                                                </h6>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    )}\n\n\n                                    {Boolean(item?.maximumPurchaseLimit) && (\n                                       <div>\n                                       <h3>Maximum Purchase Limit</h3>\n                                       <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                       <h4>{item?.maximumPurchaseLimit}</h4>\n                                       </div>\n                                     </div>\n                                    )}\n\n                                  </div>\n\n                                  {item.attribute &&\n                                    Object.values(item.attribute).length >\n                                      0 && (\n                                      <>\n                                        <h3>Attributes</h3>\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                          {item.attribute &&\n                                            Object.keys(item.attribute).length >\n                                              0 &&\n                                            Object.keys(item.attribute).map(\n                                              (attributeItem) => {\n                                                return (\n                                                  <div>\n                                                    <h6>{attributeItem}</h6>\n                                                    <h4>\n                                                      {\n                                                        item.attribute[\n                                                          attributeItem\n                                                        ]\n                                                      }\n                                                    </h4>\n                                                  </div>\n                                                );\n                                              }\n                                            )}\n                                        </div>\n                                      </>\n                                    )}\n                                </div>\n                              );\n                            })}\n\n                          {!(pricing.length > 0) && (\n                            <div\n                              style={{\n                                width: '100%',\n                                display: 'flex',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Empty\n                                description='No Pricing added'\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </TabPane>\n                    </Tabs>\n\n                    <div className='addProductGridContainer__item-body-container'></div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {productDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {productDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {coverImageId === image.id ? (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                ) : (\n                                  !coverImageId &&\n                                  index === 0 && (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  )\n                                )}\n                              </div>\n                            );\n                          })}\n\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisible(true);\n                              setisModalOpenForImages(true);\n                              setisModalOpenForThumbnail(false);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Categories *</h3>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          updateProductState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !updateProductState.error['error']['category']\n                              ? 'checkicon'\n                              : updateProductState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                      <div\n                        className={\n                          !(categoryids.length > 0) &&\n                          !updateProductState.error['error']['category']\n                            ? 'checkicon'\n                            : updateProductState.error['error']['category']\n                            ? 'checkicon-error'\n                            : 'checkicon-active'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Categories\n                        setCategoryOptions={setCategoryOptions}\n                        categoryOptions={categoryOptions}\n                        setcategoryIds={setcategoryIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__tag'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Tags</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Tags\n                        setSelectedTags={setSelectedTags}\n                        selectedTags={selectedTags}\n                        setTagIds={setTagIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__brand'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Brand</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Brands\n                        productDetailState={productDetailState}\n                        brandId={brandId}\n                        setBrandId={setBrandId}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className='addProductGridContainer__brand'\n                  style={{\n                    marginTop: '10px',\n                  }}\n                >\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'metaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'metaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setMetaTags}\n                        tags={metaTags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnMetaTags}\n                        tags={bnMetaTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setProductEditVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={updateProductState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisible}\n              visible={visible}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              setmyThumbnailImage={setmyThumbnailImage}\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\n              isModalOpenForImages={isModalOpenForImages}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewProduct = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setProductEditVisible(false);\n  };\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      width={'70vw'}\n      title='Product Edit'\n      visible={productEditVisible}\n      // onOk={(e: any) => handleSubmit(e)}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      okText='Update'\n      footer={false}\n      okButtonProps={{\n        //   loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        setProductEditVisible={setProductEditVisible}\n        productEditVisible={productEditVisible}\n        setProductDetailData={setProductDetailData}\n        productDetailData={productDetailData}\n        handleCancel={handleCancel}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { EditOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n  Badge,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ProductEdit from './ProductEdit';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'productDetailById'\n  );\n\n  const params = useParams();\n  const history = useHistory();\n  const productId = params['id'];\n  const [productEditVisible, setProductEditVisible] = useState(false);\n  const [productDetailData, setProductDetailData] = useState({});\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      const productDetailRes = await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (productDetailRes) {\n        // @ts-ignore\n        setProductDetailData(productDetailRes);\n      }\n\n      console.log('productDetailRes', productDetailRes);\n    };\n\n    getProductDetail();\n  }, [productId]);\n\n  console.log('productDetailState', productDetailState);\n\n  console.log('brandParams', params);\n\n  const getImagesInCollumn = (imgs) => {\n    if (!imgs[0]) return false;\n    imgs = imgs.map((item) => item.cover);\n    const columns = {};\n\n    let localIndex = 0;\n    let columnNumber = 0;\n\n    imgs.forEach((item, index) => {\n      if (localIndex < 3) {\n        if (columns[columnNumber]) {\n          columns[columnNumber] = [...columns[columnNumber], item];\n        } else columns[columnNumber] = [item];\n\n        localIndex = localIndex + 1;\n        columnNumber = columnNumber + 1;\n      } else {\n        localIndex = 0;\n        columnNumber = 0;\n        console.log('localIndex', localIndex);\n      }\n    });\n\n    return columns;\n  };\n\n  const row =\n    productDetailState.done && productDetailData && productDetailData['image']\n      ? getImagesInCollumn(productDetailData['image'])\n      : [];\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Product Detail</h3>\n\n        {productDetailState.done &&\n          productDetailData &&\n          Object.keys(productDetailData).length > 0 && (\n            <>\n              <ProductEdit\n                productEditVisible={productEditVisible}\n                setProductEditVisible={setProductEditVisible}\n                productDetailData={productDetailData}\n                setProductDetailData={setProductDetailData}\n              />\n              {isAccess('postCatalogue', roles) && (\n                <Button\n                  onClick={() => setProductEditVisible(true)}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={productDetailState.isLoading}\n      >\n        {productDetailState.done &&\n          productDetailData &&\n          !(Object.keys(productDetailData).length > 0) && (\n            <Empty\n              description='No Product found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {productDetailState.done &&\n          productDetailData &&\n          Object.keys(productDetailData).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\n                  <img\n                    src={\n                      productDetailData['cover'] &&\n                      productDetailData['cover']['cover']\n                    }\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{productDetailData['name']}</h2>\n                  <h4>{productDetailData['price']}</h4>\n                  <h3>{productDetailData['description']}</h3>\n\n                  {productDetailData['url'] && (\n                    <h3>\n                      URL:\n                      <span>{productDetailData['url']}</span>\n                    </h3>\n                  )}\n\n                  {/* \n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            TAGS:\n                                        {productDetailData['tags'].map(tag => {\n                                            return (\n                                                <span>\n                                                    {tag.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                } */}\n\n                  {productDetailData['category'] &&\n                    productDetailData['category'].length > 0 && (\n                      <>\n                        <h3>\n                          CATEGORIES:\n                          {productDetailData['category'].map((cat) => {\n                            return (\n                              <span\n                                onClick={() =>\n                                  history.push(`/admin/category/${cat.id}`)\n                                }\n                              >\n                                {cat.name}\n                              </span>\n                            );\n                          })}\n                        </h3>\n                      </>\n                    )}\n\n                  {productDetailData['tags'] &&\n                    productDetailData['tags'].length > 0 && (\n                      <>\n                        <h3>\n                          TAGS:\n                          {productDetailData['tags'].map((cat) => {\n                            return (\n                              <span\n                                onClick={() =>\n                                  history.push(`/admin/tag/${cat._id}`)\n                                }\n                              >\n                                {cat.name}\n                              </span>\n                            );\n                          })}\n                        </h3>\n                      </>\n                    )}\n                </div>\n              </div>\n\n              {productDetailData['icon'] && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Icon</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__inlineBox'>\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                      <img\n                        src={\n                          productDetailData['icon'] && productDetailData['icon']\n                        }\n                        alt=''\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n              {productDetailData['pricing'] &&\n                productDetailData['pricing'].length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Pricing</h3>\n                    </div>\n\n                    <div className='brandDetailContainer__pricing'>\n                      <div className='addProductGridContainer__item-body-pricingContainer'>\n                        {productDetailData['pricing'].map((item) => {\n                          return (\n                            <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                              <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                <div>\n                                  <h3>Price</h3>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                    {item.price.offer ? (\n                                      <>\n                                        <h4>{item.price.offer}</h4>/\n                                        <h5\n                                          style={{\n                                            textDecoration: 'line-through',\n                                          }}\n                                        >\n                                          {item.price.regular}\n                                        </h5>\n                                      </>\n                                    ) : (\n                                      <h4>{item.price.regular}</h4>\n                                    )}\n                                  </div>\n                                </div>\n\n                                {item.stock && (\n                                  <div>\n                                    <Badge\n                                      overflowCount={999}\n                                      count={item.stock.available}\n                                    >\n                                      <h3>Stock</h3>\n                                    </Badge>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                      <div>\n                                        <h6>\n                                          min\n                                          <Badge\n                                            className='site-badge-count-4'\n                                            overflowCount={999}\n                                            count={item.stock.minimum}\n                                          />\n                                        </h6>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n\n                              {item.attribute &&\n                                Object.values(item.attribute).length > 0 && (\n                                  <>\n                                    <h3>Attributes</h3>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                      {item.attribute &&\n                                        Object.keys(item.attribute).length >\n                                          0 &&\n                                        Object.keys(item.attribute).map(\n                                          (attributeItem) => {\n                                            return (\n                                              <div>\n                                                <h6>{attributeItem}</h6>\n                                                <h4>\n                                                  {\n                                                    item.attribute[\n                                                      attributeItem\n                                                    ]\n                                                  }\n                                                </h4>\n                                              </div>\n                                            );\n                                          }\n                                        )}\n                                    </div>\n                                  </>\n                                )}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n\n              {productDetailData['image'] &&\n                productDetailData['image'].length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Image Gallary</h3>\n                    </div>\n\n                    <div className='brandDetailContainer__imageGallary'>\n                      <div className='imgGallaryContainer'>\n                        <div className='imgGallary-row'>\n                          {row &&\n                            Object.keys(row).map((column) => {\n                              return (\n                                <div className='imgGallary-column'>\n                                  {row[column] &&\n                                    row[column].map((img) => {\n                                      return (\n                                        <img\n                                          src={img}\n                                          style={{\n                                            width: '100%',\n                                          }}\n                                        />\n                                      );\n                                    })}\n                                </div>\n                              );\n                            })}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n\n              {productDetailData['brand'] &&\n                Object.keys(productDetailData['brand']).length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Brand</h3>\n                    </div>\n\n                    <div\n                      onClick={() =>\n                        history.push(\n                          `/admin/brand/${productDetailData['brand']['id']}`\n                        )\n                      }\n                      className='brandDetailContainer__brand'\n                    >\n                      <div className='brandDetailContainer__brand-coverbox'>\n                        <img\n                          src={\n                            productDetailData['brand']['cover'] &&\n                            productDetailData['brand']['cover']\n                          }\n                          alt=''\n                        />\n                      </div>\n                      <div className='brandDetailContainer__brand-info'>\n                        <h2>{productDetailData['brand']['name']}</h2>\n                        <h3>{productDetailData['brand']['description']}</h3>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n\n              {productDetailData['primaryCategory'] &&\n                Object.keys(productDetailData['primaryCategory']).length >\n                  0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Primary Category</h3>\n                    </div>\n\n                    <div\n                      onClick={() =>\n                        history.push(\n                          `/admin/category/${productDetailData['primaryCategory']['id']}`\n                        )\n                      }\n                      className='brandDetailContainer__brand'\n                    >\n                      <div className='brandDetailContainer__brand-coverbox'>\n                        <img\n                          src={\n                            productDetailData['primaryCategory']['cover'] &&\n                            productDetailData['primaryCategory']['cover']\n                          }\n                          alt=''\n                        />\n                      </div>\n                      <div className='brandDetailContainer__brand-info'>\n                        <h2>{productDetailData['primaryCategory']['name']}</h2>\n                        <h3>\n                          {productDetailData['primaryCategory']['description']}\n                        </h3>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n            </>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\nconst ModalChildComponent = ({}) => {\n  return <></>;\n};\n\ninterface Props {\n  tagEditVisible?: any;\n  setTagEditVisible?: any;\n  tagDetailData?: any;\n  setTagList?: any;\n  tagList?: any;\n}\n\nconst QuickEdit = ({\n  tagEditVisible,\n  setTagEditVisible,\n  tagDetailData,\n  setTagList,\n  tagList,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateTag'\n  );\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  useEffect(() => {\n    console.log('mounted11');\n  }, []);\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags?.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags?.join(','),\n          name: values.bnName,\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      const positionInTag = () => {\n        return tagList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        ...values,\n        // @ts-ignore\n        ...updateTagRes,\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      setTagList(updateTagList);\n\n      openSuccessNotification();\n      setTagEditVisible(false);\n\n      // const positionInTag = () => {\n      //     return tagList.map(item => item.id).indexOf(category.id);\n      // }\n\n      // const index = positionInTag();\n\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n      // setTagList(updateTagList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateTagState['isLoading']) {\n      const error = updateTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateTagState]);\n\n  const handleCancel = (e: any) => {\n    setTagEditVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(()=>{\n\n      if(tagDetailData && Object.keys(tagDetailData).length > 0){\n          const metaTags = tagDetailData.metaTags.split(',');\n\n          console.log('localMetaTags',metaTags);\n\n          const bnMetaTags = tagDetailData.bn['metaTags'].split(',');\n\n          setTags(metaTags)\n          setBnTags(bnMetaTags)\n      }\n\n  },[]);\n\n  console.log('tagDetailData', tagDetailData);\n\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...tagDetailData,\n        ...(tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && {\n            bnMetaTitle:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaTitle &&\n              tagDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaDescription &&\n              tagDetailData['bn'].metaDescription,\n            bnName:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].name &&\n              tagDetailData['bn'].name,\n            bnDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].description &&\n              tagDetailData['bn'].description,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Tag Edit'\n            visible={tagEditVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName,\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        \n        \n        {\n          \n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n          ...addTagRes\n        },\n        ...tagList,\n      ]);\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport TagQuickEdit from './TagQuickEdit';\nimport AddNewTag from './AddNewTag';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList, roles }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteTag'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Tag');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/tag/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Description'\n          dataIndex='description'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n\t\t\t\t\ttitle=\"Product\"\n\t\t\t\t\tdataIndex=\"productCount\"\n\t\t\t\t\tkey=\"id\"\n\t\t\t\t\tclassName='classnameofthecolumn'\n\t\t\t\t/> */}\n\n        {isAccess('postCatalogue', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Tag'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteTag(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <TagQuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          tagEditVisible={visible}\n          setTagEditVisible={setvisible}\n          tagDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst TagList = ({ roles }: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Tags</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search tags..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n\n          {isAccess('postCatalogue', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable roles={roles} setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Tags found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewTag\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(TagList);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  tagEditVisible?: any;\n  setTagEditVisible?: any;\n  tagDetailData?: any;\n  setTagDetailData?: any;\n}\n\nconst QuickEdit = ({\n  tagEditVisible,\n  setTagEditVisible,\n  tagDetailData,\n  setTagDetailData,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateTag'\n  );\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName,\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      setTagDetailData({\n        id: values.id,\n        key: values.id,\n        name: values.name,\n        description: values.description,\n      });\n      console.log('categoryupdateTagRes', updateTagRes);\n      openSuccessNotification();\n      setTagEditVisible(false);\n\n      // const positionInTag = () => {\n      //     return tagList.map(item => item.id).indexOf(category.id);\n      // }\n\n      // const index = positionInTag();\n\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n      // setTagList(updateTagList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateTagState['isLoading']) {\n      const error = updateTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateTagState]);\n\n  const handleCancel = (e: any) => {\n    setTagEditVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  // useEffect(()=>{\n\n  //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\n  //         const metaTags = tagDetailData.metaTags.split(',');\n\n  //         console.log('localMetaTags',metaTags);\n\n  //         const bnMetaTags = tagDetailData.bn['metaTags'].split(',');\n\n  //         setTags(metaTags)\n  //         setBnTags(bnMetaTags)\n  //     }\n\n  // },[]);\n\n  console.log('tagDetailData', tagDetailData);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...tagDetailData,\n        ...(tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && {\n            bnMetaTitle:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaTitle &&\n              tagDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaDescription &&\n              tagDetailData['bn'].metaDescription,\n            bnName:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].name &&\n              tagDetailData['bn'].name,\n            bnDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].description &&\n              tagDetailData['bn'].description,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Tag Edit'\n            visible={tagEditVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport TagEdit from \"./TagEdit\";\n\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\n\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    roles?: any;\n}\n\nconst NewBrandDetail = ({roles}: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const tagDetailRes =  await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(tagDetailRes){\n                console.log('tagDetailRes',tagDetailRes);\n                // @ts-ignore\n                setTagDetailData(tagDetailRes);\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n    useEffect(() => {\n        const getTagProducts = async () => {\n            await handleTagProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            })\n        };\n\n        getTagProducts();\n\n    }, [tagId]);\n\n\n\n\n    console.log('tagProductsState', tagProductsState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Tag Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <TagEdit\n                            tagEditVisible={tagEditVisible}\n                            setTagEditVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n\n                        \n\t\t\t\t\t{isAccess('postCatalogue',roles) && (\n\t\t\t\t\t  <Button\n                      onClick={() => setTagEditVisible(true)}\n                      type='link'\n                      icon={<EditOutlined />}\n                  >\n                      Edit\n                </Button>\n                 )}\n                    </>\n                )}\n\n                \n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['url'] && (\n                                <h3>\n                                    URL:\n                                    <span>\n                                        {tagDetailData['url']}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Products\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={tagProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            <Column\n                                title=\"\"\n                                dataIndex=\"cover\"\n                                key=\"id\"\n                                width={'80px'}\n\n                                className='classnameofthecolumn'\n\n                                render={(cover, record: any) => (\n                                    <>\n                                        <img\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            src={cover} alt='cover img' style={{\n                                                height: '40px',\n                                                width: '40px',\n                                                objectFit: \"contain\",\n                                                borderRadius: '3px',\n                                                cursor: 'pointer'\n                                            }} />\n\n\n\n\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                        <h4\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                cursor: 'pointer'\n\n                                            }}>\n                                            {text}\n                                        </h4>\n\n\n                                    </>\n                                )}\n\n                            />\n\n                            <Column\n                                title=\"Offer Price\"\n                                dataIndex=\"offerPrice\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Price\"\n                                dataIndex=\"price\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Available\"\n                                dataIndex=\"available\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Minimum\"\n                                dataIndex=\"minimum\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}; \n\nconst mapStateToProps = state => ({\n    roles: state.globalState,\n  })\n  \n  // @ts-ignore\n  export default connect(mapStateToProps, null)(NewBrandDetail);\n  \n  \n  \n\n","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\nimport Empty from \"../../components/Empty\";\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\n\n    useEffect(() => {\n        const setTags = async () => {\n            const tagListRes = await handleTagListFetch({\n                urlOptions: {\n                    params: {\n                        isSubCategory: false\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if (tagListRes && tagListRes.length > 0) {\n                // @ts-ignore\n                const tagOptions = tagListRes.map((tag) => {\n                    return tag.name\n                });\n                setoptions(tagOptions);\n            }\n\n        };\n\n        setTags();\n    }, []);\n\n\n\n    useEffect(() => {\n        if(productIds && productIds.length > 0){\n            console.log('shippingRunning')\n            const selecttedOptions = productIds.map(item => item.name); \n            setselectedOptions(selecttedOptions)\n        }\n    },[productIds]); \n\n    console.log('OrderProudctItemsProductIds',productIds); \n\n\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n\n        console.log('selectedProducts', selectItems);\n\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = tagState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n            console.log('selectedCategoryIds', selectedCategoryIds);\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n\n\n    }\n\n\n    // console.log('selectedOpions', selectedOpions);\n\n\n    return (\n        <>\n\n            <Skeleton loading={tagState.isLoading}>\n                {tagState.done && tagState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Found' height={150} />\n                    </div>\n                )}\n\n            </Skeleton>\n\n\n        </>\n    )\n}\n\nexport default Tags\n","import React from 'react'\n\n\n// import components\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\nimport Empty from \"../../components/Empty\";\n\nimport {\n    ShopOutlined\n} from '@ant-design/icons';\n\n\ninterface Props {\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({\n    setProductList,\n    productList\n}: Props) => {\n    return (\n        <div\n            style={{\n                // @ts-ignore\n                flexDirection: 'flex'\n            }}\n            className='addOrderContainer__container-orderSummary'>\n            <div className='addOrderContainer__container-productItemContainer'>\n                {productList && productList.length > 0 && productList.map(item => {\n                    return <AddNewOrderProductItem\n                        setProductList={setProductList}\n                        productList={productList}\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                {!(productList.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Added' height={150} />\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default AddNewOrderSummary\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\nimport FreeSelectProducts from './FreeSelectProducts';\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\n\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  code: '',\n  minimumOrder: null,\n  amount: '',\n  amountType: '',\n  orderedProducts: [],\n  freeDelivery: true,\n  freeProducts: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  category?: any;\n  setTagDetailData?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  category,\n  setTagDetailData,\n}: Props) => {\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\n    {},\n    'updateCoupon'\n  );\n  const [couponDetailState, handleCouponDetailFetch] = useHandleFetch(\n    {},\n    'couponDetail'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [freeProductIds, setFreeProductIds] = useState([]);\n  const [freeProductList, setFreeProductList] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCouponDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: category.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [category]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.data &&\n      Object.keys(couponDetailState.data).length > 0\n    ) {\n      const images = couponDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([couponDetailState.data.cover]);\n        setCoverImageId(couponDetailState.data.cover['id']);\n      }\n    }\n  }, [couponDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n      }\n    }\n  }, [myImages]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const orderedProducts =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\n    //     return {\n    //         _id: product._id,\n    //         variation: product.variation,\n    //         quantity: product.quantity,\n    //     }\n    // }) : [];\n\n    const addTagRes = await handleAddCouponStateFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        code: values.code,\n        minimumOrder: values.minimumOrder,\n        amount: values.amount,\n        amountType: values.amountType,\n        // freeDelivery: false,\n        orderedProducts: orderedProducts,\n        // freeProducts: freeProducts,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        startDate,\n        endDate,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      setTagDetailData({\n        ...category,\n        // @ts-ignore\n        ...addTagRes,\n      });\n\n      //   actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      const images = category.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (category.cover && category.cover['id']) {\n        // @ts-ignore\n        setmyImages([category.cover]);\n        setCoverImageId(category.cover['id']);\n      }\n    }\n  }, [category]);\n\n  useEffect(() => {\n    if (!addCouponState['isLoading']) {\n      const error = addCouponState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCouponState]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.done &&\n      couponDetailState['data'] &&\n      Object.keys(couponDetailState['data']).length > 0 && [\n        'orderedProducts',\n      ] &&\n      couponDetailState['data']['orderedProducts'].length > 0\n    ) {\n      const productIds = couponDetailState['data']['orderedProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = couponDetailState['data']['orderedProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [couponDetailState]);\n\n  console.log('couponDetialQuickEdit', couponDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  useEffect(() => {\n    if (freeProductIds.length > 0) {\n      if (freeProductIds.length > freeProductList.length) {\n        const variation =\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setFreeProductList([\n          ...freeProductList,\n          {\n            ...freeProductIds[freeProductIds.length - 1],\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (freeProductIds.length < freeProductList.length) {\n        console.log('freeProductIds', freeProductIds);\n        console.log('productList', productList);\n\n        const newProductList = freeProductList.filter((item) => {\n          let isTrue = false;\n          freeProductIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setFreeProductList(newProductList);\n      }\n    } else {\n      setFreeProductList([]);\n    }\n    // console.log('freeProductIds', freeProductIds)\n  }, [freeProductIds]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      console.log('hsit');\n\n      let startDate = category.startDate;\n      let endDate = category.endDate;\n\n      startDate = startDate && new Date(moment(startDate).format());\n      endDate = endDate && new Date(moment(endDate).format());\n\n      console.log('CategorydateStart', startDate);\n      console.log('CategorydateStart', endDate);\n\n      // @ts-ignore\n      setStartDate(startDate);\n      // @ts-ignore\n      setEndDate(endDate);\n    }\n  }, [category]);\n\n  const handleStartEndDateRangeDate = (e) => {\n    const startDate = e[0] && new Date(moment(e[0]).format());\n    const endDate = e[1] && new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  const dateFormat = 'YYYY-MM-DD';\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            width={'45vw'}\n            style={{\n              top: '40px',\n            }}\n            title='Edit Coupon'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Code'\n                  value={values.code}\n                  name='code'\n                  isError={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  errorString={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('code');\n                  }}\n                />\n              </div>\n            </div>\n\n            <Input\n              label='Minimum Order'\n              value={values.minimumOrder}\n              name='minimumOrder'\n              isError={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              errorString={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('minimumOrder');\n              }}\n            />\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount'\n                  value={values.amount}\n                  name='amount'\n                  isError={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  errorString={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amount');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount Type'\n                  value={values.amountType}\n                  name='amountType'\n                  isError={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  errorString={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amountType');\n                  }}\n                />\n              </div>\n            </div>\n\n            {true && (\n              <div\n                style={{\n                  marginBottom: '15px',\n                }}\n              >\n                <h3 className='inputFieldLabel'>Start and end date</h3>\n                <RangePicker\n                  style={{\n                    borderRadius: '8px',\n                    borderColor: '#eee',\n                    width: '100%',\n                  }}\n                  value={[\n                    moment(startDate, dateFormat).isValid()\n                      ? moment(startDate, dateFormat)\n                      : undefined,\n                    moment(endDate, dateFormat).isValid()\n                      ? moment(endDate, dateFormat)\n                      : undefined,\n                  ]}\n                  showTime={true}\n                  onChange={handleStartEndDateRangeDate}\n                  picker={'date'}\n                />\n              </div>\n            )}\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n                      {/* \n                      {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\n\n            <OrderedProductsSelectProducts\n              setProductIds={setProductIds}\n              productIds={productIds}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\n\n            <OrderedProductsSelectedProductItems\n              productList={productList}\n              setProductList={setProductList}\n            />\n\n            {/* <h3 className='inputFieldLabel'>\n                                Free Products\n                                </h3>\n\n                            <OrderedProductsSelectProducts\n                                setProductIds={setFreeProductIds}\n                                productIds={freeProductIds}\n                            />\n\n                            <div style={{\n                                marginTop: \"15px\"\n                            }}></div>\n\n                            <h3 className='inputFieldLabel'>\n                                Selected Free Products\n                                </h3>\n\n                            <OrderedProductsSelectedProductItems\n                                productList={freeProductList}\n                                setProductList={setFreeProductList}\n                            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport CouponEdit from \"./CouponEdit\";\nimport CouponProducts from \"./CouponProducts\";\nimport  moment from 'moment'\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const res = await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if(res){\n                // @ts-ignore\n                setTagDetailData(res)\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n\n\n\n\n\n    console.log('coupondetail', tagDetailState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Coupon Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <CouponEdit\n                            addNewCategoryVisible={tagEditVisible}\n                            setAddNewCategoryVisible={setTagEditVisible}\n                            category={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n                        <div className='brandDetailContainer__header-coverContainer'>\n                            <img src={tagDetailData['cover'] && tagDetailData['cover']['cover']} alt=\"\" />\n                        </div>\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['code'] && (\n                                <h3>\n                                    CODE:\n                                    <span>\n                                        {tagDetailData['code']}\n                                    </span>\n\n                                </h3>\n                            )}\n                          \n\n                            {tagDetailData['amount'] && (\n                                <h3>\n                                    AMOUT:\n                                    <span>\n                                        {tagDetailData['amount']}\n                                    </span>\n\n                                </h3>\n                            )}\n\n\n                            {tagDetailData['startDate'] && (\n                                <h3>\n                                    START DATE:\n                                    <span>\n                                    {moment(tagDetailData['startDate']).format('MMMM Do YYYY, h:mm:ss a')}\n                                    </span>\n\n                                </h3>\n                            )}\n\n\n\n                            {tagDetailData['endDate'] && (\n                                <h3>\n                                    END DATE:\n                                    <span>\n                                    {moment(tagDetailData['endDate']).format('MMMM Do YYYY, h:mm:ss a')}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Ordered Products\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagDetailState.done && tagDetailData && tagDetailData['orderedProducts'] && !(tagDetailData['orderedProducts'].length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n\n                )}\n\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\n                    <>\n                        {tagDetailData['orderedProducts'] && tagDetailData['orderedProducts'].length > 0 &&\n                            tagDetailData['orderedProducts'].map(product => {\n                                return (\n                                    <CouponProducts productId={product['_id']} />\n                                )\n                            })}\n                    </>\n                )}\n            </div>\n\n            {/* {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && tagDetailData['freeProducts'] && (\n                <div className='brandDetailContainer__heading'>\n                    <h3>\n                        Free Products\n                       </h3>\n                </div>\n            )\n            }\n\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagDetailState.done && tagDetailData && tagDetailData['freeProducts'] && !(tagDetailData['freeProducts'].length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\n                    <>\n                        {tagDetailData['freeProducts'] && tagDetailData['freeProducts'].length > 0 &&\n                            tagDetailData['freeProducts'].map(product => {\n                                return (\n                                    <CouponProducts\n                                        quantity={product.quantity}\n                                        productId={product['_id']} />\n                                )\n                            })}\n                    </>\n                )}\n\n            </div> */}\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\nimport FreeSelectProducts from './FreeSelectProducts';\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  code: '',\n  minimumOrder: null,\n  amount: '',\n  amountType: '',\n  orderedProducts: [],\n  freeDelivery: true,\n  freeProducts: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n  category?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n  category,\n}: Props) => {\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\n    {},\n    'updateCoupon'\n  );\n  const [couponDetailState, handleCouponDetailFetch] = useHandleFetch(\n    {},\n    'couponDetail'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [freeProductIds, setFreeProductIds] = useState([]);\n  const [freeProductList, setFreeProductList] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCouponDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: category.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [category]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.data &&\n      Object.keys(couponDetailState.data).length > 0\n    ) {\n      const images = couponDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([couponDetailState.data.cover]);\n        setCoverImageId(couponDetailState.data.cover['id']);\n      }\n    }\n  }, [couponDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n      }\n    }\n  }, [myImages]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const orderedProducts =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\n    //     return {\n    //         _id: product._id,\n    //         variation: product.variation,\n    //         quantity: product.quantity,\n    //     }\n    // }) : [];\n\n    const addTagRes = await handleAddCouponStateFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        code: values.code,\n        minimumOrder: values.minimumOrder,\n        amount: values.amount,\n        amountType: values.amountType,\n        // freeDelivery: false,\n        orderedProducts: orderedProducts,\n        // freeProducts: freeProducts,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        startDate,\n        endDate,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      const positionInTag = () => {\n        return tagList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      function getCover(id) {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      }\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        ...addTagRes,\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      setTagList(updateTagList);\n\n      setProductList([]);\n      setProductIds([]);\n      setStartDate('');\n      setEndDate('');\n      setmyImages(false);\n      setCoverImageId('');\n      setvisibleMedia(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('4444444', myImages);\n  console.log('4444444', coverImageId);\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n\n    setProductList([]);\n    setProductIds([]);\n    setStartDate('');\n    setEndDate('');\n    setmyImages(false);\n    setCoverImageId('');\n    setvisibleMedia(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      const images = category.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (category.cover && category.cover['id']) {\n        // @ts-ignore\n        setmyImages([category.cover]);\n        setCoverImageId(category.cover['id']);\n      }\n    }\n  }, [category]);\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      console.log('hsit');\n\n      let startDate = category.startDate;\n      let endDate = category.endDate;\n\n      startDate = startDate && new Date(moment(startDate).format());\n      endDate = endDate && new Date(moment(endDate).format());\n\n      console.log('CategorydateStart', startDate);\n      console.log('CategorydateStart', endDate);\n\n      // @ts-ignore\n      setStartDate(startDate);\n      // @ts-ignore\n      setEndDate(endDate);\n    }\n  }, [category]);\n\n  const handleStartEndDateRangeDate = (e) => {\n    const startDate = e[0] && new Date(moment(e[0]).format());\n    const endDate = e[1] && new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  useEffect(() => {\n    if (!addCouponState['isLoading']) {\n      const error = addCouponState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCouponState]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.done &&\n      couponDetailState['data'] &&\n      Object.keys(couponDetailState['data']).length > 0 && [\n        'orderedProducts',\n      ] &&\n      couponDetailState['data']['orderedProducts'].length > 0\n    ) {\n      const productIds = couponDetailState['data']['orderedProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = couponDetailState['data']['orderedProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [couponDetailState]);\n\n  console.log('couponDetialQuickEdit', couponDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  console.log('startDate--', startDate);\n  console.log('endDate--', endDate);\n\n  useEffect(() => {\n    if (freeProductIds.length > 0) {\n      if (freeProductIds.length > freeProductList.length) {\n        const variation =\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setFreeProductList([\n          ...freeProductList,\n          {\n            ...freeProductIds[freeProductIds.length - 1],\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (freeProductIds.length < freeProductList.length) {\n        console.log('freeProductIds', freeProductIds);\n        console.log('productList', productList);\n\n        const newProductList = freeProductList.filter((item) => {\n          let isTrue = false;\n          freeProductIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setFreeProductList(newProductList);\n      }\n    } else {\n      setFreeProductList([]);\n    }\n    // console.log('freeProductIds', freeProductIds)\n  }, [freeProductIds]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const dateFormat = 'YYYY-MM-DD';\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            width={'45vw'}\n            style={{\n              top: '40px',\n            }}\n            title='Edit Coupon'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            // destroyOnClose={true}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Code'\n                  value={values.code}\n                  name='code'\n                  isError={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  errorString={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('code');\n                  }}\n                />\n              </div>\n            </div>\n\n            <Input\n              label='Minimum Order'\n              value={values.minimumOrder}\n              name='minimumOrder'\n              isError={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              errorString={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('minimumOrder');\n              }}\n            />\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount'\n                  value={values.amount}\n                  name='amount'\n                  isError={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  errorString={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amount');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount Type'\n                  value={values.amountType}\n                  name='amountType'\n                  isError={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  errorString={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amountType');\n                  }}\n                />\n              </div>\n            </div>\n\n            {true && (\n              <div\n                style={{\n                  marginBottom: '15px',\n                }}\n              >\n                <h3 className='inputFieldLabel'>Start and end date</h3>\n                <RangePicker\n                  style={{\n                    borderRadius: '8px',\n                    borderColor: '#eee',\n                    width: '100%',\n                  }}\n                  value={[\n                    moment(startDate, dateFormat).isValid()\n                      ? moment(startDate, dateFormat)\n                      : undefined,\n                    moment(endDate, dateFormat).isValid()\n                      ? moment(endDate, dateFormat)\n                      : undefined,\n                  ]}\n                  showTime={true}\n                  onChange={handleStartEndDateRangeDate}\n                  picker={'date'}\n                />\n              </div>\n            )}\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {/* {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\n\n            <OrderedProductsSelectProducts\n              setProductIds={setProductIds}\n              productIds={productIds}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\n\n            <OrderedProductsSelectedProductItems\n              productList={productList}\n              setProductList={setProductList}\n            />\n\n            {/* <h3 className='inputFieldLabel'>\n                                Free Products\n                                </h3>\n\n                            <OrderedProductsSelectProducts\n                                setProductIds={setFreeProductIds}\n                                productIds={freeProductIds}\n                            />\n\n                            <div style={{\n                                marginTop: \"15px\"\n                            }}></div>\n\n                            <h3 className='inputFieldLabel'>\n                                Selected Free Products\n                                </h3>\n\n                            <OrderedProductsSelectedProductItems\n                                productList={freeProductList}\n                                setProductList={setFreeProductList}\n                            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\nimport moment from 'moment';\n// import third party ui lib\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\nimport FreeSelectProducts from './FreeSelectProducts';\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\n\nconst { RangePicker } = DatePicker;\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  code: '',\n  minimumOrder: null,\n  amount: '',\n  amountType: '',\n  orderedProducts: [],\n  freeDelivery: true,\n  freeProducts: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\n    {},\n    'addCoupon'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [freeProductIds, setFreeProductIds] = useState([]);\n  const [freeProductList, setFreeProductList] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const orderedProducts =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\n    //     return {\n    //         _id: product._id,\n    //         variation: product.variation,\n    //         quantity: product.quantity,\n    //     }\n    // }) : [];\n\n    const addTagRes = await handleAddCouponStateFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        code: values.code,\n        minimumOrder: values.minimumOrder,\n        amount: values.amount,\n        amountType: values.amountType,\n        // freeDelivery: false,\n        orderedProducts: orderedProducts,\n        // freeProducts: freeProducts,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        startDate,\n        endDate,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      setTagList([\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n          name: addTagRes['name'] || '',\n        },\n        ...tagList,\n      ]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (!addCouponState['isLoading']) {\n      const error = addCouponState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCouponState]);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  useEffect(() => {\n    if (freeProductIds.length > 0) {\n      if (freeProductIds.length > freeProductList.length) {\n        const variation =\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setFreeProductList([\n          ...freeProductList,\n          {\n            ...freeProductIds[freeProductIds.length - 1],\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (freeProductIds.length < freeProductList.length) {\n        console.log('freeProductIds', freeProductIds);\n        console.log('productList', productList);\n\n        const newProductList = freeProductList.filter((item) => {\n          let isTrue = false;\n          freeProductIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setFreeProductList(newProductList);\n      }\n    } else {\n      setFreeProductList([]);\n    }\n    // console.log('freeProductIds', freeProductIds)\n  }, [freeProductIds]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleStartEndDateRangeDate = (e) => {\n    const startDate = new Date(moment(e[0]).format());\n    const endDate = new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            width={'45vw'}\n            style={{\n              top: '40px',\n            }}\n            title='Add New Coupon'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Code'\n                  value={values.code}\n                  name='code'\n                  isError={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  errorString={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('code');\n                  }}\n                />\n              </div>\n            </div>\n\n            <Input\n              label='Minimum Order'\n              value={values.minimumOrder}\n              name='minimumOrder'\n              isError={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              errorString={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('minimumOrder');\n              }}\n            />\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount'\n                  value={values.amount}\n                  name='amount'\n                  isError={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  errorString={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amount');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount Type'\n                  value={values.amountType}\n                  name='amountType'\n                  isError={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  errorString={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amountType');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginBottom: '15px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Start and end date</h3>\n              <RangePicker\n                style={{\n                  borderRadius: '8px',\n                  borderColor: '#eee',\n                  width: '100%',\n                }}\n                showTime={true}\n                onChange={handleStartEndDateRangeDate}\n                picker={'date'}\n              />\n            </div>\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {/* {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\n\n            <OrderedProductsSelectProducts\n              setProductIds={setProductIds}\n              productIds={productIds}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\n\n            <OrderedProductsSelectedProductItems\n              productList={productList}\n              setProductList={setProductList}\n            />\n\n            {/* <h3 className='inputFieldLabel'>\n                                Free Products\n                                </h3>\n\n                            <OrderedProductsSelectProducts\n                                setProductIds={setFreeProductIds}\n                                productIds={freeProductIds}\n                            />\n\n                            <div style={{\n                                marginTop: \"15px\"\n                            }}></div>\n\n                            <h3 className='inputFieldLabel'>\n                                Selected Free Products\n                                </h3>\n\n                            <OrderedProductsSelectedProductItems\n                                productList={freeProductList}\n                                setProductList={setFreeProductList}\n                            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport Moment from 'react-moment';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport CouponQuickEdit from './CouponQuickEdit';\nimport AddNewCoupon from './AddNewCoupon';\nimport moment from 'moment';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteCoupon'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Coupon');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/coupon/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/coupon/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Code'\n          dataIndex='code'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Discount'\n          dataIndex='amount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n                    title=\"Order Products\"\n                    dataIndex=\"orderedProductsCount\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                /> */}\n\n        <Column\n          title='Order Products'\n          dataIndex='orderedProductsCount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n                    title=\"Free Products\"\n                    dataIndex=\"freeProductsCount\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                /> */}\n\n        <Column\n          width={150}\n          title='Start Date'\n          dataIndex='startDate'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                  fontSize: '13px',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          width={150}\n          title='End Date'\n          dataIndex='endDate'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Coupon'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <CouponQuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          category={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst Couponlist = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  console.log('couponList', tagState);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Coupons</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search coupon..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Coupon found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewCoupon\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default Couponlist;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // firstName: Yup.string()\n  // \t.label('First name')\n  // \t.required()\n  // \t.min(2, 'First name must have at least 2 characters '),\n  // lastName: Yup.string()\n  // \t.label('Lastname')\n  // \t.required()\n  // \t.min(2, 'Last name must have at least 2 characters '),\n  // phone: Yup.string()\n  // \t.required('Please tell us your mobile number.')\n  // \t.max(13, 'Please enter a valid mobile number.'),\n  // password: Yup.string()\n  // \t.label('Password')\n  // \t.required()\n  // \t.min(6, 'Password must have at least 6 characters'),\n  // address1: Yup.string()\n  // \t.label('Address line 1')\n  // \t.required()\n  // \t.min(3, 'Address line 1 must have at least 3 characters '),\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  address1: '',\n  address2: '',\n  zipCode: '',\n  password: '',\n  dealerCode: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Customer Created!',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  customerList?: any;\n  setCustomerList?: any;\n}\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customerList,\n  setCustomerList,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'addCustomer'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [toggleReferralCode, settoggleReferralCode] = useState(false);\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        password: values.password,\n        address1: values.address1,\n        address2: values.address2,\n        firstName: values.firstName.trim(),\n        lastName: values.lastName,\n        country: selectedCountryValue,\n        city: selectedCityValue,\n        dealerCode: values.dealerCode,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      setCustomerList([\n        {\n          id: addCustomerRes['_id'] || '',\n          key: addCustomerRes['_id'] || '',\n          name: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\n          // @ts-ignore\n          ...addCustomerRes,\n        },\n        ...customerList,\n      ]);\n      setAddNewCategoryVisible(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Customer'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              className='dubbleRowInputs'\n              style={{\n                alignItems: 'center',\n                ...(!toggleReferralCode && {\n                  margin: '10px 0',\n                }),\n              }}\n            >\n              <div className='dubbleRowInputs__item'>\n                {toggleReferralCode && (\n                  <Input\n                    label='Referral Code'\n                    value={values.dealerCode}\n                    name='dealerCode'\n                    isError={\n                      (touched.dealerCode && errors.dealerCode) ||\n                      (!isSubmitting &&\n                        addCustomerState.error['error']['dealerCode'])\n                    }\n                    errorString={\n                      (touched.dealerCode && errors.dealerCode) ||\n                      (!isSubmitting &&\n                        addCustomerState.error['error']['dealerCode'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('dealerCode');\n                    }}\n                  />\n                )}\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3\n                  onClick={() => settoggleReferralCode((value) => !value)}\n                  style={{\n                    color: '#1890ff',\n                    marginBottom: '-9px',\n                    marginLeft: '115px',\n                    cursor: 'pointer',\n                  }}\n                  className='inputFieldLabel'\n                >\n                  Add Referral Code\n                </h3>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Password *'\n                type='password'\n                value={values.password}\n                name='password'\n                isError={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && addCustomerState.error['error']['password'])\n                }\n                errorString={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && addCustomerState.error['error']['password'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('password');\n                }}\n              />\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>Country *</h3>\n\n                <Form.Item\n                  validateStatus={\n                    addCustomerState.error['error']['country'] ? 'error' : ''\n                  }\n                  help={addCustomerState.error['error']['country']}\n                  // noStyle={true}\n                >\n                  <Select\n                    notFoundContent={\n                      <Empty\n                        description='No Country Found'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a Country'\n                    optionFilterProp='children'\n                    onChange={onChangeCountry}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {countryListState.done &&\n                      countryListState.data.length > 0 &&\n                      countryOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>City *</h3>\n                <Form.Item\n                  // noStyle={true}\n                  validateStatus={\n                    addCustomerState.error['error']['city'] ? 'error' : ''\n                  }\n                  help={addCustomerState.error['error']['city']}\n                >\n                  <Select\n                    className='selectClassName'\n                    notFoundContent={\n                      <Empty\n                        description='First Select a Country'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a city'\n                    optionFilterProp='children'\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {cityListState.done &&\n                      cityListState.data.length > 0 &&\n                      cityOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Address *'\n                value={values.address1}\n                name='address1'\n                isError={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting && addCustomerState.error['error']['address1'])\n                }\n                errorString={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting && addCustomerState.error['error']['address1'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address1');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewCategory;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // firstName: Yup.string()\n  //   .label('Firstname')\n  //   .required()\n  //   .min(2, 'First name must have at least 2 characters '),\n  // lastName: Yup.string()\n  //   .label('Lastname')\n  //   .required()\n  //   .min(2, 'Lastname must have at least 2 characters '),\n  // phone: Yup.string()\n  //   .required('Please tell us your mobile number.')\n  //   .max(13, 'Please enter a valid mobile number.'),\n  // password: Yup.string()\n  //   .label('Password')\n  //   .required()\n  //   .min(6, 'Password must have at least 6 characters'),\n  // address1: Yup.string()\n  //   .label('Address line 1')\n  //   .required()\n  //   .min(3, 'Address line 1 must have at least 3 characters '),\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Customer Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  customer: any;\n  setvisible: any;\n  visible: any;\n  customerList?: any;\n  setCustomerList?: any;\n}\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  address1: '',\n  firstName: '',\n  lastName: '',\n  dealerCode: '',\n};\n\nconst QuickEdit = ({\n  customer,\n  setvisible,\n  visible,\n  customerList,\n  setCustomerList,\n}: Props) => {\n  const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch(\n    {},\n    'updateCustomer'\n  );\n\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateCustomerRes = await handleUpdateCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        phone: values.phone.trim(),\n        email: values.email.trim(),\n        password: values.password,\n        address1: values.address1.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName,\n        country: selectedCountryValue || customer.country,\n        city: selectedCityValue || customer.city,\n        dealerCode: values.dealerCode.trim(),\n      },\n    });\n\n    // @ts-ignore\n    if (updateCustomerRes && updateCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      const positionInTag = () => {\n        return customerList.map((item) => item.id).indexOf(customer.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, customerList[index], {\n        // @ts-ignore\n        ...updateCustomerRes,\n        id: values.id,\n        name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\n      });\n      const updateTagList = [\n        ...customerList.slice(0, index),\n        updatedItem,\n        ...customerList.slice(index + 1),\n      ];\n      setCustomerList(updateTagList);\n      setvisible(false);\n      setselectedCityValue('');\n      setselectedCountryValue('');\n      //   setcountryOptions([]);\n      //   setcityOptions([]);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, [customer]);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue || customer.country,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [customer.country, selectedCountryValue]);\n\n  useEffect(() => {\n    if (!updateCustomerState['isLoading']) {\n      const error = updateCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !updateCustomerState['isLoading'] &&\n      Object.keys(updateCustomerState.data).length > 0\n    ) {\n      if (updateCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [updateCustomerState]);\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n\n    setselectedCityValue('');\n    setselectedCountryValue('');\n    // setcountryOptions([]);\n    // setcityOptions([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Customer Edit'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            destroyOnClose={true}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Referral Code'\n                value={values.dealerCode}\n                name='dealerCode'\n                isError={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                errorString={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('dealerCode');\n                }}\n              />\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>Country *</h3>\n\n                <Form.Item\n                  validateStatus={\n                    updateCustomerState.error['error']['country'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['country']}\n                  // noStyle={true}\n                >\n                  <Select\n                    notFoundContent={\n                      <Empty\n                        description='No Country Found'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    defaultValue={customer && customer.country}\n                    placeholder='Select a Country'\n                    optionFilterProp='children'\n                    onChange={onChangeCountry}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {countryListState.done &&\n                      countryListState.data.length > 0 &&\n                      countryOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>City *</h3>\n                <Form.Item\n                  // noStyle={true}\n                  validateStatus={\n                    updateCustomerState.error['error']['city'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['city']}\n                >\n                  <Select\n                    className='selectClassName'\n                    notFoundContent={\n                      <Empty\n                        description='First Select a Country'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a city'\n                    defaultValue={customer && customer.city}\n                    optionFilterProp='children'\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {cityListState.done &&\n                      cityListState.data.length > 0 &&\n                      cityOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Address *'\n                value={values.address1}\n                name='address1'\n                isError={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                errorString={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address1');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  notification,\n  Space,\n  Select,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewCustomer from './AddNewCustomer';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\nimport moment from 'moment';\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst { Option } = Select;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setCustomerList?: any;\n}\n\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n\n  const history = useHistory();\n\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\n    {},\n    'deleteCustomer'\n  );\n  const handleDeleteCustomer = async (id) => {\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\n      openSuccessNotification('Deleted Customer');\n      const newCustomerList = data.filter((item) => item.id !== id);\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/customer/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Phone'\n          dataIndex='phone'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n           title=\"City\" \n           dataIndex=\"city\" \n           key=\"id\" \n           className='classnameofthecolumn'\n            /> */}\n\n        <Column\n          title='Dealer'\n          dataIndex='dealerName'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // go to dealer detail\n                  // history.push(`/admin/dealer/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Order'\n          dataIndex='orderCount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Price'\n          dataIndex='totalOrderPrice'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={150}\n          title='Created'\n          dataIndex='created'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\n            </Space>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Customer'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteCustomer(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          customerList={data}\n          setCustomerList={setCustomerList}\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CustomerList = ({ history }: Props) => {\n  const [customerList, setCustomerList] = useState([]);\n\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'customerList'\n  );\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\n\n  console.log('customerList', customerList);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const getSorttingvalue = () => {\n        switch (orderStatusFilterValue) {\n          case 'newFirst':\n            return {\n              sortItem: 'added',\n              sortOrderValue: '-1',\n            };\n            break;\n          case 'orderCountHigh':\n            return {\n              sortItem: 'orderCount',\n              sortOrderValue: '-1',\n            };\n            break;\n          case 'orderCountLow':\n            return {\n              sortItem: 'orderCount',\n              sortOrderValue: '1',\n            };\n            break;\n\n          case 'totalPriceHigh':\n            return {\n              sortItem: 'totalPrice',\n              sortOrderValue: '-1',\n            };\n            break;\n\n          case 'totalPriceLow':\n            return {\n              sortItem: 'totalPrice',\n              sortOrderValue: '1',\n            };\n            break;\n\n          default:\n            return {\n              sortItem: 'added',\n              sortOrderValue: '-1',\n            };\n        }\n      };\n      const customers = await handleCustomerListFetch({\n        urlOptions: {\n          params: {\n            ...getSorttingvalue(),\n            limitNumber: 252423480,\n          },\n        },\n      });\n      // @ts-ignore\n      setCustomerList(customers);\n    };\n    setCustomers();\n  }, [orderStatusFilterValue]);\n\n  const handleSearch = (value) => {\n    if (customerState.data.length > 0) {\n      const newCustomerList = customerState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('customerState',customerState)\n\n  const orderFilteringOption = [\n    {\n      name: 'New first',\n      value: 'newFirst',\n    },\n    {\n      name: 'Order count (high > low)',\n      value: 'orderCountHigh',\n    },\n    {\n      name: 'Order count (low < high)',\n      value: 'orderCountLow',\n    },\n    {\n      name: 'Total price (high > low)',\n      value: 'totalPriceHigh',\n    },\n    {\n      name: 'Total price (low < high)',\n      value: 'totalPriceLow',\n    },\n  ];\n\n  const onOrderStatusFilterChange = (value) => {\n    setorderStatusFilterValue(value);\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Customers</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search customer..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          <div>\n            <Select\n              style={{\n                borderRadius: '15px',\n                color: '#3fa6f9',\n                marginRight: '15px',\n                width: '200px',\n              }}\n              placeholder='Select status'\n              optionFilterProp='children'\n              onChange={onOrderStatusFilterChange}\n              defaultValue={'newFirst'}\n              bordered={false}\n            >\n              {orderFilteringOption.map((option) => {\n                return <Option value={option.value}>{option.name}</Option>;\n              })}\n            </Select>\n\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          </div>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {customerState.done && customerList.length > 0 && (\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\n          )}\n          {customerState.isLoading && <DataTableSkeleton />}\n          {customerState.done && !(customerList.length > 0) && (\n            <Empty title='No Customer found' />\n          )}\n        </div>\n      </div>\n\n      {customerState.done && (\n        <AddNewCustomer\n          setCustomerList={setCustomerList}\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          customerList={customerState.data}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CustomerList);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Empty, Form } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // firstName: Yup.string()\n  //     .label('Firstname')\n  //     .required()\n  //     .min(2, 'First name must have at least 2 characters '),\n  // lastName: Yup.string()\n  //     .label('Lastname')\n  //     .required()\n  //     .min(2, 'Lastname must have at least 2 characters '),\n  // phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  // address1: Yup.string()\n  //     .label('Address line 1')\n  //     .required()\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Customer Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  customer: any;\n  setvisible: any;\n  visible: any;\n  setCustomerDetailData: any;\n}\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  address1: '',\n  firstName: '',\n  lastName: '',\n  dealerCode: '',\n};\n\nconst QuickEdit = ({\n  customer,\n  setvisible,\n  visible,\n  setCustomerDetailData,\n}: Props) => {\n  const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch(\n    {},\n    'updateCustomer'\n  );\n\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateCustomerRes = await handleUpdateCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        phone: values.phone.trim(),\n        email: values.email.trim(),\n        password: values.password,\n        address1: values.address1.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName,\n        country: selectedCountryValue || customer.country,\n        city: selectedCityValue || customer.city,\n        dealerCode: values.dealerCode.trim(),\n      },\n    });\n\n    // @ts-ignore\n    if (updateCustomerRes && updateCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      setCustomerDetailData({\n        // @ts-ignore\n        ...updateCustomerRes,\n        id: values.id,\n        name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\n      });\n\n      setvisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateCustomerState['isLoading']) {\n      const error = updateCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, [customer]);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue || customer.country,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [customer.country, selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  console.log('realCustomer', customer);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Customer Edit'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Referral Code'\n                value={values.dealerCode}\n                name='dealerCode'\n                isError={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                errorString={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('dealerCode');\n                }}\n              />\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>Country *</h3>\n\n                <Form.Item\n                  validateStatus={\n                    updateCustomerState.error['error']['country'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['country']}\n                  // noStyle={true}\n                >\n                  <Select\n                    notFoundContent={\n                      <Empty\n                        description='No Country Found'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    defaultValue={customer && customer.country}\n                    placeholder='Select a Country'\n                    optionFilterProp='children'\n                    onChange={onChangeCountry}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {countryListState.done &&\n                      countryListState.data.length > 0 &&\n                      countryOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>City *</h3>\n                <Form.Item\n                  // noStyle={true}\n                  validateStatus={\n                    updateCustomerState.error['error']['city'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['city']}\n                >\n                  <Select\n                    className='selectClassName'\n                    notFoundContent={\n                      <Empty\n                        description='First Select a Country'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a city'\n                    defaultValue={customer && customer.city}\n                    optionFilterProp='children'\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {cityListState.done &&\n                      cityListState.data.length > 0 &&\n                      cityOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Address *'\n                value={values.address1}\n                name='address1'\n                isError={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                errorString={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address1');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import \nimport Moment from \"react-moment\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport CustomerEdit from \"./CustomerEdit\";\nimport moment from \"moment\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [customerDetailData,setCustomerDetailData] = useState({}); \n\n\n\n    console.log('customerDetailData',customerDetailData); \n    const params = useParams();\n    const history = useHistory();\n    const customerId = params['id'];\n\n    useEffect(() => {\n\n        const getCustomerDetail = async () => {\n            const customerDetailDataRes = await handleCustomerDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if(customerDetailDataRes){\n                // @ts-ignore\n                setCustomerDetailData(customerDetailDataRes); \n            }\n\n            console.log('customerDetailDataRes',customerDetailDataRes)\n        };\n\n        getCustomerDetail();\n\n    }, [customerId]);\n\n\n\n    useEffect(() => {\n        const getOrderList = async () => {\n            await handleOrderListFetch({\n                urlOptions: {\n                    params: {\n                        customerId: customerId\n                    }\n                }\n            })\n        };\n\n        getOrderList();\n\n    }, [customerId]);\n\n\n\n\n    console.log('customerDetailData', customerDetailData);\n\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Customer Detail\n                </h3>\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <>\n                        <CustomerEdit\n                            visible={tagEditVisible}\n                            setvisible={setTagEditVisible}\n                            customer={customerDetailData}\n                            setCustomerDetailData={setCustomerDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={customerDetailState.isLoading}>\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {customerDetailData['name']}\n                            </h2>\n                            <h3>\n                                {customerDetailData['description']}\n                            </h3>\n\n                            {customerDetailData['country'] && (\n                                <h3>\n                                    COUNTRY:\n                                    <span>\n                                        {customerDetailData['country']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n                            {customerDetailData['city'] && (\n                                <h3>\n                                    CITY:\n                                    <span>\n                                        {customerDetailData['city']}\n                                    </span>\n                                </h3>\n                            )}\n                        \n\n\n                            {customerDetailData['address1'] && (\n                                <h3>\n                                    ADDRESS:\n                                    <span>\n                                        {customerDetailData['address1']}\n                                    </span>\n                                </h3>\n                            )}\n                         \n\n                            {customerDetailData['phone'] && (\n                                <h3>\n                                    PHONE:\n                                    <span>\n                                        {customerDetailData['phone']}\n                                    </span>\n                                </h3>\n                            )}\n\n                             {customerDetailData['email'] && (\n                                <h3>\n                                    EMAIL:\n                                    <span>\n                                        {customerDetailData['email']}\n                                    </span>\n                                </h3>\n                            )}\n\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Orders \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {orderListState.isLoading && <DataTableSkeleton />}\n                {orderListState.done && !(orderListState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={orderListState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                          \n          \n          \n\n        <Column\n          title=\"Code\"\n          dataIndex=\"shortCode\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                #{text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n    <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                {text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n\n\n                \n\n        <Column\n           title=\"Delivery\" \n           dataIndex=\"deliveryName\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n\n\n          <Column\n           title=\"Created\" \n           dataIndex=\"date_created\" \n           key=\"id\" \n           className='classnameofthecolumn'\n           render={(text, record: any) => (\n            <>\n\n              <h4\n               \n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n\n                }}>\n                  {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n\n\n            </>\n          )}\n            />\n\n\n              <Column\n                title=\"Total Price\" \n                dataIndex=\"total\" \n                key=\"id\" \n                className='classnameofthecolumn'\n                />\n\n\n\n\n          <Column\n            width={150}\n           title=\"Status\" \n           dataIndex=\"status\" \n           key=\"id\" \n           className='classnameofthecolumn'\n           render={(text, record: any) => (\n            <>\n\n             <a href='##'>\n              <span\n              style={{\n                fontSize:'12px'\n              }}\n                >\n                {text}\n             </span> \n            </a>\n            </>\n          )}\n            />\n\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Empty,\n  Popconfirm,\n  Space,\n  Button,\n  Input,\n  Tooltip,\n  notification,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nconst { Column } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Page Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setBrandList: any;\n  roles: any;\n}\n\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deletePageState, handleDeletePageFetch] = useHandleFetch(\n    {},\n    'deletePage'\n  );\n\n  const history = useHistory();\n\n  const handleDeletePage = async (id) => {\n    const deletePageRes = await handleDeletePageFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deletePageRes && deletePageRes.status === 'ok') {\n      openSuccessNotification('Deleted Page');\n      const newBrandList = data.filter((item) => item.id !== id);\n      setBrandList(newBrandList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'100px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/page/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // setactiveCategoryForEdit(record);\n                  history.push(`/admin/page/${record.id}`);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Last Modified'\n          dataIndex='lastModified'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Created'\n          dataIndex='added'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess('postPage', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Page'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        history.push(`/admin/page/edit/${record.id}`);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeletePage(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst PageList = ({ roles }: Props) => {\n  const [pageList, setPageList] = useState([]);\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\n\n  console.log('myPageList', pageList);\n  const history = useHistory();\n\n  useEffect(() => {\n    const setPages = async () => {\n      const pages = await handlePagsListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setPageList(pages);\n    };\n    setPages();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (pageState.data.length > 0) {\n      const newBrandList = pageState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setPageList(newBrandList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search pages..'\n              onSearch={(value) => handleSearch(value)}\n            />\n          </div>\n\n          {isAccess('postPage', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => history.push('/admin/page/new')}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {pageState.done && pageList.length > 0 && (\n            <MyTable roles={roles} setBrandList={setPageList} data={pageList} />\n          )}\n          {pageState.isLoading && <DataTableSkeleton />}\n          {pageState.done && !(pageList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Page found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(PageList);\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\nimport ReactHtmlParser from 'react-html-parser';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\n// import lib\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\n// import TagEdit from \"./TagEdit\";\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'pageDetail'\n  );\n  const [tagDetailData, setTagDetailData] = useState({});\n\n  const params = useParams();\n  const history = useHistory();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const tagDetailRes = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (tagDetailRes) {\n        console.log('pageDetailRes', tagDetailRes);\n        // @ts-ignore\n        setTagDetailData(tagDetailRes);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Page Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              {/* <TagEdit\n                            tagEditVisible={tagEditVisible}\n                            setTagEditVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        /> */}\n\n              {isAccess('postPage', roles) && (\n                <Button\n                  onClick={() => {\n                    history.push(`/admin/page/edit/${tagDetailData['_id']}`);\n                  }}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Page found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer'>\n                  <img\n                    src={\n                      tagDetailData['cover'] && tagDetailData['cover']['cover']\n                    }\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{tagDetailData['name']}</h2>\n                  {tagDetailData['url'] && (\n                    <h3>\n                      URL:\n                      <span>{tagDetailData['url']}</span>\n                    </h3>\n                  )}\n\n                  {tagDetailData['lastModified'] && (\n                    <h3>\n                      LAST MODIFIED:\n                      <span>\n                        {tagDetailData['lastModified'] &&\n                          moment(tagDetailData['lastModified']).format(\n                            'MMMM Do YYYY, h:mm a'\n                          )}\n                      </span>\n                    </h3>\n                  )}\n\n                  {tagDetailData['added'] && (\n                    <h3>\n                      CREATED:\n                      <span>\n                        {tagDetailData['added'] &&\n                          moment(tagDetailData['added']).format(\n                            'MMMM Do YYYY, h:mm a'\n                          )}\n                      </span>\n                    </h3>\n                  )}\n                </div>\n              </div>\n\n              <div className='brandDetailContainer__heading'>\n                <h3>Content</h3>\n              </div>\n\n              <div\n                className='brandDetailContainer__header'\n                style={{\n                  display: 'block',\n                }}\n              >\n                {ReactHtmlParser(tagDetailData['content'])}\n              </div>\n            </>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import hhooks\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Steps,\n  Tooltip,\n} from 'antd';\n\nimport {\n  CheckCircleOutlined,\n  CaretRightOutlined,\n  CaretLeftOutlined,\n  CaretRightFilled,\n  UserOutlined,\n  InfoCircleOutlined,\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst { Option } = Select;\nconst { Step } = Steps;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Page Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  content: '',\n  bnContent: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  url: '',\n};\n\nconst steps = [\n  {\n    title: 'Order Information',\n    content: '',\n    // description: 'Add Customer & Products'\n  },\n  {\n    title: 'Billing Address',\n  },\n  {\n    title: 'Confirm Order',\n    content: '',\n  },\n];\n\ninterface Props {}\n\nconst AddNewPage = ({}: Props) => {\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\n  const [content, setContent] = useState('<p>Hello from the new page !</p>');\n  const [bnContent, setBnContent] = useState('<p>হ্যালো নতুন পেজ থেকে!</p>');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleAddPageSubmit = async (values: any, actions: any) => {\n    const addOrderRes = await handleAddPageFetch({\n      body: {\n        name: values.name,\n        content: content,\n        url: values.url.trim(),\n        cover: myImages ? myImages[0] && myImages[0].id : '',\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          content: bnContent,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addOrderRes && addOrderRes.status === 'ok') {\n      // openSuccessNotification();\n      setCoverImageId('');\n      setBnTags([]);\n      setTags([]);\n      setContent('');\n      setBnContent('');\n      setvisibleMedia();\n      setmyImages([]);\n      actions.resetForm();\n    } else {\n      openErrorNotification(\"Couldn't create page, Something went wrong\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (!addPageState['isLoading']) {\n      const error = addPageState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addPageState['isLoading'] &&\n      Object.keys(addPageState.data).length > 0\n    ) {\n      if (addPageState['data']['status'] === 'ok') {\n        openSuccessNotification('Page Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addPageState]);\n\n  console.log('myImagesdx', myImages);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='addNewPageContainer'>\n            <h3 className='addNewPageContainer__heading'>Add New Page</h3>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Title'\n                    value={values.name}\n                    name='name'\n                    placeHolder='About us,Contact us'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Title'\n                    value={values.bnName}\n                    placeHolder={'ব্লগ...'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <Input\n                label='Slug'\n                value={values.url}\n                name='url'\n                isError={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                errorString={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('url');\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\n\n              <div className='aboutToUploadImagesContainer'>\n                {myImages &&\n                  // @ts-ignore\n                  myImages.length > 0 &&\n                  myImages.map((image, index) => {\n                    return (\n                      <div className='aboutToUploadImagesContainer__item'>\n                        <div\n                          className='aboutToUploadImagesContainer__item-imgContainer'\n                          onClick={() => {\n                            setvisibleMedia(true);\n                          }}\n                        >\n                          <img src={image.cover} alt={image.alt} />\n                        </div>\n\n                        <span\n                          onClick={() => handleImagesDelete(image.id)}\n                          className='aboutToUploadImagesContainer__item-remove'\n                        >\n                          <CloseOutlined />\n                        </span>\n                      </div>\n                    );\n                  })}\n\n                {myImages ? (\n                  !myImages[0] && (\n                    <Tooltip title={'Attach images'}>\n                      <div\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                        className='aboutToUploadImagesContainer__uploadItem'\n                      >\n                        {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                        <FileImageFilled />\n                        {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                          <PlusOutlined />\n                        </span>\n                      </div>\n                    </Tooltip>\n                  )\n                ) : (\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                      <FileImageFilled />\n                      {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                )}\n              </div>\n\n              <p\n                style={{\n                  color: '#ff4d4f',\n                  marginTop: '-15px',\n                }}\n              >\n                {addPageState.error['error']['cover']}\n              </p>\n            </div>\n            <div className='addNewPageContainer__body'>\n              <h3 className='inputFieldLabel'>Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={content}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  marginTop: '15px',\n                }}\n              ></div>\n\n              <h3 className='inputFieldLabel'>BN Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={bnContent}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setBnContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Meta Title'\n                    value={values.metaTitle}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Meta Title'\n                    value={values.bnMetaTitle}\n                    placeHolder={''}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setTags}\n                    tags={tags}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnTags}\n                    tags={bnTags}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <Button\n              loading={addPageState.isLoading}\n              onClick={(e: any) => handleSubmit(e)}\n              className='btnPrimaryClassNameoutline'\n            >\n              Create page\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewPage;\n\n/*\n\n<div className=\"addNewPageContainer\">\n\t\t\t<h3 className='addNewPageContainer__heading'>\n\t\t\t\tAdd New Order\n\t\t\t</h3>\n\t\t\t<div className='addNewPageContainer__header'>\n\n\t\t\t</div>\n\t\t\t<div className='addNewPageContainer__body'>\n\n\t\t\t</div>\n\t\t</div>\n\n\n*/\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import hhooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { useParams } from 'react-router-dom';\n\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Steps,\n  Tooltip,\n} from 'antd';\n\nimport {\n  CheckCircleOutlined,\n  CaretRightOutlined,\n  CaretLeftOutlined,\n  CaretRightFilled,\n  UserOutlined,\n  InfoCircleOutlined,\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst { Option } = Select;\nconst { Step } = Steps;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Page Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  content: '',\n  bnContent: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  url: '',\n};\n\nconst steps = [\n  {\n    title: 'Order Information',\n    content: '',\n    // description: 'Add Customer & Products'\n  },\n  {\n    title: 'Billing Address',\n  },\n  {\n    title: 'Confirm Order',\n    content: '',\n  },\n];\n\ninterface Props {}\n\nconst AddNewPage = ({}: Props) => {\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'updatePage');\n  const [content, setContent] = useState('');\n  const [bnContent, setBnContent] = useState('');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'pageDetail'\n  );\n  const [tagDetailData, setTagDetailData] = useState({});\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n\n  const params = useParams();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const tagDetailRes = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (tagDetailRes) {\n        console.log('tagDetailRes', tagDetailRes);\n        // @ts-ignore\n        setTagDetailData(tagDetailRes);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\n      if (tagDetailData.cover && tagDetailData.cover['id']) {\n        // @ts-ignore\n        setmyImages([tagDetailData.cover]);\n        setCoverImageId(tagDetailData.cover['id']);\n      }\n    }\n  }, [tagDetailData]);\n\n  useEffect(() => {\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\n      setContent(tagDetailData['content'] || '');\n      setBnContent(\n        tagDetailData['bn'] && tagDetailData['bn']['content']\n          ? tagDetailData['bn']['content']\n          : ''\n      );\n    }\n  }, [tagDetailData]);\n\n  const handleAddPageSubmit = async (values: any, actions: any) => {\n    const url = values.url.trim()  ? values.url.replace('/page/','') : ''\n    const addOrderRes = await handleAddPageFetch({\n      urlOptions: {\n        placeHolders: {\n          id: tagDetailData._id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        content: content,\n        url: url,\n        cover: myImages ? myImages[0] && myImages[0].id : '',\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName.trim(),\n          content: bnContent,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addOrderRes && addOrderRes.status === 'ok') {\n      // openSuccessNotification();\n      // setCoverImageId('');\n      // setBnTags([]);\n      // setTags([]);\n      // setContent('');\n      // setBnContent('');\n      // setvisibleMedia();\n      // setmyImages([]);\n      // actions.resetForm();\n    } else {\n      openErrorNotification(\"Couldn't Update page, Something went wrong\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'page',\n          itemId: tagDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n      // if (prevItem) {\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n      //     setBrandList(updateBrandList);\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  useEffect(() => {\n    if (!addPageState['isLoading']) {\n      const error = addPageState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addPageState['isLoading'] &&\n      Object.keys(addPageState.data).length > 0\n    ) {\n      if (addPageState['data']['status'] === 'ok') {\n        openSuccessNotification('Page Updated Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addPageState]);\n\n  useEffect(() => {\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\n      const metaTags =\n        tagDetailData.metaTags && tagDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        tagDetailData.bn &&\n        tagDetailData.bn['metaTags'] &&\n        tagDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  const handleDetachSingleImage = async (id) => {\n    console.log('dure', id);\n    console.log('dure2', tagDetailData);\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'page',\n          itemId: tagDetailData.id,\n        },\n      },\n    });\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...tagDetailData,\n        ...(tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && {\n            bnMetaTitle:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaTitle &&\n              tagDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaDescription &&\n              tagDetailData['bn'].metaDescription,\n            bnName:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].name &&\n              tagDetailData['bn'].name,\n            bnDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].description &&\n              tagDetailData['bn'].description,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='addNewPageContainer'>\n            <h3 className='addNewPageContainer__heading'>Edit Page</h3>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Title'\n                    value={values.name}\n                    name='name'\n                    placeHolder='About us,Contact us'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Title'\n                    value={values.bnName}\n                    placeHolder={'ব্লগ...'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <Input\n                label='Slug'\n                value={values.url}\n                name='url'\n                isError={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                errorString={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('url');\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\n\n              <div className='aboutToUploadImagesContainer'>\n                {tagDetailData && Object.keys(tagDetailData).length > 0 && (\n                  <>\n                    {myImages &&\n                      // @ts-ignore\n                      myImages.length > 0 &&\n                      myImages.map((image, index) => {\n                        return (\n                          <div className='aboutToUploadImagesContainer__item'>\n                            <div\n                              className='aboutToUploadImagesContainer__item-imgContainer'\n                              onClick={() => {\n                                setvisibleMedia(true);\n                                // handleSetImageAsThumnail(image);\n                              }}\n                            >\n                              <img src={image.cover} alt={image.alt} />\n                            </div>\n\n                            <span\n                              onClick={() => {\n                                handleImagesDelete(image.id);\n                                handleDetachSingleImage(image.id);\n                              }}\n                              className='aboutToUploadImagesContainer__item-remove'\n                            >\n                              <CloseOutlined />\n                            </span>\n\n                            {/* {coverImageId === image.id ? (\n                              <span className='aboutToUploadImagesContainer__item-cover'>\n                                <CheckOutlined />\n                              </span>\n                            ) : (\n                              !coverImageId &&\n                              index === 0 && (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              )\n                            )} */}\n                          </div>\n                        );\n                      })}\n\n                    {!myImages ||\n                    // @ts-ignore\n                    (myImages && !(myImages && myImages.length > 0)) ? (\n                      <>\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisibleMedia(true);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            <FileImageFilled />\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </>\n                    ) : (\n                      ''\n                    )}\n                  </>\n                )}\n              </div>\n\n              <p\n                style={{\n                  color: '#ff4d4f',\n                  marginTop: '-15px',\n                }}\n              >\n                {addPageState.error['error']['cover']}\n              </p>\n            </div>\n            <div className='addNewPageContainer__body'>\n              <h3 className='inputFieldLabel'>Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={content}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  marginTop: '15px',\n                }}\n              ></div>\n\n              <h3 className='inputFieldLabel'>BN Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={bnContent}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setBnContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Meta Title'\n                    value={values.metaTitle}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Meta Title'\n                    value={values.bnMetaTitle}\n                    placeHolder={''}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setTags}\n                    tags={tags}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnTags}\n                    tags={bnTags}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <Button\n              loading={addPageState.isLoading}\n              onClick={(e: any) => handleSubmit(e)}\n              className='btnPrimaryClassNameoutline'\n            >\n              Update page\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewPage;\n\n/*\n\n<div className=\"addNewPageContainer\">\n\t\t\t<h3 className='addNewPageContainer__heading'>\n\t\t\t\tAdd New Order\n\t\t\t</h3>\n\t\t\t<div className='addNewPageContainer__header'>\n\n\t\t\t</div>\n\t\t\t<div className='addNewPageContainer__body'>\n\n\t\t\t</div>\n\t\t</div>\n\n\n*/\n","import React,{useState} from 'react';\nimport { Modal  } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport {useHandleFetch} from '../../hooks';\n\nconst validationSchema = Yup.object().shape({\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n\tdescription: Yup.string().label('Description').required('Description is required')\n});\n\n\n\n\n\ninterface Props {\n\tcategory: any;\n\tsetvisible: any; \n\tvisible: any;\n}\n\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\n\n\tconst handleSubmit = async (values : any, actions : any) => {\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t  id: values.id,\n\t\t\t}\n\t\t  },\n\t\tbody: {\n\t\t\tname: values.name,\n\t\t\tdescription: values.description,\n\t\t},\n\t  });\n\t\n\t  actions.setSubmitting(false);\n\t};\n\t\n\n\tconst handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n\n\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\n\t\tif(!values.name || !values.description || !isValid){\n\t\t\treturn true; \n\t\t}\n\t\treturn false; \n\t  }\n\n\treturn (\n\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...category}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n\t\t\t<Modal\n\t\t\ttitle=\"Quick Edit\"\n\t\t\tvisible={visible}\n\t\t\tonOk={(e : any) => handleSubmit(e)}\n\t\t\tonCancel={handleCancel}\n\t\t\tokText='Update'\n\t\t\tokButtonProps={{\n\t\t\tloading: isSubmitting,\n\t\t\thtmlType: \"submit\",\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t}}\n  >\n  <Input \n\t\t\t   label='Title'\n\t\t\t   value={values.name}\n\t\t\t   name='name'\n\t\t\t   isError={(touched.name && errors.name) ||\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t  \n\t\t\t\t  errorString={(touched.name && errors.name) ||\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t   onChange={(e : any) => {\n\t\t\t\t  handleChange(e);\n\t\t\t\t  setFieldTouched('name');\n\t\t\t\t}}\n\t\t\t   />\n\t\t\t  <TextArea\n\t\t\t   label='Description' \n\t\t\t   value={values.description}\n\t\t\t   name='description'\n\t\t\t   isError={(touched.description && errors.description) ||\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\n\t\t\t  \n\t\t\t\t  errorString={(touched.description && errors.description) ||\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\n\t\t\t   onChange={(e : any) => {\n\t\t\t\t  handleChange(e);\n\t\t\t\t  setFieldTouched('description');\n\t\t\t\t}}\n\t\t\t\t />\n  </Modal>\n\t\t\t  \n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","// @ts-nocheck\n\nimport React from 'react'; \nimport { Tag, Input, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nclass EditableTagGroup extends React.Component {\n  state = {\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n  };\n\n  handleClose = removedTag => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\n    this.setState({ tags });\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    const { inputValue } = this.state;\n    let { tags } = this.state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n    this.setState({\n      tags,\n      inputVisible: false,\n      inputValue: '',\n    });\n  };\n\n  handleEditInputChange = e => {\n    this.setState({ editInputValue: e.target.value });\n  };\n\n  handleEditInputConfirm = () => {\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\n      const newTags = [...tags];\n      newTags[editInputIndex] = editInputValue;\n\n      return {\n        tags: newTags,\n        editInputIndex: -1,\n        editInputValue: '',\n      };\n    });\n  };\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n  render() {\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    return (\n      <>\n        {tags.map((tag, index) => {\n          if (editInputIndex === index) {\n            return (\n              <Input\n                ref={this.saveEditInputRef}\n                key={tag}\n                size=\"small\"\n                className=\"tag-input\"\n                value={editInputValue}\n                onChange={this.handleEditInputChange}\n                onBlur={this.handleEditInputConfirm}\n                onPressEnter={this.handleEditInputConfirm}\n              />\n            );\n          }\n\n          const isLongTag = tag.length > 20;\n\n          const tagElem = (\n            <Tag\n              className=\"edit-tag\"\n              key={tag}\n              closable={index !== 0}\n              onClose={() => this.handleClose(tag)}\n            >\n              <span\n                onDoubleClick={e => {\n                  if (index !== 0) {\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\n                      this.editInput.focus();\n                    });\n                    e.preventDefault();\n                  }\n                }}\n              >\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n              </span>\n            </Tag>\n          );\n          return isLongTag ? (\n            <Tooltip title={tag} key={tag}>\n              {tagElem}\n            </Tooltip>\n          ) : (\n            tagElem\n          );\n        })}\n        {inputVisible && (\n          <Input\n          style={{\n            margin: \"10px 0\"\n          }}\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            className=\"tag-input\"\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n            <PlusOutlined /> New Value\n          </Tag>\n        )}\n      </>\n    );\n  }\n}\n\nexport default EditableTagGroup","import React, {useState} from 'react';\n\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\n\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\n\nimport {\n\tFileOutlined,\n\tInboxOutlined,\n\tRadiusUpleftOutlined,\n\tRadiusUprightOutlined,\n\tRadiusBottomleftOutlined,\n\tRadiusBottomrightOutlined,\n\tPlusOutlined,\n\tDeleteOutlined,\n\tEditOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\n\n/// import hooks\nimport { useFetch, useHandleFetch } from \"../../hooks\";\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport QuickEdit from \"./QuickEdit\"\nimport AddAttributeValues from \"./AddAttributeValues\"\n\n\n\nconst validationSchema = Yup.object().shape({\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n\tdescription: Yup.string().label('Description').required('Description is required')\n});\n\n\nconst initialValues = {\n\tname: '',\n\tdescription: ''\n}\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\n\nconst MyTable = ({data}) => {\n    const [visible,setvisible] = useState(false);   \n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\n\n\n\tconst handleDeleteCategory = async (id) => {\n        const deleteTagRes = await handleDeleteTagFetch({\n          urlOptions: {\n            placeHolders: {\n              id,\n            }\n            }\n          });\n      }\n\n\n    const handleOk = (e: any) => {\n        setvisible(false);\n      \n      };\n    \n      const handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n      \n\n    return (\n        <>\n         <Table \n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n        >\n\n          <Column\n           title=\"Name\" \n           dataIndex=\"name\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n<Column\n           title=\"Description\" \n           dataIndex=\"description\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n        <Column\n        \n        className='classnameofthecolumn'\n          title=\"\"\n          key=\"action\"\n          align='right'\n          render={(text, record : any) => (\n            <Space size=\"middle\">\n            \n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\n              <span className='iconSize' onClick={() => {\n                setvisible(true)\n                setactiveCategoryForEdit(record); \n              }}> \n              <EditOutlined />\n            \n              </span>\n               </Tooltip>\n\n\n             \n              <Tooltip placement=\"top\" title='Delete Tag'>\n            \n\n             <span \n             className='iconSize iconSize-danger'\n             onClick={() => handleDeleteCategory(record.id)}\n             > \n             <DeleteOutlined/>\n            </span>\n            \n          </Tooltip>\n             \n            </Space>\n          )}\n        />\n      </Table>\n\n\n\n     \n\n\t\t{activeCategoryForEdit &&   <QuickEdit \n    setvisible={setvisible}\n    visible={visible}\n    category={activeCategoryForEdit}/>}\n    </>\n    )\n}\n\n\n\n\n\nconst props = {\n\tname: 'file',\n\tmultiple: true,\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\tonChange(info: any) {\n\t\tconst { status } = info.file;\n\t\tif (status !== 'uploading') {\n\t\t\t// console.log(info.file, info.fileList);\n\t\t}\n\t\tif (status === 'done') {\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\n\t\t} else if (status === 'error') {\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\n\t\t}\n\t}\n};\n\ninterface Props {}\n\nconst AttributeList = ({  }: Props) => {\n\tconst tagState = useFetch([], [], 'brandList', {\n\t\turlOptions: {\n\t\t  params: {\n\t\t\tisSubCategory: true,\n\t\t  },\n\t\t},\n\t  });\n\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \n\n\n\n\t  const handleSubmit = async (values : any, actions : any) => {\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\n\t\t  urlOptions: {\n\t\t\t  placeHolders: {\n\t\t\t\tid: values.id,\n\t\t\t  }\n\t\t\t},\n\t\t  body: {\n\t\t\t  name: values.name,\n\t\t\t  description: values.description,\n\t\t  },\n\t\t});\n\t  \n\t\tactions.setSubmitting(false);\n\t  };\n\t  \n \n  \n  \n  \n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\n\t\t  if(!values.name || !values.description || !isValid){\n\t\t\t  return true; \n\t\t  }\n\t\t  return false; \n\t\t}\n\n\n\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  \n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n\treturn (\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\n\t\t\t<div className='addproductSectionTitleContainer'>\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\n\t\t\t</div>\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...initialValues}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n  <Input \n\t\t\t   label='Title'\n\t\t\t   value={values.name}\n\t\t\t   name='name'\n\t\t\t   isError={(touched.name && errors.name) ||\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t  \n\t\t\t\t  errorString={(touched.name && errors.name) ||\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t   onChange={(e : any) => {\n\t\t\t\t  handleChange(e);\n\t\t\t\t  setFieldTouched('name');\n\t\t\t\t}}\n\t\t\t   />\n\n\t\t\t   <div style={{\n\t\t\t\t   marginTop: '0px'\n\t\t\t   }}></div>\n\t\t\t  \n\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\n\t\t\t\t\n\t\t\t\t<AddAttributeValues />\n\t\t\t\t\t  <Button \n\t\t\t\t\t  style={{\n\t\t\t\t\t\t  display: 'block',\n\t\t\t\t\t\t  marginTop: '20px'\n\t\t\t\t\t  }}\n\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\n\t\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t >\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</Button>\n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\n\n\t\t\t\t</div>\n                <div className='addproductSection addproductSection-right'> \n\n\t\t\t\t<div className='categoryListContainer'>\n            <div className='categoryListContainer__header'>\n           \n\n          <div className='categoryListContainer__header-searchBar-tag'>\n          {/* <h2 className='categoryListContainer__header-title'>\n            Brand\n            </h2> */}\n\n\n          <Search\n            enterButton={false}\n            className='searchbarClassName'\n          placeholder=\"search categories..\"\n          onSearch={value => console.log(value)}\n          // style={{ width: 300 }}\n        />\n          </div>\n            {/* <Button\n          // type=\"primary\"\n          className='btnPrimaryClassNameoutline'\n          icon={<PlusOutlined />}\n          onClick={() => setAddNewCategoryVisible(true)}\n        >\n        Add New\n            \n            </Button> */}\n            </div>\n\n            <div className='categoryListContainer__afterHeader'>\n            {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n            </div>\n\n     \n\t\t\t\n\t\t\t<div className='categoryListContainer__categoryList'>\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\n\t\t\t</div>\n\t\t</div>\n\n                </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AttributeList;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Select, notification, Empty, Spin, Button } from 'antd';\nimport ReactToPdf from 'react-to-pdf';\n\nimport * as Yup from 'yup';\nimport {\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n  PrinterOutlined,\n  FilePdfOutlined,\n} from '@ant-design/icons';\nimport ReactToPrint from 'react-to-print';\n\n// import components\nimport config from '../../config.json';\n\n// import components\nimport { useHandleFetch } from '../../hooks';\n\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    const { orderDetailState, invoiceSettingsState, anotherRef } = this.props;\n\n    return (\n      <>\n        <div ref={anotherRef} className='invoiceContainer'>\n          <table\n            width='100%'\n            border={0}\n            cellPadding={0}\n            cellSpacing={0}\n            align='center'\n            className='fullTable'\n            bgcolor='#fff'\n          >\n            <tbody>\n              <tr>\n                <td height={20} />\n              </tr>\n              <tr>\n                <td>\n                  <table\n                    width={600}\n                    border={0}\n                    cellPadding={0}\n                    cellSpacing={0}\n                    align='center'\n                    className='fullTable'\n                    bgcolor='#ffffff'\n                    style={{ borderRadius: '10px 10px 0 0' }}\n                  >\n                    <tbody>\n                      <tr>\n                        <td>\n                          <table\n                            width={570}\n                            border={0}\n                            cellPadding={0}\n                            cellSpacing={0}\n                            align='center'\n                            className='fullPadding'\n                          >\n                            <tbody>\n                              <tr>\n                                <td>\n                                  <table\n                                    width={'100%'}\n                                    border={0}\n                                    cellPadding={0}\n                                    cellSpacing={0}\n                                    align='left'\n                                    className='col'\n                                    style={{\n                                      borderBottom: '1px solid #eee',\n                                      paddingBottom: '40px',\n                                      marginBottom: '40px',\n                                    }}\n                                  >\n                                    <tbody\n                                      style={{\n                                        marginBottom: '50px',\n                                      }}\n                                    >\n                                      <tr>\n                                        <td\n                                          style={{\n                                            fontSize: 12,\n                                            color: '#5b5b5b',\n\n                                            lineHeight: 1.6,\n                                            verticalAlign: 'top',\n                                            textAlign: 'left',\n                                          }}\n                                        >\n                                          <span\n                                            style={{\n                                              display: 'inline-block',\n                                              fontSize: '14px',\n                                              fontWeight: '600',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            Bill From:\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {orderDetailState.data['name']}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {orderDetailState.data['address']}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {orderDetailState.data['phone']}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                              marginBottom: '50px',\n                                            }}\n                                          >\n                                            {orderDetailState.data['email']}\n                                          </span>\n                                        </td>\n\n                                        <td\n                                          style={{\n                                            verticalAlign: 'top',\n                                          }}\n                                          align='right'\n                                        >\n                                          {' '}\n                                          <img\n                                            src={`${config.baseURL}/images/logo.png`}\n                                            style={{\n                                              width: '175px'\n                                            }}\n                                            alt='logo'\n                                            border={0}\n                                          />\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                                  <table\n                                    width={'100%'}\n                                    border={0}\n                                    cellPadding={0}\n                                    cellSpacing={0}\n                                    align='left'\n                                    className='col'\n                                  >\n                                    <tbody>\n                                      <tr className='visibleMobile'>\n                                        <td height={20} />\n                                      </tr>\n                                      <tr>\n                                        <td height={5} />\n                                      </tr>\n                                      <tr></tr>\n                                      <tr></tr>\n                                      <tr>\n                                        <td\n                                          style={{\n                                            fontSize: 12,\n                                            color: '#5b5b5b',\n\n                                            lineHeight: 1.6,\n                                            verticalAlign: 'top',\n                                            textAlign: 'left',\n                                          }}\n                                        >\n                                          <span\n                                            style={{\n                                              display: 'inline-block',\n                                              fontSize: '14px',\n                                              fontWeight: '600',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            Bill To:\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'invoiceTitle'\n                                              ]}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'address'\n                                              ]}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'phone'\n                                              ]}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'email'\n                                              ]}\n                                          </span>\n                                        </td>\n\n                                        <td\n                                          style={{\n                                            fontSize: 13,\n                                            color: '#5b5b5b',\n\n                                            lineHeight: 1.6,\n                                            verticalAlign: 'top',\n                                            textAlign: 'right',\n                                          }}\n                                        >\n                                          <small>ORDER</small> #\n                                          {orderDetailState.data['shortCode']}\n                                          <br />\n                                          <span>\n                                            {orderDetailState.data[\n                                              'date_created'\n                                            ] &&\n                                              moment(\n                                                orderDetailState.data[\n                                                  'date_created'\n                                                ]\n                                              ).format('MMMM Do YYYY, h:mm a')}\n                                          </span>\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          {orderDetailState.data &&\n            orderDetailState.data['products'] &&\n            orderDetailState.data['products'].length > 0 && (\n              <table\n                width='100%'\n                border={0}\n                cellPadding={0}\n                cellSpacing={0}\n                align='center'\n                className='fullTable'\n                bgcolor='#fff'\n              >\n                <tbody>\n                  <tr>\n                    <td>\n                      <table\n                        width={600}\n                        border={0}\n                        cellPadding={0}\n                        cellSpacing={0}\n                        align='center'\n                        className='fullTable'\n                        bgcolor='#ffffff'\n                      >\n                        <tbody>\n                          <tr></tr>\n                          <tr className='hiddenMobile'>\n                            <td height={60} />\n                          </tr>\n                          <tr className='visibleMobile'>\n                            <td height={40} />\n                          </tr>\n                          <tr>\n                            <td>\n                              <table\n                                width={570}\n                                border={0}\n                                cellPadding={0}\n                                cellSpacing={0}\n                                align='center'\n                                className='fullPadding'\n                              >\n                                <tbody>\n                                  <tr\n                                    style={{\n                                      backgroundColor: '#eee',\n                                    }}\n                                  >\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#5b5b5b',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'top',\n                                        padding: '5px 10px 7px 5px',\n                                      }}\n                                      width='30%'\n                                      align='left'\n                                    >\n                                      Name\n                                    </th>\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#5b5b5b',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'center',\n                                      }}\n                                      align='left'\n                                    >\n                                      Quantity\n                                    </th>\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#1e2b33',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'center',\n                                      }}\n                                      align='left'\n                                    >\n                                      Unit Price\n                                    </th>\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#1e2b33',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'center',\n                                      }}\n                                      align='left'\n                                    >\n                                      {/* Unit Price */}\n                                    </th>\n                                  </tr>\n\n                                  {orderDetailState.data['products'].map(\n                                    (item) => {\n                                      return (\n                                        <>\n                                          <tr>\n                                            <td\n                                              height={1}\n                                              style={{\n                                                background: '#bebebe',\n                                              }}\n                                              colSpan={4}\n                                            />\n                                          </tr>\n                                          <tr>\n                                            <td height={10} colSpan={4} />\n                                          </tr>\n                                          <tr>\n                                            <td\n                                              width='30%'\n                                              style={{\n                                                fontSize: 12,\n                                                color: '#ff0000',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              className='article'\n                                            >\n                                              {item.name}\n                                            </td>\n\n                                            <td\n                                              style={{\n                                                fontSize: 12,\n                                                color: '#646a6e',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              align='left'\n                                            >\n                                              {item.quantity}\n                                            </td>\n                                            <td\n                                              style={{\n                                                fontSize: 12,\n                                                color: '#1e2b33',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              align='left'\n                                            >\n                                              {item.unitPrice}\n                                            </td>\n\n                                            <td\n                                              style={{\n                                                fontSize: 12,\n\n                                                color: '#1e2b33',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              align='left'\n                                            >\n                                              {item.quantity * item.unitPrice}\n                                            </td>\n                                          </tr>\n                                        </>\n                                      );\n                                    }\n                                  )}\n                                  <tr>\n                                    <td\n                                      height={1}\n                                      colSpan={4}\n                                      style={{\n                                        borderBottom: '1px solid #eee',\n                                      }}\n                                    />\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td height={20} />\n                          </tr>\n                        </tbody>\n                      </table>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n          <table\n            width='100%'\n            border={0}\n            cellPadding={0}\n            cellSpacing={0}\n            align='center'\n            className='fullTable'\n            bgcolor='#fff'\n          >\n            <tbody>\n              <tr>\n                <td>\n                  <table\n                    width={600}\n                    border={0}\n                    cellPadding={0}\n                    cellSpacing={0}\n                    align='center'\n                    className='fullTable'\n                    bgcolor='#ffffff'\n                  >\n                    <tbody\n                      style={{\n                        marginBottom: '20px',\n                      }}\n                    >\n                      <tr>\n                        <td>\n                          {/* Table Total */}\n                          <table\n                            style={{\n                              marginBottom: '50px',\n                              marginTop: '30px',\n                            }}\n                            width={570}\n                            border={0}\n                            cellPadding={0}\n                            cellSpacing={0}\n                            align='center'\n                            className='fullPadding'\n                          >\n                            <tbody>\n                              <tr>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  Total Price\n                                </td>\n                                <td\n                                  style={{\n                                    fontSize: 13,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                    whiteSpace: 'nowrap',\n                                    fontWeight: '600',\n                                    marginBottom: '5px',\n                                  }}\n                                  width={80}\n                                >\n                                  {orderDetailState.data['total']}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  Shipping &amp; Delivery\n                                </td>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  {orderDetailState.data &&\n                                  orderDetailState.data['total'] > 5000\n                                    ? 'Free'\n                                    : orderDetailState.data &&\n                                      orderDetailState.data[\n                                        'deliveryCharge'\n                                      ] === 0\n                                    ? 'Free'\n                                    : `+${\n                                        orderDetailState.data &&\n                                        orderDetailState.data['deliveryCharge']\n                                      }`}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#000',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  <strong>Grand Total (Incl.Delivery)</strong>\n                                </td>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#000',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  <strong>\n                                    {orderDetailState.data['total'] +\n                                      orderDetailState.data['deliveryCharge'] ||\n                                      0}\n                                  </strong>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nconst OrderInvoice = ({ id, setShowInvoice, showInvoice }) => {\n  const [orderDetailState, handleOrderDetailFetch] = useHandleFetch(\n    {},\n    'orderDetail'\n  );\n  const componentRef = useRef();\n\n  const ref = React.createRef();\n  const options = {\n    orientation: 'a4',\n    unit: 'in',\n    format: [4, 2],\n  };\n\n  const [invoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\n    {},\n    'invoiceSettingsDetail'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const invoiceSettingsRes = await handlSiteInvoiceSettingsFetch({});\n      // console.log('siteSettingsRes', siteSettingsRes);\n    };\n    getSiteSettings();\n  }, []);\n\n  useEffect(() => {\n    const getOrderDetail = async () => {\n      await handleOrderDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id,\n          },\n        },\n      });\n    };\n\n    getOrderDetail();\n  }, [id]);\n\n  console.log('orderDetailState', orderDetailState);\n\n  const handleOk = () => {\n    window.print();\n  };\n\n  return (\n    <Modal\n      title='Invoice'\n      visible={showInvoice}\n      bodyStyle={{\n        margin: '0',\n        padding: '10px',\n      }}\n      style={{\n        top: '40px',\n      }}\n      onCancel={() => setShowInvoice(false)}\n      width={'48vw'}\n      okText='Print'\n      onOk={() => handleOk()}\n      footer={false}\n    >\n      {orderDetailState.isLoading && <Spin />}\n      {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              width: '100%',\n              justifyContent: 'flex-end',\n              padding: '20px 20px 20px 20px',\n            }}\n          >\n            <ReactToPdf\n              targetRef={ref}\n              y={15}\n              x={25}\n              filename={`order-${orderDetailState.data['shortCode']}-invoice`}\n              options={{\n                orientation: 'a4',\n              }}\n            >\n              {({ toPdf }) => (\n                <Button\n                  style={{\n                    marginRight: '15px',\n                  }}\n                  onClick={toPdf}\n                  // type=\"primary\"\n                  className='btnPrimaryClassNameoutline'\n                  icon={<FilePdfOutlined />}\n                >\n                  Download as pdf\n                </Button>\n              )}\n            </ReactToPdf>\n            <ReactToPrint\n              documentTitle='Order Invoice'\n              trigger={() => (\n                <Button\n                  // type=\"primary\"\n                  className='btnPrimaryClassNameoutline'\n                  icon={<PrinterOutlined />}\n                >\n                  Print\n                </Button>\n              )}\n              content={() => componentRef.current}\n            />\n          </div>\n          <ComponentToPrint\n            ref={componentRef}\n            anotherRef={ref}\n            invoiceSettingsState={invoiceSettingsState}\n            orderDetailState={orderDetailState}\n          />\n        </>\n      )}\n    </Modal>\n  );\n};\nexport default OrderInvoice;\n","import React, { useState, useEffect } from 'react';\nimport { useHandleFetch } from '../../hooks';\n\n\n\n\n// import lib \nimport { Skeleton } from 'antd'\n\n\n\ninterface Props {\n    productId?: any;\n    quantity?: any;\n    item?: any\n    variation?: any;\n}\n\nconst CartOverLayCartItem = ({\n    productId,\n    quantity,\n    item,\n    variation\n}: Props) => {\n\n\n    const [productDetailState, handleProductFetch] = useHandleFetch(\n        {},\n        'productDetailById'\n    );\n    const [product, setProduct] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [modifiedPrice, setModifiedPrice] = useState('');\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\n\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        const getAndSetProduct = async () => {\n            const product = await handleProductFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId,\n                    },\n                },\n            });\n\n            // @ts-ignore\n            setProduct(product);\n            setIsLoading(false);\n        };\n        getAndSetProduct()\n    }, []);\n\n\n\n\n\n\n\n    console.log('modifiedPrice', modifiedPrice);\n    return (\n        <>\n\n            <Skeleton loading={productDetailState.isLoading}>\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\n                    <div className='cart-item' key={''}>\n\n\n                        <img\n\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\n                            alt='Img'\n                            style={{\n                                cursor: 'pointer',\n                            }}\n                        />\n                        <div className='cart-item-info'>\n                            <h4\n\n                            >\n                                {productDetailState.data['name']}\n                            </h4>\n                            <h5\n                            >\n                                Quantity : {quantity}\n                            </h5>\n                            <h5\n                            >\n                                {item['unitPrice']}\n                            </h5>\n\n\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\n                            <>\n                                <span\n                                    onClick={() => handleAttributeChange(tag.value)}\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\n                                    {tag.label}\n                                </span>\n                            </>\n                        ))} */}\n\n                            {/* <span\n             style={{\n               display: 'inline-block',\n               background: '#fafafa',\n               padding: '3px 3px',\n               borderRadius: 1,\n               fontSize: '12px',\n               marginRight: '5px',\n               color: '#777',\n               marginTop: '5px'\n             }}\n           >\n             15KG\n             </span> */}\n\n                        </div>\n                        {/* <span\n                        onClick={handleAttributeDelete}\n                        className='remove-item' >\n                        <i className='fa fa-times'></i>\n                    </span> */}\n\n                    </div>\n                )}\n            </Skeleton>\n\n        </>\n    );\n};\n\n// @ts-ignore\nexport default CartOverLayCartItem;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport OrderInvoice from \"./OrderInvoice.jsx\";\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\n\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({\n    // name: Yup.string()\n    //     .label('Name')\n    //     .required()\n    //     .min(2, 'Name must have at least 2 characters '),\n    // pickUpLocation: Yup.string()\n    //     .label('Pick up Location')\n    //     .required()\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\n    // time: Yup.string()\n    //     .label('Time')\n    //     .required()\n    //     .min(2, 'Time must have at least 2 characters '),\n\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Tag Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\ninterface Props {\n    customer: any;\n    setvisible: any;\n    visible: any;\n    orderList?: any;\n    setOrderList?: any;\n}\n\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\n\n    console.log('customerVie', customer);\n\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\n    const [selectedCityValue, setselectedCityValue] = useState('');\n\n    const [countryOptions, setcountryOptions] = useState([]);\n    const [cityOptions, setcityOptions] = useState([]);\n\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\n        [],\n        'countryList'\n    );\n\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n    const [countryList, setCountryList] = useState([]);\n    const [cityList, setCityList] = useState([]);\n    const [showInvoice, setShowInvoice] = useState(false);\n\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // console.log('selectedCityValue', selectedCityValue); \n        console.log('cooles', customer)\n\n        const addRegionRes = await handleUpdateOrderFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: customer.id,\n                }\n            },\n            body: {\n                billingAddress: {\n                    phone: values.phone,\n                    email: values.email,\n                    address1: values.address1,\n                    address2: values.address2,\n                    firstName: values.firstName,\n                    lastName: values.lastName,\n                    city: selectedCityValue || customer['billingAddress']['city'],\n                    country: selectedCountryValue || customer['billingAddress']['country'],\n                },\n                products: customer.products,\n                customerId: customer.customerId\n                // charge\n            },\n        });\n\n        // @ts-ignore\n        if (addRegionRes && addRegionRes.status === 'ok') {\n            openSuccessNotification();\n\n            const positionInTag = () => {\n                return orderList.map(item => item.id).indexOf(customer.id);\n            }\n\n            const index = positionInTag();\n\n            // @ts-ignore\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\n            setOrderList(updateRegionList);\n\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n        setvisible(false)\n\n    };\n\n\n    const onChangeCity = (value) => {\n        setselectedCityValue(value);\n    }\n\n    const onChangeCountry = (value) => {\n        setselectedCountryValue(value);\n    }\n\n    useEffect(() => {\n        const setCountries = async () => {\n            const CountryListRes = await handleCountryListFetch({});\n\n            // @ts-ignore\n            if (CountryListRes && CountryListRes.length > 0) {\n                // @ts-ignore\n                const countryOptions = CountryListRes.map((country) => {\n                    return {\n                        value: country.name,\n                        name: country.name\n                    };\n                });\n                setcountryOptions(countryOptions);\n            }\n        };\n\n        setCountries();\n    }, []);\n\n\n    useEffect(() => {\n        const setCities = async () => {\n            const cityListRes = await handleCityListFetch({\n                urlOptions: {\n                    placeHolders: {\n                        country: selectedCountryValue,\n                    },\n                },\n            });\n\n            // @ts-ignore\n            if (cityListRes && cityListRes.length > 0) {\n                // @ts-ignore\n                const cityOptions = cityListRes.map((city) => {\n                    return {\n                        value: city.name,\n                        name: city.name\n                    };\n                });\n                setcityOptions(cityOptions);\n            }\n        };\n\n        setCities();\n    }, [selectedCountryValue]);\n\n\n\n\n\n\n\n    const handleCancel = (e: any) => {\n        setvisible(false);\n    };\n\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!isValid ||\n            !values.firstName ||\n            !values.LastName) {\n\n            return true;\n        }\n        return false;\n    }\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...customer.billingAddress ? customer.billingAddress : {} }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            title=\"Order detail\"\n                            visible={visible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                            bodyStyle={{\n                                margin: '0',\n                                padding: '10px'\n                            }}\n                            width={'70vw'}\n                        >\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='First Name'\n                                        value={values.firstName}\n                                        name='firstName'\n                                        isError={(touched.firstName && errors.firstName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\n\n                                        errorString={(touched.firstName && errors.firstName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('firstName');\n                                        }}\n                                    />\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Last Name'\n                                        value={values.lastName}\n                                        name='lastName'\n                                        isError={(touched.lastName && errors.lastName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\n\n                                        errorString={(touched.lastName && errors.lastName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('lastName');\n                                        }}\n                                    />\n                                </div>\n\n\n\n\n                            </div>\n\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Phone'\n                                        value={values.phone}\n                                        name='phone'\n                                        isError={(touched.phone && errors.phone) ||\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\n\n                                        errorString={(touched.phone && errors.phone) ||\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('phone');\n                                        }}\n                                    />\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Email'\n                                        value={values.email}\n                                        name='email'\n                                        isError={(touched.email && errors.email) ||\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\n\n                                        errorString={(touched.email && errors.email) ||\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('email');\n                                        }}\n                                    />\n                                </div>\n                            </div>\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <h3 className='inputFieldLabel'>\n                                        Country\n\t\t\t\t\t\t\t\t\t</h3>\n\n\n                                    <Form.Item\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\n                                        help={updateOrderState.error['error']['country']}\n                                    // noStyle={true}\n                                    >\n                                        <Select\n                                            defaultValue={values.country}\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n                                            showSearch\n                                            style={{ width: '100%' }}\n                                            placeholder='Select a Country'\n                                            optionFilterProp='children'\n                                            onChange={onChangeCountry}\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                                        >\n                                            {countryListState.done &&\n                                                countryListState.data.length > 0 &&\n                                                countryOptions.map((option) => {\n                                                    return <Option value={option.value}>{option.name}</Option>;\n                                                })}\n                                        </Select>\n\n                                    </Form.Item>\n\n\n\n\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <h3 className='inputFieldLabel'>\n                                        City\n                                    </h3>\n                                    <Form.Item\n                                        // noStyle={true}\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\n                                        help={updateOrderState.error['error']['city']}\n\n                                    >\n                                        <Select\n                                            defaultValue={values.city}\n                                            className='selectClassName'\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n                                            showSearch\n                                            style={{ width: '100%' }}\n                                            placeholder='Select a city'\n                                            optionFilterProp='children'\n                                            onChange={onChangeCity}\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                                        >\n                                            {cityListState.done &&\n                                                cityListState.data.length > 0 &&\n                                                cityOptions.map((option) => {\n                                                    return <Option value={option.value}>{option.name}</Option>;\n                                                })}\n                                        </Select>\n                                    </Form.Item>\n                                </div>\n\n                            </div>\n\n                            <div style={{\n                                marginTop: '12px'\n                            }}></div>\n\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Address'\n                                        value={values.address1}\n                                        name='address1'\n                                        isError={(touched.address1 && errors.address1) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\n\n                                        errorString={(touched.address1 && errors.address1) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('address1');\n                                        }}\n                                    />\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Address 2'\n                                        value={values.address2}\n                                        name='address2'\n                                        isError={(touched.address2 && errors.address2) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\n\n                                        errorString={(touched.address2 && errors.address2) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('address2');\n                                        }}\n                                    />\n                                </div>\n\n                            </div>\n\n                            <div style={{\n                                marginTop: '12px'\n                            }}></div>\n\n\n\n                                    {customer.products && customer.products.length > 0 && (\n                                        <h3 className='inputFieldLabel'>\n                                        Products \n                                    </h3>\n                                    )}\n\n\n                            {customer.products && customer.products.length > 0 && <> \n                            \n                                {customer.products.map(item => {\n                    return <ProductItemForOrderDetail\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                            </>}\n\n\n                            <div style={{\n                                marginTop: '20px'\n                            }}></div>\n                    <Button\n                    onClick={() => setShowInvoice(true)}\n                    className='btnPrimaryClassNameoutline'\n                    >\n                        Generate Invoice\n                        \n                        </Button>\n\n            <div style={{\n                                marginBottom: '20px'\n                            }}></div>\n\n            <OrderInvoice\n            id={customer.id}\n            setShowInvoice={setShowInvoice}\n             showInvoice={showInvoice} \n            />\n\n                            \n\n\n                        </Modal>\n\n                    </>\n                )}\n\n\n\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { CSVLink } from 'react-csv';\n\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  Space,\n  Tag,\n  Button,\n  Input,\n  notification,\n  Popconfirm,\n  Select,\n  DatePicker,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckOutlined,\n  CheckCircleOutlined,\n  DownOutlined,\n  DownloadOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewOrder from './AddNewOrder';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\n// import lib\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Order Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst { Option } = Select;\n\ninterface myTableProps {\n  data: any;\n  setOrderList: any;\n  roles: any;\n}\n\nconst MyTable = ({ data, setOrderList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch(\n    {},\n    'deleteOrder'\n  );\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\n    {},\n    'updateOrderStatus'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteRegion = async (id) => {\n    const deleteOrderRes = await handleDeleteOrderFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteOrderRes && deleteOrderRes.status === 'ok') {\n      openSuccessNotification('Deleted Order');\n      const newOrderList = data.filter((item) => item.id !== id);\n      setOrderList(newOrderList);\n    }\n  };\n\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\n      urlOptions: {\n        params: {\n          newOrderstatus: newStatus,\n        },\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\n      openSuccessNotification('Updated Order Status');\n\n      const positionInTag = () => {\n        return data.map((item) => item.id).indexOf(id);\n      };\n\n      const index = positionInTag();\n      console.log('recordis', record, index);\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\n      const updateOrderList = [\n        ...data.slice(0, index),\n        updatedItem,\n        ...data.slice(index + 1),\n      ];\n      console.log('updateOrderList', updateOrderList, '-----', setOrderList);\n      setOrderList(updateOrderList);\n    } else {\n      openErrorNotification(\n        \"Couldn't changed order status, Something went wrong\"\n      );\n    }\n  };\n\n  const StatusItemMenu = (record, id) => {\n    return (\n      <Menu>\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'pending')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Pending\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'processing')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Processing\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'sentForDelivery')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Sent for delivery\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'complete')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Completed\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'cancel')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Cancel\n        </Menu.Item>\n\n        {/* <Menu.Item\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\n                key=\"1\" icon={<CheckOutlined />}>\n                Delivered\n              </Menu.Item>\n     */}\n      </Menu>\n    );\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Code'\n          dataIndex='shortCode'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                #{text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Delivery'\n          dataIndex='deliveryName'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Created'\n          dataIndex='date_created'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Total Price'\n          dataIndex='total'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          align='right'\n          title='Status'\n          dataIndex='status'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              {isAccess('postOrder', roles) ? (\n                <Dropdown\n                  overlay={() => StatusItemMenu(record, record.id)}\n                  placement='bottomRight'\n                >\n                  <a href='##'>\n                    <span\n                      // className={'product-attributeTag'}\n                      style={{\n                        fontSize: '12px',\n                      }}\n                    >\n                      {text}\n                      <span\n                        style={{\n                          marginLeft: '5px',\n                          fontSize: '10px',\n                        }}\n                      >\n                        <DownOutlined />\n                      </span>\n                    </span>\n                  </a>\n                </Dropdown>\n              ) : (\n                <a href='##'>\n                  <span\n                    // className={'product-attributeTag'}\n                    style={{\n                      fontSize: '12px',\n                    }}\n                  >\n                    {text}\n                    <span\n                      style={{\n                        marginLeft: '5px',\n                        fontSize: '10px',\n                      }}\n                    ></span>\n                  </span>\n                </a>\n              )}\n            </>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        {/* <Column\n        \n        className='classnameofthecolumn'\n          title=\"\"\n          key=\"action\"\n          align='right'\n          render={(text, record : any) => (\n            <Space size=\"middle\">\n              <a href='##'>\n               <Tooltip placement=\"top\" title='Edit Order'>\n              <span className='iconSize' \n              onClick={() => {\n                setvisible(true)\n                setactiveCategoryForEdit(record); \n              }}> \n              <EditOutlined />\n              </span>\n\n               </Tooltip>\n               </a>\n            </Space>\n          )}\n        /> */}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n          orderList={data}\n          setOrderList={setOrderList}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst CustomerList = ({ roles }: Props) => {\n  const [orderList, setOrderList] = useState([]);\n  const history = useHistory();\n\n  const [orderState, handleOrderListFetch] = useHandleFetch({}, 'orderList');\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\n  const [deliveryRegionNameValue, setdeliveryRegionNameValue] = useState('');\n\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const handleStartEndDateRangeDate = (e) => {\n    console.log('dateOrder', moment(e[0]).format());\n    console.log('dateOff', moment(e[1]).format());\n    const startDate = new Date(moment(e[0]).format());\n    const endDate = new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  console.log('orderState', orderState);\n\n  useEffect(() => {\n    const setOrders = async () => {\n      const regions = await handleOrderListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            statusValue:\n              orderStatusFilterValue === 'all' ? '' : orderStatusFilterValue,\n            startDateValue: startDate,\n            endDateValue: endDate,\n            deliveryRegionNameValue: deliveryRegionNameValue === 'all' ? '' : deliveryRegionNameValue,\n          },\n        },\n      });\n      // @ts-ignore\n      setOrderList(regions);\n    };\n    setOrders();\n  }, [orderStatusFilterValue, startDate, endDate, deliveryRegionNameValue]);\n\n  const [regionList, setRegionList] = useState([]);\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\n\n  useEffect(() => {\n    const setRegions = async () => {\n      const regions = await handleRegionListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (regions && regions.length > 0) {\n        // @ts-ignore\n        const regionListOptions = regions.map((item) => {\n          return {\n            name: item.name,\n            value: item.name,\n          };\n        });\n        // @ts-ignore\n        setRegionList([{name: 'All Region', value: 'all'},...regionListOptions]);\n      }\n    };\n    setRegions();\n  }, []);\n\n  console.log('regionList33', regionList);\n\n  // console.log('orderState',orderState)\n\n  const handleSearch = (value) => {\n    if (orderState.data.length > 0) {\n      const newOrderList = orderState.data.filter((item) => {\n        console.log('orderItem3',item)\n        return `#${item.shortCode.toLowerCase()}`.includes(value.toLowerCase()) ||  `${item.shortCode.toLowerCase()}`.includes(value.toLowerCase())\n      }\n        \n      );\n      setOrderList(newOrderList);\n    }\n  };\n\n  const onOrderStatusFilterChange = (value) => {\n    setorderStatusFilterValue(value);\n  };\n\n  const deliveryRegionFilterChange = (value) => {\n    setdeliveryRegionNameValue(value);\n  };\n\n  const orderFilteringOption = [\n    {\n      name: 'All Status',\n      value: 'all',\n    },\n    {\n      name: 'Pending',\n      value: 'pending',\n    },\n    {\n      name: 'Processing',\n      value: 'processing',\n    },\n    {\n      name: 'Sent for delivery',\n      value: 'sentForDelivery',\n    },\n\n    {\n      name: 'Completed',\n      value: 'complete',\n    },\n    {\n      name: 'Cancel',\n      value: 'cancel',\n    },\n  ];\n\n  const headers = [\n    { label: 'Order Code', key: 'shortCode' },\n    { label: 'Name', key: 'name' },\n    { label: 'Delivery', key: 'deliveryName' },\n    { label: 'Created', key: 'date_created' },\n    { label: 'Total Price', key: 'total' },\n    { label: 'Status', key: 'status' },\n  ];\n\n  const getData = () => {\n    if (orderList && orderList.length > 0) {\n      const csvData = orderList.map((item) => {\n        return {\n          shortCode: item.shortCode,\n          name: item.name,\n          deliveryName: item.deliveryName,\n          date_created: item.date_created\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\n            : '',\n          status: item.status,\n          total: item.total,\n        };\n      });\n\n      return csvData;\n    } else return [];\n  };\n\n  const data = getData();\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Orders</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search orders (ex. #04343)'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {orderList && orderList.length > 0 && (\n              <>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginRight: '25px',\n                  }}\n                >\n                  <CSVLink\n                    filename={'Orders.csv'}\n                    data={data}\n                    headers={headers}\n                  >\n                    Export as csv\n                  </CSVLink>\n                  <span\n                    style={{\n                      color: '#1890ff',\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <DownloadOutlined />\n                  </span>\n                </div>\n              </>\n            )}\n\n            {isAccess('postOrder', roles) && (\n              <Button\n                // type=\"primary\"\n                className='btnPrimaryClassNameoutline'\n                icon={<PlusOutlined />}\n                onClick={() => history.push('/admin/order/new')}\n              >\n                Add New\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div\n          style={{\n            marginTop: '30px',\n          }}\n          className='categoryListContainer__header'\n        >\n          <div></div>\n\n          <div>\n            <RangePicker\n              style={{\n                width: 270,\n                color: '#3fa6f9',\n              }}\n              onChange={handleStartEndDateRangeDate}\n              picker={'date'}\n              bordered={false}\n            />\n\n            {regionList && regionList.length > 0 && (\n              <>\n                <Select\n                  showSearch\n                  style={{\n                    borderRadius: '15px',\n                    color: '#3fa6f9',\n                    width: '150px',\n                    marginRight: '15px',\n                  }}\n                  placeholder='Delivery Region'\n                  optionFilterProp='children'\n                  onChange={deliveryRegionFilterChange}\n                  // defaultValue={'pending'}\n                  bordered={false}\n                  filterOption={(input, option) =>\n                    option.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                  defaultValue={'all'}\n                >\n                  {regionList.map((option) => {\n                    return <Option value={option.value}>{option.name}</Option>;\n                  })}\n                </Select>\n              </>\n            )}\n\n            <Select\n              style={{ borderRadius: '15px', color: '#3fa6f9', width: '100px' }}\n              placeholder='Select status'\n              optionFilterProp='children'\n              onChange={onOrderStatusFilterChange}\n              defaultValue={'all'}\n              bordered={false}\n            >\n              {orderFilteringOption.map((option) => {\n                return <Option value={option.value}>{option.name}</Option>;\n              })}\n            </Select>\n          </div>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {orderState.done && orderList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setOrderList={setOrderList}\n              data={orderList}\n            />\n          )}\n          {orderState.isLoading && <DataTableSkeleton />}\n\n          {orderState.done && !(orderList.length > 0) && (\n            <Empty title='No Order found' />\n          )}\n        </div>\n      </div>\n\n      {/* {orderState.done && \n          <AddNewOrder \n          addNewCategoryVisible={addNewCategoryVisible} \n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          orderList={orderState.data}\n          setOrderList={setOrderList}\n           />} */}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CustomerList);\n","import React, { memo } from 'react';\n\n// import components\nimport AddNewOrderProductItem from '../order/AddNewOrderProductItem';\nimport Empty from '../../components/Empty';\n\nimport { ShopOutlined } from '@ant-design/icons';\n\ninterface Props {\n  productList?: any;\n  setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({ setProductList, productList }: Props) => {\n  return (\n    <div\n      style={{\n        // @ts-ignore\n        flexDirection: 'flex',\n      }}\n      className='addOrderContainer__container-orderSummary'\n    >\n      <h3 className='addOrderContainer-sectionTitle'>\n        <span>\n          <ShopOutlined />\n        </span>\n        Selected Products\n      </h3>\n      <div className='addOrderContainer__container-productItemContainer'>\n        {productList &&\n          productList.length > 0 &&\n          productList.map((item) => {\n            return (\n              <AddNewOrderProductItem\n                setProductList={setProductList}\n                productList={productList}\n                productId={item._id}\n                quantity={item.quantity}\n                item={item}\n                variation={item.variation}\n              />\n            );\n          })}\n\n        {!(productList.length > 0) && (\n          <div\n            style={{\n              marginLeft: '32px',\n            }}\n          >\n            <Empty title='No Product Added' height={150} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(AddNewOrderSummary);\n","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\n\ninterface Props {\n    setCustomerId?: any;\n    setSelectedCustomerData?: any;\n    customerListState?:any; \n}\n\nconst { Option } = Select;\n\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedBrandId, setSelectedBrandId] = useState('');\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\n\n    function onChange(option) {\n        if (options && options.length > 0) {\n            const customerData = options.find(item => item.value === option);\n            if (customerData) {\n                setSelectedCustomerData(customerData);\n            }\n        }\n        setSelectedBrandId(option);\n        setCustomerId(option);\n        // console.log(`selected ${value}`);\n    }\n\n    function onBlur() {\n        // console.log('blur');\n    }\n\n    function onFocus() {\n        // console.log('focus');\n    }\n\n    function onSearch(val) {\n        // console.log('search:', val);\n    }\n\n    useEffect(() => {\n        const setBrands = async () => {\n            const brandListRes = await handleTagListFetch({\n                urlOptions:{\n                    params: {\n                      sortItem: 'added',\n                      sortOrderValue: '-1'\n                    }\n                    }\n            });\n\n            // @ts-ignore\n            if (brandListRes && brandListRes.length > 0) {\n                // @ts-ignore\n                const brandOptions = brandListRes.map((brand) => {\n                    return {\n                        ...brand,\n                        value: brand.id,\n                        name: `${brand.firstName} ${brand.lastName}`\n                    };\n                });\n                setoptions(brandOptions);\n            }\n        };\n\n        setBrands();\n    }, []);\n\n    return (\n        <Skeleton loading={brandState.isLoading}>\n            <Select\n                showSearch\n                size='middle'\n                style={{ width: '100%' }}\n                placeholder='Select a Customer'\n                optionFilterProp='children'\n                onChange={onChange}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onSearch={onSearch}\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n            >\n                {brandState.done &&\n                    brandState.data.length > 0 &&\n                    options.map((option) => {\n                        return <Option value={option.value}>{option.name}</Option>;\n                    })}\n            </Select>\n        </Skeleton>\n\n    );\n};\n\nexport default Brands;\n","import React, { useEffect, useState,memo } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n    productListState?:any; \n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds,\n    productListState\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n\n\n    useEffect(() => {\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\n            // @ts-ignore\n            const productOptions = productListState.data.map((product) => {\n                return product.name\n            });\n            setoptions(productOptions);\n        }\n\n    }, [productListState]);\n\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n\n        console.log('selectedProducts', selectItems);\n\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = productListState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n            console.log('selectedCategoryIds', selectedCategoryIds);\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n    }\n\n\n    // console.log('selectedOpions', selectedOpions);\n\n\n    return (\n        <>\n            <Skeleton loading={productListState.isLoading}>\n                {productListState.done && productListState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n            </Skeleton>\n\n\n        </>\n    )\n}\n\nexport default memo(Tags);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport {\n  Upload,\n  Radio,\n  message,\n  Select,\n  Button,\n  notification,\n  Empty,\n  Steps,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CaretRightOutlined,\n  CaretLeftOutlined,\n  CaretRightFilled,\n  UserOutlined,\n  InfoCircleOutlined,\n  CarOutlined,\n  ClockCircleOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport AddNewOrderSummary from './AddNewOrderSummary';\nimport CustomersId from './CustomersId';\nimport AddProducts from './AddProducts';\nimport { product } from '../../state/ducks';\n\n//import utils\nimport { getDeliveryChargeTotal } from '.././../utils';\n\nconst { Option } = Select;\nconst { Step } = Steps;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Order Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  address1: '',\n  address2: '',\n  zipCode: '',\n  additionalInfo: '',\n  country: '',\n  city: '',\n};\n\nconst steps = [\n  {\n    title: 'Order Information',\n    content: '',\n    // description: 'Add Customer & Products'\n  },\n  {\n    title: 'Address',\n  },\n  {\n    title: 'Confirm Order',\n    content: '',\n  },\n];\n\ninterface Props {}\n\nconst AddNewOrder = ({}: Props) => {\n  const [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [current, setCurrent] = useState(0);\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n\n  const [productListState, handleProductListFetch] = useHandleFetch(\n    {},\n    'productList'\n  );\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'customerList'\n  );\n\n  const [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\n    [],\n    'getDeliveryRegion'\n  );\n\n  const [deliveryRegionName, setDeliveryRegionName] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [regionDeliveryCharge, setregionDeliveryCharge] = useState([]);\n\n  useEffect(() => {\n    if (selectedCustomerData && Object.keys(selectedCustomerData).length > 0) {\n      setselectedCityValue(selectedCustomerData['city']);\n      setselectedCountryValue(selectedCustomerData['country']);\n    }\n  }, [selectedCustomerData]);\n\n  const isDeliveryChargeExists = (regions) => {\n    if (!regions) {\n      return false;\n    } else return true;\n  };\n\n  useEffect(() => {\n    const getAndSetShippingDeliveryCharge = async () => {\n      const deliveryRegionState = await handleDeliveryRegionFetch({\n        urlOptions: {\n          placeHolders: {\n            cityName: selectedCityValue,\n          },\n        },\n      });\n      // @ts-ignore\n      setregionDeliveryCharge(deliveryRegionState);\n    };\n\n    getAndSetShippingDeliveryCharge();\n    console.log('selectedCityValue', selectedCityValue);\n  }, [selectedCityValue]);\n\n  const handleDeviliveryRegionChange = (value) => {\n    setDeliveryRegionName(value);\n\n    if (\n      isDeliveryChargeExists(\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\n      )\n    ) {\n      const deliveryRegions = regionDeliveryCharge;\n\n      const selectedRegion = deliveryRegions.find(\n        (region) => region['_id'] === value\n      );\n      if (selectedRegion) {\n        setSelectedRegion(selectedRegion);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (\n      isDeliveryChargeExists(\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\n      )\n    ) {\n      const deliveryRegions = regionDeliveryCharge;\n\n      const selectedRegion = deliveryRegions.find(\n        (region, index) => 0 === index\n      );\n      if (selectedRegion) {\n        setDeliveryRegionName(selectedRegion['name']);\n        setSelectedRegion(selectedRegion);\n      }\n    }\n  }, [regionDeliveryCharge]);\n\n  useEffect(() => {\n    const setProducts = async () => {\n      const productListRes = await handleProductListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            productType: 'product',\n          },\n        },\n      });\n    };\n\n    setProducts();\n  }, []);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const next = () => {\n    const newCurrent = current + 1;\n    setCurrent(newCurrent);\n  };\n\n  const prev = () => {\n    const newCurrent = current - 1;\n    setCurrent(newCurrent);\n  };\n\n  const handleCheckoutSubmit = async (values: any, actions: any) => {\n    const products =\n      productList && productList.length > 0\n        ? productList.map((item) => {\n            return {\n              product: item._id,\n              quantity: item.quantity,\n              variation: item.variation,\n            };\n          })\n        : [];\n\n    const addOrderRes = await handleOrderFetch({\n      body: {\n        shippingAddress: {\n          phone: values.phone,\n          email: values.email,\n          address1: values.address1,\n          address2: values.address2,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          city: selectedCityValue || selectedCustomerData['city'],\n          country: selectedCountryValue || selectedCustomerData['country'],\n        },\n        items: products,\n        delivery: deliveryRegionName,\n        customerId: customerId,\n        // charge\n      },\n    });\n\n    // @ts-ignore\n    if (addOrderRes && addOrderRes.status === 'ok') {\n      // openSuccessNotification();\n\n      actions.resetForm();\n\n      setCurrent(0);\n      setProductIds([]);\n      setProductList([]);\n      setCustomerId([]);\n      setselectedCityValue('');\n      setselectedCountryValue('');\n      setDeliveryRegionName('');\n      setSelectedRegion({});\n      setregionDeliveryCharge([]);\n      setSelectedCustomerData({});\n    } else {\n      openErrorNotification(\"Couldn't create order, Something went wrong\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addOrderState['isLoading']) {\n      const error = addOrderState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addOrderState['isLoading'] &&\n      Object.keys(addOrderState.data).length > 0\n    ) {\n      if (addOrderState['data']['status'] === 'ok') {\n        openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addOrderState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.id,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddDeliveryCharge = () => {};\n\n  useEffect(() => {\n    if (productIds && productIds.length > 0 && productList) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'] &&\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  // console.log('productList', productList)\n  console.log('selectedCustomerData', selectedCustomerData);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...selectedCustomerData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='addOrderContainer'>\n            <h3>Add New Order</h3>\n            <div className='addOrderContainer__container'>\n              <Steps current={current}>\n                {steps.map((item) => (\n                  <Step key={item.title} title={item.title} />\n                ))}\n              </Steps>\n\n              {current === 0 && (\n                <div className='addOrderContainer__container-OrderInfoContainer'>\n                  <div className='addOrderContainer__container-OrderInfoContainer-left'>\n                    <h3 style={{}} className='addOrderContainer-sectionTitle'>\n                      <span>\n                        <UserOutlined />\n                      </span>\n                      Customers And products\n                    </h3>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h4 className='inputFieldLabel'>Customer</h4>\n                    <CustomersId\n                      customerListState={customerListState}\n                      setSelectedCustomerData={setSelectedCustomerData}\n                      setCustomerId={setCustomerId}\n                    />\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n                    <h4 className='inputFieldLabel'>Products</h4>\n                    <AddProducts\n                      productListState={productListState}\n                      productIds={productIds}\n                      setProductIds={setProductIds}\n                    />\n                  </div>\n                  <div className='addOrderContainer__container-OrderInfoContainer-right'>\n                    <AddNewOrderSummary\n                      setProductList={setProductList}\n                      productList={productList}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {current === 1 && (\n                <div className='addOrderContainer__container-address'>\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='First Name'\n                        value={values.firstName}\n                        name='firstName'\n                        isError={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        errorString={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('firstName');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Last Name'\n                        value={values.lastName}\n                        name='lastName'\n                        isError={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        errorString={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('lastName');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Phone'\n                        value={values.phone}\n                        name='phone'\n                        isError={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        errorString={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('phone');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Email'\n                        value={values.email}\n                        name='email'\n                        isError={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        errorString={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('email');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>Country</h3>\n\n                      <Form.Item\n                        validateStatus={\n                          addOrderState.error['error']['country'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['country']}\n                        // noStyle={true}\n                      >\n                        <Select\n                          defaultValue={values.country}\n                          notFoundContent={\n                            <Empty\n                              description='No Country Found'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a Country'\n                          optionFilterProp='children'\n                          onChange={onChangeCountry}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {countryListState.done &&\n                            countryListState.data.length > 0 &&\n                            countryOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>City</h3>\n                      <Form.Item\n                        // noStyle={true}\n                        validateStatus={\n                          addOrderState.error['error']['city'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['city']}\n                      >\n                        <Select\n                          defaultValue={values.city}\n                          className='selectClassName'\n                          notFoundContent={\n                            <Empty\n                              description='First Select a Country'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a city'\n                          optionFilterProp='children'\n                          onChange={onChangeCity}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {cityListState.done &&\n                            cityListState.data.length > 0 &&\n                            cityOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '12px',\n                    }}\n                  ></div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Address'\n                        value={values.address1}\n                        name='address1'\n                        isError={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        errorString={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address1');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Address 2'\n                        value={values.address2}\n                        name='address2'\n                        isError={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        errorString={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address2');\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {current === 10 && (\n                <div className='addOrderContainer__container-address'>\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='First Name'\n                        value={values.firstName}\n                        name='firstName'\n                        isError={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        errorString={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('firstName');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Last Name'\n                        value={values.lastName}\n                        name='lastName'\n                        isError={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        errorString={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('lastName');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Phone'\n                        value={values.phone}\n                        name='phone'\n                        isError={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        errorString={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('phone');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Email'\n                        value={values.email}\n                        name='email'\n                        isError={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        errorString={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('email');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>Country</h3>\n\n                      <Form.Item\n                        validateStatus={\n                          addOrderState.error['error']['country'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['country']}\n                        // noStyle={true}\n                      >\n                        <Select\n                          defaultValue={'Comoros'}\n                          notFoundContent={\n                            <Empty\n                              description='No Country Found'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a Country'\n                          optionFilterProp='children'\n                          onChange={onChangeCountry}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {countryListState.done &&\n                            countryListState.data.length > 0 &&\n                            countryOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>City</h3>\n                      <Form.Item\n                        // noStyle={true}\n                        validateStatus={\n                          addOrderState.error['error']['city'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['city']}\n                      >\n                        <Select\n                          defaultValue={'Dhaka'}\n                          className='selectClassName'\n                          notFoundContent={\n                            <Empty\n                              description='First Select a Country'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a city'\n                          optionFilterProp='children'\n                          onChange={onChangeCity}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {cityListState.done &&\n                            cityListState.data.length > 0 &&\n                            cityOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '12px',\n                    }}\n                  ></div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Address'\n                        value={values.address1}\n                        name='address1'\n                        isError={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        errorString={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address1');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='More specific address'\n                        value={values.address2}\n                        name='address2'\n                        isError={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        errorString={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address2');\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {current === 2 && (\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    marginTop: '40px',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <AddNewOrderSummary\n                    setProductList={setProductList}\n                    productList={productList}\n                  />\n\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <h3\n                      style={{\n                        marginTop: '20px',\n                        display: 'inline-block',\n                        textAlign: 'center',\n                      }}\n                      className='addOrderContainer-sectionTitle'\n                    >\n                      <span>\n                        <CarOutlined />\n                      </span>\n                      Delivery Region List ({selectedCityValue})\n                    </h3>\n\n                    {regionDeliveryCharge && regionDeliveryCharge.length > 0 ? (\n                      <>\n                        <Radio.Group\n                          style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            flexWrap: 'wrap',\n                          }}\n                          value={deliveryRegionName}\n                          defaultValue={deliveryRegionName}\n                          name='radiogroup'\n                        >\n                          {regionDeliveryCharge.map((deliveryRegionItem) => {\n                            return (\n                              <div\n                                onClick={() =>\n                                  handleDeviliveryRegionChange(\n                                    deliveryRegionItem._id\n                                  )\n                                }\n                                className='deliveryRegionLabelContainer'\n                              >\n                                <div className='deliveryRegionLabelContainer__radio'>\n                                  <Radio value={deliveryRegionItem._id}></Radio>\n                                </div>\n                                <div className='deliveryRegionLabelContainer__info'>\n                                  <h3>{deliveryRegionItem.name}</h3>\n                                  <h4>\n                                    <span>\n                                      <CarOutlined />\n                                    </span>\n                                    {deliveryRegionItem.pickUpLocation}\n                                  </h4>\n                                  <h4>\n                                    <span>\n                                      <ClockCircleOutlined />\n                                    </span>\n                                    {deliveryRegionItem.time}\n                                  </h4>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </Radio.Group>\n                      </>\n                    ) : (\n                      <>\n                        <h4\n                          style={{\n                            textAlign: 'center',\n                            color: '#777',\n                            marginTop: '50px',\n                          }}\n                        >\n                          Delivery not found\n                        </h4>\n                      </>\n                    )}\n                  </div>\n\n                  <div\n                    style={{\n                      display: 'flex',\n                      marginTop: '40px',\n                      marginBottom: '50px',\n                    }}\n                  >\n                    <Button\n                      loading={addOrderState.isLoading}\n                      style={{\n                        marginTop: '10px',\n                        marginLeft: '15px',\n                      }}\n                      className='btnPrimaryClassNameoutline-blue'\n                      onClick={(e: any) => handleSubmit(e)}\n                    >\n                      Place Order\n                      <CaretRightOutlined />\n                    </Button>\n                  </div>\n                </div>\n              )}\n\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                {current > 0 && (\n                  <Button\n                    style={{ marginRight: '15px', marginTop: '10px' }}\n                    // type=\"primary\"\n                    className='btnPrimaryClassNameoutline'\n                    type='primary'\n                    onClick={() => prev()}\n                  >\n                    <CaretLeftOutlined /> Previous\n                  </Button>\n                )}\n\n                {current < steps.length - 1 && (\n                  <>\n                    <div>\n                      <Button\n                        style={{\n                          marginTop: '10px',\n                        }}\n                        className='btnPrimaryClassNameoutline'\n                        type='primary'\n                        onClick={() => {\n                          if (current === 1) {\n                            setCurrent(2);\n                          } else {\n                            next();\n                          }\n                        }}\n                      >\n                        Next\n                        <CaretRightOutlined />\n                      </Button>\n\n                      {/* {current === 1 && <Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\n                    </div>\n                  </>\n                )}\n\n                {/* {current === steps.length - 1 && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\n\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)} */}\n              </div>\n\n              {/* <div className='addOrderContainer__container-left'>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\n\t\t\t\t\t\t\t\t</div> */}\n            </div>\n          </div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewOrder;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport OrderInvoice from \"./OrderInvoice.jsx\";\nimport SelectProducts from \"./OrderProductIds\";\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\nimport TextArea from '../../components/Field/TextArea';\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({});\n\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Order Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    summary: '',\n    note: ''\n}\n\ninterface Props {\n    customer: any;\n    setTagEditVisible: any;\n    tagEditVisible: any;\n    setOrderNotes?:any; \n    orderNotes?:any; \n}\n\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes }: Props) => {\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'addOrderNote');\n\n    const handleSubmit = async (values: any, actions: any) => {\n        console.log('orderValues',values); \n        \n        const addRegionRes = await handleUpdateOrderFetch({\n            body: {\n                note: values.note,\n                summary: values.summary,\n                order: customer.id,\n            },\n        });\n\n        \n\n        // @ts-ignore\n        if (addRegionRes && addRegionRes.status === 'ok') {\n            openSuccessNotification('Order Note added');\n            // @ts-ignore\n            setOrderNotes([{...addRegionRes},...orderNotes])\n            setTagEditVisible(false)\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            title=\"Add Order Note\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                            bodyStyle={{\n                                margin: '0',\n                                padding: '10px'\n                            }}\n                        >\n                            <TextArea\n                                rows={4}\n\t\t\t\t\t\t\t\tlabel='Note'\n\t\t\t\t\t\t\t\tvalue={values.note}\n\t\t\t\t\t\t\t\tname='note'\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                            <TextArea\n                                rows={2}\n\t\t\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t\t\t\tvalue={values.summary}\n\t\t\t\t\t\t\t\tname='summary'\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                        </Modal>\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport OrderInvoice from \"./OrderInvoice.jsx\";\nimport SelectProducts from \"./OrderProductIds\";\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\nimport TextArea from '../../components/Field/TextArea';\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({});\n\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Order Note Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    summary: '',\n    note: ''\n}\n\ninterface Props {\n    customer: any;\n    setTagEditVisible: any;\n    tagEditVisible: any;\n    setOrderNotes?:any; \n    orderNotes?:any; \n    activeNote?:any; \n}\n\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes,activeNote }: Props) => {\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrderNote');\n\n    const handleSubmit = async (values: any, actions: any) => {\n        console.log('orderValues',values); \n        \n        const addRegionRes = await handleUpdateOrderFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: activeNote._id\n                }\n            }, \n            body: {\n                note: values.note,\n                summary: values.summary,\n                order: customer.id,\n            },\n        });\n\n        \n\n        // @ts-ignore\n        if (addRegionRes && addRegionRes.status === 'ok') {\n            openSuccessNotification();\n            const positionInTag = () => {\n\t\t\t\treturn orderNotes.map(item => item._id).indexOf(activeNote._id);\n\t\t\t}\n\n\t\t\tconst index = positionInTag();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, orderNotes[index], { ...addRegionRes, _id: activeNote._id });\n\t\t\tconst updateTagList = [...orderNotes.slice(0, index), updatedItem, ...orderNotes.slice(index + 1)];\n\t\t\tsetOrderNotes(updateTagList);\n            setTagEditVisible(false)\n\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues, ...activeNote }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            title=\"Update Order Note\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                            bodyStyle={{\n                                margin: '0',\n                                padding: '10px'\n                            }}\n                        >\n                            <TextArea\n                                rows={4}\n\t\t\t\t\t\t\t\tlabel='Note'\n\t\t\t\t\t\t\t\tvalue={values.note}\n\t\t\t\t\t\t\t\tname='note'\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                            <TextArea\n                                rows={2}\n\t\t\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t\t\t\tvalue={values.summary}\n\t\t\t\t\t\t\t\tname='summary'\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                        </Modal>\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n  EyeOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport OrderEdit from './OrderEdit';\nimport OrderNoteEdit from './OrderNoteEdit';\nimport OrderInvoice from './OrderInvoice';\nimport { OrderDetail } from '.';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Order Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'orderDetail'\n  );\n  const [orderDetailNotesState, handleOrderDetailNotesFetch] = useHandleFetch(\n    {},\n    'getOrderNote'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [deleteOrderNoteState, handleDeleteOrderNoteFetch] = useHandleFetch(\n    {},\n    'deleteOrderNote'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [activeOrderNote, setActiveOrderNote] = useState({});\n  const [isOrderNoteEdit, setIsOrderNoteEdit] = useState(false);\n  const [isInvoiceShow, setIsInvoiceShow] = useState(false);\n\n  console.log('orderDetailNotesState', orderDetailNotesState);\n\n  const params = useParams();\n  const history = useHistory();\n  const tagId = params['id'];\n  const [orderNotes, setOrderNotes] = useState([]);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      const orderNotes = await handleOrderDetailNotesFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (orderNotes) {\n        // @ts-ignore\n        setOrderNotes(orderNotes);\n      }\n    };\n    getBrandDetail();\n  }, [tagId]);\n\n  console.log('orderDetailState', tagDetailState);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('orderDetailState', tagDetailState);\n\n  console.log('brandParams', params);\n\n  const handleDeleteOrderNote = async (id) => {\n    const res = await handleDeleteOrderNoteFetch({\n      urlOptions: {\n        placeHolders: {\n          id: id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (res && res.status === 'ok') {\n      const newOrderNoteList =\n        orderNotes && orderNotes.filter((item) => item._id !== id);\n      setOrderNotes(newOrderNoteList);\n      openSuccessNotification('Order note deleted!');\n    }\n  };\n\n  console.log(\n    \"tagDetailState.data['products']\",\n    tagDetailState.data['products']\n  );\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n\n  return (\n    <div className='brandDetailContainer'>\n      <OrderNoteEdit\n        setOrderNotes={setOrderNotes}\n        orderNotes={orderNotes}\n        tagEditVisible={isOrderNoteEdit}\n        setTagEditVisible={setIsOrderNoteEdit}\n        customer={tagDetailState.data}\n        activeNote={activeOrderNote}\n      />\n      <div className='brandDetailContainer__heading'>\n        <h3>Order Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 && (\n            <>\n              <div>\n                <OrderInvoice\n                  setShowInvoice={setIsInvoiceShow}\n                  showInvoice={isInvoiceShow}\n                  id={tagDetailState['data']['id']}\n                />\n                <OrderEdit\n                  setOrderNotes={setOrderNotes}\n                  orderNotes={orderNotes}\n                  tagEditVisible={tagEditVisible}\n                  setTagEditVisible={setTagEditVisible}\n                  customer={tagDetailState.data}\n                />\n                <Button\n                  onClick={() => setIsInvoiceShow(true)}\n                  type='link'\n                  icon={<EyeOutlined />}\n                >\n                  Generate Invoice\n                </Button>\n\n                {isAccess('postOrder', roles) && (\n                  <>\n                    <Button\n                      onClick={() => setTagEditVisible(true)}\n                      type='link'\n                      icon={<PlusOutlined />}\n                    >\n                      Add note\n                    </Button>\n                  </>\n                )}\n              </div>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          !(Object.keys(tagDetailState.data).length > 0) && (\n            <Empty\n              description='No Order found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 && (\n            <>\n              <div\n                style={{\n                  display: 'flex',\n                }}\n              >\n                <div\n                  style={{\n                    flex: 1,\n                    marginRight: '20px',\n                  }}\n                  className='brandDetailContainer__header'\n                >\n                  <div className='brandDetailContainer__header-info'>\n                    {tagDetailState.data['shortCode'] && (\n                        <h2>#{tagDetailState.data['shortCode']}</h2>\n                    )}\n                 \n                    <h2>{tagDetailState.data['name']}</h2>\n                    <h3>{tagDetailState.data['description']}</h3>\n                    {tagDetailState.data['url'] && (\n                      <h3>\n                        URL:\n                        <span>{tagDetailState.data['url']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['country'] && (\n                      <h3>\n                        COUNTRY:\n                        <span>{tagDetailState['data']['country']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['city'] && (\n                      <h3>\n                        CITY:\n                        <span>{tagDetailState['data']['city']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['address1'] && (\n                      <h3>\n                        ADDRESS:\n                        <span>{tagDetailState['data']['address1']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['phone'] && (\n                      <h3>\n                        PHONE:\n                        <span>{tagDetailState['data']['phone']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['email'] && (\n                      <h3>\n                        EMAIL:\n                        <span>{tagDetailState['data']['email']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['paymentMethod'] && (\n                      <h3>\n                        PAYMENT METHOD:\n                        <span>{tagDetailState['data']['paymentMethod']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['paymentStatus'] && (\n                      <h3>\n                        PAYMENT STATUS:\n                        <span>{tagDetailState['data']['paymentStatus']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['status'] && (\n                      <h3>\n                        ORDER STATUS:\n                        <span>{tagDetailState['data']['status']}</span>\n                      </h3>\n                    )}\n\n                    {/* \n                            {tagDetailState['data']['deliveryCharge'] && (\n                                <h3>\n                                    DELIVERY CHARGE:\n                                    <span>\n                                        {tagDetailState['data']['deliveryCharge']}\n                                    </span>\n                                </h3>\n                            )} */}\n\n                    {tagDetailState['data']['deliveryName'] && (\n                      <h3>\n                        DELIVERY LOCATION:\n                        <span>\n                          {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\n                        </span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['total'] && (\n                      <h3>\n                        TOTAL ORDER PRICE:\n                        <span>{`${tagDetailState['data']['total']}`}</span>\n                      </h3>\n                    )}\n                  </div>\n                </div>\n\n                <div\n                  style={{\n                    maxWidth: '35%',\n                    minWidth: '35%',\n                  }}\n                  className='brandDetailContainer__header'\n                >\n                  <div\n                    style={{\n                      width: '100%',\n                    }}\n                    className='brandDetailContainer__header-info'\n                  >\n                    <h2>Notes</h2>\n\n                    <div\n                      style={{\n                        width: '100%',\n                      }}\n                    >\n                      {orderDetailNotesState.done &&\n                        orderNotes &&\n                        orderNotes.length > 0 &&\n                        orderNotes.map((noteItem: any) => {\n                          return (\n                            <div className='OrderNoteItem'>\n                              <div className='OrderNoteItem__action'>\n                                {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                <span\n                                  className='OrderNoteItem__action-edit'\n                                  onClick={() => {\n                                    setActiveOrderNote(noteItem);\n                                    setIsOrderNoteEdit(true);\n                                  }}\n                                >\n                                  <EditOutlined />\n                                </span>\n                                <span\n                                  className='OrderNoteItem__action-delete'\n                                  onClick={() =>\n                                    handleDeleteOrderNote(noteItem._id)\n                                  }\n                                >\n                                  <DeleteOutlined />\n                                </span>\n                              </div>\n                              <h4>\n                                <span>NOTE:</span>\n                                {` ${noteItem.note}`}\n                              </h4>\n\n                              {noteItem.summary && (\n                                <>\n                                  <h4>\n                                    <span>SUMMARY :</span>\n\n                                    {` ${noteItem.summary}`}\n                                  </h4>\n                                </>\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      {orderDetailNotesState.done &&\n                        orderNotes &&\n                        !(Object.keys(orderNotes).length > 0) && (\n                          <>\n                            <div\n                              style={{\n                                width: '100%',\n                                margin: '100px 0',\n                                display: 'flex',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Empty\n                                description='No Notes found'\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                              />\n                            </div>\n                          </>\n                        )}\n                    </div>\n                  </div>\n                </div>\n\n                <div></div>\n              </div>\n            </>\n          )}\n      </Skeleton>\n\n      {tagDetailState.done &&\n        tagDetailState.data &&\n        Object.keys(tagDetailState.data).length > 0 && (\n          <>\n            <div className='brandDetailContainer__heading'>\n              <h3>Products</h3>\n            </div>\n          </>\n        )}\n\n      <div className='brandDetailContainer__body'>\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['products'] &&\n          !(tagDetailState.data['products'].length > 0) && (\n            <div\n              style={{\n                marginTop: '100px',\n              }}\n            >\n              <Empty\n                description='No Products exists for this order'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['products'] &&\n          tagDetailState.data['products'].length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                size='small'\n                dataSource={tagDetailState.data['products']}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title=''\n                  dataIndex='cover'\n                  key='id'\n                  width={'80px'}\n                  className='classnameofthecolumn'\n                  render={(cover, record: any) => (\n                    <>\n                    <div\n                      className='listCoverImage'\n                      onClick={() => {\n                        history.push(`/admin/product/${record.id}`);\n                      }}\n                    >\n                      <img src={getCover(record)} alt='' />\n                    </div>\n\n         \n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='stock'\n                  dataIndex='inStock'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text ? 'inStock' : 'out of stock'}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Unit Price'\n                  dataIndex='unitPrice'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Quantity'\n                  dataIndex='quantity'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Total Price'\n                  dataIndex='price'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst MONTHS = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n];\n\nconst date = new Date();\nconst thisMonth = MONTHS[date.getMonth()]\n\n\nexport const getMonthNameByOrder = (order: number): string | undefined =>\n    `${order}${thisMonth}`;\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'dayOfMonth',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    This Month\n                </h2>\n                <h3>\n                      Order report by days of month \n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'dayOfMonth'} \n                         tickFormatter={getMonthNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst WEEEK = [\n    \"Sat\",\n    \"Sun\",\n    \"Mon\",\n    \"Tues\",\n    \"Wed\",\n    \"Thur\",\n    \"Fri\"\n];\n\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n    WEEEK[order - 1];\n\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'dayOfWeek',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    This Week\n                </h2>\n                <h3>\n                      Order report by days of week \n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'dayOfWeek'} \n                         tickFormatter={getWeekNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst WEEEK = [\n    \"Sat\",\n    \"Sun\",\n    \"Mon\",\n    \"Tues\",\n    \"Wed\",\n    \"Thur\",\n    \"Fri\"\n];\n\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n    WEEEK[order - 1];\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'date',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                   BY DATE\n                </h2>\n                <h3>\n                      Order report by date\n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'date'} \n                        //  tickFormatter={getWeekNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\nexport const getHourFormatter = (order: number): string | undefined =>\n    `${order}hr`;\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'hour',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    BY HOUR\n                </h2>\n                <h3>\n                      Order report by hours \n                </h3>\n            </div>\n        </div>\n\n        \n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'hour'} \n                         tickFormatter={getHourFormatter}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\n\n//\n\n// import lib\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Area,\n  Line,\n} from 'recharts';\n\nimport { useHistory } from 'react-router-dom';\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Modal,\n  Spin,\n} from 'antd';\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\ninterface Props {}\n\nconst localOptions = [\n  {\n    value: 'category',\n    name: 'Category',\n  },\n  {\n    value: 'product',\n    name: 'Product',\n  },\n];\n\nconst MONTHS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const getMonthNameByOrder = (order: number): string | undefined =>\n  `${MONTHS[order - 1]}`;\n\nexport const TooltipContainerStyles = {\n  border: 0,\n  borderRadius: '8px',\n  fontSize: 14,\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\n};\n\nconst PageVisits = (props: Props) => {\n  const history = useHistory();\n\n  const [\n    orderAnalyticsVisitsState,\n    handleOrderAnalyticsVisitsStateFetch,\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\n  const [orderData, setorderData] = useState([]);\n\n  useEffect(() => {\n    const getAnalyticsOrders = async () => {\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\n        urlOptions: {\n          params: {\n            metricType: 'month',\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (ordersDataRes) {\n        // @ts-ignore\n        setorderData(ordersDataRes);\n      }\n    };\n    getAnalyticsOrders();\n  }, []);\n\n  console.log('orderAnalyticsVisitsStateMonth', orderAnalyticsVisitsState);\n\n  return (\n    <div className='overviewContainer__body-apiVisits'>\n      <div className='overviewContainer__body-apiVisits-header'>\n        <div className='overviewContainer__body-apiVisits-header-info'>\n          <h2>BY MONTH</h2>\n          <h3>Order report by month</h3>\n        </div>\n      </div>\n\n      <div className='overviewContainer__body-body'>\n        {orderAnalyticsVisitsState.isLoading && (\n          <>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                margin: '100px 0',\n              }}\n            >\n              <Spin size='large' />\n            </div>\n          </>\n        )}\n\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n          <ResponsiveContainer width='100%' height={300}>\n            <AreaChart data={orderData} fontSize={12}>\n              <defs>\n                <linearGradient id='rainGradient' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='0%' stopColor='#1890ff' />\n                  <stop offset='100%' stopColor='#3066BE22' />\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                vertical={false}\n                strokeDasharray='3 3'\n                stroke='#d6d9da'\n              />\n              <XAxis dataKey={'month'} tickFormatter={getMonthNameByOrder} />\n              <YAxis\n                // unit=\"ml\"\n                orientation='left'\n                width={20}\n                axisLine={false}\n                tickLine={false}\n              />\n              <Tooltip\n                cursor={false}\n                contentStyle={TooltipContainerStyles}\n                formatter={(value, name) => [`${value}`, `${name}`]}\n              />\n              <Area\n                dataKey='count'\n                name='Count'\n                type='basis'\n                fill='url(#rainGradient)'\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        )}\n\n        {orderAnalyticsVisitsState.done &&\n          !(orderAnalyticsVisitsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '00px',\n              }}\n            >\n              <Empty\n                description={`No Visits for this months`}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n      </div>\n      <div className='overviewContainer__body-footer'>\n        <h3>\n          <span>\n            <CalendarOutlined />\n          </span>\n          In the last month\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default PageVisits;\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst WEEEK = [\n    \"Sat\",\n    \"Sun\",\n    \"Mon\",\n    \"Tues\",\n    \"Wed\",\n    \"Thur\",\n    \"Fri\"\n];\n\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n    WEEEK[order - 1];\n\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'year',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    By Year\n                </h2>\n                <h3>\n                      Order report by year \n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'year'} \n                        //  tickFormatter={getWeekNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                    In the last year\n            </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\n\n//\n\n// import lib\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Area,\n  Line,\n} from 'recharts';\n\nimport { useHistory } from 'react-router-dom';\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Modal,\n  Spin,\n} from 'antd';\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\ninterface Props {}\n\nconst localOptions = [\n  {\n    value: 'category',\n    name: 'Category',\n  },\n  {\n    value: 'product',\n    name: 'Product',\n  },\n];\n\nconst WEEEK = ['Sat', 'Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri'];\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n  WEEEK[order - 1];\n\nexport const TooltipContainerStyles = {\n  border: 0,\n  borderRadius: '8px',\n  fontSize: 14,\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\n};\n\nconst DeliveryRegionReport = (props: Props) => {\n  const history = useHistory();\n\n  const [\n    orderAnalyticsVisitsState,\n    handleOrderAnalyticsVisitsStateFetch,\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\n  const [orderData, setorderData] = useState([]);\n\n  useEffect(() => {\n    const getAnalyticsOrders = async () => {\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\n        urlOptions: {\n          params: {\n            metricType: 'deliveryRegion',\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (ordersDataRes && ordersDataRes.length > 0) {\n        // @ts-ignore\n        const orderData = ordersDataRes.map((item) => {\n          return {\n            ...item,\n            name:\n              item['deliveryRegion'] &&\n              Object.keys(item['deliveryRegion']).length > 0\n                ? item['deliveryRegion']['name']\n                : 'Region Name',\n          };\n        });\n        // @ts-ignore\n        setorderData(orderData);\n      } else {\n        setorderData([]);\n      }\n    };\n    getAnalyticsOrders();\n  }, []);\n\n  console.log('orderListByDeliveryRegion', orderAnalyticsVisitsState);\n\n  return (\n    <div className='overviewContainer__body-apiVisits'>\n      <div className='overviewContainer__body-apiVisits-header'>\n        <div className='overviewContainer__body-apiVisits-header-info'>\n          <h2>BY DELIVERY REGION</h2>\n          <h3>Order report by delivery region</h3>\n        </div>\n      </div>\n\n      <div className='overviewContainer__body-body'>\n        {orderAnalyticsVisitsState.isLoading && (\n          <>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                margin: '100px 0',\n              }}\n            >\n              <Spin size='large' />\n            </div>\n          </>\n        )}\n\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n          <>\n            <Table\n              pagination={{ defaultPageSize: 5 }}\n              style={{}}\n              // expandable={{\n              //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n              //     rowExpandable: record => record.name !== 'Not Expandable',\n              //   }}\n              // bordered={true}\n              size='small'\n              // pagination={false}\n              dataSource={orderData}\n              tableLayout={'auto'}\n              onHeaderRow={(column) => {\n                return {\n                  style: {\n                    color: 'red !important',\n                  },\n                };\n              }}\n            >\n              <Column\n                title='Name'\n                dataIndex='name'\n                key='id'\n                className='classnameofthecolumn'\n                render={(text, record: any) => (\n                  <>\n                    <h4\n                      onClick={() => {\n                        // history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\n                      }}\n                      style={{\n                        fontWeight: 400,\n                        color: '#555',\n                        textTransform: 'uppercase',\n                      }}\n                    >\n                      {text || `Deleted`}\n                    </h4>\n                  </>\n                )}\n              />\n\n              <Column\n                title='Count'\n                dataIndex='count'\n                key='id'\n                className='classnameofthecolumn'\n              />\n            </Table>\n          </>\n        )}\n\n        {orderAnalyticsVisitsState.done &&\n          !(orderAnalyticsVisitsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '00px',\n              }}\n            >\n              <Empty\n                description={`No Visits for date`}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n      </div>\n      <div className='overviewContainer__body-footer'>\n        <h3>\n          <span>\n            <CalendarOutlined />\n          </span>\n          In the last month\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default DeliveryRegionReport;\n","import OrderOverviewReport from \"./OrderOverviewReport\";\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\n\n// import components \nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\nimport DateOrderReport from \"./DateOrderReport\";\nimport HourOrderReport from \"./HourOrderReport\";\nimport MonthOrderReport from \"./MonthOrderReport\";\nimport YearOrderReport from \"./YearOrderReport\";\nimport DeliveryRegionReport from \"./DeliveryRegionReport\";\n\n// import lib \nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tFileImageFilled,\n\tFileImageOutlined,\n\tFileImageTwoTone,\n\tPlusOutlined,\n\tPlusCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tUserOutlined,\n\tCalendarOutlined,\n\tGoldOutlined,\n\tShoppingCartOutlined,\n\tTagOutlined\n} from '@ant-design/icons';\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n\ninterface Props { }\n\nconst Overview = (props: Props) => {\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\n\n\n\n\tuseEffect(() => {\n\n\t\tconst getTotalUserCount = async () => {\n\t\t\tawait handleGetTotalUserCountFetch({});\n\t\t}\n\n\t\tgetTotalUserCount();\n\t}, []);\n\n\n\t\n\tuseEffect(()=>{\n\t\tconst getProductVisitCount = async () => {\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\n\t\t\t\tparams: 'product'\n\t\t\t})\n\t\t}; \n\t\tgetProductVisitCount();\n\t},[])\n\n\n\n\tuseEffect(()=>{\n\t\tconst getCategoryVisitCount = async () => {\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\n\t\t\t\tparams: 'category'\n\t\t\t})\n\t\t}; \n\t\tgetCategoryVisitCount();\n\t},[])\n\n\n\n\n\n\n\treturn (\n\t\t<div className='overviewContainer'>\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<DeliveryRegionReport/>\n\t\t\t\t<ThisWeekOrderReport />\n\t\t\t\t<ThisMonthOrderReport />\n\t\t\t</div>\n\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<DateOrderReport />\n\t\t\t\t<HourOrderReport />\n\t\t\t</div>\n\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<MonthOrderReport />\n\t\t\t\t<YearOrderReport />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Overview;\n","import React from 'react'\n\ninterface Props {\n    \n}\n\nconst ConfigOrderStatus = (props: Props) => {\n    return (\n        <div>\n            ConfigOrderStatus\n        </div>\n    )\n}\n\nexport default ConfigOrderStatus\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete, Tooltip } from 'antd';\n\nimport InputSmall from '../../components/Field/InputSmall';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport { useFetch } from \"../../hooks\";\nimport {\n    DeleteOutlined,\n    FileAddOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\n\n\n    const [localComponentItem, setlocalComponentItem] = useState({\n        title: componentItem.title,\n        target: componentItem.target,\n        text: componentItem.text,\n        image: componentItem.image,\n    })\n\n    const [myImages, setmyImages] = useState([]);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n\n    const handleComponentItemsChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        setlocalComponentItem({\n            ...localComponentItem,\n            [name]: value\n        });\n    };\n\n    useEffect(() => {\n        if (myImages.length > 0) {\n            const newImages = myImages.map(item => item.id);\n            setlocalComponentItem({\n                ...localComponentItem,\n                image: [...newImages]\n            })\n        }\n        else {\n            setlocalComponentItem({\n                ...localComponentItem,\n                image: []\n            })\n        }\n\n    }, [myImages])\n\n    useEffect(() => {\n        const positionInAttribute = () => {\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\n        }\n\n        const index = positionInAttribute();\n\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\n        setItemsList(updateComponentList);\n\n    }, [localComponentItem])\n\n\n    const handleAttributeDelete = () => {\n\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\n        setItemsList(updateComponentList);\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n\n\n    return (\n        <>\n\n\n            <div className='componentItemsContainer__item'>\n                <InputSmall\n                    label='Title'\n                    value={localComponentItem.title}\n                    name='title'\n                    onChange={handleComponentItemsChange}\n                />\n                <InputSmall\n                    label='Text'\n                    value={localComponentItem.text}\n                    name='text'\n                    onChange={handleComponentItemsChange}\n                />\n\n                <InputSmall\n                    label='Target'\n                    value={localComponentItem.target}\n                    name='target'\n                    onChange={handleComponentItemsChange}\n                />\n\n\n                <h3 className='inputFieldLabel-small'>Images</h3>\n                <div style={{\n                    marginBottom: \"-1px\"\n                }}></div>\n\n                <div className='aboutToUploadImagesContainer'>\n                    {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 && myImages.map((image, index) => {\n                            return (\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\n                                    <div\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                    >\n                                        <img src={image.cover} alt={image.alt} />\n                                    </div>\n\n                                    <span\n                                        onClick={() => handleImagesDelete(image.id)}\n                                        className='aboutToUploadImagesContainer__item-remove'>\n                                        <CloseOutlined />\n                                    </span>\n                                </div>\n                            )\n                        })}\n\n\n                    <Tooltip\n                        title={'Attach images'}>\n\n                        <div\n                            onClick={() => {\n                                setvisibleMedia(true);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                <PlusOutlined />\n                            </span>\n                        </div>\n                    </Tooltip>\n\n                </div>\n\n\n\n            </div>\n            <MediaLibrary\n                setvisible={setvisibleMedia}\n                visible={visibleMedia}\n                myImages={myImages}\n                setmyImages={setmyImages}\n                isModalOpenForImages={true}\n\n            />\n\n        </>\n    )\n}\n\nexport default Complete;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport ComponentItem from './ComponentItem';\n\nconst validationSchema = Yup.object().shape({\n  groupName: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Component Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  groupName: '',\n  items: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  componentList?: any;\n  setComponentList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n}: Props) => {\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\n    {},\n    'addComponent'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [itemsList, setItemsList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addComponentRes = await handleAddComponentFetch({\n      body: {\n        groupName: values.groupName,\n        items: itemsList,\n      },\n    });\n\n    // @ts-ignore\n    if (addComponentRes && addComponentRes.status === 'ok') {\n      openSuccessNotification();\n      setComponentList([\n        ...componentList,\n        {\n          id: addComponentRes['_id'] || '',\n          key: addComponentRes['_id'] || '',\n          groupName: addComponentRes['groupName'] || '',\n          // @ts-ignore\n          ...addComponentRes,\n        },\n      ]);\n      actions.resetForm();\n      setItemsList([]);\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addComponentState['isLoading']) {\n      const error = addComponentState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addComponentState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.groupName) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddComponentItem = () => {\n    setItemsList([\n      ...itemsList,\n      {\n        title: '',\n        target: '',\n        text: '',\n        image: [],\n        id: `${itemsList.length}`,\n      },\n    ]);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Component'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n            width={'50vw'}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.groupName}\n              name='groupName'\n              isError={\n                (touched.groupName && errors.groupName) ||\n                (!isSubmitting && addComponentState.error['error']['name'])\n              }\n              errorString={\n                (touched.groupName && errors.groupName) ||\n                (!isSubmitting && addComponentState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('groupName');\n              }}\n            />\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Children</h3>\n\n            <div className='componentItemsContainer'>\n              {itemsList.map((itemComponent) => {\n                return (\n                  <ComponentItem\n                    componentItem={itemComponent}\n                    itemsList={itemsList}\n                    setItemsList={setItemsList}\n                  />\n                );\n              })}\n\n              <Button\n                size='small'\n                onClick={handleAddComponentItem}\n                style={{\n                  width: '290px',\n                  minHeight: '145px',\n                  marginTop: '0px',\n                  borderRadius: '8px',\n                }}\n                type='dashed'\n                icon={<PlusOutlined />}\n              >\n                Add Childrens\n              </Button>\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete, Button, Tooltip } from 'antd';\n\n// import configs\nimport config from \"../../config.json\";\n\nimport InputSmall from '../../components/Field/InputSmall';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport { useFetch } from \"../../hooks\";\nimport {\n    DeleteOutlined,\n    FileAddOutlined, \n    SaveOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate, isLoadingUpdate }) => {\n\n    const [localComponentItem, setlocalComponentItem] = useState({\n        title: item.title,\n        target: item.target,\n        text: item.text,\n        image: item.image,\n    }); \n\n\n    console.log('localComponentItem',localComponentItem); \n    console.log('componentItem',item); \n\n\n\n    // useEffect(()=>{\n\n    //     if(item && item.image && item.image.length > 0){\n    //         setlocalComponentItem({\n    //             ...localComponentItem,\n    //             image: \n    //         })\n    //     }; \n\n\n    // },item)\n\n    const [myImages, setmyImages] = useState([]);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n\n    const handleComponentItemsChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        setlocalComponentItem({\n            ...localComponentItem,\n            [name]: value\n        });\n    };\n\n\n\n\n\n\n    useEffect(() => {\n        if (myImages.length > 0) {\n            setlocalComponentItem({\n                ...localComponentItem,\n                // @ts-ignore\n                image: [...new Set([...localComponentItem.image, ...myImages])]\n            })\n        }\n        // else {\n        //     setlocalComponentItem({\n        //         ...localComponentItem,\n        //         image: []\n        //     })\n        // }\n\n    }, [myImages])\n\n\n\n\n    useEffect(()=>{\n\n        if(item && item.image && item.image.length > 0){\n            setmyImages(item.image)\n        }\n\n    },[])\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\n            return image.id !== id;\n        })\n\n        setlocalComponentItem({\n            ...localComponentItem,\n            image: [...newImages]\n        })\n\n        setmyImages(newImages);\n    }\n\n\n    const handleComponentItemUpdate = () => {\n        componentUpdate(item,component,localComponentItem); \n    }\n\n\n\n\n\n\n    return (\n        <>\n            <div\n                style={{\n                    width: '100%',\n                    boxShadow: \"none\"\n                }}\n                className='componentItemsContainer__item'>\n                <InputSmall\n                    label='Title'\n                    value={localComponentItem.title}\n                    name='title'\n                    onChange={handleComponentItemsChange}\n                />\n                <InputSmall\n                    label='Text'\n                    value={localComponentItem.text}\n                    name='text'\n                    onChange={handleComponentItemsChange}\n                />\n\n                <InputSmall\n                    label='Target'\n                    value={localComponentItem.target}\n                    name='target'\n                    onChange={handleComponentItemsChange}\n                />\n\n\n                <h3 className='inputFieldLabel-small'>Images</h3>\n                <div style={{\n                    marginBottom: \"-1px\"\n                }}></div>\n\n\n                <div className='aboutToUploadImagesContainer'>\n                    {localComponentItem.image &&\n                        // @ts-ignore\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\n                            return (\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\n                                    <div\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                    >\n                                        <img src={image.cover} alt={image.alt} />\n                                    </div>\n\n                                    <span\n                                        onClick={() => handleImagesDelete(image.id)}\n                                        className='aboutToUploadImagesContainer__item-remove'>\n                                        <CloseOutlined />\n                                    </span>\n                                </div>\n                            )\n                        })}\n\n\n                    <Tooltip\n                        title={'Attach images'}>\n\n                        <div\n                            onClick={() => {\n                                setvisibleMedia(true);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                <PlusOutlined />\n                            </span>\n                        </div>\n                    </Tooltip>\n\n                </div>\n                <Button\n                style={{\n                    marginTop: '15px'\n                }}\n                    icon={<SaveOutlined />}\n          className='btnPrimaryClassNameoutline'\n          onClick={() => handleComponentItemUpdate()}\n        >\n\n            {isLoadingUpdate ? \"Saving...\" : \"Save\"}\n            \n            </Button>\n            </div>\n            <MediaLibrary\n                setvisible={setvisibleMedia}\n                visible={visibleMedia}\n                myImages={myImages}\n                setmyImages={setmyImages}\n                isModalOpenForImages={true}\n\n            />\n\n        </>\n    )\n}\n\nexport default Complete;\n","import React, { useState, useEffect } from 'react';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Modal, Tooltip } from 'antd';\n\nimport {\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  CloseOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport ComponentItem from './ComponentItem';\n\nconst validationSchema = Yup.object().shape({\n  groupName: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Component Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  groupName: '',\n  items: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  componentList?: any;\n  setComponentList?: any;\n  updateComponentByAddingItem?: any;\n  componentId?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n  updateComponentByAddingItem,\n  componentId,\n}: Props) => {\n  const [localComponentItem, setlocalComponentItem] = useState({\n    title: '',\n    target: '',\n    text: '',\n    image: [],\n  });\n\n  const [myImages, setmyImages] = useState([]);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n\n  const handleComponentItemsChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setlocalComponentItem({\n      ...localComponentItem,\n      [name]: value,\n    });\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.groupName) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (myImages.length > 0) {\n      const newImages = myImages.map((item) => item.id);\n      setlocalComponentItem({\n        ...localComponentItem,\n        image: [...newImages],\n      });\n    } else {\n      setlocalComponentItem({\n        ...localComponentItem,\n        image: [],\n      });\n    }\n  }, [myImages]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleAddItem = (e) => {\n    updateComponentByAddingItem(localComponentItem, componentId);\n  };\n\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        destroyOnClose={true}\n        title='Add New Component Item'\n        visible={addNewCategoryVisible}\n        onOk={(e: any) => handleAddItem(e)}\n        onCancel={handleCancel}\n        okText='Add'\n        okButtonProps={{\n          htmlType: 'submit',\n        }}\n        width={'400px'}\n        bodyStyle={{\n          margin: '0',\n          padding: '10px',\n        }}\n      >\n        <Input\n          label='Title'\n          value={localComponentItem.title}\n          name='title'\n          onChange={handleComponentItemsChange}\n        />\n        <Input\n          label='Text'\n          value={localComponentItem.text}\n          name='text'\n          onChange={handleComponentItemsChange}\n        />\n\n        <Input\n          label='Target'\n          value={localComponentItem.target}\n          name='target'\n          onChange={handleComponentItemsChange}\n        />\n\n        <h3 className='inputFieldLabel-small'>Images</h3>\n\n        <div className='aboutToUploadImagesContainer'>\n          {myImages &&\n            // @ts-ignore\n            myImages.length > 0 &&\n            myImages.map((image, index) => {\n              return (\n                <div className='aboutToUploadImagesContainer__item'>\n                  <div className='aboutToUploadImagesContainer__item-imgContainer'>\n                    <img src={image.cover} alt={image.alt} />\n                  </div>\n\n                  <span\n                    onClick={() => handleImagesDelete(image.id)}\n                    className='aboutToUploadImagesContainer__item-remove'\n                  >\n                    <CloseOutlined />\n                  </span>\n                </div>\n              );\n            })}\n\n          <Tooltip title={'Attach images'}>\n            <div\n              onClick={() => {\n                setvisibleMedia(true);\n              }}\n              className='aboutToUploadImagesContainer__uploadItem'\n            >\n              {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n              <FileImageFilled />\n              {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                <PlusOutlined />\n              </span>\n            </div>\n          </Tooltip>\n        </div>\n\n        <MediaLibrary\n          setvisible={setvisibleMedia}\n          visible={visibleMedia}\n          myImages={myImages}\n          setmyImages={setmyImages}\n          isModalOpenForImages={true}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  Button,\n  Tooltip,\n  Upload,\n  Modal,\n  Input,\n  notification,\n  Popconfirm,\n} from 'antd';\nimport {\n  CaretRightOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\n\n// import components\nimport InputField from '../../components/Field/Input';\nimport Empty from '../../components/Empty';\nimport ComponentImageUpload from './ComponentImageUpload';\nimport { useHandleFetch } from '../../hooks';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewComponent from './AddNewComponent';\nimport ComponentListComponentItem from './ComponentListComponentItem';\nimport AddNewComponentItem from './AddNewComponentItem';\nimport { category } from '../../state/ducks';\nimport { truncate } from 'fs';\n\nconst { Panel } = Collapse;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Component Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\n\n\nfunction getBase64(file: any) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\nconst genExtra = (updateComponentByDeleting, component, id) => (\n  <div\n    style={{\n      display: 'flex',\n    }}\n  >\n    <Tooltip placement='top' title='Edit Component'>\n      <a href='##'>\n        <EditOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            // event.stopPropagation();\n          }}\n        />\n      </a>\n    </Tooltip>\n\n    <div\n      style={{\n        marginLeft: '15px',\n      }}\n    />\n    <a\n      href='##'\n      style={{\n        color: 'rgb(241, 67, 67)',\n      }}\n    >\n      <Popconfirm\n        onConfirm={() => updateComponentByDeleting(id, component)}\n        title='Are you sure？'\n        okText='Yes'\n        cancelText='No'\n      >\n        <DeleteOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            event.stopPropagation();\n          }}\n        />\n      </Popconfirm>\n    </a>\n  </div>\n);\n\nconst genExtraForGroup = (\n  setitemVisible: any,\n  handleDeleteComponent: any,\n  id: any,\n  setComponentId: any\n) => (\n  <div\n    style={{\n      display: 'flex',\n    }}\n  >\n    <Tooltip placement='top' title='Add new item Component'>\n      <a href='##'>\n        <PlusOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            // event.stopPropagation();\n            setitemVisible(true);\n            setComponentId(id);\n          }}\n        />\n      </a>\n    </Tooltip>\n\n    <div\n      style={{\n        marginLeft: '15px',\n      }}\n    />\n    <Tooltip placement='top' title='Edit Component'>\n      <a href='##'>\n        <EditOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            // event.stopPropagation();\n          }}\n        />\n      </a>\n    </Tooltip>\n\n    <div\n      style={{\n        marginLeft: '15px',\n      }}\n    />\n    <a\n      href='##'\n      style={{\n        color: 'rgb(241, 67, 67)',\n      }}\n    >\n      <Popconfirm\n        onConfirm={() => handleDeleteComponent(id)}\n        title='Are you sure？'\n        okText='Yes'\n        cancelText='No'\n      >\n        <DeleteOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            event.stopPropagation();\n          }}\n        />\n      </Popconfirm>\n    </a>\n  </div>\n);\n\nconst Component = (props) => {\n  const [visible, setvisible] = useState(false);\n  const [groupVisible, setgroupVisible] = useState(false);\n  const [itemVisible, setitemVisible] = useState(false);\n  const [componentId, setComponentId] = useState('');\n\n\n  const [componentState, handleComponentListFetch] = useHandleFetch(\n    {},\n    'componentList'\n  );\n  const [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch(\n    {},\n    'deleteComponent'\n  );\n  const [updateComponentState, handleUpdateComponentFetch] = useHandleFetch(\n    {},\n    'updateComponent'\n  );\n\n  \n\n  const [componentList, setComponentList] = useState([]);\n\n  useEffect(() => {\n    const setComponents = async () => {\n      const components = await handleComponentListFetch({\n        urlOptions: {\n          params: {\n            imageValue: true,\n          },\n        },\n      });\n      // @ts-ignore\n      setComponentList(components);\n    };\n    setComponents();\n  }, []);\n\n  console.log('componentListd', componentList);\n\n  const handleSearch = (value) => {\n    if (componentState.data.length > 0) {\n      const newComponentList = componentState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setComponentList(newComponentList);\n    }\n  };\n\n  const handleDeleteComponent = async (id) => {\n    const deleteComponentRes = await handleDeleteComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteComponentRes && deleteComponentRes.status === 'ok') {\n      openSuccessNotification('Component Deleted');\n      const newComponentList = componentList.filter((item) => item.id !== id);\n      setComponentList(newComponentList);\n    } else {\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n  const handleOkGroup = (e: any) => {\n    setgroupVisible(false);\n  };\n\n  const handleCancelGroup = (e: any) => {\n    setgroupVisible(false);\n  };\n\n  const componentUpdate = async (item, component, localComponentItem) => {\n    const positionInComponents = () => {\n      return componentList.map((item) => item.id).indexOf(component.id);\n    };\n\n    const positionInItemsOfComponent = () => {\n      return component.items.map((item) => item.id).indexOf(item.id);\n    };\n\n    const componentIndex = positionInComponents();\n\n    const itemIndex = positionInItemsOfComponent();\n\n    const manupulatedLocalComponentForTheReq =\n      localComponentItem.image.length > 0\n        ? {\n            ...localComponentItem,\n            image:\n              localComponentItem.image.length > 0\n                ? localComponentItem.image.map((img) => img.id)\n                : [],\n          }\n        : localComponentItem;\n\n    const componentItems =\n      component.items.length > 0\n        ? component.items.map((componentItem) => {\n            return {\n              ...componentItem,\n              image:\n                componentItem.image && componentItem.image.length > 0\n                  ? componentItem.image.map((imgItem) => imgItem['id'] || '')\n                  : [],\n            };\n          })\n        : [];\n\n    const updatedItems = [\n      ...component.items.slice(0, itemIndex),\n      localComponentItem,\n      ...component.items.slice(itemIndex + 1),\n    ];\n\n    console.log('updatedItemsTheDamnItems', updatedItems);\n\n    const manupulatedUpdatedItems = [\n      ...componentItems.slice(0, itemIndex),\n      manupulatedLocalComponentForTheReq,\n      ...componentItems.slice(itemIndex + 1),\n    ];\n\n    const manupulatedUpdatedItem = Object.assign(\n      {},\n      componentList[componentIndex],\n      {\n        ...component,\n        items: manupulatedUpdatedItems,\n      }\n    );\n\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\n      ...component,\n      items: updatedItems,\n    });\n\n    const updateComponentList = [\n      ...componentList.slice(0, componentIndex),\n      updatedItem,\n      ...componentList.slice(componentIndex + 1),\n    ];\n\n    const updateComponentRes = await handleUpdateComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id: component.id,\n        },\n      },\n      body: {\n        ...manupulatedUpdatedItem,\n        groupName: updatedItem.name,\n      },\n    });\n\n    // @ts-ignore\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\n      openSuccessNotification('Component Updated');\n      setComponentList(updateComponentList);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  const updateComponentByDeleting = async (id, component) => {\n    const positionInComponents = () => {\n      return componentList.map((item) => item.id).indexOf(component.id);\n    };\n\n    const positionInItemsOfComponent = () => {\n      return component.items.map((item) => item.id).indexOf(id);\n    };\n\n    const componentIndex = positionInComponents();\n\n    const itemIndex = positionInItemsOfComponent();\n\n    const updatedItems = [\n      ...component.items.slice(0, itemIndex),\n      ...component.items.slice(itemIndex + 1),\n    ];\n\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\n      ...component,\n      items: updatedItems,\n    });\n\n    const updateComponentList = [\n      ...componentList.slice(0, componentIndex),\n      updatedItem,\n      ...componentList.slice(componentIndex + 1),\n    ];\n\n    const updateComponentRes = await handleUpdateComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id: component.id,\n        },\n      },\n      body: {\n        ...updatedItem,\n        groupName: updatedItem.name,\n      },\n    });\n\n    // @ts-ignore\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\n      openSuccessNotification('Component Item deleted');\n      setComponentList(updateComponentList);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  const updateComponentByAddingItem = async (localComponentItem, id) => {\n    const positionInComponents = () => {\n      return componentList.map((item) => item.id).indexOf(id);\n    };\n\n    const componentIndex = positionInComponents();\n\n    const updatedItems = [\n      ...componentList[componentIndex].items,\n      localComponentItem,\n    ];\n\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\n      ...componentList[componentIndex],\n      items: updatedItems,\n    });\n\n    const updateComponentList = [\n      ...componentList.slice(0, componentIndex),\n      updatedItem,\n      ...componentList.slice(componentIndex + 1),\n    ];\n\n    const updateComponentRes = await handleUpdateComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id: id,\n        },\n      },\n      body: {\n        ...updatedItem,\n        groupName: updatedItem.name,\n      },\n    });\n\n    // @ts-ignore\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\n      openSuccessNotification('Component Item Added');\n      setComponentList(updateComponentList);\n      setitemVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Components</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search components..'\n              \n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setgroupVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'></div>\n\n        <div className='categoryListContainer__categoryList'>\n          {componentState.isLoading && <DataTableSkeleton />}\n\n          {componentState.done && !(componentList.length > 0) && (\n            <div\n              style={{\n                marginTop: '50px',\n              }}\n            >\n              <Empty title='No Component found' />\n            </div>\n          )}\n\n          {componentState.done && componentList.length > 0 && (\n            <div className='componentsItemContainer'>\n              {componentList.map((component) => {\n                return (\n                  <div className='componentsItemContainer-item'>\n                    <Collapse\n                      accordion={false}\n                      bordered={false}\n                      expandIconPosition='left'\n                      expandIcon={({ isActive }) => (\n                        <CaretRightOutlined rotate={isActive ? 90 : 0} />\n                      )}\n                      className='site-collapse-custom-collapse'\n                    >\n                      <Panel\n                        header={component.name}\n                        key='1'\n                        className='site-collapse-custom-panel'\n                        extra={genExtraForGroup(\n                          setitemVisible,\n                          handleDeleteComponent,\n                          component.id,\n                          setComponentId\n                        )}\n                      >\n                        <div className=' componentsItemContainer-white'>\n                          {component.items &&\n                            component.items.length > 0 &&\n                            component.items.map((item) => {\n                              return (\n                                <div className='componentsItemContainer-item-item'>\n                                  <Collapse\n                                    accordion={false}\n                                    bordered={false}\n                                    expandIconPosition='left'\n                                    expandIcon={({ isActive }) => (\n                                      <CaretRightOutlined\n                                        rotate={isActive ? 90 : 0}\n                                      />\n                                    )}\n                                    className='site-collapse-custom-collapse'\n                                  >\n                                    <Panel\n                                      header={item.title || ''}\n                                      key='1'\n                                      className='site-collapse-custom-panel'\n                                      extra={genExtra(\n                                        updateComponentByDeleting,\n                                        component,\n                                        item.id\n                                      )}\n                                    >\n                                      <ComponentListComponentItem\n                                        setComponentList={setComponentList}\n                                        componentList={componentList}\n                                        item={item}\n                                        component={component}\n                                        componentUpdate={componentUpdate}\n                                        isLoadingUpdate={\n                                          updateComponentState.isLoading\n                                        }\n                                      />\n                                    </Panel>\n                                  </Collapse>\n                                </div>\n                              );\n                            })}\n\n                          {!(component.items.length > 0) && (\n                            <Empty title='No item Found' />\n                          )}\n                        </div>\n                      </Panel>\n                    </Collapse>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewComponent\n        addNewCategoryVisible={groupVisible}\n        setAddNewCategoryVisible={setgroupVisible}\n        setComponentList={setComponentList}\n        componentList={componentList}\n      />\n      <AddNewComponentItem\n        addNewCategoryVisible={itemVisible}\n        setAddNewCategoryVisible={setitemVisible}\n        setComponentList={setComponentList}\n        componentList={componentList}\n        updateComponentByAddingItem={updateComponentByAddingItem}\n        componentId={componentId}\n      />\n\n      <Modal\n        title='Add New Group Component'\n        visible={false}\n        onOk={handleOkGroup}\n        onCancel={handleCancelGroup}\n        footer={null}\n        okText='Done'\n      >\n        <InputField label='Group Component Name' />\n      </Modal>\n    </>\n  );\n};\n\nexport default Component;\n","import React, { useState } from 'react';\n\n// import third libraries\nimport { Upload, message, notification, Modal } from 'antd';\n// import { Formik } from 'formik';\n// import * as Yup from 'yup';\nimport reqwest from 'reqwest';\n\n\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n\n// import configs\nimport config from \"../../config.json\";\n\n\nimport {\n    InboxOutlined,\n    CheckCircleOutlined,\n    LoadingOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport MediaLibrary from \"../../components/MediaLibrary\";\n\n\nconst { Dragger } = Upload;\n\n\n// const validationSchema = Yup.object().shape({\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n// });\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Brand Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n    description: '',\n    image: [],\n    url: '',\n    cover: ''\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible?: any;\n    setAddNewCategoryVisible?: any;\n    themeList?: any;\n    setThemeList?: any;\n\n}\n\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\n\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\n    const [myImages, setmyImages] = useState(false);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\n    const [fileList, setfileList] = useState([]);\n    const [uploading, setuploading] = useState(false);\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\n    const [imageUrl, setImageUrl] = useState('');\n    const [name, setname] = useState('')\n    const [thumbnailFile, setThumbnailFile] = useState('')\n\n\n\n\n\n    const handleSubmit = async () => {\n        setuploading(true);\n\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('folder', file, file.name);\n        });\n        formData.append(\"name\", name);\n        formData.append('thumbnail', thumbnailFile)\n\n\n        const addThemeRes = await handleAddthemeFetch({\n            body: formData,\n        });\n\n\n        setuploading(false);\n        // @ts-ignore\n        if (addThemeRes && addThemeRes.status === 'ok') {\n\n            setThemeList([...themeList, {\n                id: addThemeRes['_id'] || '',\n                key: addThemeRes['_id'] || '',\n                name: addThemeRes['name'] || '',\n                thumbnail: addThemeRes['thumbnail'] || '',\n                path: addThemeRes['path'] || '',\n                added: addThemeRes['added'] || '',\n                // @ts-ignore\n                ...addThemeRes\n            }]);\n\n            setfileList([]);\n            setuploading(false);\n            openSuccessNotification('Theme Uploaded!')\n            setAddNewCategoryVisible(false);\n            setname('');\n            setselectedThemeTypeValue('');\n\n\n\n\n            setAddNewCategoryVisible(false);\n        }\n        else {\n            openErrorNotification('Theme upload failed, Something went wrong');\n        }\n\n    };\n\n\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = () => {\n        if (addThemeState.isLoading) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        // @ts-ignore\n        else setmyThumbnailImage([]);\n    }\n\n\n    const onChangeThemeType = (value) => {\n        setselectedThemeTypeValue(value);\n    }\n\n\n\n    const uploadProps = {\n        //  listType: 'picture',\n        onRemove: file => {\n            setfileList(filelist => {\n                const index = fileList.indexOf(file);\n                const newFileList = fileList.slice();\n                newFileList.splice(index, 1);\n                return newFileList;\n            })\n\n        },\n        beforeUpload: file => {\n            setfileList(filelist => {\n                return [...fileList, file]\n            })\n            return false;\n        },\n        fileList,\n    };\n\n    const handleUpload = async () => {\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('folder', file, file.name);\n        });\n        formData.append(\"name\", name);\n        formData.append('thumbnail', imageUrl)\n\n        setuploading(true);\n\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\n        // \tbody: formData\n        //   });\n\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\n\n\n\n\n\n\n\n        // You can use any AJAX library you like\n        reqwest({\n            url: `${config.baseURL}/admin/theme/add`,\n            method: 'post',\n            processData: false,\n            data: formData,\n            withCredentials: true,\n            success: () => {\n                setfileList([]);\n                setuploading(false);\n                openSuccessNotification('Theme Uploaded!')\n                setAddNewCategoryVisible(false);\n                setname('');\n                setselectedThemeTypeValue('');\n                setThemeList([...themeList, {\n\n                }])\n                // setThemeList([...themeList, {\n                //     id: addCategoryRes['id'] || '',\n                //     key: addCategoryRes['id'] || '',\n                //     name: addCategoryRes['name'] || '',\n                //     description: addCategoryRes['description'] || '',\n                //     // @ts-ignore\n                //     ...addCategoryRes\n                // }])\n            },\n            error: () => {\n                setuploading(false);\n                openErrorNotification('Theme Upload failed!')\n                message.error('upload failed.');\n            },\n        });\n    };\n\n\n    function getBase64(img, callback) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n\n\n        getBase64(file, imageUrl => {\n            setImageUrl(imageUrl)\n            setThumbnailFile(file);\n            setLoadingThumbnail(false)\n        })\n\n        return false;\n    }\n\n\n\n    const uploadButton = (\n        <div>\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n            <div className=\"ant-upload-text\">Upload</div>\n        </div>\n    );\n\n    return (\n        <>\n            <Modal\n                style={{\n                    top: '40px'\n                }}\n                title=\"Add New Theme\"\n                visible={addNewCategoryVisible}\n                onOk={handleSubmit}\n                onCancel={handleCancel}\n                okText='Upload Theme'\n                okButtonProps={{\n                    loading: uploading,\n                    htmlType: \"submit\",\n                    disabled: getisSubmitButtonDisabled()\n                }}\n\n                bodyStyle={{\n                    margin: '0',\n                    padding: '10px'\n                }}\n            >\n\n                <Input\n                    label='Name'\n                    value={name}\n                    name='name'\n                    onChange={(e: any) => setname(e.target.value)}\n                    isError={addThemeState.error['error']['name']}\n\n                    errorString={addThemeState.error['error']['name']}\n                />\n\n                <div style={{\n                    marginTop: '20px'\n                }}></div>\n\n\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\n                <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    beforeUpload={beforeUpload}\n                    multiple={false}\n                >\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                </Upload>\n\n\n\n                <div style={{\n                    marginTop: '3px'\n                }}></div>\n                <h3 className='inputFieldLabel'>\n                    Theme Folder (.zip)\n\t\t\t\t\t\t\t\t\t</h3>\n\n\n                <Dragger\n                    multiple={false}\n                    className='upload-list-inline'\n                    listType='picture'\n                    style={{\n                        background: '#fff'\n                    }}\n                    {...uploadProps}\n                >\n                    <p className='ant-upload-drag-icon'>\n                        <InboxOutlined />\n                    </p>\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\n                    <p className='ant-upload-hint'>\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\n                        other band files\n\t\t\t\t\t\t\t</p>\n                </Dragger>\n\n                {addThemeState.error['error']['folder'] && (\n                    <p style={{\n                        color: 'rgba(255, 0, 0, 0.507)'\n                    }}>{addThemeState.error['error']['folder']}</p>\n                )}\n\n\n\n\n\n            </Modal>\n\n            <MediaLibrary\n                setvisible={setvisibleMedia}\n                visible={visibleMedia}\n                setmyImages={setmyImages}\n                isModalOpenForImages={false}\n                setmyThumbnailImage={setmyThumbnailImage}\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\n                myThumbnailImage={myThumbnailImage}\n            />\n        </>\n    );\n};\n\nexport default AddNewBrand;\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  notification,\n  Popconfirm,\n  Badge,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckOutlined,\n  CheckCircleOutlined,\n  CheckCircleTwoTone,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewTheme from './AddNewTheme';\n\nimport Empty from '../../components/Empty';\n\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CustomerList = ({ history }: Props) => {\n  const [themeList, setThemeList] = useState([]);\n\n  const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\n  const [activeThemeState, handleActiveThemeFetch] = useHandleFetch(\n    {},\n    'activeTheme'\n  );\n  const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch(\n    {},\n    'deletetheme'\n  );\n\n  useEffect(() => {\n    const setThemes = async () => {\n      const themes = await handleThemeListFetch({});\n      // @ts-ignore\n      setThemeList(themes);\n    };\n    setThemes();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSearch = (value) => {\n    if (themeState.data.length > 0) {\n      const newThemeList = themeState.data.filter((item) =>\n        item.name.includes(value)\n      );\n      setThemeList(newThemeList);\n    }\n  };\n\n  const handleActiveTheme = async (id) => {\n    const activeThemeRes = await handleActiveThemeFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (activeThemeRes && activeThemeRes.status === 'ok') {\n      openSuccessNotification('Theme activated');\n    } else {\n      openErrorNotification(\n        \"Couldn't activate the theme, Something went wrong\"\n      );\n    }\n  };\n\n  const handleDeleteTheme = async (id) => {\n    const deleteThemeRes = await handleDeleteThemeFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteThemeRes && deleteThemeRes.status === 'ok') {\n      openSuccessNotification('Theme Deleted');\n      const newThemeList = themeList.filter((item) => item.id !== id);\n      setThemeList(newThemeList);\n    } else {\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\n    }\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Themes</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search themes..'\n              onSearch={(value) => handleSearch(value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'></div>\n\n        <div className='categoryListContainer__categoryList'>\n          {themeState.done && themeList.length > 0 && (\n            <div className='categoryListContainer__bodyContainerList'>\n              {themeList.map((theme) => {\n                return (\n                  <div className='categoryListContainer__bodyContainerList-item'>\n                    {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\n               \n                  </Badge> */}\n                    <div className='categoryListContainer__bodyContainerList-item-top'>\n                      <img alt='theme img' src={theme.thumbnail} />\n                    </div>\n                    <div className='categoryListContainer__bodyContainerList-item-body'>\n                      <h3> {theme.name} </h3>\n\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <Tooltip placement='top' title='Active this theme'>\n                          <Button\n                            size='small'\n                            className='btnPrimaryClassNameoutline'\n                            icon={<CheckOutlined />}\n                            onClick={() => handleActiveTheme(theme.id)}\n                          >\n                            <span\n                              style={{\n                                fontSize: '11px',\n                              }}\n                            >\n                              Set Active\n                            </span>\n                          </Button>\n                        </Tooltip>\n\n                        <Tooltip placement='top' title='Delete theme'>\n                          <Popconfirm\n                            onConfirm={() => handleDeleteTheme(theme.id)}\n                            title='Are you sure？'\n                            okText='Yes'\n                            cancelText='No'\n                          >\n                            <Button\n                              size='small'\n                              type='link'\n                              danger={true}\n                              icon={<DeleteOutlined />}\n                            ></Button>\n                          </Popconfirm>\n                        </Tooltip>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n\n          {themeState.isLoading && <DataTableSkeleton />}\n\n          {themeState.done && !(themeList.length > 0) && (\n            <Empty title='No Theme found' />\n          )}\n        </div>\n      </div>\n\n      {themeState.done && (\n        <AddNewTheme\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          themeList={themeState.data}\n          setThemeList={setThemeList}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CustomerList);\n","import React from 'react'\n\ninterface Props {\n    \n}\n\nconst Image = (props: Props) => {\n    return (\n        <div>\n            Image\n        </div>\n    )\n}\n\nexport default Image\n","import React from 'react';\n\ninterface Props {}\n\nconst Invoice = (props: Props) => {\n\treturn <div>Invoice</div>;\n};\n\nexport default Invoice;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport { CheckCircleOutlined } from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().label('Title').required('Site title can not be empty'),\n  adminEmail: Yup.string()\n    .label('Admin Email')\n    .required('Admin Email can not be empty'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Site Info Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  title: '',\n  adminName: '',\n  adminEmail: '',\n  adminPhone: '',\n};\n\ninterface Props {}\n\nconst UpdateSiteinfo = ({}: Props) => {\n  const [\n    UpdateSiteSettingsState,\n    handleUpdateSiteSettingsFetch,\n  ] = useHandleFetch({}, 'updateSiteSettings');\n  const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch(\n    {},\n    'siteSettings'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const siteSettingsRes = await handlSiteSettingsFetch({});\n\n      // console.log('siteSettingsRes', siteSettingsRes)\n    };\n    getSiteSettings();\n  }, [UpdateSiteSettingsState]);\n\n  // console.log('siteSettingsState', siteSettingsState);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\n      body: {\n        title: values.title,\n        adminName: values.adminName,\n        adminEmail: values.adminEmail,\n        adminPhone: values.adminPhone,\n      },\n    });\n\n    // @ts-ignore\n    if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\n      openSuccessNotification();\n\n      // setBrandList([...brandList, {\n      //     id: addBrandRes['id'] || '',\n      //     key: addBrandRes['id'] || '',\n      //     name: addBrandRes['name'] || '',\n      //     description: addBrandRes['description'] || '',\n      //     // @ts-ignore\n      //     ...addBrandRes\n      // }]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.title || !values.adminEmail || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const getInitialValues = () => {\n    if (\n      siteSettingsState.data &&\n      Object.keys(siteSettingsState.data).length > 0\n    ) {\n      return { ...siteSettingsState.data };\n    } else {\n      return initialValues;\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      enableReinitialize={true}\n      initialValues={getInitialValues()}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='siteInfoContainer__item'>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Admin Title'\n                value={values.title}\n                name='title'\n                isError={\n                  (touched.title && errors.title) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['title'])\n                }\n                errorString={\n                  (touched.title && errors.title) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['title'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('title');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Admin Name'\n                value={values.adminName}\n                name='adminName'\n                isError={\n                  (touched.adminName && errors.adminName) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminName'])\n                }\n                errorString={\n                  (touched.adminName && errors.adminName) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminName'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('adminName');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item-left'>\n              <Input\n                label='Admin phone'\n                value={values.adminPhone}\n                name='adminPhone'\n                isError={\n                  (touched.adminPhone && errors.adminPhone) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\n                }\n                errorString={\n                  (touched.adminPhone && errors.adminPhone) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('adminPhone');\n                }}\n              />\n            </div>\n\n            <div\n              className='siteInfoContainer__item-item'\n              style={{\n                marginLeft: '15px',\n              }}\n            >\n              <Input\n                label='Admin Email'\n                value={values.adminEmail}\n                name='adminEmail'\n                isError={\n                  (touched.adminEmail && errors.adminEmail) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\n                }\n                errorString={\n                  (touched.adminEmail && errors.adminEmail) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('adminEmail');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={isSubmitting}\n            disabled={getisSubmitButtonDisabled(values, isValid)}\n            className='btnPrimaryClassNameoutline'\n          >\n            Update Admin Info\n          </Button>\n\n          <div\n            style={{\n              marginBottom: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateSiteinfo;\n//\n","import React, { useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\n// import MediaLibrary from \"../../components/MediaLibrary\";\n\nconst validationSchema = Yup.object().shape({\n  invoiceTitle: Yup.string()\n    .label('Title')\n    .required('Invoice title is required'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Site Invoice Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  invoiceTitle: '',\n  address: '',\n  phone: '',\n  email: '',\n  additionalText: '',\n};\n\ninterface Props {}\n\nconst UpdateSiteinfo = ({}: Props) => {\n  const [\n    updateInfovSettingsState,\n    handleUpdateInvoiceSettingsFetch,\n  ] = useHandleFetch({}, 'updateInvoiceSettings');\n  const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\n    {},\n    'invoiceSettingsDetail'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\n\n      // console.log('siteSettingsRes', siteSettingsRes)\n    };\n    getSiteSettings();\n  }, [updateInfovSettingsState]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\n      body: {\n        invoiceTitle: values.invoiceTitle,\n        address: values.address,\n        phone: values.phone,\n        email: values.email,\n        additionalText: values.additionalText,\n      },\n    });\n\n    // @ts-ignore\n    if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\n      openSuccessNotification();\n\n      // setBrandList([...brandList, {\n      //     id: addBrandRes['id'] || '',\n      //     key: addBrandRes['id'] || '',\n      //     name: addBrandRes['name'] || '',\n      //     description: addBrandRes['description'] || '',\n      //     // @ts-ignore\n      //     ...addBrandRes\n      // }]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.invoiceTitle || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const getInitialValues = () => {\n    if (\n      InvoiceSettingsState.data &&\n      Object.keys(InvoiceSettingsState.data).length > 0\n    ) {\n      return { ...InvoiceSettingsState.data };\n    } else {\n      return initialValues;\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      enableReinitialize={true}\n      initialValues={getInitialValues()}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='siteInfoContainer__item'>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Company Name'\n                value={values.invoiceTitle}\n                name='invoiceTitle'\n                isError={\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\n                }\n                errorString={\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('invoiceTitle');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Phone Number'\n                value={values.phone}\n                name='phone'\n                isError={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['phone'])\n                }\n                errorString={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['phone'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('phone');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Email'\n                value={values.email}\n                name='email'\n                isError={\n                  (touched.email && errors.email) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['email'])\n                }\n                errorString={\n                  (touched.email && errors.email) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['email'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('email');\n                }}\n              />\n            </div>\n\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Additional Text'\n                value={values.additionalText}\n                name='additionalText'\n                isError={\n                  (touched.additionalText && errors.additionalText) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['additionalText'])\n                }\n                errorString={\n                  (touched.additionalText && errors.additionalText) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['additionalText'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('additionalText');\n                }}\n              />\n            </div>\n\n            <div className='siteInfoContainer__item-item-left'>\n              <TextArea\n                label='Address'\n                value={values.address}\n                name='address'\n                isError={\n                  (touched.address && errors.address) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['address'])\n                }\n                errorString={\n                  (touched.address && errors.address) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['address'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={isSubmitting}\n            disabled={getisSubmitButtonDisabled(values, isValid)}\n            className='btnPrimaryClassNameoutline'\n          >\n            Update Invoice Info\n          </Button>\n\n          <div\n            style={{\n              marginBottom: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateSiteinfo;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().label('Title').required('Site title can not be empty'),\n  adminEmail: Yup.string()\n    .label('Admin Email')\n    .required('Admin Email can not be empty'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Site Info Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  metaTitle: '',\n  metaTags: '',\n  metaDescription: '',\n  injectHTML: '',\n};\n\ninterface Props {}\n\nconst UpdateSiteSEO = ({}: Props) => {\n  const [\n    UpdateSiteSettingsState,\n    handleUpdateSiteSettingsFetch,\n  ] = useHandleFetch({}, 'updateSiteSEO');\n  const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch(\n    {},\n    'getSiteSEO'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const siteSettingsRes = await handlSiteSettingsFetch({});\n    };\n    getSiteSettings();\n  }, [UpdateSiteSettingsState]);\n\n  // console.log('siteSettingsState', siteSettingsState);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\n      body: {\n        metaTitle: values.metaTitle,\n        metaTags: values.metaTags,\n        metaDescription: values.metaDescription,\n        injectHTML: values.injectHTML\n      },\n    });\n\n    // @ts-ignore\n    if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\n      openSuccessNotification();\n\n      // setBrandList([...brandList, {\n      //     id: addBrandRes['id'] || '',\n      //     key: addBrandRes['id'] || '',\n      //     name: addBrandRes['name'] || '',\n      //     description: addBrandRes['description'] || '',\n      //     // @ts-ignore\n      //     ...addBrandRes\n      // }]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.metaTitle || !values.metaTags || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const getInitialValues = () => {\n    if (\n      siteSettingsState.data &&\n      Object.keys(siteSettingsState.data).length > 0\n    ) {\n      return { ...siteSettingsState.data };\n    } else {\n      return initialValues;\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      enableReinitialize={true}\n      initialValues={getInitialValues()}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='siteInfoContainer__item'>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Meta Title'\n                value={values.metaTitle}\n                name='metaTitle'\n                isError={\n                  (touched.metaTitle && errors.metaTitle) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTitle'])\n                }\n                errorString={\n                  (touched.metaTitle && errors.metaTitle) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTitle'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('metaTitle');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Meta Tags'\n                value={values.metaTags}\n                name='metaTags'\n                isError={\n                  (touched.metaTags && errors.metaTags) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTags'])\n                }\n                errorString={\n                  (touched.metaTags && errors.metaTags) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTags'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('metaTags');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item-left'>\n              <TextArea\n                label='Meta Description'\n                value={values.metaDescription}\n                name='metaDescription'\n                isError={\n                  (touched.metaDescription && errors.metaDescription) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaDescription'])\n                }\n                errorString={\n                  (touched.metaDescription && errors.metaDescription) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaDescription'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('metaDescription');\n                }}\n              />\n            </div>\n\n     \n\n          </div>\n\n          <div \n              className='siteInfoContainer__item-item'>\n              <TextArea\n                rows={8}\n                label='Inject HTML ( Inside <head></head> Tag )'\n                value={values.injectHTML}\n                name='injectHTML'\n                isError={\n                  (touched.injectHTML && errors.injectHTML) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['injectHTML'])\n                }\n                errorString={\n                  (touched.injectHTML && errors.injectHTML) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['injectHTML'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('injectHTML');\n                }}\n              />\n            </div>\n\n\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={isSubmitting}\n            // disabled={getisSubmitButtonDisabled(values, isValid)}\n            className='btnPrimaryClassNameoutline'\n          >\n            Update\n          </Button>\n\n          <div\n            style={{\n              marginBottom: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateSiteSEO;\n//\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport {\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\n\n\n\nconst validationSchema = Yup.object().shape({\n    newPassword: Yup.string()\n    .label('New Password')\n    .required()\n    .min(6, 'New Password must have at least 6 characters'),\n  newPassword2: Yup.string()\n    .label('Confirm New password')\n    .required()\n    .min(6, 'Confirm New password must have at least 6 characters')\n    .oneOf(\n      [Yup.ref('newPassword'), null],\n      'Confirm new password must match to new password'\n    ),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Site Info Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n    phone: '',\n    email: '',\n    newPass: '',\n    password:'',\n    newPassword: '',\n    newPassword2: '',\n}\n\n\n\ninterface Props {\n\n\n}\n\nconst ChangeAdminPassword = ({ }: Props) => {\n\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateAdminCredential');\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getAdminCredential');\n\n\n\n    useEffect(() => {\n        const getSiteSettings = async () => {\n            const siteSettingsRes = await handlSiteSettingsFetch({});\n\n        }\n        getSiteSettings();\n    }, [UpdateSiteSettingsState]);\n\n\n\n    console.log('siteSettingsState',siteSettingsState)\n\n    // console.log('siteSettingsState', siteSettingsState);\n\n    const handleSubmit = async (values: any, actions: any) => {\n\n\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\n            body: {\n                name: values.name,\n                phone: values.phone,\n                email: values.email,\n                password: values.password, \n                newPass: values.newPassword,\n                newPassRepeat: values.newPassword2,\n            },\n        });\n\n        // @ts-ignore\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\n            openSuccessNotification();\n\n\n            // setBrandList([...brandList, {\n            //     id: addBrandRes['id'] || '',\n            //     key: addBrandRes['id'] || '',\n            //     name: addBrandRes['name'] || '',\n            //     description: addBrandRes['description'] || '',\n            //     // @ts-ignore\n            //     ...addBrandRes\n            // }]);\n\n            actions.resetForm();\n        }\n        else {\n            openErrorNotification();\n        }\n\n\n\n\n        actions.setSubmitting(false);\n\n    };\n\n\n\n\n    const getInitialValues = () => {\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\n            return { ...siteSettingsState.data }\n        }\n        else {\n            return initialValues\n        }\n    }\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            enableReinitialize={true}\n            initialValues={\n                getInitialValues()\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n\n                        <div className='siteInfoContainer__item'>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='text'\n                                    label='Name'\n                                    value={values.name}\n                                    name='name'\n                                    isError={(touched.name && errors.name) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\n\n                                    errorString={(touched.name && errors.name) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('name');\n                                    }}\n                                />\n                            </div>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='text'\n                                    label='Phone'\n                                    value={values.phone}\n                                    name='phone'\n                                    isError={(touched.phone && errors.phone) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\n\n                                    errorString={(touched.phone && errors.phone) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('phone');\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n                        <div style={{\n                            width: '90%',\n                            paddingRight: '30px'\n                        }}>\n                                     <Input\n                                    type='text'\n                                    label='Email'\n                                    value={values.email}\n                                    name='email'\n                                    isError={(touched.email && errors.email) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\n\n                                    errorString={(touched.email && errors.email) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('email');\n                                    }}\n                                />\n                        </div>\n\n\n                        <div style={{\n                            width: '90%',\n                            paddingRight: '30px'\n                        }}>\n                                    <Input\n                                    type='password'\n                                    label='Password (Enter current password to update credentials)'\n                                    value={values.password}\n                                    name='password'\n                                    isError={(touched.password && errors.password) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\n\n                                    errorString={(touched.password && errors.password) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('password');\n                                    }}\n                                />\n                        </div>\n\n\n                        <div className='siteInfoContainer__item'>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='password'\n                                    label='New Password'\n                                    value={values.newPassword}\n                                    name='newPassword'\n                                    isError={(touched.newPassword && errors.newPassword) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\n\n                                    errorString={(touched.newPassword && errors.newPassword) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('newPassword');\n                                    }}\n                                />\n                            </div>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='password'\n                                    label='Confirm New Password'\n                                    value={values.newPassword2}\n                                    name='newPassword2'\n                                    isError={(touched.newPassword2 && errors.newPassword2) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\n\n                                    errorString={(touched.newPassword2 && errors.newPassword2) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('newPassword2');\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n\n                        <div style={{\n                            marginTop: '10px'\n                        }}></div>\n\n                        <Button\n\n                            onClick={(e: any) => handleSubmit(e)}\n                            loading={isSubmitting}\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\n                            className='btnPrimaryClassNameoutline'\n                        >\n                          Update Credentials\n                            </Button>\n\n                        <div style={{\n                            marginBottom: '10px'\n                        }}></div>\n\n                    </>\n                )}\n        </Formik >\n\n\n\n\n    );\n};\n\nexport default ChangeAdminPassword;\n//","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  CheckOutlined,\n  CloseOutlined,\n  LoadingOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport AdminSiteInfo from './AdminSiteInfo';\nimport SiteInfoInvoice from './SiteInfoInvoice';\nimport SiteSeo from './SiteSeo';\nimport ChangeAdminPassword from './ChangeAdminPassword';\n\n// import config\nimport config from '../../config.json';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  brandList?: any;\n  setBrandList?: any;\n}\n\nconst SiteInfo = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  brandList,\n  setBrandList,\n}: Props) => {\n  const [\n    updateSiteLogoAndIcon,\n    handleUpdateSiteLogoAndIconFetch,\n  ] = useHandleFetch({}, 'updateSiteLogoAndIcon', 'form');\n\n  const [imageUrl, setImageUrl] = useState(`${config.baseURL}/images/logo.png`);\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n\n  const [iconimageUrl, setIconImageUrl] = useState(\n    `${config.baseURL}/favicon.ico`\n  );\n  const [loadingIcon, setloadingIcon] = useState(false);\n\n  const [appLogo, setAppLogo] = useState(\n    `${config.baseURL}/images/logo-app.png`\n  );\n  const [loadingAppLogo, setloadingAppLogo] = useState(false);\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('logo', file);\n\n        const res = await handleUpdateSiteLogoAndIconFetch({\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Site Logo updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update site Logo, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n  function beforeIconUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setIconImageUrl(imageUrl);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('icon', file);\n\n        const res = await handleUpdateSiteLogoAndIconFetch({\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Site Icon updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update site icon, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setloadingIcon(false);\n    });\n\n    return false;\n  }\n\n  function beforeAppIconUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setAppLogo(imageUrl);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('logoApp', file);\n\n        const res = await handleUpdateSiteLogoAndIconFetch({\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('App logo updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update App logo, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setloadingAppLogo(false);\n    });\n\n    return false;\n  }\n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  const iconUploadButton = (\n    <div>\n      {loadingIcon ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  const appIconUploadButton = (\n    <div>\n      {loadingAppLogo ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className='siteInfoContainer'>\n        <Tabs defaultActiveKey='1'>\n          <TabPane tab='Site Info' key='1'>\n            <AdminSiteInfo />\n          </TabPane>\n          <TabPane tab='Site logo' key='2'>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                marginTop: '15px',\n              }}\n            >\n              <div\n                style={{\n                  marginRight: '40px',\n                }}\n              >\n                <div className='addproductSection-left-header'>\n                  <h3 className='inputFieldLabel'> Logo </h3>\n                  <Tooltip placement='left' title={'Update Site Logo image'}>\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <Upload\n                  style={{\n                    borderRadius: '8px',\n                  }}\n                  name='avatar'\n                  listType='picture-card'\n                  className='avatar-uploader'\n                  showUploadList={false}\n                  beforeUpload={beforeUpload}\n                  multiple={false}\n                >\n                  {imageUrl ? (\n                    <img\n                      onError={() => setImageUrl('')}\n                      src={imageUrl}\n                      alt='avatar'\n                      style={{ width: '100%' }}\n                    />\n                  ) : (\n                    uploadButton\n                  )}\n                </Upload>\n              </div>\n\n              <div\n                style={{\n                  marginRight: '40px',\n                }}\n              >\n                <div className='addproductSection-left-header'>\n                  <h3 className='inputFieldLabel'> Icon </h3>\n                  <Tooltip placement='left' title={'Update Icon image'}>\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <Upload\n                  style={{\n                    borderRadius: '8px',\n                  }}\n                  name='avatar'\n                  listType='picture-card'\n                  className='avatar-uploader'\n                  showUploadList={false}\n                  beforeUpload={beforeIconUpload}\n                  multiple={false}\n                >\n                  {iconimageUrl ? (\n                    <img\n                      onError={() => setIconImageUrl('')}\n                      src={iconimageUrl}\n                      alt='avatar'\n                      style={{ width: '100%' }}\n                    />\n                  ) : (\n                    iconUploadButton\n                  )}\n                </Upload>\n              </div>\n\n              <div\n                style={{\n                  marginRight: '20px',\n                }}\n              >\n                <div className='addproductSection-left-header'>\n                  <h3 className='inputFieldLabel'> App Logo </h3>\n                  <Tooltip placement='left' title={'Update App logo image'}>\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <Upload\n                  style={{\n                    borderRadius: '8px',\n                  }}\n                  name='avatar'\n                  listType='picture-card'\n                  className='avatar-uploader'\n                  showUploadList={false}\n                  beforeUpload={beforeAppIconUpload}\n                  multiple={false}\n                >\n                  {appLogo ? (\n                    <img\n                      onError={() => setAppLogo('')}\n                      src={appLogo}\n                      alt='avatar'\n                      style={{ width: '100%' }}\n                    />\n                  ) : (\n                    appIconUploadButton\n                  )}\n                </Upload>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginBottom: '10px',\n              }}\n            ></div>\n          </TabPane>\n\n          <TabPane tab='Site SEO' key='3'>\n            <SiteSeo />\n          </TabPane>\n\n          <TabPane tab='Invoice Information' key='4'>\n            <SiteInfoInvoice />\n          </TabPane>\n\n          <TabPane tab='Change Credentials' key='5'>\n            <ChangeAdminPassword />\n          </TabPane>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default SiteInfo;\n","import React, { useState } from 'react';\nimport { Checkbox, Row, Col, Input } from 'antd';\ninterface Props {\n  checkedList?: any;\n  setCheckedList?: any;\n  plainOptions?: any;\n  defaultValue?: any;\n  checkAll?: any;\n  setCheckAll?: any;\n  setPlainOptions?: any;\n  cityListState?: any;\n}\n\nconst { Search } = Input;\n\nconst AccessCheckbox = ({\n  checkedList,\n  setCheckedList,\n  plainOptions,\n  defaultValue = [],\n  checkAll,\n  setCheckAll,\n  cityListState,\n  setPlainOptions,\n}: Props) => {\n  const [interminate, setInterminate] = useState(true);\n  const [searchValue, setsearchValue] = useState('');\n\n  const onChange = (checkedList) => {\n    setCheckedList(checkedList);\n    setInterminate(\n      !!checkedList.length && checkedList.length < plainOptions.length\n    );\n    setCheckAll(checkedList.length === plainOptions.length);\n  };\n\n  const onCheckAllChange = (e) => {\n    const checkedCities =\n      plainOptions && plainOptions.length > 0\n        ? plainOptions.map((city) => {\n            return city.value;\n          })\n        : [];\n    setCheckedList(e.target.checked ? checkedCities : []);\n    setInterminate(false);\n    console.log('e.target.checked', e.target.checked);\n    setCheckAll(e.target.checked);\n  };\n\n  console.log('defaultValue', defaultValue);\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (cityListState.data && cityListState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = cityListState.data.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setPlainOptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        plainOptions.length > 0\n          ? plainOptions.filter((option) => {\n              return (\n                option &&\n                option.name.toLowerCase().includes(searchValue.toLowerCase())\n              );\n            })\n          : [];\n\n      setPlainOptions(newOptions);\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          borderBottom: '1px solid #eee',\n          marginBottom: '10px',\n        }}\n        className='site-checkbox-all-wrapper'\n      >\n        <Checkbox\n          style={{\n            marginBottom: '10px',\n          }}\n          // indeterminate={interminate}\n          onChange={onCheckAllChange}\n          checked={checkAll}\n        >\n          Select all\n        </Checkbox>\n\n        <Search\n          width={'100%'}\n          style={{\n            height: '30px',\n            borderRadius: '3px !important',\n            borderColor: '#eee !important',\n            margin: '10px 0',\n          }}\n          size='middle'\n          placeholder=''\n          onSearch={(value) => console.log(value)}\n          onChange={onSearchChange}\n        />\n        <div\n          style={{\n            marginBottom: '10px',\n          }}\n        ></div>\n      </div>\n      <Checkbox.Group\n        style={{ width: '100%' }}\n        value={checkedList}\n        defaultValue={defaultValue}\n        onChange={onChange}\n      >\n        <Row>\n          {plainOptions.map((accessItem) => {\n            return (\n              <Col\n                style={{\n                  marginBottom: '10px',\n                }}\n                span={8}\n              >\n                <Checkbox value={accessItem.value}>{accessItem.value}</Checkbox>\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nexport default AccessCheckbox;\n","import React, { useState, useEffect } from 'react';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\n\ninterface Props {\n  setdeliveryChargeList: any;\n  deliveryChargeList: any;\n  deliveryChargeItem: any;\n}\n\nconst DeliveryCharge = ({\n  deliveryChargeItem,\n  setdeliveryChargeList,\n  deliveryChargeList,\n}: Props) => {\n  const handleDeliveryChargeChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    const updatedValue = {\n      ...deliveryChargeItem,\n      [name]: value,\n      id: deliveryChargeItem.id,\n    };\n\n    const positionInAttribute = () => {\n      return deliveryChargeList\n        .map((item) => item.id)\n        .indexOf(deliveryChargeItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...deliveryChargeList.slice(0, index),\n      updatedValue,\n      ...deliveryChargeList.slice(index + 1),\n    ];\n    setdeliveryChargeList(updateAttributeList);\n  };\n\n  const handleAttributeDelete = () => {\n    console.log('delete---deliveryChargeItem', deliveryChargeItem);\n    console.log('delete-----deliveryChargeList', deliveryChargeList);\n\n    const positionInAttribute = () => {\n      return deliveryChargeList\n        .map((item) => item.id)\n        .indexOf(deliveryChargeItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...deliveryChargeList.slice(0, index),\n      ...deliveryChargeList.slice(index + 1),\n    ];\n    setdeliveryChargeList([...updateAttributeList]);\n\n    console.log('updated-----deliveryChargeList', updateAttributeList);\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n      }}\n    >\n      <div\n        style={{\n          width: '45%',\n          marginRight: '10px',\n        }}\n      >\n        <Input\n          min={0}\n          type='number'\n          addonBefore='Minimum Order'\n          value={deliveryChargeItem.minimumOrder}\n          name='minimumOrder'\n          onChange={handleDeliveryChargeChange}\n        />\n      </div>\n      <div\n        style={{\n          width: '45%',\n          marginRight: '10px',\n        }}\n      >\n        <Input\n          min={0}\n          type='number'\n          addonBefore='Charge'\n          value={deliveryChargeItem.charge}\n          name='charge'\n          onChange={handleDeliveryChargeChange}\n        />\n      </div>\n      <div\n        onClick={() => handleAttributeDelete()}\n        style={{\n          width: '5%',\n          marginBottom: '15px',\n          fontSize: '13px',\n          cursor: 'pointer',\n        }}\n      >\n        <CloseOutlined />\n      </div>\n    </div>\n  );\n};\n\nexport default DeliveryCharge;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport Empty from '../../components/Empty';\n\n// /\nimport CitySelectForDeliveryRegion from './CitySelectForDeliveryRegion';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Form,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DeliveryCharge from './DeliveryCharge';\n\nconst { Option } = Select;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Region Added',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  name: '',\n  pickUpLocation: '',\n  time: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  regionList?: any;\n  setRegionList?: any;\n}\n\nconst AddNewRegion = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  regionList,\n  setRegionList,\n}: Props) => {\n  const [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const [deliveryChargeList, setdeliveryChargeList] = useState([\n    {\n      minimumOrder: '',\n      charge: '',\n      id: `${Math.floor(100000 + Math.random() * 900000)}`,\n    },\n  ]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // console.log('selectedCityValue', selectedCityValue)\n\n    if (deliveryChargeList.length > 0) {\n      const charge = {};\n\n      for (let item of deliveryChargeList) {\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\n          charge[item['minimumOrder']] = item['charge'];\n        }\n      }\n\n      const addRegionRes = await handleRegionFetch({\n        body: {\n          name: values.name,\n          pickUpLocation: values.pickUpLocation,\n          time: values.time,\n          country: selectedCountryValue,\n          city: accesscheckedList,\n          charge,\n        },\n      });\n\n      // @ts-ignore\n      if (addRegionRes && addRegionRes.status === 'ok') {\n        openSuccessNotification();\n\n        setRegionList([\n          {\n            id: addRegionRes['_id'] || '',\n            key: addRegionRes['_id'] || '',\n            name: addRegionRes['name'] || '',\n            // @ts-ignore\n            ...addRegionRes,\n          },\n          ...regionList,\n        ]);\n        setAddNewCategoryVisible(false);\n        actions.resetForm();\n      } else {\n        openErrorNotification();\n      }\n    } else {\n      const addRegionRes = await handleRegionFetch({\n        body: {\n          name: values.name,\n          pickUpLocation: values.pickUpLocation,\n          time: values.time,\n          country: selectedCountryValue,\n          city: selectedCityValue,\n          charge: {},\n        },\n      });\n\n      // @ts-ignore\n      if (addRegionRes && addRegionRes.status === 'ok') {\n        openSuccessNotification();\n\n        setRegionList([\n          ...regionList,\n          {\n            id: addRegionRes['id'] || '',\n            key: addRegionRes['id'] || '',\n            name: addRegionRes['name'] || '',\n            // @ts-ignore\n            ...addRegionRes,\n          },\n        ]);\n        setAddNewCategoryVisible(false);\n        actions.resetForm();\n      } else {\n        openErrorNotification();\n      }\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  useEffect(() => {\n    if (!addRegionState['isLoading']) {\n      const error = addRegionState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addRegionState['isLoading'] &&\n      Object.keys(addRegionState.data).length > 0\n    ) {\n      if (addRegionState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addRegionState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('region----deliveryChargeList', deliveryChargeList);\n\n  const handleAddDeliveryCharge = () => {\n    setdeliveryChargeList([\n      ...deliveryChargeList,\n      {\n        minimumOrder: '',\n        charge: '',\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\n      },\n    ]);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Region'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addRegionState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addRegionState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Pick up Location'\n                  value={values.pickUpLocation}\n                  name='pickUpLocation'\n                  isError={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      addRegionState.error['error']['pickUpLocation'])\n                  }\n                  errorString={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      addRegionState.error['error']['pickUpLocation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('pickUpLocation');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Time'\n                value={values.time}\n                name='time'\n                isError={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && addRegionState.error['error']['time'])\n                }\n                errorString={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && addRegionState.error['error']['time'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('time');\n                }}\n              />\n            </div>\n\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\n\n            <Form.Item\n              validateStatus={\n                addRegionState.error['error']['charge'] ? 'error' : ''\n              }\n              help={addRegionState.error['error']['charge']}\n            >\n              {deliveryChargeList.map((deliveryChargeItem) => {\n                console.log('deliveryChargeItem-region', deliveryChargeItem);\n                return (\n                  <DeliveryCharge\n                    deliveryChargeItem={deliveryChargeItem}\n                    deliveryChargeList={deliveryChargeList}\n                    setdeliveryChargeList={setdeliveryChargeList}\n                  />\n                );\n              })}\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '5px',\n              }}\n            ></div>\n            <Button\n              size='middle'\n              onClick={handleAddDeliveryCharge}\n              type='dashed'\n              icon={<PlusOutlined />}\n            >\n              Add Charge\n            </Button>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Country</h3>\n            <Form.Item\n              validateStatus={\n                addRegionState.error['error']['country'] ? 'error' : ''\n              }\n              help={addRegionState.error['error']['country']}\n            >\n              <Select\n                notFoundContent={\n                  <Empty title='No Country Found' height={200} />\n                }\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Country'\n                optionFilterProp='children'\n                onChange={onChangeCountry}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n              >\n                {countryListState.done &&\n                  countryListState.data.length > 0 &&\n                  countryOptions.map((option) => {\n                    return <Option value={option.value}>{option.name}</Option>;\n                  })}\n              </Select>\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Cities</h3>\n\n            {cityListState.done && selectedCountryValue && !cityOptions[0] && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Empty title='No City found' height={100} />\n                </div>\n              </>\n            )}\n\n            {!selectedCountryValue && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    margin: '50px 0',\n                  }}\n                >\n                  <Empty title='Select Country first' height={100} />\n                </div>\n              </>\n            )}\n\n            {cityListState.isLoading && (\n              <div\n                style={{\n                  padding: '15px 0',\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Spin />\n              </div>\n            )}\n\n            {cityOptions && cityOptions.length > 0 && (\n              <Form.Item\n                validateStatus={\n                  addRegionState.error['error']['city'] ? 'error' : ''\n                }\n                help={addRegionState.error['error']['city']}\n              >\n                <CitySelectForDeliveryRegion\n                  checkAll={checkAll}\n                  setCheckAll={setCheckAll}\n                  plainOptions={cityOptions}\n                  setPlainOptions={setcityOptions}\n                  checkedList={accesscheckedList}\n                  setCheckedList={setAccessCheckedList}\n                  cityListState={cityListState}\n                />\n              </Form.Item>\n            )}\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewRegion;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Button, Form, Spin } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport Empty from '../../components/Empty';\n\nimport CitySelectForDeliveryRegion from './CitySelectForDeliveryRegion';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport DeliveryCharge from './DeliveryCharge';\nimport { category } from '../../state/ducks';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string()\n  // \t.label('Name')\n  // \t.required()\n  // \t.min(2, 'Name must have at least 2 characters '),\n  // pickUpLocation: Yup.string()\n  // \t.label('Pick up Location')\n  // \t.required()\n  // \t.min(2, 'Pick up Location must have at least 2 characters '),\n  // time: Yup.string()\n  // \t.label('Time')\n  // \t.required()\n  // \t.min(2, 'Time must have at least 2 characters '),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Region Updated!',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  customer: any;\n  setvisible: any;\n  visible: any;\n  regionList?: any;\n  setRegionList?: any;\n}\n\nconst QuickEdit = ({\n  customer,\n  setvisible,\n  visible,\n  setRegionList,\n  regionList,\n}: Props) => {\n  const [updateRegionState, handleUpdateRegionFetch] = useHandleFetch(\n    {},\n    'updateRegion'\n  );\n\n  console.log('DeliveryRegion', customer);\n\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const [deliveryChargeList, setdeliveryChargeList] = useState([]);\n\n  useEffect(() => {\n    if (customer.charge && Object.keys(customer.charge).length > 0) {\n      const deliveryChargeListFromRegionDetail = [];\n      const chargeKeys = Object.keys(customer.charge);\n      chargeKeys.forEach((chargeKey) => {\n        deliveryChargeListFromRegionDetail.push({\n          minimumOrder: chargeKey,\n          charge: customer.charge[chargeKey],\n          id: `${Math.floor(100000 + Math.random() * 900000)}`,\n        });\n      });\n      setdeliveryChargeList(deliveryChargeListFromRegionDetail);\n    }\n\n    if (customer.city && customer.city.length > 0) {\n      setAccessCheckedList(customer.city);\n      setselectedCountryValue(customer.countryName || '');\n    } else {\n      setAccessCheckedList([]);\n      setselectedCountryValue('');\n    }\n  }, [customer]);\n\n  useEffect(() => {}, [customer, selectedCountryValue]);\n\n  console.log('deliveryCharge333', customer);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // console.log('selectedCityValue',selectedCityValue)\n    const charge = {};\n\n    if (deliveryChargeList.length > 0) {\n      for (let item of deliveryChargeList) {\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\n          charge[item['minimumOrder']] = item['charge'];\n        }\n      }\n    }\n    const addRegionRes = await handleUpdateRegionFetch({\n      urlOptions: {\n        placeHolders: {\n          id: customer.id,\n        },\n      },\n      body: {\n        name: values.name,\n        pickUpLocation: values.pickUpLocation,\n        time: values.time,\n        country: selectedCountryValue || customer.country,\n        city: selectedCityValue || customer.city,\n        charge,\n      },\n    });\n\n    // @ts-ignore\n    if (addRegionRes && addRegionRes.status === 'ok') {\n      openSuccessNotification();\n\n      const positionInTag = () => {\n        return regionList.map((item) => item.id).indexOf(customer.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, regionList[index], {\n        // @ts-ignore\n        ...addRegionRes,\n        id: customer.id,\n      });\n      const updateRegionList = [\n        ...regionList.slice(0, index),\n        updatedItem,\n        ...regionList.slice(index + 1),\n      ];\n      setRegionList(updateRegionList);\n      setvisible(false);\n\n      setdeliveryChargeList([]);\n      setselectedCityValue('');\n      setselectedCountryValue('');\n      // setcountryOptions([]);\n      // setcityOptions([]);\n      // setcountryOptions([]);\n      // setcityOptions([]);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateRegionState['isLoading']) {\n      const error = updateRegionState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !updateRegionState['isLoading'] &&\n      Object.keys(updateRegionState.data).length > 0\n    ) {\n      if (updateRegionState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [updateRegionState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, [customer]);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue || customer.countryName,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n\n        if (cityOptions.length === customer.city.length) {\n          setCheckAll(true);\n        }\n\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [customer.countryName, selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n\n    setdeliveryChargeList([]);\n    setselectedCityValue('');\n    setselectedCountryValue('');\n    // setcountryOptions([]);\n    // setcityOptions([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddDeliveryCharge = () => {\n    setdeliveryChargeList([\n      ...deliveryChargeList,\n      {\n        minimumOrder: '',\n        charge: '',\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\n      },\n    ]);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            title='Region Edit'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            destroyOnClose={true}\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && updateRegionState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && updateRegionState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Pick up Location'\n                  value={values.pickUpLocation}\n                  name='pickUpLocation'\n                  isError={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      updateRegionState.error['error']['pickUpLocation'])\n                  }\n                  errorString={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      updateRegionState.error['error']['pickUpLocation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('pickUpLocation');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Time'\n                value={values.time}\n                name='time'\n                isError={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && updateRegionState.error['error']['time'])\n                }\n                errorString={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && updateRegionState.error['error']['time'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('time');\n                }}\n              />\n            </div>\n\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\n\n            <Form.Item\n              validateStatus={\n                updateRegionState.error['error']['charge'] ? 'error' : ''\n              }\n              help={updateRegionState.error['error']['charge']}\n            >\n              {deliveryChargeList.map((deliveryChargeItem) => {\n                console.log('deliveryChargeItem-region', deliveryChargeItem);\n                return (\n                  <DeliveryCharge\n                    deliveryChargeItem={deliveryChargeItem}\n                    deliveryChargeList={deliveryChargeList}\n                    setdeliveryChargeList={setdeliveryChargeList}\n                  />\n                );\n              })}\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '5px',\n              }}\n            ></div>\n            <Button\n              size='middle'\n              onClick={handleAddDeliveryCharge}\n              type='dashed'\n              icon={<PlusOutlined />}\n            >\n              Add Charge\n            </Button>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Country</h3>\n            <Form.Item\n              validateStatus={\n                updateRegionState.error['error']['country'] ? 'error' : ''\n              }\n              help={updateRegionState.error['error']['country']}\n            >\n              <Select\n                notFoundContent={\n                  <Empty title='No Country Found' height={100} />\n                }\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Country'\n                optionFilterProp='children'\n                onChange={onChangeCountry}\n                value={selectedCountryValue}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n              >\n                {countryListState.done &&\n                  countryListState.data.length > 0 &&\n                  countryOptions.map((option) => {\n                    return <Option value={option.value}>{option.name}</Option>;\n                  })}\n              </Select>\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Cities</h3>\n\n            {cityListState.done && selectedCountryValue && !cityOptions[0] && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Empty title='No City found' height={100} />\n                </div>\n              </>\n            )}\n\n            {!selectedCountryValue && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    margin: '50px 0',\n                  }}\n                >\n                  <Empty title='Select Country first' height={200} />\n                </div>\n              </>\n            )}\n\n            {cityListState.isLoading && (\n              <div\n                style={{\n                  padding: '15px 0',\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Spin />\n              </div>\n            )}\n\n            {cityOptions && cityOptions.length > 0 && (\n              <Form.Item\n                validateStatus={\n                  updateRegionState.error['error']['city'] ? 'error' : ''\n                }\n                help={updateRegionState.error['error']['city']}\n              >\n                <CitySelectForDeliveryRegion\n                  checkAll={checkAll}\n                  setCheckAll={setCheckAll}\n                  plainOptions={cityOptions}\n                  setPlainOptions={setcityOptions}\n                  checkedList={accesscheckedList}\n                  setCheckedList={setAccessCheckedList}\n                  cityListState={cityListState}\n                />\n              </Form.Item>\n            )}\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  notification,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewRegion from './AddNewRegion';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Region Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setRegionList: any;\n  roles: any;\n}\n\nconst MyTable = ({ data, setRegionList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch(\n    {},\n    'deleteRegion'\n  );\n\n  const handleDeleteRegion = async (id) => {\n    const deleteRegionRes = await handleDeleteRegioFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteRegionRes && deleteRegionRes.status === 'ok') {\n      openSuccessNotification('Deleted Region');\n      const newRegionList = data.filter((item) => item.id !== id);\n      setRegionList(newRegionList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Pick up Location'\n          dataIndex='pickUpLocation'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Country'\n          dataIndex='countryName'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={150}\n          title='City'\n          dataIndex='city'\n          key='id'\n          className='classnameofthecolumn'\n          render={(tags) => (\n            <>\n              {tags &&\n                tags.length > 0 &&\n                tags.slice(0, 3).map((tag) => (\n                  <Tag\n                    style={{\n                      borderRadius: '5px',\n                      marginBottom: '5px',\n                    }}\n                    color='blue'\n                    key={tag}\n                  >\n                    {tag}\n                  </Tag>\n                ))}\n\n              <span\n                style={{\n                  color: '#1890ff',\n                }}\n              >\n                {/* {tags &&\n                  tags.length > 3 &&\n                  `.....${tags.length - tags.slice(0, 3).length}more`} */}\n                {tags && tags.slice(0, 3).length === 3 && `more.....`}\n              </span>\n            </>\n          )}\n        />\n\n        <Column\n          title='Time'\n          dataIndex='time'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={150}\n          className='classnameofthecolumn'\n          title='Charge'\n          dataIndex='charge'\n          key='id'\n          render={(charges) => (\n            <>\n              {charges &&\n                Object.keys(charges).length > 0 &&\n                Object.keys(charges).map((key) => {\n                  return (\n                    <>\n                      <div\n                        style={{\n                          marginBottom: '10px',\n                        }}\n                      >\n                        <Tag color='blue' key={key}>\n                          {key}\n                        </Tag>\n                        &nbsp;:&nbsp;&nbsp;&nbsp;\n                        <Tag color='blue' key={charges[key]}>\n                          {charges[key]}\n                        </Tag>\n                      </div>\n                    </>\n                  );\n                })}\n            </>\n          )}\n        />\n\n        {isAccess('postDelivery', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Region'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteRegion(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n          regionList={data}\n          setRegionList={setRegionList}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst CustomerList = ({ roles }: Props) => {\n  const [regionList, setRegionList] = useState([]);\n\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\n\n  useEffect(() => {\n    const setRegions = async () => {\n      const regions = await handleRegionListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 500000,\n          },\n        },\n      });\n      // @ts-ignore\n      setRegionList(regions);\n    };\n    setRegions();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  console.log('regionState', regionState);\n\n  const handleSearch = (value) => {\n    if (regionState.data.length > 0) {\n      const newTagList = regionState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setRegionList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Regions</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search regions..'\n              onSearch={(value) => handleSearch(value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          {isAccess('postDelivery', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {regionState.done && regionList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setRegionList={setRegionList}\n              data={regionList}\n            />\n          )}\n          {regionState.isLoading && <DataTableSkeleton />}\n\n          {regionState.done && !(regionList.length > 0) && (\n            <Empty title='No Region found' />\n          )}\n        </div>\n      </div>\n\n      {regionState.done && (\n        <AddNewRegion\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          regionList={regionState.data}\n          setRegionList={setRegionList}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CustomerList);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  url: '',\n  protocol: '',\n  method: '',\n  parameters: '',\n  recipientKey: '',\n  separator: '',\n  textKey: '',\n  maskKey: '',\n  maskValue: '',\n  usernameKey: '',\n  usernameValue: '',\n  passwordKey: '',\n  passwordValue: '',\n  additionalMsgType: '',\n};\n\nconst { Option } = Select;\n\ninterface Props {}\n\nconst ConfigureSTMP = ({}: Props) => {\n  const [\n    getEmailConfigurationState,\n    handleGetEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'getSMSConfiguration');\n  const [\n    emailConfigurationState,\n    handleEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'configureSMS');\n\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [isArraySupport, setIsArraySupport] = useState(false);\n  const [configurationData, setConfigurationData] = useState({});\n  const [method, setMethod] = useState('');\n  const [protocol, setProtocol] = useState('');\n\n  console.log('getEmailConfigurationState', getEmailConfigurationState);\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailConfigurationFetch({});\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setConfigurationData(res);\n        setIsAuthenticated(res['authentication']);\n        setMethod(res['method']);\n        setProtocol(res['protocol']);\n      }\n    };\n    getEmailConfiguration();\n  }, []);\n\n  console.log('getEmailConfigurationState', method);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleEmailConfigurationFetch({\n      body: {\n        url: values.url,\n        protocol: protocol,\n        method: method,\n        authentication: isAuthenticated,\n        parameters: {\n          recipient: {\n            key: values.recipientKey,\n            arraySupport: isArraySupport,\n            separator: values.separator,\n          },\n          text: {\n            key: values.textKey,\n          },\n          mask: {\n            key: values.maskKey,\n            value: values.maskValue,\n          },\n          authentication: {\n            username: {\n              key: values.usernameKey,\n              value: values.usernameValue,\n            },\n            password: {\n              key: values.passwordKey,\n              value: values.passwordValue,\n            },\n          },\n          additional: {\n            MsgType: values.additionalMsgType,\n          },\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n    } else {\n      // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleSelectChange = () => {};\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (!emailConfigurationState['isLoading']) {\n      const error = emailConfigurationState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !emailConfigurationState['isLoading'] &&\n      Object.keys(emailConfigurationState.data).length > 0\n    ) {\n      if (emailConfigurationState['data']['status'] === 'ok') {\n        openSuccessNotification('SMS Settings Updated!');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [emailConfigurationState]);\n\n  const handleAuthenticatedChange = (e) => {\n    setIsAuthenticated(e.target.checked);\n  };\n\n  const prottocolOptions = [\n    {\n      name: 'HTTP',\n      value: 'HTTP',\n    },\n    {\n      name: 'HTTPS',\n      value: 'HTTPS',\n    },\n  ];\n\n  const methodOptions = [\n    {\n      name: 'GET',\n      value: 'GET',\n    },\n    {\n      name: 'POST',\n      value: 'POST',\n    },\n  ];\n\n  const handleMethodChange = (value) => {\n    console.log('valueOfMethod', value);\n    setMethod(value);\n  };\n\n  const handleProtocolChange = (value) => {\n    setProtocol(value);\n  };\n\n  const initialValues = {\n    url: '',\n    protocol: '',\n    method: '',\n    parameters: '',\n    recipientKey: '',\n    separator: '',\n    textKey: '',\n    maskKey: '',\n    maskValue: '',\n    usernameKey: '',\n    usernameValue: '',\n    passwordKey: '',\n    passwordValue: '',\n    additionalMsgType: '',\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...configurationData,\n        ...(configurationData &&\n          Object.keys(configurationData).length > 0 && {\n            recipientKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].recipient &&\n              configurationData['parameters'].recipient.key,\n            separator:\n              configurationData['parameters'] &&\n              configurationData['parameters'].recipient &&\n              configurationData['parameters'].recipient.separator,\n            textKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].text &&\n              configurationData['parameters'].text.key,\n            maskKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].mask &&\n              configurationData['parameters'].mask.key,\n            maskValue:\n              configurationData['parameters'] &&\n              configurationData['parameters'].mask &&\n              configurationData['parameters'].mask.value,\n            usernameKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.username &&\n              configurationData['parameters'].authentication.username.key,\n            usernameValue:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.username &&\n              configurationData['parameters'].authentication.username.value,\n            passwordKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.password &&\n              configurationData['parameters'].authentication.password.key,\n            passwordValue:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.password &&\n              configurationData['parameters'].authentication.password.value,\n            additionalMsgType:\n              configurationData['parameters'] &&\n              configurationData['parameters'].additional &&\n              configurationData['parameters'].additional.MsgType,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <Input\n                label='URL'\n                value={values.url}\n                name='url'\n                isError={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['url'])\n                }\n                errorString={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['url'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('url');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Protocol</h3>\n              <Select\n                showSearch\n                style={{ width: '100%', borderRadius: '6px' }}\n                placeholder='Select a protocol'\n                defaultValue={protocol}\n                value={protocol}\n                onChange={handleProtocolChange}\n              >\n                {prottocolOptions.map((option) => {\n                  return <Option value={option.value}>{option.name}</Option>;\n                })}\n              </Select>\n            </div>\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Method</h3>\n\n              <Select\n                onChange={handleMethodChange}\n                showSearch\n                style={{ width: '100%', borderRadius: '6px' }}\n                placeholder='Select a method'\n                defaultValue={method}\n                value={method}\n              >\n                {methodOptions.map((option) => {\n                  return <Option value={option.value}>{option.name}</Option>;\n                })}\n              </Select>\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            ></div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '20px',\n            }}\n          ></div>\n          <h3 style={{}} className='addOrderContainer-sectionTitle'>\n            Parameters\n          </h3>\n\n          <h3 className='inputFieldLabel'>Recipient</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '35%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.recipientKey}\n                name='recipientKey'\n                isError={\n                  (touched.recipientKey && errors.recipientKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['recipientKey'])\n                }\n                errorString={\n                  (touched.recipientKey && errors.recipientKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['recipientKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('recipientKey');\n                }}\n              />\n            </div>\n\n            <div\n              style={{\n                width: '20%',\n                marginLeft: '20px',\n              }}\n            >\n              <Checkbox\n                value={isArraySupport}\n                onChange={(e) => setIsArraySupport(e.target.checked)}\n              >\n                <span className='checkBoxFieldLabel'>Array support</span>\n              </Checkbox>\n            </div>\n\n            <div\n              style={{\n                width: '45%',\n              }}\n            >\n              {isArraySupport && (\n                <InputSmall\n                  label='Separator'\n                  value={values.separator}\n                  name='separator'\n                  isError={\n                    (touched.separator && errors.separator) ||\n                    (!isSubmitting &&\n                      emailConfigurationState.error['error']['separator'])\n                  }\n                  errorString={\n                    (touched.separator && errors.separator) ||\n                    (!isSubmitting &&\n                      emailConfigurationState.error['error']['separator'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('separator');\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          <h3 className='inputFieldLabel'>Text</h3>\n          <InputSmall\n            label='Separator'\n            value={values.textKey}\n            name='textKey'\n            isError={\n              (touched.textKey && errors.textKey) ||\n              (!isSubmitting &&\n                emailConfigurationState.error['error']['textKey'])\n            }\n            errorString={\n              (touched.textKey && errors.textKey) ||\n              (!isSubmitting &&\n                emailConfigurationState.error['error']['textKey'])\n            }\n            onChange={(e: any) => {\n              handleChange(e);\n              setFieldTouched('textKey');\n            }}\n          />\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Mask</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.maskKey}\n                name='maskKey'\n                isError={\n                  (touched.maskKey && errors.maskKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskKey'])\n                }\n                errorString={\n                  (touched.maskKey && errors.maskKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('maskKey');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Value'\n                value={values.maskValue}\n                name='maskValue'\n                isError={\n                  (touched.maskValue && errors.maskValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskValue'])\n                }\n                errorString={\n                  (touched.maskValue && errors.maskValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskValue'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('maskValue');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Username</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.usernameKey}\n                name='usernameKey'\n                isError={\n                  (touched.usernameKey && errors.usernameKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameKey'])\n                }\n                errorString={\n                  (touched.usernameKey && errors.usernameKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('usernameKey');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Value'\n                value={values.usernameValue}\n                name='usernameValue'\n                isError={\n                  (touched.usernameValue && errors.usernameValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameValue'])\n                }\n                errorString={\n                  (touched.usernameValue && errors.usernameValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameValue'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('usernameValue');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Password</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.passwordKey}\n                name='passwordKey'\n                isError={\n                  (touched.passwordKey && errors.passwordKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordKey'])\n                }\n                errorString={\n                  (touched.passwordKey && errors.passwordKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('passwordKey');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Value'\n                value={values.passwordValue}\n                name='passwordValue'\n                isError={\n                  (touched.passwordValue && errors.passwordValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordValue'])\n                }\n                errorString={\n                  (touched.passwordValue && errors.passwordValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordValue'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('passwordValue');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Additional</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Msg Type'\n                value={values.additionalMsgType}\n                name='additionalMsgType'\n                isError={\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['additionalMsgType'])\n                }\n                errorString={\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['additionalMsgType'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('additionalMsgType');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            ></div>\n          </div>\n\n          <Checkbox\n            value={isAuthenticated}\n            onChange={handleAuthenticatedChange}\n          >\n            <span className='checkBoxFieldLabel'>Authentication</span>\n          </Checkbox>\n\n          <div\n            style={{\n              marginTop: '20px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'block',\n              marginBottom: '20px',\n              marginTop: '20px',\n            }}\n          >\n            <Button\n              onClick={(e: any) => handleSubmit(e)}\n              loading={emailConfigurationState.isLoading}\n              className='btnPrimaryClassNameoutline'\n            >\n              Update SMS Configuration\n            </Button>\n          </div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default ConfigureSTMP;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newCustomer',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newCustomer',\n          },\n        },\n      });\n\n      console.log('newCustomertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['customer'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Customer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Dealer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newDealer',\n          user: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newDealer',\n          },\n        },\n      });\n\n      console.log('newDealertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['user'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Dealer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject || ''}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body || ''}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'orderStatus',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'orderStatus',\n          },\n        },\n      });\n\n      console.log('orderStatus', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['customer'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'70vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Status Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject || ''}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body || ''}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Order Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'order',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'order',\n          },\n        },\n      });\n\n      console.log('Ordertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['customer'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  EditOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport NewCustomerTemplate from './NewCustomerTemplate';\nimport NewDealerAutoEventsTemplate from './NewDealerAutoEventsTemplate';\nimport OrderStatusTemplateAutoEmail from './OrderStatusTemplateAutoEmail';\nimport OrderTemplateAutoEmail from './OrderTemplateAutoEmail';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {}\n\nconst ConfigureAutoEmail = ({}: Props) => {\n  const [\n    getAutoEmailConfigurationState,\n    handleGetAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'getAutoSMSConfiguration');\n  const [\n    configureAutoEmailConfigurationState,\n    handleAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'configureAutoSMS');\n\n  const [isnewCustomerAdmin, setnewCustomerAdmin] = useState(false);\n  const [isnewCustomerCustomer, setnewCustomerCustomer] = useState(false);\n\n  const [isnewDealerAdmin, setnewDealerAdmin] = useState(false);\n  const [isnewDealer, setnewDealerDealer] = useState(false);\n\n  const [isorderAdmin, setorderAdmin] = useState(false);\n  const [isorderStatusAdmin, setorderStatusAdmin] = useState(false);\n  const [isorderCustomer, setorderCustomer] = useState(false);\n  const [isorderStatusCustomer, setIsorderStatusCustomer] = useState(false);\n\n  const [newcustomermodal, setnewcustomermodal] = useState(false);\n  const [newDealermodal, setnewDealermodal] = useState(false);\n  const [ordermodal, setordermodal] = useState(false);\n  const [orderStatusmodal, setorderStatusmodal] = useState(false);\n  const [autoEmailData, setAutoEmailData] = useState({});\n\n  console.log('isnewCustomerAdmin', isnewCustomerAdmin);\n  console.log('isnewCustomerCustomer', isnewCustomerCustomer);\n\n  useEffect(() => {\n    const getAutoEmailConfiguration = async () => {\n      const res = await handleGetAutoEmailConfigurationFetch({});\n      //@ts-ignore\n      if (res) {\n        setAutoEmailData(autoEmailData);\n        setnewCustomerAdmin(res['newCustomer']['admin']);\n        setnewCustomerCustomer(res['newCustomer']['user']);\n        setnewDealerAdmin(res['newDealer']['admin']);\n        setnewDealerDealer(res['newDealer']['user']);\n        setIsorderStatusCustomer(res['orderStatus']['user']);\n        setorderStatusAdmin(res['orderStatus']['admin']);\n        setorderAdmin(res['order']['admin']);\n        setorderCustomer(res['order']['user']);\n      }\n    };\n    getAutoEmailConfiguration();\n  }, []);\n\n  console.log('getAutoEmailConfigurationState', getAutoEmailConfigurationState);\n\n  const handleUpdateAutoEmail = async () => {\n    const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\n      body: {\n        newCustomer: {\n          admin: isnewCustomerAdmin,\n          user: isnewCustomerCustomer,\n        },\n        order: {\n          admin: isorderAdmin,\n          user: isorderCustomer,\n        },\n        orderStatus: {\n          admin: isorderStatusAdmin,\n          user: isorderStatusCustomer,\n        },\n        newDealer: {\n          admin: isnewDealerAdmin,\n          user: isnewDealer,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\n      openSuccessNotification('Auto email Configuration Updated!');\n    } else {\n      openErrorNotification(\n        \"Something went wrong, Couldn't updated Auto email configuration\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Customer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewcustomermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewCustomerAdmin}\n                defaultChecked={isnewCustomerAdmin}\n                onChange={(e) => setnewCustomerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewCustomerCustomer}\n                defaultChecked={isnewCustomerCustomer}\n                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            marginTop: '25px',\n          }}\n        ></div>\n\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Dealer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewDealermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewDealerAdmin}\n                defaultChecked={isnewDealerAdmin}\n                onChange={(e) => setnewDealerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewDealer}\n                defaultChecked={isnewDealer}\n                onChange={(e) => setnewDealerDealer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setordermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n\n          <div\n            style={{\n              marginTop: '5px',\n            }}\n          ></div>\n\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderAdmin}\n                defaultChecked={isorderAdmin}\n                onChange={(e) => setorderAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderCustomer}\n                defaultChecked={isorderCustomer}\n                onChange={(e) => setorderCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order status</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setorderStatusmodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderStatusAdmin}\n                defaultChecked={isorderStatusAdmin}\n                onChange={(e) => setorderStatusAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderStatusCustomer}\n                defaultChecked={isorderStatusCustomer}\n                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n\n            <div style={{}}></div>\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          marginTop: '25px',\n        }}\n      ></div>\n      <Button\n        onClick={(e: any) => handleUpdateAutoEmail()}\n        loading={configureAutoEmailConfigurationState.isLoading}\n        className='btnPrimaryClassNameoutline'\n      >\n        Update Auto Email Configuration\n      </Button>\n      <div\n        style={{\n          marginTop: '5px',\n        }}\n      ></div>\n      <NewCustomerTemplate\n        visible={newcustomermodal}\n        setVisible={setnewcustomermodal}\n      />\n      <NewDealerAutoEventsTemplate\n        visible={newDealermodal}\n        setVisible={setnewDealermodal}\n      />\n\n      <OrderStatusTemplateAutoEmail\n        visible={orderStatusmodal}\n        setVisible={setorderStatusmodal}\n      />\n      <OrderTemplateAutoEmail visible={ordermodal} setVisible={setordermodal} />\n    </>\n  );\n};\n\nexport default ConfigureAutoEmail;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  SendOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  recipient: '',\n  subject: '',\n};\n\ninterface Props {}\n\nconst ComposeCustomEmail = ({}: Props) => {\n  const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch(\n    {},\n    'sendCustomSMS'\n  );\n\n  const [text, setText] = useState('');\n  const [recipient, setrecipient] = useState('');\n\n  function handleChange(value) {\n    setrecipient(value);\n  }\n\n  const handleMsgSend = async () => {\n    const addTagRes = await handleSendCustomEmailFetch({\n      body: {\n        recipient: recipient,\n        text: text,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      setText('');\n      setrecipient('');\n      openSuccessNotification('SMS Sent!');\n    } else {\n      // openErrorNotification(\"Something went wrong, Couldn't send email\");\n    }\n  };\n\n  useEffect(() => {\n    if (!sendCustomerEmailState['isLoading']) {\n      const error = sendCustomerEmailState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !sendCustomerEmailState['isLoading'] &&\n      Object.keys(sendCustomerEmailState.data).length > 0\n    ) {\n      // if (sendCustomerEmailState['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [sendCustomerEmailState]);\n\n  return (\n    <div\n      style={{\n        width: '450px',\n      }}\n    >\n      <h3 className='inputFieldLabel'>Recipient</h3>\n\n      <Select\n        style={{\n          height: '30px',\n          borderRadius: '3px',\n          borderColor: '#eee !important',\n          width: '100%',\n        }}\n        mode='tags'\n        onChange={handleChange}\n        tokenSeparators={[',']}\n      ></Select>\n\n      <div\n        style={{\n          marginTop: '15px',\n        }}\n      ></div>\n      <TextArea\n        label='Text'\n        value={text}\n        name='text'\n        onChange={(e: any) => {\n          setText(e.target.value);\n        }}\n      />\n\n      <Button\n        style={{\n          marginTop: '10px',\n        }}\n        onClick={handleMsgSend}\n        loading={sendCustomerEmailState.isLoading}\n        //   disabled={getMsgSendIsDisabled()}\n\n        className='btnAddToPrice'\n      >\n        Send{' '}\n        <span\n          style={{\n            marginLeft: '10px',\n          }}\n        >\n          {' '}\n          <SendOutlined />\n        </span>\n      </Button>\n    </div>\n  );\n};\n\nexport default ComposeCustomEmail;\n","import React, { useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport { Spin, Empty } from 'antd';\nimport moment from 'moment';\n\nimport { LeftOutlined } from '@ant-design/icons';\n\ninterface Props {\n  id?: any;\n  setSelectedEmailId?: any;\n}\n\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getSMSDetails'\n  );\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          placeHolders: {\n            id: id,\n          },\n        },\n      });\n      // @ts-ignore\n    };\n    getEmailConfiguration();\n  }, []);\n\n  console.log('getEmailDetailState', getEmailDetailState);\n\n  return (\n    <>\n      {getEmailDetailState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailDetailState.done && !getEmailDetailState.data ? (\n        <>\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No SMS found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      ) : (\n        ''\n      )}\n\n      {getEmailDetailState.done &&\n      getEmailDetailState.data &&\n      !(Object.keys(getEmailDetailState.data).length > 0) ? (\n        <>\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No SMS found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      ) : (\n        ''\n      )}\n\n      {getEmailDetailState.done &&\n        getEmailDetailState.data &&\n        Object.keys(getEmailDetailState.data).length > 0 && (\n          <>\n            <div className='inboxEmailDetails'>\n              <div\n                onClick={() => setSelectedEmailId('')}\n                className='inboxEmailDetails__backBtn'\n              >\n                <LeftOutlined />\n              </div>\n              <div className='inboxEmailDetails__header'>\n                <span>{getEmailDetailState['data']['event']}</span>\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\n                <h4>\n                  {getEmailDetailState['data']['time'] &&\n                    moment(getEmailDetailState['data']['time']).format(\n                      'MMMM Do YYYY, h:mm a'\n                    )}\n                </h4>\n              </div>\n              <div className='inboxEmailDetails__body'>\n                {getEmailDetailState['data']['text'] &&\n                  getEmailDetailState['data']['text']}\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  );\n};\n\nexport default InboxEmailDetails;\n","import React, { useEffect, useState } from 'react';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\nimport InboxEmailDetails from './InboxEmailDetails';\nimport { Spin, Empty } from 'antd';\nimport moment from 'moment';\n\nimport ReactHtmlParser from 'react-html-parser';\n\ninterface Props {\n  emailList?: any;\n  setEmailList?: any;\n  getEmailListState?: any;\n}\n\nconst Inbox = ({ emailList, setEmailList, getEmailListState }: Props) => {\n  const [selectedEmailId, setSelectedEmailId] = useState('');\n\n  console.log('getEmailListState', getEmailListState);\n\n  return (\n    <>\n      {getEmailListState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && !(emailList.length > 0) && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '50px 0',\n            }}\n          >\n            <Empty\n              description='No SMS found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && emailList.length > 0 && (\n        <>\n          <div className='sentEmailListContainer'>\n            {!selectedEmailId && (\n              <>\n                {getEmailListState.done && emailList && emailList.length > 0 && (\n                  <>\n                    {emailList.map((item) => {\n                      return (\n                        <div\n                          onClick={() => setSelectedEmailId(item.id)}\n                          className='sentEmailListContainer__item'\n                        >\n                          <div className='sentEmailListContainer__item-info'>\n                            <h3>To: {` ${item.recipient}`}</h3>\n                            <span>{`${item.event || 'No Subject'}`}</span>\n                          </div>\n\n                          <h4>\n                            {item.text && item.text.substring(0, 125) + '.....'}\n                          </h4>\n                          <h3>\n                            {item.time &&\n                              moment(item.time).format('MMMM Do, h a')}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                  </>\n                )}\n              </>\n            )}\n\n            {selectedEmailId && (\n              <>\n                <InboxEmailDetails\n                  setSelectedEmailId={setSelectedEmailId}\n                  id={selectedEmailId}\n                />\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Inbox;\n","import React, { useEffect, useState } from 'react';\n\n// import lib\nimport { Tabs, Input } from 'antd';\n\n// import components\nimport ConfigureSTMP from './ConfigureSMS';\nimport ConfigureAutoEmail from './ConfigureAutoEmail';\nimport ComposeCustomEmail from './ComposeCustomSMS';\nimport Inbox from './Inbox';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport {\n  PlusCircleOutlined,\n  InboxOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\ninterface Props {}\n\nconst Sms = (props: Props) => {\n  const [getEmailListState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getSentSMSList'\n  );\n  const [emailList, setEmailList] = useState([]);\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          params: {\n            limitCount: 50000,\n            sortItemValue: 'time',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setEmailList(res);\n    };\n    getEmailConfiguration();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (getEmailListState.data.length > 0) {\n      const newProductList = getEmailListState.data.filter((item) => {\n        return (\n          (item.event &&\n            item.event.toLowerCase().includes(value.toLowerCase())) ||\n          (item.text && item.text.toLowerCase().includes(value.toLowerCase()))\n        );\n      });\n      setEmailList(newProductList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer__header'>\n        <div className='categoryListContainer__header-searchBar'>\n          <h2 className='categoryListContainer__header-title'>SMS</h2>\n\n          <Search\n            enterButton={false}\n            className='searchbarClassName'\n            placeholder='search SMS..'\n            onChange={(e) => handleSearch(e.target.value)}\n            // style={{ width: 300 }}\n          />\n        </div>\n      </div>\n\n      <div className='siteInfoContainer'>\n        <Tabs defaultActiveKey='1'>\n          <TabPane\n            tab={\n              <span>\n                <InboxOutlined />\n                Outbox\n              </span>\n            }\n            key='1'\n          >\n            <Inbox\n              getEmailListState={getEmailListState}\n              setEmailList={setEmailList}\n              emailList={emailList}\n            />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <PlusCircleOutlined />\n                Compose SMS\n              </span>\n            }\n            key='2'\n          >\n            <ComposeCustomEmail />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure SMS\n              </span>\n            }\n            key='3'\n          >\n            <ConfigureSTMP />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure Auto SMS\n              </span>\n            }\n            key='4'\n          >\n            <ConfigureAutoEmail />\n          </TabPane>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default Sms;\n","import SMS from './Sms';\nexport default SMS;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\n\nimport {\n    FileOutlined,\n    InboxOutlined,\n    FileAddOutlined,\n    DeleteOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    PlusOutlined,\n    FileImageFilled\n} from '@ant-design/icons';\n\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\n\nconst validationSchema = Yup.object().shape({\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Tag Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    \"fromEmail\": \"\",\n    \"fromName\": \"\",\n    \"host\": \"\",\n    \"encryption\":\"\",\n    \"port\":'',\n    \"smtpUsername\":\"\",\n    \"smtpPassword\": \"\"\n}\n\n\n\ninterface Props {\n}\n\nconst ConfigureSTMP = ({  }: Props) => {\n\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\n \n    const [isAuthenticated,setIsAuthenticated] = useState(true);\n    const [configurationData,setConfigurationData] = useState({}); \n\n\n\n    useEffect(() => {\n      const getEmailConfiguration = async () => {\n          const res = await handleGetEmailConfigurationFetch({});\n          // @ts-ignore\n          if(res){\n              // @ts-ignore\n            setConfigurationData(res); \n            setIsAuthenticated(res['authentication'])\n          }\n      }; \n      getEmailConfiguration(); \n    }, [])\n\n\n    console.log('getEmailConfigurationState',getEmailConfigurationState)\n\n    const handleSubmit = async (values: any, actions: any) => {\n        const addTagRes = await handleEmailConfigurationFetch({\n            body: {\n                \"fromEmail\": values.fromEmail.trim(),\n                \"fromName\": values.fromName.trim(),\n                \"host\": values.host.trim(),\n                \"encryption\":values.encryption.trim(),\n                \"port\":values.port,\n                \"authentication\": isAuthenticated,\n                \"smtpUsername\":values.smtpUsername.trim(),\n                \"smtpPassword\": values.smtpPassword.trim()\n            },\n        });\n\n        // @ts-ignore\n        if (addTagRes && addTagRes.status === 'ok') {\n           \n        }\n        else {\n            // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\n        }\n\n\n        actions.setSubmitting(false);\n\n    };\n\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n    \n\tuseEffect(() => {\n\t\tif (!emailConfigurationState['isLoading']) {\n\t\t\tconst error = emailConfigurationState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!emailConfigurationState['isLoading'] &&\n\t\t\tObject.keys(emailConfigurationState.data).length > 0\n\t\t) {\n\t\t\tif (emailConfigurationState['data']['status'] === 'ok') {\n                openSuccessNotification('STMP Configuration Updated!');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [emailConfigurationState]);\n\n\n\n    const handleAuthenticatedChange = (e) => {\n        setIsAuthenticated(e.target.checked);\n    }\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues, ...configurationData }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n\n                                         \t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\n                                                    label='From Email'\n                                                    value={values.fromEmail}\n                                                    name='fromEmail'\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\n\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('fromEmail');\n                                                    }}\n                                                     />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n                                                    <Input\n                                                    label='From Name'\n                                                    value={values.fromName}\n                                                    name='fromName'\n                                                    isError={(touched.fromName && errors.fromName) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\n\n                                                    errorString={(touched.fromName && errors.fromName) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('fromName');\n                                                    }}\n                                                />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\n                                            <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n                                                      <Input\n                                                    label='Host'\n                                                    value={values.host}\n                                                    name='host'\n                                                    isError={(touched.host && errors.host) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\n\n                                                    errorString={(touched.host && errors.host) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('host');\n                                                    }}\n                                                     />\n\n\t\t\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n                                                    <Input\n                                                    label='Encryption'\n                                                    value={values.encryption}\n                                                    name='encryption'\n                                                    isError={(touched.encryption && errors.encryption) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\n\n                                                    errorString={(touched.encryption && errors.encryption) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('encryption');\n                                                    }}\n                                                />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\n\n                                            <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\n                                                    label='STMP Username'\n                                                    value={values.smtpUsername}\n                                                    name='smtpUsername'\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\n\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('smtpUsername');\n                                                    }}\n                                                    />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n                                                    <Input\n                                                    label='STMP Password'\n                                                    value={values.smtpPassword}\n                                                    name='smtpPassword'\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\n\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('smtpPassword');\n                                                    }}\n                                                />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\n                                            <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n                                                  <Input\n                                                     type='number'\n                                                    label='Port'\n                                                    value={values.port}\n                                                    name='port'\n                                                    isError={(touched.port && errors.port) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\n\n                                                    errorString={(touched.port && errors.port) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('port');\n                                                    }}\n                                                    />\n                                            </div>\n\n                                        \n                                            <Checkbox\n                                            value={isAuthenticated}\n                                             onChange={handleAuthenticatedChange}>\n                                                    <span className='checkBoxFieldLabel'>\n                                                        Authentication\n                                                    </span>\n                                                    \n                                                </Checkbox>    \n\n\n\n<div style={{\n    marginTop:'20px'\n}}></div>\n                                      <div style={{\n                                          display:'block',\n                                          marginBottom:'20px',\n                                          marginTop:'20px',\n                                      }}>\n                                                    \n                                      <Button\n\n                                        onClick={(e: any) => handleSubmit(e)}\n                                        loading={emailConfigurationState.isLoading}\n                                        className='btnPrimaryClassNameoutline'\n                                        >\n                                        Update Email Configuration\n                                        </Button>      \n                                          </div>      \n                    </>\n                )}\n        </Formik>\n    );\n};\n\nexport default ConfigureSTMP;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newCustomer',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newCustomer',\n          },\n        },\n      });\n\n      console.log('newCustomertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['customer']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Customer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Dealer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newDealer',\n          user: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newDealer',\n          },\n        },\n      });\n\n      console.log('newDealertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['user']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Dealer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'orderStatus',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'orderStatus',\n          },\n        },\n      });\n\n      console.log('orderStatus', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['customer']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'70vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Status Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Order Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'order',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'order',\n          },\n        },\n      });\n\n      console.log('Ordertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['customer']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  EditOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport NewCustomerTemplate from './NewCustomerTemplate';\nimport NewDealerAutoEventsTemplate from './NewDealerAutoEventsTemplate';\nimport OrderStatusTemplateAutoEmail from './OrderStatusTemplateAutoEmail';\nimport OrderTemplateAutoEmail from './OrderTemplateAutoEmail';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {}\n\nconst ConfigureAutoEmail = ({}: Props) => {\n  const [\n    getAutoEmailConfigurationState,\n    handleGetAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'getAutoEmailConfiguration');\n  const [\n    configureAutoEmailConfigurationState,\n    handleAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'configureAutoEmail');\n\n  const [isnewCustomerAdmin, setnewCustomerAdmin] = useState(false);\n  const [isnewCustomerCustomer, setnewCustomerCustomer] = useState(false);\n\n  const [isnewDealerAdmin, setnewDealerAdmin] = useState(false);\n  const [isnewDealer, setnewDealerDealer] = useState(false);\n\n  const [isorderAdmin, setorderAdmin] = useState(false);\n  const [isorderStatusAdmin, setorderStatusAdmin] = useState(false);\n  const [isorderCustomer, setorderCustomer] = useState(false);\n  const [isorderStatusCustomer, setIsorderStatusCustomer] = useState(false);\n\n  const [newcustomermodal, setnewcustomermodal] = useState(false);\n  const [newDealermodal, setnewDealermodal] = useState(false);\n  const [ordermodal, setordermodal] = useState(false);\n  const [orderStatusmodal, setorderStatusmodal] = useState(false);\n  const [autoEmailData, setAutoEmailData] = useState({});\n\n  console.log('isnewCustomerAdmin', isnewCustomerAdmin);\n  console.log('isnewCustomerCustomer', isnewCustomerCustomer);\n\n  useEffect(() => {\n    const getAutoEmailConfiguration = async () => {\n      const res = await handleGetAutoEmailConfigurationFetch({});\n      //@ts-ignore\n      if (res) {\n        setAutoEmailData(autoEmailData);\n        setnewCustomerAdmin(res['newCustomer']['admin']);\n        setnewCustomerCustomer(res['newCustomer']['user']);\n        setnewDealerAdmin(res['newDealer']['admin']);\n        setnewDealerDealer(res['newDealer']['user']);\n        setIsorderStatusCustomer(res['orderStatus']['user']);\n        setorderStatusAdmin(res['orderStatus']['admin']);\n        setorderAdmin(res['order']['admin']);\n        setorderCustomer(res['order']['user']);\n      }\n    };\n    getAutoEmailConfiguration();\n  }, []);\n\n  console.log('getAutoEmailConfigurationState', getAutoEmailConfigurationState);\n\n  const handleUpdateAutoEmail = async () => {\n    const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\n      body: {\n        newCustomer: {\n          admin: isnewCustomerAdmin,\n          user: isnewCustomerCustomer,\n        },\n        order: {\n          admin: isorderAdmin,\n          user: isorderCustomer,\n        },\n        orderStatus: {\n          admin: isorderStatusAdmin,\n          user: isorderStatusCustomer,\n        },\n        newDealer: {\n          admin: isnewDealerAdmin,\n          user: isnewDealer,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\n      openSuccessNotification('Auto email Configuration Updated!');\n    } else {\n      openErrorNotification(\n        \"Something went wrong, Couldn't updated Auto email configuration\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Customer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewcustomermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewCustomerAdmin}\n                defaultChecked={isnewCustomerAdmin}\n                onChange={(e) => setnewCustomerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewCustomerCustomer}\n                defaultChecked={isnewCustomerCustomer}\n                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            marginTop: '25px',\n          }}\n        ></div>\n\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Dealer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewDealermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewDealerAdmin}\n                defaultChecked={isnewDealerAdmin}\n                onChange={(e) => setnewDealerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewDealer}\n                defaultChecked={isnewDealer}\n                onChange={(e) => setnewDealerDealer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setordermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n\n          <div\n            style={{\n              marginTop: '5px',\n            }}\n          ></div>\n\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderAdmin}\n                defaultChecked={isorderAdmin}\n                onChange={(e) => setorderAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderCustomer}\n                defaultChecked={isorderCustomer}\n                onChange={(e) => setorderCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order status</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setorderStatusmodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderStatusAdmin}\n                defaultChecked={isorderStatusAdmin}\n                onChange={(e) => setorderStatusAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderStatusCustomer}\n                defaultChecked={isorderStatusCustomer}\n                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n\n            <div style={{}}></div>\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          marginTop: '25px',\n        }}\n      ></div>\n      <Button\n        onClick={(e: any) => handleUpdateAutoEmail()}\n        loading={configureAutoEmailConfigurationState.isLoading}\n        className='btnPrimaryClassNameoutline'\n      >\n        Update Auto Email Configuration\n      </Button>\n      <div\n        style={{\n          marginTop: '5px',\n        }}\n      ></div>\n      <NewCustomerTemplate\n        visible={newcustomermodal}\n        setVisible={setnewcustomermodal}\n      />\n      <NewDealerAutoEventsTemplate\n        visible={newDealermodal}\n        setVisible={setnewDealermodal}\n      />\n\n      <OrderStatusTemplateAutoEmail\n        visible={orderStatusmodal}\n        setVisible={setorderStatusmodal}\n      />\n      <OrderTemplateAutoEmail visible={ordermodal} setVisible={setordermodal} />\n    </>\n  );\n};\n\nexport default ConfigureAutoEmail;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  recipient: '',\n  subject: '',\n};\n\ninterface Props {\n  emailList?: any;\n  setEmailList?: any;\n}\n\nconst ComposeCustomEmail = ({ emailList, setEmailList }: Props) => {\n  const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch(\n    {},\n    'sendCustomEmail'\n  );\n\n  const [html, sethtml] = useState('');\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleSendCustomEmailFetch({\n      body: {\n        recipient: values.recipient.trim(),\n        subject: values.subject.trim(),\n        html: html,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      console.log('MahManEmail', addTagRes);\n      sethtml('');\n      actions.resetForm();\n      openSuccessNotification('Email Sent!');\n    } else {\n      // openErrorNotification(\"Something went wrong, Couldn't send email\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!sendCustomerEmailState['isLoading']) {\n      const error = sendCustomerEmailState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !sendCustomerEmailState['isLoading'] &&\n      Object.keys(sendCustomerEmailState.data).length > 0\n    ) {\n      // if (sendCustomerEmailState['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [sendCustomerEmailState]);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <Input\n                label='To'\n                value={values.recipient}\n                name='recipient'\n                isError={\n                  (touched.recipient && errors.recipient) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['recipient'])\n                }\n                errorString={\n                  (touched.recipient && errors.recipient) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['recipient'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('recipient');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={values.subject}\n                name='subject'\n                isError={\n                  (touched.subject && errors.subject) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['subject'])\n                }\n                errorString={\n                  (touched.subject && errors.subject) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['subject'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('subject');\n                }}\n              />\n            </div>\n          </div>\n\n          <h3 className='inputFieldLabel'>Body</h3>\n\n          <CKEditor\n            editor={ClassicEditor}\n            data={html}\n            onInit={(editor) => {\n              // You can store the \"editor\" and use when it is needed.\n              console.log('Editor is ready to use!', editor);\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              sethtml(data);\n            }}\n            onBlur={(event, editor) => {\n              console.log('Blur.', editor);\n            }}\n            onFocus={(event, editor) => {\n              console.log('Focus.', editor);\n            }}\n          />\n\n          <div\n            style={{\n              marginTop: '20px',\n            }}\n          ></div>\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={sendCustomerEmailState.isLoading}\n            className='btnPrimaryClassNameoutline'\n          >\n            Send\n          </Button>\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default ComposeCustomEmail;\n","import React, { useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport { Spin } from 'antd';\nimport moment from 'moment';\nimport ReactHtmlParser from 'react-html-parser';\n\nimport { LeftOutlined } from '@ant-design/icons';\n\ninterface Props {\n  id?: any;\n  setSelectedEmailId?: any;\n}\n\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getEmailDetails'\n  );\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          placeHolders: {\n            id: id,\n          },\n        },\n      });\n      // @ts-ignore\n    };\n    getEmailConfiguration();\n  }, []);\n\n  console.log('getEmailDetailState', getEmailDetailState);\n\n  return (\n    <>\n      {getEmailDetailState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailDetailState.done &&\n        getEmailDetailState.data &&\n        Object.keys(getEmailDetailState.data).length > 0 && (\n          <>\n            <div className='inboxEmailDetails'>\n              <div\n                onClick={() => setSelectedEmailId('')}\n                className='inboxEmailDetails__backBtn'\n              >\n                <LeftOutlined />\n              </div>\n              <div className='inboxEmailDetails__header'>\n                <span>{getEmailDetailState['data']['subject']}</span>\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\n                <h4>\n                  {getEmailDetailState['data']['time'] &&\n                    moment(getEmailDetailState['data']['time']).format(\n                      'MMMM Do YYYY, h:mm:ss a'\n                    )}\n                </h4>\n              </div>\n              <div className='inboxEmailDetails__body'>\n                {getEmailDetailState['data']['html'] &&\n                  ReactHtmlParser(getEmailDetailState['data']['html'])}\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  );\n};\n\nexport default InboxEmailDetails;\n","import React, { useEffect, useState } from 'react';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\nimport InboxEmailDetails from './InboxEmailDetails';\nimport { Spin, Empty } from 'antd';\nimport moment from 'moment';\n\nimport ReactHtmlParser from 'react-html-parser';\n\ninterface Props {\n  emailList?: any;\n  setEmailList?: any;\n  getEmailListState?: any;\n}\n\nconst Inbox = ({ emailList, setEmailList, getEmailListState }: Props) => {\n  const [selectedEmailId, setSelectedEmailId] = useState('');\n\n  return (\n    <>\n      {getEmailListState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && !(emailList.length > 0) && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '50px 0',\n            }}\n          >\n            <Empty\n              description='No Email found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && emailList.length > 0 && (\n        <>\n          <div className='sentEmailListContainer'>\n            {!selectedEmailId && (\n              <>\n                {getEmailListState.done && emailList && emailList.length > 0 && (\n                  <>\n                    {emailList.map((item) => {\n                      return (\n                        <div\n                          onClick={() => setSelectedEmailId(item.id)}\n                          className='sentEmailListContainer__item'\n                        >\n                          <div className='sentEmailListContainer__item-info'>\n                            <h3>To: {` ${item.recipient}`}</h3>\n                            <span>{`${item.subject || 'No Subject'}`}</span>\n                          </div>\n\n                          <h4>\n                            {ReactHtmlParser(\n                              item.html.substring(0, 125) + '.....'\n                            )}\n                          </h4>\n                          <h3\n                            style={{\n                              fontSize: '12px',\n                            }}\n                          >\n                            {item.time &&\n                              moment(item.time).format('MMMM Do, h a')}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                  </>\n                )}\n              </>\n            )}\n\n            {selectedEmailId && (\n              <>\n                <InboxEmailDetails\n                  setSelectedEmailId={setSelectedEmailId}\n                  id={selectedEmailId}\n                />\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Inbox;\n","import React, { useState, useEffect } from 'react';\n\n// import lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n  Input,\n} from 'antd';\n\n// import components\nimport ConfigureSTMP from './ConfigureSTMP';\nimport ConfigureAutoEmail from './ConfigureAutoEmail';\nimport ComposeCustomEmail from './ComposeCustomEmail';\nimport Inbox from './Inbox';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  InboxOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\ninterface Props {}\n\nconst Sms = (props: Props) => {\n  const [getEmailListState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getSetEmailList'\n  );\n  const [emailList, setEmailList] = useState([]);\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          params: {\n            limitCount: 50000,\n            sortItemValue: 'time',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setEmailList(res);\n    };\n    getEmailConfiguration();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (getEmailListState.data.length > 0) {\n      const newProductList = getEmailListState.data.filter((item) => {\n        return (\n          (item.recipient &&\n            item.recipient.toLowerCase().includes(value.toLowerCase())) ||\n          (item.subject &&\n            item.subject.toLowerCase().includes(value.toLowerCase())) ||\n          (item.html && item.html.toLowerCase().includes(value.toLowerCase()))\n        );\n      });\n      setEmailList(newProductList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer__header'>\n        <div className='categoryListContainer__header-searchBar'>\n          <h2 className='categoryListContainer__header-title'>Email</h2>\n\n          <Search\n            enterButton={false}\n            className='searchbarClassName'\n            placeholder='search email..'\n            onChange={(e) => handleSearch(e.target.value)}\n            // style={{ width: 300 }}\n          />\n        </div>\n      </div>\n      <div className='siteInfoContainer'>\n        <Tabs defaultActiveKey='1'>\n          <TabPane\n            tab={\n              <span>\n                <InboxOutlined />\n                Outbox\n              </span>\n            }\n            key='1'\n          >\n            <Inbox\n              getEmailListState={getEmailListState}\n              setEmailList={setEmailList}\n              emailList={emailList}\n            />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <PlusCircleOutlined />\n                Compose Email\n              </span>\n            }\n            key='2'\n          >\n            <ComposeCustomEmail />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure STMP\n              </span>\n            }\n            key='3'\n          >\n            <ConfigureSTMP />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure Auto Email\n              </span>\n            }\n            key='4'\n          >\n            <ConfigureAutoEmail />\n          </TabPane>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default Sms;\n","import React, { useEffect } from 'react';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { useHistory } from 'react-router';\nimport {\n  LogoutOutlined,\n  BellOutlined,\n  OrderedListOutlined,\n  TwitterSquareFilled,\n  ShoppingCartOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\n\nconst { Header } = Layout;\n\ninterface Props {}\n\nconst NotificationList = (props: Props) => {\n  const history = useHistory();\n\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\n    {},\n    'getAllNotificationPage'\n  );\n\n  const handleMenuClick = (e) => {\n    if (e.key === '3') {\n    }\n  };\n\n  useEffect(() => {\n    const getAllNotification = async () => {\n      await handleGetAllNOticationFetch({\n        urlOptions: {\n          params: {\n            limitNumber: 5000,\n          },\n        },\n      });\n    };\n\n    getAllNotification();\n  }, []);\n\n  console.log('getAllNotificationState', getAllNotificationState);\n\n  const typeIcon = {\n    customer: <UserOutlined />,\n    order: <ShoppingCartOutlined />,\n  };\n\n  const menu = () => {\n    if (getAllNotificationState.isLoading)\n      return (\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '100px',\n          }}\n        >\n          <Spin />\n        </div>\n      );\n\n    if (\n      getAllNotificationState.done &&\n      getAllNotificationState.data &&\n      !getAllNotificationState.data[0]\n    ) {\n      return (\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '100px',\n          }}\n        >\n          <Empty title='No Notification found' />\n        </div>\n      );\n    }\n\n    return (\n      <div className='notificationListItemContainer'>\n        {getAllNotificationState.done &&\n          getAllNotificationState.data[0] &&\n          getAllNotificationState.data.map((item, index) => {\n            return (\n              <div\n                onClick={() => history.push(`/admin/${item.type}/${item.eventId}`)}\n                className='notificationListItemContainer__item'\n              >\n                <span className='notificationListItemContainer__item-icon'>\n                  {typeIcon[item['type']]}\n                </span>\n                <div className='notificationListItemContainer__item-info'>\n                  <h3>{item.heading}</h3>\n                  <h4>{item.text}</h4>\n                  <h2>\n                    {item.added &&\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\n                  </h2>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className='notificationList'>\n        <h3 className='notificationList__heading'>Notification</h3>\n        {menu()}\n      </div>\n    </>\n  );\n};\n\nexport default NotificationList;\n","import React, { useState } from 'react';\nimport { Checkbox, Row, Col } from 'antd';\ninterface Props {\n  checkedList?: any;\n  setCheckedList?: any;\n  plainOptions?: any;\n  defaultValue?: any;\n  checkAll?: any;\n  setCheckAll?: any;\n}\n\nconst AccessCheckbox = ({\n  checkedList,\n  setCheckedList,\n  plainOptions,\n  defaultValue = [],\n  checkAll,\n  setCheckAll,\n}: Props) => {\n  const [interminate, setInterminate] = useState(true);\n\n  const onChange = (checkedList) => {\n    setCheckedList(checkedList);\n    setInterminate(\n      !!checkedList.length && checkedList.length < plainOptions.length\n    );\n    setCheckAll(checkedList.length === plainOptions.length);\n  };\n\n  const onCheckAllChange = (e) => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setInterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  console.log('defaultValue', defaultValue);\n\n  return (\n    <>\n      <div\n        style={{\n          borderBottom: '1px solid #eee',\n          marginBottom: '10px',\n        }}\n        className='site-checkbox-all-wrapper'\n      >\n        <Checkbox\n          style={{\n            marginBottom: '10px',\n          }}\n          // indeterminate={interminate}\n          onChange={onCheckAllChange}\n          checked={checkAll}\n        >\n          Super Admin\n        </Checkbox>\n      </div>\n      <Checkbox.Group\n        style={{ width: '100%' }}\n        value={checkedList}\n        defaultValue={defaultValue}\n        onChange={onChange}\n      >\n        <Row>\n          {plainOptions.map((accessItem) => {\n            return (\n              <Col\n                style={{\n                  marginBottom: '10px',\n                }}\n                span={8}\n              >\n                <Checkbox value={accessItem}>{accessItem}</Checkbox>\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nexport default AccessCheckbox;\n","import { combineReducers } from 'redux';\nimport * as types from './types';\nimport { createReducer } from '../../utils';\n\n/* State shape\n{\n    isAuthenticated: bool,\n    redirectAfterLogin: string\n}\n*/\n\nconst globalState = createReducer({})({\n  [types.SAVE_CREDENTIALS]: (state, action) => {\n    const credentials = action.payload;\n    return credentials;\n  },\n});\n\nexport default globalState; ","export const SAVE_CREDENTIALS = \"credentials/SAVE_CREDENTIALS\";\n","import * as types from \"./types\";\n\nexport const saveCredentials = (roles) => ({\n    type: types.SAVE_CREDENTIALS,\n    payload: roles\n});\n","import reducer from \"./reducers\";\n\nimport * as credentialsOperations from \"./operations\";\n\nexport {\n    credentialsOperations,\n};\n\nexport default reducer;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport AccessCheckbox from './AccessCheckbox';\n\n// import state\nimport { glboalOperations } from '../../state/ducks/globalState';\nimport { credentialsOperations } from '../../state/ducks/credentials';\nimport { connect } from 'react-redux';\nimport { isAccess } from '../../utils';\nimport { credentials } from '../../state/ducks';\n\nconst validationSchema = Yup.object().shape({\n  // \tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n  //     phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //    password: Yup.string()\n  //     .label('Password')\n  //     .required()\n  //     .min(6, 'Password must have at least 6 characters'),\n  //   passwordConfirmation: Yup.string()\n  //     .label('Confirm password')\n  //     .required()\n  //     .min(6, 'Confirm password must have at least 6 characters')\n  //     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst plainOptions = [\n  'getCatalogue',\n  'postCatalogue',\n  'getDelivery',\n  'postDelivery',\n  'getOrder',\n  'postOrder',\n  'getBlog',\n  'postBlog',\n  'getPage',\n  'postPage',\n  'analytics',\n  'accounts',\n  'getDealer',\n  'postDealer',\n];\n\ninterface Props {\n  category: any;\n  setvisible: any;\n  visible: any;\n  tagList: any;\n  setTagList: any;\n  saveRoles?: any;\n  roles;\n  credentials;\n  saveCredentials;\n}\n\nconst QuickEdit = ({\n  category,\n  setvisible,\n  visible,\n  tagList,\n  setTagList,\n  saveRoles,\n  roles,\n  saveCredentials,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateAdminRole'\n  );\n  const [checkAll, setCheckAll] = useState(false);\n\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n\n  useEffect(() => {\n    if (category.role && category.role.length > 0) {\n      if (category.role.includes('superAdmin')) {\n        setCheckAll(true);\n        setAccessCheckedList([...plainOptions]);\n      } else {\n        setAccessCheckedList([...category.role]);\n      }\n    }\n  }, [category]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    console.log('adminValues', values);\n\n    let roles = [...accesscheckedList];\n    if (checkAll) {\n      roles = ['superAdmin'];\n    }\n\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: category._id,\n        },\n      },\n      body: {\n        name: values.name,\n        access: roles,\n        phone: values.phone,\n        password: values.password,\n        password2: values.passwordConfirmation,\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      openSuccessNotification();\n      setvisible(false);\n\n      const positionInTag = () => {\n        return tagList.map((item) => item._id).indexOf(category._id);\n      };\n\n      console.log('updateTagRes', updateTagRes);\n\n      // if(updateTagRes['role']){\n      // \tif(updateTagRes['_id'] === credentials['_id']){\n      // \t\tsaveRoles(updateTagRes['role'])\n      // \t}\n      // }\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        // @ts-ignore\n        ...updateTagRes,\n        _id: category._id,\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      console.log('updateTagList', updateTagList);\n      setTagList(updateTagList);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  useEffect(() => {\n    if (!updateTagState['isLoading']) {\n      const error = updateTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !updateTagState['isLoading'] &&\n      Object.keys(updateTagState.data).length > 0\n    ) {\n      if (updateTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [updateTagState]);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          {console.log('errors', errors)}\n          <Modal\n            title='Edit Admin'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Title'\n              value={values.name}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Select Admin Access</h3>\n\n            <AccessCheckbox\n              defaultValue={category.role}\n              checkAll={checkAll}\n              setCheckAll={setCheckAll}\n              plainOptions={plainOptions}\n              checkedList={accesscheckedList}\n              setCheckedList={setAccessCheckedList}\n            />\n\n            <div\n              style={{\n                marginTop: '20px',\n                marginBottom: '20px',\n              }}\n            >\n              <div\n                style={{\n                  borderBottom: '1px solid #eee',\n                  marginBottom: '15px',\n                  marginTop: '15px',\n                }}\n              >\n                <h3 className='inputFieldLabel'>\n                  Phone and password is required to update admin *\n                </h3>\n              </div>\n\n              <Input\n                label='Phone'\n                value={values.phone}\n                name='phone'\n                isError={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting && updateTagState.error['error']['phone'])\n                }\n                errorString={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting && updateTagState.error['error']['phone'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('phone');\n                }}\n              />\n\n              <Input\n                label='Password'\n                value={values.password}\n                name='password'\n                type='password'\n                isError={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && updateTagState.error['error']['password'])\n                }\n                errorString={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && updateTagState.error['error']['password'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('password');\n                }}\n              />\n\n              <Input\n                label='Confirm Password'\n                value={values.passwordConfirmation}\n                name='passwordConfirmation'\n                type='password'\n                isError={\n                  (touched.passwordConfirmation &&\n                    errors.passwordConfirmation) ||\n                  (!isSubmitting && updateTagState.error['error']['password2'])\n                }\n                errorString={\n                  (touched.passwordConfirmation &&\n                    errors.passwordConfirmation) ||\n                  (!isSubmitting && updateTagState.error['error']['password2'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('passwordConfirmation');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nconst mapDispathToProps = {\n  saveRoles: glboalOperations.saveRoles,\n  saveCredentials: credentialsOperations.saveCredentials,\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n  credentials: state.credentials,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispathToProps)(QuickEdit);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport AccessCheckbox from './AccessCheckbox';\n\nconst validationSchema = Yup.object().shape({\n  //     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n  //     phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //    password: Yup.string()\n  //     .label('Password')\n  //     .required(),\n  //   passwordConfirmation: Yup.string()\n  //     .label('Confirm password')\n  //     .required()\n  //     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  phone: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  access: [],\n};\n\nconst plainOptions = [\n  'getCatalogue',\n  'postCatalogue',\n  'getDelivery',\n  'postDelivery',\n  'getOrder',\n  'postOrder',\n  'getBlog',\n  'postBlog',\n  'getPage',\n  'postPage',\n  'analytics',\n  'accounts',\n  'getDealer',\n  'postDealer',\n];\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewAdminRoles = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch(\n    {},\n    'adminRoleRegister'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    let roles = [...accesscheckedList];\n    if (checkAll) {\n      roles = ['superAdmin'];\n    }\n    const addTagRes = await handleAddTagFetch({\n      body: {\n        name: values.name.trim(),\n        email: values.email.trim(),\n        phone: values.phone,\n        password: values.password,\n        password2: values.passwordConfirmation,\n        access: roles,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      // openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n        },\n      ]);\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        openSuccessNotification('Admin Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !values.phone ||\n      !values.password ||\n      !values.passwordConfirmation ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Register New Admin'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='Phone'\n              value={values.phone}\n              name='phone'\n              isError={\n                (touched.phone && errors.phone) ||\n                (!isSubmitting && addTagState.error['error']['phone'])\n              }\n              errorString={\n                (touched.phone && errors.phone) ||\n                (!isSubmitting && addTagState.error['error']['phone'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('phone');\n              }}\n            />\n\n            <Input\n              label='Email'\n              value={values.email}\n              name='email'\n              isError={\n                (touched.email && errors.email) ||\n                (!isSubmitting && addTagState.error['error']['email'])\n              }\n              errorString={\n                (touched.email && errors.email) ||\n                (!isSubmitting && addTagState.error['error']['email'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('email');\n              }}\n            />\n\n            <Input\n              label='Password'\n              value={values.password}\n              name='password'\n              type='password'\n              isError={\n                (touched.password && errors.password) ||\n                (!isSubmitting && addTagState.error['error']['password'])\n              }\n              errorString={\n                (touched.password && errors.password) ||\n                (!isSubmitting && addTagState.error['error']['password'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('password');\n              }}\n            />\n\n            <Input\n              label='Confirm Password'\n              value={values.passwordConfirmation}\n              name='passwordConfirmation'\n              type='password'\n              isError={\n                (touched.passwordConfirmation && errors.passwordConfirmation) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['passwordConfirmation'])\n              }\n              errorString={\n                (touched.passwordConfirmation && errors.passwordConfirmation) ||\n                (!isSubmitting && addTagState.error['error']['password2'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('passwordConfirmation');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Select Admin Access</h3>\n\n            <AccessCheckbox\n              checkAll={checkAll}\n              setCheckAll={setCheckAll}\n              plainOptions={plainOptions}\n              checkedList={accesscheckedList}\n              setCheckedList={setAccessCheckedList}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewAdminRoles;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Tag,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport AddNewAdmin from './AddNewAdmin';\n\nimport { connect } from 'react-redux';\nimport { isAccess } from '../../utils';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList, roles }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteAdmin'\n  );\n\n  useEffect(() => {\n    if (!deleteTagState['isLoading']) {\n      const error = deleteTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !deleteTagState['isLoading'] &&\n      Object.keys(deleteTagState.data).length > 0\n    ) {\n      if (deleteTagState['data']['status'] === 'ok') {\n        openSuccessNotification('Admin Deleted!');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [deleteTagState]);\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      // openSuccessNotification('Deleted Admin');\n      const newtagList = data.filter((item) => item._id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // history.push(`/admin/tag/${record.id}`)\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  //   cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Email'\n          dataIndex='email'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Phone'\n          dataIndex='phone'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={250}\n          title='Roles'\n          dataIndex='role'\n          key='role'\n          className='classnameofthecolumn'\n          render={(tags) => (\n            <>\n              {tags &&\n                tags.length > 0 &&\n                tags.map((tag) => (\n                  <Tag\n                    style={{\n                      borderRadius: '5px',\n                      marginBottom: '5px',\n                    }}\n                    color='blue'\n                    key={tag}\n                  >\n                    {tag}\n                  </Tag>\n                ))}\n\n              {/* {tags && tags.length === 3 && '.......'} */}\n            </>\n          )}\n        />\n\n        {isAccess('superAdmin', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Admin'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteTag(record._id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setvisible={setvisible}\n          visible={visible}\n          category={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst TagList = ({ roles }: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n      actions.resetForm();\n    }\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  console.log('adminListState', tagState);\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Admins</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search admins..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n\n          {isAccess('superAdmin', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable roles={roles} setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '150px',\n              }}\n            >\n              <Empty\n                description='No Admin found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewAdmin\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(TagList);\n","import React, { useState } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n  description: Yup.string()\n    .label('Description')\n    .required('Description is required'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  tagEditVisible?: any;\n  setTagEditVisible?: any;\n  tagDetailData?: any;\n  setTagDetailData?: any;\n}\n\nconst QuickEdit = ({\n  tagEditVisible,\n  setTagEditVisible,\n  tagDetailData,\n  setTagDetailData,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateTag'\n  );\n  const [checkAll, setCheckAll] = useState(false);\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      setTagDetailData({\n        id: values.id,\n        key: values.id,\n        name: values.name,\n        description: values.description,\n      });\n      openSuccessNotification();\n\n      // const positionInTag = () => {\n      //     return tagList.map(item => item.id).indexOf(category.id);\n      // }\n\n      // const index = positionInTag();\n\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n      // setTagList(updateTagList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n    setTagEditVisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setTagEditVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !values.description || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...tagDetailData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            title='Admin Edit'\n            visible={tagEditVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Title'\n              value={values.name}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport AdminEdit from \"./AdminEdit\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const tagDetailRes =  await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(tagDetailRes){\n                console.log('tagDetailRes',tagDetailRes);\n                // @ts-ignore\n                setTagDetailData(tagDetailRes);\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n    useEffect(() => {\n        const getTagProducts = async () => {\n            await handleTagProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            })\n        };\n\n        getTagProducts();\n\n    }, [tagId]);\n\n\n\n\n    console.log('tagProductsState', tagProductsState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Admin Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <AdminEdit\n                            tagEditVisible={tagEditVisible}\n                            setTagEditVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['url'] && (\n                                <h3>\n                                    URL:\n                                    <span>\n                                        {tagDetailData['url']}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>   \n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","import React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { Button, Tag, Input, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { CheckableTag } = Tag;\nconst { Search } = Input;\n\ninterface Props {\n  setTagIds?: any;\n  selectedTags?: any;\n  setSelectedTags?: any;\n}\n\nconst Tags = ({ setTagIds, setSelectedTags, selectedTags }: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedOpions, setselectedOptions] = useState([]);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\n  const [searchValue, setsearchValue] = useState('');\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked\n      ? [...selectedTags, tag]\n      : selectedTags.filter((t) => t !== tag);\n    setSelectedTags(nextSelectedTags);\n\n    if (\n      tagState.done &&\n      tagState.data.length > 0 &&\n      nextSelectedTags.length > 0\n    ) {\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\n        );\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n      setTagIds(selectedCategoryIds);\n    }\n  };\n\n  useEffect(() => {\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\n      const selectedCategoryIds = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find((cat) => cat.id === item);\n        if (selectedcategory) {\n          return selectedcategory.name;\n        }\n      });\n      setSelectedTags(selectedCategoryIds);\n    }\n  }, [tagState]);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tagListRes = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: false,\n          },\n        },\n      });\n\n      // @ts-ignoref\n      if (tagListRes && tagListRes.length > 0) {\n        // @ts-ignore\n        const tagOptions = tagListRes.map((tag) => {\n          return tag.name;\n        });\n        setoptions(tagOptions);\n      }\n    };\n\n    setTags();\n  }, []);\n\n  // const handleChange = (selectItems) => {\n  //   setselectedOptions(selectItems)\n\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n  //     const selectedCategoryIds = selectItems.map((item) => {\n  //       const selectedcategory = tagState.data.find(\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\n  //       );\n  //       if (selectedcategory) {\n  //         return selectedcategory.id;\n  //       }\n  //     });\n  //     setTagIds(selectedCategoryIds);\n  //   }\n\n  // }\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (tagState.data && tagState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = tagState.data.map((cat) => cat.name);\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n              return option.toLowerCase().includes(searchValue.toLowerCase());\n            })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('selectedTags', selectedTags);\n\n  return (\n    <>\n      {tagState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {tagState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'90%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder='top, hot'\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {tagState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No tags found' height={100} />\n        </div>\n      )}\n\n      {/* \n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\n        mode=\"multiple\"\n        placeholder=\"search tags\"\n        value={selectedOpions}\n        onChange={handleChange}\n        style={{ width: '100%' }}\n      >\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\n          <Select.Option key={item} value={item}>\n            {item}\n          </Select.Option>\n        ))}\n      </Select>} */}\n\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\n        <>\n          {options.map((tag) => (\n            <>\n              <CheckableTag\n                key={tag}\n                checked={selectedTags.indexOf(tag) > -1}\n                onChange={(checked) => handleChange(tag, checked)}\n              >\n                {tag}\n              </CheckableTag>\n            </>\n          ))}\n        </>\n      )}\n\n      {/* \n      <div style={{\n        marginTop: '15px'\n      }}>\n\n      </div>\n      <Button\n\n        // type=\"primary\"\n        className='btnSecondaryPlusOutline'\n        icon={<PlusOutlined />}\n      >\n        Add New\n      </Button> */}\n    </>\n  );\n};\n\nexport default Tags;\n","import React, { useState, useEffect } from 'react';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Input, Tree, Button, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Search } = Input;\n\ninterface Props {\n  setcategoryIds?: any;\n  categoryOptions?: any;\n  setCategoryOptions?: any;\n}\n\nconst Categories = ({\n  setcategoryIds,\n  categoryOptions,\n  setCategoryOptions,\n}: Props) => {\n  const [options, setoptions] = useState([]);\n  const [searchValue, setsearchValue] = useState('');\n\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'postSelectCategoryList'\n  );\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categoryListRes = await handleCategoryListFetch({});\n\n      // @ts-ignore\n      if (categoryListRes && categoryListRes.length > 0) {\n        // @ts-ignore\n        setoptions(categoryListRes);\n      }\n    };\n\n    setCategories();\n  }, []);\n\n  const onSelect = (selectedKeys, info) => {\n    // console.log('selectedKeys', selectedKeys, info);\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    const checkedIds = checkedKeys.checked || [];\n    setcategoryIds(checkedIds);\n    setCategoryOptions(checkedIds);\n  };\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (categoryState.data && categoryState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = categoryState.data.map((cat) => {\n          return {\n            ...cat,\n          };\n        });\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n              return (\n                option &&\n                option.title.toLowerCase().includes(searchValue.toLowerCase())\n              );\n            })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('categoryState', categoryState);\n  console.log('optionsCat', options);\n\n  return (\n    <div className='addProduct__categoryBoxContainer'>\n      {categoryState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {categoryState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'100%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder=''\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {categoryState.done &&\n        categoryState.data.length > 0 &&\n        options.length > 0 && (\n          <>\n            <div\n              style={\n                {\n                  // marginLeft: \"-20px\",\n                }\n              }\n            >\n              {options.length > 0 && (\n                <Tree\n                  checkable\n                  checkedKeys={categoryOptions}\n                  onSelect={onSelect}\n                  onCheck={onCheck}\n                  treeData={options}\n                  defaultExpandAll={true}\n                  checkStrictly={true}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n      {categoryState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No category found' height={100} />\n        </div>\n      )}\n\n      {/* <div style={{\n\t\t\t\tmarginTop: '15px'\n\t\t\t}}>\n\n\t\t\t</div>\n\t\t\t<Button\n\n\t\t\t\t// type=\"primary\"\n\t\t\t\tclassName='btnSecondaryPlusOutline'\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t>\n\t\t\t\tAdd New\n      </Button> */}\n\n      {/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\nimport Empty from \"../../components/Empty\";\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\n\n    useEffect(() => {\n        const setTags = async () => {\n            const tagListRes = await handleTagListFetch({\n                urlOptions: {\n                    params: {\n                        isSubCategory: false\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if (tagListRes && tagListRes.length > 0) {\n                // @ts-ignore\n                const tagOptions = tagListRes.map((tag) => {\n                    return tag.name\n                });\n                setoptions(tagOptions);\n            }\n\n        };\n\n        setTags();\n    }, []);\n\n\n\n    useEffect(() => {\n        if(productIds && productIds.length > 0){\n            console.log('shippingRunning')\n            const selecttedOptions = productIds.map(item => item.name); \n            setselectedOptions(selecttedOptions)\n        }\n    },[productIds]); \n\n    console.log('OrderProudctItemsProductIds',productIds); \n\n\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n\n        console.log('selectedProducts', selectItems);\n\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = tagState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n            console.log('selectedCategoryIds', selectedCategoryIds);\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n\n\n    }\n\n\n    // console.log('selectedOpions', selectedOpions);\n\n\n    return (\n        <>\n\n            <Skeleton loading={tagState.isLoading}>\n                {tagState.done && tagState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Found' height={150} />\n                    </div>\n                )}\n\n            </Skeleton>\n\n\n        </>\n    )\n}\n\nexport default Tags\n","import React from 'react'\n\n\n// import components\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\nimport Empty from \"../../components/Empty\";\n\nimport {\n    ShopOutlined\n} from '@ant-design/icons';\n\n\ninterface Props {\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({\n    setProductList,\n    productList\n}: Props) => {\n    return (\n        <div\n            style={{\n                // @ts-ignore\n                flexDirection: 'flex'\n            }}\n            className='addOrderContainer__container-orderSummary'>\n            <div className='addOrderContainer__container-productItemContainer'>\n                {productList && productList.length > 0 && productList.map(item => {\n                    return <AddNewOrderProductItem\n                        setProductList={setProductList}\n                        productList={productList}\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                {!(productList.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Added' height={150} />\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default AddNewOrderSummary\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport MetaTags from '../category/MetaTags';\n\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport SelectProducts from './SelectProducts';\nimport SelectedProductItems from './SelectedProductItems';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  url: '',\n  preparationTime: '',\n  servingSize: '',\n  cookingTime: '',\n  body: '',\n  bnName: '',\n  bnBody: '',\n  bnPreparationTime: '',\n  bnServingSize: '',\n  bnCookingTime: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  productList?: any;\n  setProductList?: any;\n  productDetailData?: any;\n}\n\nconst ModalComponentChild = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList: bundleList,\n  setProductList: setBundleList,\n  productDetailData,\n}) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'updatePost'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'postDetail'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [body, setBody] = useState('');\n  const [bnBody, setBnBody] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  console.log('myPostState', productDetailState);\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id,\n          },\n          params: {\n            imageValue: 1,\n            tagsOne: '1',\n            categoryOne: '1',\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  console.log('myLoadImages', myImages);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      // openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      console.log('5555', productDetailState);\n      const productDetailData = productDetailState.data;\n      if (productDetailData && productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const tagNames = productDetailData.tags.map((item) => item.name);\n        const tagIds = productDetailData.tags.map((item) => item._id);\n        console.log('tags55----', tagNames, tagIds);\n        setSelectedTags(tagNames);\n        setTagIds(tagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category;\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (productDetailData && productDetailData.body) {\n        setBody(productDetailData.body);\n      } else {\n        setBody('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['body']\n      ) {\n        setBnBody(productDetailData.bn['body']);\n      } else {\n        setBnBody('');\n      }\n    }\n  }, [productDetailState]);\n\n  console.log('postSelectedTagsIds', selectedTags);\n  console.log('TagsIds', tagIds);\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState['data'] &&\n      Object.keys(productDetailState['data']).length > 0 && [\n        'requiredProducts',\n      ] &&\n      productDetailState['data']['requiredProducts'].length > 0\n    ) {\n      const productIds = productDetailState['data']['requiredProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = productDetailState['data']['requiredProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [productDetailState]);\n\n  console.log('couponDetialQuickEdit', productDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds =\n      myImages && myImages[0]\n        ? // @ts-ignore\n          myImages.map((image) => {\n            return image.id;\n          })\n        : [];\n\n    const products =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addProductRes = await handleAddProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        category: categoryOptions,\n        tags: tagIds,\n        image: imagesIds,\n        body: body,\n        requiredProducts: products,\n        preparationTime: values.preparationTime,\n        servingSize: values.servingSize,\n        cookingTime: values.cookingTime,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          preparationTime: values.bnPreparationTime,\n          body: bnBody,\n          servingSize: values.bnServingSize,\n          cookingTime: values.bnCookingTime,\n        },\n      },\n    });\n\n    console.log('addProductRes', addProductRes);\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Recipe Updated');\n\n      const positionInTag = () => {\n        return bundleList.map((item) => item.id).indexOf(productDetailData.id);\n      };\n\n      const index = positionInTag();\n\n      const getCover = (id) => {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      };\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, bundleList[index], {\n        ...addProductRes,\n        id: addProductRes['id'] || '',\n        key: addProductRes['id'] || '',\n        name: values.name.trim() || '',\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...bundleList.slice(0, index),\n        updatedItem,\n        ...bundleList.slice(index + 1),\n      ];\n      setBundleList(updateTagList);\n\n      setAddNewCategoryVisible(false);\n\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      setBnBody('');\n      setBody('');\n      setMetaTags([]);\n      setBnMetaTags([]);\n      setProductIds([]);\n      setProductList([]);\n      actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n    setmyImages([]);\n    setCoverImageId('');\n    setPricing([]);\n    setTagIds([]);\n    setSelectedTags([]);\n    setBrandId('');\n    setcategoryIds([]);\n    setCategoryOptions([]);\n    setBnBody('');\n    setBody('');\n    setMetaTags([]);\n    setBnMetaTags([]);\n    setProductIds([]);\n    setProductList([]);\n  };\n\n  useEffect(() => {\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const metaTags =\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        productDetailData.bn &&\n        productDetailData.bn['metaTags'] &&\n        productDetailData.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...{\n          ...productDetailData,\n          ...(productDetailState['data'] &&\n            Object.keys(productDetailState['data']).length > 0 &&\n            productDetailState['data']['bn'] && {\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n              bnMetaDescription:\n                productDetailState['data']['bn'].metaDescription,\n              bnName: productDetailState['data']['bn'].name,\n              metaUnit: productDetailState['data']['bn'].unit,\n              bnDescription: productDetailState['data']['bn'].description,\n            }),\n        },\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <section className='addProductGridContainer'>\n            <div className='addProductGridContainer__left'>\n              <div className='addProductGridContainer__name'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Recipe Information</h3>\n\n                  <div\n                    className={\n                      values.name && values.name.length > 2\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Name'\n                    placeHolder='Rafti oxy'\n                    value={values.name}\n                    name='name'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Name'\n                    value={values.bnName}\n                    placeHolder={'রাফতি অক্স'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n\n                  <Input\n                    label='Preparation Time'\n                    value={values.preparationTime}\n                    placeHolder='15 min'\n                    name='preparationTime'\n                    isError={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    errorString={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('preparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Preparation Time'\n                    value={values.bnPreparationTime}\n                    placeHolder={'১৫ মিনিট'}\n                    name='bnPreparationTime'\n                    isError={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    errorString={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnPreparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Cooking Time'\n                    placeHolder={'30 min'}\n                    value={values.cookingTime}\n                    name='cookingTime'\n                    isError={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    errorString={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('cookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Cooking Time'\n                    placeHolder={'৩০ মিনিট'}\n                    value={values.bnCookingTime}\n                    name='bnCookingTime'\n                    isError={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    errorString={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnCookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Serving Size'\n                    value={values.servingSize}\n                    name='servingSize'\n                    isError={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    errorString={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('servingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Serving Size'\n                    value={values.bnServingSize}\n                    name='bnServingSize'\n                    isError={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    errorString={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnServingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='URL'\n                    value={values.url}\n                    name='url'\n                    isError={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    errorString={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('url');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={body}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={bnBody}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBnBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                  <div\n                    style={{\n                      marginBottom: '15px',\n                    }}\n                  ></div>\n                  {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__price'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Products</h3>\n\n                  <div\n                    className={\n                      pricing && pricing.length > 0\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__item-body'>\n                  <h3 className='inputFieldLabel'>Products</h3>\n                  <SelectProducts\n                    setProductIds={setProductIds}\n                    productIds={productIds}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>Selcted Products</h3>\n\n                  <SelectedProductItems\n                    productList={productList}\n                    setProductList={setProductList}\n                  />\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Image</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      'Click on the image to select cover image, By default 1st image is selected as cover'\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <div\n                  style={{\n                    padding: '10px',\n                  }}\n                  className='aboutToUploadImagesContainer'\n                >\n                  {productDetailState.isLoading && (\n                    <div\n                      style={{\n                        padding: '20px 0',\n                      }}\n                    >\n                      <Spin />\n                    </div>\n                  )}\n                  {productDetailState.done && (\n                    <>\n                      {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 &&\n                        myImages.map((image, index) => {\n                          return (\n                            <div className='aboutToUploadImagesContainer__item'>\n                              <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                  setCoverImageId(image.id);\n                                  handleSetImageAsThumnail(image);\n                                }}\n                              >\n                                <img src={image.cover} alt={image.alt} />\n                              </div>\n\n                              <span\n                                onClick={() => {\n                                  handleImagesDelete(image.id);\n                                  handleDetachSingleImage(image.id);\n                                }}\n                                className='aboutToUploadImagesContainer__item-remove'\n                              >\n                                <CloseOutlined />\n                              </span>\n\n                              {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              ) : (\n                                !coverImageId &&\n                                index === 0 && (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                )\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      <Tooltip title={'Attach images'}>\n                        <div\n                          onClick={() => {\n                            setvisible(true);\n                            setisModalOpenForImages(true);\n                            setisModalOpenForThumbnail(false);\n                          }}\n                          className='aboutToUploadImagesContainer__uploadItem'\n                        >\n                          {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                          <FileImageFilled />\n                          {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                            <PlusOutlined />\n                          </span>\n                        </div>\n                      </Tooltip>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Meta Data</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Meta title'\n                    value={values.metaTitle}\n                    placeHolder={'...'}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Meta title'\n                    value={values.bnMetaTitle}\n                    placeHolder={'...'}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setMetaTags}\n                    tags={metaTags}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnMetaTags}\n                    tags={bnMetaTags}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='addProductGridContainer__right'>\n              <div className='addProductGridContainer__category'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Categories</h3>\n\n                    <Tooltip\n                      color='red'\n                      visible={\n                        addProductState.error['error']['category'] &&\n                        !(categoryids.length > 0)\n                      }\n                      placement='left'\n                      title={'Select at least one category'}\n                    >\n                      <div\n                        className={\n                          !(categoryids.length > 0) &&\n                          !addProductState.error['error']['category']\n                            ? 'checkicon'\n                            : addProductState.error['error']['category']\n                            ? 'checkicon-error'\n                            : 'checkicon-active'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Categories\n                      setCategoryOptions={setCategoryOptions}\n                      categoryOptions={categoryOptions}\n                      setcategoryIds={setcategoryIds}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__tag'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Tags</h3>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Tags\n                      setSelectedTags={setSelectedTags}\n                      selectedTags={selectedTags}\n                      setTagIds={setTagIds}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <div\n            style={{\n              padding: '15px',\n              display: 'flex',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Button\n              style={{\n                color: '#555',\n                marginRight: '10px',\n              }}\n              className='btnPrimaryClassNameoutline-cancle'\n              onClick={() => setAddNewCategoryVisible(false)}\n              type='default'\n            >\n              Cancel\n            </Button>\n\n            <Button\n              className='btnPrimaryClassNameoutline'\n              onClick={handleSubmit}\n              loading={addProductState.isLoading}\n              type='link'\n              icon={<CheckOutlined />}\n            >\n              Update\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList: bundleList,\n  setProductList: setBundleList,\n  productDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        footer={false}\n        bodyStyle={{\n          margin: 0,\n          padding: 0,\n        }}\n        width={'70vw'}\n        title='Edit Recipe'\n        visible={addNewCategoryVisible}\n        // onOk={(e: any) => handleSubmit(e)}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n        okText='Update'\n        okButtonProps={{\n          // loading: isSubmitting,\n          htmlType: 'submit',\n        }}\n      >\n        <ModalComponentChild\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={bundleList}\n          bundleList={bundleList}\n          setBundleList={setBundleList}\n          productDetailData={productDetailData}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport MetaTags from '../category/MetaTags';\n\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport SelectProducts from './SelectProducts';\nimport SelectedProductItems from './SelectedProductItems';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  url: '',\n  preparationTime: '',\n  servingSize: '',\n  cookingTime: '',\n  body: '',\n  bnName: '',\n  bnBody: '',\n  bnPreparationTime: '',\n  bnServingSize: '',\n  bnCookingTime: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  productList?: any;\n  setProductList?: any;\n}\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList: bundleList,\n  setProductList: setBundleList,\n}: Props) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'addPost'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [body, setBody] = useState('');\n  const [bnBody, setBnBody] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [bnDescription, setBNDescription] = useState('এই পণ্য...');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n\n  const [price, setPrice] = useState({\n    regular: null,\n    offer: null,\n  });\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const products =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    const addProductRes = await handleAddProductFetch({\n      body: {\n        name: values.name.trim(),\n        category: categoryids,\n        tags: tagIds,\n        brand: [brandId],\n        image: imagesIds,\n        body: body,\n        requiredProducts: products,\n        preparationTime: values.preparationTime,\n        servingSize: values.servingSize,\n        cookingTime: values.cookingTime,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          preparationTime: values.bnPreparationTime,\n          body: bnBody,\n          servingSize: values.bnServingSize,\n          cookingTime: values.bnCookingTime,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Recipe Created');\n\n      setBundleList([\n        {\n          // @ts-ignore\n          ...addProductRes,\n          id: addProductRes['_id'] || '',\n          key: addProductRes['_id'] || '',\n          // name: addProductRes['name'] || '',\n          // cover: addProductRes['cover'] || '',\n        },\n        ...bundleList,\n      ]);\n\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      setBnBody('');\n      setBody('');\n      setMetaTags([]);\n      setBnMetaTags([]);\n      setProductIds([]);\n      setProductList([]);\n      actions.resetForm();\n\n      setAddNewCategoryVisible(false);\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !(pricing.length > 0) || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => {};\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleAddPricing = (priceItem) => {\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      addProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: 0,\n              padding: 0,\n            }}\n            width={'70vw'}\n            title='Add New Recipe'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Recipe Information</h3>\n\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name'\n                      placeHolder='Rafti oxy'\n                      value={values.name}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={'রাফতি অক্স'}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <Input\n                      label='Preparation Time'\n                      value={values.preparationTime}\n                      placeHolder='15 min'\n                      name='preparationTime'\n                      isError={\n                        (touched.preparationTime && errors.preparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['preparationTime'])\n                      }\n                      errorString={\n                        (touched.preparationTime && errors.preparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['preparationTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('preparationTime');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Preparation Time'\n                      value={values.bnPreparationTime}\n                      placeHolder={'১৫ মিনিট'}\n                      name='bnPreparationTime'\n                      isError={\n                        (touched.bnPreparationTime &&\n                          errors.bnPreparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnPreparationTime'])\n                      }\n                      errorString={\n                        (touched.bnPreparationTime &&\n                          errors.bnPreparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnPreparationTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnPreparationTime');\n                      }}\n                    />\n\n                    <Input\n                      label='Cooking Time'\n                      placeHolder={'30 min'}\n                      value={values.cookingTime}\n                      name='cookingTime'\n                      isError={\n                        (touched.cookingTime && errors.cookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['cookingTime'])\n                      }\n                      errorString={\n                        (touched.cookingTime && errors.cookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['cookingTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('cookingTime');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Cooking Time'\n                      placeHolder={'৩০ মিনিট'}\n                      value={values.bnCookingTime}\n                      name='bnCookingTime'\n                      isError={\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnCookingTime'])\n                      }\n                      errorString={\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnCookingTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnCookingTime');\n                      }}\n                    />\n\n                    <Input\n                      label='Serving Size'\n                      value={values.servingSize}\n                      name='servingSize'\n                      isError={\n                        (touched.servingSize && errors.servingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['servingSize'])\n                      }\n                      errorString={\n                        (touched.servingSize && errors.servingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['servingSize'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('servingSize');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Serving Size'\n                      value={values.bnServingSize}\n                      name='bnServingSize'\n                      isError={\n                        (touched.bnServingSize && errors.bnServingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnServingSize'])\n                      }\n                      errorString={\n                        (touched.bnServingSize && errors.bnServingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnServingSize'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnServingSize');\n                      }}\n                    />\n\n                    <Input\n                      label='URL'\n                      value={values.url}\n                      name='url'\n                      isError={\n                        (touched.url && errors.url) ||\n                        (!isSubmitting && addProductState.error['error']['url'])\n                      }\n                      errorString={\n                        (touched.url && errors.url) ||\n                        (!isSubmitting && addProductState.error['error']['url'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('url');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Body</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={body}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBody(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Body</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={bnBody}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBnBody(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                    <div\n                      style={{\n                        marginBottom: '15px',\n                      }}\n                    ></div>\n                    {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__price'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Products</h3>\n\n                    <div\n                      className={\n                        pricing && pricing.length > 0\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__item-body'>\n                    <h3 className='inputFieldLabel'>Products</h3>\n                    <SelectProducts\n                      setProductIds={setProductIds}\n                      productIds={productIds}\n                    />\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\n\n                    <SelectedProductItems\n                      productList={productList}\n                      setProductList={setProductList}\n                    />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <div className='aboutToUploadImagesContainer'>\n                      {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 &&\n                        myImages.map((image, index) => {\n                          return (\n                            <div className='aboutToUploadImagesContainer__item'>\n                              <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => setCoverImageId(image.id)}\n                              >\n                                <img src={image.cover} alt={image.alt} />\n                              </div>\n\n                              <span\n                                onClick={() => handleImagesDelete(image.id)}\n                                className='aboutToUploadImagesContainer__item-remove'\n                              >\n                                <CloseOutlined />\n                              </span>\n\n                              {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              ) : (\n                                !coverImageId &&\n                                index === 0 && (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                )\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      <Tooltip title={'Attach images'}>\n                        <div\n                          onClick={() => {\n                            setvisible(true);\n                            setisModalOpenForImages(true);\n                            setisModalOpenForThumbnail(false);\n                          }}\n                          className='aboutToUploadImagesContainer__uploadItem'\n                        >\n                          {/* <FileAddOutlined />\n                                                        <FileImageTwoTone />\n                                                        <FileImageOutlined /> */}\n                          <FileImageFilled />\n                          {/* <h5>\n                                                                        Select From Library\n                                                                <     /h5> */}\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                            <PlusOutlined />\n                          </span>\n                        </div>\n                      </Tooltip>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Meta Data</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Meta title'\n                      value={values.metaTitle}\n                      placeHolder={'...'}\n                      name='metaTitle'\n                      isError={\n                        (touched.metaTitle && errors.metaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaTitle'])\n                      }\n                      errorString={\n                        (touched.metaTitle && errors.metaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaTitle'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('metaTitle');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Meta title'\n                      value={values.bnMetaTitle}\n                      placeHolder={'...'}\n                      name='bnMetaTitle'\n                      isError={\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaTitle'])\n                      }\n                      errorString={\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaTitle'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnMetaTitle');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Meta description'\n                      value={values.metaDescription}\n                      placeholder={'meta...'}\n                      name='metaDescription'\n                      isError={\n                        (touched.metaDescription && errors.metaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaDescription'])\n                      }\n                      errorString={\n                        (touched.metaDescription && errors.metaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('metaDescription');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Meta Description'\n                      value={values.bnMetaDescription}\n                      placeholder={'এইয় মেট...'}\n                      name='bnMetaDescription'\n                      isError={\n                        (touched.bnMetaDescription &&\n                          errors.bnMetaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaDescription'])\n                      }\n                      errorString={\n                        (touched.bnMetaDescription &&\n                          errors.bnMetaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnMetaDescription');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                    <MetaTags\n                      // @ts-ignore\n                      setTags={setMetaTags}\n                      tags={metaTags}\n                    />\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                    <MetaTags\n                      // @ts-ignore\n                      setTags={setBnMetaTags}\n                      tags={bnMetaTags}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Recipe Categories</h3>\n\n                      <Tooltip\n                        color='red'\n                        visible={\n                          addProductState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addProductState.error['error']['category']\n                              ? 'checkicon'\n                              : addProductState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Categories\n                        setCategoryOptions={setCategoryOptions}\n                        categoryOptions={categoryOptions}\n                        setcategoryIds={setcategoryIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__tag'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Recipe Tags</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Tags\n                        setSelectedTags={setSelectedTags}\n                        selectedTags={selectedTags}\n                        setTagIds={setTagIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport Moment from 'react-moment';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ProductBundleQuickEdit from './PostQuickEdit';\nimport AddNewProductBundle from './AddNewPost';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deletePost'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Recipe');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/posts/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/posts/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Preparation Time'\n          dataIndex='preparationTime'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Cooking Time'\n          dataIndex='cookingTime'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='People'\n          dataIndex='servingSize'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit recipe'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <ProductBundleQuickEdit\n          productList={data}\n          setProductList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          productDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\n\n  console.log('postListData', tagState);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Recipes</h2>\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search recipes..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Recipe found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewProductBundle\n        productList={tagList}\n        setProductList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport MetaTags from '../category/MetaTags';\n\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport SelectProducts from './SelectProducts';\nimport SelectedProductItems from './SelectedProductItems';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  url: '',\n  preparationTime: '',\n  servingSize: '',\n  cookingTime: '',\n  body: '',\n  bnName: '',\n  bnBody: '',\n  bnPreparationTime: '',\n  bnServingSize: '',\n  bnCookingTime: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  setPostDetailData?: any;\n  productDetailData?: any;\n}\n\nconst ModalComponentChild = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productDetailData,\n  setPostDetailData,\n}) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'updatePost'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'postDetail'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [body, setBody] = useState('');\n  const [bnBody, setBnBody] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  console.log('myPostState', productDetailState);\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id,\n          },\n          params: {\n            imageValue: 1,\n            tagsOne: '1',\n            categoryOne: '1',\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  console.log('myLoadImages', myImages);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      // openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      console.log('5555', productDetailState);\n      const productDetailData = productDetailState.data;\n      if (productDetailData && productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const tagNames = productDetailData.tags.map((item) => item.name);\n        const tagIds = productDetailData.tags.map((item) => item._id);\n        console.log('tags55----', tagNames, tagIds);\n        setSelectedTags(tagNames);\n        setTagIds(tagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category;\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (productDetailData && productDetailData.body) {\n        setBody(productDetailData.body);\n      } else {\n        setBody('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['body']\n      ) {\n        setBnBody(productDetailData.bn['body']);\n      } else {\n        setBnBody('');\n      }\n    }\n  }, [productDetailState]);\n\n  console.log('postSelectedTagsIds', selectedTags);\n  console.log('TagsIds', tagIds);\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState['data'] &&\n      Object.keys(productDetailState['data']).length > 0 && [\n        'requiredProducts',\n      ] &&\n      productDetailState['data']['requiredProducts'].length > 0\n    ) {\n      const productIds = productDetailState['data']['requiredProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = productDetailState['data']['requiredProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [productDetailState]);\n\n  console.log('couponDetialQuickEdit', productDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds =\n      myImages && myImages[0]\n        ? // @ts-ignore\n          myImages.map((image) => {\n            return image.id;\n          })\n        : [];\n\n    const products =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addProductRes = await handleAddProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        category: categoryOptions,\n        tags: tagIds,\n        image: imagesIds,\n        body: body,\n        requiredProducts: products,\n        preparationTime: values.preparationTime,\n        servingSize: values.servingSize,\n        cookingTime: values.cookingTime,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          preparationTime: values.bnPreparationTime,\n          body: bnBody,\n          servingSize: values.bnServingSize,\n          cookingTime: values.bnCookingTime,\n        },\n      },\n    });\n\n    console.log('addProductRes', addProductRes);\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Recipe Updated');\n\n      setPostDetailData({\n        ...addProductRes,\n        id: productDetailData['id'] || '',\n        key: productDetailData['id'] || '',\n        name: values.name || '',\n        // cover: addProductRes['cover']['cover'] || '',\n      });\n\n      setAddNewCategoryVisible(false);\n\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      setBnBody('');\n      setBody('');\n      setMetaTags([]);\n      setBnMetaTags([]);\n      setProductIds([]);\n      setProductList([]);\n      actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n    setmyImages([]);\n    setCoverImageId('');\n    setPricing([]);\n    setTagIds([]);\n    setSelectedTags([]);\n    setBrandId('');\n    setcategoryIds([]);\n    setCategoryOptions([]);\n    setBnBody('');\n    setBody('');\n    setMetaTags([]);\n    setBnMetaTags([]);\n    setProductIds([]);\n    setProductList([]);\n  };\n\n  useEffect(() => {\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const metaTags =\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        productDetailData.bn &&\n        productDetailData.bn['metaTags'] &&\n        productDetailData.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...{\n          ...productDetailData,\n          ...(productDetailState['data'] &&\n            Object.keys(productDetailState['data']).length > 0 &&\n            productDetailState['data']['bn'] && {\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n              bnMetaDescription:\n                productDetailState['data']['bn'].metaDescription,\n              bnName: productDetailState['data']['bn'].name,\n              metaUnit: productDetailState['data']['bn'].unit,\n              bnDescription: productDetailState['data']['bn'].description,\n            }),\n        },\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <section className='addProductGridContainer'>\n            <div className='addProductGridContainer__left'>\n              <div className='addProductGridContainer__name'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Recipe Information</h3>\n\n                  <div\n                    className={\n                      values.name && values.name.length > 2\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Name'\n                    placeHolder='Rafti oxy'\n                    value={values.name}\n                    name='name'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Name'\n                    value={values.bnName}\n                    placeHolder={'রাফতি অক্স'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n\n                  <Input\n                    label='Preparation Time'\n                    value={values.preparationTime}\n                    placeHolder='15 min'\n                    name='preparationTime'\n                    isError={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    errorString={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('preparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Preparation Time'\n                    value={values.bnPreparationTime}\n                    placeHolder={'১৫ মিনিট'}\n                    name='bnPreparationTime'\n                    isError={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    errorString={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnPreparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Cooking Time'\n                    placeHolder={'30 min'}\n                    value={values.cookingTime}\n                    name='cookingTime'\n                    isError={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    errorString={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('cookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Cooking Time'\n                    placeHolder={'৩০ মিনিট'}\n                    value={values.bnCookingTime}\n                    name='bnCookingTime'\n                    isError={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    errorString={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnCookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Serving Size'\n                    value={values.servingSize}\n                    name='servingSize'\n                    isError={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    errorString={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('servingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Serving Size'\n                    value={values.bnServingSize}\n                    name='bnServingSize'\n                    isError={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    errorString={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnServingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='URL'\n                    value={values.url}\n                    name='url'\n                    isError={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    errorString={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('url');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={body}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={bnBody}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBnBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                  <div\n                    style={{\n                      marginBottom: '15px',\n                    }}\n                  ></div>\n                  {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__price'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Products</h3>\n\n                  <div\n                    className={\n                      pricing && pricing.length > 0\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__item-body'>\n                  <h3 className='inputFieldLabel'>Products</h3>\n                  <SelectProducts\n                    setProductIds={setProductIds}\n                    productIds={productIds}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>Selcted Products</h3>\n\n                  <SelectedProductItems\n                    productList={productList}\n                    setProductList={setProductList}\n                  />\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Image</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      'Click on the image to select cover image, By default 1st image is selected as cover'\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <div\n                  style={{\n                    padding: '10px',\n                  }}\n                  className='aboutToUploadImagesContainer'\n                >\n                  {productDetailState.isLoading && (\n                    <div\n                      style={{\n                        padding: '20px 0',\n                      }}\n                    >\n                      <Spin />\n                    </div>\n                  )}\n                  {productDetailState.done && (\n                    <>\n                      {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 &&\n                        myImages.map((image, index) => {\n                          return (\n                            <div className='aboutToUploadImagesContainer__item'>\n                              <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                  setCoverImageId(image.id);\n                                  handleSetImageAsThumnail(image);\n                                }}\n                              >\n                                <img src={image.cover} alt={image.alt} />\n                              </div>\n\n                              <span\n                                onClick={() => {\n                                  handleImagesDelete(image.id);\n                                  handleDetachSingleImage(image.id);\n                                }}\n                                className='aboutToUploadImagesContainer__item-remove'\n                              >\n                                <CloseOutlined />\n                              </span>\n\n                              {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              ) : (\n                                !coverImageId &&\n                                index === 0 && (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                )\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      <Tooltip title={'Attach images'}>\n                        <div\n                          onClick={() => {\n                            setvisible(true);\n                            setisModalOpenForImages(true);\n                            setisModalOpenForThumbnail(false);\n                          }}\n                          className='aboutToUploadImagesContainer__uploadItem'\n                        >\n                          {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                          <FileImageFilled />\n                          {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                            <PlusOutlined />\n                          </span>\n                        </div>\n                      </Tooltip>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Meta Data</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Meta title'\n                    value={values.metaTitle}\n                    placeHolder={'...'}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Meta title'\n                    value={values.bnMetaTitle}\n                    placeHolder={'...'}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setMetaTags}\n                    tags={metaTags}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnMetaTags}\n                    tags={bnMetaTags}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='addProductGridContainer__right'>\n              <div className='addProductGridContainer__category'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Categories</h3>\n\n                    <Tooltip\n                      color='red'\n                      visible={\n                        addProductState.error['error']['category'] &&\n                        !(categoryids.length > 0)\n                      }\n                      placement='left'\n                      title={'Select at least one category'}\n                    >\n                      <div\n                        className={\n                          !(categoryids.length > 0) &&\n                          !addProductState.error['error']['category']\n                            ? 'checkicon'\n                            : addProductState.error['error']['category']\n                            ? 'checkicon-error'\n                            : 'checkicon-active'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Categories\n                      setCategoryOptions={setCategoryOptions}\n                      categoryOptions={categoryOptions}\n                      setcategoryIds={setcategoryIds}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__tag'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Tags</h3>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Tags\n                      setSelectedTags={setSelectedTags}\n                      selectedTags={selectedTags}\n                      setTagIds={setTagIds}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <div\n            style={{\n              padding: '15px',\n              display: 'flex',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Button\n              style={{\n                color: '#555',\n                marginRight: '10px',\n              }}\n              className='btnPrimaryClassNameoutline-cancle'\n              onClick={() => setAddNewCategoryVisible(false)}\n              type='default'\n            >\n              Cancel\n            </Button>\n\n            <Button\n              className='btnPrimaryClassNameoutline'\n              onClick={handleSubmit}\n              loading={addProductState.isLoading}\n              type='link'\n              icon={<CheckOutlined />}\n            >\n              Update\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productDetailData,\n  setPostDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        footer={false}\n        bodyStyle={{\n          margin: 0,\n          padding: 0,\n        }}\n        width={'70vw'}\n        title='Edit Recipe'\n        visible={addNewCategoryVisible}\n        // onOk={(e: any) => handleSubmit(e)}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n        okText='Update'\n        okButtonProps={{\n          // loading: isSubmitting,\n          htmlType: 'submit',\n        }}\n      >\n        <ModalComponentChild\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          setPostDetailData={setPostDetailData}\n          productDetailData={productDetailData}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n  Badge,\n} from 'antd';\n\n// import moment\nimport Moment from 'react-moment';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ProductBundleEdit from './PostEdit';\nimport CouponProducts from '../coupon/CouponProducts';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'postDetail'\n  );\n  const [postDetailData, setPostDetailData] = useState({});\n  const params = useParams();\n  const history = useHistory();\n  const productId = params['id'];\n\n  const [productEditVisible, setProductEditVisible] = useState(false);\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      const res = await handleProductDetailFetch({\n        urlOptions: {\n          params: {\n            categoryOne: '1',\n            tagsOne: '1',\n            imageValue: '1',\n          },\n          placeHolders: {\n            id: productId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setPostDetailData(res);\n      }\n    };\n\n    getProductDetail();\n  }, [productId]);\n\n  console.log('productDetailState', productDetailState);\n\n  console.log('brandParams', params);\n\n  const getImagesInCollumn = (imgs) => {\n    if (!imgs[0]) return false;\n    imgs = imgs.map((item) => item.cover);\n    const columns = {};\n\n    let localIndex = 0;\n    let columnNumber = 0;\n\n    imgs.forEach((item, index) => {\n      if (localIndex < 3) {\n        if (columns[columnNumber]) {\n          columns[columnNumber] = [...columns[columnNumber], item];\n        } else columns[columnNumber] = [item];\n\n        localIndex = localIndex + 1;\n        columnNumber = columnNumber + 1;\n      } else {\n        localIndex = 0;\n        columnNumber = 0;\n        console.log('localIndex', localIndex);\n      }\n    });\n\n    return columns;\n  };\n\n  const row =\n    productDetailState.done && postDetailData && postDetailData['image']\n      ? getImagesInCollumn(postDetailData['image'])\n      : [];\n\n  console.log('postDetailState', productDetailState);\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Recipe Detail</h3>\n\n        {productDetailState.done &&\n          postDetailData &&\n          Object.keys(postDetailData).length > 0 && (\n            <>\n              <ProductBundleEdit\n                productDetailData={postDetailData}\n                addNewCategoryVisible={productEditVisible}\n                setAddNewCategoryVisible={setProductEditVisible}\n                setPostDetailData={setPostDetailData}\n              />\n              <Button\n                onClick={() => setProductEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={productDetailState.isLoading}\n      >\n        {productDetailState.done &&\n          postDetailData &&\n          !(Object.keys(postDetailData).length > 0) && (\n            <Empty\n              description='No Recipe found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {productDetailState.done &&\n          postDetailData &&\n          Object.keys(postDetailData).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\n                  <img\n                    src={postDetailData['cover'] && postDetailData['cover']}\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{postDetailData['name']}</h2>\n                  <h4>{postDetailData['price']}</h4>\n                  <h3>{postDetailData['description']}</h3>\n\n                  {postDetailData['url'] && (\n                    <h3>\n                      URL:\n                      <span>{postDetailData['url']}</span>\n                    </h3>\n                  )}\n\n                  {postDetailData['preparationTime'] === 0 && (\n                    <h3>\n                      PREPARATION TIME:\n                      <span>{postDetailData['preparationTime']}</span>\n                    </h3>\n                  )}\n\n                  {postDetailData['cookingTime'] && (\n                    <h3>\n                      COOKING TIME:\n                      <span>{postDetailData['cookingTime']}</span>\n                    </h3>\n                  )}\n\n                  {postDetailData['servingSize'] && (\n                    <h3>\n                      PEOPLE:\n                      <span>{postDetailData['servingSize']}</span>\n                    </h3>\n                  )}\n                  {/* \n                                {postDetailData['tags'] && postDetailData['tags'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            TAGS:\n                                        {postDetailData['tags'].map(tag => {\n                                            return (\n                                                <span>\n                                                    {tag.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                } */}\n\n                  {postDetailData['category2'] &&\n                    postDetailData['category2'].length > 0 && (\n                      <>\n                        <h3>\n                          CATEGORIES:\n                          {postDetailData['category2'].map((cat) => {\n                            return (\n                              <span\n                                onClick={() =>\n                                  history.push(\n                                    `/admin/posts/category/${cat.id}`\n                                  )\n                                }\n                              >\n                                {cat.name}\n                              </span>\n                            );\n                          })}\n                        </h3>\n                      </>\n                    )}\n\n                  {postDetailData['tags'] && postDetailData['tags'].length > 0 && (\n                    <>\n                      <h3>\n                        TAGS:\n                        {postDetailData['tags'].map((cat) => {\n                          return (\n                            <span\n                              onClick={() =>\n                                history.push(`/admin/posts/tag/${cat._id}`)\n                              }\n                            >\n                              {cat.name}\n                            </span>\n                          );\n                        })}\n                      </h3>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              {productDetailState.done &&\n                postDetailData &&\n                Object.keys(postDetailData).length > 0 &&\n                postDetailData['products'] &&\n                postDetailData['products'].length > 0 && (\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Products</h3>\n                  </div>\n                )}\n\n              <div className='brandDetailContainer__body'>\n                {productDetailState.done &&\n                  postDetailData &&\n                  postDetailData['products'] &&\n                  !(postDetailData['products'].length > 0) && (\n                    <div\n                      style={{\n                        marginTop: '100px',\n                      }}\n                    >\n                      <Empty\n                        description='No Products exists for this Recipe'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    </div>\n                  )}\n\n                {productDetailState.done &&\n                  postDetailData &&\n                  Object.keys(postDetailData).length > 0 && (\n                    <>\n                      {postDetailData['products'] &&\n                        postDetailData['products'].length > 0 &&\n                        postDetailData['products'].map((product) => {\n                          return (\n                            <CouponProducts\n                              quantity={product.quantity}\n                              productId={product['_id']}\n                            />\n                          );\n                        })}\n                    </>\n                  )}\n              </div>\n\n              {postDetailData['image'] && postDetailData['image'].length > 0 && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Image Gallary</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__imageGallary'>\n                    <div className='imgGallaryContainer'>\n                      <div className='imgGallary-row'>\n                        {row &&\n                          Object.keys(row).map((column) => {\n                            return (\n                              <div className='imgGallary-column'>\n                                {row[column] &&\n                                  row[column].map((img) => {\n                                    return (\n                                      <img\n                                        src={img}\n                                        style={{\n                                          width: '100%',\n                                        }}\n                                      />\n                                    );\n                                  })}\n                              </div>\n                            );\n                          })}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n            </>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport MetaTags from '../../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagDetailData?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagDetailData,\n  setTagList,\n  tagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        // metaTitle: values.metaTitle,\n        // metaDescription: values.metaDescription,\n        // metaTags: tags.join(','),\n\n        bn: {\n          //   metaTitle: values.bnMetaTitle,\n          //   metaDescription: values.bnMetaDescription,\n          //   metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      const positionInTag = () => {\n        return tagList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        ...tagDetailData,\n        // @ts-ignore\n        ...addTagRes,\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      setTagList(updateTagList);\n\n      setAddNewCategoryVisible(false);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...tagDetailData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Edit Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            {/* <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'category...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'ক্যাটাগড়ি...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport MetaTags from '../../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        // metaTitle: values.metaTitle,\n        // metaDescription: values.metaDescription,\n        // metaTags: tags.join(','),\n\n        bn: {\n          //   metaTitle: values.bnMetaTitle,\n          //   metaDescription: values.bnMetaDescription,\n          //   metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      let newTagList = tagList || []; \n      console.log('errorTagList',newTagList); \n\n      setTagList([\n        ...newTagList,\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Recipe Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            {/* <Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport AddNewTag from './AddNewPostTag';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'postDeleteTag'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Recipe Tag');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList || []);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/posts/tag/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Description'\n          dataIndex='description'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Recipe tag'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          tagDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\n\n  console.log('recipetaglist', tagState);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Recipe Tags</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search recipe tags..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Recipe tags found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewTag\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport MetaTags from '../../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagDetailData?: any;\n  setTagDetailData?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  setTagDetailData,\n  tagDetailData,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        // metaTitle: values.metaTitle,\n        // metaDescription: values.metaDescription,\n        // metaTags: tags.join(','),\n\n        bn: {\n          //   metaTitle: values.bnMetaTitle,\n          //   metaDescription: values.bnMetaDescription,\n          //   metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n      setTagDetailData({\n        ...tagDetailData,\n        // @ts-ignore\n        ...addTagRes,\n        name: addTagRes['name'] || '',\n        description: addTagRes['description'] || '',\n      });\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...tagDetailData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Edit Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            {/* <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'category...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'ক্যাটাগড়ি...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\nimport TagEdit from \"./TagEdit\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagPostList');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n    \n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const tagDetailRes =  await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(tagDetailRes){\n                console.log('tagDetailRes',tagDetailRes);\n                // @ts-ignore\n                setTagDetailData(tagDetailRes);\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n    useEffect(() => {\n        const getTagProducts = async () => {\n            await handleTagProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            })\n        };\n\n        getTagProducts();\n\n    }, [tagId]);\n\n\n\n\n    console.log('tagProductsState', tagProductsState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Recipe Tag Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <TagEdit\n                            addNewCategoryVisible={tagEditVisible}\n                            setAddNewCategoryVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['url'] && (\n                                <h3>\n                                    URL:\n                                    <span>\n                                        {tagDetailData['url']}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Recipes \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                \n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Recipes found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={tagProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            <Column\n                                title=\"\"\n                                dataIndex=\"cover\"\n                                key=\"id\"\n                                width={'80px'}\n\n                                className='classnameofthecolumn'\n\n                                render={(cover, record: any) => (\n                                    <>\n                                        <img\n                                            onClick={() => {\n                                                history.push(`/admin/posts/${record.id}`)\n                                            }}\n                                            src={cover} alt='cover img' style={{\n                                                height: '40px',\n                                                width: '40px',\n                                                objectFit: \"contain\",\n                                                borderRadius: '3px',\n                                                cursor: 'pointer'\n                                            }} />\n\n\n\n\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                        <h4\n                                            onClick={() => {\n                                                history.push(`/admin/posts/${record.id}`)\n                                            }}\n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                cursor: 'pointer'\n\n                                            }}>\n                                            {text}\n                                        </h4>\n\n\n                                    </>\n                                )}\n\n                            />\n\n                            <Column\n                                title=\"Offer Price\"\n                                dataIndex=\"offerPrice\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Price\"\n                                dataIndex=\"price\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Available\"\n                                dataIndex=\"available\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Minimum\"\n                                dataIndex=\"minimum\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","// @ts-nocheck\nimport React,{useEffect, useState} from 'react'; \nimport { Tag, Input, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nclass MetaTags extends React.Component {\n  state = {\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n  };\n\n\n\n  handleClose = removedTag => {\n    const {setTags,tags} = this.props;\n    const localTags = tags.filter(tag => tag !== removedTag);\n    setTags(localTags);\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n      console.log('handleInputConfirm',this.props);\n    const { inputValue } = this.state;\n    let { tags, setTags } = this.props;\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n    setTags(tags);\n    this.setState({\n      inputVisible: false,\n      inputValue: '',\n    });\n  };\n\n  handleEditInputChange = e => {\n    this.setState({ editInputValue: e.target.value });\n    console.log('tagValue',e.target.value);\n  };\n\n  handleEditInputConfirm = () => {\n    this.setState(({ editInputIndex, editInputValue }) => {\n      return {\n        editInputIndex: -1,\n        editInputValue: '',\n      };\n    });\n\n    const newTags = [...this.props.tags];\n    newTags[editInputIndex] = editInputValue;\n    this.props.setTags(newTags);\n  };\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n\n\n  render() {\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    const { placeholder,tags } = this.props;\n\n    return (\n      <>\n        {tags && tags.length > 0 && tags.map((tag, index) => {\n          if (editInputIndex === index) {\n            return (\n              <Input\n                ref={this.saveEditInputRef}\n                key={tag}\n                size=\"small\"\n                placeholder={placeholder}\n                className=\"tag-input\"\n                value={editInputValue}\n                onChange={this.handleEditInputChange}\n                onBlur={this.handleEditInputConfirm}\n                onPressEnter={this.handleEditInputConfirm}\n              />\n            );\n          }\n\n          const isLongTag = tag.length > 20;\n\n          const tagElem = (\n            <Tag\n              className=\"edit-tag\"\n              key={tag}\n              closable={index !== 0}\n              onClose={() => this.handleClose(tag)}\n            >\n              <span\n                onDoubleClick={e => {\n                  if (index !== 0) {\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\n                      this.editInput.focus();\n                    });\n                    e.preventDefault();\n                  }\n                }}\n              >\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n              </span>\n            </Tag>\n          );\n          return isLongTag ? (\n            <Tooltip title={tag} key={tag}>\n              {tagElem}\n            </Tooltip>\n          ) : (\n            tagElem\n          );\n        })}\n        {inputVisible && (\n          <Input\n          style={{\n            margin: \"10px 0\"\n          }}\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            className=\"tag-input\"\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\n            <PlusOutlined /> New Value\n          </Tag>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MetaTags","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tFileImageFilled,\n\tPlusOutlined,\n\tCheckCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tLoadingOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"./MetaTags\";\n\n\n\n\nconst validationSchema = Yup.object().shape({\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\nconst initialValues = {\n\tname: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n\timage: [],\n\turl: '',\n\tcover: '',\n\tdisplayOrder: '',\n}\n\nconst { Option } = Select;\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n    categoryDetailData?:any; \n\tsetcategoryList?:any; \n\tcategoryList?:any; \n}\n\nconst AddNewCategory = ({ \n    addNewCategoryVisible, \n    setAddNewCategoryVisible, \n    categoryDetailData, setcategoryList, categoryList }: Props) => {\n\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\tconst [visible, setvisible] = useState(false);\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n\tconst [selectedParentId, setselectedParentId] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\n\tconst [imageFile, setImagefile] = useState('');\n\tconst [tags,setTags] = useState([]);\n\tconst [bnTags,setBnTags] = useState([]);\n\tconst [myImages, setmyImages] = useState(false);\n    const [coverImageId, setCoverImageId] = useState('');\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\n\t\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\n\n\n\tuseEffect(() => {\n\n        const getCategoryDetail = async () => {\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryDetailData.id\n                    }\n                }\n            }); \n        };\n\n        getCategoryDetail();\n\n    }, [categoryDetailData]);\n\n\n\tconsole.log('MahPostCategory',categoryDetailState)\n\tconsole.log('MahPostCategorymyImages',myImages)\n\n\tuseEffect(() => {\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\n\t\n\t\t\tconst images = categoryDetailState.data.image;\n\t\t\tlet mahImages = []; \n\n\t\t\tif (images && images.length > 0) {\n\t\t\t\tmahImages = images;\n\t\t\t}\n\t\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\n\t\t\t\tif(!ixists){\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\n\t\t\t\t}\n\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\n\t\t\t}\n\t\n\t\t\t\t// @ts-ignore\n\t\t\t\tsetmyImages(mahImages);\n\t\t\t\t\n\t\t}\n\t}, [categoryDetailState.data]); \n\t\n\t\n\tuseEffect(() => {\n\t\t// @ts-ignore\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\n\t\n\t\t\tif (coverImageId !== myImages[0].id) {\n\t\t\t\tsetCoverImageId(myImages[0].id);\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\n\t\t\t}\n\t\n\t\t}\n\t\n\t}, [myImages])\n\t\n\n\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\t// @ts-ignore\n\t\tconst imagesIds = myImages ? myImages.map(image => {\n\t\t\treturn image.id;\n\t\t}) : [];\n\n\t\tconst formData = new FormData();\n\n\t\tformData.append(\"name\", values.name.trim());\n\t\tformData.append(\"description\", values.description);\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\n\t\tformData.append(\"parent\", selectedParentId);\n\t\tformData.append('displayOrder', values.displayOrder)\n\n\n\t\tconsole.log('categoryDetailData',categoryDetailData); \n\t\tconsole.log('imagesIds',imagesIds); \n\t\t\n\t\t\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n\t\t\tconst aboutToUpdatedImageIds = []; \n\n\t\t\tif(imagesIds && imagesIds.length > 0){\n\t\t\t\timagesIds.forEach(imageId => {\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n      \n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                await handleAttachImageToItemMultipleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    },\n                    body: {\n                        image: aboutToUpdatedImageIds\n                    }\n                });\n            }\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                await handleAttachImageToItemSingleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            imageId: aboutToUpdatedImageIds[0].id,\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    }\n                });\n            }\n\t\t}\n\t\t\n\n\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: categoryDetailData.id\n                },\n            },\n            body: {\n                name: values.name && values.name.trim(),\n                description: values.description,\n                image: imagesIds,\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n                parent: selectedParentId,\n                icon: imageFile,\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tdisplayOrder: values.displayOrder,\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\n                bn: {\n                    metaTitle: values.bnMetaTitle,\n                    metaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\n                    name: values.bnName && values.bnName.trim(),\n                    description: values.bnDescription,\n                }\n            },\n\t\t});\n\n\t\t// @ts-ignore\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\n\t\t\topenSuccessNotification('Category Updated!');\n\t\t\tsetAddNewCategoryVisible(false)\n\n\t\t\t// setcategoryList([{\n\t\t\t// \tid: addCategoryRes['_id'] || '',\n\t\t\t// \tkey: addCategoryRes['_id'] || '',\n\t\t\t// \tname: addCategoryRes['name'] || '',\n\t\t\t// \tdescription: addCategoryRes['description'] || '',\n\t\t\t// \tcover: addCategoryRes['cover'] || '',\n\t\t\t// \t// @ts-ignore\n\t\t\t// \t...addCategoryRes\n\t\t\t// },...categoryList]); \n\n\t\t\t\n\n            // setcategoryDetailData({\n\t\t\t// \t...categoryDetailData,\n\t\t\t// \t...addCategoryRes\n            // }); \n\n        \n\t\t\tactions.resetForm();\n\t\t\t// @ts-ignore\n\t\t\tsetmyImages([]);\n\t\t\tsetCoverImageId('')\n\t\t\tsetselectedParentId('')\n\t\t\tsetImageUrl('');\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n            // if (prevItem) {\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n            //     setBrandList(updateBrandList);\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n    \n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\n\n\n\n\tfunction getBase64(img, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener('load', () => callback(reader.result));\n\t\treader.readAsDataURL(img);\n\t}\n\n\n\tfunction beforeUpload(file) {\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\t\tif (!isJpgOrPng) {\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\n\t\t}\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\n\t\tif (!isLt2M) {\n\t\t\tmessage.error('Image must smaller than 2MB!');\n\t\t}\n\n\n\t\tgetBase64(file, imageUrl => {\n\t\t\tsetImageUrl(imageUrl)\n\t\t\tsetImagefile(file)\n\t\t\tconst setNewIcon  = async () => {\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append('icon',file); \n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\n\t\t\t\t// \tbody: formData,\n\t\t\t\t// });\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\n\t\t\t\t\turlOptions: {\n\t\t\t\t\t\tplaceHolders: {\n\t\t\t\t\t\t\tid: categoryDetailData.id\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\tbody: formData\n\t\t\t\t}); \n\n\t\t\t\t// @ts-ignore\n\t\t\t\tif(res && res.status === 'ok'){\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}; \n\t\t\t\n\t\t\tsetNewIcon();\n\t\t\tsetLoadingThumbnail(false)\n\t\t})\n\n\t\treturn false;\n\t}\n\n\n\n\tconst uploadButton = (\n\t\t<div>\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\n\t\t</div>\n\t);\n\n\n\n\tuseEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \n\n\t\t\tsetImageUrl(iconUrl); \n        }\n\n    },[])\n    \n    useEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \n            setTags(metaTags || [])\n            setBnTags(bnMetaTags || [])\n        }\n\n    },[])\n\n\n\tconsole.log('addnewCategoryTags',tags);\n\tconsole.log('categoryDetailData',categoryDetailData);\n\tconsole.log('myImages',myImages);\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n                \n                { ...initialValues,\n                    ...categoryDetailData,\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\n                        bnMetaTitle: categoryDetailData['bn']\n                        && categoryDetailData['bn'].metaTitle\n                        && categoryDetailData['bn'].metaTitle,\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\n                    })\n                 }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Update'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\n\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Description'\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\n\n\n\t\t\t\t\t<div className='addproductSection-left-header'\n\n                                style={{\n                                    marginBottom: '-5px'\n                                }}\n                            >\n                                <h3 className='inputFieldLabel'>Images</h3>\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n                            </div>\n\n\n\t\t\t\t\t\t\t<div\n                                            style={{\n                                                padding: \"10px\"\n                                            }}\n                                            className='aboutToUploadImagesContainer'>\n                                            {categoryDetailState.isLoading && (\n                                                <div style={{\n                                                    padding: '20px 0'\n                                                }}>\n                                                    <Spin />\n                                                </div>\n                                            )}\n                                            {categoryDetailState.done && (\n                                                <>\n                                                    {myImages &&\n                                                        // @ts-ignore\n                                                        myImages.length > 0 && myImages.map((image, index) => {\n                                                            return (\n                                                                <div className='aboutToUploadImagesContainer__item'>\n                                                                    <div\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                                                        onClick={() => {\n                                                                            setCoverImageId(image.id);\n                                                                            handleSetImageAsThumnail(image);\n                                                                        }}\n                                                                    >\n                                                                        <img src={image.cover} alt={image.alt} />\n                                                                    </div>\n\n                                                                    <span\n                                                                        onClick={() => {\n                                                                            handleImagesDelete(image.id)\n                                                                            handleDetachSingleImage(image.id)\n                                                                        }\n\n                                                                        }\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\n                                                                        <CloseOutlined />\n                                                                    </span>\n\n\n                                                                    {coverImageId === image.id ? (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    ) : !coverImageId && index === 0 && (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    )}\n\n\n                                                                </div>\n                                                            )\n                                                        })}\n\n\n                                                    <Tooltip\n                                                        title={'Attach images'}>\n\n                                                        <div\n                                                            onClick={() => {\n                                                                setvisible(true);\n                                                                setisModalOpenForImages(true);\n                                                                setisModalOpenForThumbnail(false);\n                                                            }}\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\n                                                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                                                            <FileImageFilled />\n                                                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                                                <PlusOutlined />\n                                                            </span>\n                                                        </div>\n                                                    </Tooltip>\n                                                </>\n                                            )}\n\n                                        </div>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t<MediaLibrary\n\t\t\t\t\t\t\tsetvisible={setvisible}\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\n\t\t\t\t\t\t\tmyImages={myImages}\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\nimport config from '../../../config.json';\n// import third party ui lib\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tFileImageFilled,\n\tPlusOutlined,\n\tCheckCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tLoadingOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"./MetaTags\";\n\n\n\n\nconst validationSchema = Yup.object().shape({\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Recipe Category Created',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\nconst initialValues = {\n\tname: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n\timage: [],\n\turl: '',\n\tcover: '',\n\tdisplayOrder: null,\n}\n\nconst { Option } = Select;\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n\tcategoryList?: any;\n\tsetcategoryList?: any;\n}\n\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\n\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory','form');\n\tconst [visible, setvisible] = useState(false);\n\tconst [myImages, setmyImages] = useState(false);\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n\tconst [coverImageId, setCoverImageId] = useState('');\n\tconst [selectedParentId, setselectedParentId] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\n\tconst [imageFile, setImagefile] = useState('');\n\tconst [tags,setTags] = useState([]);\n\tconst [bnTags,setBnTags] = useState([]);\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\t// @ts-ignore\n\t\tconst imagesIds = myImages ? myImages.map(image => {\n\t\t\treturn image.id;\n\t\t}) : [];\n\n\t\tconst formData = new FormData();\n\n\t\tconst bn = {\n\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\tmetaTags: bnTags.join(','),\n\t\t\tname: values.bnName.trim(),\n\t\t\tdescription: values.bnDescription,\n\t\t}; \n\n\t\tformData.append(\"name\", values.name.trim());\n\t\tformData.append(\"description\", values.description);\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\n\t\tformData.append(\"parent\", selectedParentId);\n\t\t// formData.append('icon', imageFile)\n\t\tformData.append('metaTitle', values.metaTitle)\n\t\tformData.append('displayOrder', values.displayOrder)\n\t\tformData.append('metaDescription', values.metaDescription)\n\t\tformData.append('metaTags', values.metaTags)\n\n\n\n\t\tconst bnData = JSON.stringify(bn);\n\t\tconst bnFormData = new FormData();\n\t\tbnFormData.append(\"bn\",bnData);\n\n\n\n\t\tformData.append('bn', bnFormData.get('bn'))\n\n\n\n\n\t\tconsole.log('addcategoryREsBody',{\n\t\t\t...formData,\n\t\t\t// ...bnFormData\n\t\t}); \n\n\n\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\n\t\t\tbody: formData,\n\t\t});\n\n\n\t\tconsole.log('adddPostCategoryREs',addCategoryRes)\n\t\t// @ts-ignore\n\t\tif (addCategoryRes && addCategoryRes[0] && addCategoryRes[0].name) {\n\t\t\topenSuccessNotification('Recipe Category Created!');\n\t\t\tsetAddNewCategoryVisible(false)\n\n\t\t\tsetcategoryList([{\n\t\t\t\t// @ts-ignore\n\t\t\t\t...addCategoryRes[0],\n\t\t\t\tid: addCategoryRes[0]['_id'] || '',\n\t\t\t\tkey: addCategoryRes[0]['_id'] || '',\n\t\t\t\tname: addCategoryRes[0]['name'] || '',\n\t\t\t\tdescription: addCategoryRes[0]['description'] || '',\n\t\t\t\tcover: addCategoryRes[0].cover\n\t\t\t\t? `${config['baseURL']}${\n\t\t\t\t\taddCategoryRes[0].cover ? addCategoryRes[0].cover.thumbnail : ''\n\t\t\t\t  }`\n\t\t\t\t: '',\n\t\t\t},...categoryList])\n\n\t\t\tactions.resetForm();\n\t\t\t// @ts-ignore\n\t\t\tsetmyImages([]);\n\t\t\tsetCoverImageId('')\n\t\t\tsetselectedParentId('')\n\t\t\tsetisparentcategoryChecked(true);\n\t\t\tsetImageUrl('');\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\n\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n\tconsole.log('addCategoryState',addCategoryState)\n\n\t\n\tuseEffect(() => {\n\t\tif (!addCategoryState['isLoading']) {\n\t\t\tconst error = addCategoryState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err)\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err)\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [addCategoryState])\n\n\n\n\n\n\tconst onSwitchChange = (checked: any) => {\n\t\tsetisparentcategoryChecked(checked)\n\t};\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!values.name || !isValid) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\n\tconst handleImagesDelete = (id) => {\n\t\t// @ts-ignore\n\t\tconst newImages = myImages && myImages.filter(image => {\n\t\t\treturn image.id !== id;\n\t\t})\n\n\t\tsetmyImages(newImages);\n\t}\n\n\n\tconst handleThumbnailImageDelete = (id) => {\n\t\t// @ts-ignore\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n\t\t\treturn image.id !== id;\n\t\t})\n\n\t\tif (newImages.length > 0) {\n\t\t\tsetmyThumbnailImage(newImages);\n\n\t\t}\n\t\telse setmyThumbnailImage(false);\n\t}\n\n\n\tconst onChangeSelect = (value) => {\n\t\tsetselectedParentId(value);\n\t}\n\n\n\n\tfunction getBase64(img, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener('load', () => callback(reader.result));\n\t\treader.readAsDataURL(img);\n\t}\n\n\n\tfunction beforeUpload(file) {\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\t\tif (!isJpgOrPng) {\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\n\t\t}\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\n\t\tif (!isLt2M) {\n\t\t\tmessage.error('Image must smaller than 2MB!');\n\t\t}\n\n\n\t\tgetBase64(file, imageUrl => {\n\t\t\tsetImageUrl(imageUrl)\n\t\t\tsetImagefile(file)\n\t\t\tsetLoadingThumbnail(false)\n\t\t})\n\n\t\treturn false;\n\t}\n\n\n\tconst uploadButton = (\n\t\t<div>\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\n\t\t</div>\n\t);\n\n\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...initialValues }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Create'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\n\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Description'\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n{/* \n<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t */}\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t{/* <div className='addproductSection-left-header' >\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\n\t\t\t\t\t\t\t\t\t<a href='###'>\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<Upload\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname=\"avatar\"\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\n\t\t\t\t\t\t\t\tshowUploadList={false}\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n\t\t\t\t\t\t\t</Upload> */}\n\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n\t\t\t\t\t\t\t\t\t<a href='###'>\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\n\t\t\t\t\t\t\t\t{myImages &&\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\n\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\n\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t<MediaLibrary\n\t\t\t\t\t\t\tsetvisible={setvisible}\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\n\t\t\t\t\t\t\tmyImages={myImages}\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\n\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Table,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport QuickEdit from './QuickEdit';\nimport AddNewPostCategory from './AddNewPostCategory';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport Empty from '../../../components/Empty';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Post Recipe Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setcategoryList?: any;\n  history?: any;\n}\n\nconst MyTable = ({ data, setcategoryList, history }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch(\n    {},\n    'postCategoryDelete'\n  );\n  // console.log('activeCategoryForEdit',activeCategoryForEdit);\n\n  const handleDeleteCategory = async (id) => {\n    const deleteCategoryRes = await handleDeleteCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCategoryRes && deleteCategoryRes.status === 'ok') {\n      openSuccessNotification('Deleted Recipe Category');\n      const newCategoryList = data.filter((item) => item.id !== id);\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/posts/category/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/posts/category/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        {/* <Column\n           title=\"Description\" \n           dataIndex=\"description\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            /> */}\n\n        {/* <Column\n           title=\"Sub Cateogory\" \n           dataIndex=\"subCount\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            /> */}\n\n        <Column\n          title='Recipes'\n          dataIndex='productCount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Category'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteCategory(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          setcategoryList={setcategoryList}\n          categoryList={data}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          categoryDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CategoryList = ({ history }: Props) => {\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'postCategoryList'\n  );\n  const [categoryList, setcategoryList] = useState([]);\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categories = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n          },\n        },\n      });\n      // @ts-ignore\n      setcategoryList(categories);\n    };\n    setCategories();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  // console.log('categoryState',categoryState);\n\n  const handleSearch = (value) => {\n    if (categoryState.data.length > 0) {\n      const newCategoryList = categoryState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  console.log('postCategoryList', categoryState);\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>\n              Recipe Categories\n            </h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search recipe categories..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n                placeholder=\"search categories..\"\n                size=\"large\"\n                onSearch={value => console.log(value)}\n                style={{ width: 300 }}\n           /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {categoryState.done && categoryList.length > 0 && (\n            <MyTable\n              history={history}\n              setcategoryList={setcategoryList}\n              data={categoryList}\n            />\n          )}\n          {categoryState.isLoading && <DataTableSkeleton />}\n\n          {categoryState.done && !(categoryList.length > 0) && (\n            <div\n              style={{\n                marginTop: '50px',\n              }}\n            >\n              <Empty title='No Recipe Category found' />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {categoryState.done && (\n        <AddNewPostCategory\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          categoryList={categoryList}\n          setcategoryList={setcategoryList}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CategoryList);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\n\nimport {\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  LoadingOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"./MetaTags\";\n\n\n\n\nconst validationSchema = Yup.object().shape({\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\n\n\n\n\nconst initialValues = {\n\tname: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n\timage: [],\n\turl: '',\n\tcover: '',\n\tdisplayOrder: '',\n}\n\nconst { Option } = Select;\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n\tsetcategoryDetailData?:any; \n    categoryDetailData?:any; \n}\n\nconst AddNewCategory = ({ \n    addNewCategoryVisible, \n    setAddNewCategoryVisible, \n    categoryDetailData, setcategoryDetailData}: Props) => {\n\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\tconst [visible, setvisible] = useState(false);\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n\tconst [selectedParentId, setselectedParentId] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\n\tconst [imageFile, setImagefile] = useState('');\n\tconst [tags,setTags] = useState([]);\n\tconst [bnTags,setBnTags] = useState([]);\n\tconst [myImages, setmyImages] = useState(false);\n    const [coverImageId, setCoverImageId] = useState('');\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\n\t\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\n\n\n\tuseEffect(() => {\n\n        const getCategoryDetail = async () => {\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryDetailData.id\n                    }\n                }\n            }); \n        };\n\n        getCategoryDetail();\n\n    }, [categoryDetailData]);\n\n\n\tconsole.log('MahPostCategory',categoryDetailState)\n\tconsole.log('MahPostCategorymyImages',myImages)\n\n\tuseEffect(() => {\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\n\t\n\t\t\tconst images = categoryDetailState.data.image;\n\t\t\tlet mahImages = []; \n\n\t\t\tif (images && images.length > 0) {\n\t\t\t\tmahImages = images;\n\t\t\t}\n\t\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\n\t\t\t\tif(!ixists){\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\n\t\t\t\t}\n\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\n\t\t\t}\n\t\n\t\t\t\t// @ts-ignore\n\t\t\t\tsetmyImages(mahImages);\n\t\t\t\t\n\t\t}\n\t}, [categoryDetailState.data]); \n\t\n\t\n\tuseEffect(() => {\n\t\t// @ts-ignore\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\n\t\n\t\t\tif (coverImageId !== myImages[0].id) {\n\t\t\t\tsetCoverImageId(myImages[0].id);\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\n\t\t\t}\n\t\n\t\t}\n\t\n\t}, [myImages])\n\t\n\n\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\t// @ts-ignore\n\t\tconst imagesIds = myImages ? myImages.map(image => {\n\t\t\treturn image.id;\n\t\t}) : [];\n\n\t\tconst formData = new FormData();\n\n\t\tformData.append(\"name\", values.name.trim());\n\t\tformData.append(\"description\", values.description);\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\n\t\tformData.append(\"parent\", selectedParentId);\n\t\tformData.append('displayOrder', values.displayOrder)\n\n\n\t\tconsole.log('categoryDetailData',categoryDetailData); \n\t\tconsole.log('imagesIds',imagesIds); \n\t\t\n\t\t\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n\t\t\tconst aboutToUpdatedImageIds = []; \n\n\t\t\tif(imagesIds && imagesIds.length > 0){\n\t\t\t\timagesIds.forEach(imageId => {\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n      \n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                await handleAttachImageToItemMultipleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    },\n                    body: {\n                        image: aboutToUpdatedImageIds\n                    }\n                });\n            }\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                await handleAttachImageToItemSingleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            imageId: aboutToUpdatedImageIds[0].id,\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    }\n                });\n            }\n\t\t}\n\t\t\n\n\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: categoryDetailData.id\n                },\n            },\n            body: {\n                name: values.name && values.name.trim(),\n                description: values.description,\n                image: imagesIds,\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n                parent: selectedParentId,\n                icon: imageFile,\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tdisplayOrder: values.displayOrder,\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\n                bn: {\n                    metaTitle: values.bnMetaTitle,\n                    metaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\n                    name: values.bnName && values.bnName.trim(),\n                    description: values.bnDescription,\n                }\n            },\n\t\t});\n\n\t\t// @ts-ignore\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\n\t\t\topenSuccessNotification('Category Updated!');\n\t\t\tsetAddNewCategoryVisible(false)\n\n\t\t\tsetcategoryDetailData({\n\t\t\t\t...categoryDetailData,\n\t\t\t\t// @ts-ignore\n\t\t\t\t...addCategoryRes,\n\t\t\t});\n\t  \n\t\t\tactions.resetForm();\n\t\t\t// @ts-ignore\n\t\t\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n            // if (prevItem) {\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n            //     setBrandList(updateBrandList);\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n    \n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\n\n\n\n\tfunction getBase64(img, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener('load', () => callback(reader.result));\n\t\treader.readAsDataURL(img);\n\t}\n\n\n\tfunction beforeUpload(file) {\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\t\tif (!isJpgOrPng) {\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\n\t\t}\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\n\t\tif (!isLt2M) {\n\t\t\tmessage.error('Image must smaller than 2MB!');\n\t\t}\n\n\n\t\tgetBase64(file, imageUrl => {\n\t\t\tsetImageUrl(imageUrl)\n\t\t\tsetImagefile(file)\n\t\t\tconst setNewIcon  = async () => {\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append('icon',file); \n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\n\t\t\t\t// \tbody: formData,\n\t\t\t\t// });\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\n\t\t\t\t\turlOptions: {\n\t\t\t\t\t\tplaceHolders: {\n\t\t\t\t\t\t\tid: categoryDetailData.id\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\tbody: formData\n\t\t\t\t}); \n\n\t\t\t\t// @ts-ignore\n\t\t\t\tif(res && res.status === 'ok'){\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}; \n\t\t\t\n\t\t\tsetNewIcon();\n\t\t\tsetLoadingThumbnail(false)\n\t\t})\n\n\t\treturn false;\n\t}\n\n\n\n\tconst uploadButton = (\n\t\t<div>\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\n\t\t</div>\n\t);\n\n\n\n\tuseEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \n\n\t\t\tsetImageUrl(iconUrl); \n        }\n\n    },[])\n    \n    useEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \n            setTags(metaTags || [])\n            setBnTags(bnMetaTags || [])\n        }\n\n    },[])\n\n\n\tconsole.log('addnewCategoryTags',tags);\n\tconsole.log('categoryDetailData',categoryDetailData);\n\tconsole.log('myImages',myImages);\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n                \n                { ...initialValues,\n                    ...categoryDetailData,\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\n                        bnMetaTitle: categoryDetailData['bn']\n                        && categoryDetailData['bn'].metaTitle\n                        && categoryDetailData['bn'].metaTitle,\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\n                    })\n                 }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Update'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\n\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Description'\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\n\n\n\t\t\t\t\t<div className='addproductSection-left-header'\n\n                                style={{\n                                    marginBottom: '-5px'\n                                }}\n                            >\n                                <h3 className='inputFieldLabel'>Images</h3>\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n                            </div>\n\n\n\t\t\t\t\t\t\t<div\n                                            style={{\n                                                padding: \"10px\"\n                                            }}\n                                            className='aboutToUploadImagesContainer'>\n                                            {categoryDetailState.isLoading && (\n                                                <div style={{\n                                                    padding: '20px 0'\n                                                }}>\n                                                    <Spin />\n                                                </div>\n                                            )}\n                                            {categoryDetailState.done && (\n                                                <>\n                                                    {myImages &&\n                                                        // @ts-ignore\n                                                        myImages.length > 0 && myImages.map((image, index) => {\n                                                            return (\n                                                                <div className='aboutToUploadImagesContainer__item'>\n                                                                    <div\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                                                        onClick={() => {\n                                                                            setCoverImageId(image.id);\n                                                                            handleSetImageAsThumnail(image);\n                                                                        }}\n                                                                    >\n                                                                        <img src={image.cover} alt={image.alt} />\n                                                                    </div>\n\n                                                                    <span\n                                                                        onClick={() => {\n                                                                            handleImagesDelete(image.id)\n                                                                            handleDetachSingleImage(image.id)\n                                                                        }\n\n                                                                        }\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\n                                                                        <CloseOutlined />\n                                                                    </span>\n\n\n                                                                    {coverImageId === image.id ? (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    ) : !coverImageId && index === 0 && (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    )}\n\n\n                                                                </div>\n                                                            )\n                                                        })}\n\n\n                                                    <Tooltip\n                                                        title={'Attach images'}>\n\n                                                        <div\n                                                            onClick={() => {\n                                                                setvisible(true);\n                                                                setisModalOpenForImages(true);\n                                                                setisModalOpenForThumbnail(false);\n                                                            }}\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\n                                                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                                                            <FileImageFilled />\n                                                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                                                <PlusOutlined />\n                                                            </span>\n                                                        </div>\n                                                    </Tooltip>\n                                                </>\n                                            )}\n\n                                        </div>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t<MediaLibrary\n\t\t\t\t\t\t\tsetvisible={setvisible}\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\n\t\t\t\t\t\t\tmyImages={myImages}\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import lib\nimport {\n    EditOutlined,\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\nimport CategoryEdit from \"./PostCategoryEdit\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryPostList');\n\n    const params = useParams();\n    const history = useHistory();\n    const categoryId = params['id'];\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\n    const [categoryDetail,setcategoryDetail] = useState({}); \n\n\n\n    useEffect(() => {\n\n        const getCategoryDetail = async () => {\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(categoryDetailDataRes){\n                  // @ts-ignore\n                setcategoryDetail(categoryDetailDataRes)\n\n            }\n\n        };\n\n        getCategoryDetail();\n\n    }, [categoryId]);\n\n    useEffect(() => {\n\n        const getCategoryProducts = async () => {\n            await handleCategoryProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryId\n                    }\n                }\n            })\n        };\n\n        getCategoryProducts();\n\n    }, [categoryId]);\n\n\n\n\n    console.log('postcategoryDetail', categoryDetail);\n\n    console.log('brandParams', params);\n\n\n    const getImagesInCollumn = (imgs) => {\n        if (!imgs[0]) return false;\n        imgs = imgs.map(item => item.cover);\n        const columns = {};\n\n        let localIndex = 0;\n        let columnNumber = 0;\n\n\n        imgs.forEach((item, index) => {\n            if (localIndex < 3) {\n                if (columns[columnNumber]) {\n                    columns[columnNumber] = [...columns[columnNumber], item]\n                }\n                else columns[columnNumber] = [item];\n\n                localIndex = localIndex + 1;\n                columnNumber = columnNumber + 1;\n\n            }\n            else {\n                localIndex = 0;\n                columnNumber = 0;\n                console.log('localIndex', localIndex)\n            }\n        });\n\n        return columns;\n    }\n\n\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\n\n\n\n    return (\n        <div className='brandDetailContainer'>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                   Recipe Category Detail\n                </h3>\n\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\n                    <>\n                        <CategoryEdit\n                            addNewCategoryVisible={categoryEditVisible}\n                            setAddNewCategoryVisible={setCategoryEditVisible}\n                            categoryDetailData={categoryDetail}\n                            setcategoryDetailData={setcategoryDetail}\n\n                        />\n\n                        <Button\n                            onClick={() => setCategoryEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n\n            </div>\n            <Skeleton\n                avatar paragraph={{ rows: 3 }}\n                loading={categoryDetailState.isLoading}>\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n\n\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\n                    <>\n                        <div className='brandDetailContainer__header'>\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\n                            </div>\n                            <div className='brandDetailContainer__header-info'>\n                                <h2>\n                                    {categoryDetail['name']}\n                                </h2>\n                                <h3>\n                                    {categoryDetail['description']}\n                                </h3>\n                          \n                                {categoryDetail['url'] && (\n                                    <h3>\n                                        URL:\n                                        <span>\n                                            {categoryDetail['url']}\n                                        </span>\n\n                                    </h3>\n                                )}\n\n                            </div>\n                        </div>\n\n\n                        {categoryDetail['icon'] && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Icon\n                                    </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__inlineBox'>\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Image Gallary\n                                   </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__imageGallary'>\n                                    <div className='imgGallaryContainer'>\n\n                                        <div className=\"imgGallary-row\">\n                                            {row && Object.keys(row).map(column => {\n                                                return (\n                                                    <div className=\"imgGallary-column\">\n                                                        {row[column] && row[column].map(img => {\n                                                            return <img \n                                                            alt='..'\n                                                            src={img} style={{\n                                                                width: '100%'\n                                                            }} />\n                                                        })}\n\n                                                    </div>\n                                                )\n                                            })}\n\n\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                    </>\n\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Recipes\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No recipes exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n\n                            size='small'\n                            dataSource={categoryProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            \n                <Column\n                    title=\"\"\n                    dataIndex=\"cover\"\n                    key=\"id\"\n                    width={'80px'}\n\n                    className='classnameofthecolumn'\n\n                    render={(cover, record: any) => (\n                        <>\n                            <img\n                                onClick={() => {\n                                    history.push(`/admin/posts/${record.id}`)\n                                }}\n                                src={cover} alt='cover img' style={{\n                                    height: '40px',\n                                    width: '40px',\n                                    objectFit: \"contain\",\n                                    borderRadius: '3px',\n                                    cursor: 'pointer'\n                                }} />\n                        </>\n                    )}\n                />\n\n                <Column\n                    title=\"Name\"\n                    dataIndex=\"name\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                    render={(text, record: any) => (\n                        <>\n\n                            <h4\n                                onClick={() => {\n                                    history.push(`/admin/posts/${record.id}`)\n                                    // setBrandDetailVisible(true);\n                                }}\n                                style={{\n                                    fontWeight: 400,\n                                    color: '#555',\n                                    cursor: 'pointer'\n                                }}>\n                                {text}\n                            </h4>\n\n\n                        </>\n                    )}\n                />\n\n\n\n                <Column\n                    title=\"Preparation Time\"\n                    dataIndex=\"preparationTime\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                />\n\n\n                <Column\n                    title=\"Cooking Time\"\n                    dataIndex=\"cookingTime\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                />\n\n                \n                <Column\n                    title=\"People\"\n                    dataIndex=\"servingSize\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                />\n\n\n            \n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","import React from 'react'\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\n\n\n\ninterface Props {\n    onChange: any;\n    label?: string;\n    withTime?: boolean;\n    placeholder?: string;\n    date?: string;\n    time?: string;\n}\n\n\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\n    function disabledDate(current) {\n        // Can not select days before today and today\n        return current && current < moment(date) && current > moment(date);\n    }\n\n\n    return (\n        <>\n            <h3 className='inputFieldLabel'>{label}</h3>\n\n            {withTime ? <DatePicker\n                format=\"YYYY-MM-DD HH:mm:ss\"\n                className='inputclassName'\n                placeholder={placeholder}\n                style={{\n                    width: \"100%\",\n                    borderColor: \"#eee\"\n                }}\n\n\n                onChange={onChange}\n                {...(time && {\n                    defaultValue: moment(time),\n                })}\n            />\n                : (\n                    <DatePicker\n\n                        placeholder={placeholder}\n                        className='inputclassName'\n                        style={{\n                            width: \"100%\",\n                            borderColor: \"#eee\"\n                        }}\n                        onChange={onChange}\n                        {...(date && {\n                            defaultValue: moment(date),\n                        })}\n                    />\n                )}\n\n\n        </>\n    )\n}\n\nexport default DatePickerComponent\n\n\n\n\nconst { RangePicker } = DatePicker;\n\nfunction range(start, end) {\n    const result = [];\n    for (let i = start; i < end; i++) {\n        result.push(i);\n    }\n    return result;\n}\n\n// function disabledDate(current) {\n//   // Can not select days before today and today\n//   return current && current < moment().endOf('day');\n// }\n\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DatePicker from '../../components/Field/DatePicker';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  //   firstName: Yup.string()\n  //     .label('First name')\n  //     .required()\n  //     .min(2, 'First name must have at least 2 characters '),\n  //   lastName: Yup.string()\n  //     .label('Lastname')\n  //     .required()\n  //     .min(2, 'Last name must have at least 2 characters '),\n  //   phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //   password: Yup.string()\n  //     .label('Password')\n  //     .required()\n  //     .min(6, 'Password must have at least 6 characters'),\n  //   address1: Yup.string()\n  //     .label('Address line 1')\n  //     .required()\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  address: '',\n  salary: null,\n  designation: '',\n  fatherName: '',\n  motherName: '',\n  NID: '',\n  phone: '',\n  email: '',\n  additionalInfo: '',\n  joiningDate: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staff Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  customerList?: any;\n  setCustomerList?: any;\n}\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customerList,\n  setCustomerList,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'addStaff'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [time, setTimeFeild] = useState('');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        password: values.password,\n        address: values.address.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName.trim(),\n        additionalInfo: values.additionalInfo.trim(),\n        NID: values.NID,\n        fatherName: values.fatherName.trim(),\n        motherName: values.motherName.trim(),\n        salary: values.salary,\n        designation: values.designation.trim(),\n        joiningDate: time,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      console.log('addCustomerRes', addCustomerRes);\n      setCustomerList([\n        {\n          id: addCustomerRes['_id'] || '',\n          key: addCustomerRes['_id'] || '',\n          name: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\n\n          // @ts-ignore\n          ...addCustomerRes,\n        },\n        ...customerList,\n      ]);\n\n      setAddNewCategoryVisible(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addCustomerState['isLoading'] &&\n      Object.keys(addCustomerState.data).length > 0\n    ) {\n      if (addCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Staff'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Designation *'\n                  value={values.designation}\n                  name='designation'\n                  isError={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  errorString={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('designation');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  min={0}\n                  type={'number'}\n                  label='Salary *'\n                  value={values.salary}\n                  name='salary'\n                  isError={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  errorString={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('salary');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='NID'\n                  value={values.NID}\n                  name='NID'\n                  isError={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  errorString={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('NID');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Father Name'\n                  value={values.fatherName}\n                  name='fatherName'\n                  isError={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  errorString={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('fatherName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Mother Name'\n                  value={values.motherName}\n                  name='motherName'\n                  isError={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  errorString={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('motherName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <DatePicker\n                  date={time}\n                  placeholder='10/20/2020'\n                  label='joining Date'\n                  onChange={handleTimeChange}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Address'\n                  value={values.address}\n                  name='address'\n                  isError={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  errorString={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('address');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Additional Info'\n                  value={values.additionalInfo}\n                  name='additionalInfo'\n                  isError={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  errorString={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('additionalInfo');\n                  }}\n                />\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewCategory;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DatePicker from '../../components/Field/DatePicker';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  //   firstName: Yup.string()\n  //     .label('First name')\n  //     .required()\n  //     .min(2, 'First name must have at least 2 characters '),\n  //   lastName: Yup.string()\n  //     .label('Lastname')\n  //     .required()\n  //     .min(2, 'Last name must have at least 2 characters '),\n  //   phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //   password: Yup.string()\n  //     .label('Password')\n  //     .required()\n  //     .min(6, 'Password must have at least 6 characters'),\n  //   address1: Yup.string()\n  //     .label('Address line 1')\n  //     .required()\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  address: '',\n  salary: null,\n  designation: '',\n  fatherName: '',\n  motherName: '',\n  NID: '',\n  phone: '',\n  email: '',\n  additionalInfo: '',\n  joiningDate: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staff Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  customerList?: any;\n  setCustomerList?: any;\n  customer?: any;\n}\n\nconst StaffQuickEdit = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customerList,\n  setCustomerList,\n  customer,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'updateStaff'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [time, setTimeFeild] = useState('');\n\n  useEffect(() => {\n    if (customer && Object.keys(customer).length > 0) {\n      setTimeFeild(customer['joiningDate']);\n    }\n  }, [customer]);\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: customer.id,\n        },\n      },\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        address: values.address.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName.trim(),\n        additionalInfo: values.additionalInfo.trim(),\n        NID: values.NID,\n        fatherName: values.fatherName.trim(),\n        motherName: values.motherName.trim(),\n        salary: values.salary,\n        designation: values.designation.trim(),\n        joiningDate: time,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      console.log('addCustomerREes', addCustomerRes);\n      const positionInTag = () => {\n        return customerList.map((item) => item.id).indexOf(customer.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, customerList[index], {\n        ...addCustomerRes,\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\n      });\n\n      console.log('updatedItemaddCustomerREes', addCustomerRes);\n\n      const updateTagList = [\n        ...customerList.slice(0, index),\n        updatedItem,\n        ...customerList.slice(index + 1),\n      ];\n\n      console.log('updatedItemadUpdatedList', updateTagList);\n\n      setCustomerList(updateTagList);\n\n      setAddNewCategoryVisible(false);\n      setTimeFeild('');\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addCustomerState['isLoading'] &&\n      Object.keys(addCustomerState.data).length > 0\n    ) {\n      if (addCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n    setTimeFeild('');\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Staff'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Designation *'\n                  value={values.designation}\n                  name='designation'\n                  isError={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  errorString={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('designation');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  min={0}\n                  type={'number'}\n                  label='Salary *'\n                  value={values.salary}\n                  name='salary'\n                  isError={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  errorString={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('salary');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='NID'\n                  value={values.NID}\n                  name='NID'\n                  isError={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  errorString={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('NID');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Father Name'\n                  value={values.fatherName}\n                  name='fatherName'\n                  isError={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  errorString={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('fatherName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Mother Name'\n                  value={values.motherName}\n                  name='motherName'\n                  isError={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  errorString={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('motherName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <DatePicker\n                  date={time}\n                  placeholder='10/20/2020'\n                  label='joining Date'\n                  onChange={handleTimeChange}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Address'\n                  value={values.address}\n                  name='address'\n                  isError={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  errorString={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('address');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Additional Info'\n                  value={values.additionalInfo}\n                  name='additionalInfo'\n                  isError={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  errorString={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('additionalInfo');\n                  }}\n                />\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default StaffQuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { CSVLink } from 'react-csv';\n\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  DownloadOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\nimport moment from 'moment';\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewStaff from './AddNewStaff';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staffs Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setCustomerList?: any;\n}\n\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n\n  const history = useHistory();\n\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\n    {},\n    'deleteStaff'\n  );\n  const handleDeleteCustomer = async (id) => {\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\n      openSuccessNotification('Deleted Staff');\n      const newCustomerList = data.filter((item) => item.id !== id);\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/staff/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Phone'\n          dataIndex='phone'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Designation'\n          dataIndex='designation'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Salary'\n          dataIndex='salary'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Joined'\n          dataIndex='joiningDate'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\n            </Space>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Staff'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteCustomer(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          customerList={data}\n          setCustomerList={setCustomerList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          customer={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CustomerList = ({ history }: Props) => {\n  const [customerList, setCustomerList] = useState([]);\n\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  console.log('staffList', customerState);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customers = await handleCustomerListFetch({});\n      // @ts-ignore\n      setCustomerList(customers);\n    };\n    setCustomers();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (customerState.data.length > 0) {\n      const newCustomerList = customerState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('customerState',customerState)\n\n  const headers = [\n    { label: 'Name', key: 'name' },\n    { label: 'Phone', key: 'phone' },\n    { label: 'Designation', key: 'designation' },\n    { label: 'Salary', key: 'salary' },\n    { label: 'joined', key: 'joiningDate' },\n  ];\n\n  const getData = () => {\n    if (customerList && customerList.length > 0) {\n      const csvData = customerList.map((item) => {\n        return {\n          name: item.name,\n          phone: item.phone,\n          designation: item.designation,\n          salary: item.salary,\n          joiningDate: item.joiningDate\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\n            : '',\n        };\n      });\n\n      return csvData;\n    } else return [];\n  };\n\n  const data = getData();\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Staffs</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search staffs..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {customerList && customerList.length > 0 && (\n              <>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginRight: '25px',\n                  }}\n                >\n                  <CSVLink\n                    filename={'staff-list.csv'}\n                    data={data}\n                    headers={headers}\n                  >\n                    Export as csv\n                  </CSVLink>\n                  <span\n                    style={{\n                      color: '#1890ff',\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <DownloadOutlined />\n                  </span>\n                </div>\n              </>\n            )}\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          </div>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {customerState.done && customerList.length > 0 && (\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\n          )}\n          {customerState.isLoading && <DataTableSkeleton />}\n          {customerState.done && !(customerList.length > 0) && (\n            <Empty title='No Staff found' />\n          )}\n        </div>\n      </div>\n\n      {customerState.done && (\n        <AddNewStaff\n          setCustomerList={setCustomerList}\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          customerList={customerState.data}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CustomerList);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DatePicker from '../../components/Field/DatePicker';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  address: '',\n  salary: null,\n  designation: '',\n  fatherName: '',\n  motherName: '',\n  NID: '',\n  phone: '',\n  email: '',\n  additionalInfo: '',\n  joiningDate: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staff Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  setCustomer?: any;\n  customer?: any;\n}\n\nconst StaffQuickEdit = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customer,\n  setCustomer,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'updateStaff'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [time, setTimeFeild] = useState('');\n\n  useEffect(() => {\n    if (customer && Object.keys(customer).length > 0) {\n      setTimeFeild(customer['joiningDate']);\n    }\n  }, [customer]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: customer.id,\n        },\n      },\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        address: values.address.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName.trim(),\n        additionalInfo: values.additionalInfo.trim(),\n        NID: values.NID,\n        fatherName: values.fatherName.trim(),\n        motherName: values.motherName.trim(),\n        salary: values.salary,\n        designation: values.designation.trim(),\n        joiningDate: time,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      setCustomer({\n        ...addCustomerRes,\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\n      });\n\n      setAddNewCategoryVisible(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addCustomerState['isLoading'] &&\n      Object.keys(addCustomerState.data).length > 0\n    ) {\n      if (addCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Staff'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Designation *'\n                  value={values.designation}\n                  name='designation'\n                  isError={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  errorString={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('designation');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  min={0}\n                  type={'number'}\n                  label='Salary *'\n                  value={values.salary}\n                  name='salary'\n                  isError={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  errorString={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('salary');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='NID'\n                  value={values.NID}\n                  name='NID'\n                  isError={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  errorString={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('NID');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Father Name'\n                  value={values.fatherName}\n                  name='fatherName'\n                  isError={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  errorString={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('fatherName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Mother Name'\n                  value={values.motherName}\n                  name='motherName'\n                  isError={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  errorString={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('motherName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <DatePicker\n                  date={time}\n                  placeholder='10/20/2020'\n                  label='joining Date'\n                  onChange={handleTimeChange}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Address'\n                  value={values.address}\n                  name='address'\n                  isError={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  errorString={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('address');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Additional Info'\n                  value={values.additionalInfo}\n                  name='additionalInfo'\n                  isError={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  errorString={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('additionalInfo');\n                  }}\n                />\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default StaffQuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport StaffEdit from './StaffEdit';\nimport moment from 'moment';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'staffDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n\n  const params = useParams();\n  const tagId = params['id'];\n  const [customerDetail, setCustomerDetail] = useState({});\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const res = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setCustomerDetail(res);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n  console.log('staffDetail', tagDetailState);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Staff Detail</h3>\n\n        {tagDetailState.done &&\n          customerDetail &&\n          Object.keys(customerDetail).length > 0 && (\n            <>\n              <StaffEdit\n                addNewCategoryVisible={tagEditVisible}\n                setAddNewCategoryVisible={setTagEditVisible}\n                customer={customerDetail}\n                setCustomer={setCustomerDetail}\n              />\n              <Button\n                onClick={() => setTagEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          customerDetail &&\n          !(Object.keys(customerDetail).length > 0) && (\n            <Empty\n              description='No Staffs found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          customerDetail &&\n          Object.keys(customerDetail).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                <h2>{customerDetail['name']}</h2>\n                <h3>{customerDetail['description']}</h3>\n                {customerDetail['designation'] && (\n                  <h3>\n                    DESIGNATION:\n                    <span>{customerDetail['designation']}</span>\n                  </h3>\n                )}\n                {customerDetail['salary'] && (\n                  <h3>\n                    SALARY:\n                    <span>{customerDetail['salary']}</span>\n                  </h3>\n                )}\n\n                {customerDetail['NID'] && (\n                  <h3>\n                    NID:\n                    <span>{customerDetail['NID']}</span>\n                  </h3>\n                )}\n\n                {customerDetail['joiningDate'] && (\n                  <h3>\n                    JOINED:\n                    <span>\n                      {customerDetail['joiningDate'] &&\n                        moment(customerDetail['joiningDate']).format(\n                          'MMMM Do YYYY, h:mm a'\n                        )}\n                    </span>\n                  </h3>\n                )}\n\n                {customerDetail['fatherName'] && (\n                  <h3>\n                    FATHER'S NAME:\n                    <span>{customerDetail['fatherName']}</span>\n                  </h3>\n                )}\n                {customerDetail['motherName'] && (\n                  <h3>\n                    MOTHER'S NAME:\n                    <span>{customerDetail['motherName']}</span>\n                  </h3>\n                )}\n\n                {customerDetail['phone'] && (\n                  <h3>\n                    PHONE:\n                    <span>{customerDetail['phone']}</span>\n                  </h3>\n                )}\n                {customerDetail['email'] && (\n                  <h3>\n                    EMAIL:\n                    <span>{customerDetail['email']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      {/* <div className='brandDetailContainer__heading'>\n                <h3>\n                    Products\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={tagProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            <Column\n                                title=\"\"\n                                dataIndex=\"cover\"\n                                key=\"id\"\n                                width={'80px'}\n\n                                className='classnameofthecolumn'\n\n                                render={(cover, record: any) => (\n                                    <>\n                                        <img\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            src={cover} alt='cover img' style={{\n                                                height: '40px',\n                                                width: '40px',\n                                                objectFit: \"contain\",\n                                                borderRadius: '3px',\n                                                cursor: 'pointer'\n                                            }} />\n\n\n\n\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                        <h4\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                cursor: 'pointer'\n\n                                            }}>\n                                            {text}\n                                        </h4>\n\n\n                                    </>\n                                )}\n\n                            />\n\n                            <Column\n                                title=\"Offer Price\"\n                                dataIndex=\"offerPrice\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Price\"\n                                dataIndex=\"price\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div> */}\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete, Tooltip } from 'antd';\n\nimport InputSmall from '../../../components/Field/InputSmall';\n\n// import comp;onent\nimport Sfaffid from './Sfaffid';\n\nimport { useFetch } from '../../../hooks';\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  DeleteColumnOutlined,\n} from '@ant-design/icons';\n\nconst Complete = ({\n  setItemsList,\n  itemsList,\n  componentItem,\n  brandState,\n  index,\n}) => {\n  const [brandId, setBrandId] = useState('');\n\n  const handleComponentItemsChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    const updatedValue = {\n      ...componentItem,\n      [name]: value,\n      id: componentItem.id,\n    };\n\n    const positionInAttribute = () => {\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...itemsList.slice(0, index),\n      updatedValue,\n      ...itemsList.slice(index + 1),\n    ];\n    setItemsList(updateAttributeList);\n  };\n\n  useEffect(() => {\n    const updatedValue = {\n      ...componentItem,\n      _id: brandId,\n      id: componentItem.id,\n    };\n\n    const positionInAttribute = () => {\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...itemsList.slice(0, index),\n      updatedValue,\n      ...itemsList.slice(index + 1),\n    ];\n    setItemsList(updateAttributeList);\n  }, [brandId]);\n\n  const handleAttributeDelete = () => {\n    const updateComponentList = itemsList.filter(\n      (item) => item.id !== componentItem.id\n    );\n    setItemsList(updateComponentList);\n  };\n\n  console.log('componentItem322',   \n  componentItem);\n  return (\n    <>\n      <div className='staffComponentItemsContainer__item'>\n        <div\n          className='staffComponentItemsContainer__name'\n          style={{\n            marginTop: index === 0 ? '-5px' : '-35px',\n          }}\n        >\n          {!index && (\n            <h3 className='inputFieldLabel-small' style={{}}>\n              Name\n            </h3>\n          )}\n\n          <h4\n            style={{\n              margin: 0,\n              padding: 0,\n              textTransform: 'uppercase',\n              fontSize: '13px',\n              marginTop: '33px',\n            }}\n          >\n            {componentItem.name}\n          </h4>\n        </div>\n\n        <div\n          style={{\n            marginTop: index === 0 ? '-5px' : '-35px',\n          }}\n          className='staffComponentItemsContainer__salary'\n        >\n          {!index && (\n            <h3 className='inputFieldLabel-small' style={{}}>\n              Salary\n            </h3>\n          )}\n\n          <h5\n            style={{\n              margin: 0,\n              padding: 0,\n              fontSize: '12px',\n              marginTop: '33px',\n            }}\n          >\n            {componentItem.salary}\n          </h5>\n        </div>\n\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Bonus\n            </h3>\n          )}\n          <div>\n            <InputSmall\n              type='number'\n              label={''}\n              value={componentItem.title}\n              name='bonus'\n              onChange={handleComponentItemsChange}\n            />\n          </div>\n        </div>\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Convince\n            </h3>\n          )}\n\n          <InputSmall\n            type='number'\n            label={''}\n            value={componentItem.text}\n            name='convince'\n            onChange={handleComponentItemsChange}\n          />\n        </div>\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Extra\n            </h3>\n          )}\n\n          <InputSmall\n            type='number'\n            label={''}\n            value={componentItem.target}\n            name='extra'\n            onChange={handleComponentItemsChange}\n          />\n        </div>\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Negative\n            </h3>\n          )}\n\n          <InputSmall\n            type='number'\n            label={''}\n            value={componentItem.target}\n            name='negative'\n            onChange={handleComponentItemsChange}\n          />\n        </div>\n\n        <div\n          onClick={() => handleAttributeDelete()}\n          className='staffComponentItemsContainer__input'\n          style={{\n            marginTop: index === 0 ? '15px' : '-10px',\n          }}\n        >\n          <span\n            style={{\n              color: 'rgba(255, 166, 0, 0.733)',\n              cursor: 'pointer',\n            }}\n          >\n            <DeleteOutlined />\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Complete;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Form,\n  Empty,\n  Button,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  UsergroupAddOutlined,\n  CheckOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport ComponentItem from './ComponentItem';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nconst validationSchema = Yup.object().shape({\n  // groupName: Yup.string()\n  //   .label('Name')\n  //   .required('Name is required')\n  //   .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Salary report Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  groupName: '',\n  items: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  componentList?: any;\n  setComponentList?: any;\n}\n\nconst ModalChildComponent = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n}) => {\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\n    {},\n    'generateSalaryReport'\n  );\n\n  const [brandState, handleTagListFetch] = useHandleFetch({}, 'staffList');\n\n  useEffect(() => {\n    const setBrands = async () => {\n      const brandListRes = await handleTagListFetch({});\n    };\n    setBrands();\n  }, []);\n\n  const [myImages, setmyImages] = useState(false);\n  const [itemsList, setItemsList] = useState([]);\n  const [time, setTimeFeild] = useState('');\n  const [month, setMonthFeild] = useState('');\n\n  console.log('salaryReportItemList', itemsList);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const convertedYear = month ? month.split('-')[0] : '';\n    const convertedMonth = month\n      ? month.split('-')[1] &&\n        month.split('-')[1][0] &&\n        month.split('-')[1][0] === '0'\n        ? month.split('-')[1][1]\n        : month.split('-')[1]\n      : '';\n    const convertedStaffs =\n      itemsList && itemsList.length > 0\n        ? itemsList.map((item) => {\n            return {\n              ...item,\n              bonus: item.bonus ? +item.bonus : 0,\n              convince: item.convince ? +item.convince : 0,\n              extra: item.extra ? +item.extra : 0,\n              negative: item.negative ? +item.negative : 0,\n              id: `${itemsList.length}`,\n            };\n          })\n        : [];\n    const data = {\n      month: convertedMonth ? +convertedMonth : '',\n      year: convertedYear ? +convertedYear : '',\n      staff: convertedStaffs,\n    };\n    const addComponentRes = await handleAddComponentFetch({\n      body: data,\n    });\n\n    // @ts-ignore\n    if (addComponentRes && addComponentRes.status === 'ok') {\n      openSuccessNotification();\n      setComponentList([\n        {\n          id: addComponentRes['_id'] || '',\n          key: addComponentRes['_id'] || '',\n          // @ts-ignore\n          ...addComponentRes,\n        },\n        ...componentList,\n      ]);\n      actions.resetForm();\n      setItemsList([]);\n      setMonthFeild('');\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addComponentState['isLoading']) {\n      const error = addComponentState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addComponentState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.groupName) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddComponentItem = () => {\n    setItemsList([\n      ...itemsList,\n      {\n        _id: `${Math.floor(100000 + Math.random() * 900000)}`,\n        bonus: null,\n        convince: null,\n        extra: null,\n        negative: null,\n        id: `${itemsList.length}`,\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    if (brandState.done && brandState.data && brandState.data.length > 0) {\n      const items = brandState.data.map((staff) => {\n        return {\n          ...staff,\n          _id: staff._id,\n          bonus: staff.bonus,\n          convince: staff.convince,\n          extra: staff.extra,\n          negative: staff.negative,\n        };\n      });\n      setItemsList(items);\n    }\n  }, [brandState.data]);\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleMonthChange = (date, dateString) => {\n    setMonthFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{ ...initialValues }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <Form.Item\n              validateStatus={\n                addComponentState.error['error']['year'] ||\n                addComponentState.error['error']['month']\n                  ? 'error'\n                  : ''\n              }\n              help={\n                addComponentState.error['error']['year'] ||\n                addComponentState.error['error']['month']\n              }\n              // noStyle={true}\n            >\n              <h3 className='inputFieldLabel'>Time</h3>\n              <DatePicker\n                picker='month'\n                placeholder={'2020, Jan'}\n                className='inputclassName'\n                style={{\n                  width: '100%',\n                  borderColor: '#eee',\n                }}\n                onChange={handleMonthChange}\n                {...(month && {\n                  defaultValue: moment(month),\n                })}\n              />\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n            ></div>\n\n            {itemsList && itemsList[0] && (\n              <h3 className='addOrderContainer-sectionTitle'>\n                <span>\n                  <UsergroupAddOutlined />\n                </span>\n                Staffs\n              </h3>\n            )}\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <div className='staffComponentItemsContainer'>\n              {itemsList.map((itemComponent, index) => {\n                return (\n                  <ComponentItem\n                    index={index}\n                    brandState={brandState}\n                    componentItem={itemComponent}\n                    itemsList={itemsList}\n                    setItemsList={setItemsList}\n                  />\n                );\n              })}\n\n              {brandState.done && itemsList && !itemsList[0] && (\n                <div\n                  style={{\n                    marginTop: '5px',\n                    width: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Empty\n                    description='No Staff'\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                  />\n                </div>\n              )}\n              {brandState.isLoading && (\n                <div\n                  style={{\n                    padding: '15px 0',\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Spin />\n                </div>\n              )}\n            </div>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setAddNewCategoryVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={addComponentState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Generate\n              </Button>\n            </div>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      title='Add Salary Report'\n      visible={addNewCategoryVisible}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      footer={false}\n      width={'80vw'}\n      bodyStyle={{\n        margin: '0',\n        padding: '10px',\n      }}\n    >\n      <ModalChildComponent\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        componentList={componentList}\n        setComponentList={setComponentList}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport moment from 'moment';\nimport { CSVLink } from 'react-csv';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  DownloadOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport AddNewExpense from './AddNewSalaryReport';\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteSalaryReport'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Salary report');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Year'\n          dataIndex='year'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/salaryReport/${record.id}`);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Month'\n          dataIndex='month'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/salaryReport/${record.id}`);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text && months[text]}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Total Salary'\n          dataIndex='totalSalary'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Bonus'\n          dataIndex='totalBonus'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Extra'\n          dataIndex='totalExtra'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Convince'\n          dataIndex='totalConvince'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  console.log('salaryReport4', tagList);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'getSalaryReport');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n      actions.resetForm();\n    }\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  const headers = [\n    { label: 'Year', key: 'year' },\n    { label: 'Month', key: 'month' },\n    { label: 'Total Salary', key: 'totalSalary' },\n    { label: 'Total Bonus', key: 'totalBonus' },\n    { label: 'Total Convince', key: 'totalConvince' },\n    { label: 'Total Extra', key: 'totalExtra' },\n    { label: 'Total Negative', key: 'totalNegative' },\n  ];\n\n  const getData = () => {\n    if (tagList && tagList.length > 0) {\n      const csvData = tagList.map((item) => {\n        return {\n          year: item.year,\n          month: item.month ? months[item.month] : '',\n          totalSalary: item.totalSalary,\n          totalBonus: item.totalBonus,\n          totalConvince: item.totalConvince,\n          totalExtra: item.totalExtra,\n          totalNegative: item.totalNegative,\n        };\n      });\n\n      return csvData;\n    } else return [];\n  };\n\n  const data = getData();\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>\n              Salary reports\n            </h2>\n\n            {/* <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search expense..'\n              onSearch={(value) => handleSearch(value)}\n            /> */}\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {tagList && tagList.length > 0 && (\n              <>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginRight: '25px',\n                  }}\n                >\n                  <CSVLink\n                    filename={'SalaryReport.csv'}\n                    data={data}\n                    headers={headers}\n                  >\n                    Export as csv\n                  </CSVLink>\n                  <span\n                    style={{\n                      color: '#1890ff',\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <DownloadOutlined />\n                  </span>\n                </div>\n              </>\n            )}\n\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          </div>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '150px',\n              }}\n            >\n              <Empty\n                description='No Expense found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewExpense\n        componentList={tagList}\n        setComponentList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\nimport moment from 'moment';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'getSalaryReportDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n\n  const history = useHistory();\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailData, setTagDetailData] = useState({});\n\n  console.log('tagDetailDataSalaryreport!', tagDetailData);\n\n  const params = useParams();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const res = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setTagDetailData(res);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Salary Report detail</h3>\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Expense found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                {tagDetailData['year'] && (\n                  <h3>\n                    YEAR:\n                    <span>{tagDetailData['year']}</span>\n                  </h3>\n                )}\n                {tagDetailData['month'] && (\n                  <h3>\n                    MONTH:\n                    <span>\n                      {tagDetailData['month'] && months[tagDetailData['month']]}\n                    </span>\n                  </h3>\n                )}\n                {tagDetailData['totalSalary'] && (\n                  <h3>\n                    TOTAL SALARY:\n                    <span>{tagDetailData['totalSalary']}</span>\n                  </h3>\n                )}\n\n                {tagDetailData['totalBonus'] ? (\n                  <h3>\n                    TOTAL BONUS:\n                    <span>{tagDetailData['totalBonus']}</span>\n                  </h3>\n                ) : (\n                  ''\n                )}\n\n                {tagDetailData['totalConvince'] && (\n                  <h3>\n                    TOTAL CONVINCE:\n                    <span>{tagDetailData['totalConvince']}</span>\n                  </h3>\n                )}\n                {tagDetailData['totalExtra'] && (\n                  <h3>\n                    TOTAL EXTRA:\n                    <span>{tagDetailData['totalExtra']}</span>\n                  </h3>\n                )}\n                {tagDetailData['totalNegative'] && (\n                  <h3>\n                    TOTAL NEGATIVE:\n                    <span>{tagDetailData['totalNegative']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      {tagDetailState.done &&\n        tagDetailState.data &&\n        Object.keys(tagDetailState.data).length > 0 && (\n          <>\n            <div className='brandDetailContainer__heading'>\n              <h3>Staffs</h3>\n            </div>\n          </>\n        )}\n\n      <div className='brandDetailContainer__body'>\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['staff'] &&\n          !(tagDetailState.data['staff'].length > 0) && (\n            <div\n              style={{\n                marginTop: '100px',\n              }}\n            >\n              <Empty\n                description='No Staffs exists for this Salary report'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['staff'] &&\n          tagDetailState.data['staff'].length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                size='small'\n                dataSource={tagDetailState.data['staff']}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/staff/${record.id}`);\n                          // setcategoryDetailVisible(true);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Total Salary'\n                  dataIndex='totalSalary'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Convince'\n                  dataIndex='convince'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Extra'\n                  dataIndex='extra'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Negative'\n                  dataIndex='negative'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport StaffIds from './StaffIds';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  topic: '',\n  amount: null,\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n  category?:any; \n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n  category\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [time, setTimeFeild] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n\n\n  \n  useEffect(() => {\n    if(category && category.date){\n        setTimeFeild(category.date)\n    }\n  },[category]); \n\n  \n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t\tid: category.id || category._id\n\t\t\t}\n\t\t},\n      body: {\n        topic: values.topic.trim(),\n        amount: values.amount,\n        date: time,\n        staff: customerId,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n\n\t  const positionInTag = () => {\n\t\treturn tagList.map(item => item.id).indexOf(category.id || category._id);\n\t}\n\n\tconst index = positionInTag();\n\n\t// @ts-ignore\n\tconst updatedItem = Object.assign({}, tagList[index], { ...addTagRes });\n\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n\tsetTagList(updateTagList);\n\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Expense'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Topic'\n              value={values.topic}\n              name='topic'\n              isError={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              errorString={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('topic');\n              }}\n            />\n\n            <Input\n              label='Amount'\n              value={values.amount}\n              name='amount'\n              type={'number'}\n              min={0}\n              isError={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              errorString={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('amount');\n              }}\n            />\n\n            <DatePicker\n              date={time}\n              placeholder='10/20/2020'\n              label='Date'\n              onChange={handleTimeChange}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\n            <StaffIds\n              customerListState={customerListState}\n              setSelectedCustomerData={setSelectedCustomerData}\n              setCustomerId={setCustomerId}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport StaffIds from './StaffIds';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  topic: '',\n  amount: null,\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addExpense');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [time, setTimeFeild] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      body: {\n        topic: values.topic.trim(),\n        amount: values.amount,\n        date: time,\n        staff: customerId,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n        },\n        ...tagList,\n      ]);\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Expense'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Topic'\n              value={values.topic}\n              name='topic'\n              isError={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              errorString={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('topic');\n              }}\n            />\n\n            <Input\n              label='Amount'\n              value={values.amount}\n              name='amount'\n              type={'number'}\n              min={0}\n              isError={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              errorString={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('amount');\n              }}\n            />\n\n            <DatePicker\n              date={time}\n              placeholder='10/20/2020'\n              label='Date'\n              onChange={handleTimeChange}\n            />\n\n            {/* <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h4 className='inputFieldLabel'>Associative staff</h4>\n            <StaffIds\n              customerListState={customerListState}\n              setSelectedCustomerData={setSelectedCustomerData}\n              setCustomerId={setCustomerId}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport moment from 'moment';\nimport { CSVLink } from \"react-csv\";\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  DownloadOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport AddNewExpense from './AddNewExpense';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteExpense'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Expense');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Topic'\n          dataIndex='topic'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/expense/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Amount'\n          dataIndex='amount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Date'\n          dataIndex='date'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\n            </Space>\n          )}\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Expense'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          category={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'expenseList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n      actions.resetForm();\n    }\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n\n  \n  const headers = [\n    { label: \"Topic\", key: \"topic\" },\n    { label: \"Amount\", key: \"amount\" },\n    { label: \"Date\", key: \"date\" },\n  ];\n   \n\n  const getData = () => {\n    if(tagList && tagList.length > 0){\n      const csvData = tagList.map(item => {\n        return {\n          topic: item.topic,\n          amount: item.amount,\n          date : item.date ? moment(item.date).format('MMMM Do YYYY, h:mm a') : ''\n        }\n      })\n\n      return csvData; \n    }\n    else return []; \n  }; \n\n\n  const data = getData();\n\n\n\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Expenses</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search expense..'\n              onSearch={(value) => handleSearch(value)}\n            />\n          </div>\n\n          \n        <div style={{\n          display:'flex',\n          alignItems:'center'\n        }}>\n        \n        {tagList && tagList.length > 0 && (\n          <>\n          <div style={{\n          display:'flex',\n          alignItems:'center',\n          marginRight: '25px'\n        }}>\n        <CSVLink\n         filename={\"Expenses.csv\"}\n         data={data} headers={headers}>\n          Export as csv \n        </CSVLink>\n        <span style={{\n          color:'#1890ff',\n          marginLeft: '10px'\n        }}>\n        <DownloadOutlined />\n        </span>\n        </div>\n          </>\n        )}\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n\n        \n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '150px',\n              }}\n            >\n              <Empty\n                description='No Expense found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewExpense\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport StaffIds from './StaffIds';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  topic: '',\n  amount: null,\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n  category?:any; \n  setTagDetailData?:any; \n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  category,\n  setTagDetailData\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [time, setTimeFeild] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n\n\n\n  useEffect(() => {\n    if(category && category.date){\n        setTimeFeild(category.date)\n    }\n  },[category]); \n\n  \n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t\tid: category.id || category._id\n\t\t\t}\n\t\t},\n      body: {\n        topic: values.topic.trim(),\n        amount: values.amount,\n        date: time,\n        staff: customerId,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagDetailData({\n          ...category,\n          // @ts-ignore\n        ...addTagRes,\n      });\n\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Expense'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Topic'\n              value={values.topic}\n              name='topic'\n              isError={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              errorString={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('topic');\n              }}\n            />\n\n            <Input\n              label='Amount'\n              value={values.amount}\n              name='amount'\n              type={'number'}\n              min={0}\n              isError={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              errorString={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('amount');\n              }}\n            />\n\n            <DatePicker\n              date={time}\n              placeholder='10/20/2020'\n              label='Date'\n              onChange={handleTimeChange}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\n            <StaffIds\n              customerListState={customerListState}\n              setSelectedCustomerData={setSelectedCustomerData}\n              setCustomerId={setCustomerId}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\nimport moment from 'moment';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ExpenseEdit from './ExpenseEdit';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'expenseDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailData,setTagDetailData] = useState({}); \n\n  const params = useParams();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const res = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if(res){\n        // @ts-ignore\n        setTagDetailData(res); \n      }; \n\n\n\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Expense Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              <ExpenseEdit\n                addNewCategoryVisible={tagEditVisible}\n                setAddNewCategoryVisible={setTagEditVisible}\n                category={tagDetailData}\n                setTagDetailData={setTagDetailData}\n              />\n              <Button\n                onClick={() => setTagEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Expense found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                {tagDetailData['topic'] && (\n                  <h3>\n                    TOPIC:\n                    <span>{tagDetailData['topic']}</span>\n                  </h3>\n                )}\n                {tagDetailData['amount'] && (\n                  <h3>\n                    AMOUNT:\n                    <span>{tagDetailData['amount']}</span>\n                  </h3>\n                )}\n                {tagDetailData['date'] && (\n                  <h3>\n                    DATE:\n                    <span>\n                      {tagDetailState['data']['date'] &&\n                        moment(tagDetailState['data']['date']).format(\n                          'MMMM Do YYYY, h:mm a'\n                        )}\n                    </span>\n                  </h3>\n                )}\n                {tagDetailData[''] && (\n                  <h3>\n                    ASSOCIATIVE STAFF:\n                    <span>{tagDetailData['date']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useEffect, useState } from 'react';\n\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components \nimport Empty from \"../../components/Empty\";\n\n\n// import libraries \nimport { Button, Tag, Input, Spin } from 'antd';\nimport {\n  PlusOutlined\n} from '@ant-design/icons';\n\n\n\n\nconst { CheckableTag } = Tag;\nconst { Search } = Input;\n\ninterface Props {\n  setTagIds?: any;\n  selectedTags?: any;\n  setSelectedTags?: any;\n}\n\n\nconst Tags = ({\n  setTagIds,\n  setSelectedTags,\n  selectedTags,\n\n}: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedOpions, setselectedOptions] = useState([]);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\n  const [searchValue, setsearchValue] = useState('');\n\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\n    setSelectedTags(nextSelectedTags);\n\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\n        );\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n      setTagIds(selectedCategoryIds);\n    }\n  }\n\n\n  useEffect(() => {\n    console.log('itwhere')\n    if (tagState.data && tagState.data.length > 0 && selectedTags.length > 0) {\n      const selectedCategoryIds = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.id === item\n        );\n        if (selectedcategory) {\n          return selectedcategory.name;\n        }\n      });\n      setSelectedTags(selectedCategoryIds);\n    }\n  }, [tagState]);\n\n\n  console.log('areaSelectedTaga',selectedTags)\n  useEffect(() => {\n    const setTags = async () => {\n      const tagListRes = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: false\n          }\n        }\n      });\n\n      // @ts-ignoref\n      if (tagListRes && tagListRes.length > 0) {\n        // @ts-ignore\n        const tagOptions = tagListRes.map((tag) => {\n          return tag.name\n        });\n        setoptions(tagOptions);\n      }\n\n    };\n\n    setTags();\n  }, []);\n\n\n\n  // const handleChange = (selectItems) => {\n  //   setselectedOptions(selectItems)\n\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n  //     const selectedCategoryIds = selectItems.map((item) => {\n  //       const selectedcategory = tagState.data.find(\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\n  //       );\n  //       if (selectedcategory) {\n  //         return selectedcategory.id;\n  //       }\n  //     });\n  //     setTagIds(selectedCategoryIds);\n  //   }\n\n\n  // }\n\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (tagState.data && tagState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = tagState.data.map((cat) => cat.name);\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n            return option.toLowerCase().includes(searchValue.toLowerCase());\n          })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n\n  console.log('dealerAreaList', tagState)\n\n\n\n  return (\n    <>\n\n      {tagState.isLoading && (\n        <div style={{\n          padding: '15px 0',\n          width: '100%',\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}>\n          <Spin />\n        </div>\n      )}\n\n\n\n      {tagState.done && !(tagState.data.length > 0) && (\n        <div style={{\n          width: '100%',\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}>\n          <Empty title='No Area found' height={100} />\n        </div>\n      )}\n\n\n\n\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\n        <>\n          <div className='addProduct__categoryBoxContainer-searchBox'>\n            <Search\n              width={'90%'}\n              style={{\n                height: '30px',\n                borderRadius: '3px !important',\n                borderColor: '#eee !important'\n              }}\n              size='middle'\n              placeholder='Dhanmondi, mirpur'\n              onSearch={(value) => console.log(value)}\n              onChange={onSearchChange}\n            />\n          </div>\n\n          {options.map(tag => (\n            <>\n              <CheckableTag\n                key={tag}\n                checked={selectedTags.indexOf(tag) > -1}\n                onChange={checked => handleChange(tag, checked)}\n              >\n                {tag}\n              </CheckableTag>\n            </>\n          ))}\n        </>\n      )}\n\n\n      {/* \n      <div style={{\n        marginTop: '15px'\n      }}>\n\n      </div>\n      <Button\n\n        // type=\"primary\"\n        className='btnSecondaryPlusOutline'\n        icon={<PlusOutlined />}\n      >\n        Add New\n      </Button> */}\n    </>\n  )\n}\n\nexport default Tags\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\n\nimport {\n\tFileOutlined,\n\tInboxOutlined,\n\tRadiusUpleftOutlined,\n\tRadiusUprightOutlined,\n\tRadiusBottomleftOutlined,\n\tRadiusBottomrightOutlined,\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tInfoCircleOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\n\nimport Areas from \"./Areas\";\nconst { Option } = Select;\n\n\n\nconst validationSchema = Yup.object().shape({\n\tfirstName: Yup.string()\n\t\t.label('First name')\n\t\t.required()\n\t\t.min(2, 'First name must have at least 2 characters '),\n\tlastName: Yup.string()\n\t\t.label('Lastname')\n\t\t.required()\n\t\t.min(2, 'Last name must have at least 2 characters '),\n\tphone: Yup.string()\n\t\t.required('Please tell us your mobile number.')\n\t\t.max(13, 'Please enter a valid mobile number.'),\n\tpassword: Yup.string()\n\t\t.label('Password')\n\t\t.required()\n\t\t.min(6, 'Password must have at least 6 characters'),\n\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\n\n\n\nconst initialValues = {\n\tphone: '',\n\temail: '',\n\tfirstName: '',\n\tlastName: '',\n\taddress: '',\n\tzipCode: '',\n\tpassword: '',\n\tcode: '',\n\tcommission: '',\n\tdepositMoney: ''\n};\n\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Dealer Created!',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n\tcustomerList?: any;\n\tsetCustomerList?: any;\n}\n\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\n\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addDealer');\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\n\n\tconst [countryOptions, setcountryOptions] = useState([]);\n\tconst [cityOptions, setcityOptions] = useState([]);\n\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\n\t\t[],\n\t\t'countryList'\n\t);\n\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n\tconst [tagIds, setTagIds] = useState([]);\n\tconst [selectedTags, setSelectedTags] = useState([]);\n\n\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\n\n\t\t\tbody: {\n\t\t\t\tphone: values.phone,\n\t\t\t\temail: values.email,\n\t\t\t\tpassword: values.password,\n\t\t\t\taddress: values.address,\n\t\t\t\tfirstName: values.firstName,\n\t\t\t\tlastName: values.lastName,\n\t\t\t\tcode: values.code,\n\t\t\t\tcommission: values.commission,\n\t\t\t\tdepositMoney: values.depositMoney,\n\t\t\t\tdealerArea: tagIds\n\t\t\t},\n\t\t});\n\n\n\t\t// @ts-ignore\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\n\t\t\t// openSuccessNotification();\n\n\t\t\tsetCustomerList([{\n\t\t\t\tid: addCustomerRes['_id'] || '',\n\t\t\t\tkey: addCustomerRes['_id'] || '',\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\n\t\t\t\t// @ts-ignore\n\t\t\t\t...addCustomerRes\n\t\t\t},...customerList])\n\t\t\tsetAddNewCategoryVisible(false);\n\t\t\tactions.resetForm();\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n\tconst onChangeCity = (value) => {\n\t\tsetselectedCityValue(value);\n\t}\n\n\tconst onChangeCountry = (value) => {\n\t\tsetselectedCountryValue(value);\n\t}\n\n\tuseEffect(() => {\n\t\tconst setCountries = async () => {\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\n\n\t\t\t// @ts-ignore\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: country.name,\n\t\t\t\t\t\tname: country.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcountryOptions(countryOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCountries();\n\t}, []);\n\n\n\tuseEffect(() => {\n\t\tconsole.log('selectedCountryValue1',selectedCountryValue)\n\t\tconst setCities = async () => {\n\t\t\tconst cityListRes = await handleCityListFetch({\n\t\t\t\turlOptions: {\n\t\t\t\t\tplaceHolders: {\n\t\t\t\t\t\tcountry: selectedCountryValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// @ts-ignore\n\t\t\tif (cityListRes && cityListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: city.name,\n\t\t\t\t\t\tname: city.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcityOptions(cityOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCities();\n\t}, [selectedCountryValue]);\n\n\n\n\t\n\tuseEffect(() => {\n\t\tif (!addCustomerState['isLoading']) {\n\t\t\tconst error = addCustomerState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!addCustomerState['isLoading'] &&\n\t\t\tObject.keys(addCustomerState.data).length > 0\n\t\t) {\n\t\t\tif (addCustomerState['data']['status'] === 'ok') {\n\t\t\t\topenSuccessNotification('Dealer Created Successfully');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [addCustomerState]);\n\n\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!isValid ||\n\t\t\t!values.firstName ||\n\t\t\t!values.lastName ||\n\t\t\t!values.password ||\n\t\t\t!values.phone ||\n\t\t\t!values.code \n\t\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\n\n\tconsole.log('cityListState', cityListState)\n\n\n\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...initialValues }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px',\n\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tbodyStyle={{\n\t\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\twidth={'70vw'}\n\t\t\t\t\t\t\ttitle=\"Add New Dealer\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Create'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\n\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\n\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.code}\n\t\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\n\t\t\t\t\t\t\t\t\tname='depositMoney'\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Commission'\n\t\t\t\t\t\t\t\t\ttype='commission'\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\n\t\t\t\t\t\t\t\t\tname='commission'\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop: '12px'\n\t\t\t\t\t\t\t}}></div>\n\n\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\n\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\n\n\n\n\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\n\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React,{useState, useEffect} from 'react';\nimport { Modal, Select,notification , Form, Empty } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport {useHandleFetch} from '../../hooks';\nimport Areas from \"./Areas\";\n\n\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .label('Firstname')\n      .required()\n      .min(2, 'First name must have at least 2 characters '),\n    lastName: Yup.string()\n      .label('Lastname')\n      .required()\n      .min(2, 'Lastname must have at least 2 characters '),\n    phone: Yup.string()\n      .required('Please tell us your mobile number.')\n      .max(13, 'Please enter a valid mobile number.'),\n    password: Yup.string()\n      .label('Password')\n      .min(6, 'Password must have at least 6 characters'),\n    email: Yup.string().label('Email').email('Please enter a valid email'),\n  });\n\n\n\n  \nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Dealer Updated',\n\t  description: '',\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n  };\n\n\n  const openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Something Went Wrong',\n\t  description: '',\n\t  icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n  };\n\n\n\n\n\n\ninterface Props {\n\tcustomer: any;\n\tsetvisible: any; \n\tvisible: any;\n\tcustomerList?: any; \n\tsetCustomerList?:any\n\n}\n\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\n\n\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \n    const [selectedCityValue,setselectedCityValue] = useState(''); \n\n    const [countryOptions,setcountryOptions] = useState([]); \n    const [cityOptions,setcityOptions] = useState([]); \n\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\n        [],\n        'countryList'\n      );\n    \n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n    \n\n\t  const [tagIds, setTagIds] = useState([]);\n\t  const [selectedTags, setSelectedTags] = useState([]);\n  \n\n\n\t  useEffect(() => {\n\n\t\tconsole.log('customerAreaCheck',customer)\n\t\tif (customer && customer.area && customer.area.length > 0) {\n\t\t\tconst tagIds = customer.area.map(item => item._id);\n\t\t\t\n\t\t\tsetSelectedTags(tagIds);\n\t\t\tsetTagIds(tagIds)\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n\t}, [customer.id]);\n\t\n\n\n\n\tconst handleSubmit = async (values : any, actions : any) => {\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t  id: values.id,\n\t\t\t}\n\t\t  },\n\t\tbody: {\n\t\t\tphone: values.phone,\n\t\t\temail: values.email,\n\t\t\tpassword: values.password,\n\t\t\taddress: values.address,\n\t\t\tfirstName: values.firstName,\n\t\t\tlastName: values.lastName,\n\t\t\tcode: values.code,\n\t\t\tcommission: values.commission,\n\t\t\tdepositMoney: values.depositMoney,\n\t\t\tdealerArea: tagIds\n\t\t},\n\t  });\n\t\n\n\t   \t  // @ts-ignore\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\n\t\t\t\t// openSuccessNotification(); \n\t\t\n\t\t\t\tsetvisible(false); \n\n\t\t\t\tconst positionInTag = () => {\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\n\t\t\t\t  }\n\t\t\n\t\t\t\t  const index = positionInTag();\n\t\t\n\t\t\t\t  // @ts-ignore\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { \n\t\t\t\t\t  // @ts-ignore\n\t\t\t\t\t...updateCustomerRes, \n\t\t\t\t\t\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\n\n\t\t\t\t   });\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\n\t\t\t\t  setCustomerList(updateTagList); \n\t\t\t\t\n\t\t\t  }\n\t\t\t  else {\n\t\t\t\topenErrorNotification();\n\t\t\t  }\n\t\t\t\n\t\t\t  actions.setSubmitting(false);\n\t};\n\t\n\n\n\tuseEffect(() => {\n\t\tif (!updateCustomerState['isLoading']) {\n\t\t\tconst error = updateCustomerState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!updateCustomerState['isLoading'] &&\n\t\t\tObject.keys(updateCustomerState.data).length > 0\n\t\t) {\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [updateCustomerState]);\n\n\n\n\n\t\n    const onChangeCity = (value) => {\n        setselectedCityValue(value); \n    }\n\n    const onChangeCountry = (value) => {\n        setselectedCountryValue(value); \n    }\n    \n\tuseEffect(() => {\n\t\tconst setCountries = async () => {\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\n\n\t\t\t// @ts-ignore\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: country.name,\n\t\t\t\t\t\tname: country.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcountryOptions(countryOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCountries();\n    }, []);\n    \n\n    useEffect(() => {\n\t\tconst setCities = async () => {\n\t\t\tconst cityListRes = await handleCityListFetch({\n                urlOptions: {\n                    placeHolders: {\n                      country: selectedCountryValue,\n                    },\n                  },\n            });\n\n\t\t\t// @ts-ignore\n\t\t\tif (cityListRes && cityListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: city.name,\n\t\t\t\t\t\tname: city.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcityOptions(cityOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCities();\n    }, [selectedCountryValue]);\n\n\n\n\n\n\n\n\tconst handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n\n\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\n\t\tif(!isValid ||\n\t\t\t!values.firstName ||\n\t\t\t!values.lastName ||\n\t\t\t// !values.password ||\n\t\t\t!values.phone ||\n\t\t\t!values.code ){\n\t\t\treturn true; \n\t\t}\n\t\treturn false; \n\t  }\n\n\treturn (\n\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...customer}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n\t\t\t<Modal\n\t\t\ttitle=\"Quick Edit\"\n\t\t\twidth={'70vw'}\n\t\t\tvisible={visible}\n\t\t\tonOk={(e : any) => handleSubmit(e)}\n\t\t\tonCancel={handleCancel}\n\t\t\tokText='Update'\n\t\t\tdestroyOnClose={true}\n\t\t\tokButtonProps={{\n\t\t\tloading: isSubmitting,\n\t\t\thtmlType: \"submit\",\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t}}\n\t\t\tbodyStyle={{\n                margin: '0',\n                padding: '10px'\n            }}\n  >\n\n\t  {console.log('errorsupdatedealer',errors)}\n\n<section className='addProductGridContainer'>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\n\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\n\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.code}\n\t\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\n\t\t\t\t\t\t\t\t\tname='depositMoney'\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Commission'\n\t\t\t\t\t\t\t\t\ttype='commission'\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\n\t\t\t\t\t\t\t\t\tname='commission'\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\n\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\n\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\n\n\n  </Modal>\n\t\t\t  \n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewCustomer from './AddNewDealer';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\nimport moment from 'moment';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Dealer Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setCustomerList?: any;\n  roles?: any;\n}\n\nconst MyTable = ({ data, setCustomerList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n\n  const history = useHistory();\n\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\n    {},\n    'deleteDealer'\n  );\n  const handleDeleteCustomer = async (id) => {\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\n      openSuccessNotification('Deleted Dealer');\n      const newCustomerList = data.filter((item) => item.id !== id);\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Code'\n          dataIndex='code'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/dealer/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/dealer/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        {/* <Column\n           title=\"City\" \n           dataIndex=\"city\" \n           key=\"id\" \n           className='classnameofthecolumn'\n            /> */}\n\n        <Column\n          title='Commission'\n          dataIndex='commission'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Deposit Money'\n          dataIndex='depositMoney'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Areas'\n          dataIndex='area'\n          key='role'\n          className='classnameofthecolumn'\n          render={(areas, record) => (\n            <>\n              {areas &&\n                areas.length > 0 &&\n                areas.slice(0, 2).map((tag) => (\n                  <Tag\n                    style={{\n                      borderRadius: '5px',\n                    }}\n                    color='blue'\n                    key={tag._id}\n                  >\n                    {tag.name}\n                  </Tag>\n                ))}\n\n              <span\n                style={{\n                  cursor: 'pointer',\n                }}\n                onClick={() => {\n                  history.push(`/admin/dealer/${record['id']}`);\n                }}\n              >\n                {areas && areas.length === 2 && '.......'}\n              </span>\n            </>\n          )}\n        />\n\n        <Column\n          width={150}\n          title='Created'\n          dataIndex='created'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}</h5>\n            </Space>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess('postDealer', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Dealer'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteCustomer(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          customerList={data}\n          setCustomerList={setCustomerList}\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst CustomerList = ({ roles }: Props) => {\n  const [customerList, setCustomerList] = useState([]);\n\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'dealerList'\n  );\n\n  console.log('dealerList', customerList);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customers = await handleCustomerListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 5000000,\n          },\n        },\n      });\n      // @ts-ignore\n      setCustomerList(customers);\n    };\n    setCustomers();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (customerState.data.length > 0) {\n      const newCustomerList = customerState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('customerState',customerState)\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Dealers</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search dealers..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          {isAccess('postDealer', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {customerState.done && customerList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setCustomerList={setCustomerList}\n              data={customerList}\n            />\n          )}\n          {customerState.isLoading && <DataTableSkeleton />}\n          {customerState.done && !(customerList.length > 0) && (\n            <Empty title='No Dealer found' />\n          )}\n        </div>\n      </div>\n\n      {customerState.done && (\n        <AddNewCustomer\n          setCustomerList={setCustomerList}\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          customerList={customerState.data}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CustomerList);\n","import React,{useState, useEffect} from 'react';\nimport { Modal, Select,notification , Form, Empty } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport {useHandleFetch} from '../../hooks';\nimport Areas from \"./Areas\";\n\n\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .label('Firstname')\n      .required()\n      .min(2, 'First name must have at least 2 characters '),\n    lastName: Yup.string()\n      .label('Lastname')\n      .required()\n      .min(2, 'Lastname must have at least 2 characters '),\n    phone: Yup.string()\n      .required('Please tell us your mobile number.')\n      .max(13, 'Please enter a valid mobile number.'),\n    password: Yup.string()\n      .label('Password')\n      .min(6, 'Password must have at least 6 characters'),\n    email: Yup.string().label('Email').email('Please enter a valid email'),\n  });\n\n\n\n  \nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Dealer Updated',\n\t  description: '',\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n  };\n\n\n  const openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Something Went Wrong',\n\t  description: '',\n\t  icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n  };\n\n\n\n\n\n\ninterface Props {\n\tcustomer: any;\n\tsetvisible: any; \n    visible: any;\n    setCustomerDetailData?:any; \n\n}\n\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\n\n\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \n    const [selectedCityValue,setselectedCityValue] = useState(''); \n\n    const [countryOptions,setcountryOptions] = useState([]); \n    const [cityOptions,setcityOptions] = useState([]); \n\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\n        [],\n        'countryList'\n      );\n    \n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n    \n\n\t  const [tagIds, setTagIds] = useState([]);\n\t  const [selectedTags, setSelectedTags] = useState([]);\n  \n\n\n\t  useEffect(() => {\n\n\t\tconsole.log('customerAreaCheck',customer)\n\t\tif (customer && customer.area && customer.area.length > 0) {\n\t\t\tconst tagIds = customer.area.map(item => item._id);\n\t\t\t\n\t\t\tsetSelectedTags(tagIds);\n\t\t\tsetTagIds(tagIds)\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n\t}, [customer.id]);\n\t\n\n\n\n\tconst handleSubmit = async (values : any, actions : any) => {\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t  id: values.id,\n\t\t\t}\n\t\t  },\n\t\tbody: {\n\t\t\tphone: values.phone,\n\t\t\temail: values.email,\n\t\t\tpassword: values.password,\n\t\t\taddress: values.address,\n\t\t\tfirstName: values.firstName,\n\t\t\tlastName: values.lastName,\n\t\t\tcode: values.code,\n\t\t\tcommission: values.commission,\n\t\t\tdepositMoney: values.depositMoney,\n\t\t\tdealerArea: tagIds\n\t\t},\n\t  });\n\t\n\n\t   \t  // @ts-ignore\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\n\t\t\t\t// openSuccessNotification(); \n\t\t\n                setvisible(false); \n                \n                setCustomerDetailData({\n                    // @ts-ignore\n                    ...updateCustomerRes, \n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\n                })\n\t\t\t\t\n\t\t\t  }\n\t\t\t  else {\n\t\t\t\topenErrorNotification();\n\t\t\t  }\n\t\t\t\n\t\t\t  actions.setSubmitting(false);\n\t};\n\t\n\n\n\tuseEffect(() => {\n\t\tif (!updateCustomerState['isLoading']) {\n\t\t\tconst error = updateCustomerState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!updateCustomerState['isLoading'] &&\n\t\t\tObject.keys(updateCustomerState.data).length > 0\n\t\t) {\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [updateCustomerState]);\n\n\n\n\n\t\n    const onChangeCity = (value) => {\n        setselectedCityValue(value); \n    }\n\n    const onChangeCountry = (value) => {\n        setselectedCountryValue(value); \n    }\n    \n\tuseEffect(() => {\n\t\tconst setCountries = async () => {\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\n\n\t\t\t// @ts-ignore\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: country.name,\n\t\t\t\t\t\tname: country.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcountryOptions(countryOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCountries();\n    }, []);\n    \n\n    useEffect(() => {\n\t\tconst setCities = async () => {\n\t\t\tconst cityListRes = await handleCityListFetch({\n                urlOptions: {\n                    placeHolders: {\n                      country: selectedCountryValue,\n                    },\n                  },\n            });\n\n\t\t\t// @ts-ignore\n\t\t\tif (cityListRes && cityListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: city.name,\n\t\t\t\t\t\tname: city.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcityOptions(cityOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCities();\n    }, [selectedCountryValue]);\n\n\n\n\n\n\n\n\tconst handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n\n\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\n\t\tif(!isValid ||\n\t\t\t!values.firstName ||\n\t\t\t!values.lastName ||\n\t\t\t// !values.password ||\n\t\t\t!values.phone ||\n\t\t\t!values.code ){\n\t\t\treturn true; \n\t\t}\n\t\treturn false; \n\t  }\n\n\treturn (\n\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...customer}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n\t\t\t<Modal\n\t\t\ttitle=\"Quick Edit\"\n\t\t\twidth={'70vw'}\n\t\t\tvisible={visible}\n\t\t\tonOk={(e : any) => handleSubmit(e)}\n\t\t\tonCancel={handleCancel}\n\t\t\tokText='Update'\n\t\t\tdestroyOnClose={true}\n\t\t\tokButtonProps={{\n\t\t\tloading: isSubmitting,\n\t\t\thtmlType: \"submit\",\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t}}\n\t\t\tbodyStyle={{\n                margin: '0',\n                padding: '10px'\n            }}\n  >\n\n\t  {console.log('errorsupdatedealer',errors)}\n\n<section className='addProductGridContainer'>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\n\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\n\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.code}\n\t\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\n\t\t\t\t\t\t\t\t\tname='depositMoney'\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Commission'\n\t\t\t\t\t\t\t\t\ttype='commission'\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\n\t\t\t\t\t\t\t\t\tname='commission'\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\n\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\n\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\n\n\n  </Modal>\n\t\t\t  \n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import \nimport Moment from \"react-moment\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Spin, Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport CustomerEdit from \"./DealerEdit\";\n\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\n\n\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    roles?: any;\n}\n\nconst NewBrandDetail = ({roles}: Props) => {\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'dealerDetail');\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'dealerOrderList');\n    const [registeredCustomerListState, handleRegisteredCustomerListFetch] = useHandleFetch({}, 'dealerRegisteredCustomerList');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [customerDetailData,setCustomerDetailData] = useState({}); \n\n\n\n    const params = useParams();\n    const history = useHistory();\n    const customerId = params['id'];\n\n    useEffect(() => {\n\n        const getCustomerDetail = async () => {\n            const customerDetailDataRes = await handleCustomerDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if(customerDetailDataRes){\n                // @ts-ignore\n                setCustomerDetailData(customerDetailDataRes); \n            }\n\n            console.log('customerDetailDataRes',customerDetailDataRes)\n        };\n\n        getCustomerDetail();\n\n    }, [customerId]);\n\n\n\n    useEffect(() => {\n        const getOrderList = async () => {\n            await handleOrderListFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            })\n        };\n\n        getOrderList();\n\n        const getRegisteredOrderList = async () => {\n            await handleRegisteredCustomerListFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            })\n        };\n\n        getRegisteredOrderList();\n\n\n\n\n    }, [customerId]);\n\n\n    console.log('dealerDetailData', customerDetailData);\n\n    \n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                 Dealer Detail\n                </h3>\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <>\n                        <CustomerEdit\n                            visible={tagEditVisible}\n                            setvisible={setTagEditVisible}\n                            customer={customerDetailData}\n                            setCustomerDetailData={setCustomerDetailData}\n                        />\n\n                {isAccess('postDealer',roles) && (\n                                    <Button\n                                    onClick={() => setTagEditVisible(true)}\n                                    type='link'\n                                    icon={<EditOutlined />}\n                                >\n                                    Edit\n                            </Button>\n                                )}\n\n\n                    \n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={customerDetailState.isLoading}>\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\n                    <Empty description='No Dealer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {customerDetailData['name']}\n                            </h2>\n                           \n\n                           \n                            {customerDetailData['code'] && (\n                                <h3>\n                                    CODE:\n                                    <span>\n                                        {customerDetailData['code']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n\n\n                            {customerDetailData['commision'] && (\n                                <h3>\n                                    COMMISSION:\n                                    <span>\n                                        {customerDetailData['commision']}\n                                    </span>\n                                </h3>\n                            )}\n\n                            {customerDetailData['depositMoney'] && (\n                                <h3>\n                                    DEPOSIT MONEY:\n                                    <span>\n                                        {customerDetailData['depositMoney']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n                            {customerDetailData['city'] && (\n                                <h3>\n                                    CITY:\n                                    <span>\n                                        {customerDetailData['city']}\n                                    </span>\n                                </h3>\n                            )}\n                        \n\n\n                            {customerDetailData['address1'] && (\n                                <h3>\n                                    ADDRESS:\n                                    <span>\n                                        {customerDetailData['address1']}\n                                    </span>\n                                </h3>\n                            )}\n                         \n\n                            {customerDetailData['phone'] && (\n                                <h3>\n                                    PHONE:\n                                    <span>\n                                        {customerDetailData['phone']}\n                                    </span>\n                                </h3>\n                            )}\n\n                             {customerDetailData['email'] && (\n                                <h3>\n                                    EMAIL:\n                                    <span>\n                                        {customerDetailData['email']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n                              {customerDetailData['area'] && customerDetailData['area'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                        AREAS:\n                                        {customerDetailData['area'].map(cat => {\n                                            return (\n                                                <span\n                                                    // onClick={() => history.push(`/admin/dealer/area/${cat._id}`)}\n\n                                                >\n                                                    {cat.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                }\n\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n        <div className='dealerDetailBodyContainer'>\n            <div className='dealerDetailBodyContainer__item'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                     Orders \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {orderListState.isLoading && (\n                  <>\n                  <div style={{\n                    margin: '100px'\n                  }}>\n                  <Spin size='large' />\n                  </div>\n                  </>\n                )}\n\n                                {orderListState.done && !(orderListState.data.length > 0) && (\n\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Orders found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={orderListState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                          \n          \n          \n\n        <Column\n          title=\"Code\"\n          dataIndex=\"shortCode\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                #{text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n\n\n        <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                {text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n\n\n              <Column\n                title=\"Total Price\" \n                dataIndex=\"total\" \n                key=\"id\" \n                className='classnameofthecolumn'\n                />\n\n\n\n\n          <Column\n            width={150}\n           title=\"Status\" \n           dataIndex=\"status\" \n           key=\"id\" \n           className='classnameofthecolumn'\n           render={(text, record: any) => (\n            <>\n\n             <a href='##'>\n              <span\n              style={{\n                fontSize:'12px'\n              }}\n                >\n                {text}\n             </span> \n            </a>\n            </>\n          )}\n            />\n\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n            </div>\n            <div className='dealerDetailBodyContainer__item'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                     Customers \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {registeredCustomerListState.isLoading && (\n                  <>\n                  <div style={{\n                    margin: '100px'\n                  }}>\n                  <Spin size='large' />\n                  </div>\n                  </>\n                )}\n                {registeredCustomerListState.done && !(registeredCustomerListState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {registeredCustomerListState.done && registeredCustomerListState.data && registeredCustomerListState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={registeredCustomerListState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                          \n          \n          \n                          <Column\n                      title=\"Name\" \n                      dataIndex=\"name\" \n                      key=\"id\" \n                      className='classnameofthecolumn'\n                      render={(text, record: any) => (\n                        <>\n                          <h4\n                            onClick={() => {\n                              history.push(`/admin/customer/${record.id}`)\n                              // setcategoryDetailVisible(true);\n                            }}\n                            style={{\n                              fontWeight: 400,\n                              color: '#555',\n                              cursor: 'pointer'\n                            }}>\n                            {text}\n                          </h4>\n                        </>\n                      )}\n                      />\n\n         \n     \n\n         \n\n            \n          <Column\n           title=\"Order\" \n           dataIndex=\"orderCount\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n        <Column\n           title=\"Total Price\" \n           dataIndex=\"totalOrderPrice\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    roles: state.globalState,\n  })\n  \n  // @ts-ignore\n  export default connect(mapStateToProps, null)(NewBrandDetail);\n  \n  \n  \n  \n\n\n\n","import React, { useState,useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport { useHandleFetch } from '../../../hooks';\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\nimport MetaTags from \"../../../pages/category/MetaTags\";\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Area Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\n\n\ninterface Props {\n    tagEditVisible?: any;\n    setTagEditVisible?: any;\n    tagDetailData?: any;\n    setTagList?:any; \n    tagList?:any; \n}\n\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        const updateTagRes = await handleUpdateCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: values.id,\n                }\n            },\n            body: {\n                name: values.name,\n            },\n        });\n\n        // @ts-ignore\n        if (updateTagRes && updateTagRes.status === 'ok') {\n\n\n\t\t\tconst positionInTag = () => {\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\n\t\t\t}\n\n\t\t\tconst index = positionInTag();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n\t\t\tsetTagList(updateTagList);\n\n\n            console.log('categoryupdateTagRes',updateTagRes);\n\t\t\topenSuccessNotification();\n\t\t\tsetTagEditVisible(false)\n\t\t\t\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }; \n \n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={{\n                ...initialValues, \n                ...tagDetailData,\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\n                    bnMetaTitle: tagDetailData['bn']\n                    && tagDetailData['bn'].metaTitle\n                    && tagDetailData['bn'].metaTitle,\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\n                  })\n            }}\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                        \tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px',\n\n\t\t\t\t\t\t\t}}\n                            title=\"Area Edit\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                        >\n                            <Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\n\n\n                        </Modal>\n\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\n\nimport {\n    FileOutlined,\n    InboxOutlined,\n    FileAddOutlined,\n    DeleteOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    PlusOutlined,\n    FileImageFilled\n} from '@ant-design/icons';\n\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"../../../pages/category/MetaTags\";\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Area Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible?: any;\n    setAddNewCategoryVisible?: any;\n    tagList?: any;\n    setTagList?: any;\n\n}\n\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\n\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addDealerArea');\n    const [myImages, setmyImages] = useState(false);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n\n    const handleSubmit = async (values: any, actions: any) => {\n        const addTagRes = await handleAddTagFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: values.id,\n                }\n            },\n            body: {\n                name: values.name.trim(),\n            },\n        });\n\n        // @ts-ignore\n        if (addTagRes && addTagRes.status === 'ok') {\n            openSuccessNotification();\n\n            setTagList([{\n                id: addTagRes['_id'] || '',\n                key: addTagRes['_id'] || '',\n                name: addTagRes['name'] || '',\n            },...tagList])\n            actions.resetForm();\n            setAddNewCategoryVisible(false);\n        }\n        else {\n            openErrorNotification();\n        }\n\n\n        actions.setSubmitting(false);\n\n    };\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px'\n                            }}\n                            title=\"Add New Area\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                        >\n                  \t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisibleMedia}\n                            visible={visibleMedia}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            isModalOpenForImages={true}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport TagQuickEdit from './AreaQuickEdit';\nimport AddNewTag from './AddNewArea';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Area Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteDealerArea'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Area');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/dealer/area/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Area'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <TagQuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          tagEditVisible={visible}\n          setTagEditVisible={setvisible}\n          tagDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Areas</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search areas..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Area found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewTag\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","import React, { useState,useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { useHandleFetch } from '../../../hooks';\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\nimport MetaTags from \"../../../pages/category/MetaTags\";\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Area Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n}\n\n\ninterface Props {\n    tagEditVisible?: any;\n    setTagEditVisible?: any;\n    tagDetailData?: any;\n    setTagDetailData?:any; \n}\n\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\n \n    \n\n    const handleSubmit = async (values: any, actions: any) => {\n        const updateTagRes = await handleUpdateCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: values.id,\n                }\n            },\n            body: {\n                name: values.name,\n            \n            },\n        });\n\n        // @ts-ignore\n        if (updateTagRes && updateTagRes.status === 'ok') {\n            setTagDetailData({\n                id:values.id,\n                key:values.id,\n                name: values.name,\n            })\n            console.log('categoryupdateTagRes',updateTagRes);\n            openSuccessNotification();\n\n            // const positionInTag = () => {\n            //     return tagList.map(item => item.id).indexOf(category.id);\n            // }\n\n            // const index = positionInTag();\n\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n            // setTagList(updateTagList);\n\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n        setTagEditVisible(false)\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }; \n\n\n    // useEffect(()=>{\n\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\n    //         const metaTags = tagDetailData.metaTags.split(','); \n\n    //         console.log('localMetaTags',metaTags);\n           \n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \n\n    //         setTags(metaTags)\n    //         setBnTags(bnMetaTags)\n    //     }\n\n    // },[]); \n\n\n    console.log('tagDetailData',tagDetailData);\n\n\n \n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={{\n                ...initialValues, \n                ...tagDetailData,\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\n                    bnMetaTitle: tagDetailData['bn']\n                    && tagDetailData['bn'].metaTitle\n                    && tagDetailData['bn'].metaTitle,\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\n                  })\n            }}\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                        \tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px',\n\n\t\t\t\t\t\t\t}}\n                            title=\"Area Edit\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                        >\n                            <Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                        </Modal>\n\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import lib\nimport { EditOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport TagEdit from './AreaEdit';\nimport moment from 'moment';\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'dealerAreaDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'dealerListByArea'\n  );\n\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailData, setTagDetailData] = useState({});\n\n  console.log('dealerListByArea', tagProductsState);\n  const params = useParams();\n  const history = useHistory();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const tagDetailRes = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (tagDetailRes) {\n        console.log('tagDetailRes', tagDetailRes);\n        // @ts-ignore\n        setTagDetailData(tagDetailRes);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Area Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              <TagEdit\n                tagEditVisible={tagEditVisible}\n                setTagEditVisible={setTagEditVisible}\n                tagDetailData={tagDetailData}\n                setTagDetailData={setTagDetailData}\n              />\n              <Button\n                onClick={() => setTagEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Area found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                <h2>{tagDetailData['name']}</h2>\n                {tagDetailData['url'] && (\n                  <h3>\n                    URL:\n                    <span>{tagDetailData['url']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      <div className='brandDetailContainer__heading'>\n        <h3>Dealers</h3>\n      </div>\n      <div className='brandDetailContainer__body'>\n        {tagProductsState.isLoading && <DataTableSkeleton />}\n        {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No Dealer exists for this area'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        )}\n\n        {tagProductsState.done &&\n          tagProductsState.data &&\n          tagProductsState.data.length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                // expandable={{\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                //     rowExpandable: record => record.name !== 'Not Expandable',\n                //   }}\n                // bordered={true}\n                size='small'\n                // pagination={false}\n                dataSource={tagProductsState.data}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title='Code'\n                  dataIndex='code'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/dealer/${record.id}`);\n                          // setcategoryDetailVisible(true);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/dealer/${record.id}`);\n                          // setcategoryDetailVisible(true);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Commission'\n                  dataIndex='commission'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Deposit Money'\n                  dataIndex='depositMoney'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  width={150}\n                  title='Created'\n                  dataIndex='created'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <Space size='middle'>\n                      <h5>\n                        {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\n                      </h5>\n                    </Space>\n                  )}\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React from 'react';\n\n// import pages\nimport { Overview } from '../../pages/overview';\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\nimport {\n  ProductBundleDetail,\n  ProductBundleList,\n} from '../../pages/productBundle';\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\nimport { ProductList, NewProductDetail } from '../../pages/product';\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\nimport { CouponList, CouponDetail } from '../../pages/coupon';\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\nimport { PagesList, AddNewPage, PageDetail, PageEdit } from '../../pages/pages';\nimport { AttributeList } from '../../pages/attribute';\nimport {\n  OrderList,\n  AddNewOrder,\n  OrderDetail,\n  OrderAnalytics,\n  ConfigOrderStatus,\n} from '../../pages/order';\nimport {\n  Component,\n  ManageThemes,\n  Image,\n  Invoice,\n  SiteInfo,\n} from '../../pages/settings';\nimport { Delivery } from '../../pages/delivery';\nimport Sms from '../../pages/sms';\nimport { Email } from '../../pages/email';\nimport { NotificationList } from '../../pages/notification';\nimport { AdminList, AdminDetail } from '../../pages/admins';\nimport { PostList, PostDetail } from '../../pages/post';\nimport { StaffList, StaffDetail } from '../../pages/staff';\nimport {\n  SalaryReportDetail,\n  SalaryReportList,\n} from '../../pages/staff/salaryReport';\nimport { ExpenseList, ExpenseDetail } from '../../pages/expense';\nimport { DealerList, DealerDetail } from '../../pages/dealer';\nimport { AreaDetail, AreaList } from '../../pages/dealer/Area';\nimport {\n  PostTagList,\n  PostCategoryList,\n  NewPostCategoryDetail,\n  NewPostTagDetail,\n} from '../../pages/post';\n\n// import Login from '../../pages/auth/login';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nconst { Content } = Layout;\n\ninterface Props {}\n\nconst ContentComponent = (props: Props) => {\n  return (\n    <Content\n      hasSider={true}\n      style={{\n        backgroundColor: '#fff',\n        paddingTop: '20px',\n        marginLeft: '260px',\n        marginTop: '50px'\n      }}\n    >\n      <Switch>\n        <Route\n          exact\n          path='/'\n          render={() => <Redirect to='/admin/overview' />}\n        />\n        <Route\n          exact\n          path='/admin'\n          render={() => <Redirect to='/admin/overview' />}\n        />\n        <Route path='/admin/overview' exact>\n          <Overview />\n        </Route>\n        <Route path='/admin/category' exact>\n          <CategoryList />\n        </Route>\n        <Route path='/admin/category/:id' exact>\n          <NewCategoryDetail />\n        </Route>\n        {/* <Route path='/admin/category/:name' exact>\n                    <CategoryDetail />\n                </Route> */}\n        {/* CategoryDetail */}\n        <Route path='/admin/brand/new' exact>\n          <AddNewBrand />\n        </Route>\n        <Route path='/admin/brand' exact>\n          <BrandList />\n        </Route>\n        <Route path='/admin/brand/:id' exact>\n          <NewBrandDetail />\n        </Route>\n        <Route path='/admin/product' exact>\n          <ProductList />\n        </Route>\n        <Route path='/admin/product/:id' exact>\n          <NewProductDetail />\n        </Route>\n        <Route path='/admin/bundle' exact>\n          <ProductBundleList />\n        </Route>\n        <Route path='/admin/bundle/:id' exact>\n          <ProductBundleDetail />\n        </Route>\n        <Route path='/admin/coupon' exact>\n          <CouponList />\n        </Route>\n        <Route path='/admin/posts' exact>\n          <PostList />\n        </Route>\n        <Route path='/admin/posts/tag' exact>\n          <PostTagList />\n        </Route>\n        <Route path='/admin/posts/category' exact>\n          <PostCategoryList />\n        </Route>\n        <Route path='/admin/posts/:id' exact>\n          <PostDetail />\n        </Route>\n        <Route path='/admin/posts/tag/:id' exact>\n          <NewPostTagDetail />\n        </Route>\n        <Route path='/admin/posts/category/:id' exact>\n          <NewPostCategoryDetail />\n        </Route>\n        <Route path='/admin/coupon/:id' exact>\n          <CouponDetail />\n        </Route>\n        <Route path='/admin/notification' exact>\n          <NotificationList />\n        </Route>\n        {/* <Route path='/product/new' exact>\n                     <AddNewProduct />\n                   </Route> */}\n        <Route path='/admin/tag' exact>\n          <TagList />\n        </Route>\n        <Route path='/admin/tag/new' exact>\n          <AddNewTag />\n        </Route>\n        <Route path='/admin/tag/:id' exact>\n          <NewTagDetail />\n        </Route>\n        <Route path='/admin/attribute' exact>\n          <AttributeList />\n        </Route>\n        <Route path='/admin/order' exact>\n          <OrderList />\n        </Route>\n        <Route path='/admin/order/new' exact>\n          <AddNewOrder />\n        </Route>\n        <Route path='/admin/order/overview' exact>\n          <OrderAnalytics />\n        </Route>\n        <Route path='/admin/order/config' exact>\n          <ConfigOrderStatus />\n        </Route>\n        <Route path='/admin/order/:id' exact>\n          <OrderDetail />\n        </Route>\n        <Route path='/admin/dealer' exact>\n          <DealerList />\n        </Route>\n        <Route path='/admin/dealer/area' exact>\n          <AreaList />\n        </Route>\n        <Route path='/admin/dealer/area/:id' exact>\n          <AreaDetail />\n        </Route>\n        <Route path='/admin/dealer/:id' exact>\n          <DealerDetail />\n        </Route>\n        <Route path='/admin/staff' exact>\n          <StaffList />\n        </Route>\n        <Route path='/admin/salaryReport' exact>\n          <SalaryReportList />\n        </Route>\n        <Route path='/admin/salaryReport/:id' exact>\n          <SalaryReportDetail />\n        </Route>\n        <Route path='/admin/staff/:id' exact>\n          <StaffDetail />\n        </Route>\n        <Route path='/admin/expense' exact>\n          <ExpenseList />\n        </Route>\n        <Route path='/admin/expense/:id' exact>\n          <ExpenseDetail />\n        </Route>\n\n        <Route path='/admin/acccounting/overview' exact>\n          <OrderList />\n        </Route>\n\n        <Route path='/admin/customer' exact>\n          <CustomerList />\n        </Route>\n        <Route path='/admin/customer/:id' exact>\n          <CustomerDetail />\n        </Route>\n        <Route path='/admin/page' exact>\n          <PagesList />\n        </Route>\n        <Route path='/admin/page/new' exact>\n          <AddNewPage />\n        </Route>\n        <Route path='/admin/page/edit/:id' exact>\n          <PageEdit />\n        </Route>\n\n        <Route path='/admin/page/:id' exact>\n          <PageDetail />\n        </Route>\n        <Route path='/admin/delivery' exact>\n          <Delivery />\n        </Route>\n        <Route path='/admin/settings/components' exact>\n          <Component />\n        </Route>\n        <Route path='/admin/settings/image' exact>\n          <Image />\n        </Route>\n        <Route path='/admin/settings/themes' exact>\n          <ManageThemes />\n        </Route>\n        <Route path='/admin/settings/invoice' exact>\n          <Invoice />\n        </Route>\n        <Route path='/admin/settings/siteInfo' exact>\n          <SiteInfo />\n        </Route>\n        <Route path='/admin/settings/admins' exact>\n          <AdminList />\n        </Route>\n        <Route path='/admin/settings/admins/:id' exact>\n          <AdminDetail />\n        </Route>\n        <Route path='/admin/sms' exact>\n          <Sms />\n        </Route>\n        <Route path='/admin/email' exact>\n          <Email />\n        </Route>\n      </Switch>\n    </Content>\n  );\n};\n\nexport default ContentComponent;\n","import Content from \"./Content\";\nexport default Content; ","import React from 'react';\n\n// import libraries\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\n\n\ninterface Props {\n\n}\n\nconst FooterComponent = (props: Props) => {\n    return (\n        <Footer style={{ textAlign: 'center', background: '#fff', color: '#1890ff' }}>\n            © 2020 The Admin - Developed By Lotus Technology Development.\n        </Footer>\n    )\n}\n\nexport default FooterComponent\n","import Footer from \"./Footer\";\nexport default Footer; ","import React, { useEffect } from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n// import layouts\nimport Sider from './layout/sider';\nimport Header from './layout/header';\nimport Content from './layout/content';\nimport Footer from './layout/footer';\n\n\n// import state\nimport { glboalOperations } from './state/ducks/globalState';\nimport { credentialsOperations } from './state/ducks/credentials';\nimport { connect } from 'react-redux';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import hooks;\n\nimport { useHandleFetch } from './hooks';\n\nconst App = ({ saveRoles, saveCredentials }) => {\n  const [\n    getAdminCredentialState,\n    handleAdminCredentCialsFetch,\n  ] = useHandleFetch({}, 'getAdminCredential');\n\n  useEffect(() => {\n    const getCredenCials = async () => {\n      const res = await handleAdminCredentCialsFetch({});\n      // saveCredentials(res);\n      // @ts-ignore\n      if (res && res['role']) {\n        saveRoles(res['role'] || []);\n      }\n    };\n    getCredenCials();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/admin/login' exact>\n          <Login />\n        </Route>\n      </Switch>\n      <Switch>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Header />\n\n          <Layout className='site-layout'>\n            <Sider />\n            <Content />\n          </Layout>\n          <Footer />\n        </Layout>\n      </Switch>\n    </Router>\n  );\n};\n\nconst mapDispathToProps = {\n  saveRoles: glboalOperations.saveRoles,\n  saveCredentials: credentialsOperations.saveCredentials,\n};\n\nconst mapStateToProps = (state) => ({\n  globalState: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispathToProps)(App);\n\n/* \n\n#product \n#order\n#category\n#order\n#customer\n#customer\n*/\n\n/*\n\nfix ===>\n\n// # product add -> category name search dile crash kore\n// # add order -> make delivery zone align as horizontal\n// # double notification -> when creating order \n// # customer detail -> customer er order history hobe\n// # customer list => add orderCount and totalOrderPrice field to show\n# customer List =>  user will be able to sort with them (sort=totalOrderPrice&sortOrder=-1) \n// # order analytics -> add metric=deliveryRegion \n# at the footer of analytic charts -> add a show data button -> on clicked show data as table \n# price price field - make input type number \n# delivery region edit\n# email api implementation\n# check if the tag edit works properly \n# on open product quick epit site crashes \n# product bundle detail -> show images in product bundle detail \n# fix the attach image in bundle \n# amount type will be drowpdown\n# add meta tags autofill in all items \n# add porst/add product => categories scrolbar\n# update all the item quick edit to item edit \n# make order edit functionality to quick order edit\n\n\nfeat ===> \n\n# dealer\n# bundle edit\n# coupon edit\n# post edit\n# post category edit\n# post tag edit (maybe)\n# notification\n# admin roles\n# dynamic order status\n# add dealer code at add order. \n# add coupon code at add order. \n*/\n\n/* \n\n*/\n\n/*\n\nissus ====> \n\nerror => product bundle ---> item not defined. \nerror => Cannot read property 'offer' of undefined. \nerror => coupon cover is coming as array in coupon list.\nerror => update post tag => Cannot read property 'name' of undefined. \nerror => add post category => checkMime is not defined probably because of the image.\npage update => {\"image\":\"selected image are not attached to page with given id\"}.\norder list => add delivery filtering drowndown\nrecipe category => fix recipe category edit and others'\nadd site map => at site info add a extra tab, --sitemap-- then in there show, site maps, and\nin below show update button which will update the site map. \nmake components images to update at once.  \n\n*/\n\n/* \n\nOff work left to do: \nFiltering order by deliveryzone\nmaking Post category work perfectly\nupdate component at once. \norder status is not working properly\nadmin roles\ngive resolved images when create a component\ncheck if productlist returns cover\nmake admin list section work properly\n*/\n\n/* \n\nThings that still left to do in mangshobazar: \n\nadd delete button in add new component\ncomplete salary report \nfix the order invoice \n\n\n// on change search in --> customer/recipe/dealer/staff\n\n\n\n\n----------------------------------------------------\nEDIT RECIPIE\t* bn fields not populating (preparationTime, servingSize) --> \nsuggestion --> change servingSize->serving\n   and preparationTime -> prepTime\t* servingSize is not defined error\n    on updateSINGLE RECIPIE PAGE\t* on edit shows \n   \"servingSize is not defined\"EDIT CATEGORY: \t* bn values and meta fields not populating on edit. \n\n\n\n\n\n   Design systems: \n   Lack of adoption is the number one why design system fails.\n*/\n","export function actionShouldBlock( meta ) {\n    return !meta || !meta.async || !meta.blocking;\n}\n\nexport function actionFinished ( type ) {\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\n}\n","import * as utils from \"./utils\";\n\nconst busyReducer = ( state = 0, action ) => {\n    if ( utils.actionShouldBlock( action.meta ) ) {\n        return state;\n    }\n    if ( utils.actionFinished( action.type ) ) {\n        return state - 1;\n    }\n    return state + 1;\n};\n\nexport default busyReducer;\n","import reducer from \"./reducers\";\n\nexport default reducer;\n","export function productPositionInCart(cart, product) {\n  return cart.map(item => item.product.id).indexOf(product.id);\n}\n\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\n  return {\n    product,\n    quantity,\n    isSelectedForCheckout,\n  };\n}\n","export function getCartItemQuantity(cart, id) {\n  return cart.find((item) => item.product.id === id).quantity;\n}\n\nexport const getTotalPriceOfCartItems = (cartItems) => {\n  if (!cartItems.length > 0) {\n    return 0;\n  }\n\n  const prices = cartItems.map((cartItem) => {\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\n  });\n\n  const totalPrice = prices.reduce((a, b) => {\n    return a + b;\n  }, 0);\n  return totalPrice;\n};\n","import reducer from \"./reducers\";\n\nimport * as cartOperations from \"./operations\";\nimport * as cartSelectors from \"./selectors\";\n\nexport {\n    cartOperations,\n    cartSelectors,\n};\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n        product,\n        quantity,\n    }\n]\n*/\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.TOGGLE]: (state, action) => {\n    const { product, quantity, isSelectedForCheckout } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n    if (index === -1) {\n      return [\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\n        ...state,\n      ];\n    }\n\n    const tempArrayWithOutOldProduct = state.filter(\n      (item) => item.product.id !== product.id\n    );\n\n    return tempArrayWithOutOldProduct;\n  },\n\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\n    const { cartItems } = action.payload;\n\n    if (cartItems.length > 0) {\n      return cartItems;\n    } else {\n      return [...state];\n    }\n  },\n\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\n    const { product } = action.payload;\n\n    const index = utils.productPositionInCart(state, product.product);\n    if (index === -1) {\n      return [...state, { ...product, isSelectedForCheckout: true }];\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\n      const tempArrayWithOutOldProduct = state.filter(\n        (item) => item.product.id !== product.product.id\n      );\n\n      return [\n        ...tempArrayWithOutOldProduct,\n        { ...product, isSelectedForCheckout: true },\n      ];\n    }\n\n    const tempArrayWithOutOldProduct = state.filter(\n      (item) => item.product.id !== product.product.id\n    );\n\n    return [\n      ...tempArrayWithOutOldProduct,\n      { ...product, isSelectedForCheckout: false },\n    ];\n  },\n\n  [types.CHANGE_QUANTITY]: (state, action) => {\n    const { product, quantity } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n\n    const updatedItem = Object.assign({}, state[index], { quantity });\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\n  },\n  [types.REMOVE]: (state, action) => {\n    const { product } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default cartReducer;\n","export const SET_CART = 'cart/SET';\nexport const TOGGLE = 'cart/TOGGLE';\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\nexport const REMOVE = 'cart/REMOVE';\nexport const CLEAR = 'cart/CLEAR';\n","export function productPositionInWishList(wishList, productId) {\n  return wishList.map(item => item).indexOf(productId);\n}\n","import reducer from './reducers';\n\nimport * as wishListOperations from './operations';\nimport * as wishListSelectors from './selectors';\n\nexport { wishListOperations, wishListSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n        product\n    }\n]\n*/\n\nconst initialState = [];\n\nconst wishListReducer = createReducer(initialState)({\n  [types.TOGGLE]: (state, action) => {\n    const { productId } = action.payload;\n\n    const index = utils.productPositionInWishList(state, productId);\n    if (index === -1) {\n      return [...state, productId];\n    }\n\n    const tempArrayWithOutOldProduct = state.filter(\n      (item) => item !== productId\n    );\n\n    return tempArrayWithOutOldProduct;\n  },\n  [types.ADD_WISHLIST]: (state, action) => {\n    const wishlist = action.payload;\n    return [...wishlist];\n  },\n\n  [types.REMOVE]: (state, action) => {\n    const { productId } = action.payload;\n    const index = utils.productPositionInWishList(state, productId);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default wishListReducer;\n","export const TOGGLE = 'wishList/TOGGLE';\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\nexport const REMOVE = 'wishList/REMOVE';\nexport const CLEAR = 'wishList/CLEAR';\n","export function getCartItemQuantity( cart, id ) {\n    return cart.find( item => item.product.id === id ).quantity;\n}\n\n\nexport const getTotalPriceOfCartItems = (cartItems) => {\n    if(!cartItems.length > 0){\n        return 0; \n    }\n\n    return cartItems.reduce((a,b) => {\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\n    },0); \n\n}","import reducer from './reducers';\n\nimport * as checkoutOperations from './operations';\nimport * as checkoutSelectors from './selectors';\n\nexport { checkoutOperations, checkoutSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n        product,\n        quantity,\n    }\n]\n*/\n\nconst initialState = [];\n\nconst checkoutReducer = createReducer(initialState)({\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\n    const { products } = action.payload;\n\n    if (products.length > 0) {\n      const uniqueProductsOfCheckout = products.filter(function(product) {\n        return state.indexOf(product) == -1;\n      });\n      return uniqueProductsOfCheckout;\n    } else {\n      return [...state];\n    }\n  },\n  [types.REMOVE]: (state, action) => {\n    const { product } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default checkoutReducer;\n","export const SET_CART = 'checkout/SET';\nexport const TOGGLE = 'checkout/TOGGLE';\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\nexport const REMOVE = 'checkout/REMOVE';\nexport const CLEAR = 'checkout/CLEAR';\n","export function productPositionInCart( cart, product ) {\n    return cart.map( item => item.product.id ).indexOf( product.id );\n}\n\nexport function newCartItem( product, quantity ) {\n    return {\n        product,\n        quantity,\n    };\n}\n","export const ADD = 'serach/ADD';\nexport const UPDATE = 'serach/UPDATE';\nexport const REMOVE = 'serach/REMOVE';\nexport const CLEAR = 'serach/CLEAR';\n","export function queryPositionInQueryList(queryList, query) {\n  return queryList.map(item => item.key).indexOf(query.key);\n}\n\nexport function newQueryItem(query) {\n  return query;\n}\n","import reducer from './reducers';\n\nimport * as queryOperations from './operations';\nimport * as querySelectors from './selectors';\n\nexport { queryOperations, querySelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n       id: uniqueId,\n       key: 'searchQuery',\n       value: string | product => {name,id,image}\n       created: Date,\n       lastUpdated: Date\n    }\n]\n*/\n\nconst initialState = [];\n\nconst searyQueryReducer = createReducer(initialState)({\n  [types.ADD]: (state, action) => {\n    const { query } = action.payload;\n    const index = utils.queryPositionInQueryList(state, query);\n    if (index === -1) {\n      return [utils.newQueryItem(query), ...state];\n    }\n\n    const currentItem = state[index];\n    const updatedItem = Object.assign({}, currentItem);\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\n  },\n  [types.UPDATE]: (state, action) => {\n    const { query } = action.payload;\n    const oldQuery = state.find(item => item.key !== query.key);\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\n  },\n  [types.REMOVE]: (state, action) => {\n    const { product } = action.payload;\n    const index = utils.queryPositionInQueryList(state, product);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default searyQueryReducer;\n","import { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nimport { createReducer } from \"../../utils\";\n\n/* State shape\n{\n    details: product,\n    list: [ product ],\n}\n*/\n\nconst detailsReducer = createReducer( null )( {\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\n} );\n\nconst listReducer = createReducer( [ ] )( {\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\n} );\n\nexport default combineReducers( {\n    details: detailsReducer,\n    list: listReducer,\n} );\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\n\nexport const FETCH_LIST = \"product/FETCH_LIST\";\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\n","import reducer from \"./reducers\";\n\nimport * as productOperations from \"./operations\";\n\nexport {\n    productOperations,\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport * as types from './types';\nimport { createReducer } from '../../utils';\n\n/* State shape\n{\n    isAuthenticated: bool,\n    redirectAfterLogin: string\n}\n*/\n\nconst authReducer = createReducer(false)({\n  [types.LOGIN]: () => true,\n  [types.LOGOUT]: () => false,\n});\n\nconst redirectAfterLoginReducer = createReducer(null)({\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\n});\n\nexport default combineReducers({\n  isAuthenticated: authReducer,\n  redirectAfterLogin: redirectAfterLoginReducer,\n});\n","export const LOGIN = \"session/LOGIN\";\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\nexport const LOGOUT = \"session/LOGOUT\";\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\n","import reducer from \"./reducers\";\n\nimport * as sessionOperations from \"./operations\";\n\nexport {\n    sessionOperations,\n};\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_CATEGORIES]: (state, action) => {\n    const { categories } = action.payload;\n\n    if (categories) {\n      return categories;\n    }\n\n    return [...state];\n  },\n\n  [types.GET_CATEGORIES]: (state, action) => {\n    return [...state];\n  },\n});\n\nexport default cartReducer;\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\n","import reducer from './reducers';\n\nimport * as categoryOperations from './operations';\nimport * as categorySelectors from './selectors';\n\nexport { categoryOperations, categorySelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = {};\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\n    const { response } = action.payload;\n\n    if (response) {\n      return { ...state, ...response };\n    }\n\n    return { ...state };\n  },\n});\n\nexport default cartReducer;\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\n","import reducer from './reducers';\n\nimport * as cacheOperations from './operations';\nimport * as cacheSelectors from './selectors';\n\nexport { cacheOperations, cacheSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_BRAND]: (state, action) => {\n    const { brands } = action.payload;\n\n    if (brands) {\n      return brands;\n    }\n\n    return [...state];\n  },\n\n  [types.GET_BRAND]: (state, action) => {\n    return [...state];\n  },\n});\n\nexport default cartReducer;\n","export const ADD_BRAND = 'category/ADD_BRAND';\nexport const GET_BRAND = 'category/GET_BRAND';\n","import reducer from './reducers';\n\nimport * as brandOperations from './operations';\nimport * as brandSelectors from './selectors';\n\nexport { brandOperations, brandSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_TAGS]: (state, action) => {\n    const { tags } = action.payload;\n\n    if (tags) {\n      return tags;\n    }\n\n    return [...state];\n  },\n\n  [types.GET_TAGS]: (state, action) => {\n    return [...state];\n  },\n});\n\nexport default cartReducer;\n","export const ADD_TAGS = 'tag/ADD_TAGS';\nexport const GET_TAGS = 'tag/GET_TAGS';\n","import reducer from './reducers';\n\nimport * as tagOperations from './operations';\nimport * as tagSelectors from './selectors';\n\nexport { tagOperations, tagSelectors };\n\nexport default reducer;\n","import { fetch } from \"../utils\";\n\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\n\nconst apiService = ( ) => ( next ) => ( action ) => {\n    const result = next( action );\n    if ( !action.meta || !action.meta.async ) {\n        return result;\n    }\n\n    const { path, method = \"GET\", body } = action.meta;\n\n    if ( !path ) {\n        throw new Error( `'path' not specified for async action ${ action.type }` );\n    }\n\n    const url = `${ baseUrl }${ path }`;\n\n    return fetch( url, method, body ).then(\n        res => handleResponse( res, action, next ),\n        err => handleErrors( err, action, next ),\n    );\n};\n\nexport default apiService;\n\nfunction handleErrors( err, action, next ) {\n    next( {\n        type: `${ action.type }_FAILED`,\n        payload: err,\n        meta: action.meta,\n    } );\n\n    return Promise.reject( err );\n}\n\nfunction handleResponse( res, action, next ) {\n    next( {\n        type: `${ action.type }_COMPLETED`,\n        payload: res,\n        meta: action.meta,\n    } );\n\n    return res;\n}\n","const REGULAR = [\n    \"background: blue\",\n    \"color: white\",\n].join( \";\" );\n\nconst SUCCESS = [\n    \"background: green\",\n    \"color: white\",\n].join( \";\" );\n\nconst STARTED = [\n    \"background: darkorange\",\n    \"color: white\",\n].join( \";\" );\n\nconst FAILURE = [\n    \"background: red\",\n    \"color: white\",\n].join( \";\" );\n\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\n    if ( !active ) {\n        return next( action );\n    }\n\n    const prevState = store.getState( );\n    const result = next( action );\n    const nextState = store.getState( );\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\n    logGroupEnd( );\n    return result;\n};\n\nexport default createLogger;\n\nfunction logGroupCollapsed( ...args ) {\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\n    logFunction( ...args );\n}\n\nfunction logGroupEnd( ...args ) {\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\n    logFunction( ...args );\n}\n\nfunction logInfo( ...args ) {\n    console.info( ...args );\n}\n\nfunction determineStyle( action ) {\n    if ( !action.meta || !action.meta.async ) {\n        return REGULAR;\n    }\n\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\n        return SUCCESS;\n    }\n\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\n        return FAILURE;\n    }\n\n    return STARTED;\n}\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport * as reducers from './ducks';\nimport { apiService } from './middlewares';\n\nconst rootReducer = combineReducers(reducers);\n\nconst persistConfig = {\n  key: 'shop',\n  storage: storage,\n  // whitelist: ['session'], // which reducer want to store\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nfunction configureStore(initialState) {\n  return createStore(\n    pReducer,\n    initialState,\n    compose(\n      applyMiddleware(apiService),\n      window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : (f) => f\n    )\n  );\n}\n\nconst store = configureStore({});\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport {\n\tQueryCache,\n\tReactQueryCacheProvider,\n} from 'react-query';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\nconst queryCache = new QueryCache()\n\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<ReactQueryCacheProvider queryCache={queryCache}>\n\t\t\t\t\t<App />\n\t\t\t\t</ReactQueryCacheProvider>\n\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>\n\t\t,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}