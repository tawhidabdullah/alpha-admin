{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/CategoryDetail.tsx","pages/category/CategoryList.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandDetail.tsx","pages/brand/BrandList.tsx","components/Field/DatePicker.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","components/Field/InputSmall.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductDetail.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/tag/QuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderProductItem.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","productCount","parent","cover","config","thumbnail","subCount","subCategory","children","subCat","noti","heading","text","link","added","read","title","isNext","page","next","convertedData","product","regularPrice","price","offerPrice","parseInt","unit","date","venue","pricing","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","time","brand","tags","tag","success","console","log","original","image","img","labels","alt","caption","customer","firstName","lastName","country","city","email","phone","created","theme","components","component","item","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","cat","b","inserted","icon","billingAddress","total","totalPrice","products","date_created","paymentMethod","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","MessageOutlined","FileOutlined","SlidersOutlined","SettingOutlined","UserOutlined","DesktopOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMenuClick","getAllNotification","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","padding","OrderedListOutlined","href","overflowCount","count","fontWeight","BellOutlined","LogoutOutlined","Overview","textAlign","DataTable","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","filename","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","message","notification","CheckCircleOutlined","MediaLibrary","visible","setvisible","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","filter","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","index","newFileList","splice","beforeUpload","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","okText","defaultActiveKey","size","tab","listType","FileImageOutlined","ArrowUpOutlined","marginBottom","lenght","CloseOutlined","CheckOutlined","DeleteOutlined","ImageItemMenu","EllipsisOutlined","onConfirm","cancelText","fontSize","AddNewBrand","Select","Option","addNewCategoryVisible","setAddNewCategoryVisible","productRecord","setBrandList","brandList","updateBrandState","handleUpdateBrandFetch","brandDetailState","handleBrandDetailFetch","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","visibleMedia","setvisibleMedia","coverImageId","setCoverImageId","myGoddamnImages","setMyGoddamnImages","loadingThumnail","imageFile","getBrandDetail","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","itemId","thumbnailRes","positionInBrand","prevItem","updateBrandList","trim","updateBrandRes","resetForm","handleCancel","LoadingOutlined","PlusOutlined","okButtonProps","htmlType","handleImagesDelete","FileImageFilled","Column","Table","Search","ColumnGroup","MyTable","setcategoryList","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","categoryDetailVisible","setcategoryDetailVisible","handleDeleteCategory","deleteCategoryRes","newCategoryList","dataSource","dataIndex","render","record","objectFit","align","EditOutlined","categoryList","CategoryDetail","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","categories","setCategories","enterButton","placeholder","onSearch","toLowerCase","handleSearch","DataTableSkeleton","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","selectedParentId","setselectedParentId","imageUrl","setImageUrl","setLoadingThumbnail","setImagefile","imagesIds","addCategoryRes","onSwitchChange","checked","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","uploadButton","defaultChecked","showSearch","optionFilterProp","filterOption","input","option","InfoCircleOutlined","showUploadList","newImages","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","addBrandRes","updatebrandState","handleDeleteBrandFetch","brandDetailVisible","setBrandDetailVisible","handleDeleteBrand","deleteBrandRes","newBrandList","BrandDetail","brandState","handlebrandListFetch","brands","setBrands","DatePickerComponent","withTime","borderColor","moment","DatePicker","RangePicker","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","setTags","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandListRes","brandOptions","onFocus","onBlur","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","allowClear","Complete","setAttributeList","attributeList","attribute","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","updateAttributeList","manupulatedOptions","inputValue","suggestedOption","toUpperCase","InputSmall","Pricing","handleAddPricing","regular","offer","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","priceItem","model","purchaseLimit","AddNewProduct","productList","setProductList","addProductState","handleAddProductFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","addProductRes","err","i","handleDateChange","dateString","handleTimeChange","animated","tabPosition","newPricing","handleDeletePricing","textDecoration","updateProductState","handleUpdateProductFetch","handleProductDetailFetch","getProductDetail","updateProductList","updatedProductRes","destroyOnClose","updateProductRes","positionInAttribute","handleDeleteProductFetch","productDetailVisible","setproductDetailVisible","handleDeleteProduct","deleteProductRes","newProductList","paddingTop","overflow","tableLayout","onHeaderRow","column","ProductDetail","ProductList","productState","handleProductListFetch","setProducts","tagList","setTagList","updateTagState","updateTagRes","updateTagList","addTagState","handleAddTagFetch","addTagRes","CoolInput","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","newTagList","AddNewTag","max","address1","address2","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","lastModified","AddNewPage","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","handleDeleteOrderFetch","handleDeleteRegion","deleteOrderRes","newOrderList","orderState","handleRegionListFetch","regions","setOrders","CartOverLayCartItem","productId","handleProductFetch","setProduct","setIsLoading","getAndSetProduct","handleChangeQuantity","AddNewOrderSummary","ShopOutlined","AddNewOrderProductItem","setCustomerId","setProductIds","selectedOpions","setselectedOptions","selectItems","o","Step","Steps","additionalInfo","steps","content","AddNewOrder","addOrderState","handleOrderFetch","productIds","current","setCurrent","variation","isTrue","CustomersId","AddProducts","CaretLeftOutlined","CaretRightOutlined","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","FileAddOutlined","Panel","Collapse","genExtra","updateComponentByDeleting","event","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","bordered","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","address","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","minimumOrder","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","recipient","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","hasSider","exact","BrandList","OrderList","Delivery","ManageThemes","SiteInfo","App","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"iyNAyDeA,GAtDMC,IAAbC,SAkBK,SAAC,GAAwH,IAAtHC,EAAqH,EAArHA,SAAUC,EAA2G,EAA3GA,YAAaC,EAA8F,EAA9FA,MAAOC,EAAuF,EAAvFA,KAAoBC,GAAmE,EAAjFC,aAAiF,EAAnED,OAAOE,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KAC/G,OACI,oCACKR,GACG,wBAAIS,UAAU,mBACTT,GAIT,kBAAC,IAAKU,KAAN,CAEIC,eAAgBL,EAAU,QAAU,GAEpCM,KAAML,GAKN,kBAAC,IAAD,CACIT,SAAUA,EACVG,KAAMA,EACNF,YAAaA,EACbc,MAAO,CACHC,aAAc,KAElBN,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVK,UAAU,uB,4CClDxBM,EAAgB,SAAAb,GACpB,OAAQA,IAAUc,OAAOC,KAAKf,GAAOgB,OAAS,GAiCjCC,EA9BO,SAACC,GAA0B,IAArBC,EAAoB,uDAAP,GACvC,GAAIN,EAAcM,GAAa,OAAOD,EAEtC,IAAME,EAASD,EAAWC,QAAU,GAC9BC,EAAeF,EAAWE,cAAgB,GAIhD,OAAOH,EACJI,MAAM,KACNC,KAAI,SAAAC,GACH,GAAIA,EAAaC,SAAS,OAASZ,EAAcQ,GAAe,CAC9D,IAAIK,EAAyBL,EAAaG,EAAaG,QAAQ,IAAK,KACpEH,EAAeE,EAYjB,OATIF,EAAaC,SAAS,OACxBD,EAAeA,EACZF,MAAM,KACNC,KAAI,SAAAC,GACH,IAAMI,EAAQJ,EAAaK,MAAML,EAAaM,QAAQ,KAAO,GAC7D,OAAON,EAAaG,QAAQC,EAAOR,EAAOQ,IAAU,OAErDG,KAAK,MAEHP,KAERO,KAAK,MCxBNC,EAAY,I,8ICGIC,G,gFACZC,EAAOD,EAAQC,MAAQ,GAEvBC,EACLD,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACa,GACT,OAAO,aACNC,GAAID,EAASE,KAAO,GACpBC,IAAKH,EAASE,KAAO,GACrBhC,KAAM8B,EAAS9B,MAAQ8B,EAAS9B,KAChCkC,YAAaJ,EAASI,aAAeJ,EAASI,YAC9CC,aAAcL,EAASK,cAAgB,EACvCC,OAAQN,EAASM,QAAU,GAC3BC,MAAOP,EAASO,MAAT,UAAoBC,EAAM,SAA1B,OAAwCR,EAASO,MAAME,WAAc,KAC5EC,SACiC,IAAhCV,EAASW,YAAY/B,OAClBoB,EAASW,YAAY,IAAMX,EAASW,YAAY,GAAGzC,KAAO8B,EAASW,YAAY/B,OAAS,EACxFoB,EAASW,YAAY/B,QACrBoB,EAASW,aACZX,EAASW,YAAY/B,OAAS,GAC9BoB,EAASW,YAAY,IACrBX,EAASW,YAAY,GAArB,MAAmC,CACnCC,SAAUZ,EAASW,YAAYxB,KAAI,SAAC0B,GACnC,MAAO,CACNZ,GAAIY,EAAOX,KAAO,GAClBC,IAAKU,EAAOX,IACZhC,KAAM2C,EAAO3C,MAAQ2C,EAAO3C,KAC5BkC,YAAaS,EAAOT,aAAeS,EAAOT,YAC1CG,MAAOM,EAAON,MAAP,UAAkBC,EAAM,SAAxB,OAAsCK,EAAON,MAAME,WAAc,Y,kBAOvEV,G,oLASiBF,G,gFAClBC,EAAOD,EAAQC,MAAQ,GAEvBC,EACLD,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAAC2B,GACT,MAAO,CACNb,GAAIa,EAAKZ,KAAO,GAChBC,IAAKW,EAAKZ,KAAO,GACjBa,QAASD,EAAKC,SAAWD,EAAKC,QAC9BC,KAAMF,EAAKE,MAAQF,EAAKE,KACxBrD,KAAMmD,EAAKnD,KACXsD,KAAMH,EAAKG,MAAQ,GACnBC,MAAOJ,EAAKI,OAAS,GACrBC,KAAML,EAAKK,S,kBAIPpB,G,mLAgBgBF,G,gFACjBC,EAAOD,EAAQC,MAAQ,GAEvBC,EACLD,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACa,GACT,OAAO,aACNC,GAAID,EAASE,KAAO,GACpBC,IAAKH,EAASE,KAAO,GACrBkB,MAAOpB,EAAS9B,MAAQ8B,EAAS9B,MAC7B8B,EAASW,aACZX,EAASW,YAAY/B,OAAS,GAC9BoB,EAASW,YAAY,IACrBX,EAASW,YAAY,GAArB,MAAmC,CACnCC,SAAUZ,EAASW,YAAYxB,KAAI,SAAC0B,GACnC,MAAO,CACNZ,GAAIY,EAAOX,KAAO,GAClBC,IAAKU,EAAOX,IACZkB,MAAOP,EAAO3C,MAAQ2C,EAAO3C,KAC7BqC,MAAOM,EAAON,MAAP,UAAkBC,EAAM,SAAxB,OAAsCK,EAAON,MAAME,UAAYI,EAAON,MAAME,UAAY,IAAO,Y,kBAOrGV,G,kLAYeF,G,kFAChBC,EAAOD,EAAQC,MAAQ,GACvBuB,EAASxB,EAAQyB,KAAKC,KAEtBC,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACsC,GACT,MAAO,CACNxB,GAAIwB,EAAQvB,KAAO,GACnBhC,KAAMuD,EAAQvD,MAAQuD,EAAQvD,KAC9BkC,YAAaqB,EAAQrB,aAAeqB,EAAQrB,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BiB,EAAQlB,OAASkB,EAAQlB,MAAR,WAA+B,IAC/EmB,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7BA,MACCE,SAASJ,EAAQE,MAAR,OAA0BE,SAASJ,EAAQE,MAAR,SACzCF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACJ7C,IAAK2C,EAAQ3C,IACbgD,KAAML,EAAQK,KACdC,KAAMN,EAAQM,KACdC,MAAOP,EAAQO,MACfC,QAASR,EAAQQ,Y,kBAIb,CACNnC,KAAM0B,EACNH,OAAQA,I,yKAUIxB,G,gFACPqC,EAAYrC,EAAQsC,OAAS,GAC7BX,EACLU,EAAUtD,OAAS,GACnBsD,EAAU/C,KAAI,SAACiD,GACd,MAAO,CACNnC,GAAImC,EAASlC,KAAO,GACpBhC,KAAMkE,EAASlE,MAAQkE,EAASlE,KAChCqC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB4B,EAAS7B,MAAM8B,QAC7CX,aAAcU,EAAST,OAASS,EAAST,MAAT,QAChCC,WAAYQ,EAAST,OAASS,EAAST,MAAT,MAC9BW,SAAUF,EAASE,SACnBxD,IAAKsD,EAAStD,IACdyD,QAASH,EAASG,Y,kBAIdf,G,2KASQ3B,G,gFACXC,GAAO,EAEPD,EAAO,WACVC,EAAO,CACNG,GAAIJ,EAAO,SAAaK,KAAO,GAC/BhC,KAAM2B,EAAO,SAAa3B,MAAQ2B,EAAO,SAAa3B,KACtDqC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBX,EAAO,SAAaU,MAAM8B,QACxDX,aAAc7B,EAAO,SAAa8B,OAAS9B,EAAO,SAAa8B,MAApB,QAC3CC,WAAY/B,EAAO,SAAa8B,OAAS9B,EAAO,SAAa8B,MAApB,MACzCW,SAAUzC,EAAO,SAAayC,SAC9BxD,IAAKe,EAAO,SAAaf,IACzByD,QAAS1C,EAAO,SAAa0C,UAIzBf,EAAgB1B,E,kBAEf0B,G,gLASa3B,G,8EAChB2B,GAAgB,EAChB3B,IACH2B,GAAgB,G,kBAEVA,G,gLASa3B,G,8EAChB2B,GAAgB,EAChB3B,EAAO,UACV2B,EAAgB,CACfc,SAAUzC,EAAQ2C,QAAR,W,kBAGLhB,G,2KASQ1B,G,qEACXA,IAAQA,EAAI,I,yCACR,CACN2C,OAAQ,O,gCAGH3C,G,6KASUD,G,8EAEX2B,EAAgB3B,E,kBAEf2B,G,6KASU3B,G,qEACbA,GAA8B,qBAAnBA,EAAO,I,yCACd,CACN4C,OAAQ,O,iCAIH,G,oLASiB5C,G,qEACpBA,GAA8B,qBAAnBA,EAAO,I,yCACd,CACN4C,OAAQ,O,iCAIH,G,mLASgB5C,G,qEACnBA,GAA8B,qBAAnBA,EAAO,I,yCACd,CACN4C,OAAQ,O,iCAIH,G,6KASU5C,G,kFACXC,EAAOD,EAAQC,MAAQ,GACvBuB,EAASxB,EAAQyB,KAAKC,KAEtBC,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACsC,GACT,MAAO,CACNxB,GAAIwB,EAAQvB,KAAO,GACnBhC,KAAMuD,EAAQvD,MAAQuD,EAAQvD,KAC9BkC,YAAaqB,EAAQrB,aAAeqB,EAAQrB,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BiB,EAAQlB,OAASkB,EAAQlB,MAAR,WAA+B,IAC/EmB,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7BA,MACCE,SAASJ,EAAQE,MAAR,OAA0BE,SAASJ,EAAQE,MAAR,SACzCF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACJ7C,IAAK2C,EAAQ3C,IACbgD,KAAML,EAAQK,S,kBAIV,CACNhC,KAAM0B,EACNH,OAAQA,I,+KAUUxB,G,kFACbC,EAAOD,EAAQC,MAAQ,GACvBuB,EAASxB,EAAQyB,KAAKC,KAEtBC,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACsC,GACT,MAAO,CACNxB,GAAIwB,EAAQvB,KAAO,GACnBhC,KAAMuD,EAAQvD,MAAQuD,EAAQvD,KAC9BkC,YAAaqB,EAAQrB,aAAeqB,EAAQrB,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BiB,EAAQlB,OAASkB,EAAQlB,MAAR,WAA+B,IAC/EmB,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7BA,MACCE,SAASJ,EAAQE,MAAR,OAA0BE,SAASJ,EAAQE,MAAR,SACzCF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACJ7C,IAAK2C,EAAQ3C,IACbgD,KAAML,EAAQK,S,kBAIV,CACNhC,KAAM0B,EACNH,OAAQA,I,+KAUUxB,G,kFACbC,EAAOD,EAAQC,MAAQ,GACvBuB,EAASxB,EAAQyB,KAAKC,KAEtBC,EACJ1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACsC,GACT,MAAO,CACNxB,GAAIwB,EAAQvB,KAAO,GACnBhC,KAAMuD,EAAQvD,MAAQuD,EAAQvD,KAC9BkC,YAAaqB,EAAQrB,aAAeqB,EAAQrB,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBiB,EAAQlB,MAAME,WAC5CiB,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B7C,IAAK2C,EAAQ3C,IACbgD,KAAML,EAAQK,KACdC,KAAMN,EAAQM,KACdC,MAAOP,EAAQO,MACfC,QAASR,EAAQQ,aAGpB,G,kBAEM,CACNnC,KAAM0B,EACNH,W,6KAUgBxB,G,gFACXC,EAAOD,EAAQC,MAAQ,GACdD,EAAQyB,KAAKC,KAExBC,EACH1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACsC,GACT,MAAO,CACNxB,GAAIwB,EAAQvB,KAAO,GACnBhC,KAAMuD,EAAQvD,MAAQuD,EAAQvD,KAC9BkC,YAAaqB,EAAQrB,aAAeqB,EAAQrB,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BiB,EAAQlB,OAASkB,EAAQlB,MAAR,WAA+B,IAC/EmB,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B7C,IAAK2C,EAAQ3C,IACbgD,KAAML,EAAQK,KACd9B,SAAUyB,EAAQzB,SAClBiC,QAASR,EAAQQ,QACjBF,KAAMN,EAAQM,KACdW,KAAMjB,EAAQiB,KACdV,MAAOP,EAAQO,MACfW,MAAOlB,EAAQkB,MACfC,KAAMnB,EAAQmB,KACdjB,MACCE,SAASJ,EAAQE,MAAR,OAA0BE,SAASJ,EAAQE,MAAR,SACzCF,EAAQE,MAAR,MACAF,EAAQE,MAAR,Y,kBASAH,G,yKASM3B,G,gFACPC,EAAOD,EAAQC,MAAQ,GAEvB0B,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAAC0D,GACT,MAAO,CACN5C,GAAI4C,EAAI3C,KAAO,GACfC,IAAK0C,EAAI3C,KAAO,GAChBhC,KAAM2E,EAAI3E,MAAQ2E,EAAI3E,KACtBkC,YAAayC,EAAIzC,aAAeyC,EAAIzC,gB,kBAIhCoB,G,2KASQ3B,G,gFACTC,EAAOD,EAAQC,MAAQ,GAEvB0B,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACwD,GACT,MAAO,CACN1C,GAAI0C,EAAMzC,KAAO,GACjBC,IAAKwC,EAAMzC,KAAO,GAClBhC,KAAMyE,EAAMzE,MAAQyE,EAAMzE,KAC1BkC,YAAauC,EAAMvC,aAAeuC,EAAMvC,YACxCG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBmC,EAAMpC,MAAQoC,EAAMpC,MAAME,UAAY,Q,kBAIhEe,G,2LAUwB3B,G,qEAC3BA,EAAQiD,Q,yCACJ,CACNL,OAAQ,O,gCAGH,I,6KAWU5C,G,0EACXC,EAAOpB,OAAOC,KAAKkB,GAASjB,OAAS,EAAIiB,EAAU,KACzDkD,QAAQC,IAAI,WAAYlD,IACpBA,E,yCACI,CACNG,GAAIH,EAAKI,KAAO,GAChBC,IAAKL,EAAKI,KAAO,GACjBhC,KAAM4B,EAAK5B,MAAQ4B,EAAK5B,KACxBkC,YAAaN,EAAKM,aAAeN,EAAKM,YACtCG,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBV,EAAKS,MAAQT,EAAKS,MAAM0C,UAAYnD,EAAKS,MAAM0C,SAAW,IACxFhD,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEnCgD,MACEpD,EAAKoD,OACLpD,EAAKoD,MAAMtE,OAAS,GACpBkB,EAAKoD,MAAM/D,KAAI,SAACgE,GACf,MAAO,CACNlD,GAAIkD,EAAIjD,KAAO,GACfhC,KAAMiF,EAAIjF,MAAQiF,EAAIjF,KACtBqC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB2C,EAAI1C,WAClCS,MAAOiC,EAAIjC,MACXE,MAAO+B,EAAI/B,MACXgC,OAAQD,EAAIC,OACZC,IAAKF,EAAIE,IACTC,QAASH,EAAIG,aAGhB,K,gCAII,I,8KAUWzD,G,gFACZC,EAAOD,EAAQC,MAAQ,GAEvB0B,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACoE,GACT,MAAO,CACNtD,GAAIsD,EAASrD,KAAO,GACpBC,IAAKoD,EAASrD,KAAO,GACrBsD,UAAWD,EAASC,WAAa,GACjCC,SAAUF,EAASE,UAAY,GAC/BC,QAASH,EAASG,SAAW,GAC7BC,KAAMJ,EAASI,MAAQ,GACvBC,MAAOL,EAASK,OAAS,GACzBC,MAAON,EAASM,OAAS,GACzBC,QAASP,EAASO,SAAW,O,kBAIzBtC,G,2KAUQ3B,G,gFAGT2B,GAFA1B,EAAOD,GAAW,IAGlBjB,OAAS,GACdkB,EAAKX,KAAI,SAAC4E,GACT,MAAO,CACN9D,GAAI8D,EAAM7D,KAAO,GACjBC,IAAK4D,EAAM7D,KAAO,GAClBhC,KAAM6F,EAAM7F,MAAQ,GACpBgD,MAAO6C,EAAM7C,OAAS,GACtBT,UAAU,GAAD,OAAKD,EAAM,SAAX,OAAyBuD,EAAMtD,UAAYsD,EAAMtD,UAAY,Q,kBAKlEe,G,+KAUY3B,G,+EACbmE,EAAanE,EAAQmE,YAAc,KAEvBA,EAAWpF,OAAS,G,uBAC/B4C,EACLwC,EAAWpF,OAAS,GACpBoF,EAAW7E,KAAI,SAAC8E,GACf,MAAO,CACNhE,GAAIgE,EAAU/D,KAAO,GACrBC,IAAK8D,EAAU/D,KAAO,GACtBhC,KAAM+F,EAAU/F,MAAQ,GACxBiE,MAAO8B,EAAU9B,MAAMvD,OAAS,EAAIqF,EAAU9B,MAAMhD,KAAI,SAAA+E,GACvD,OAAO,eACHA,EADJ,CAEChB,MAAOgB,EAAKhB,MAAMtE,OAAS,EAAIsF,EAAKhB,MAAM/D,KAAI,SAAAgE,GAC7C,MAAO,CACN5C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB2C,EAAI1C,UAAY0C,EAAI1C,UAAY,IAC9DR,GAAIkD,EAAIjD,QAEL,QAEF,O,kBAIDsB,G,gCAGD,I,4KAaS1B,G,8EACV0B,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAACgF,GACT,MAAO,CACNlE,GAAIkE,EAAOjE,KAAO,GAClBC,IAAKgE,EAAOjE,KAAO,GACnBhC,KAAMiG,EAAOjG,MAAQ,GACrBkG,eAAgBD,EAAOC,gBAAkB,GACzCV,QAASS,EAAOT,SAAW,GAC3BW,YAAaF,EAAOE,aAAe,GACnCC,YAAaH,EAAOG,aAAe,GACnCX,KAAMQ,EAAOR,MAAQ,GACrBjB,KAAMyB,EAAOzB,MAAQ,GACrB6B,OAAQJ,EAAOI,QAAU,O,kBAIrB/C,G,+KASY1B,G,8EACb0B,EAAgB9C,OAAOC,KAAKmB,GAAMlB,OAAS,GAAKkB,E,kBAC/C0B,G,sLASmB3B,G,gFACpBC,EAAOD,EAAQC,MAAQ,GAEvB0B,EACL1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAAC+D,GACT,MAAO,CACNjD,GAAIiD,EAAMhD,KAAO,GACjBhC,KAAMgF,EAAMhF,MAAQgF,EAAMhF,KAC1BqC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB0C,EAAMzC,WACpCS,MAAOgC,EAAMhC,MACbE,MAAO8B,EAAM9B,MACbgC,OAAQF,EAAME,OACdC,IAAKH,EAAMG,IACXC,QAASJ,EAAMI,Y,kBAIX9B,G,6KASU3B,G,gFAGX2B,GAFA1B,EAAOD,GAAW,IAGlBjB,OAAS,GACdkB,EAAKX,KAAI,SAACuE,GACT,MAAO,CACNzD,GAAIyD,EAAQxD,KAAO,GACnBhC,KAAMwF,EAAQxF,MAAQwF,EAAQxF,S,kBAI1BsD,G,mLASgB1B,G,8EACjB0B,EAAgB1B,E,kBAEf0B,G,0KASO3B,G,gFAGR2B,GAFA1B,EAAOD,GAAW,IAGlBjB,OAAS,GACdkB,EAAKX,KAAI,SAACwE,GACT,MAAO,CACN1D,GAAI0D,EAAKzD,KAAO,GAChBhC,KAAMyF,EAAKzF,MAAQyF,EAAKzF,S,kBAIpBsD,G,8KASW3B,G,0FACXA,G,+KAUYC,G,8EACb0B,EACJ9C,OAAOC,KAAKmB,GAAMlB,OAAS,GAAK,CAChCqB,GAAIH,EAAKI,KAAOJ,EAAKG,IAAM,GAC3B/B,KAAM4B,EAAK5B,MAAQ,GACnBkC,YAAaN,EAAKM,YAAYb,QAAQ,WAAY,KAAO,GACzDmC,aAAc5B,EAAK6B,OAAS7B,EAAK6B,MAAL,QAC5BC,WAAY9B,EAAK6B,OAAS7B,EAAK6B,MAAL,MAC1B7C,IAAKgB,EAAKhB,IACV0F,eAAgB1E,EAAK0E,eACrBC,aAAc3E,EAAK2E,aACnB3C,KAAMhC,EAAKgC,KACXC,KAAMjC,EAAKiC,KACXC,MAAOlC,EAAKkC,MACZW,MAAO7C,EAAK6C,OAASjE,OAAOyB,IAAIL,EAAK6C,OAAO/D,OAAS,EAAI,CACxDqB,GAAIH,EAAK6C,MAAM1C,GACf/B,KAAM4B,EAAK6C,MAAMzE,MAEd,GACJ+D,QAASnC,EAAKmC,QACdjC,SACEF,EAAKE,UACLF,EAAKE,SAASpB,OAAS,GACvBkB,EAAKE,SAASb,KAAI,SAACuF,GAClB,MAAO,CACNzE,GAAIyE,EAAIxE,IACRhC,KAAMwG,EAAIxG,UAGb4B,EAAKE,SACN4C,KACE9C,EAAK8C,MACL9C,EAAK8C,KAAKhE,OAAS,GACnBkB,EAAK8C,KAAKzD,KAAI,SAAC0D,GACd,MAAO,CACN5C,GAAI4C,EAAI3C,IACRhC,KAAM2E,EAAI3E,UAGb4B,EAAK8C,KAENrC,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBV,EAAKS,MAAQT,EAAKS,MAAM0C,UAAYnD,EAAKS,MAAM0C,SAAW,IACxFhD,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEnCgD,MACEpD,EAAKoD,OACLpD,EAAKoD,MAAMtE,OAAS,GACpBkB,EAAKoD,MAAM/D,KAAI,SAACgE,GACf,MAAO,CACNlD,GAAIkD,EAAIjD,KAAO,GACfhC,KAAMiF,EAAIjF,MAAQiF,EAAIjF,KACtBqC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB2C,EAAI1C,WAClCS,MAAOiC,EAAIjC,MACXE,MAAO+B,EAAI/B,MACXgC,OAAQD,EAAIC,OACZC,IAAKF,EAAIE,IACTC,QAASH,EAAIG,aAGhB,KAEF,G,kBAEM9B,G,mLASgB1B,G,8EACjB0B,EACJ9C,OAAOC,KAAKmB,GAAMlB,OAAS,GAAK,CAChCqB,GAAIH,EAAKI,KAAOJ,EAAKG,IAAM,GAC3B/B,KAAM4B,EAAK5B,MAAQ,GACnBkC,YAAaN,EAAKM,YAAYb,QAAQ,WAAY,KAAO,GACzDmC,aAAc5B,EAAK6B,OAAS7B,EAAK6B,MAAL,QAC5BC,WAAY9B,EAAK6B,OAAS7B,EAAK6B,MAAL,MAC1B7C,IAAKgB,EAAKhB,IACVgD,KAAMhC,EAAKgC,KACXC,KAAMjC,EAAKiC,KACXC,MAAOlC,EAAKkC,MACZC,QAASnC,EAAKmC,QACdjC,SACEF,EAAKE,UACLF,EAAKE,SAASpB,OAAS,GACvBkB,EAAKE,SAASb,KAAI,SAACuF,GAClB,MAAO,CACNzE,GAAIyE,EAAIxE,IACRhC,KAAMwG,EAAIxG,UAGb4B,EAAKE,SACN2C,MACE7C,EAAK6C,OACL7C,EAAK6C,MAAM/D,OAAS,GACpBkB,EAAK6C,MAAMxD,KAAI,SAACwF,GACf,MAAO,CACN1E,GAAI0E,EAAEzE,IACNhC,KAAMyG,EAAEzG,UAGX4B,EAAK6C,MACNC,KACE9C,EAAK8C,MACL9C,EAAK8C,KAAKhE,OAAS,GACnBkB,EAAK8C,KAAKzD,KAAI,SAAC0D,GACd,MAAO,CACN5C,GAAI4C,EAAI3C,IACRhC,KAAM2E,EAAI3E,UAGb4B,EAAK8C,KACN4B,eAAgB1E,EAAK0E,eACrBjE,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBV,EAAKS,MAAQT,EAAKS,MAAME,WAAaX,EAAKS,MAAME,UAAY,IAC1FR,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEnCgD,MACEpD,EAAKoD,OACLpD,EAAKoD,MAAMtE,OAAS,GACpBkB,EAAKoD,MAAM/D,KAAI,SAACgE,GACf,MAAO,CACNlD,GAAIkD,EAAIjD,KAAO,GACfhC,KAAMiF,EAAIjF,MAAQiF,EAAIjF,KACtBqC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB2C,EAAI1C,WAClCS,MAAOiC,EAAIjC,MACXE,MAAO+B,EAAI/B,MACXgC,OAAQD,EAAIC,OACZC,IAAKF,EAAIE,IACTC,QAASH,EAAIG,aAGhB,KAEF,G,kBAEM9B,G,+KASY1B,G,0EACb0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,iLAUc1B,G,0EACf0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,wLAUqB1B,G,0EACtB0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,2KASQ1B,G,0EACT0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,6KASU1B,G,0EACX0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,gLASa1B,G,0EACd0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,gLASa1B,G,0EACd0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,8KASW1B,G,0EACZ0B,EAAgB1B,GAElBA,IAAQA,EAAK0C,Q,wDAEZ1C,EAAK0C,Q,CACRC,OAAQ,Q,gCAIHjB,G,+KASY1B,G,0EACb0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,wLASqB1B,G,0EACtB0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,wKASK1B,G,0EACN0B,EAAgB1B,GAClBA,IAAQA,EAAK8E,S,wDAEZ9E,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,6KASU1B,G,0EACX0B,EAAgB1B,GAClBA,IAAQA,EAAK8E,S,wDAEZ9E,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,4KASS1B,G,0EACV0B,EAAgB1B,GAClBA,IAAQA,EAAK8E,S,wDAEZ9E,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,0KAaO1B,G,0EACR0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,wDAEZhD,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,0KAUO1B,G,0EACR0B,EAAgB1B,GAClBA,IAAQA,EAAK8E,S,wDAEZ9E,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,8KAQW1B,G,0EACZ0B,EAAgB1B,GAClBA,IAAQA,EAAK8E,S,wDAEZ9E,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,6KAYU1B,G,0EACX0B,EAAgB1B,GAClBA,IAAQA,EAAK8E,S,wDAEZ9E,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,2KASQ1B,G,0EACT0B,EAAgB1B,GAClBA,IAAQA,EAAK8E,S,wDAEZ9E,EAAK8E,SAAS,G,CACjBnC,OAAQ,Q,gCAIHjB,G,2KASQ1B,G,0EACT0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,wKAWK1B,G,0EACN0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,6KAUU1B,G,0EACX0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,6KASU1B,G,0EACX0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,gLAUa1B,G,0EACd0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,iLAUc1B,G,0EACf0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,6KAUU1B,G,0EACX0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,gLASa1B,G,0EACd0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,8KASW1B,G,0EACZ0B,EAAgB1B,GAClBA,IAAQA,EAAKgD,Q,yCACT,CACNL,OAAQ,O,gCAIHjB,G,8KAWW3B,G,0EACZ2B,EAAgB3B,GAElBA,EAAQC,K,wDAEPD,EAAQC,O,gCAIN0B,G,oLAUiB1B,G,qEAEpBA,EAAI,Q,yCACA,CACN2C,OAAQ,O,gCAIH3C,G,uLASoBA,G,qEAEvBA,EAAI,Q,yCACA,CACN2C,OAAQ,O,gCAIH3C,G,uLAWoBD,G,0EACrB2B,EAAgB3B,GAElBA,EAAQC,K,wDAEPD,EAAQC,O,gCAIN0B,G,gLAkBa1B,G,8EAEd0B,EAAgB,CACrBvB,GAAIH,EAAKG,IAAMH,EAAKI,KAAO,GAC3BhC,KAAM4B,EAAK5B,MAAQ4B,EAAK5B,KACxBkC,YAAaN,EAAKM,aAAeN,EAAKM,YACtCC,aAAcP,EAAKO,cAAgB,EACnCwE,KAAM/E,EAAK+E,MAAQ,GACnBlH,KAAMmC,EAAKnC,MAAQ,GACnBgD,YACCb,EAAKa,YAAY/B,OAAS,GAAKkB,EAAKa,YAAY,IAAMb,EAAKa,YAAY,GAAjB,KACnDb,EAAKa,YAAYxB,KAAI,SAAC0B,GACvB,MAAO,CACNZ,GAAIY,EAAOX,KAAO,GAClBhC,KAAM2C,EAAO3C,MAAQ2C,EAAO3C,KAC5BkC,YAAaS,EAAOT,aAAeS,EAAOT,YAC1CG,MAAOM,EAAON,MAAP,UAAkBC,EAAM,SAAxB,OAAsCK,EAAON,MAAM8B,QAAW,OAGrE,GACJ9B,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBV,EAAKS,MAAQT,EAAKS,MAAM0C,UAAYnD,EAAKS,MAAM0C,SAAW,IACxFhD,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEnCgD,MACEpD,EAAKoD,OACLpD,EAAKoD,MAAMtE,OAAS,GACpBkB,EAAKoD,MAAM/D,KAAI,SAACgE,GACf,MAAO,CACNlD,GAAIkD,EAAIjD,KAAO,GACfhC,KAAMiF,EAAIjF,MAAQiF,EAAIjF,KACtBqC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB2C,EAAI1C,WAClCS,MAAOiC,EAAIjC,MACXE,MAAO+B,EAAI/B,MACXgC,OAAQD,EAAIC,OACZC,IAAKF,EAAIE,IACTC,QAASH,EAAIG,aAGhB,I,kBAGK9B,G,6KAQU1B,G,8EAGXC,E,eACFD,G,kBAGGC,G,wKASKD,G,0FACL,CACN2C,OAAQ,O,wKAUG3C,G,qEACRA,EAAI,I,yCACA,CACN2C,OAAQ,O,iCAIH,G,uKASI3C,G,qEACPA,EAAI,I,yCACA,CACN2C,OAAQ,O,iCAIH,G,mLASgB3C,G,0FAChBA,G,wLASqBA,G,8EAItBC,E,eACFD,G,kBAGGC,G,qLASkBD,G,8EAInB0B,E,eACF1B,G,kBAGG0B,G,2LASwB1B,G,8EAIzB0B,EAAgB,CACrBiB,OAAQ,M,kBAGFjB,G,gLASa1B,G,qEAChBA,EAAI,Q,yCACA,CACN2C,OAAQ,O,gCAIH3C,G,sLASmBD,G,kFACpBC,EAAOD,EAAQC,MAAQ,GACvBuB,EAASxB,EAAQyB,KAAKC,KAiB5BC,EAAgB,CACf1B,KAhBG0B,EACF1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAAC+E,GACT,MAAO,CACNjE,GAAIiE,EAAKjE,IAAMiE,EAAKhE,IACpB4E,eAAgBZ,EAAKY,eACrBrC,OAAQyB,EAAKzB,OACbsC,MAAOb,EAAKc,WACZC,SAAUf,EAAKe,SACfC,aAAchB,EAAKnC,KACnBoD,cAAejB,EAAI,QAAJ,mBAGlB,GAIA7C,U,kBAGMG,G,mLASgB1B,G,gFAEnBsF,EAAgBC,EAAQ7E,EAAM,QAAd,kBAEdgB,EACJ1B,EAAKlB,OAAS,GACdkB,EAAKX,KAAI,SAAC+E,GACT,OAAO,eACHkB,EADJ,CAECnF,GAAIiE,EAAKjE,GACTwC,OAAQyB,EAAKzB,OACbsC,MAAOb,EAAKa,MACZO,WAAYpB,EAAKoB,WACjBJ,aAAchB,EAAKgB,mBAGtB,G,kBAEM1D,G,yKAUM1B,G,gFACPyF,EAAezF,EAAKqC,OACRvD,OAAS,G,yCACnB2G,G,cAGFpD,EAAQoD,EAAapG,KAAI,SAAC+E,GAC/B,MAAO,CACNhG,KAAMgG,EAAKhG,MAAQ,GACnBsH,OAAQtB,EAAKlD,MAAQ,O,kBAGhBmB,G,yKASMrC,G,0FACN,CACNkB,KAAMlB,EAAKkB,O,sKAUFlB,G,8EACJ2F,EAAM3F,EAAKoD,OAASpD,EAAKoD,MAAMtE,OAAS,EAAlC,UAAyC4B,EAAM,SAA/C,OAA6DV,EAAKoD,MAAM,GAAX,UAA8B,G,kBAChG,CACNuC,MACAC,OAAQ5F,EAAK4F,S,yKAUD5F,G,0FACN,CACNkB,KAAMlB,EAAKkB,O,0KAUElB,G,gFACR6F,EAAe7F,EAAKqC,OACRvD,OAAS,G,yCACnB,I,cAGFuD,EAAQwD,EAAaxG,KAAI,SAAC+E,GAC/B,MAAO,CACNlD,KAAMkD,EAAKhG,MAAQgG,EAAKlD,KACxB0E,OAAQxB,EAAKwB,W,kBAIRvD,G,wKASKrC,G,gFACN8F,EAAc9F,EAAKqC,OACRvD,OAAS,G,yCAClBgH,G,cAGFC,EAASD,EAAYzG,KAAI,SAAC+E,GAC/B,MAAO,CACNwB,OAAQxB,EAAKwB,OACbD,IAAI,GAAD,OAAKjF,EAAM,SAAX,OAAyB0D,EAAKhB,MAAM,GAAX,Y,kBAGvB2C,G,6KASU/F,G,gFACXgG,EAAmBhG,EAAKqC,OACRvD,OAAS,G,yCACvBkH,G,cAGFD,EAASC,EAAiB3G,KAAI,SAAC+E,GACpC,MAAO,CACNwB,OAAQxB,EAAKwB,OACbD,IAAI,GAAD,OAAKjF,EAAM,SAAX,OAAyB0D,EAAKhB,MAAM,GAAX,Y,kBAGvB2C,G,yKASM/F,G,0FACN,CACN5B,KAAM4B,EAAK5B,KACX8C,KAAMlB,EAAKkB,O,uKAUDlB,G,gFACLiG,EAAgBjG,EAAKqC,OACRvD,OAAS,G,yCACpBmH,G,cAGF5D,EAAQ4D,EAAc5G,KAAI,SAAC+E,GAChC,MAAO,CACNwB,OAAQxB,EAAKwB,OACbxH,KAAMgG,EAAKhG,MAAQgG,EAAKlD,S,kBAGnBmB,G,yKASMrC,G,gFACPkG,EAAelG,EAAKqC,OACRvD,OAAS,G,yCACnBoH,G,cAGF7D,EAAQ6D,EAAa7G,KAAI,SAAC+E,GAC/B,MAAO,CACNwB,OAAQxB,EAAKwB,OACbxH,KAAMgG,EAAKhG,MAAQgG,EAAKlD,S,kBAGnBmB,G,uGASF,W,wDAAWrC,G,gFACVmG,EAAenG,EAAKqC,OACRvD,OAAS,G,yCACnBqH,G,cAGF9D,EAAQ8D,EAAa9G,KAAI,SAAC+E,GAC/B,MAAO,CACNwB,OAAQxB,EAAKwB,OACbxH,KAAMgG,EAAKhG,MAAQgG,EAAKlD,S,kBAGnBmB,G,0GD91DM+D,E,WA7Eb,aAAe,oBACbC,KAAKC,QAAU,G,6FAaHlC,G,sGAAMmC,E,+BAAS,OAAQD,E,+BAAU,GACzCE,EAAMC,EAAO/F,EAAOgG,QAAQtC,GAMhCiC,KAAKC,QAAL,eACKD,KAAKC,QADV,CAEEK,OAAQH,EAAIG,OACZC,YAAa,UACbC,QAAS,IAAIC,QAAJ,eACQ,SAAXP,GAAqB,CACvB,eAAgB,oBAFX,GAKHD,EAAQO,SAAR,eACCP,EAAQO,YAIA,SAAXN,EAAoB,CACtBQ,KAAqB,QAAfP,EAAIG,OAAmBK,KAAKC,UAAUX,EAAQS,MAAQ,MAC1D,CACAA,KAAqB,QAAfP,EAAIG,OAAmBL,EAAQS,KAAO,OAQ5C/H,EAAMD,EAAcyH,EAAIxH,IAAKsH,EAAQrH,YAGvCyB,EAAM,O,kBAKQwG,MAAMxG,EAAOyG,QAAUnI,EAAKqH,KAAKC,S,aAA7Cc,E,QAEIzE,QAAU,KAAOyE,EAAIzE,OAAS,K,kCACVyE,EAAG,O,WACA,WADzBC,E,QACc1E,O,uBACV0E,EAAcC,M,yBAGIxH,EAAUsE,GAAMiD,G,eAAtC3F,E,yBACGA,G,yBAEW0F,EAAIb,K,kNExDxBgB,EAAY,IAAInB,EAEhBoB,EAAmB,SAACC,EAAeC,GACvC,OAAQA,EAAO7J,MACb,IAAK,aACH,OAAO,eACF4J,EADL,CAEEE,WAAW,EACXL,MAAO,CACLpJ,SAAS,EACToJ,MAAO,IAETM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACX3H,KAAM0H,EAAOG,QACbD,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXL,MAAO,CACLpJ,SAAS,EACToJ,MAAOI,EAAOG,QACdD,MAAM,KAGZ,QACE,MAAM,IAAIE,QA+CDC,EA3CE,WAMH,IALZC,EAKW,uDALkB,GAC7BC,EAIW,uCAHX7D,EAGW,uCAFXkC,EAEW,uCADXC,EACW,uCACL2B,EAAuB,CAC3BP,WAAW,EACXL,MAAO,CACLpJ,SAAS,EACToJ,MAAO,IAETtH,KAAMiI,EACNL,MAAM,GARG,EAUeO,qBAAWX,EAAkBU,GAV5C,mBAUJT,EAVI,KAUGW,EAVH,KAkCX,OAtBAC,qBAAU,WACR,IAAIC,GAAY,EAgBhB,OAfe,uCAAG,4BAAAC,EAAA,6DAChBH,EAAS,CAAEvK,KAAM,eADD,kBAIG0J,EAAUiB,QAAQpE,EAAMmC,EAAQD,GAJnC,OAIVtG,EAJU,OAKTsI,GACHF,EAAS,CAAEvK,KAAM,gBAAiBgK,QAAS7H,IAN/B,gDASTsI,GACHF,EAAS,CAAEvK,KAAM,gBAAiBgK,QAAQ,EAAD,KAV7B,yDAAH,oDAcfY,GACO,WACLH,GAAY,KAEbN,GAEIP,GC9EHF,EAAY,IAAInB,EAEhBoB,EAAmB,SAACC,EAAeC,GACvC,OAAQA,EAAO7J,MACb,IAAK,aACH,OAAO,eACF4J,EADL,CAEEE,WAAW,EACXL,MAAO,CACLpJ,SAAS,EACToJ,MAAO,IAETM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACX3H,KAAM0H,EAAOG,QACbD,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXL,MAAO,CACLpJ,SAAS,EACToJ,MAAOI,EAAOG,SAEhBD,MAAM,IAEV,QACE,MAAM,IAAIE,QAsCDY,EAlCQ,SACrBT,EACA7D,EACAmC,GAEA,IAAM2B,EAAuB,CAC3BP,WAAW,EACXL,MAAO,CACLpJ,SAAS,EACToJ,MAAO,IAETtH,KAAMiI,EACNL,MAAM,GAR4B,EAWVO,qBAAWX,EAAkBU,GAXnB,mBAW7BT,EAX6B,KAWtBW,EAXsB,KA2BpC,MAAO,CAACX,EAdQ,uCAAG,WAAOnB,GAAP,eAAAiC,EAAA,6DACjBH,EAAS,CAAEvK,KAAM,eADA,kBAKE0J,EAAUiB,QAAQpE,EAAMmC,GAAU,OAAQD,GAL5C,cAKXtG,EALW,OAMfoI,EAAS,CAAEvK,KAAM,gBAAiBgK,QAAS7H,IAN5B,kBAORA,GAPQ,uCASfoI,EAAS,CAAEvK,KAAM,gBAAiBgK,QAAQ,EAAD,KAT1B,kBAURI,GAVQ,yDAAH,wDC7DZU,EAAmBC,MAAaC,MAAM,CAC3CC,SAAUF,MACRhL,MAAM,YACNF,SAAS,wBACTqL,IAAI,EAAG,4CAETC,SAAUJ,MAAahL,MAAM,YAAYF,SAAS,0BAG7CuL,EAAgB,CACrBH,SAAU,GACVE,SAAU,ICpBIE,ED2BG,SAAC,GAAgB,qBACKR,EAAe,GAAI,SADzB,mBAC1BS,EAD0B,KACdC,EADc,KAG3BC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,SAAAhB,EAAA,sEACYa,EAAiB,CAChDrC,KAAM,CACL+B,SAAUQ,EAAOR,SACjBE,SAAUM,EAAON,YAJC,cAQpBO,EAAQC,eAAc,GARF,2CAAH,wDAcZC,EAA4B,SAACH,EAAQI,GAC1C,QAAKJ,EAAOR,UAAaQ,EAAON,UAAaU,IAM9C,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,EAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,KAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,yBAAK3L,MAAO,CACX4L,SAAU,QACVC,OAAQ,SAER,kBAAC9M,EAAD,CACCI,MAAM,WACNE,MAAOwL,EAAOR,SACd1K,KAAK,WACLF,QAAU+L,EAAQnB,UAAYiB,EAAOjB,WAClCkB,GAAgBb,EAAW7B,MAAX,eAEnBnJ,YAAc8L,EAAQnB,UAAYiB,EAAOjB,WACtCkB,GAAgBb,EAAW7B,MAAX,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAAC1M,EAAD,CACCI,MAAM,WACNE,MAAOwL,EAAON,SACd5K,KAAK,WACLF,QAAU+L,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBb,EAAW7B,MAAX,eACnBnJ,YAAc8L,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBb,EAAW7B,MAAX,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAAC,IAAD,CACCrM,KAAK,UACL2M,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCtM,SAAUwL,EAA0BH,EAAQI,GAC5Ce,QAAST,EACTvL,MAAO,IALR,e,6KElF0BiM,IAAUC,IAAnCC,OAAmCD,IAA3BE,QAA2BF,IAAlBG,OAAkBH,IAAVD,OACzBK,GAAYC,IAAZD,QC1BOL,GDmKAO,aAvIQ,SAACC,GAAgB,IAAD,EACDC,oBAAS,GADR,mBAC5BC,EAD4B,KACjBC,EADiB,KASnC,OACI,kBAACX,GAAD,CACIY,MAAO,IACP7M,MAAO,CACH8M,UAAW,6BACXC,OAAQ,QAEZC,aAAW,EAACL,UAAWA,EAAWM,WAdvB,SAACN,GAEhBC,EAAaD,IAYiDnH,MAAM,SAEhE,kBAAC,IAAD,CAAM0H,YAAY,EAAMC,KAAK,UACzB,kBAAC,IAAKtN,KAAN,CAAW+B,IAAI,IAAI0E,KAAM,kBAAC8G,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAMC,GAAG,UAAT,cAgBJ,kBAACf,GAAD,CACI1K,IAAI,OACJ0E,KAAM,kBAACgH,EAAA,EAAD,MACNzK,MAAM,SAGN,kBAAC,IAAKhD,KAAN,CACIyG,KAAM,kBAACiH,EAAA,EAAD,MACN3L,IAAI,KACJ,kBAAC,IAAD,CAAMyL,GAAG,kBAAT,gBAGJ,kBAAC,IAAKxN,KAAN,CAAW+B,IAAI,IAAI0E,KAAM,kBAACkH,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAMH,GAAG,cAAT,SAIJ,kBAAC,IAAKxN,KAAN,CAAW+B,IAAI,IAAI0E,KAAM,kBAACmH,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAMJ,GAAG,mBAAT,eAGJ,kBAAC,IAAKxN,KAAN,CAAW+B,IAAI,IAAI0E,KAAM,kBAACoH,EAAA,EAAD,OACrB,kBAAC,IAAD,CAAML,GAAG,gBAAT,eAaR,kBAACf,GAAD,CAAS1K,IAAI,OAAO0E,KAAM,kBAACqH,EAAA,EAAD,MAA0B9K,MAAM,UACtD,kBAAC,IAAKhD,KAAN,CAAW+B,IAAI,MACX,kBAAC,IAAD,CAAMyL,GAAG,gBAAT,iBAOR,kBAAC,IAAKxN,KAAN,CAAW+B,IAAI,KAAK0E,KAAM,kBAACsH,EAAA,EAAD,OACtB,kBAAC,IAAD,CAAMP,GAAG,mBAAT,aAGJ,kBAACf,GAAD,CAAS1K,IAAI,OAAO0E,KAAM,kBAACuH,EAAA,EAAD,MAAkBhL,MAAM,SAC9C,kBAAC,IAAKhD,KAAN,CAAW+B,IAAI,MAAf,sBACA,kBAAC,IAAK/B,KAAN,CAAW+B,IAAI,MAAf,eACA,kBAAC,IAAK/B,KAAN,CAAW+B,IAAI,MAAf,iBACA,kBAAC,IAAK/B,KAAN,CAAW+B,IAAI,OAAf,gBAGJ,kBAAC,IAAK/B,KAAN,CAAW+B,IAAI,MAAM0E,KAAM,kBAACwH,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAMT,GAAG,cAAT,QAGJ,kBAACf,GAAD,CAAS1K,IAAI,OAAO0E,KAAM,kBAACyH,EAAA,EAAD,MAAkBlL,MAAM,SAC9C,kBAAC,IAAKhD,KAAN,CAAW+B,IAAI,MACX,kBAAC,IAAD,CAAMyL,GAAG,mBAAT,kBAEJ,kBAAC,IAAKxN,KAAN,CAAW+B,IAAI,MACX,kBAAC,IAAD,CAAMyL,GAAG,eAAT,iBAIR,kBAAC,IAAKxN,KAAN,CAAW+B,IAAI,KACX0E,KAAM,kBAAC0H,GAAA,EAAD,OAEN,kBAAC,IAAD,CAAMX,GAAG,8BAAT,eAGJ,kBAACf,GAAD,CAAS1K,IAAI,OAAO0E,KAAM,kBAAC2H,GAAA,EAAD,MAAqBpL,MAAM,YACjD,kBAAC,IAAKhD,KAAN,CACIyG,KAAM,kBAAC4H,GAAA,EAAD,MACNtM,IAAI,MACJ,kBAAC,IAAD,CAAMyL,GAAG,4BAAT,qBAEJ,kBAAC,IAAKxN,KAAN,CACIyG,KAAM,kBAAC6H,GAAA,EAAD,MACNvM,IAAI,MACJ,kBAAC,IAAD,CAAMyL,GAAG,0BAAT,iB,UEnJTe,GCQQ,SAAC,GAGV,IAAD,IAFTvL,aAES,MAFD,gBAEC,MADTwL,cACS,MADA,IACA,EACT,OACI,yBAAKrO,MAAO,CACRqO,OAAQA,EACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,CAAO3M,YAAagB,EAAO8B,MAAOyJ,KAAMK,2B,4DCH5CtC,GAAWD,IAAXC,OChBOA,GD2BS,SAACM,GACrB,IAAMiC,EAAUC,cADsB,EAGyB1E,EAAe,GAAI,sBAH5C,mBAG/B2E,EAH+B,KAGNC,EAHM,KAMhCC,EAAkB,SAAChD,GACjBA,EAAElK,KAKVgI,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACjB+E,EAA4B,IADX,2CAAH,qDAIxBE,KACD,IAgFH,OACI,kBAAC,GAAD,CACI/O,MAAO,CACHgP,WAAY,OACZX,OAAQ,OACRC,QAAS,OACTC,eAAgB,gBAChBzB,UAAW,qKACXmC,OAAQ,GACRC,WAAY,WACZV,WAAY,SACZW,aAAc,WAGlB,wBAEIpD,QAAS,kBAAM2C,EAAQU,KAAK,WAC5BpP,MAAO,CACHqP,MAAO,UAAWC,UAAW,OAAQC,WAAY,QACjDC,OAAQ,YALhB,kBAYA,yBACIxP,MAAO,CACHyP,YAAa,UAIjB,kBAAC,KAAD,CACIC,UAAU,aAEVC,QA3GH,WAET,OAAIf,EAAwB1F,UACxB,kBAAC,IAAD,KACI,yBAAKlJ,MAAO,CACR4P,QAAS,WAET,kBAAC,KAAD,QAQRhB,EAAwBzF,MAAQyF,EAAwBrN,OAASqN,EAAwBrN,KAAK,GAE1F,kBAAC,IAAD,KACI,yBAAKvB,MAAO,CACR4P,QAAS,WAET,kBAAC,GAAD,CAAO/M,MAAM,4BASzB,kBAAC,IAAD,CAIIkJ,QAAS+C,GACRF,EAAwBzF,MAAQyF,EAAwBrN,KAAK,IAAMqN,EAAwBrN,KAAKX,KAAI,SAAA+E,GACjG,OACI,kBAAC,IAAK9F,KAAN,CAKI+B,IAAI,KAEJ,yBAAKhC,UAAU,oBACX,0BAAMA,UAAU,yBACZ,kBAACiQ,GAAA,EAAD,OAEJ,yBAAKjQ,UAAU,yBACX,4BACK+F,EAAKnD,SAEV,4BACKmD,EAAKlD,MAEV,6BA5DK0B,EA8D4BwB,EAAKhD,MA7DlE6B,QAAQC,IAAIN,GAELA,OAHyB,IAACA,QAmHrB,uBACInE,MAAO,CACHyP,YAAa,QAEjBK,KAAK,MAAMlQ,UAAU,6BAErB,kBAAC,KAAD,CACImQ,cAAe,IACfC,MAAO,IAEP,0BAAMhQ,MAAO,CACTuP,WAAY,OACZU,WAAY,IACZhQ,aAAc,OACdoP,MAAO,UACPO,QAAS,WACTJ,OAAQ,UACRC,YAAa,SAEb,kBAACS,GAAA,EAAD,UAUhB,uBAAGJ,KAAK,sBACJ,0BAAM9P,MAAO,CACTuP,WAAY,OACZU,WAAY,IACZhQ,aAAc,OACdoP,MAAO,UACPO,QAAS,WACTJ,OAAQ,YAER,kBAACW,GAAA,EAAD,MACA,0BAAMnQ,MAAO,CACTuP,WAAY,SADhB,eExLTa,GAdE,SAAC3D,GACjB,OACC,6BAEC,wBAAIzM,MAAO,CACVqQ,UAAW,SACXf,UAAW,UAFZ,iB,mGCNGgB,GAAY,SAAC7D,GAAD,OACjB,kBAAC,KAAD,eACC8D,MAAO,GACP1D,MAAO,KACPwB,OAAQ,IACRmC,QAAQ,eACRC,gBAAgB,UAChBC,gBAAgB,WACZjE,GAEJ,0BAAMkE,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjE,MAAM,KAAKwB,OAAO,OACrD,0BAAMsC,EAAE,KAAKC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACvD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjE,MAAM,KAAKwB,OAAO,OACrD,0BAAMsC,EAAE,KAAKC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACvD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,4BAAQ0C,GAAG,OAAOC,GAAG,MAAMC,EAAE,OAC7B,0BAAMN,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjE,MAAM,KAAKwB,OAAO,OACrD,0BAAMsC,EAAE,KAAKC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACvD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,4BAAQ0C,GAAG,OAAOC,GAAG,MAAMC,EAAE,OAC7B,0BAAMN,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjE,MAAM,KAAKwB,OAAO,OACrD,0BAAMsC,EAAE,KAAKC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACvD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,4BAAQ0C,GAAG,OAAOC,GAAG,MAAMC,EAAE,OAC7B,0BAAMN,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIjE,MAAM,KAAKwB,OAAO,OACrD,0BAAMsC,EAAE,KAAKC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACvD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACxD,4BAAQ0C,GAAG,OAAOC,GAAG,MAAMC,EAAE,OAC7B,0BAAMN,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,MAAMC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,MAAMwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,0BAAMsC,EAAE,OAAOC,EAAE,MAAMC,GAAG,KAAKC,GAAG,KAAKjE,MAAM,KAAKwB,OAAO,OACzD,4BAAQ0C,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,0BAAMN,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIjE,MAAM,MAAMwB,OAAO,OACrD,4BAAQ0C,GAAG,OAAOC,GAAG,KAAKC,EAAE,OAC5B,0BAAMN,EAAE,OAAOC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIjE,MAAM,MAAMwB,OAAO,MACvD,4BAAQ0C,GAAG,KAAKC,GAAG,KAAKC,EAAE,SAI5BX,GAAUY,SAAW,CACpBvR,KAAM,eACNwR,OAAQ,UACRtP,YAAa,sBACbuP,SAAU,aAGId,U,6EChFPtR,I,MAAaD,IAAbC,UA4COF,GA3BF,SAAC,GAA2G,IAAzGK,EAAwG,EAAxGA,MAA2BE,GAA6E,EAAjGD,KAAiG,EAA3FE,aAA2F,EAA7ED,OAAOE,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,KAA4B,IAAtB0R,YAAsB,MAAf,EAAe,EACpH,OACI,oCACKlS,GACG,wBAAIS,UAAU,mBACTT,GAIT,kBAAC,IAAKU,KAAN,CACIC,eAAgBL,EAAU,QAAU,GACpCM,KAAML,GAGN,kBAAC,GAAD,CACIF,SAAUA,EACVD,SAAUA,EACVF,MAAOA,EACPM,KAAMA,EACNC,UAAU,iBACVyR,KAAMA,O,sGCJlBC,GAAYC,KAAZD,QACAE,GAAYC,KAAZD,QAKFE,GAA0B,SAACC,GAChCC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,mBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BC7C9ByC,GD0EM,SAAC,GAUR,IATbC,EASY,EATZA,QACAC,EAQY,EARZA,WACAC,EAOY,EAPZA,YACAC,EAMY,EANZA,qBAEAC,GAIY,EALZC,wBAKY,EAJZD,qBACAE,EAGY,EAHZA,SACAC,EAEY,EAFZA,iBAEY,+JAEoB5F,mBAAS,KAF7B,mBAEL6F,EAFK,KAEKC,EAFL,OAGsB9F,oBAAS,GAH/B,mBAGL+F,EAHK,KAGMC,EAHN,OAIgChG,mBAAS,IAJzC,mBAILiG,EAJK,KAIWC,EAJX,OAKkClG,oBAAS,GAL3C,mBAKLmG,EALK,KAKYC,EALZ,OAMgD7I,EAAe,GAAI,0BANnE,mBAML8I,EANK,KAMeC,EANf,OAOyD/I,EAAe,GAAI,wBAP5E,mBAOLgJ,EAPK,KAOsBC,EAPtB,OAQkEjJ,EAAe,GAAI,0BARrF,mBAQ6BkJ,GAR7B,aASgCzG,mBAAS,IATzC,mBASL0G,EATK,KASWC,EATX,OAUoB3G,oBAAS,GAV7B,mBAUL4G,EAVK,KAUKC,GAVL,KAaNC,GAAiC,uCAAG,WAAO9R,GAAP,iBAAAoI,EAAA,sEAEDqJ,EAAkC,CACzE3S,WAAY,CACXE,aAAc,CACbgB,SALsC,QAEnC+R,EAFmC,SAY6B,OAArCA,EAA0BvP,SAC1DwN,GAAwB,kBAClBgC,EAAeN,EAAeO,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KAC/D2R,EAAkBK,IAfsB,2CAAH,sDAoBjCE,GAAY,uCAAG,4BAAA9J,EAAA,sEACOoJ,EAAgC,IADvC,QACdW,EADc,SAOnBR,EAAkBQ,GAPC,2CAAH,qDAelBjK,qBAAU,WAETgK,OACE,IAKH,IAAME,GAAY,uCAAG,4BAAAhK,EAAA,sDACdiK,EAAW,IAAIC,SACrBzB,EAAS0B,SAAQ,SAAAC,GAChBH,EAASI,OAAO,SAAUD,EAAMA,EAAKvU,SAGtC+S,GAAa,GAWb0B,KAAQ,CACP7T,IAAI,GAAD,OAAK0B,EAAOyG,QAAZ,oBACHR,OAAQ,OACRmM,aAAa,EACb9S,KAAMwS,EACNO,iBAAiB,EACjB/P,QAAS,WACRiO,EAAY,IACZE,GAAa,GACbkB,KACAjC,KAAQpN,QAAQ,yBAEjBsE,MAAO,WACN6J,GAAa,GACbf,KAAQ9I,MAAM,qBA/BI,2CAAH,qDAyDlBe,qBAAU,WACLyI,GAAYA,EAAShS,OAAS,GACjCuS,EAAkB,aAAIP,MACrB,CAACA,IAGJzI,qBAAU,WACL0J,GAAYpB,GAAwBG,GACvCO,EAAkB,aAAIP,MAErB,CAACA,EAAUiB,IAId1J,qBAAU,cAKP,CAAC0I,EAAkBgB,IAEtB,IAAMiB,GAAc,CAEnBC,UAAU,EACVC,SAAU,SAAAP,GACT1B,GAAY,SAAAkC,GACX,IAAMC,EAAQpC,EAASpR,QAAQ+S,GACzBU,EAAcrC,EAASrR,QAE7B,OADA0T,EAAYC,OAAOF,EAAO,GACnBC,MAITE,aAAc,SAAAZ,GAIb,OAHA1B,GAAY,SAAAkC,GACX,MAAM,GAAN,oBAAWnC,GAAX,CAAqB2B,QAEf,GAER3B,YAMKwC,GAA0B,SAACpQ,EAAOjD,GAEvC,GAAIiR,GAAkBA,EAAetS,OAAS,EAE7C,GADqBsS,EAAeqC,MAAK,SAAArQ,GAAK,OAAIA,EAAMjD,KAAOA,KAK1D,CACJ,IAAMuT,EAAoBtC,EAAegB,QAAO,SAAAhP,GAAK,OAAIA,EAAMjD,KAAOA,KACtEkR,EAAkBqC,QALlBrC,EAAkB,GAAD,oBAAKD,GAAL,CAAqBhO,KACtCmO,EAAmBnO,QAQpBiO,EAAkB,GAAD,oBAAKD,GAAL,CAAqBhO,KACtCmO,EAAmBnO,IAqBfuQ,GAAkB,uCAAG,WAAOrK,EAAQC,GAAf,qBAAAhB,EAAA,sEACckJ,EAA8B,CACrE1K,KAAM,CACL5G,GAAImJ,EAAOnJ,GACXoD,IAAK+F,EAAO/F,IACZjC,MAAOgI,EAAOhI,MACdsS,QAAStK,EAAOsK,QAChBtQ,OAAQgG,EAAOhG,UAPS,QACpBuQ,EADoB,SAc4C,OAArCA,EAA0BlR,QAC1DwN,GAAwB,iBAMlBiD,EAJsB,WAC3B,OAAOvB,EAAexS,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQ0J,EAAOnJ,IAG7C2T,GAGRC,EAAcnV,OAAOoV,OAAO,GAAInC,EAAeuB,GAAjCxU,OAAA,IAAAA,CAAA,GAA8CiV,IAC5DI,EAXqE,uBAW/CpC,EAAelS,MAAM,EAAGyT,IAXuB,CAWfW,GAXe,aAWClC,EAAelS,MAAMyT,EAAQ,KACzGtB,EAAkBmC,KA9PU7D,OAkQ5B8D,EAjQF7D,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAmQ3CvE,EAAQC,eAAc,GAnCI,iCApOE,IAAC4G,IAoOH,OAAH,wDAuClB+D,GAAkC,SAAC7K,EAAQI,GAIhD,OAAKA,GAqCN,OACC,oCACC,kBAAC,KAAD,CACCjL,MAAO,CACN2V,IAAK,QAEN9S,MAAM,gBACNkP,QAASA,EACT6D,KA5Lc,SAAC9J,GAEboG,GACHD,EAAYU,GACZY,IAAY,KAGZpB,EAAoBQ,GACpBY,IAAY,IAEbvB,GAAW,IAmLT6D,SA/KkB,SAAC/J,GACrBkG,GAAW,IA+KTnF,MAAO,OACPiJ,UAAW,CACVjK,OAAQ,IACR+D,QAAS,KAEVmG,OAAO,QAEP,yBAAKnW,UAAU,6BACd,yBAAKA,UAAU,kCAEd,kBAAC,KAAD,CAAMoW,iBAAiB,IAAI5W,KAAK,OAAO6W,KAAK,UAC3C,kBAACzE,GAAD,CAAS0E,IAAI,mBAAmBtU,IAAI,KACnC,yBAAKhC,UAAU,yCAEd,6BACC,kBAAC0R,GAAD,eACC1R,UAAU,qBACVuW,SAAS,UACTnW,MAAO,CACNgP,WAAY,OACZ/O,aAAc,QAEXsU,IAEJ,uBAAG3U,UAAU,wBACZ,kBAACwW,GAAA,EAAD,OAED,uBAAGxW,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2CASH,kBAAC,IAAD,CACCA,UAAU,6BACVR,KAAK,UACL2M,QAAS+H,GACTtU,SAA8B,IAApB+S,EAASlS,OACnB2L,QAASyG,EACTnM,KAAM,kBAAC+P,GAAA,EAAD,MACNrW,MAAO,CACNsP,UAAW,OACXgH,aAAc,SAThB,WAgBD,kBAAC9E,GAAD,CAAS0E,IAAI,gBAAgBtU,IAAI,KAChC,oCACEyQ,GAAYA,EAASkE,OAAS,GAC9B,oCACC,wBAAI3W,UAAU,mBAAd,kBAGA,yBAAKA,UAAU,4CACbqT,EAA0B9J,MACvBkJ,EAAShS,OAAS,GAClBgS,EAASzR,KAAI,SAAA+D,GACf,OACC,yBACC/C,IAAK+C,EAAMjD,GAEX9B,UAAU,oEAGV,yBACCmM,QAAS,WACRgJ,GAAwBpQ,EAAOA,EAAMjD,KAEtC9B,UAAU,yEACV,kBAAC4W,GAAA,EAAD,OAMD,yBAAK5W,UAAU,yDACd,yBAAKsH,IAAKvC,EAAM3C,MAAO8C,IAAI,gBAapC,yBAAKlF,UAAU,qDAEbqT,EAA0B9J,MACvBiK,EAAe/S,OAAS,GACxB+S,EAAexS,KAAI,SAAA+D,GACrB,OACC,yBACC/C,IAAK+C,EAAMjD,GAEX9B,UAAU,2DAlNM8B,EAmNIiD,EAAMjD,GAlNjCiR,GAAkBA,EAAetS,OAAS,GACxBsS,EAAeqC,MAAK,SAAArQ,GAAK,OAAIA,EAAMjD,KAAOA,KAiNrB,yBAAK9B,UAAU,+DAC9C,kBAAC6W,GAAA,EAAD,OAGQ,IAET,kBAAC,KAAD,CAAU9G,QAAS,kBAvJT,SAAC6D,EAAmC9R,EAAIqT,EAAyBpQ,GACtF,OAEE,kBAAC,IAAD,KACC,kBAAC,IAAK9E,KAAN,CACCkM,QAAS,kBAAMgJ,EAAwBpQ,EAAOjD,IAC9CE,IAAI,IAAI0E,KAAM,kBAACmQ,GAAA,EAAD,OAFf,UASA,kBAAC,IAAK5W,KAAN,CACCkM,QAAS,kBAAMyH,EAAkC9R,IACjDE,IAAI,IAAI0E,KAAM,kBAACoQ,GAAA,EAAD,CAAgBrH,MAAM,SAFrC,WA0IiCsH,CAAcnD,GAAmC7O,EAAMjD,GAAIqT,GAAyBpQ,IAAQ+K,UAAU,eAC9H,yBAAK9P,UAAU,+DACd,kBAACgX,GAAA,EAAD,QAUF,yBAAK7K,QAAS,WACbgJ,GAAwBpQ,EAAOA,EAAMjD,KACnCwF,IAAKvC,EAAM3C,MAAO8C,IAAI,SAvOV,IAACpD,KA8OnBuR,EAA0B9J,QAAUiK,EAAe/S,OAAS,IAC5D,yBAAKL,MAAO,CACXsO,QAAS,OACTC,eAAgB,SAChB1B,MAAO,SAGP,kBAAC,GAAD,CAAOhK,MAAM,uCAYnB,yBAAKjD,UAAU,mCAEbiT,GACA,oCACC,kBAAC,IAAD,CACC3H,SAAU,SAACL,EAAQC,GAAT,OAAqBoK,GAAmBrK,EAAQC,IAC1DK,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEPqI,KAGL,gBACAxH,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kDAGA,yBAAK/L,UAAU,gDACd,yBAAKA,UAAU,+DACd,yBAAKsH,IAAK2L,EAAe,MAAW/N,IAAI,SAEzC,yBAAKlF,UAAU,8DACd,wBAAIA,UAAU,oBACZiT,EAAe,MAEjB,4BACC,kBAAC,KAAD,KACEA,EAAe,QAOlB,kBAAC,KAAD,CAECgE,UAAW,kBAAMrD,GAAkCX,EAAe,KAClEhQ,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAE9C,wBACClX,UAAU,sBADX,yBAaH,kBAACb,EAAD,CACCI,MAAM,iBACNE,MAAOwL,EAAO/F,IACdnF,KAAK,MACLF,QAAU+L,EAAQ1G,KAAOwG,EAAOxG,MAC7ByG,GAAgBwH,EAAmBlK,MAAnB,UAEnBnJ,YAAc8L,EAAQ1G,KAAOwG,EAAOxG,MACjCyG,GAAgBwH,EAAmBlK,MAAnB,UACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,UAKlB,kBAAC1M,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOhI,MACdlD,KAAK,QACLF,QAAU+L,EAAQ3I,OAASyI,EAAOzI,QAC/B0I,GAAgBwH,EAAmBlK,MAAnB,YAEnBnJ,YAAc8L,EAAQ3I,OAASyI,EAAOzI,QACnC0I,GAAgBwH,EAAmBlK,MAAnB,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,YAIlB,kBAAC1M,EAAD,CACCI,MAAM,UACNE,MAAOwL,EAAO9F,QACdpF,KAAK,QACLF,QAAU+L,EAAQzG,SAAWuG,EAAOvG,UACjCwG,GAAgBwH,EAAmBlK,MAAnB,cAEnBnJ,YAAc8L,EAAQzG,SAAWuG,EAAOvG,UACrCwG,GAAgBwH,EAAmBlK,MAAnB,cACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,cAIlB,kBAAC,IAAD,CACCrM,KAAK,UACL2M,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCtM,SAAUkW,GAAgC7K,EAAQI,GAClDe,QAAST,EACTvL,MAAO,IALR,gBAwBJ6S,GACD,yBAAK7S,MAAO,CACXqO,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,wBAAIxO,MAAO,CACVqQ,UAAW,SACX0G,SAAU,OACV1H,MAAO,UAHR,4CEtnBFnF,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAKhEoH,GAA0B,SAACC,GAChCC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,mBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BAKvCoG,GAAwB,SAAC9D,GAC9BC,KAAa/I,MAAM,CAClB8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAKvC7E,GAAgB,CACrB7K,KAAM,GACNkC,YAAa,GACb8C,MAAO,GACPpE,IAAK,GACLyB,MAAO,IAikBOgV,IA7jBIC,KAAXC,OAYY,SAAC,GAAwG,IAAtGC,EAAqG,EAArGA,sBAAuBC,EAA8E,EAA9EA,yBAA0BC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UAAuB,EAExEtN,EAAe,GAAI,kBAFqD,mBAEpHuN,EAFoH,KAElGC,EAFkG,OAGxExN,EAAe,GAAI,kBAHqD,mBAGpHyN,EAHoH,KAGlGC,EAHkG,OAI5C1N,EAAe,GAAI,6BAJyB,mBAIpF2N,GAJoF,aAKhD3N,EAAe,GAAI,2BAL6B,mBAKtF4N,GALsF,aAMxC5N,EAAe,GAAI,+BANqB,gCAO5CA,EAAe,GAAI,8BAPyB,mBAOpF6N,GAPoF,aAQ5C7N,EAAe,GAAI,6BARyB,mBAQpF8N,GARoF,aAW3FrL,oBAAS,GAXkF,mBAWpH2F,EAXoH,KAW1GJ,EAX0G,OAYnFvF,oBAAS,GAZ0E,mBAYpHsL,EAZoH,KAYtGC,EAZsG,OAanFvL,mBAAS,IAb0E,mBAapHwL,EAboH,KAatGC,EAbsG,OAc7EzL,mBAAS,IAdoE,mBAcpH0L,EAdoH,KAcnGC,EAdmG,OAe3E3L,mBAAS,IAfkE,oCAgB3FA,mBAAS,KAhBkF,qCAiB5EA,oBAAS,IAjBmE,qBAiBpH4L,GAjBoH,gBAkBzF5L,mBAAS,KAlBgF,qBAkBpH6L,GAlBoH,gBAmB7D7L,oBAAS,IAnBoD,iCAsB3H9C,qBAAU,YAEW,uCAAG,sBAAAE,EAAA,sEAChB6N,EAAuB,CAC5BnX,WAAY,CACXE,aAAc,CACbgB,GAAI2V,EAAc3V,OAJC,2CAAH,qDAUpB8W,KAEE,CAACnB,IAGJzN,qBAAU,WACT,GAAI8N,EAAiBvO,MAAQhJ,OAAOC,KAAKsX,GAAkBrX,OAAS,EAAG,CAEtE,IAAMiH,EAASoQ,EAAiBnW,KAAKoD,MACjC2C,GAAUA,EAAOjH,OAAS,IAC7B4R,EAAY3K,GACZ+Q,EAAmB/Q,IAGhBoQ,EAAiBnW,KAAKS,OAAS0V,EAAiBnW,KAAKS,MAAtB,KAElCiQ,EAAY,CAACyF,EAAiBnW,KAAKS,OAAxB,oBAAkCsF,KAC7C6Q,EAAgBT,EAAiBnW,KAAKS,MAAtB,QAIhB,CAAC0V,IAGJ9N,qBAAU,WAELyI,GAAYA,EAAS,IAAMA,EAAShS,OAAS,GAE5C6X,IAAiB7F,EAAS,GAAG3Q,KAChCyW,EAAgB9F,EAAS,GAAG3Q,IAC5B+W,GAAyBpG,EAAS,OAKlC,CAACA,IAGJ,IAAMqG,GAAuB,uCAAG,WAAMhX,GAAN,SAAAoI,EAAA,sEACzBgO,EAAqC,CAC1CtX,WAAY,CACXE,aAAc,CACbiY,QAASjX,EACTkX,WAAY,WACZC,OAAQxB,EAAc3V,OANM,2CAAH,sDAgBvB+W,GAAwB,uCAAG,WAAM9T,GAAN,uBAAAmF,EAAA,sEAELiO,EAAqC,CAC/DvX,WAAY,CACXE,aAAc,CACbiY,QAAShU,EAAMjD,GACfkX,WAAY,WACZC,OAAQxB,EAAc3V,OAPO,QAE1BoX,EAF0B,SAcY,OAAxBA,EAAa5U,QAChCwN,GAAwB,uBAKlBiD,EAJkB,WACvB,OAAO4C,EAAU3W,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQkW,EAAc3V,IAG/CqX,IAERC,EAAWzB,EAAUvC,MAAK,SAAArP,GAAI,OAAIA,EAAKjE,KAAO2V,EAAc3V,SAI3D4T,EAAcnV,OAAOoV,OAAO,GAAIgC,EAAU5C,GAA5BxU,OAAA,IAAAA,CAAA,GAAyC6Y,EAAzC,CAAmDhX,MAAO2C,EAAM3C,SAC9EiX,EAHO,uBAGe1B,EAAUrW,MAAM,EAAGyT,IAHlC,CAG0CW,GAH1C,aAG0DiC,EAAUrW,MAAMyT,EAAQ,KAC/F2C,EAAa2B,KAKdxD,GAAsB,mDAjCS,2CAAH,sDAwC9BjR,QAAQC,IAAI,sBAAuBiT,GAEnC,IAAM9M,GAAY,uCAAG,WAAOC,EAAaC,GAApB,uBAAAhB,EAAA,yDAEpBtF,QAAQC,IAAI,oBAAqB4N,KAE7BqF,GAAoBA,EAAiBvO,MAAQhJ,OAAOC,KAAKsX,EAAiBnW,MAAMlB,OAAS,GAJzE,uBAMbiH,EAAS+K,GAAYA,EAAShS,OAAS,EAAIgS,EAASzR,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAM,IAEtE,IAAM4F,EAAOjH,OAAS,GARd,gCASZuX,EAAqC,CAC1CpX,WAAY,CACXE,aAAc,CACbkY,WAAY,WACZC,OAAQxB,EAAc3V,KAGxB4G,KAAM,CACL3D,MAAO2C,KAjBS,mCAqBVA,EAAO,IAAMA,EAAOjH,OAAS,GArBnB,kCAsBZwX,EAAmC,CACxCrX,WAAY,CACXE,aAAc,CACbiY,QAASrR,EAAO,GAAG5F,GACnBkX,WAAY,WACZC,OAAQxB,EAAc3V,OA3BP,yBAqCS+V,EAAuB,CACnDjX,WAAY,CACXE,aAAc,CACbgB,GAAI2V,EAAc3V,KAGpB4G,KAAM,CACL3I,KAAMkL,EAAOlL,KAAKuZ,OAClBrX,YAAagJ,EAAOhJ,YACpByE,KAAMiS,GACNnZ,KAAM,YA/CY,SAqCd+Z,EArCc,SAoD4B,OAA1BA,EAAejV,QACpCwN,KACA0F,GAAyB,GAOnBzC,EAJkB,WACvB,OAAO4C,EAAU3W,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQkW,EAAc3V,IAG/CqX,GAERzD,EAAcnV,OAAOoV,OAAO,GAAIgC,EAAU5C,GAA5BxU,OAAA,IAAAA,CAAA,GAAyCgZ,IAC7D3U,QAAQC,IAAI,kBAAmB6Q,GAEzB2D,EAd+C,uBAczB1B,EAAUrW,MAAM,EAAGyT,IAdM,CAcEW,GAdF,aAckBiC,EAAUrW,MAAMyT,EAAQ,KAE/F2C,EAAa2B,GAGbnO,EAAQsO,aAIR3D,KAGD3K,EAAQC,eAAc,GA9EF,4CAAH,wDAwFlBnB,qBAAU,WACLyN,EAAcjY,OAGhB,CAACiY,IAGJ,IAAMgC,GAAe,SAACvN,GACrBsL,GAAyB,GACzBnF,GAAY,IAIPjH,GAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOlL,OAASsL,GAwDrB,6BACEqN,GAAkB,kBAACgB,GAAA,EAAD,MAAsB,kBAACC,GAAA,EAAD,MACzC,yBAAK3Z,UAAU,mBAAf,WAUF,OAFA4E,QAAQC,IAAI,WAAY4N,GAGvB,kBAAC,IAAD,CACCnH,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,GADO,GACW6M,KAGvB,gBACAhM,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC3L,MAAO,CACN2V,IAAK,QAEN9S,MAAM,kBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,GACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,GAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgBiM,EAAiB3O,MAAjB,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgBiM,EAAiB3O,MAAjB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACC4F,KAAM,EACNlS,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACrC0J,GAAgBiM,EAAiB3O,MAAjB,kBAEnBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgBiM,EAAiB3O,MAAjB,kBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,kBA2ElB,yBACCzL,MAAO,CACNsP,UAAW,UAKb,yBAAK1P,UAAU,gCAEdI,MAAO,CACNsW,aAAc,SAGf,wBAAI1W,UAAU,mBAAd,WAQD,yBAAKA,UAAU,gCACb8X,EAAiBxO,WACjB,yBAAKlJ,MAAO,CACX4P,QAAS,WAET,kBAAC,KAAD,OAGD8H,EAAiBvO,MACjB,oCACEkJ,GAEAA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAC+D,EAAOgQ,GAC3C,OACC,yBAAK/U,UAAU,sCACd,yBACCA,UAAU,kDACVmM,QAAS,WACRoM,EAAgBxT,EAAMjD,IACtB+W,GAAyB9T,KAG1B,yBAAKuC,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGnC,0BACCiH,QAAS,YAlNI,SAACrK,GAET2Q,GAAYA,EAASsB,QAAO,SAAAhP,GAC7C,OAAOA,EAAMjD,KAAOA,KAIrBuQ,EAAY,IA4MEyH,CAAmB/U,EAAMjD,IACzBgX,GAAwB/T,EAAMjD,KAI/B9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,QAIA0B,IAAiBvT,EAAMjD,KAInBwW,GAA0B,IAAVvD,IAHpB,0BAAM/U,UAAU,4CACf,kBAAC6W,GAAA,EAAD,WAcN,kBAAC,KAAD,CACC5T,MAAO,iBAEP,yBACCkJ,QAAS,WACRkM,GAAgB,IAEjBrY,UAAU,4CAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACf,kBAAC2Z,GAAA,EAAD,YAYP,kBAAC,GAAD,CACCvH,WAAYiG,EACZlG,QAASiG,EACT/F,YAAaA,EACbI,SAAUA,EACV+F,gBAAiBA,EACjBC,mBAAoBA,EACpBnG,sBAAsB,UClmBrB0H,GAAwBC,KAAxBD,OACAE,IADwBD,KAAhBE,YACGhb,IAAX+a,QA+BFE,GAAU,SAAC,GAAoD,IAAnDzY,EAAkD,EAAlDA,KAAM0Y,EAA4C,EAA5CA,gBAA4C,KAA3BvL,QACRhC,oBAAS,IAD0B,mBACzDqF,EADyD,KACjDC,EADiD,OAEPtF,oBAAS,GAFF,mBAEzDwN,EAFyD,KAEnCC,EAFmC,OAGPlQ,EAAe,GAAI,kBAHZ,mBAGpCmQ,GAHoC,aAIN1N,oBAAS,GAJH,mBAIzD2N,EAJyD,KAIlCC,EAJkC,KAQxDC,EAAoB,uCAAG,WAAO7Y,GAAP,iBAAAoI,EAAA,sEACKsQ,EAA0B,CACxD5Z,WAAY,CACVE,aAAc,CACZgB,SAJqB,QACrB8Y,EADqB,SAUsB,OAA7BA,EAAkBtW,SA9CbyN,EA+CJ,mBA9C5BC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BA4CnCoL,EAAmBlZ,EAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACzDuY,EAAgBQ,IAbc,iCApCH,IAAC9I,IAoCE,OAAH,sDAkB5B,OACI,oCACA,kBAAC,KAAD,CAMAsE,KAAK,QAELyE,WAAYnZ,GAER,kBAACqY,GAAD,CACF/W,MAAM,GACL8X,UAAU,QACT/Y,IAAI,KACJiL,MAAO,OAERjN,UAAU,uBAETgb,OAAQ,SAAC5Y,EAAM6Y,GAAP,OACJ,oCACA,yBAAK3T,IAAKlF,EACP+J,QAAS,WACRuO,GAAyB,GACzBH,EAAyBU,IAE7B/V,IAAI,YACJ9E,MAAO,CACHqO,OAAQ,OACRxB,MAAO,OACPiO,UAAW,UACX7a,aAAa,MACfuP,OAAQ,iBAMhB,kBAACoK,GAAD,CACC/W,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,uBACVgb,OAAQ,SAACnY,EAAMoY,GAAP,OACP,oCAEE,wBACE9O,QAAS,WACPuO,GAAyB,GACzBH,EAAyBU,IAE3B7a,MAAO,CACLiQ,WAAY,IACZZ,MAAO,OACPG,OAAQ,YAGT/M,OASjB,kBAACmX,GAAD,CACW/W,MAAM,cACN8X,UAAU,cACV/Y,IAAI,KACJhC,UAAU,yBAKZ,kBAACga,GAAD,CACE/W,MAAM,gBACN8X,UAAU,WACV/Y,IAAI,KACJhC,UAAU,yBAIrB,kBAACga,GAAD,CACW/W,MAAM,UACN8X,UAAU,eACV/Y,IAAI,KACJhC,UAAU,yBAgCb,kBAACga,GAAD,CAEAha,UAAU,uBACRiD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UACV,uBAAGnG,KAAK,MACP,kBAAC,KAAD,CAASJ,UAAU,MAAM7M,MAAM,uBAChC,0BAAMjD,UAAU,WAAWmM,QAAS,WAClCiG,GAAW,GACXmI,EAAyBU,KAE3B,kBAACG,GAAA,EAAD,SAOC,kBAAC,KAAD,CAEAnE,UAAW,kBAAM0D,EAAqBM,EAAOnZ,KAC7CmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAExD,0BACQlX,UAAU,4BAEV,kBAAC8W,GAAA,EAAD,aAeRwD,GAA2B,kBAAC,GAAD,CAC5BD,gBAAiBA,EACjBgB,aAAc1Z,EACdyQ,WAAYA,EACZD,QAASA,EACTtQ,SAAUyY,IAGV,kBAACgB,GAAD,CACC5D,aAAc2C,EACd1C,UAAWhW,EACR4V,sBAAuBkD,EACvBjD,yBAA0BkD,EAC1BjD,cAAe6C,MA6IR1N,gBAhIM,SAAC,GAAsB,IAArBkC,EAAoB,EAApBA,QAAoB,EAKQzE,EAAe,GAAI,gBAL3B,mBAKlCkR,EALkC,KAKnBC,EALmB,OAMF1O,mBAAS,IANP,mBAMlCuO,EANkC,KAMrBhB,EANqB,KAQzCrQ,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACKsR,EAAwB,CAChD5a,WAAY,CACVC,OAAQ,CACN4a,eAAe,EACfC,mBAAmB,MALJ,OACdC,EADc,OAUpBtB,EAAgBsB,GAVI,2CAAH,qDAYnBC,KACC,IAtBuC,MA0BgB9O,oBAAS,GA1BzB,mBA0BlCyK,EA1BkC,KA0BZC,EA1BY,KAkD1C,OACC,oCAIE,yBAAKxX,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,cAKA,kBAACka,GAAD,CACE2B,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,sBACZC,SAAU,SAAAtc,GAAK,OA7BF,SAACA,GACpB,GAAG8b,EAAc5Z,KAAKlB,OAAS,EAAG,CAChC,IAAMoa,EAAkBU,EAAc5Z,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKic,cAAc9a,SAASzB,EAAMuc,kBACjG3B,EAAgBQ,IA0BOoB,CAAaxc,OAG9B,kBAAC,IAAD,CAEFO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAMqL,GAAyB,KAJtC,YAWA,yBAAKxX,UAAU,uCAWxB,yBAAKA,UAAU,uCACTub,EAAchS,MAAQ8R,EAAa5a,OAAS,GAAK,kBAAC,GAAD,CAClDqO,QAASA,EACTuL,gBAAiBA,EACjB1Y,KAAM0Z,IACLE,EAAcjS,WAAa,kBAAC4S,GAAD,MAE3BX,EAAchS,QAAU8R,EAAa5a,OAAS,IACpD,yBAAKL,MAAO,CACXsP,UAAW,SAEX,kBAAC,GAAD,CAAOzM,MAAM,yBAOhBsY,EAAchS,MACX,kBAAC,GAAD,CACMgO,sBAAuBA,EACvBC,yBAA0BA,EAC1B6D,aAAcA,EACdhB,gBAAiBA,Q,oBC3VrB/P,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAYhEmL,GAAwB,SAAC9D,GAC9BC,KAAa/I,MAAM,CAClB8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAQvC7E,GAAgB,CACrB7K,KAAM,GACNkC,YAAa,GACb8C,MAAO,GACPpE,IAAK,GACLyB,MAAO,IAGAkV,GAAWD,KAAXC,OA0ZO6E,GAjZQ,SAAC,GAA+F,IAA7F5E,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0B6D,EAA2C,EAA3CA,aAAchB,EAA6B,EAA7BA,gBAA6B,EAElEhQ,EAAe,GAAI,cAAe,QAFgC,mBAE9G+R,EAF8G,KAE5FC,EAF4F,OAGvFvP,oBAAS,GAH8E,mBAG9GqF,EAH8G,KAGrGC,EAHqG,OAIrFtF,oBAAS,GAJ4E,mBAI9G2F,EAJ8G,KAIpGJ,EAJoG,OAKrEvF,oBAAS,GAL4D,mBAK5FyF,GAL4F,aAMvDzF,oBAAS,GAN8C,mBAM9GwP,EAN8G,KAMrFC,EANqF,OAOvDzP,oBAAS,GAP8C,mBAO9G0F,EAP8G,KAOrFgK,EAPqF,OAQ7D1P,oBAAS,GARoD,mBAQ9GwF,EAR8G,KAQxFmK,EARwF,OAS7E3P,mBAAS,IAToE,mBAS9GwL,EAT8G,KAShGC,EATgG,OAUrEzL,mBAAS,IAV4D,mBAU9G4P,EAV8G,KAU5FC,EAV4F,OAWrF7P,mBAAS,IAX4E,mBAW9G8P,EAX8G,KAWpGC,EAXoG,OAYtE/P,oBAAS,GAZ6D,oBAY9G4L,GAZ8G,MAY7FoE,GAZ6F,SAanFhQ,mBAAS,IAb0E,qBAa9G6L,GAb8G,MAanGoE,GAbmG,MAmB/G/R,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAhB,EAAA,6DAEd8S,EAAYvK,EAAWA,EAASzR,KAAI,SAAA+D,GACzC,OAAOA,EAAMjD,MACT,IAECqS,EAAW,IAAIC,UAEZG,OAAO,OAAQtJ,EAAOlL,KAAKuZ,QACpCnF,EAASI,OAAO,cAAetJ,EAAOhJ,aACtCkS,EAASI,OAAO,QAASyI,GACzB7I,EAASI,OAAO,QAAS+D,GAAgB0E,EAAU,GAAKA,EAAU,GAAK,IACvE7I,EAASI,OAAO,SAAUmI,GAC1BvI,EAASI,OAAO,OAAQoE,IAbJ,UAiBS0D,EAAuB,CAEnD3T,KAAMyL,IAnBa,SAiBd8I,EAjBc,SAyB4B,OAA1BA,EAAe3Y,QAlFNyN,EAmFN,oBAlF1BC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,mBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAiF1C4K,EAAgB,GAAD,oBAAKgB,GAAL,cACdvZ,GAAImb,EAAc,KAAW,GAC7Bjb,IAAKib,EAAc,KAAW,GAC9Bld,KAAMkd,EAAc,MAAY,GAChChb,YAAagb,EAAc,aAAmB,IAE3CA,MAGJ/R,EAAQsO,YAERnH,EAAY,IACZkG,EAAgB,IAChBoE,EAAoB,IACpBJ,GAA2B,GAC3B/E,GAAyB,GACzBqF,EAAY,KAGZhH,KAMD3K,EAAQC,eAAc,GArDF,kCAzDU,IAAC4G,IAyDX,OAAH,wDA0DZmL,GAAiB,SAACC,GACvBZ,EAA2BY,IAItB1D,GAAe,SAACvN,GACrBsL,GAAyB,IAIpBpM,GAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOlL,OAASsL,GA+BhB+R,GAAiB,SAAC3d,GACvBkd,EAAoBld,IAarB,SAASyV,GAAaZ,GAiBrB,MAhBiC,eAAdA,EAAK9U,MAAuC,cAAd8U,EAAK9U,MAErDuS,KAAQ9I,MAAM,qCAEAqL,EAAK+B,KAAO,KAAO,KAAO,GAExCtE,KAAQ9I,MAAM,gCAdhB,SAAmBjE,EAAKqY,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc1Y,GAerB2Y,CAAUrJ,GAAM,SAAAsI,GACfC,EAAYD,GACZG,GAAazI,GACbwI,IAAoB,OAGd,EAIR,IAAMc,GACL,6BACElF,GAAkB,kBAACgB,GAAA,EAAD,MAAsB,kBAACC,GAAA,EAAD,MACzC,yBAAK3Z,UAAU,mBAAf,WAKF,OACC,kBAAC,IAAD,CACCsL,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC3L,MAAO,CACN2V,IAAK,QAEN9S,MAAM,mBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,GACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,GAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgByQ,EAAiBnT,MAAjB,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgByQ,EAAiBnT,MAAjB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACrC0J,GAAgByQ,EAAiBnT,MAAjB,kBAEnBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgByQ,EAAiBnT,MAAjB,kBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,yBAAKzL,MAAO,CACXsP,UAAW,UAGZ,yBAAK1P,UAAU,wBACd,kBAAC,KAAD,CACCmd,QAASb,EACTuB,gBAAc,EAACle,SAAUud,KAC1B,yBAAKld,UAAU,sCACd,kDACA,wBAAIA,UAAU,6BAAd,0CAIAsc,GACD,oCACC,wBAAItc,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACC8d,YAAU,EACV1d,MAAO,CAAE6M,MAAO,KAChB6O,YAAY,2BACZiC,iBAAiB,WACjBpe,SAAUyd,GAIVY,aAAc,SAACC,EAAOC,GAAR,OAAwBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAEnGX,EAAa5a,OAAS,GAAK4a,EAAara,KAAI,SAAAa,GAC5C,OAAO,kBAAC,GAAD,CAAQpC,MAAOoC,EAASC,IAAKD,EAAS9B,WASjD,yBACCK,MAAO,CACNsP,UAAW,UAKb,yBAAK1P,UAAU,iCACd,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACC8P,UAAU,OAAO7M,MAAO,oCACxB,uBAAGiN,KAAK,OACP,kBAACiO,GAAA,EAAD,SAKH,kBAAC,KAAD,CACC/d,MAAO,CACNC,aAAc,OAEfN,KAAK,SACLwW,SAAS,eACTvW,UAAU,kBACVoe,gBAAgB,EAChBlJ,aAAcA,GACdN,UAAU,GAETgI,EAAW,yBAAKtV,IAAKsV,EAAU1X,IAAI,SAAS9E,MAAO,CAAE6M,MAAO,UAAe2Q,IAI7E,yBACCxd,MAAO,CACNsP,UAAW,UAKb,yBAAK1P,UAAU,gCAAgCI,MAAO,CACrDsW,aAAc,SAEd,wBAAI1W,UAAU,mBAAd,UACA,kBAAC,KAAD,CACC8P,UAAU,OAAO7M,MAAO,uFACxB,uBAAGiN,KAAK,OACP,kBAACiO,GAAA,EAAD,SAIH,yBAAKne,UAAU,gCACbyS,GAEAA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAC+D,EAAOgQ,GAC3C,OACC,yBAAK/U,UAAU,sCACd,yBACCA,UAAU,kDACVmM,QAAS,kBAAMoM,EAAgBxT,EAAMjD,MAErC,yBAAKwF,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGnC,0BACCiH,QAAS,kBA5OM,SAACrK,GAE3B,IAAMuc,EAAY5L,GAAYA,EAASsB,QAAO,SAAAhP,GAC7C,OAAOA,EAAMjD,KAAOA,KAGrBuQ,EAAYgM,GAsOcvE,CAAmB/U,EAAMjD,KACxC9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,QAIA0B,IAAiBvT,EAAMjD,KAInBwW,GAA0B,IAAVvD,IAHpB,0BAAM/U,UAAU,4CACf,kBAAC6W,GAAA,EAAD,WAcN,kBAAC,KAAD,CACC5T,MAAO,iBAEP,yBACCkJ,QAAS,WACRiG,GAAW,GACXqK,GAAwB,GACxBD,GAA2B,IAE5Bxc,UAAU,4CAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACf,kBAAC2Z,GAAA,EAAD,WAUL,kBAAC,GAAD,CACCvH,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCjcvBhI,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAgBhEmL,GAAwB,SAAC9D,GAC9BC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAiJ9B6O,GAjIG,SAAC,GAA6E,IAA3Ezc,EAA0E,EAA1EA,SAAUuQ,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAASkJ,EAA2C,EAA3CA,aAAchB,EAA6B,EAA7BA,gBAA6B,EACrChQ,EAAe,GAAI,kBADkB,mBACvFkU,EADuF,KAClEC,EADkE,KAGxFxT,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEACYsU,EAA0B,CACzD5d,WAAY,CACXE,aAAc,CACbgB,GAAImJ,EAAOnJ,KAGb4G,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkC,YAAagJ,EAAOhJ,eATF,QACdwc,EADc,SAgBkC,OAA7BA,EAAkBna,QAhDZyN,OAiD9BD,EAhDFE,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,mBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAmDpCsF,EAJgB,WACrB,OAAOsG,EAAara,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQM,EAASC,IAG7C4c,GAGRhJ,EAAcnV,OAAOoV,OAAO,GAAI0F,EAAatG,GAA/BxU,OAAA,IAAAA,CAAA,GAA4Cke,IAC1DE,EAXqD,uBAW5BtD,EAAa/Z,MAAM,EAAGyT,IAXM,CAWEW,GAXF,aAWkB2F,EAAa/Z,MAAMyT,EAAQ,KACxGsF,EAAgBsE,IAIhB9I,KAGD3K,EAAQC,eAAc,GACtBiH,GAAW,GApCS,iCAhCU,IAACL,IAgCX,OAAH,wDAyCZ0H,EAAe,SAACvN,GACrBkG,GAAW,IAKNhH,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOlL,OAASsL,GAMtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP/I,KAGL,gBACA4J,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgB4S,EAAoBtV,MAApB,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgB4S,EAAoBtV,MAApB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACrC0J,GAAgB4S,EAAoBtV,MAApB,kBAEnBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgB4S,EAAoBtV,MAApB,kBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,wBCzInBvB,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAchEmL,GAAwB,SAAC9D,GAC9BC,KAAa/I,MAAM,CAClB8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAKvC7E,GAAgB,CACrB7K,KAAM,GACNkC,YAAa,GACb8C,MAAO,GACPpE,IAAK,GACLyB,MAAO,IAiROgV,GApQK,SAAC,GAAyF,IAAvFG,EAAsF,EAAtFA,sBAAuBC,EAA+D,EAA/DA,yBAA0BG,EAAqC,EAArCA,UAAWD,EAA0B,EAA1BA,aAA0B,EAEzDrN,EAAe,GAAI,eAFsC,mBAErGuN,EAFqG,KAEnFC,EAFmF,OAG9E/K,oBAAS,GAHqE,gCAI5EA,oBAAS,IAJmE,mBAIrG2F,EAJqG,KAI3FJ,EAJ2F,OAKpEvF,oBAAS,GAL2D,mBAKrGsL,EALqG,KAKvFC,EALuF,OAMpEvL,mBAAS,IAN2D,mBAMrGwL,EANqG,KAMvFC,EANuF,KAStGvN,EAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,6DAGd8S,EAAYvK,EAAWA,EAASzR,KAAI,SAAA+D,GACzC,OAAOA,EAAMjD,MACT,GALe,SAQM+V,EAAuB,CAEhDnP,KAAM,CACL3I,KAAMkL,EAAOlL,KAAKuZ,OAClBrX,YAAagJ,EAAOhJ,YACpBzC,KAAMyL,EAAOzL,KACbuF,MAAOiY,EACP5a,MAAOkW,GAAgB0E,EAAU,GAAKA,EAAU,GAAK,MAfnC,QAQd4B,EARc,SAoBsB,OAAvBA,EAAYta,QAjEAyN,OAkE9BD,EAjEFE,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,gBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAgE1CiI,EAAa,GAAD,oBAAKC,GAAL,cACX7V,GAAI8c,EAAW,IAAU,GACzB5c,IAAK4c,EAAW,IAAU,GAC1B7e,KAAM6e,EAAW,MAAY,GAC7B3c,YAAa2c,EAAW,aAAmB,IAExCA,MAEJ1T,EAAQsO,YACRhC,GAAyB,IAGzB3B,KAMD3K,EAAQC,eAAc,GAzCF,iCA7CU,IAAC4G,IA6CX,OAAH,wDAoDZ0H,EAAe,SAACvN,GACrBsL,GAAyB,IAIpBpM,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOlL,OAASsL,GAqBtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC3L,MAAO,CACN2V,IAAK,QAEN9S,MAAM,oBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgBiM,EAAiB3O,MAAjB,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgBiM,EAAiB3O,MAAjB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACrC0J,GAAgBiM,EAAiB3O,MAAjB,kBAEnBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgBiM,EAAiB3O,MAAjB,kBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,yBACCzL,MAAO,CACNsP,UAAW,UAKb,yBAAK1P,UAAU,gCAEdI,MAAO,CACNsW,aAAc,SAGf,wBAAI1W,UAAU,mBAAd,WAQD,yBAAKA,UAAU,gCACbyS,GAEAA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAC+D,EAAOgQ,GAC3C,OACC,yBAAK/U,UAAU,sCACd,yBACCA,UAAU,kDACVmM,QAAS,kBAAMoM,EAAgBxT,EAAMjD,MAErC,yBAAKwF,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGnC,0BACCiH,QAAS,kBAlHM,SAACrK,GAE3B,IAAMuc,EAAY5L,GAAYA,EAASsB,QAAO,SAAAhP,GAC7C,OAAOA,EAAMjD,KAAOA,KAGrBuQ,EAAYgM,GA4GcvE,CAAmB/U,EAAMjD,KACxC9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,QAIA0B,IAAiBvT,EAAMjD,KAInBwW,GAA0B,IAAVvD,IAHpB,0BAAM/U,UAAU,4CACf,kBAAC6W,GAAA,EAAD,WAcN,kBAAC,KAAD,CACC5T,MAAO,iBAEP,yBACCkJ,QAAS,WACRkM,GAAgB,IAEjBrY,UAAU,4CAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACf,kBAAC2Z,GAAA,EAAD,WAcL,kBAAC,GAAD,CACCvH,WAAYiG,EACZlG,QAASiG,EACT/F,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SCpTvBhI,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAe9DmL,GAAwB,SAAC9D,GAChCC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAmJ/B6O,GAlIG,SAAC,GAAuE,IAArEzc,EAAoE,EAApEA,SAAUuQ,EAA0D,EAA1DA,WAAYD,EAA8C,EAA9CA,QAASwF,EAAqC,EAArCA,UAAWD,EAA0B,EAA1BA,aAA0B,EACrCrN,EAAe,GAAI,eADkB,mBACjFwU,EADiF,KAC/DhH,EAD+D,KAGlF7M,EAAY,uCAAG,WAAOC,EAAcC,GAArB,qBAAAhB,EAAA,sEACU2N,EAAuB,CACrDjX,WAAY,CACXE,aAAc,CACZgB,GAAImJ,EAAOnJ,KAGd4G,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkC,YAAagJ,EAAOhJ,eATD,QACbsX,EADa,SAe8B,OAA1BA,EAAejV,QAhDRyN,OAiD9BD,EAhDFE,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAmDnCsF,EAJgB,WACvB,OAAO4C,EAAU3W,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQM,EAASC,IAGxCqX,GAGRzD,EAAcnV,OAAOoV,OAAO,GAAIgC,EAAU5C,GAA5BxU,OAAA,IAAAA,CAAA,GAAyCgZ,IACvDF,EAX8C,uBAWxB1B,EAAUrW,MAAM,EAAGyT,IAXK,CAWGW,GAXH,aAWmBiC,EAAUrW,MAAMyT,EAAQ,KAC/F2C,EAAa2B,IAIfxD,KAGC3K,EAAQC,eAAc,GACtBiH,GAAW,GAnCO,iCAjCU,IAACL,IAiCX,OAAH,wDA0CZ0H,EAAe,SAACvN,GACfkG,GAAW,IAKVhH,EAA4B,SAACH,EAAOI,GAC3C,OAAIJ,EAAOlL,OAASsL,GAMrB,OACC,kBAAC,IAAD,CACAC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP/I,KAGL,gBACC4J,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAalB,EAAakB,IAChC+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACfxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgBkT,EAAiB5V,MAAjB,WAElBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgBkT,EAAiB5V,MAAjB,WACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,WAGjB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACtC0J,GAAgBkT,EAAiB5V,MAAjB,kBAElBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgBkT,EAAiB5V,MAAjB,kBACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,wBCxIhBvB,GAAmBC,MAAaC,MAAM,CACxCzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAKnEoH,GAA0B,SAACC,GAC7BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,gBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BAK7CoG,GAAwB,SAAC9D,GAC3BC,KAAa/I,MAAM,CACf8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAK7C7E,GAAgB,CAClB7K,KAAM,GACNkC,YAAa,GACb8C,MAAO,GACPpE,IAAK,GACLyB,MAAO,IAocIgV,GAvbK,SAAC,GAAwG,IAAtGG,EAAqG,EAArGA,sBAAuBC,EAA8E,EAA9EA,yBAA0BC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UAAuB,EAErEtN,EAAe,GAAI,eAFkD,mBAEjHuN,EAFiH,KAE/FC,EAF+F,OAGrExN,EAAe,GAAI,eAHkD,mBAGjHyN,EAHiH,KAG/FC,EAH+F,OAIzC1N,EAAe,GAAI,6BAJsB,mBAIjF2N,GAJiF,aAK7C3N,EAAe,GAAI,2BAL0B,mBAKnF4N,GALmF,aAMrC5N,EAAe,GAAI,+BANkB,gCAOzCA,EAAe,GAAI,8BAPsB,mBAOjF6N,GAPiF,aAQzC7N,EAAe,GAAI,6BARsB,mBAQjF8N,GARiF,aAWxFrL,oBAAS,GAX+E,mBAWjH2F,EAXiH,KAWvGJ,EAXuG,OAYhFvF,oBAAS,GAZuE,mBAYjHsL,EAZiH,KAYnGC,EAZmG,OAahFvL,mBAAS,IAbuE,mBAajHwL,EAbiH,KAanGC,EAbmG,OAc1EzL,mBAAS,IAdiE,mBAcjH0L,EAdiH,KAchGC,EAdgG,KAkBxHzO,qBAAU,WAENpF,QAAQC,IAAI,gBAAiB4S,GACT,uCAAG,sBAAAvN,EAAA,sEACb6N,EAAuB,CACzBnX,WAAY,CACRE,aAAc,CACVgB,GAAI2V,EAAc3V,OAJX,2CAAH,oDAUpB8W,KAED,CAACnB,IAGJzN,qBAAU,WACN,GAAI8N,EAAiBvO,MAAQhJ,OAAOC,KAAKsX,GAAkBrX,OAAS,EAAG,CAEnE,IAAMiH,EAASoQ,EAAiBnW,KAAKoD,MACjC2C,GAAUA,EAAOjH,OAAS,IAC1B4R,EAAY3K,GACZ+Q,EAAmB/Q,IAGnBoQ,EAAiBnW,KAAKS,OAAS0V,EAAiBnW,KAAKS,MAAtB,KAE/BiQ,EAAY,CAACyF,EAAiBnW,KAAKS,OAAxB,oBAAkCsF,KAC7C9C,QAAQC,IAAI,SAAZ,CAAuBiT,EAAiBnW,KAAKS,OAA7C,oBAAuDsF,KACvD6Q,EAAgBT,EAAiBnW,KAAKS,MAAtB,QAIzB,CAAC0V,IAGJ9N,qBAAU,WACNpF,QAAQC,IAAI,WAAY4N,GAEpBA,GAAYA,EAAS,IAAMA,EAAShS,OAAS,IAC7CmE,QAAQC,IAAI,YAAa4N,GAErB6F,IAAiB7F,EAAS,GAAG3Q,KAC7ByW,EAAgB9F,EAAS,GAAG3Q,IAC5B+W,GAAyBpG,EAAS,QAK3C,CAACA,IAGJ,IAAMqG,EAAuB,uCAAG,WAAMhX,GAAN,SAAAoI,EAAA,sEACtBgO,EAAqC,CACvCtX,WAAY,CACRE,aAAc,CACViY,QAASjX,EACTkX,WAAY,QACZC,OAAQxB,EAAc3V,OANN,2CAAH,sDAmBvB+W,GAAwB,uCAAG,WAAM9T,GAAN,uBAAAmF,EAAA,sEAEFiO,EAAqC,CAC5DvX,WAAY,CACRE,aAAc,CACViY,QAAShU,EAAMjD,GACfkX,WAAY,QACZC,OAAQxB,EAAc3V,OAPL,OAEvBoX,EAFuB,OAY7BtU,QAAQC,IAAI,eAAgBqU,GAGxBA,GAAwC,OAAxBA,EAAa5U,QAC7BwN,GAAwB,uBAKlBiD,EAJkB,WACpB,OAAO4C,EAAU3W,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQkW,EAAc3V,IAGlDqX,IAERC,EAAWzB,EAAUvC,MAAK,SAAArP,GAAI,OAAIA,EAAKjE,KAAO2V,EAAc3V,SAG9D8C,QAAQC,IAAI,aAAcuU,EAAU,UAAWrU,GAEzC2Q,EAAcnV,OAAOoV,OAAO,GAAIgC,EAAU5C,GAA5BxU,OAAA,IAAAA,CAAA,GAAyC6Y,EAAzC,CAAmDhX,MAAO2C,EAAM3C,SAC9EiX,EAJI,uBAIkB1B,EAAUrW,MAAM,EAAGyT,IAJrC,CAI6CW,GAJ7C,aAI6DiC,EAAUrW,MAAMyT,EAAQ,KAC/F2C,EAAa2B,KAKjBxD,GAAsB,mDAnCG,2CAAH,sDA0C9BjR,QAAQC,IAAI,mBAAoBiT,GAEhC,IAAM9M,GAAY,uCAAG,WAAOC,EAAaC,GAApB,uBAAAhB,EAAA,yDAEjBtF,QAAQC,IAAI,oBAAqB4N,KAE7BqF,GAAoBA,EAAiBvO,MAAQhJ,OAAOC,KAAKsX,EAAiBnW,MAAMlB,OAAS,GAJ5E,uBAMPiH,EAAS+K,GAAYA,EAAShS,OAAS,EAAIgS,EAASzR,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAM,IAEtE,IAAM4F,EAAOjH,OAAS,GARpB,gCASHuX,EAAqC,CACvCpX,WAAY,CACRE,aAAc,CACVkY,WAAY,QACZC,OAAQxB,EAAc3V,KAG9B4G,KAAM,CACF3D,MAAO2C,KAjBN,mCAqBJA,EAAO,IAAMA,EAAOjH,OAAS,GArBzB,kCAsBHwX,EAAmC,CACrCrX,WAAY,CACRE,aAAc,CACViY,QAASrR,EAAO,GAAG5F,GACnBkX,WAAY,QACZC,OAAQxB,EAAc3V,OA3BzB,yBAqCY+V,EAAuB,CAChDjX,WAAY,CACRE,aAAc,CACVgB,GAAI2V,EAAc3V,KAG1B4G,KAAM,CACF3I,KAAMkL,EAAOlL,KAAKuZ,OAClBrX,YAAagJ,EAAOhJ,eA7CX,SAqCXsX,EArCW,SAkD+B,OAA1BA,EAAejV,QACjCwN,KACA0F,GAAyB,GAOnBzC,EAJkB,WACpB,OAAO4C,EAAU3W,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQkW,EAAc3V,IAGlDqX,GAERzD,EAAcnV,OAAOoV,OAAO,GAAIgC,EAAU5C,GAA5BxU,OAAA,IAAAA,CAAA,GAAyCgZ,IAC7D3U,QAAQC,IAAI,kBAAmB6Q,GAEzB2D,EAd4C,uBActB1B,EAAUrW,MAAM,EAAGyT,IAdG,CAcKW,GAdL,aAcqBiC,EAAUrW,MAAMyT,EAAQ,KAE/F2C,EAAa2B,GAGbnO,EAAQsO,aAIR3D,KAGJ3K,EAAQC,eAAc,GA5EL,4CAAH,wDAsFZsO,GAAe,SAACvN,GAClBsL,GAAyB,IAIvBpM,GAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOlL,OAASsL,GAsBzB,OAFAzG,QAAQC,IAAI,WAAY4N,GAGpB,kBAAC,IAAD,CACInH,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACc6M,KAG1B,gBACGhM,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI3L,MAAO,CACH2V,IAAK,QAET9S,MAAM,mBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,GACVtD,OAAO,SACPyD,cAAe,CACXxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,GAA0BH,EAAQI,KAGhD,kBAAClM,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC3B4L,GAAgBiM,EAAiB3O,MAAjB,WAEtBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgBiM,EAAiB3O,MAAjB,WACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACI4F,KAAM,EACNlS,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cAClC0J,GAAgBiM,EAAiB3O,MAAjB,kBAEtBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACtC0J,GAAgBiM,EAAiB3O,MAAjB,kBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,kBAIxB,yBACIzL,MAAO,CACHsP,UAAW,UAKnB,yBAAK1P,UAAU,gCAEXI,MAAO,CACHsW,aAAc,SAGlB,wBAAI1W,UAAU,mBAAd,WAQJ,yBAAKA,UAAU,gCACV8X,EAAiBxO,WACd,yBAAKlJ,MAAO,CACR4P,QAAS,WAET,kBAAC,KAAD,OAGP8H,EAAiBvO,MACd,oCACKkJ,GAEGA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAC+D,EAAOgQ,GACxC,OACI,yBAAK/U,UAAU,sCACX,yBACIA,UAAU,kDACVmM,QAAS,WACLoM,EAAgBxT,EAAMjD,IACtB+W,GAAyB9T,KAG7B,yBAAKuC,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGtC,0BACIiH,QAAS,YAhItC,SAACrK,GAExB,IAAMuc,EAAY5L,GAAYA,EAASsB,QAAO,SAAAhP,GAC1C,OAAOA,EAAMjD,KAAOA,KAGxBuQ,EAAYgM,GA2H4CvE,CAAmB/U,EAAMjD,IACzBgX,EAAwB/T,EAAMjD,KAIlC9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,QAIH0B,IAAiBvT,EAAMjD,KAInBwW,GAA0B,IAAVvD,IAHjB,0BAAM/U,UAAU,4CACZ,kBAAC6W,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI5T,MAAO,iBAEP,yBACIkJ,QAAS,WACLkM,GAAgB,IAEpBrY,UAAU,4CAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACZ,kBAAC2Z,GAAA,EAAD,YAY5B,kBAAC,GAAD,CACIvH,WAAYiG,EACZlG,QAASiG,EACT/F,YAAaA,EACbI,SAAUA,EACV+F,gBAAiBA,EACjBC,mBAAoBA,EACpBnG,sBAAsB,SCje1C0H,GAAWC,KAAXD,OACAE,GAAW/a,IAAX+a,OA8BFE,GAAU,SAAC,GAAuC,IAAtCzY,EAAqC,EAArCA,KAAK+V,EAAgC,EAAhCA,aAAgC,EACtB5K,oBAAS,GADa,mBAC5CqF,EAD4C,KACpCC,EADoC,OAEMtF,oBAAS,GAFf,mBAE5CwN,EAF4C,KAEtBC,EAFsB,OAGAlQ,EAAe,GAAI,eAHnB,mBAG1ByU,GAH0B,aAIAhS,oBAAS,GAJT,mBAI5CiS,EAJ4C,KAIzBC,EAJyB,KAQ3CC,EAAiB,uCAAG,WAAOnd,GAAP,iBAAAoI,EAAA,sEACK4U,EAAuB,CAClDle,WAAY,CACVE,aAAc,CACZgB,SAJkB,QAClBod,EADkB,SAUmB,OAA1BA,EAAe5a,SA7CPyN,EA8CJ,gBA7C5BC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BA2CnC0P,EAAgBxd,EAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACtD4V,EAAayH,IAbc,iCAnCA,IAACpN,IAmCD,OAAH,sDAkBzB,OACI,oCACA,kBAAC,KAAD,CAMAsE,KAAK,QAELyE,WAAYnZ,GAER,kBAAC,GAAD,CACFsB,MAAM,GACL8X,UAAU,QACT/Y,IAAI,KACJiL,MAAO,OAERjN,UAAU,uBAEVgb,OAAQ,SAAC5Y,EAAO6Y,GAAR,OACP,oCACE,yBACE9O,QAAS,WACP6S,GAAsB,GACtBzE,EAAyBU,IAE3B3T,IAAKlF,EAAO8C,IAAI,YAAY9E,MAAO,CACjCqO,OAAQ,OACRxB,MAAO,OACPiO,UAAW,UACX7a,aAAc,MACduP,OAAQ,iBAShB,kBAAC,GAAD,CACC3M,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,uBACVgb,OAAQ,SAACnY,EAAMoY,GAAP,OACP,oCAEE,wBACE9O,QAAS,WACP6S,GAAsB,GACtBzE,EAAyBU,IAE3B7a,MAAO,CACLiQ,WAAY,IACZZ,MAAO,OACPG,OAAQ,YAGT/M,OAQjB,kBAAC,GAAD,CACWI,MAAM,cACN8X,UAAU,cACV/Y,IAAI,KACJhC,UAAU,yBA6Bb,kBAAC,GAAD,CAEAA,UAAU,uBACRiD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UACR,uBAAGnG,KAAK,MACT,kBAAC,KAAD,CAASJ,UAAU,MAAM7M,MAAM,oBAChC,0BAAMjD,UAAU,WAAWmM,QAAS,WAClCiG,GAAW,GACXmI,EAAyBU,KAE3B,kBAACG,GAAA,EAAD,SAQC,kBAAC,KAAD,CAEAnE,UAAW,kBAAMgI,EAAkBhE,EAAOnZ,KAC1CmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAElD,0BACElX,UAAU,4BAEV,kBAAC8W,GAAA,EAAD,aAWP,kBAACsI,GAAD,CACEzH,UAAWhW,EACX+V,aAAcA,EACdH,sBAAuBwH,EACvBvH,yBAA0BwH,EAC1BvH,cAAe6C,IAOlBA,GAA2B,kBAAC,GAAD,CAC5B3C,UAAWhW,EACX+V,aAAcA,EACdtF,WAAYA,EACZD,QAASA,EACTtQ,SAAUyY,MAkIC1N,gBAtHM,SAAC,GAAqB,EAApBkC,QAAqB,IAAD,EAGRhC,mBAAS,IAHD,mBAGlC6K,EAHkC,KAGxBD,EAHwB,OAMErN,EAAe,GAAI,aANrB,mBAMlCgV,EANkC,KAMtBC,EANsB,KASzCtV,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACKoV,EAAqB,IAD1B,OACVC,EADU,OAGhB7H,EAAa6H,GAHG,2CAAH,qDAKfC,KACC,IAhBuC,MAoBgB1S,oBAAS,GApBzB,mBAoBlCyK,EApBkC,KAoBZC,EApBY,KA+C1C,OACC,oCAIE,yBAAKxX,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,aAKA,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,qBACZC,SAAU,SAAAtc,GAAK,OAjCF,SAACA,GACpB,GAAG4f,EAAW1d,KAAKlB,OAAS,EAAG,CAC7B,IAAM0e,EAAeE,EAAW1d,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKic,cAAc9a,SAASzB,EAAMuc,kBAC3FtE,EAAayH,IA8BUlD,CAAaxc,OAI9B,kBAAC,IAAD,CAEFO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAMqL,GAAyB,KAJtC,YAWA,yBAAKxX,UAAU,uCAWxB,yBAAKA,UAAU,uCACTqf,EAAW9V,MAAQoO,EAAUlX,OAAS,GAAK,kBAAC,GAAD,CAC1CiX,aAAcA,EAChB/V,KAAMgW,IACL0H,EAAW/V,WAAa,kBAAC4S,GAAD,MACxBmD,EAAW9V,QAAUoO,EAAUlX,OAAS,IAC9C,yBAAKL,MAAO,CACXsP,UAAW,UAEX,kBAAC,KAAD,CAAOzN,YAAY,qBAAsB8C,MAAOyJ,KAAMK,4BAMtD,kBAAC,GAAD,CACM0I,sBAAuBA,EACvBC,yBAA0BA,EAC1BE,aAAcA,EACdC,UAAWA,Q,8BCtSN8H,GA/Ca,SAAC,GAAmE,IAAjE9f,EAAgE,EAAhEA,SAAUJ,EAAsD,EAAtDA,MAAOmgB,EAA+C,EAA/CA,SAAU5D,EAAqC,EAArCA,YAAalY,EAAwB,EAAxBA,KAAMW,EAAkB,EAAlBA,KAOzE,OACI,oCACI,wBAAIvE,UAAU,mBAAmBT,GAEhCmgB,EAAW,kBAAC,KAAD,eACRxX,OAAO,sBACPlI,UAAU,iBACV8b,YAAaA,EACb1b,MAAO,CACH6M,MAAO,OACP0S,YAAa,QAIjBhgB,SAAUA,GACL4E,GAAQ,CACT7E,aAAckgB,KAAOrb,MAIrB,kBAAC,KAAD,eAEIuX,YAAaA,EACb9b,UAAU,iBACVI,MAAO,CACH6M,MAAO,OACP0S,YAAa,QAEjBhgB,SAAUA,GACLiE,GAAQ,CACTlE,aAAckgB,KAAOhc,QAezBic,KAAhBC,Y,cC5DFhO,GAA0B,SAACC,GAC7BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,UACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BAO7CoG,GAAwB,SAAC9D,GAC3BC,KAAa/I,MAAM,CACf8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACqZ,GAAA,EAAD,CAA2B3f,MAAO,CAAEqP,MAAO,yB,UCJjDuQ,GAAiBC,KAAjBD,aACA9F,GAAW/a,IAAX+a,OAgOOgG,GAvNF,SAAC,GAKA,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,aAEW,EACmBvT,mBAAS,IAD5B,mBACJ7E,EADI,KACKqY,EADL,OAEkCxT,mBAAS,IAF3C,gCAG4BzC,EAAe,GAAI,YAH/C,mBAGJkW,EAHI,KAGMC,EAHN,OAI2B1T,mBAAS,IAJpC,mBAIJ2T,EAJI,KAISC,EAJT,KAyBX1W,qBAAU,WACR,GAAIuW,EAAShX,MAAQgX,EAAS5e,KAAKlB,OAAS,GAAK4f,EAAa5f,OAAS,EAAG,CACxE,IAAMkgB,EAAsBN,EAAarf,KAAI,SAAC+E,GAC5C,IAAM6a,EAAmBL,EAAS5e,KAAKyT,MACrC,SAAC7O,GAAD,OAASA,EAAIzE,KAAOiE,KAEtB,GAAI6a,EACF,OAAOA,EAAiB7gB,QAG5BqgB,EAAgBO,MAEjB,CAACJ,IAGJ3b,QAAQC,IAAI,eAAgBwb,GAC5Bzb,QAAQC,IAAI,UAAWoD,GAGvB+B,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACWsW,EAAmB,CAC1C5f,WAAY,CACVC,OAAQ,CACN4a,eAAe,MAJP,QACRoF,EADQ,SAUIA,EAAWpgB,OAAS,IAE9BqgB,EAAaD,EAAW7f,KAAI,SAAC0D,GACjC,OAAOA,EAAI3E,QAEbugB,EAAWQ,IAfC,2CAAH,qDAoBbC,KACC,IA+CH,OACE,oCAEGR,EAASjX,WACR,yBAAKlJ,MAAO,CACV4P,QAAS,SACT/C,MAAO,OACPwB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAKH2R,EAAShX,QAAUgX,EAAS5e,KAAKlB,OAAS,IACzC,yBAAKL,MAAO,CACV6M,MAAO,OACPwB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAO3L,MAAM,eAAewL,OAAQ,OAoBvC8R,EAAShX,MAAQgX,EAAS5e,KAAKlB,OAAS,GAAKwH,EAAQxH,OAAS,GAC7D,oCACE,yBAAKT,UAAU,8CACb,kBAAC,GAAD,CACEiN,MAAO,MACP7M,MAAO,CACLqO,OAAQ,OACRpO,aAAc,iBACdsf,YAAa,mBAEftJ,KAAK,SACLyF,YAAY,WACZC,SAAU,SAACtc,GAAD,OAAWmF,QAAQC,IAAIpF,IACjCE,SAlFW,SAACuM,GAGtB,GAFAwU,EAAexU,EAAE3E,OAAO9H,OAED,KAAnByM,EAAE3E,OAAO9H,OACX,GAAI8gB,EAAS5e,MAAQ4e,EAAS5e,KAAKlB,OAAS,EAAG,CAE7C,IAAMugB,EAAgBT,EAAS5e,KAAKX,KAAI,SAACuF,GAAD,OAASA,EAAIxG,QACrDugB,EAAWU,QAER,CACL,IAAMC,EACJhZ,EAAQxH,OAAS,EACbwH,EAAQ8L,QAAO,SAACmK,GAChB,OAAOA,EAAOlC,cAAc9a,SAASuf,EAAYzE,kBAEjD,GAENsE,EAAWW,QAqENhZ,EAAQjH,KAAI,SAAA0D,GAAG,OACd,oCACE,kBAACsb,GAAD,CACEhe,IAAK0C,EACLyY,QAASkD,EAAa9e,QAAQmD,IAAQ,EACtC/E,SAAU,SAAAwd,GAAO,OA7KV,SAACzY,EAAKyY,GACzB,IAAM+D,EAAmB/D,EAAO,uBAAOkD,GAAP,CAAqB3b,IAAO2b,EAAatM,QAAO,SAAAoN,GAAC,OAAIA,IAAMzc,KAG3F,GAFA0b,EAAgBc,GAEZX,EAAShX,MAAQgX,EAAS5e,KAAKlB,OAAS,GAAKygB,EAAiBzgB,OAAS,EAAG,CAC5E,IAAMkgB,EAAsBO,EAAiBlgB,KAAI,SAAC+E,GAChD,IAAM6a,EAAmBL,EAAS5e,KAAKyT,MACrC,SAAC7O,GAAD,OAASA,EAAIxG,KAAKic,gBAAkBjW,EAAKiW,iBAE3C,GAAI4E,EACF,OAAOA,EAAiB9e,MAG5Bqe,EAAUQ,IAgKqBlV,CAAa/G,EAAKyY,KAEtCzY,UCjMT4S,GAAWD,KAAXC,OA4HO8J,GA1HA,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,QAAyC,KAAhCC,mBACRzU,mBAAS,KAD+B,mBAC/D7E,EAD+D,KACtDqY,EADsD,OAExBxT,mBAAS,IAFe,mBAE9C0U,GAF8C,aAG7BnX,EAAe,GAAI,aAHU,mBAG/DgV,EAH+D,KAGnDmB,EAHmD,KA2CtE,OApBAxW,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACUsW,EAAmB,IAD7B,QACXiB,EADW,SAIGA,EAAahhB,OAAS,IAEnCihB,EAAeD,EAAazgB,KAAI,SAACwD,GACtC,MAAO,CACN/E,MAAO+E,EAAM1C,GACb/B,KAAMyE,EAAMzE,SAGdugB,EAAWoB,IAZK,2CAAH,qDAgBflC,KACE,IAGF,oCAEC,8BAECH,EAAW/V,WACX,yBAAKlJ,MAAO,CACX4P,QAAS,SACT/C,MAAO,OACPwB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMDyQ,EAAW9V,QAAU8V,EAAW1d,KAAKlB,OAAS,IAC9C,yBAAKL,MAAO,CACX6M,MAAO,OACPwB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAO3L,MAAM,qBAAqBwL,OAAQ,OAK3C4Q,EAAW9V,MAAQ8V,EAAW1d,KAAKlB,OAAS,GAAKwH,EAAQxH,OAAS,GAElE,kBAAC,KAAD,CACCqd,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAAS5M,aAAc,OACvCyb,YAAY,iBACZiC,iBAAiB,WACjBpe,SA9EJ,SAAkBF,GACjB+hB,EAAmB/hB,GACnB4hB,EAAW5hB,IA6ERkiB,QArEJ,aAsEIC,OA1EJ,aA2EI7F,SAnEJ,SAAkB8F,KAoEdniB,aAAc4hB,EAEdtD,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9FqD,EAAW9V,MACX8V,EAAW1d,KAAKlB,OAAS,GACzBwH,EAAQjH,KAAI,SAACkd,GACZ,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,Y,UCvG3Cma,GAAW/a,IAAX+a,OAuJO4H,GA5II,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,eAAgBC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,mBAAgC,EACxDnV,mBAAS,IAD+C,mBAC/E7E,EAD+E,KACtEqY,EADsE,OAEhDxT,mBAAS,IAFuC,mBAE/E2T,EAF+E,KAElEC,EAFkE,OAIrCrW,EAAe,GAAI,qBAJkB,mBAI/EkR,EAJ+E,KAIhEC,EAJgE,KAMtFxR,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACSsR,EAAwB,IADjC,QACf0G,EADe,SAIEA,EAAgBzhB,OAAS,GAE/C6f,EAAW4B,GANS,2CAAH,qDAUnBtG,KACE,IAsCH,OAJAhX,QAAQC,IAAI,gBAAiB0W,GAC7B3W,QAAQC,IAAI,aAAcoD,GAIzB,yBAAKjI,UAAU,oCAEbub,EAAcjS,WACd,yBAAKlJ,MAAO,CACX4P,QAAS,SACT/C,MAAO,OACPwB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAKD2M,EAAchS,QAAUgS,EAAc5Z,KAAKlB,OAAS,IACpD,yBAAKL,MAAO,CACX6M,MAAO,OACPwB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAO3L,MAAM,oBAAoBwL,OAAQ,OAI1C8M,EAAchS,MAAQgS,EAAc5Z,KAAKlB,OAAS,GAAKwH,EAAQxH,OAAS,GACxE,oCACC,yBAAKT,UAAU,8CACd,kBAAC,GAAD,CACCiN,MAAO,OACP7M,MAAO,CACNqO,OAAQ,OACRpO,aAAc,iBACdsf,YAAa,mBAEdtJ,KAAK,SACLyF,YAAY,kBACZC,SAAU,SAACtc,GAAD,OAAWmF,QAAQC,IAAIpF,IACjCE,SAnEiB,SAACuM,GAGvB,GAFAwU,EAAexU,EAAE3E,OAAO9H,OAED,KAAnByM,EAAE3E,OAAO9H,OACZ,GAAI8b,EAAc5Z,MAAQ4Z,EAAc5Z,KAAKlB,OAAS,EAAG,CAExD,IAAMugB,EAAgBzF,EAAc5Z,KAAKX,KAAI,SAACuF,GAAD,OAASA,EAAIxG,QAC1DugB,EAAWU,QAEN,CACN,IAAMC,EACLhZ,EAAQxH,OAAS,EACdwH,EAAQ8L,QAAO,SAACmK,GACjB,OAAOA,EAAOlC,cAAc9a,SAASuf,EAAYzE,kBAEhD,GAEJsE,EAAWW,QAsDT,yBAAK7gB,MAAO,IAGV6H,EAAQxH,OAAS,GACjB,kBAAC,KAAD,CACC0hB,WAAS,EACTC,YAAaJ,EACbK,SAzFU,SAACC,EAAcC,KA0FzBC,QArFS,SAACJ,EAAaG,GAC7B,IAAME,EAAaL,EAAYjF,SAAW,GAC1C4E,EAAeU,GACfR,EAAmBQ,IAmFbC,SAAUza,EACV0a,kBAAkB,EAClBC,eAAe,Q,mBChGR1jB,GA3BF,SAAC,GAAgH,IAA9GK,EAA6G,EAA7GA,MAA2BE,GAAkF,EAAtGD,KAAsG,EAAhGE,aAAgG,EAAlFD,OAAOE,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,YAAcC,EAAgC,EAAhCA,KAAgC,IAA1BsW,YAA0B,MAArB,SAAqB,EACzH,OACI,oCACC9W,GAAS,wBAAIS,UAAU,yBACfT,GAGL,kBAAC,IAAKU,KAAN,CACAC,eAAgBL,EAAU,QAAU,GAEpCM,KAAML,GAGG,kBAAC,IAAD,CACAuW,KAAMA,EACPwM,YAAU,EACV9iB,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVK,UAAU,4BCqGf8iB,GAjIE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,iBAAkBC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAAgB,EAElBnW,mBAAS,IAFS,mBAE1DoW,EAF0D,KAExCC,EAFwC,KAG3DC,EAAoB1Z,EAAS,GAAI,GAAI,gBAAiB,IAHK,EAMvBoD,mBAAS,CAC/C/M,KAAMkjB,EAAUljB,KAChBN,MAAOwjB,EAAUxjB,QAR4C,mBAM1D4jB,EAN0D,KAM3CC,EAN2C,KAajEtZ,qBAAU,WACN,IAIM+K,EAHKiO,EAAchiB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQ0hB,EAAUnhB,IAK1D4T,EAAcnV,OAAOoV,OAAO,GAAIqN,EAAcjO,GAAhCxU,OAAA,IAAAA,CAAA,GAA6C8iB,IAC3DE,EAAmB,uBAAOP,EAAc1hB,MAAM,EAAGyT,IAA9B,CAAsCW,GAAtC,aAAsDsN,EAAc1hB,MAAMyT,EAAQ,KAC3GgO,EAAiBQ,KAElB,CAACF,IAWJrZ,qBAAU,WACN,GAAIoZ,EAAkBzhB,MAAQpB,OAAOC,KAAK4iB,EAAkBzhB,MAAMlB,OAAS,EAAG,CAC1E,IACM+iB,EADUjjB,OAAOC,KAAK4iB,EAAkBzhB,MACXX,KAAI,SAAAkd,GACnC,MAAO,CACHze,MAAOye,MAGfiF,EAAmBK,MAExB,CAACJ,EAAkBzhB,OAqCtB,OACI,oCAEI,yBACIK,IAAKihB,EAAUnhB,GACf9B,UAAU,wEACV,yBACImM,QA9Dc,WAE1B,IAAMoX,EAAsBP,EAAcjP,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOmhB,EAAUnhB,MAC/EihB,EAAiBQ,IA4DLvjB,UAAU,+EACV,kBAAC8W,GAAA,EAAD,OAGJ,wBAAI9W,UAAU,yBAAd,QAGA,kBAAC,KAAD,CACIP,MAAOwjB,EAAUljB,KACjBK,MAAO,CAAE6M,MAAO,QAChBhF,QAASib,EACTpH,YAAY,YACZnc,SAlDc,SAACF,GAEvB2jB,GAAqB7iB,OAAOC,KAAK4iB,EAAkBzhB,MAAMlB,OAAS,EAC9D2iB,EAAkBzhB,KAAKlC,IACvB6jB,EAAiB,eACVL,EADS,CAEZljB,KAAMN,EACNA,MAAO2jB,EAAkBzhB,KAAKlC,MAOtC6jB,EAAiB,eACVL,EADS,CAEZljB,KAAMN,MAmCFue,aAAc,SAACyF,EAAYC,GAAb,OACiE,IAA3EA,EAAgBjkB,MAAMkkB,cAAcpiB,QAAQkiB,EAAWE,kBAI9DV,EAAUljB,MACP,oCACI,yBAAKK,MAAO,CAAEsP,UAAW,UACzB,kBAACkU,GAAD,CACIrkB,MAAM,QACNE,MAAOwjB,EAAUxjB,MACjBM,KAAK,QACLJ,SAxCW,SAACuM,GAChCoX,EAAiB,eACVL,EADS,CAEZxjB,MAAOyM,EAAE3E,OAAO9H,gBCyJbokB,GAjOC,SAAC,GAEH,IADbC,EACY,EADZA,iBACY,EAEchX,mBAAS,CAClCiX,QAAS,GACTC,MAAO,KAJI,mBAELxgB,EAFK,KAEEygB,EAFF,OAMcnX,mBAAS,CAClCoX,UAAW,GACXC,QAAS,KARE,mBAMLC,EANK,KAMEC,EANF,OAY8BvX,mBAAS,IAZvC,mBAYLkW,EAZK,KAYUD,EAZV,KAcNuB,EAAoB,SAAApY,GACzB,IAAMnM,EAAOmM,EAAE3E,OAAOxH,KAChBN,EAAQyM,EAAE3E,OAAO9H,MAGvBwkB,EAAS,eACLzgB,EADI,gBAENzD,EAAON,MAIJ8kB,EAAoB,SAAArY,GACzB,IAAMnM,EAAOmM,EAAE3E,OAAOxH,KAChBN,EAAQyM,EAAE3E,OAAO9H,MAEvB4kB,EAAS,eACLD,EADI,gBAENrkB,EAAON,MAyEV,OACC,oCACC,yBAAKO,UAAU,oDAEd,yBAAKA,UAAU,yDAEd,yBAAKA,UAAU,yDACd,qCAGA,yBAAKA,UAAU,mEACd,yBAAKA,UAAU,wEACd,kBAAC4jB,GAAD,CACCrkB,MAAM,aACNE,MAAO+D,EAAMugB,QACbhkB,KAAK,UACLJ,SAAU2kB,KAGZ,yBAAKtkB,UAAU,yEACd,kBAAC4jB,GAAD,CACCvN,KAAK,QACL9W,MAAM,QACNE,MAAO+D,EAAMwgB,MACbjkB,KAAK,QACLJ,SAAU2kB,MAOb,yBAAKtkB,UAAU,yDACd,qCAGA,yBAAKA,UAAU,mEACd,yBAAKA,UAAU,wEACd,kBAAC4jB,GAAD,CACCrkB,MAAM,eACNE,MAAO2kB,EAAMF,UACbnkB,KAAK,YACLJ,SAAU4kB,KAKZ,yBAAKvkB,UAAU,yEAEd,kBAAC4jB,GAAD,CACCrkB,MAAM,UACNE,MAAO2kB,EAAMD,QACbpkB,KAAK,UACLJ,SAAU4kB,QAUf,yBAAKvkB,UAAU,0DACd,yBAAKA,UAAU,yDACd,0CAGA,yBAAKA,UAAU,mEAEbgjB,EAAchiB,KAAI,SAAAiiB,GAClB,OAAO,kBAACuB,GAAD,CACNvB,UAAWA,EACXD,cAAeA,EAAeD,iBAAkBA,OAElD,kBAAC,IAAD,CAAQ1M,KAAK,QACZlK,QA/FmB,WAC1B4W,EAAiB,GAAD,oBAAKC,GAAL,CAAoB,CACnCjjB,KAAM,GACNN,MAAO,GACPqC,GAAG,GAAD,OAAKkhB,EAAcviB,aA4FfL,MAAO,CACN6M,MAAO,QACPwX,UAAW,OACX/U,UAAW,MACXrP,aAAc,OACZb,KAAK,SAASkH,KAAM,kBAACiT,GAAA,EAAD,OAPxB,sBAyBL,kBAAC,IAAD,CAECvZ,MAAO,CACNuP,WAAY,QAEbxD,QA7KuB,SAACD,GAG1B,GAFAA,EAAEwY,iBAEE1B,EAAcviB,OAAS,EAAG,CAC7B,IAAMwiB,EAAY,GADW,uBAG7B,YAAiBD,EAAjB,+CAAgC,CAAC,IAAxBjd,EAAuB,QAE/BnB,QAAQC,IAAI,kBAAmBkB,GAC3BA,EAAI,OAAaA,EAAI,OACxBkd,EAAUld,EAAI,MAAYA,EAAI,QAPH,kFAY7B,IAAM4e,EAAY,CACjBnhB,MAAOA,EACP4gB,MAAOA,EACPnB,UAAWA,GAIZgB,EAAS,CACRF,QAAS,GACTC,MAAO,KAERK,EAAS,CAAEH,UAAW,GAAIC,QAAS,KACnCL,EAAiBa,GACjB5B,EAAiB,QAEb,CACJ,IAAM4B,EAAY,CACjBnhB,MAAOA,EACP4gB,MAAOA,EACPnB,UAAW,IAGZgB,EAAS,CACRF,QAAS,GACTC,MAAO,KAERK,EAAS,CAAEH,UAAW,GAAIC,QAAS,KACnCpB,EAAiB,IACjBe,EAAiBa,KAmIhB/kB,UAnHG4D,EAAMugB,UAAYK,EAAMF,UAoH3BlkB,UAAU,gBACV0G,KAAM,kBAACmQ,GAAA,EAAD,OARP,oBCtLKjF,GAAYC,KAAZD,QAEFtH,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAIhEE,GAAgB,CACrB7K,KAAM,GACNkC,YAAa,GACb2iB,MAAO,GACPjhB,KAAM,GACNogB,QAAS,GACTC,MAAO,GACPE,UAAW,GACXC,QAAS,GACTpf,MAAO,GACPpE,IAAK,GACLyB,MAAO,GACP0B,QAAS,GACTD,MAAO,GACPD,KAAM,GACNW,KAAM,GACNsgB,cAAe,MA4sBDC,GAjsBO,SAAC,GAA6F,IAA3FvN,EAA0F,EAA1FA,sBAAuBC,EAAmE,EAAnEA,yBAA0BuN,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,eAA4B,EAEjE3a,EAAe,GAAI,cAF8C,mBAE3G4a,EAF2G,KAE1FC,EAF0F,OAGpFpY,oBAAS,GAH2E,mBAG3GqF,EAH2G,KAGlGC,EAHkG,OAIlFtF,oBAAS,GAJyE,mBAI3G2F,EAJ2G,KAIjGJ,EAJiG,OAKlEvF,oBAAS,GALyD,mBAKzFyF,GALyF,aAMpDzF,oBAAS,GAN2C,mBAM3G0F,EAN2G,KAMlFgK,EANkF,OAO1D1P,oBAAS,GAPiD,mBAO3GwF,EAP2G,KAOrFmK,EAPqF,OAQ5E3P,mBAAS,IARmE,mBAQ3GqY,EAR2G,KAQ9FpD,EAR8F,OAStFjV,mBAAS,IAT6E,mBAS3GsY,EAT2G,KASnGjF,EATmG,OAUpFrT,mBAAS,IAV2E,mBAU3GwU,EAV2G,KAUlGD,EAVkG,OAWpFvU,mBAAS,IAX2E,mBAW3GhJ,EAX2G,KAWlGuhB,EAXkG,OAY1EvY,mBAAS,IAZiE,oBAY3GwL,GAZ2G,MAY7FC,GAZ6F,SAapEzL,mBAAS,IAb2D,qBAa3GkV,GAb2G,MAa1FC,GAb0F,SAc1EnV,mBAAS,IAdiE,qBAc3GuT,GAd2G,MAc7FD,GAd6F,SAerFtT,mBAAS,IAf4E,qBAe3GlJ,GAf2G,MAerG0hB,GAfqG,SAgBrFxY,mBAAS,IAhB4E,qBAgB3GvI,GAhB2G,MAgBrGghB,GAhBqG,MAuB5Gva,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,6DAEd8S,EAAYvK,EAAWA,EAASzR,KAAI,SAAA+D,GACzC,OAAOA,EAAMjD,MACT,GAJe,SAMQojB,EAAsB,CAEjDxc,KAAM,CACL3I,KAAMkL,EAAOlL,KAAKuZ,OAClBrX,YAAagJ,EAAOhJ,YACpB2iB,MAAO3Z,EAAO2Z,MACdjhB,KAAMsH,EAAOtH,KACb9B,SAAUsjB,EACV1gB,KAAM2gB,EACN5gB,MAAO8c,EACPvc,MAAOiY,EACP5a,MAAOkW,IAAgB0E,EAAU,GAAKA,EAAU,GAAK,GACrDlZ,QAASA,EACTF,KAAMA,GACNW,KAAMA,GACNV,MAAOoH,EAAOpH,MACdghB,cAAe5Z,EAAO4Z,iBAtBJ,QAMdW,EANc,SA4B0B,OAAzBA,EAAclhB,SAClCwN,GAAwB,mBAExBkT,EAAe,GAAD,oBAAKD,GAAL,cACbjjB,GAAI0jB,EAAa,IAAU,GAC3BxjB,IAAKwjB,EAAa,IAAU,GAC5BzlB,KAAMylB,EAAa,MAAY,GAC/BvjB,YAAaujB,EAAa,aAAmB,IAE1CA,MAEJhO,GAAyB,GAEzBnF,EAAY,IACZkG,GAAgB,IAChB8M,EAAW,IACXlF,EAAU,IACVC,GAAgB,IAChBiB,EAAW,IACXU,EAAe,IACfE,GAAmB,IACnB/W,EAAQsO,aAMTtO,EAAQC,eAAc,GAvDF,2CAAH,wDA8DlBnB,qBAAU,WACT,IAAKib,EAAe,UAAe,CAClC,IAAMhc,EAAQgc,EAAe,MAC7B,GAAIhc,EAAK,SAAe1I,OAAOC,KAAKyI,EAAK,OAAWxI,OAAS,GAI3DF,OAAO0K,OAAOhC,EAAK,OAAWxI,OAAS,EACpCF,OAAO0K,OAAOhC,EAAK,OACnB,IACGoL,SAAQ,SAACoR,EAAKC,GACpB,GAAmB,kBAARD,EACV5P,GAAsB4P,QAElB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOllB,OAAOC,KAAKilB,GAAKhlB,OAAS,EACvBF,OAAO0K,OAAOwa,GACtBpR,SAAQ,SAAAoR,GACZ5P,GAAsB4P,aAQ1B,CAACR,IAGJ,IAAMxL,GAAe,SAACvN,GACrBsL,GAAyB,IAIpBpM,GAA4B,SAACH,EAAQI,GAC1C,QAAKJ,EAAOlL,MAAU+D,EAAQrD,OAAS,GAAO4K,IAqCzCyY,GAAmB,SAACa,GAEzBU,EAAW,CAAC,eACRV,EADM,CAET7iB,GAAIgC,EAAQrD,UAFH,oBAGJqD,KACNiO,KAAQwQ,KAAK,0BAqBRoD,GAAmB,SAAC/hB,EAAMgiB,GAC/BN,GAAaM,IAIRC,GAAmB,SAACjiB,EAAMgiB,GAC/BL,GAAaK,IAMd,OACC,kBAAC,IAAD,CACCta,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC3L,MAAO,CACN2V,IAAK,QAGNG,UAAW,CACVjK,OAAQ,EACR+D,QAAS,GAEV/C,MAAO,OACPhK,MAAM,gBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,GACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,GAA0BH,EAAQI,KAK7C,6BAASrL,UAAU,2BAClB,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,iDAIA,yBAAKA,UAAWiL,EAAOlL,MAAQkL,EAAOlL,KAAKU,OAAS,EAAI,mBAAqB,aAC5E,kBAACwR,GAAA,EAAD,QAGF,yBAAKjS,UAAU,sCACd,kBAACb,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgBsZ,EAAgBhc,MAAhB,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgBsZ,EAAgBhc,MAAhB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,WAGlB,yBAAKzL,MAAO,CACXsO,QAAS,OACTC,eAAgB,kBAEhB,yBAAKvO,MAAO,CACX6M,MAAO,QAEP,kBAAC4S,GAAD,CACCtgB,MAAM,OACNI,SAAUgmB,MAGZ,yBAAKvlB,MAAO,CACX6M,MAAO,QAGP,kBAAC4S,GAAD,CACCjc,KAAMA,GACN8b,UAAU,EACV5D,YAAY,cACZvc,MAAM,OACNI,SAAUkmB,OAIb,yBAAKzlB,MAAO,CACXsW,aAAc,UAGf,kBAAC,GAAD,CACCjF,KAAM,EACNlS,MAAM,QACNE,MAAOwL,EAAOpH,MACd9D,KAAK,QACLF,QAAU+L,EAAQ/H,OAAS6H,EAAO7H,QAC/B8H,GAAgBsZ,EAAgBhc,MAAhB,YAEnBnJ,YAAc8L,EAAQ/H,OAAS6H,EAAO7H,QACnC8H,GAAgBsZ,EAAgBhc,MAAhB,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,YAMlB,kBAAC1M,EAAD,CACCI,MAAM,iBACNE,MAAOwL,EAAO4Z,cACdrlB,KAAK,SACLO,KAAK,gBACLF,QAAU+L,EAAQiZ,eAAiBnZ,EAAOmZ,gBACvClZ,GAAgBsZ,EAAgBhc,MAAhB,oBAEnBnJ,YAAc8L,EAAQiZ,eAAiBnZ,EAAOmZ,gBAC3ClZ,GAAgBsZ,EAAgBhc,MAAhB,oBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,oBAMlB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACrC0J,GAAgBsZ,EAAgBhc,MAAhB,kBAEnBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgBsZ,EAAgBhc,MAAhB,kBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,oBAyCpB,yBAAK7L,UAAU,kCACd,yBAAKA,UAAU,wCACd,6CAIA,yBAAKA,UAAW8D,GAAWA,EAAQrD,OAAS,EAAI,mBAAqB,aACpE,kBAACwR,GAAA,EAAD,QAKF,yBAAKjS,UAAU,sCAEd,kBAAC,KAAD,CACC8lB,UAAU,EACVC,YAAY,MACZvmB,KAAK,QAGL,kBAAC,GAAD,CAAS8W,IAAI,gBAAgBtU,IAAI,KAChC,kBAAC,GAAD,CAAS8hB,iBAAkBA,MAE5B,kBAAC,GAAD,CAASxN,IAAI,eAAetU,IAAI,KAC/B,yBAAKhC,UAAU,uDAEb8D,EAAQrD,OAAS,GAAKqD,EAAQ9C,KAAI,SAAA+E,GAClC,OACC,yBAAK/F,UAAU,4DACd,yBAAKA,UAAU,iEAId,0BAAMA,UAAU,IAAImM,QAAS,kBA5PlB,SAACrK,GAC5B,IAAMkkB,EAAaliB,EAAQiQ,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACtDujB,EAAWW,GACXjU,KAAQwQ,KAAK,2BAyPsC0D,CAAoBlgB,EAAKjE,MAC3D,kBAACgV,GAAA,EAAD,QAGF,yBAAK9W,UAAU,gEACd,6BACC,qCAGA,yBAAKA,UAAU,iEAGb+F,EAAKvC,MAAMwgB,MACX,oCACC,4BACEje,EAAKvC,MAAMwgB,OAFd,IAMF,wBAAI5jB,MAAO,CACP8lB,eAAgB,iBAGfngB,EAAKvC,MAAMugB,UAIb,4BACEhe,EAAKvC,MAAMugB,WAShBhe,EAAKqe,OACL,6BACC,kBAAC,KAAD,CACCjU,cAAe,IACfC,MAAOrK,EAAKqe,MAAMF,WAClB,sCAID,yBAAKlkB,UAAU,iEACd,6BACC,kCAEC,kBAAC,KAAD,CACCA,UAAU,qBACVmQ,cAAe,IACfC,MAAOrK,EAAKqe,MAAMD,eAcxBpe,EAAKkd,WACF1iB,OAAO0K,OAAOlF,EAAKkd,WAAWxiB,OAAS,GACzC,oCACC,0CAGA,yBAAKT,UAAU,iEACb+F,EAAKkd,WACF1iB,OAAOC,KAAKuF,EAAKkd,WAAWxiB,OAAS,GACrCF,OAAOC,KAAKuF,EAAKkd,WAAWjiB,KAAI,SAAAqiB,GAClC,OACC,6BACC,4BACEA,GAEF,4BACEtd,EAAKkd,UAAUI,gBAczBvf,EAAQrD,OAAS,IAAM,yBAAKL,MAAO,CACrC6M,MAAO,OACPyB,QAAS,OACTC,eAAgB,WAEhB,kBAAC,KAAD,CAAO1M,YAAY,mBAAmB8C,MAAOyJ,KAAMK,6BAOvD,yBAAK7O,UAAU,mDAQjB,yBAAKA,UAAU,kCAEd,yBAAKA,UAAU,wCACd,qCAIA,kBAAC,KAAD,CACC8P,UAAU,OAAO7M,MAAO,uFACxB,uBAAGiN,KAAK,OACP,kBAACiO,GAAA,EAAD,SAIH,yBAAKne,UAAU,sCAId,yBAAKA,UAAU,gCACbyS,GAEAA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAC+D,EAAOgQ,GAC3C,OACC,yBAAK/U,UAAU,sCACd,yBACCA,UAAU,kDACVmM,QAAS,kBAAMoM,GAAgBxT,EAAMjD,MAErC,yBAAKwF,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGnC,0BACCiH,QAAS,kBAzbE,SAACrK,GAE3B,IAAMuc,EAAY5L,GAAYA,EAASsB,QAAO,SAAAhP,GAC7C,OAAOA,EAAMjD,KAAOA,KAGrBuQ,EAAYgM,GAmbkBvE,CAAmB/U,EAAMjD,KACxC9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,QAIA0B,KAAiBvT,EAAMjD,KAInBwW,IAA0B,IAAVvD,IAHpB,0BAAM/U,UAAU,4CACf,kBAAC6W,GAAA,EAAD,WAYN,kBAAC,KAAD,CACC5T,MAAO,iBAEP,yBACCkJ,QAAS,WACRiG,GAAW,GACXqK,GAAwB,GACxBD,GAA2B,IAE5Bxc,UAAU,4CAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACf,kBAAC2Z,GAAA,EAAD,aAYP,yBAAK3Z,UAAU,kCACd,yBAAKA,UAAU,qCAEd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,0CAIA,kBAAC,KAAD,CACCyP,MAAM,MACN0C,QAAS8S,EAAgBhc,MAAhB,kBAAgDkc,EAAY1kB,OAAS,GAC9EqP,UAAU,OAAO7M,MAAO,gCACxB,yBAAKjD,UAAamlB,EAAY1kB,OAAS,GAClCwkB,EAAgBhc,MAAhB,eAA2Dgc,EAAgBhc,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACgJ,GAAA,EAAD,SAKH,yBAAKjS,UAAU,mDACd,kBAAC,GAAD,CACCiiB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMpB,yBAAK/hB,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,qCAID,yBAAKA,UAAU,mDACd,kBAAC,GAAD,CACCogB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,OAKf,yBAAKngB,UAAU,kCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,0CAID,yBAAKA,UAAU,mDACd,kBAAC,GAAD,CAAQqhB,WAAYA,UAa1B,kBAAC,GAAD,CACCjP,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCttBrBV,GAAYC,KAAZD,QAEFtH,GAAmBC,MAAaC,MAAM,CACxCzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAInEE,GAAgB,CAClB7K,KAAM,GACNkC,YAAa,GACb2iB,MAAO,GACPjhB,KAAM,GACNogB,QAAS,GACTC,MAAO,GACPE,UAAW,GACXC,QAAS,GACTpf,MAAO,GACPpE,IAAK,GACLyB,MAAO,GACP0B,QAAS,GACTD,MAAO,GACPD,KAAM,GACNW,KAAM,GACNsgB,cAAe,MA45BJC,GAj5BO,SAAC,GAA4G,IAA1GvN,EAAyG,EAAzGA,sBAAuBC,EAAkF,EAAlFA,yBAA0BuN,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,eAAgBvN,EAA2B,EAA3BA,cAA2B,EAEvEpN,EAAe,GAAI,iBAFoD,mBAEvH8b,EAFuH,KAEnGC,EAFmG,OAGvE/b,EAAe,GAAI,qBAHoD,mBAGvHkX,EAHuH,KAGnG8E,EAHmG,OAI/Chc,EAAe,GAAI,6BAJ4B,gCAKnDA,EAAe,GAAI,4BALgC,gCAM3CA,EAAe,GAAI,gCANwB,gCAO/CA,EAAe,GAAI,8BAP4B,mBAOvF6N,GAPuF,aAQ/C7N,EAAe,GAAI,6BAR4B,mBAQvF8N,GARuF,aAYhGrL,oBAAS,GAZuF,mBAYvHqF,EAZuH,KAY9GC,EAZ8G,OAa9FtF,oBAAS,GAbqF,mBAavH2F,EAbuH,KAa7GJ,EAb6G,OAc9EvF,oBAAS,GAdqE,mBAcrGyF,GAdqG,aAehEzF,oBAAS,GAfuD,mBAevH0F,EAfuH,KAe9FgK,EAf8F,OAgBtE1P,oBAAS,GAhB6D,mBAgBvHwF,EAhBuH,KAgBjGmK,EAhBiG,QAiBxF3P,mBAAS,IAjB+E,qBAiBvHqY,GAjBuH,MAiB1GpD,GAjB0G,SAkBlGjV,mBAAS,IAlByF,qBAkBvHsY,GAlBuH,MAkB/GjF,GAlB+G,SAmBhGrT,mBAAS,IAnBuF,qBAmBvHwU,GAnBuH,MAmB9GD,GAnB8G,SAoBhGvU,mBAAS,IApBuF,qBAoBvHhJ,GApBuH,MAoB9GuhB,GApB8G,SAqBtFvY,mBAAS,IArB6E,qBAqBvHwL,GArBuH,MAqBzGC,GArByG,SAsBhFzL,mBAAS,IAtBuE,qBAsBvHkV,GAtBuH,MAsBtGC,GAtBsG,SAuBtFnV,mBAAS,IAvB6E,qBAuBvHuT,GAvBuH,MAuBzGD,GAvByG,SAwBjGtT,mBAAS,IAxBwF,qBAwBvHlJ,GAxBuH,MAwBjH0hB,GAxBiH,SAyBjGxY,mBAAS,IAzBwF,qBAyBvHvI,GAzBuH,MAyBjHghB,GAzBiH,MA8B9Hvb,qBAAU,WAENpF,QAAQC,IAAI,gBAAiB4S,GACP,uCAAG,sBAAAvN,EAAA,sEACfmc,EAAyB,CAC3BzlB,WAAY,CACRE,aAAc,CACVgB,GAAI2V,EAAc3V,OAJT,2CAAH,oDAUtBwkB,KAED,CAAC7O,IAEJzN,qBAAU,WAEFyN,GAAiBA,EAAcjT,MAC/B6c,GAAW5J,EAAcjT,OAGzB6c,GAAW,IAEX5J,GAAiBA,EAAchT,MAAQgT,EAAchT,KACrD2b,GAAgB3I,EAAchT,MAG9B2b,GAAgB,IAGhB3I,GAAiBA,EAAc5V,UAAY4V,EAAc5V,SACzDogB,GAAmBxK,EAAc5V,UAGjCogB,GAAmB,IAInBxK,GAAiBA,EAAc3T,SAAW2T,EAAc3T,QACxDuhB,GAAW5N,EAAc3T,SAGzBuhB,GAAW,IAKX5N,GAAiBA,EAAc7T,MAAQ6T,EAAc7T,KACrD0hB,GAAa7N,EAAc7T,MAG3B0hB,GAAa,IAIb7N,GAAiBA,EAAclT,MAAQkT,EAAclT,KACrDghB,GAAa9N,EAAclT,MAG3BghB,GAAa,MAKlB,CAAC9N,IAIJzN,qBAAU,WACN,GAAIuX,EAAmBhY,MAAQhJ,OAAOC,KAAK+gB,GAAoB9gB,OAAS,EAAG,CAEvE,IAAMiH,EAAS6Z,EAAmB5f,KAAKoD,MACnC2C,GAAUA,EAAOjH,OAAS,GAC1B4R,EAAY3K,GAGZ6Z,EAAmB5f,KAAKS,OAASmf,EAAmB5f,KAAKS,MAAxB,KAEjCiQ,EAAY,CAACkP,EAAmB5f,KAAKS,OAA1B,oBAAoCsF,KAC/C9C,QAAQC,IAAI,SAAZ,CAAuB0c,EAAmB5f,KAAKS,OAA/C,oBAAyDsF,KACzD6Q,GAAgBgJ,EAAmB5f,KAAKS,MAAxB,QAIzB,CAACmf,IAGJvX,qBAAU,WACNpF,QAAQC,IAAI,WAAY4N,GAEpBA,GAAYA,EAAS,IAAMA,EAAShS,OAAS,IAC7CmE,QAAQC,IAAI,YAAa4N,GAErB6F,KAAiB7F,EAAS,GAAG3Q,KAC7ByW,GAAgB9F,EAAS,GAAG3Q,IAC5B+W,GAAyBpG,EAAS,QAK3C,CAACA,IAGJ,IAAMqG,GAAuB,uCAAG,WAAMhX,GAAN,SAAAoI,EAAA,sEACtBgO,EAAqC,CACvCtX,WAAY,CACRE,aAAc,CACViY,QAASjX,EACTkX,WAAY,UACZC,OAAQxB,EAAc3V,OANN,2CAAH,sDAcvB+W,GAAwB,uCAAG,WAAM9T,GAAN,uBAAAmF,EAAA,sEAEFiO,EAAqC,CAC5DvX,WAAY,CACRE,aAAc,CACViY,QAAShU,EAAMjD,GACfkX,WAAY,UACZC,OAAQxB,EAAc3V,OAPL,OAEvBoX,EAFuB,OAY7BtU,QAAQC,IAAI,eAAgBqU,GAGxBA,GAAwC,OAAxBA,EAAa5U,QAC7BwN,GAAwB,uBAKlBiD,EAJkB,WACpB,OAAOgQ,EAAY/jB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQkW,EAAc3V,IAGpDqX,IAERC,EAAW2L,EAAY3P,MAAK,SAAArP,GAAI,OAAIA,EAAKjE,KAAO2V,EAAc3V,SAGhE8C,QAAQC,IAAI,aAAcuU,EAAU,UAAWrU,GAEzC2Q,EAAcnV,OAAOoV,OAAO,GAAIoP,EAAYhQ,GAA9BxU,OAAA,IAAAA,CAAA,GAA2C6Y,EAA3C,CAAqDhX,MAAO2C,EAAM3C,SAChFmkB,EAJI,uBAIoBxB,EAAYzjB,MAAM,EAAGyT,IAJzC,CAIiDW,GAJjD,aAIiEqP,EAAYzjB,MAAMyT,EAAQ,KACrGiQ,EAAeuB,KAKnB1Q,GAAsB,mDAnCG,2CAAH,sDAiDxB7K,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,6DAEX8S,EAAYvK,EAAWA,EAASzR,KAAI,SAAA+D,GACtC,OAAOA,EAAMjD,MACZ,GAJY,SAMeskB,EAAyB,CACrDxlB,WAAY,CACRE,aAAc,CACVgB,GAAI2V,EAAc3V,KAG1B4G,KAAM,CACF3I,KAAMkL,EAAOlL,KAAKuZ,OAClBrX,YAAagJ,EAAOhJ,YACpB2iB,MAAO3Z,EAAO2Z,MACdjhB,KAAMsH,EAAOtH,KACb9B,SAAUmgB,GACVvd,KAAM2gB,GACN5gB,MAAO8c,GACPvc,MAAOiY,EACP5a,MAAOkW,IAAgB0E,EAAU,GAAKA,EAAU,GAAK,GACrDlZ,QAASA,GACTF,KAAMA,GACNW,KAAMA,GACNV,MAAOoH,EAAOpH,MACdghB,cAAe5Z,EAAO4Z,iBA1Bb,QAMX2B,EANW,SAgCqC,OAA7BA,EAAkBliB,SACvCwN,GAAwB,mBACxB0F,GAAyB,GAEzB5S,QAAQC,IAAI,oBAAqB2hB,GACjCxB,EAAe,GAAD,oBAAKD,GAAL,cACVjjB,GAAI0kB,EAAiB,IAAU,GAC/BxkB,IAAKwkB,EAAiB,IAAU,GAChCzmB,KAAMymB,EAAiB,MAAY,GACnCvkB,YAAaukB,EAAiB,aAAmB,IAE9CA,MAGPnU,EAAY,IACZkG,GAAgB,IAChB8M,GAAW,IACXlF,GAAU,IACVC,GAAgB,IAChBiB,GAAW,IACXU,GAAe,IACfE,GAAmB,IACnB/W,EAAQsO,aAMZtO,EAAQC,eAAc,GA5DL,2CAAH,wDAmElBnB,qBAAU,WACN,IAAKmc,EAAkB,UAAe,CAClC,IAAMld,EAAQkd,EAAkB,MAChC,GAAIld,EAAK,SAAe1I,OAAOC,KAAKyI,EAAK,OAAWxI,OAAS,GAIrDF,OAAO0K,OAAOhC,EAAK,OAAWxI,OAAS,EACjCF,OAAO0K,OAAOhC,EAAK,OACnB,IACHoL,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP5P,GAAsB4P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOllB,OAAOC,KAAKilB,GAAKhlB,OAAS,EACpBF,OAAO0K,OAAOwa,GACtBpR,SAAQ,SAAAoR,GACT5P,GAAsB4P,aAQ/C,CAACU,IAGJ,IAAM1M,GAAe,SAACvN,GAClBsL,GAAyB,IAIvBpM,GAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOlL,MAAU+D,GAAQrD,OAAS,GAAO4K,IAqC5CyY,GAAmB,SAACa,GAEtBU,GAAW,CAAC,eACLV,EADG,CAEN7iB,GAAIgC,GAAQrD,UAFN,oBAGJqD,MACNiO,KAAQwQ,KAAK,0BAqBXoD,GAAmB,SAAC/hB,EAAMgiB,GAC5BN,GAAaM,IAIXC,GAAmB,SAACjiB,EAAMgiB,GAC5BL,GAAaK,IASjB,OAJAhhB,QAAQC,IAAI,gBAAiB4S,GAC7B7S,QAAQC,IAAI,qBAAsB0c,GAI9B,kBAAC,IAAD,CACIjW,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACc6M,KAG1B,gBACGhM,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI3L,MAAO,CACH2V,IAAK,QAGTG,UAAW,CACPjK,OAAQ,EACR+D,QAAS,GAEb/C,MAAO,OACPhK,MAAM,eACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,GACVgN,gBAAgB,EAChBtQ,OAAO,SACPyD,cAAe,CACXxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,GAA0BH,EAAQI,KAKhD,6BAASrL,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,iDAIA,yBAAKA,UAAWiL,EAAOlL,MAAQkL,EAAOlL,KAAKU,OAAS,EAAI,mBAAqB,aACzE,kBAACwR,GAAA,EAAD,QAGR,yBAAKjS,UAAU,sCACX,kBAACb,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC3B4L,GAAgBwa,EAAmBld,MAAnB,WAEtBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgBwa,EAAmBld,MAAnB,WACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,WAGxB,yBAAKzL,MAAO,CACRsO,QAAS,OACTC,eAAgB,kBAEhB,yBAAKvO,MAAO,CACR6M,MAAO,QAEP,kBAAC4S,GAAD,CACItb,KAAMA,GACNX,KAAMA,GACNrE,MAAM,OACNI,SAAUgmB,MAGlB,yBAAKvlB,MAAO,CACR6M,MAAO,QAGP,kBAAC4S,GAAD,CACItb,KAAMA,GACNX,KAAMA,GACN8b,UAAU,EACV5D,YAAY,cACZvc,MAAM,OACNI,SAAUkmB,OAItB,yBAAKzlB,MAAO,CACRsW,aAAc,UAGlB,kBAAC,GAAD,CACIjF,KAAM,EACNlS,MAAM,QACNE,MAAOwL,EAAOpH,MACd9D,KAAK,QACLF,QAAU+L,EAAQ/H,OAAS6H,EAAO7H,QAC5B8H,GAAgBwa,EAAmBld,MAAnB,YAEtBnJ,YAAc8L,EAAQ/H,OAAS6H,EAAO7H,QAChC8H,GAAgBwa,EAAmBld,MAAnB,YACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,YAMxB,kBAAC1M,EAAD,CACII,MAAM,iBACNE,MAAOwL,EAAO4Z,cACdrlB,KAAK,SACLO,KAAK,gBACLF,QAAU+L,EAAQiZ,eAAiBnZ,EAAOmZ,gBACpClZ,GAAgBwa,EAAmBld,MAAnB,oBAEtBnJ,YAAc8L,EAAQiZ,eAAiBnZ,EAAOmZ,gBACxClZ,GAAgBwa,EAAmBld,MAAnB,oBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,oBAMxB,kBAAC,GAAD,CACItM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cAClC0J,GAAgBwa,EAAmBld,MAAnB,kBAEtBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACtC0J,GAAgBwa,EAAmBld,MAAnB,kBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,oBAuChC,yBAAK7L,UAAU,kCACX,yBAAKA,UAAU,wCACX,6CAIA,yBAAKA,UAAW8D,IAAWA,GAAQrD,OAAS,EAAI,mBAAqB,aACjE,kBAACwR,GAAA,EAAD,QAKR,yBAAKjS,UAAU,sCAEX,kBAAC,KAAD,CACI8lB,UAAU,EACVC,YAAY,MACZvmB,KAAK,OACL4W,iBAAiB,KAGjB,kBAAC,GAAD,CAASE,IAAI,gBAAgBtU,IAAI,KAC7B,kBAAC,GAAD,CAAS8hB,iBAAkBA,MAE/B,kBAAC,GAAD,CAASxN,IAAI,eAAetU,IAAI,KAC5B,yBAAKhC,UAAU,uDAEV8D,GAAQrD,OAAS,GAAKqD,GAAQ9C,KAAI,SAAA+E,GAC/B,OACI,yBAAK/F,UAAU,4DACX,yBAAKA,UAAU,iEAIX,0BAAMA,UAAU,IAAImM,QAAS,kBAlQrE,SAACrK,GACzB,IAAMkkB,EAAaliB,GAAQiQ,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACtDujB,GAAWW,GACXjU,KAAQwQ,KAAK,2BA+PsF0D,CAAoBlgB,EAAKjE,MACxD,kBAACgV,GAAA,EAAD,QAGR,yBAAK9W,UAAU,gEACX,6BACI,qCAGA,yBAAKA,UAAU,iEAGV+F,EAAKvC,MAAMwgB,MACR,oCACI,4BACKje,EAAKvC,MAAMwgB,OAFpB,IAMjE,wBAAI5jB,MAAO,CAC8D8lB,eAAgB,iBAGfngB,EAAKvC,MAAMugB,UAIhB,4BACKhe,EAAKvC,MAAMugB,WAS/Bhe,EAAKqe,OACF,6BACI,kBAAC,KAAD,CACIjU,cAAe,IACfC,MAAOrK,EAAKqe,MAAMF,WAClB,sCAIJ,yBAAKlkB,UAAU,iEACX,6BACI,kCAEjE,kBAAC,KAAD,CACyEA,UAAU,qBACVmQ,cAAe,IACfC,MAAOrK,EAAKqe,MAAMD,eAc7Cpe,EAAKkd,WACC1iB,OAAO0K,OAAOlF,EAAKkd,WAAWxiB,OAAS,GACtC,oCACI,0CAGA,yBAAKT,UAAU,iEACV+F,EAAKkd,WACC1iB,OAAOC,KAAKuF,EAAKkd,WAAWxiB,OAAS,GACrCF,OAAOC,KAAKuF,EAAKkd,WAAWjiB,KAAI,SAAAqiB,GAC/B,OACI,6BACI,4BACKA,GAEL,4BACKtd,EAAKkd,UAAUI,gBAc7Dvf,GAAQrD,OAAS,IAAM,yBAAKL,MAAO,CAClC6M,MAAO,OACPyB,QAAS,OACTC,eAAgB,WAEhB,kBAAC,KAAD,CAAO1M,YAAY,mBAAmB8C,MAAOyJ,KAAMK,6BAOnE,yBAAK7O,UAAU,mDAQvB,yBAAKA,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACI8P,UAAU,OAAO7M,MAAO,uFACxB,uBAAGiN,KAAK,OACJ,kBAACiO,GAAA,EAAD,SAKZ,yBACI/d,MAAO,CACH4P,QAAS,QAEbhQ,UAAU,gCACTuhB,EAAmBjY,WAChB,yBAAKlJ,MAAO,CACR4P,QAAS,WAET,kBAAC,KAAD,OAGPuR,EAAmBhY,MAChB,oCACKkJ,GAEGA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAC+D,EAAOgQ,GACxC,OACI,yBAAK/U,UAAU,sCACX,yBACIA,UAAU,kDACVmM,QAAS,WACLoM,GAAgBxT,EAAMjD,IACtB+W,GAAyB9T,KAG7B,yBAAKuC,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGtC,0BACIiH,QAAS,YA5clD,SAACrK,GAExB,IAAMuc,EAAY5L,GAAYA,EAASsB,QAAO,SAAAhP,GAC1C,OAAOA,EAAMjD,KAAOA,KAGxBuQ,EAAYgM,GAucwDvE,CAAmB/U,EAAMjD,IACzBgX,GAAwB/T,EAAMjD,KAIlC9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,QAIH0B,KAAiBvT,EAAMjD,KAInBwW,IAA0B,IAAVvD,IAHjB,0BAAM/U,UAAU,4CACZ,kBAAC6W,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI5T,MAAO,iBAEP,yBACIkJ,QAAS,WACLiG,GAAW,GACXqK,GAAwB,GACxBD,GAA2B,IAE/Bxc,UAAU,4CAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACZ,kBAAC2Z,GAAA,EAAD,aAWhC,yBAAK3Z,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,0CAIA,kBAAC,KAAD,CACIyP,MAAM,MACN0C,QAASgU,EAAmBld,MAAnB,kBAAmDkc,GAAY1kB,OAAS,GACjFqP,UAAU,OAAO7M,MAAO,gCACxB,yBAAKjD,UAAamlB,GAAY1kB,OAAS,GAC/B0lB,EAAmBld,MAAnB,eAA8Dkd,EAAmBld,MAAnB,eAAgD,kBAAoB,mBAAlF,aACpD,kBAACgJ,GAAA,EAAD,SAKZ,yBAAKjS,UAAU,mDACX,kBAAC,GAAD,CACIiiB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAK/hB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIogB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAKngB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,0CAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIuhB,mBAAoBA,EACpBD,QAASA,GACTD,WAAYA,WAaxC,kBAAC,GAAD,CACIjP,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCj8B5ChI,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CA+JvD4T,GAhIG,SAAC,GAA2E,IAAzEzc,EAAwE,EAAxEA,SAAUuQ,EAA8D,EAA9DA,WAAYD,EAAkD,EAAlDA,QAAS6S,EAAyC,EAAzCA,eAAgBD,EAAyB,EAAzBA,YAAyB,EACrC1a,EAAe,GAAI,iBADkB,mBACrF8b,EADqF,KACjEC,EADiE,KAGtFpb,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEACWkc,EAAyB,CACvDxlB,WAAY,CACXE,aAAc,CACbgB,GAAImJ,EAAOnJ,KAGb4G,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkC,YAAagJ,EAAOhJ,YACpBJ,SAAUA,EAASA,SACnBiC,QAASjC,EAASiC,WAXA,QACd4iB,EADc,SAgBgC,OAA5BA,EAAiBpiB,QA7C1C0N,KAAarN,QAAQ,CACpBoN,QAAS,kBACT9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAiDpCsF,EAJsB,WAC3B,OAAOgQ,EAAY/jB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQM,EAASC,IAG5C6kB,GAGRjR,EAAcnV,OAAOoV,OAAO,GAAIoP,EAAYhQ,GAA9BxU,OAAA,IAAAA,CAAA,GAA2CmmB,IACzDH,EAXmD,uBAW3BxB,EAAYzjB,MAAM,EAAGyT,IAXM,CAWEW,GAXF,aAWkBqP,EAAYzjB,MAAMyT,EAAQ,KACrGiQ,EAAeuB,KAjDaxU,OAqD5B8D,EApDF7D,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAoD3CvE,EAAQC,eAAc,GACtBiH,GAAW,GApCS,iCArBQ,IAACL,IAqBT,OAAH,wDAwCZ0H,EAAe,SAACvN,GACrBkG,GAAW,IAINhH,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOlL,OAASsL,GAMtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP/I,KAGL,gBACA4J,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgBwa,EAAmBld,MAAnB,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgBwa,EAAmBld,MAAnB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,WAKlB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACrC0J,GAAgBwa,EAAmBld,MAAnB,kBAEnBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgBwa,EAAmBld,MAAnB,kBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,wBClJjBmO,GAAwBC,KAAxBD,OACAE,IADwBD,KAAhBE,YACGhb,IAAX+a,QAoBFE,GAAU,SAAC,GAA4C,IAA1CzY,EAAyC,EAAzCA,KAAMqjB,EAAmC,EAAnCA,eAAmC,EAC5BlY,oBAAS,GADmB,mBACnDqF,EADmD,KAC1CC,EAD0C,OAEAtF,oBAAS,GAFT,mBAEnDwN,EAFmD,KAE5BC,EAF4B,OAGHlQ,EAAe,GAAI,iBAHhB,mBAG/Buc,GAH+B,aAIF9Z,oBAAS,GAJP,mBAInD+Z,EAJmD,KAI7BC,EAJ6B,KAMpDC,EAAmB,uCAAG,WAAOjlB,GAAP,iBAAAoI,EAAA,sEACK0c,EAAyB,CACtDhmB,WAAY,CACVE,aAAc,CACZgB,SAJoB,QACpBklB,EADoB,SAU0B,OAA5BA,EAAiB1iB,SA/B3C0N,KAAarN,QAAQ,CACnBoN,QAAS,kBACT9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BA8BnCwX,EAAiBtlB,EAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACvDkjB,EAAeiC,IAbS,2CAAH,sDAoBzB,OACE,oCACE,kBAAC,KAAD,CACE7mB,MAAO,CACL8mB,WAAY,OACZ7mB,aAAc,iBACd8mB,SAAU,SACVja,UAAW,+FAObmJ,KAAK,QAELyE,WAAYnZ,EACZylB,YAAa,OACbC,YAAa,SAAAC,GACX,MAAO,CACLlnB,MAAO,CACLqP,MAAO,qBAMb,kBAAC,GAAD,CACExM,MAAM,GACN8X,UAAU,QACV/Y,IAAI,KACJiL,MAAO,OAEPjN,UAAU,uBAEVgb,OAAQ,SAAC5Y,EAAO6Y,GAAR,OACN,oCACE,yBACE9O,QAAS,WACP2a,GAAwB,GACxBvM,EAAyBU,IAE3B3T,IAAKlF,EAAO8C,IAAI,YAAY9E,MAAO,CACjCqO,OAAQ,OACRxB,MAAO,OACPiO,UAAW,UACX7a,aAAc,MACduP,OAAQ,iBAUlB,kBAAC,GAAD,CACE3M,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,uBACVgb,OAAQ,SAACnY,EAAMoY,GAAP,OACN,oCAEE,wBACE9O,QAAS,WACP2a,GAAwB,GACxBvM,EAAyBU,IAE3B7a,MAAO,CACLiQ,WAAY,IACZZ,MAAO,OACPG,OAAQ,YAGT/M,OAST,kBAAC,GAAD,CACEI,MAAM,cACN8X,UAAU,aACV/Y,IAAI,KACJhC,UAAU,yBAKZ,kBAAC,GAAD,CACEiD,MAAM,QACN8X,UAAU,QACV/Y,IAAI,KACJhC,UAAU,yBAIZ,kBAAC,GAAD,CACEiD,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBA6BZ,kBAAC,GAAD,CAEEA,UAAU,uBACViD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UACV,uBAAGnG,KAAK,MACN,kBAAC,KAAD,CAEEJ,UAAU,MAAM7M,MAAM,sBACtB,0BAAMjD,UAAU,WAAWmM,QAAS,WAClCiG,GAAW,GACXmI,EAAyBU,KAEzB,kBAACG,GAAA,EAAD,SAMN,kBAAC,KAAD,CAEEnE,UAAW,kBAAM8P,EAAoB9L,EAAOnZ,KAC5CmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAC9C,0BACElX,UAAU,4BAEV,kBAAC8W,GAAA,EAAD,aAeXwD,GAAyB,kBAAC,GAAD,CACxByK,YAAapjB,EACbqjB,eAAgBA,EAChB5S,WAAYA,EACZD,QAASA,EACTtQ,SAAUyY,IAEZ,kBAACiN,GAAD,CACEhQ,sBAAuBsP,EACvBrP,yBAA0BsP,EAC1BrP,cAAe6C,EACfyK,YAAayC,GACbxC,eAAgBA,MAalBwC,GAAc,SAAC,GAAuB,EAArB1Y,QAAsB,IAAD,EAIJhC,mBAAS,IAJL,mBAInCiY,EAJmC,KAItBC,EAJsB,OAMK3a,EAAe,GAAI,eANxB,mBAMnCod,EANmC,KAMrBC,EANqB,KAS1C1d,qBAAU,YACS,uCAAG,4BAAAE,EAAA,sEACKwd,EAAuB,IAD5B,OACZ5gB,EADY,OAGlBke,EAAele,GAHG,2CAAH,qDAKjB6gB,KACC,IAhBuC,MAmBgB7a,oBAAS,GAnBzB,mBAmBnCyK,EAnBmC,KAmBZC,EAnBY,KAkC1C,OACE,oCAIE,yBAAKxX,UAAU,yBACb,yBAAKA,UAAU,iCAGb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,UAKA,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACV8b,YAAY,kBACZC,SAAU,SAAAtc,GAAK,OA5BN,SAACA,GACpB,GAAIgoB,EAAa9lB,KAAKlB,OAAS,EAAG,CAChC,IAAMwmB,EAAiBQ,EAAa9lB,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKic,cAAc9a,SAASzB,EAAMuc,kBAC/FgJ,EAAeiC,IAyBYhL,CAAaxc,OAKpC,kBAAC,IAAD,CAEEO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAMqL,GAAyB,KAJ1C,YAYF,yBAAKxX,UAAU,uCAUf,yBAAKA,UAAU,uCACZynB,EAAale,MAAQwb,EAAYtkB,OAAS,GAAK,kBAAC,GAAD,CAC9CukB,eAAgBA,EAChBrjB,KAAMojB,IACP0C,EAAane,WAAa,kBAAC4S,GAAD,MAC1BuL,EAAale,QAAUwb,EAAYtkB,OAAS,IAC3C,yBAAKL,MAAO,CACVsP,UAAW,UAEX,kBAAC,KAAD,CAAOzN,YAAY,kBAAkB8C,MAAOyJ,KAAMK,4BAOzD4Y,EAAale,MACZ,kBAAC,GAAD,CACEgO,sBAAuBA,EACvBC,yBAA0BA,EAC1BuN,YAAa0C,EAAa9lB,KAC1BqjB,eAAgBA,MAYXpY,eAAW4a,IC/WpBld,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,wCACrEzI,YAAasI,MAAahL,MAAM,eAAeF,SAAS,6BAcjDwW,GAAwB,SAAC9D,GAChCC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBA8I/B6O,GA7HG,SAAC,GAAmE,IAAjEzc,EAAgE,EAAhEA,SAAUuQ,EAAsD,EAAtDA,WAAYD,EAA0C,EAA1CA,QAASyV,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAChCxd,EAAe,GAAI,aADa,mBAC7Eyd,EAD6E,KAC7DtJ,EAD6D,KAG9ExT,EAAY,uCAAG,WAAOC,EAAcC,GAArB,qBAAAhB,EAAA,sEACQsU,EAA0B,CACtD5d,WAAY,CACXE,aAAc,CACZgB,GAAImJ,EAAOnJ,KAGd4G,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkC,YAAagJ,EAAOhJ,eATD,QACb8lB,EADa,SAc0B,OAAxBA,EAAazjB,QA/CJyN,OAgD9BD,EA/CFE,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAkDnCsF,EAJc,WACrB,OAAO6S,EAAQ5mB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQM,EAASC,IAGtC4c,GAGRhJ,EAAcnV,OAAOoV,OAAO,GAAIiS,EAAQ7S,GAA1BxU,OAAA,IAAAA,CAAA,GAAuCwnB,IACrDC,EAX0C,uBAWtBJ,EAAQtmB,MAAM,EAAGyT,IAXK,CAWGW,GAXH,aAWmBkS,EAAQtmB,MAAMyT,EAAQ,KACzF8S,EAAWG,IAIbnS,KAGC3K,EAAQC,eAAc,GACtBiH,GAAW,GAlCO,iCAjCU,IAACL,IAiCX,OAAH,wDAsCZ0H,EAAe,SAACvN,GACfkG,GAAW,IAIVhH,EAA4B,SAACH,EAAOI,GAC3C,QAAIJ,EAAOlL,MAASkL,EAAOhJ,aAAgBoJ,IAM5C,OACC,kBAAC,IAAD,CACAC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP/I,KAGL,gBACC4J,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAalB,EAAakB,IAChC+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACfxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgBmc,EAAe7e,MAAf,WAElBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgBmc,EAAe7e,MAAf,WACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,WAGjB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACtC0J,GAAgBmc,EAAe7e,MAAf,kBAElBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgBmc,EAAe7e,MAAf,kBACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,wBCnIhBvB,GAAmBC,MAAaC,MAAM,CACxCzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAcnEmL,GAAwB,SAAC9D,GAC3BC,KAAa/I,MAAM,CACf8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAK7C7E,GAAgB,CAClB7K,KAAM,GACNkC,YAAa,IA2KFmV,GA9JK,SAAC,GAAqF,IAAnFG,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0BoQ,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAE5Dxd,EAAe,GAAI,UAFyC,mBAE9F4d,EAF8F,KAEjFC,EAFiF,OAGrEpb,oBAAS,GAH4D,mBAG9F2F,EAH8F,KAGpFJ,EAHoF,OAI7DvF,oBAAS,GAJoD,mBAI9FsL,EAJ8F,KAIhFC,EAJgF,OAK7DvL,mBAAS,IALoD,mBAQ/F9B,GAR+F,UAQnF,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOge,EAAkB,CACtCtnB,WAAY,CACRE,aAAc,CACVgB,GAAImJ,EAAOnJ,KAGnB4G,KAAM,CACF3I,KAAMkL,EAAOlL,KAAKuZ,OAClBrX,YAAagJ,EAAOhJ,eATX,QACXkmB,EADW,SAcqB,OAArBA,EAAU7jB,QAvDFyN,OAwDrBD,EAvDRE,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAsDvCoY,EAAW,GAAD,oBAAKD,GAAL,CAAc,CACpB9lB,GAAIqmB,EAAS,IAAU,GACvBnmB,IAAKmmB,EAAS,IAAU,GACxBpoB,KAAMooB,EAAS,MAAY,GAC3BlmB,YAAakmB,EAAS,aAAmB,OAE7Cjd,EAAQsO,YACRhC,GAAyB,IAGzB3B,KAIJ3K,EAAQC,eAAc,GA/BL,iCAzCO,IAAC4G,IAyCR,OAAH,yDAoCZ0H,EAAe,SAACvN,GAClBsL,GAAyB,IAIvBpM,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOlL,OAASsL,GAqBzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI3L,MAAO,CACH2V,IAAK,QAET9S,MAAM,cACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACXxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAGhD,kBAAClM,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC3B4L,GAAgBsc,EAAYhf,MAAZ,WAEtBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgBsc,EAAYhf,MAAZ,WACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACItM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cAClC0J,GAAgBsc,EAAYhf,MAAZ,kBAEtBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACtC0J,GAAgBsc,EAAYhf,MAAZ,kBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,mBAM5B,kBAAC,GAAD,CACIuG,WAAYiG,EACZlG,QAASiG,EACT/F,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SChL5CR,GAA0B,SAACC,GAChCC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BA0BrCuK,IAXiBzP,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAUtCuP,KAAxBD,QACAE,IADwBD,KAAhBE,YACGiO,IAAXlO,QAIFE,GAAU,SAAC,GAA0B,IAAxBzY,EAAuB,EAAvBA,KAAMkmB,EAAiB,EAAjBA,WAAiB,EACX/a,oBAAS,GADE,mBAClCqF,EADkC,KACzBC,EADyB,OAEiBtF,oBAAS,GAF1B,mBAElCwN,EAFkC,KAEXC,EAFW,OAGMlQ,EAAe,GAAI,aAHzB,mBAGlBge,GAHkB,WAOnCC,EAAe,uCAAG,WAAOxmB,GAAP,iBAAAoI,EAAA,sEACIme,EAAqB,CAC/CznB,WAAY,CACXE,aAAc,CACbgB,SAJoB,QACjBymB,EADiB,SAYqB,OAAxBA,EAAajkB,SAChCwN,GAAwB,eAClB0W,EAAa7mB,EAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACnD+lB,EAAWW,IAfW,2CAAH,sDAiCrB,OACC,oCACC,kBAAC,KAAD,CAMCnS,KAAK,QAELyE,WAAYnZ,GAGZ,kBAAC,GAAD,CACCsB,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAIX,kBAAC,GAAD,CACCiD,MAAM,cACN8X,UAAU,cACV/Y,IAAI,KACJhC,UAAU,yBAGX,kBAAC,GAAD,CAECA,UAAU,uBACViD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACP,kBAAC,KAAD,CAAO5E,KAAK,UAEX,uBAAGnG,KAAK,MACP,kBAAC,KAAD,CAASJ,UAAU,MAAM7M,MAAM,kBAC9B,0BAAMjD,UAAU,WAAWmM,QAAS,WACnCiG,GAAW,GACXmI,EAAyBU,KAEzB,kBAACG,GAAA,EAAD,SAQH,kBAAC,KAAD,CAECnE,UAAW,kBAAMqR,EAAgBrN,EAAOnZ,KACxCmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAE9C,0BACClX,UAAU,4BAEV,kBAAC8W,GAAA,EAAD,aAmBLwD,GAAyB,kBAAC,GAAD,CACzBsN,QAASjmB,EACTkmB,WAAYA,EACZzV,WAAYA,EACZD,QAASA,EACTtQ,SAAUyY,MAwJCmO,GA9IC,SAAC,GAAgB,qBAGF3b,mBAAS,IAHR,mBAGxB8a,EAHwB,KAGfC,EAHe,OAKQxd,EAAe,GAAI,WAL3B,mBAKxBkW,EALwB,KAKdC,EALc,KAQ/BxW,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACIsW,EAAmB,IADvB,OACT/b,EADS,OAGfojB,EAAWpjB,GAHI,2CAAH,qDAKbsc,KACE,IAf4B,MAkBU1W,EAAe,GAAI,UAlB7B,gCAmB2ByC,oBAAS,IAnBpC,mBAmBxByK,EAnBwB,KAmBDC,EAnBC,KAoF/B,OACC,oCAGD,yBAAKxX,UAAU,yBACV,yBAAKA,UAAU,iCAGd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,QAKA,kBAAC,GAAD,CACC6b,aAAa,EACb7b,UAAU,qBACV8b,YAAY,gBACZC,SAAU,SAAAtc,GAAK,OA7BF,SAACA,GACrB,GAAI8gB,EAAS5e,KAAKlB,OAAS,EAAG,CAC7B,IAAMioB,EAAanI,EAAS5e,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKic,cAAc9a,SAASzB,EAAMuc,kBACvF6L,EAAWa,IA0BczM,CAAaxc,OAGlC,kBAAC,IAAD,CAEGO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAMqL,GAAyB,KAJ3C,YAUD,yBAAKxX,UAAU,uCACbugB,EAAShX,MAAQqe,EAAQnnB,OAAS,GAAK,kBAAC,GAAD,CACvConB,WAAYA,EACZlmB,KAAMimB,IACNrH,EAASjX,WAAa,kBAAC4S,GAAD,MAGtBqE,EAAShX,QAAUqe,EAAQnnB,OAAS,IACpC,yBAAKL,MAAO,CACXsP,UAAW,SAEX,kBAAC,KAAD,CAAOzN,YAAY,gBAAgB8C,MAAOyJ,KAAMK,4BAMvD,kBAAC8Z,GAAD,CACAf,QAASA,EACTC,WAAYA,EACZtQ,sBAAuBA,EACvBC,yBAA0BA,MC3TpBF,GAAWD,KAAXC,OAIFhN,GAAmBC,MAAaC,MAAM,CAC3CnF,UAAWkF,MACThL,MAAM,cACNF,WACAqL,IAAI,EAAG,+CACTpF,SAAUiF,MACRhL,MAAM,YACNF,WACAqL,IAAI,EAAG,8CACThF,MAAO6E,MACLlL,SAAS,sCACTupB,IAAI,GAAI,uCACVje,SAAUJ,MACRhL,MAAM,YACNF,WACAqL,IAAI,EAAG,4CACTme,SAAUte,MACRhL,MAAM,kBACNF,WACAqL,IAAI,EAAG,mDAETjF,MAAO8E,MAAahL,MAAM,SAASkG,MAAM,gCAMpCmF,GAAgB,CACrBlF,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVujB,SAAU,GACVC,SAAU,GACVC,QAAS,GACTpe,SAAU,IAaLkL,GAAwB,SAAC9D,GAC9BC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAmb9B0M,GApaQ,SAAC,GAA+F,IAA7F5E,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BwR,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElE5e,EAAe,GAAI,eAF+C,mBAE9G6e,EAF8G,KAE5FC,EAF4F,OAG7Drc,mBAAS,IAHoD,mBAG9Gsc,EAH8G,KAGxFC,EAHwF,OAInEvc,mBAAS,IAJ0D,mBAI9Gwc,EAJ8G,KAI3FC,EAJ2F,OAMzEzc,mBAAS,IANgE,mBAM9G0c,EAN8G,KAM9FC,EAN8F,OAO/E3c,mBAAS,IAPsE,mBAO9G4c,EAP8G,KAOjGC,EAPiG,OASlEtf,EAClD,GACA,eAXoH,mBAS9Guf,EAT8G,KAS5FC,EAT4F,OAcxExf,EAAe,GAAI,YAdqD,mBAc9Gyf,EAd8G,KAc/FC,EAd+F,OAgB/Ejd,mBAAS,IAhBsE,gCAiBrFA,mBAAS,KAjB4E,mBAsB/G9B,GAtB+G,UAsBnG,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAESif,EAAuB,CAEnDzgB,KAAM,CACLhD,MAAOuF,EAAOvF,MACdD,MAAOwF,EAAOxF,MACdkF,SAAUM,EAAON,SACjBke,SAAU5d,EAAO4d,SACjBC,SAAU7d,EAAO6d,SACjBzjB,UAAW4F,EAAO5F,UAClBC,SAAU2F,EAAO3F,SACjBC,QAAS6jB,EACT5jB,KAAM8jB,KAbY,QAEdU,EAFc,SAmB4B,OAA1BA,EAAe1lB,QArENyN,OAsE9BD,EArEFE,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAoE1CwZ,EAAgB,GAAD,oBAAKD,GAAL,cACdlnB,GAAIkoB,EAAc,IAAU,GAC5BhoB,IAAKgoB,EAAc,IAAU,IAE1BA,MAEJxS,GAAyB,GACzBtM,EAAQsO,aAGR3D,KAKD3K,EAAQC,eAAc,GArCF,iCAlDU,IAAC4G,IAkDX,OAAH,yDA0CZkY,EAAe,SAACxqB,GACrB8pB,EAAqB9pB,IAGhByqB,EAAkB,SAACzqB,GACxB4pB,EAAwB5pB,IAGzBuK,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2f,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe1pB,OAAS,IAEvC+oB,EAAiBW,EAAenpB,KAAI,SAACuE,GAC1C,MAAO,CACN9F,MAAO8F,EAAQxF,KACfA,KAAMwF,EAAQxF,SAGhB0pB,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpgB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6f,EAAoB,CAC7CnpB,WAAY,CACXE,aAAc,CACbyE,QAAS6jB,MAJK,QACXiB,EADW,SAUEA,EAAY5pB,OAAS,IAEjCipB,EAAcW,EAAYrpB,KAAI,SAACwE,GACpC,MAAO,CACN/F,MAAO+F,EAAKzF,KACZA,KAAMyF,EAAKzF,SAGb4pB,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAKJ,IAAM3P,EAAe,SAACvN,GACrBsL,GAAyB,IAIpBpM,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAO5F,WACP4F,EAAO3F,UACP2F,EAAON,UACPM,EAAOvF,OACPuF,EAAO4d,WAWV,OACC,kBAAC,IAAD,CACCvd,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC3L,MAAO,CACN2V,IAAK,QAKNG,UAAW,CACVjK,OAAQ,IACR+D,QAAS,QAEV/M,MAAM,mBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAK7C,yBAAKrL,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,aACNE,MAAOwL,EAAO5F,UACdtF,KAAK,YACLF,QAAU+L,EAAQvG,WAAaqG,EAAOrG,YACnCsG,GAAgBud,EAAiBjgB,MAAjB,gBAEnBnJ,YAAc8L,EAAQvG,WAAaqG,EAAOrG,YACvCsG,GAAgBud,EAAiBjgB,MAAjB,gBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,YACNE,MAAOwL,EAAO3F,SACdvF,KAAK,WACLF,QAAU+L,EAAQtG,UAAYoG,EAAOpG,WAClCqG,GAAgBud,EAAiBjgB,MAAjB,eAEnBnJ,YAAc8L,EAAQtG,UAAYoG,EAAOpG,WACtCqG,GAAgBud,EAAiBjgB,MAAjB,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOvF,MACd3F,KAAK,QACLF,QAAU+L,EAAQlG,OAASgG,EAAOhG,QAC/BiG,GAAgBud,EAAiBjgB,MAAjB,YAEnBnJ,YAAc8L,EAAQlG,OAASgG,EAAOhG,QACnCiG,GAAgBud,EAAiBjgB,MAAjB,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOxF,MACd1F,KAAK,QACLF,QAAU+L,EAAQnG,OAASiG,EAAOjG,QAC/BkG,GAAgBud,EAAiBjgB,MAAjB,YAEnBnJ,YAAc8L,EAAQnG,OAASiG,EAAOjG,QACnCkG,GAAgBud,EAAiBjgB,MAAjB,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,cAcpB,yBAAKzL,MAAO,CACXyP,YAAa,SAEb,kBAAC1Q,EAAD,CACCI,MAAM,WACNE,MAAOwL,EAAON,SACd5K,KAAK,WACLF,QAAU+L,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBud,EAAiBjgB,MAAjB,eAEnBnJ,YAAc8L,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBud,EAAiBjgB,MAAjB,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,gBAOnB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiBgpB,EAAiBjgB,MAAjB,cAA8C,QAAU,GACzE9I,KAAM+oB,EAAiBjgB,MAAjB,eAGN,kBAAC,KAAD,CACCshB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,mBAAmB8C,MAAOyJ,KAAMK,yBACpEiP,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,mBACZiC,iBAAiB,WACjBpe,SAAUuqB,EACVlM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F4N,EAAiBrgB,MACjBqgB,EAAiBjoB,KAAKlB,OAAS,GAC/B+oB,EAAexoB,KAAI,SAACkd,GACnB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,YAUjD,yBAAKC,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiBgpB,EAAiBjgB,MAAjB,WAA2C,QAAU,GACtE9I,KAAM+oB,EAAiBjgB,MAAjB,YAGN,kBAAC,KAAD,CACCjJ,UAAU,kBACVuqB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,yBAAyB8C,MAAOyJ,KAAMK,yBAC1EiP,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,gBACZiC,iBAAiB,WACjBpe,SAAUsqB,EACVjM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F8N,EAAcvgB,MACdugB,EAAcnoB,KAAKlB,OAAS,GAC5BipB,EAAY1oB,KAAI,SAACkd,GAChB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,aAQlD,yBAAKK,MAAO,CACXsP,UAAW,UAKZ,yBAAK1P,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,UACNE,MAAOwL,EAAO4d,SACd9oB,KAAK,WACLF,QAAU+L,EAAQid,UAAYnd,EAAOmd,WAClCld,GAAgBud,EAAiBjgB,MAAjB,eAEnBnJ,YAAc8L,EAAQid,UAAYnd,EAAOmd,WACtCld,GAAgBud,EAAiBjgB,MAAjB,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,wBACNE,MAAOwL,EAAO6d,SACd/oB,KAAK,WACLF,QAAU+L,EAAQkd,UAAYpd,EAAOod,WAClCnd,GAAgBud,EAAiBjgB,MAAjB,eAEnBnJ,YAAc8L,EAAQkd,UAAYpd,EAAOod,WACtCnd,GAAgBud,EAAiBjgB,MAAjB,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,uBCjenByL,GAAWD,KAAXC,OAGFhN,GAAmBC,MAAaC,MAAM,CACxCnF,UAAWkF,MACRhL,MAAM,aACNF,WACAqL,IAAI,EAAG,+CACVpF,SAAUiF,MACPhL,MAAM,YACNF,WACAqL,IAAI,EAAG,6CACVhF,MAAO6E,MACJlL,SAAS,sCACTupB,IAAI,GAAI,uCACXje,SAAUJ,MACPhL,MAAM,YACNF,WACAqL,IAAI,EAAG,4CACVme,SAAUte,MACPhL,MAAM,kBACNF,WACAqL,IAAI,EAAG,mDAEVjF,MAAO8E,MAAahL,MAAM,SAASkG,MAAM,gCAerCoQ,GAAwB,SAAC9D,GAChCC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAoY/B6O,GAlXG,SAAC,GAA6E,IAA3ElZ,EAA0E,EAA1EA,SAAUgN,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAAS6W,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EACrC5e,EAAe,GAAI,kBADkB,mBACvFmgB,EADuF,KAClEC,EADkE,OAIvC3d,mBAAS,IAJ8B,mBAIvFsc,EAJuF,KAIlEC,EAJkE,OAK1Cvc,mBAAS,IALiC,mBAKpFwc,EALoF,KAKlEC,EALkE,OAOhDzc,mBAAS,IAPuC,mBAOpF0c,EAPoF,KAOrEC,EAPqE,OAQtD3c,mBAAS,IAR6C,mBAQpF4c,EARoF,KAQxEC,EARwE,OAUxCtf,EAC/C,GACA,eAZuF,mBAUpFuf,EAVoF,KAUlEC,EAVkE,OAe5Cxf,EAAe,GAAI,YAfyB,mBAelFyf,EAfkF,KAenEC,EAfmE,OAiBnDjd,mBAAS,IAjB0C,gCAkBzDA,mBAAS,KAlBgD,mBAuBxF9B,GAvBwF,UAuB5E,uCAAG,WAAOC,EAAcC,GAArB,qBAAAhB,EAAA,sEACaugB,EAA0B,CAC3D7pB,WAAY,CACXE,aAAc,CACZgB,GAAImJ,EAAOnJ,KAGd4G,KAAM,CACLhD,MAAOuF,EAAOvF,MACLD,MAAOwF,EAAOxF,MACdkF,SAAUM,EAAON,SACjBke,SAAU5d,EAAO4d,SACjBC,SAAU7d,EAAO6d,SACjBzjB,UAAW4F,EAAO5F,UAClBC,SAAU2F,EAAO3F,SACjBC,QAAS6jB,EACT5jB,KAAM8jB,KAhBI,QACboB,EADa,SAsBmC,OAA7BA,EAAkBpmB,QA5EbyN,OA6E7BD,EA5EHE,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BA+ElCsF,EAJc,WACrB,OAAOiU,EAAahoB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQ6D,EAAStD,IAG3C4c,GAGRhJ,EAAcnV,OAAOoV,OAAO,GAAIiS,QAAQ7S,GAA1BxU,OAAA,IAAAA,CAAA,GAAuCmqB,IACrD1C,EAXkD,uBAW9BgB,EAAa1nB,MAAM,EAAGyT,IAXQ,CAWAW,GAXA,aAWgBsT,EAAa1nB,MAAMyT,EAAQ,KACnGkU,EAAgBjB,IAIlBnS,KAGC3K,EAAQC,eAAc,GACtBiH,GAAW,GA1CM,iCAtDU,IAACL,IAsDX,OAAH,yDA+CTkY,EAAe,SAACxqB,GAClB8pB,EAAqB9pB,IAGnByqB,EAAkB,SAACzqB,GACrB4pB,EAAwB5pB,IAG/BuK,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2f,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe1pB,OAAS,IAEvC+oB,EAAiBW,EAAenpB,KAAI,SAACuE,GAC1C,MAAO,CACN9F,MAAO8F,EAAQxF,KACfA,KAAMwF,EAAQxF,SAGhB0pB,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACK,IAGHpgB,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACS6f,EAAoB,CACjCnpB,WAAY,CACRE,aAAc,CACZyE,QAAS6jB,MAJX,QACXiB,EADW,SAUEA,EAAY5pB,OAAS,IAEjCipB,EAAcW,EAAYrpB,KAAI,SAACwE,GACpC,MAAO,CACN/F,MAAO+F,EAAKzF,KACZA,KAAMyF,EAAKzF,SAGb4pB,EAAeD,IAlBC,2CAAH,qDAsBfY,KACK,CAAClB,IAQP,IAAM3P,EAAe,SAACvN,GACfkG,GAAW,IAKVhH,EAA4B,SAACH,EAAOI,GAC3C,QAAIA,GACOJ,EAAO5F,WACP4F,EAAO3F,UACP2F,EAAON,UACPM,EAAOvF,OACPuF,EAAO4d,WAMnB,OACC,kBAAC,IAAD,CACAvd,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPxF,KAGL,gBACCqG,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAalB,EAAakB,IAChC+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACfxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,IAE5C6K,UAAW,CACEjK,OAAQ,IACR+D,QAAS,SAGnB,yBAAKhQ,UAAU,mBACZ,yBAAKA,UAAU,yBACf,kBAACb,EAAD,CACHI,MAAM,aACNE,MAAOwL,EAAO5F,UACdtF,KAAK,YACLF,QAAU+L,EAAQvG,WAAaqG,EAAOrG,YACpCsG,GAAgB6e,EAAoBvhB,MAApB,gBAElBnJ,YAAc8L,EAAQvG,WAAaqG,EAAOrG,YACvCsG,GAAgB6e,EAAoBvhB,MAApB,gBACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,iBAIb,yBAAK7L,UAAU,yBACf,kBAACb,EAAD,CACHI,MAAM,YACNE,MAAOwL,EAAO3F,SACdvF,KAAK,WACLF,QAAU+L,EAAQtG,UAAYoG,EAAOpG,WACnCqG,GAAgB6e,EAAoBvhB,MAApB,eAElBnJ,YAAc8L,EAAQtG,UAAYoG,EAAOpG,WACtCqG,GAAgB6e,EAAoBvhB,MAApB,eACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,iBAYV,yBAAK7L,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACb,EAAD,CACHI,MAAM,QACNE,MAAOwL,EAAOvF,MACd3F,KAAK,QACLF,QAAU+L,EAAQlG,OAASgG,EAAOhG,QAChCiG,GAAgB6e,EAAoBvhB,MAApB,YAElBnJ,YAAc8L,EAAQlG,OAASgG,EAAOhG,QACnCiG,GAAgB6e,EAAoBvhB,MAApB,YACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,aAIb,yBAAK7L,UAAU,yBACf,kBAACb,EAAD,CACHI,MAAM,QACNE,MAAOwL,EAAOxF,MACd1F,KAAK,QACLF,QAAU+L,EAAQnG,OAASiG,EAAOjG,QAChCkG,GAAgB6e,EAAoBvhB,MAApB,YAElBnJ,YAAc8L,EAAQnG,OAASiG,EAAOjG,QACnCkG,GAAgB6e,EAAoBvhB,MAApB,YACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,cActB,yBAAK7L,UAAU,mBACN,yBAAKA,UAAU,yBACf,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACN8d,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,mBACZiC,iBAAiB,WACjBre,aAAc0F,GAAYA,EAASG,QACnC5F,SAAUuqB,EACVlM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F4N,EAAiBrgB,MACjBqgB,EAAiBjoB,KAAKlB,OAAS,GAC/B+oB,EAAexoB,KAAI,SAACkd,GACnB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,WAIxC,yBAAKC,UAAU,yBACf,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACNN,aAAc0F,GAAYA,EAASI,KACnCsY,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,gBACZiC,iBAAiB,WACjBpe,SAAUsqB,EACVjM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F8N,EAAcvgB,MACdugB,EAAcnoB,KAAKlB,OAAS,GAC5BipB,EAAY1oB,KAAI,SAACkd,GAChB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,YAOrC,yBAAKK,MAAO,CACRsP,UAAW,UAKf,yBAAK1P,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACb,EAAD,CACHI,MAAM,UACNE,MAAOwL,EAAO4d,SACd9oB,KAAK,WACLF,QAAU+L,EAAQid,UAAYnd,EAAOmd,WACnCld,GAAgB6e,EAAoBvhB,MAApB,eAElBnJ,YAAc8L,EAAQid,UAAYnd,EAAOmd,WACtCld,GAAgB6e,EAAoBvhB,MAApB,eACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,gBAIb,yBAAK7L,UAAU,yBACf,kBAACb,EAAD,CACHI,MAAM,wBACNE,MAAOwL,EAAO6d,SACd/oB,KAAK,WACLF,QAAU+L,EAAQkd,UAAYpd,EAAOod,WACnCnd,GAAgB6e,EAAoBvhB,MAApB,eAElBnJ,YAAc8L,EAAQkd,UAAYpd,EAAOod,WACtCnd,GAAgB6e,EAAoBvhB,MAApB,eACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,uBC5ZdmO,GAAwBC,KAAxBD,OACAE,IADwBD,KAAhBE,YACGhb,IAAX+a,QA+BFE,GAAU,SAAC,GAA0C,IAAzCzY,EAAwC,EAAxCA,KAAKsnB,EAAmC,EAAnCA,gBAAmC,EACzBnc,oBAAS,GADgB,mBAC/CqF,EAD+C,KACvCC,EADuC,OAEGtF,oBAAS,GAFZ,mBAE/CwN,EAF+C,KAEzBC,EAFyB,OAKGlQ,EAAe,GAAI,kBALtB,mBAK1BsgB,GAL0B,WAM9CC,EAAoB,uCAAG,WAAO9oB,GAAP,iBAAAoI,EAAA,sEACKygB,EAA0B,CACxD/pB,WAAY,CACVE,aAAc,CACZgB,SAJqB,QACrB+oB,EADqB,SAWsB,OAA7BA,EAAkBvmB,SA5CbyN,EA6CJ,mBA5C5BC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BA0CnCqb,EAAmBnpB,EAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACzDmnB,EAAgB6B,IAdc,iCAjCH,IAAC/Y,IAiCE,OAAH,sDAmB5B,OACI,oCACA,kBAAC,KAAD,CAMAsE,KAAK,QAELyE,WAAYnZ,GAGV,kBAAC,GAAD,CACCsB,MAAM,QACN8X,UAAU,QACV/Y,IAAI,KACJhC,UAAU,yBAKZ,kBAAC,GAAD,CACEiD,MAAM,aACN8X,UAAU,YACV/Y,IAAI,KACJhC,UAAU,yBAIZ,kBAAC,GAAD,CACEiD,MAAM,YACN8X,UAAU,WACV/Y,IAAI,KACJhC,UAAU,yBAMrB,kBAAC,GAAD,CACWiD,MAAM,UACN8X,UAAU,UACV/Y,IAAI,KACJhC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAIrB,kBAAC,GAAD,CACWiD,MAAM,UACN8X,UAAU,UACV/Y,IAAI,KACJhC,UAAU,uBACVgb,OAAQ,SAACnY,EAAMoY,GAAP,OACP,kBAAC,KAAD,CAAO5E,KAAK,UAEZ,4BACE,kBAAC,KAAD,KACGxT,QAoCT,kBAAC,GAAD,CAEA7C,UAAU,uBACRiD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UACV,uBAAGnG,KAAK,MACP,kBAAC,KAAD,CAASJ,UAAU,MAAM7M,MAAM,uBAChC,0BAAMjD,UAAU,WAAWmM,QAAS,WAClCiG,GAAW,GACXmI,EAAyBU,KAE3B,kBAACG,GAAA,EAAD,SASC,kBAAC,KAAD,CAEAnE,UAAW,kBAAM2T,EAAqB3P,EAAOnZ,KAC7CmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAElD,0BACElX,UAAU,4BAEV,kBAAC8W,GAAA,EAAD,aAYRwD,GAA2B,kBAAC,GAAD,CAC5B0O,aAAcrnB,EACdsnB,gBAAiBA,EACjB7W,WAAYA,EACZD,QAASA,EACT/M,SAAUkV,MA4HC1N,gBAhHM,SAAC,GAAqB,EAApBkC,QAAqB,IAAD,EAGAhC,mBAAS,IAHT,mBAGhCkc,EAHgC,KAGnBC,EAHmB,OAKU5e,EAAe,GAAI,gBAL7B,mBAKhC0gB,EALgC,KAKjBC,EALiB,KAQvChhB,qBAAU,YACS,uCAAG,4BAAAE,EAAA,sEACK8gB,EAAwB,IAD7B,OACbC,EADa,OAGnBhC,EAAgBgC,GAHG,2CAAH,qDAKlBC,KACC,IAMJ,IArByC,EAiCgBpe,oBAAS,GAjCzB,mBAiClCyK,EAjCkC,KAiCZC,EAjCY,KAuC1C,OACC,oCAIE,yBAAKxX,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,aAKA,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,oBACZC,SAAU,SAAAtc,GAAK,OArCF,SAACA,GACpB,GAAGsrB,EAAcppB,KAAKlB,OAAS,EAAG,CAChC,IAAMqqB,EAAkBC,EAAcppB,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKic,cAAc9a,SAASzB,EAAMuc,kBACjGiN,EAAgB6B,IAkCM7O,CAAaxc,OAI7B,kBAAC,IAAD,CAEFO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAMqL,GAAyB,KAJtC,YAWA,yBAAKxX,UAAU,uCAWxB,yBAAKA,UAAU,uCACT+qB,EAAcxhB,MAAQyf,EAAavoB,OAAS,GAAK,kBAAC,GAAD,CAClDwoB,gBAAiBA,EAChBtnB,KAAMqnB,IACN+B,EAAczhB,WAAa,kBAAC4S,GAAD,MAC3B6O,EAAcxhB,QAAUyf,EAAavoB,OAAS,IACpD,kBAAC,GAAD,CAAOwC,MAAM,sBAMf8nB,EAAcxhB,MACX,kBAAC4hB,GAAD,CACAlC,gBAAiBA,EACX1R,sBAAuBA,EACvBC,yBAA0BA,EAC1BwR,aAAc+B,EAAcppB,WC1U9BqY,GAAwBC,KAAxBD,OACAE,IADwBD,KAAhBE,YACGhb,IAAX+a,QAEFvY,GAAO,CACZ,CACCK,IAAK,IACLiB,MAAO,YACD0C,QAAS,2BACTylB,aAAc,4BAIrB,CACCppB,IAAK,IACLiB,MAAO,uBACD0C,QAAS,2BACTylB,aAAc,4BAGrB,CACCppB,IAAK,IACLiB,MAAO,iBACD0C,QAAS,2BACTylB,aAAc,6BAShBhR,GAAU,WAAO,IAAD,EACWtN,oBAAS,GADpB,mBACXqF,EADW,KACHC,EADG,KAgBlB,OACI,oCACA,kBAAC,KAAD,CAKA0I,WAAYnZ,IAEV,kBAAC,GAAD,CAAQsB,MAAM,QAAQ8X,UAAU,QAAQ/Y,IAAI,UAC5C,kBAAC,GAAD,CAAQiB,MAAM,UAAU8X,UAAU,UAAU/Y,IAAI,YAChD,kBAAC,GAAD,CAAQiB,MAAM,gBAAgB8X,UAAU,eAAe/Y,IAAI,iBAC7D,kBAAC,GAAD,CACEiB,MAAM,SACNjB,IAAI,SACJgZ,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UACV,uBAAGlK,QAAS,kBAAMiG,GAAW,IAAOlC,KAAK,MAAzC,cACA,kBAAC,KAAD,CAASJ,UAAU,MAAM7M,MAAM,mBAC/B,uBAAGiN,KAAK,MAAR,gBAQR,kBAAC,KAAD,CACIjN,MAAM,aACNkP,QAASA,EACT6D,KAzCW,SAAC9J,GACdkG,GAAW,IAyCT6D,SArCiB,SAAC/J,GACpBkG,GAAW,QAsFJxF,gBAnCG,SAAC,GAAsB,IAArBkC,EAAoB,EAApBA,QAGnB,OACC,yBAAK9O,UAAU,yBACL,yBAAKA,UAAU,iCACf,wBAAIA,UAAU,uCAAd,SACA,kBAAC,IAAD,CACFR,KAAK,UACLkH,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAM2C,EAAQU,KAAK,eAH1B,YAUA,yBAAKxP,UAAU,sCACf,kBAAC,GAAD,CACN8b,YAAY,iBACZzF,KAAK,QACL0F,SAAU,SAAAtc,GAAK,OAAImF,QAAQC,IAAIpF,IAC/BW,MAAO,CAAE6M,MAAO,QAMnB,yBAAKjN,UAAU,uCACd,kBAAC,GAAD,WCxHWqrB,GAJI,SAACxe,GACnB,OAAO,4CCKFvC,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,wCACrEzI,YAAasI,MAAahL,MAAM,eAAeF,SAAS,6BAsH1Cif,GAzGG,SAAC,GAA8C,IAA5Czc,EAA2C,EAA3CA,SAAUuQ,EAAiC,EAAjCA,WAAYD,EAAqB,EAArBA,QAAqB,EACN9H,EAAe,GAAI,kBADb,mBACxDkU,EADwD,KACnCC,EADmC,KAGzDxT,EAAY,uCAAG,WAAOC,EAAcC,GAArB,SAAAhB,EAAA,sEACasU,EAA0B,CAC3D5d,WAAY,CACXE,aAAc,CACZgB,GAAImJ,EAAOnJ,KAGd4G,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkC,YAAagJ,EAAOhJ,eATD,cAanBiJ,EAAQC,eAAc,GAbH,2CAAH,wDAiBZsO,EAAe,SAACvN,GACfkG,GAAW,IAKVhH,EAA4B,SAACH,EAAOI,GAC3C,QAAIJ,EAAOlL,MAASkL,EAAOhJ,aAAgBoJ,IAM5C,OACC,kBAAC,IAAD,CACAC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP/I,KAGL,gBACC4J,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAalB,EAAakB,IAChC+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACfxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,KAG7C,kBAAClM,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgB4S,EAAoBtV,MAApB,WAElBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgB4S,EAAoBtV,MAApB,WACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,WAGjB,kBAAC,GAAD,CACCtM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cACtC0J,GAAgB4S,EAAoBtV,MAApB,kBAElBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACzC0J,GAAgB4S,EAAoBtV,MAApB,kBACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,wB,8BCwBPyf,G,6MAvIbliB,MAAQ,CACN3E,KAAM,GACN8mB,cAAc,EACd9H,WAAY,GACZ+H,gBAAiB,EACjBC,eAAgB,I,EAGlBC,YAAc,SAAAC,GACZ,IAAMlnB,EAAO,EAAK2E,MAAM3E,KAAKsP,QAAO,SAAArP,GAAG,OAAIA,IAAQinB,KACnD,EAAKC,SAAS,CAAEnnB,U,EAGlBonB,UAAY,WACV,EAAKD,SAAS,CAAEL,cAAc,IAAQ,kBAAM,EAAKtN,MAAM6N,Y,EAGzDC,kBAAoB,SAAA7f,GAClB,EAAK0f,SAAS,CAAEnI,WAAYvX,EAAE3E,OAAO9H,S,EAGvCusB,mBAAqB,WAAO,IAClBvI,EAAe,EAAKra,MAApBqa,WACFhf,EAAS,EAAK2E,MAAd3E,KACFgf,IAA4C,IAA9Bhf,EAAKlD,QAAQkiB,KAC7Bhf,EAAI,uBAAOA,GAAP,CAAagf,KAEnB,EAAKmI,SAAS,CACZnnB,OACA8mB,cAAc,EACd9H,WAAY,M,EAIhBwI,sBAAwB,SAAA/f,GACtB,EAAK0f,SAAS,CAAEH,eAAgBvf,EAAE3E,OAAO9H,S,EAG3CysB,uBAAyB,WACvB,EAAKN,UAAS,YAA+C,IAA5CnnB,EAA2C,EAA3CA,KAAM+mB,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eAC/BU,EAAO,aAAO1nB,GAGpB,OAFA0nB,EAAQX,GAAkBC,EAEnB,CACLhnB,KAAM0nB,EACNX,gBAAiB,EACjBC,eAAgB,Q,EAKtBW,aAAe,SAAAnO,GACb,EAAKA,MAAQA,G,EAGfoO,iBAAmB,SAAApO,GACjB,EAAKqO,UAAYrO,G,yEAGT,IAAD,SACoEjW,KAAKoB,MAAxE3E,EADD,EACCA,KAAM8mB,EADP,EACOA,aAAc9H,EADrB,EACqBA,WAAY+H,EADjC,EACiCA,eAAgBC,EADjD,EACiDA,eACxD,OACE,oCACGhnB,EAAKzD,KAAI,SAAC0D,EAAKqQ,GACd,GAAIyW,IAAmBzW,EACrB,OACE,kBAAC,IAAD,CACEwX,IAAK,EAAKF,iBACVrqB,IAAK0C,EACL2R,KAAK,QACLrW,UAAU,YACVP,MAAOgsB,EACP9rB,SAAU,EAAKssB,sBACfrK,OAAQ,EAAKsK,uBACbM,aAAc,EAAKN,yBAKzB,IAAMO,EAAY/nB,EAAIjE,OAAS,GAEzBisB,EACJ,kBAAC,KAAD,CACE1sB,UAAU,WACVgC,IAAK0C,EACLioB,SAAoB,IAAV5X,EACV6X,QAAS,kBAAM,EAAKlB,YAAYhnB,KAEhC,0BACEmoB,cAAe,SAAA3gB,GACC,IAAV6I,IACF,EAAK6W,SAAS,CAAEJ,eAAgBzW,EAAO0W,eAAgB/mB,IAAO,WAC5D,EAAK4nB,UAAUR,WAEjB5f,EAAEwY,oBAIL+H,EAAS,UAAM/nB,EAAIpD,MAAM,EAAG,IAAnB,OAA8BoD,IAI9C,OAAO+nB,EACL,kBAAC,KAAD,CAASxpB,MAAOyB,EAAK1C,IAAK0C,GACvBgoB,GAGHA,KAGHnB,GACC,kBAAC,IAAD,CACAnrB,MAAO,CACL6L,OAAQ,UAERsgB,IAAKvkB,KAAKokB,aACV5sB,KAAK,OACL6W,KAAK,QACLrW,UAAU,YACVP,MAAOgkB,EACP9jB,SAAUqI,KAAK+jB,kBACfnK,OAAQ5Z,KAAKgkB,mBACbQ,aAAcxkB,KAAKgkB,sBAGrBT,GACA,kBAAC,KAAD,CAAKvrB,UAAU,gBAAgBmM,QAASnE,KAAK6jB,WAC3C,kBAAClS,GAAA,EAAD,MADF,mB,GA/HqBmT,IAAMC,WCkC/BziB,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,wCACrEzI,YAAasI,MAAahL,MAAM,eAAeF,SAAS,6BAInDuL,GAAgB,CACrB7K,KAAM,GACNkC,YAAa,IAIN+X,GAAwBC,KAAxBD,OACAE,IADwBD,KAAhBE,YACGiO,IAAXlO,QAIFE,GAAU,SAAC,GAAY,IAAXzY,EAAU,EAAVA,KAAU,EACKmL,oBAAS,GADd,mBACjBqF,EADiB,KACTC,EADS,OAE8BtF,oBAAS,GAFvC,mBAEpBwN,EAFoB,KAEEC,EAFF,OAGuBlQ,EAAe,GAAI,aAH1C,mBAGDge,GAHC,WAMrB1N,EAAoB,uCAAG,WAAO7Y,GAAP,SAAAoI,EAAA,sEACKme,EAAqB,CAC9CznB,WAAY,CACVE,aAAc,CACZgB,SAJgB,yDAAH,sDAsBvB,OACI,oCACC,kBAAC,KAAD,CAMDuU,KAAK,QAELyE,WAAYnZ,GAGV,kBAAC,GAAD,CACCsB,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAIrB,kBAAC,GAAD,CACWiD,MAAM,cACN8X,UAAU,cACV/Y,IAAI,KACJhC,UAAU,yBAGb,kBAAC,GAAD,CAEAA,UAAU,uBACRiD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UAET,kBAAC,KAAD,CAASvG,UAAU,MAAM7M,MAAM,kBAChC,0BAAMjD,UAAU,WAAWmM,QAAS,WAClCiG,GAAW,GACXmI,EAAyBU,KAE3B,kBAACG,GAAA,EAAD,QAOA,kBAAC,KAAD,CAAStL,UAAU,MAAM7M,MAAM,cAGhC,0BACAjD,UAAU,2BACVmM,QAAS,kBAAMwO,EAAqBM,EAAOnZ,MAE3C,kBAACgV,GAAA,EAAD,aAcVwD,GAA2B,kBAAC,GAAD,CAC1BlI,WAAYA,EACZD,QAASA,EACTtQ,SAAUyY,MA8MC0S,GAlLO,SAAC,GAAiB,eACvC,IAAMzM,EAAW7W,EAAS,GAAI,GAAI,YAAa,CAC9C9I,WAAY,CACVC,OAAQ,CACT4a,eAAe,MAJqB,EASqBpR,EAAe,GAAI,kBATxC,mBAS7BkU,EAT6B,KASRC,EATQ,OAUqB1R,oBAAS,GAV9B,mBAc9B9B,GAd8B,UAclB,uCAAG,WAAOC,EAAcC,GAArB,SAAAhB,EAAA,sEACUsU,EAA0B,CACxD5d,WAAY,CACXE,aAAc,CACfgB,GAAImJ,EAAOnJ,KAGX4G,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkC,YAAagJ,EAAOhJ,eATD,cAatBiJ,EAAQC,eAAc,GAbA,2CAAH,yDAoBbC,EAA4B,SAACH,EAAOI,GACxC,QAAIJ,EAAOlL,MAASkL,EAAOhJ,aAAgBoJ,IAkB9C,OACC,yBAAKrL,UAAU,yBAAyBI,MAAO,CAAE4P,QAAS,sBAAuByU,UAAW,MAC3F,yBAAKzkB,UAAU,mCACd,wBAAIA,UAAU,yBAAd,kBAED,yBAAKA,UAAU,8DACd,yBAAKA,UAAU,4CACf,kBAAC,IAAD,CACFsL,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACD,kBAAC5M,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgB4S,EAAoBtV,MAApB,WAElBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgB4S,EAAoBtV,MAApB,WACnBtJ,SAAU,SAACuM,GACXT,EAAaS,GACbL,EAAgB,WAIhB,yBAAKzL,MAAO,CACXsP,UAAW,SAIb,wBAAI1P,UAAU,mBAAd,WAED,kBAACitB,GAAD,MACG,kBAAC,IAAD,CACA7sB,MAAO,CACNsO,QAAS,QACTgB,UAAW,QAEZlQ,KAAK,UACL2M,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCtM,SAAUwL,EAA0BH,EAAOI,GAC3Ce,QAAST,GART,eAmBS,yBAAK3L,UAAU,6CAE3B,yBAAKA,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,+CAMf,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,sBACZC,SAAU,SAAAtc,GAAK,OAAImF,QAAQC,IAAIpF,QAe7B,yBAAKO,UAAU,uCAWxB,yBAAKA,UAAU,uCACbugB,EAAShX,MAAQgX,EAAS5e,KAAKlB,OAAS,GAAK,kBAAC,GAAD,CAASkB,KAAM4e,EAAS5e,OACrE4e,EAASjX,WAAa,kBAAC4S,GAAD,YCvVnB5E,GAAWD,KAAXC,OAGFhN,GAAmBC,MAAaC,MAAM,CACxCzK,KAAMwK,MACDhL,MAAM,QACNF,WACAqL,IAAI,EAAG,yCACZzE,eAAgBsE,MACXhL,MAAM,oBACNF,WACAqL,IAAI,EAAG,qDACZnG,KAAMgG,MACDhL,MAAM,QACNF,WACAqL,IAAI,EAAG,2CAeVmL,GAAwB,SAAC9D,GAC3BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAiUpC6O,GApTG,SAAC,GAAuE,IAArElZ,EAAoE,EAApEA,SAAUgN,EAA0D,EAA1DA,WAAYD,EAA8C,EAA9CA,QAAS+a,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UAAuB,EAClC9iB,EAAe,GAAI,eADe,mBAC9E+iB,EAD8E,KAC5DC,EAD4D,OAI7BvgB,mBAAS,IAJoB,mBAI9Esc,EAJ8E,KAIxDC,EAJwD,OAKnCvc,mBAAS,IAL0B,mBAK9Ewc,EAL8E,KAK3DC,EAL2D,OAOzCzc,mBAAS,IAPgC,mBAO9E0c,EAP8E,KAO9DC,EAP8D,OAQ/C3c,mBAAS,IARsC,mBAQ9E4c,EAR8E,KAQjEC,EARiE,OAUlCtf,EAC/C,GACA,eAZiF,mBAU9Euf,EAV8E,KAU5DC,EAV4D,OAexCxf,EAAe,GAAI,YAfqB,mBAe9Eyf,EAf8E,KAe/DC,EAf+D,OAiB/Cjd,mBAAS,IAjBsC,gCAkBrDA,mBAAS,KAlB4C,mBAsB/E9B,GAtB+E,UAsBnE,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEAGUmjB,EAAuB,CAE9C3kB,KAAM,CACF3I,KAAMkL,EAAOlL,KACbkG,eAAgBgF,EAAOhF,eACvB1B,KAAM0G,EAAO1G,KACbgB,QAAS6jB,EACT5jB,KAAM8jB,EACNljB,OAAQ,MAXC,QAGXknB,EAHW,SAgB2B,OAAxBA,EAAahpB,QAhERyN,OAiErBD,EAhERE,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAmEjCsF,EAJgB,WAClB,OAAOoY,EAAUnsB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQ6D,EAAStD,IAG7C4c,GAGRhJ,EAAcnV,OAAOoV,OAAO,GAAIwX,EAAUpY,GAA5BxU,OAAA,IAAAA,CAAA,GAAyC+sB,IACvDC,EAXwC,uBAWjBJ,EAAU7rB,MAAM,EAAGyT,IAXF,CAWUW,GAXV,aAW0ByX,EAAU7rB,MAAMyT,EAAQ,KAChGmY,EAAaK,IAIb1X,KAGJ3K,EAAQC,eAAc,GACtBiH,GAAW,GApCM,iCAhDO,IAACL,IAgDR,OAAH,yDA2CZkY,EAAe,SAACxqB,GAClB8pB,EAAqB9pB,IAGnByqB,EAAkB,SAACzqB,GACrB4pB,EAAwB5pB,IAG5BuK,qBAAU,YACY,uCAAG,8BAAAE,EAAA,sEACY2f,EAAuB,IADnC,QACXM,EADW,SAIKA,EAAe1pB,OAAS,IAEpC+oB,EAAiBW,EAAenpB,KAAI,SAACuE,GACvC,MAAO,CACH9F,MAAO8F,EAAQxF,KACfA,KAAMwF,EAAQxF,SAGtB0pB,EAAkBD,IAZL,2CAAH,qDAgBlBY,KACD,IAGHpgB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACY6f,EAAoB,CAC1CnpB,WAAY,CACRE,aAAc,CACVyE,QAAS6jB,MAJP,QACRiB,EADQ,SAUKA,EAAY5pB,OAAS,IAE9BipB,EAAcW,EAAYrpB,KAAI,SAACwE,GACjC,MAAO,CACH/F,MAAO+F,EAAKzF,KACZA,KAAMyF,EAAKzF,SAGnB4pB,EAAeD,IAlBL,2CAAH,qDAsBfY,KACD,CAAClB,IAQJ,IAAM3P,EAAe,SAACvN,GAClBkG,GAAW,IAKThH,EAA4B,SAACH,EAAQI,GACvC,QAAKA,GACAJ,EAAOlL,MACPkL,EAAOhF,gBACPgF,EAAO1G,OAOhB,OACI,kBAAC,IAAD,CACI+G,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJxF,KAGR,gBACGqG,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACXxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,IAEhD6K,UAAW,CACPjK,OAAQ,IACR+D,QAAS,SAKb,yBAAKhQ,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACb,EAAD,CACII,MAAM,OACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC3B4L,GAAgByhB,EAAiBnkB,MAAjB,WAEtBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgByhB,EAAiBnkB,MAAjB,WACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,YAI5B,yBAAK7L,UAAU,yBACX,kBAACb,EAAD,CACII,MAAM,mBACNE,MAAOwL,EAAOhF,eACdlG,KAAK,iBACLF,QAAU+L,EAAQ3F,gBAAkByF,EAAOzF,iBACrC0F,GAAgByhB,EAAiBnkB,MAAjB,qBAEtBnJ,YAAc8L,EAAQ3F,gBAAkByF,EAAOzF,iBACzC0F,GAAgByhB,EAAiBnkB,MAAjB,qBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,uBAiBhC,yBAAKzL,MAAO,CACRyP,YAAa,SAEb,kBAAC1Q,EAAD,CACII,MAAM,OACNE,MAAOwL,EAAO1G,KACdxE,KAAK,OACLF,QAAU+L,EAAQrH,MAAQmH,EAAOnH,OAC3BoH,GAAgByhB,EAAiBnkB,MAAjB,WAEtBnJ,YAAc8L,EAAQrH,MAAQmH,EAAOnH,OAC/BoH,GAAgByhB,EAAiBnkB,MAAjB,WACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,YAO5B,yBAAK7L,UAAU,mBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACI8d,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,mBACZiC,iBAAiB,WACjBre,aAAc0F,GAAYA,EAASG,QACnC5F,SAAUuqB,EACVlM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F4N,EAAiBrgB,MACdqgB,EAAiBjoB,KAAKlB,OAAS,GAC/B+oB,EAAexoB,KAAI,SAACkd,GAChB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,WAI5D,yBAAKC,UAAU,yBACX,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACI8d,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,gBACZiC,iBAAiB,WACjBre,aAAc0F,GAAYA,EAASI,KACnC7F,SAAUsqB,EACVjM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F8N,EAAcvgB,MACXugB,EAAcnoB,KAAKlB,OAAS,GAC5BipB,EAAY1oB,KAAI,SAACkd,GACb,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,YAOhE,yBAAKK,MAAO,CACRsP,UAAW,gBCnVnCsK,GAAwBC,KAAxBD,OACAE,IADwBD,KAAhBE,YACGhb,IAAX+a,QA+BFE,GAAU,SAAC,GAAuC,IAAtCzY,EAAqC,EAArCA,KAAKurB,EAAgC,EAAhCA,aAAgC,EACtBpgB,oBAAS,GADa,mBAC5CqF,EAD4C,KACpCC,EADoC,OAEMtF,oBAAS,GAFf,mBAE5CwN,EAF4C,KAEtBC,EAFsB,OAGAlQ,EAAe,GAAI,eAHnB,mBAG1BmjB,GAH0B,WAM3CC,EAAkB,uCAAG,WAAO3rB,GAAP,iBAAAoI,EAAA,sEACIsjB,EAAuB,CAClD5sB,WAAY,CACVE,aAAc,CACZgB,SAJmB,QACnB4rB,EADmB,SAUkB,OAA1BA,EAAeppB,SA3CPyN,EA4CJ,gBA3C5BC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAyCnCke,EAAgBhsB,EAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACtDorB,EAAaS,IAbe,iCAjCD,IAAC5b,IAiCA,OAAH,sDAmB1B,OACI,oCACA,kBAAC,KAAD,CAMAsE,KAAK,QAELyE,WAAYnZ,GAGV,kBAAC,GAAD,CACCsB,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,mBACN8X,UAAU,iBACV/Y,IAAI,KACJhC,UAAU,yBAOrB,kBAAC,GAAD,CACWiD,MAAM,UACN8X,UAAU,cACV/Y,IAAI,KACJhC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAIrB,kBAAC,GAAD,CACWiD,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,SACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBA+Bb,kBAAC,GAAD,CAEAA,UAAU,uBACRiD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UAET,kBAAC,KAAD,CAASvG,UAAU,MAAM7M,MAAM,qBAChC,0BAAMjD,UAAU,WAAWmM,QAAS,WAClCiG,GAAW,GACXmI,EAAyBU,KAE3B,kBAACG,GAAA,EAAD,QAQC,kBAAC,KAAD,CAEAnE,UAAW,kBAAMwW,EAAmBxS,EAAOnZ,KAC3CmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAElD,0BACElX,UAAU,4BAEV,kBAAC8W,GAAA,EAAD,aAeRwD,GAA2B,kBAAC,GAAD,CAC5BlI,WAAYA,EACZD,QAASA,EACT/M,SAAUkV,EACV6S,UAAWxrB,EACXurB,aAAcA,MAiIHtgB,gBAjHM,SAAC,GAAsB,IAArBkC,EAAoB,EAApBA,QAAoB,EAENhC,mBAAS,IAFH,mBAEhCqgB,EAFgC,KAEtBD,EAFsB,OAIK7iB,EAAe,GAAI,aAJxB,mBAIhCujB,EAJgC,KAIpBC,EAJoB,KAOvC7jB,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACM2jB,EAAsB,IAD5B,OACVC,EADU,OAGhBZ,EAAaY,GAHG,2CAAH,qDAKfC,KACC,IAdqC,MAoBgBjhB,oBAAS,GApBzB,6BAuC1C,OACC,oCAIE,yBAAK9M,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,UAKA,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,kBACZC,SAAU,SAAAtc,GAAK,OAjCF,SAACA,GACpB,GAAGmuB,EAAWjsB,KAAKlB,OAAS,EAAG,CAC7B,IAAMktB,EAAeC,EAAWjsB,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKmB,SAASzB,MACvEytB,EAAaS,IA8BU1R,CAAaxc,OAI9B,kBAAC,IAAD,CAEFO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAM2C,EAAQU,KAAK,gBAJ1B,YAWA,yBAAKxP,UAAU,uCAWxB,yBAAKA,UAAU,uCACT4tB,EAAWrkB,MAAQ4jB,EAAU1sB,OAAS,GAAK,kBAAC,GAAD,CAC5CysB,aAAcC,EACdxrB,KAAMwrB,IACLS,EAAWtkB,WAAa,kBAAC4S,GAAD,MAExB0R,EAAWrkB,QAAU4jB,EAAU1sB,OAAS,IACzC,kBAAC,GAAD,CAAOwC,MAAM,yB,8BClJN+qB,GAtKa,SAAC,GAMf,IALVjJ,EAKS,EALTA,YACAC,EAIS,EAJTA,eACAiJ,EAGS,EAHTA,UACA9pB,EAES,EAFTA,SACA4B,EACS,EADTA,KACS,EAGwCsE,EAC7C,GACA,qBALK,mBAGFkX,EAHE,KAGkB2M,EAHlB,OAOqBphB,mBAAS,IAP9B,mBAOFxJ,EAPE,KAOO6qB,EAPP,OAQyBrhB,oBAAS,GARlC,mBAQSshB,GART,WAWTpkB,qBAAU,WACNokB,GAAa,GACS,uCAAG,4BAAAlkB,EAAA,sEACCgkB,EAAmB,CACrCttB,WAAY,CACRE,aAAc,CACVgB,GAAImsB,MAJK,OACf3qB,EADe,OAUrB6qB,EAAW7qB,GACX8qB,GAAa,GAXQ,2CAAH,oDAatBC,KACD,IAkBH,IASMC,EAAoB,uCAAG,WAAO7uB,GAAP,yBAAAyK,EAAA,yDACX,UAAVzK,EADqB,oBAEJ,IAAb0E,EAFiB,iDAUf4Q,EAJsB,WACxB,OAAOgQ,EAAY/jB,KAAI,SAAA+E,GAAI,OAAIA,EAAKhE,OAAKR,QAAQ0sB,GAGvCtH,GAERjR,EAAcnV,OAAOoV,OAAO,GAAIoP,EAAYhQ,GAA9BxU,OAAA,IAAAA,CAAA,GAA2CwF,EAA3C,CAAiD5B,WAAYA,KAC3Eof,EAbe,uBAaWwB,EAAYzjB,MAAM,EAAGyT,IAbhC,CAawCW,GAbxC,aAawDqP,EAAYzjB,MAAMyT,EAAQ,KACvGiQ,EAAezB,GAdM,wBAsBfxO,EAJsB,WACxB,OAAOgQ,EAAY/jB,KAAI,SAAA+E,GAAI,OAAIA,EAAKhE,OAAKR,QAAQ0sB,GAGvCtH,GAERjR,EAAcnV,OAAOoV,OAAO,GAAIoP,EAAYhQ,GAA9BxU,OAAA,IAAAA,CAAA,GAA2CwF,EAA3C,CAAiD5B,WAAYA,KAC3Eof,EAzBe,uBAyBWwB,EAAYzjB,MAAM,EAAGyT,IAzBhC,CAyBwCW,GAzBxC,aAyBwDqP,EAAYzjB,MAAMyT,EAAQ,KACvGiQ,EAAezB,GA1BM,4CAAH,sDAmC1B,OACI,oCACKhC,EAAmBhY,MAAQhJ,OAAOC,KAAK+gB,EAAmB5f,MAAMlB,OAAS,GACtE,yBAAKT,UAAU,YAAYgC,IAAK,IAC5B,yBAAKhC,UAAU,6BACX,uBACImM,QAAS,WACLmiB,EAAqB,SAEzBtuB,UAAU,qBAGd,uBAAGA,UAAU,eAAemE,GAC5B,uBACIgI,QAAS,WACLmiB,EAAqB,UAEzBtuB,UAAU,wBAMlB,yBAEIsH,IAAKhE,EAAO,MACZ4B,IAAI,aACJ9E,MAAO,CACHwP,OAAQ,aAGhB,yBAAK5P,UAAU,kBACX,4BAIKsD,EAAO,MAEZ,gCAEMA,EAAO,WAAiBA,EAAO,WAAiBA,EAAO,kB,UC5FtEirB,GApCY,SAAC,GAGd,IAFVvJ,EAES,EAFTA,eACAD,EACS,EADTA,YAEA,OACI,yBAAK/kB,UAAU,6CACX,4BACI,8BACI,kBAACwuB,GAAA,EAAD,OAFR,kBAMA,yBAAKxuB,UAAU,qDACV+kB,EAAYtkB,OAAS,GAAKskB,EAAY/jB,KAAI,SAAA+E,GACvC,OAAO,kBAAC0oB,GAAD,CACHzJ,eAAgBA,EAChBD,YAAaA,EACbkJ,UAAWloB,EAAKhE,IAChBoC,SAAU4B,EAAK5B,SACf4B,KAAMA,SAIXgf,EAAYtkB,OAAS,IACpB,yBAAKL,MAAO,CACRuP,WAAY,SAEZ,kBAAC,GAAD,CAAO1M,MAAM,mBAAmBwL,OAAQ,UCrCxD6I,GAAWD,KAAXC,OAmEO8J,GAjEA,SAAC,GAA8B,IAA5BsN,EAA2B,EAA3BA,cAA2B,EACX5hB,mBAAS,IADE,mBAClC7E,EADkC,KACzBqY,EADyB,OAEKxT,mBAAS,IAFd,mBAEjB0U,GAFiB,aAGAnX,EAAe,GAAI,gBAHnB,mBAGlCgV,EAHkC,KAGtBmB,EAHsB,KA2CzC,OApBAxW,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACasW,EAAmB,IADhC,QACRiB,EADQ,SAIMA,EAAahhB,OAAS,IAEhCihB,EAAeD,EAAazgB,KAAI,SAACwD,GACnC,MAAO,CACH/E,MAAO+E,EAAM1C,GACb/B,KAAK,GAAD,OAAKyE,EAAMa,UAAX,YAAwBb,EAAMc,cAG1Cgb,EAAWoB,IAZD,2CAAH,qDAgBflC,KACD,IAGC,kBAAC,KAAD,CACI1B,YAAU,EACVzH,KAAK,SACLjW,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,oBACZiC,iBAAiB,WACjBpe,SA7CR,SAAkBF,GACd+hB,EAAmB/hB,GACnBivB,EAAcjvB,IA4CVkiB,QApCR,aAqCQC,OAzCR,aA0CQ7F,SAlCR,SAAkB8F,KAmCV7D,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9FqD,EAAW9V,MACR8V,EAAW1d,KAAKlB,OAAS,GACzBwH,EAAQjH,KAAI,SAACkd,GACT,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,WCoBjDmgB,IArFI7I,KAAXC,OAOK,SAAC,GAEA,IADVqX,EACS,EADTA,cACS,EACqB7hB,mBAAS,IAD9B,mBACF7E,EADE,KACOqY,EADP,OAEoCxT,mBAAS,IAF7C,mBAEF8hB,EAFE,KAEcC,EAFd,OAG8BxkB,EAAe,GAAI,eAHjD,mBAGFkW,EAHE,KAGQC,EAHR,KAKTxW,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACasW,EAAmB,CACxC5f,WAAY,CACRC,OAAQ,CACJ4a,eAAe,MAJf,QACNoF,EADM,SAUMA,EAAWpgB,OAAS,IAE5BqgB,EAAaD,EAAW7f,KAAI,SAAC0D,GAC/B,OAAOA,EAAI3E,QAEfugB,EAAWQ,IAfH,2CAAH,qDAoBbC,KACD,IA6BH,OACI,oCAEKR,EAAShX,MAAQgX,EAAS5e,KAAKlB,OAAS,GAAK,kBAAC,KAAD,CAC1C8M,KAAK,WACLuO,YAAY,kBACZrc,MAAOmvB,EACPjvB,SAhCS,SAACmvB,GAGlB,GAFAD,EAAmBC,GAEfvO,EAAShX,MAAQgX,EAAS5e,KAAKlB,OAAS,GAAKquB,EAAYruB,OAAS,EAAG,CACrE,IAAMkgB,EAAsBmO,EAAY9tB,KAAI,SAAC+E,GACzC,IAAM6a,EAAmBL,EAAS5e,KAAKyT,MACnC,SAAC7O,GAAD,OAASA,EAAIxG,KAAKic,gBAAkBjW,EAAKiW,iBAE7C,GAAI4E,EACA,OAAOA,EAAiB9e,MAGhC6sB,EAAchO,QAGdgO,EAAc,KAkBVvuB,MAAO,CAAE6M,MAAO,SAEfhF,EAAQ8L,QAAO,SAAAgb,GAAC,OAAKH,EAAe1tB,SAAS6tB,MAAI/tB,KAAI,SAAA+E,GAAI,OACtD,kBAAC,KAAOuR,OAAR,CAAetV,IAAK+D,EAAMtG,MAAOsG,GAC5BA,UC5CjBuR,GAAWD,KAAXC,OACA0X,GAASC,KAATD,KAWFnZ,GAAwB,SAAC9D,GAC9BC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBASvCnF,GAAmBC,MAAaC,MAAM,CAC3CnF,UAAWkF,MACThL,MAAM,cACNF,WACAqL,IAAI,EAAG,+CACTpF,SAAUiF,MACRhL,MAAM,aACNF,WACAqL,IAAI,EAAG,8CACThF,MAAO6E,MACLlL,SAAS,sCACTupB,IAAI,GAAI,uCACVje,SAAUJ,MACRhL,MAAM,YACNF,WACAqL,IAAI,EAAG,4CACTme,SAAUte,MACRhL,MAAM,kBACNF,WACAqL,IAAI,EAAG,mDAETjF,MAAO8E,MAAahL,MAAM,SAASkG,MAAM,gCAOpCmF,GAAgB,CACrBlF,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVujB,SAAU,GACVC,SAAU,GACVC,QAAS,GACTmG,eAAgB,IAKXC,GAAQ,CACb,CACClsB,MAAO,oBACPmsB,QAAS,IAGV,CACCnsB,MAAO,mBAGR,CACCA,MAAO,mBACPmsB,QAAS,IAEV,CACCnsB,MAAO,kBACPmsB,QAAS,IAEV,CACCnsB,MAAO,oBACPmsB,QAAS,KAitBIC,GAtsBK,SAAC,GAAgB,qBAEMhlB,EAAe,GAAI,YAF1B,mBAE5BilB,EAF4B,KAEbC,EAFa,OAGqBziB,mBAAS,IAH9B,mBAG5Bsc,EAH4B,KAGNC,EAHM,OAIevc,mBAAS,IAJxB,mBAI5Bwc,EAJ4B,KAITC,EAJS,OAKCzc,mBAAS,IALV,mBAK5B0iB,EAL4B,KAKhBb,EALgB,OAMG7hB,mBAAS,IANZ,mBAM5BiY,EAN4B,KAMfC,EANe,OAOClY,mBAAS,IAPV,mBAOhB4hB,GAPgB,aASS5hB,mBAAS,IATlB,mBAS5B0c,EAT4B,KASZC,EATY,OAUG3c,mBAAS,IAVZ,mBAU5B4c,EAV4B,KAUfC,EAVe,OAYgBtf,EAClD,GACA,eAdkC,mBAY5Buf,EAZ4B,KAYVC,EAZU,OAiBUxf,EAAe,GAAI,YAjB7B,mBAiB5Byf,EAjB4B,KAiBbC,EAjBa,OAmBGjd,mBAAS,IAnBZ,iCAoBHA,mBAAS,KApBN,qCAqBLA,mBAAS,IArBJ,qBAqB5B2iB,GArB4B,MAqBnBC,GArBmB,MAoC7B1kB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAGOqlB,EAAiB,CAE3C7mB,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkG,eAAgBgF,EAAOhF,eACvB1B,KAAM0G,EAAO1G,KACbgB,QAAS6jB,EACT5jB,KAAM8jB,KAVY,QAGdgE,EAHc,SAiBwB,OAAxBA,EAAahpB,QAnJFyN,OAoJ9BD,EAnJFE,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,mBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAmJ1CvE,EAAQsO,aAGR3D,KAID3K,EAAQC,eAAc,GA5BF,iCAlIU,IAAC4G,IAkIX,OAAH,wDAiCZkY,GAAe,SAACxqB,GACrB8pB,EAAqB9pB,IAGhByqB,GAAkB,SAACzqB,GACxB4pB,EAAwB5pB,IAGzBuK,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2f,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe1pB,OAAS,IAEvC+oB,EAAiBW,EAAenpB,KAAI,SAACuE,GAC1C,MAAO,CACN9F,MAAO8F,EAAQxF,KACfA,KAAMwF,EAAQxF,SAGhB0pB,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpgB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6f,EAAoB,CAC7CnpB,WAAY,CACXE,aAAc,CACbyE,QAAS6jB,MAJK,QACXiB,EADW,SAUEA,EAAY5pB,OAAS,IAEjCipB,EAAcW,EAAYrpB,KAAI,SAACwE,GACpC,MAAO,CACN/F,MAAO+F,EAAKzF,KACZA,KAAMyF,EAAKzF,SAGb4pB,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAgEJ,OAvCApf,qBAAU,WAET,GAAIwlB,EAAW/uB,OAAS,GAEvB,GAAI+uB,EAAW/uB,OAASskB,EAAYtkB,OACnCukB,EAAe,GAAD,oBAAKD,GAAL,CAAkB,CAC/BhjB,IAAKytB,EAAWA,EAAW/uB,OAAS,GACpCkvB,UAAW,2BACXxrB,SAAU,WAKP,GAAIqrB,EAAW/uB,OAASskB,EAAYtkB,OAAQ,CAChD,IAAMwmB,EAAiBlC,EAAYhR,QAAO,SAAAhO,GACzC,IAAI6pB,GAAS,EAMb,OALAJ,EAAWnb,SAAQ,SAAA4Z,GACdA,IAAcloB,EAAKhE,MACtB6tB,GAAS,MAGJA,KAER5K,EAAeiC,SAMhBjC,EAAe,MAKd,CAACwK,IAMH,kBAAC,IAAD,CACClkB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OAEAS,GAJA,EAGAV,aAHA,EAIAU,QAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,yBAAK/L,UAAU,qBACd,6CAGA,yBAAKA,UAAU,gCACd,kBAAC,KAAD,CAAOyvB,QAASA,IACdN,GAAMnuB,KAAI,SAAA+E,GAAI,OACd,kBAACipB,GAAD,CACChtB,IAAK+D,EAAK9C,MACVA,MAAO8C,EAAK9C,YAIF,IAAZwsB,IACA,yBAAKzvB,UAAU,mDACd,yBAAKA,UAAU,wDACd,wBAAIA,UAAU,kCAEb,8BACC,kBAACsO,GAAA,EAAD,OAHF,0BAQA,wBAAItO,UAAU,mBAAd,YAGA,kBAAC6vB,GAAD,CAAanB,cAAeA,IAC5B,yBAAKtuB,MAAO,CACXsP,UAAW,UAEZ,wBAAI1P,UAAU,mBAAd,YAGA,kBAAC8vB,GAAD,CAAanB,cAAeA,KAE7B,yBAAK3uB,UAAU,yDACd,kBAAC,GAAD,CACCglB,eAAgBA,EAChBD,YAAaA,MAOJ,IAAZ0K,IACA,yBAAKzvB,UAAU,wCAEd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,aACNE,MAAOwL,EAAO5F,UACdtF,KAAK,YACLF,QAAU+L,EAAQvG,WAAaqG,EAAOrG,YACnCsG,GAAgB2jB,EAAcrmB,MAAd,gBAEnBnJ,YAAc8L,EAAQvG,WAAaqG,EAAOrG,YACvCsG,GAAgB2jB,EAAcrmB,MAAd,gBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,YACNE,MAAOwL,EAAO3F,SACdvF,KAAK,WACLF,QAAU+L,EAAQtG,UAAYoG,EAAOpG,WAClCqG,GAAgB2jB,EAAcrmB,MAAd,eAEnBnJ,YAAc8L,EAAQtG,UAAYoG,EAAOpG,WACtCqG,GAAgB2jB,EAAcrmB,MAAd,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOvF,MACd3F,KAAK,QACLF,QAAU+L,EAAQlG,OAASgG,EAAOhG,QAC/BiG,GAAgB2jB,EAAcrmB,MAAd,YAEnBnJ,YAAc8L,EAAQlG,OAASgG,EAAOhG,QACnCiG,GAAgB2jB,EAAcrmB,MAAd,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOxF,MACd1F,KAAK,QACLF,QAAU+L,EAAQnG,OAASiG,EAAOjG,QAC/BkG,GAAgB2jB,EAAcrmB,MAAd,YAEnBnJ,YAAc8L,EAAQnG,OAASiG,EAAOjG,QACnCkG,GAAgB2jB,EAAcrmB,MAAd,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,cAOpB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiBovB,EAAcrmB,MAAd,cAA2C,QAAU,GACtE9I,KAAMmvB,EAAcrmB,MAAd,eAGN,kBAAC,KAAD,CACCshB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,mBAAmB8C,MAAOyJ,KAAMK,yBACpEiP,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,mBACZiC,iBAAiB,WACjBpe,SAAUuqB,GACVlM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F4N,EAAiBrgB,MACjBqgB,EAAiBjoB,KAAKlB,OAAS,GAC/B+oB,EAAexoB,KAAI,SAACkd,GACnB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,YAUjD,yBAAKC,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiBovB,EAAcrmB,MAAd,WAAwC,QAAU,GACnE9I,KAAMmvB,EAAcrmB,MAAd,YAGN,kBAAC,KAAD,CACCjJ,UAAU,kBACVuqB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,yBAAyB8C,MAAOyJ,KAAMK,yBAC1EiP,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,gBACZiC,iBAAiB,WACjBpe,SAAUsqB,GACVjM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F8N,EAAcvgB,MACdugB,EAAcnoB,KAAKlB,OAAS,GAC5BipB,EAAY1oB,KAAI,SAACkd,GAChB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,aAQlD,yBAAKK,MAAO,CACXsP,UAAW,UAKZ,yBAAK1P,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,UACNE,MAAOwL,EAAO4d,SACd9oB,KAAK,WACLF,QAAU+L,EAAQid,UAAYnd,EAAOmd,WAClCld,GAAgB2jB,EAAcrmB,MAAd,eAEnBnJ,YAAc8L,EAAQid,UAAYnd,EAAOmd,WACtCld,GAAgB2jB,EAAcrmB,MAAd,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,wBACNE,MAAOwL,EAAO6d,SACd/oB,KAAK,WACLF,QAAU+L,EAAQkd,UAAYpd,EAAOod,WAClCnd,GAAgB2jB,EAAcrmB,MAAd,eAEnBnJ,YAAc8L,EAAQkd,UAAYpd,EAAOod,WACtCnd,GAAgB2jB,EAAcrmB,MAAd,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,kBAkBT,IAAZ4jB,IACA,yBAAKzvB,UAAU,wCAEd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,aACNE,MAAOwL,EAAO5F,UACdtF,KAAK,YACLF,QAAU+L,EAAQvG,WAAaqG,EAAOrG,YACnCsG,GAAgB2jB,EAAcrmB,MAAd,gBAEnBnJ,YAAc8L,EAAQvG,WAAaqG,EAAOrG,YACvCsG,GAAgB2jB,EAAcrmB,MAAd,gBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,YACNE,MAAOwL,EAAO3F,SACdvF,KAAK,WACLF,QAAU+L,EAAQtG,UAAYoG,EAAOpG,WAClCqG,GAAgB2jB,EAAcrmB,MAAd,eAEnBnJ,YAAc8L,EAAQtG,UAAYoG,EAAOpG,WACtCqG,GAAgB2jB,EAAcrmB,MAAd,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOvF,MACd3F,KAAK,QACLF,QAAU+L,EAAQlG,OAASgG,EAAOhG,QAC/BiG,GAAgB2jB,EAAcrmB,MAAd,YAEnBnJ,YAAc8L,EAAQlG,OAASgG,EAAOhG,QACnCiG,GAAgB2jB,EAAcrmB,MAAd,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,QACNE,MAAOwL,EAAOxF,MACd1F,KAAK,QACLF,QAAU+L,EAAQnG,OAASiG,EAAOjG,QAC/BkG,GAAgB2jB,EAAcrmB,MAAd,YAEnBnJ,YAAc8L,EAAQnG,OAASiG,EAAOjG,QACnCkG,GAAgB2jB,EAAcrmB,MAAd,YACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,cAiBpB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiBovB,EAAcrmB,MAAd,cAA2C,QAAU,GACtE9I,KAAMmvB,EAAcrmB,MAAd,eAGN,kBAAC,KAAD,CACCshB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,mBAAmB8C,MAAOyJ,KAAMK,yBACpEiP,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,mBACZiC,iBAAiB,WACjBpe,SAAUuqB,GACVlM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F4N,EAAiBrgB,MACjBqgB,EAAiBjoB,KAAKlB,OAAS,GAC/B+oB,EAAexoB,KAAI,SAACkd,GACnB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,YAUjD,yBAAKC,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiBovB,EAAcrmB,MAAd,WAAwC,QAAU,GACnE9I,KAAMmvB,EAAcrmB,MAAd,YAGN,kBAAC,KAAD,CACCjJ,UAAU,kBACVuqB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,yBAAyB8C,MAAOyJ,KAAMK,yBAC1EiP,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,gBACZiC,iBAAiB,WACjBpe,SAAUsqB,GACVjM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F8N,EAAcvgB,MACdugB,EAAcnoB,KAAKlB,OAAS,GAC5BipB,EAAY1oB,KAAI,SAACkd,GAChB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,aAQlD,yBAAKK,MAAO,CACXsP,UAAW,UAKZ,yBAAK1P,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,UACNE,MAAOwL,EAAO4d,SACd9oB,KAAK,WACLF,QAAU+L,EAAQid,UAAYnd,EAAOmd,WAClCld,GAAgB2jB,EAAcrmB,MAAd,eAEnBnJ,YAAc8L,EAAQid,UAAYnd,EAAOmd,WACtCld,GAAgB2jB,EAAcrmB,MAAd,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,wBACNE,MAAOwL,EAAO6d,SACd/oB,KAAK,WACLF,QAAU+L,EAAQkd,UAAYpd,EAAOod,WAClCnd,GAAgB2jB,EAAcrmB,MAAd,eAEnBnJ,YAAc8L,EAAQkd,UAAYpd,EAAOod,WACtCnd,GAAgB2jB,EAAcrmB,MAAd,eACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,kBAkBrB4jB,GAAU,GACV,kBAAC,IAAD,CACCrvB,MAAO,CAAEyP,YAAa,OAAQH,UAAW,QAEzC1P,UAAU,6BACVR,KAAK,UAAU2M,QAAS,WA1nBhCujB,GADmBD,GAAU,KA6nBrB,kBAACM,GAAA,EAAD,MAND,aAYAN,GAAUN,GAAM1uB,OAAS,GACzB,kBAAC,IAAD,CACCL,MAAO,CACNsP,UAAW,QAGZ1P,UAAU,6BACVR,KAAK,UAAU2M,QAAS,WA/oBhCujB,GADmBD,GAAU,KA0oBtB,OAQK,kBAAEO,GAAA,EAAF,c,UCvnBClN,GAtKE,SAAC,GAAgD,IAA9CmN,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAAoB,EAGTrjB,mBAAS,CACzD7J,MAAOktB,EAAcltB,MACrBsE,OAAQ4oB,EAAc5oB,OACtB1E,KAAMstB,EAActtB,KACpBkC,MAAOorB,EAAcprB,QAPoC,mBAGtDqrB,EAHsD,KAGlCC,EAHkC,OAU7BvjB,mBAAS,IAVoB,mBAUtD2F,EAVsD,KAU5CJ,EAV4C,OAWrBvF,oBAAS,GAXY,mBAWtDsL,EAXsD,KAWxCC,EAXwC,KAavDiY,EAA6B,SAACpkB,GAChC,IAAMnM,EAAOmM,EAAE3E,OAAOxH,KAChBN,EAAQyM,EAAE3E,OAAO9H,MAEvB4wB,EAAsB,eACfD,EADc,gBAEhBrwB,EAAON,MAIhBuK,qBAAU,WACN,GAAIyI,EAAShS,OAAS,EAAG,CACrB,IAAM4d,EAAY5L,EAASzR,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAC5CuuB,EAAsB,eACfD,EADc,CAEjBrrB,MAAM,aAAKsZ,WAIfgS,EAAsB,eACfD,EADc,CAEjBrrB,MAAO,QAIhB,CAAC0N,IAEJzI,qBAAU,WACN,IAIM+K,EAHKmb,EAAUlvB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQ4uB,EAAcruB,IAK1D4T,EAAcnV,OAAOoV,OAAO,GAAIua,EAAUnb,GAA5BxU,OAAA,IAAAA,CAAA,GAAyC6vB,IACvDG,EAAmB,uBAAOL,EAAU5uB,MAAM,EAAGyT,IAA1B,CAAkCW,GAAlC,aAAkDwa,EAAU5uB,MAAMyT,EAAQ,KACnGkb,EAAaM,KAEd,CAACH,IAuBJ,OACI,oCAGI,yBAAKpwB,UAAU,iCACX,kBAAC4jB,GAAD,CACIrkB,MAAM,QACNE,MAAO2wB,EAAmBntB,MAC1BlD,KAAK,QACLJ,SAAU2wB,IAEd,kBAAC1M,GAAD,CACIrkB,MAAM,OACNE,MAAO2wB,EAAmBvtB,KAC1B9C,KAAK,OACLJ,SAAU2wB,IAGd,kBAAC1M,GAAD,CACIrkB,MAAM,SACNE,MAAO2wB,EAAmB7oB,OAC1BxH,KAAK,SACLJ,SAAU2wB,IAId,wBAAItwB,UAAU,yBAAd,UACA,yBAAKI,MAAO,CACRsW,aAAc,UAGlB,yBAAK1W,UAAU,gCACVyS,GAEGA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAC+D,EAAOgQ,GACxC,OACI,yBAAK/U,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAKsH,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGtC,0BACIiH,QAAS,kBAzDlB,SAACrK,GAExB,IAAMuc,EAAY5L,GAAYA,EAASsB,QAAO,SAAAhP,GAC1C,OAAOA,EAAMjD,KAAOA,KAGxBuQ,EAAYgM,GAmDmCvE,CAAmB/U,EAAMjD,KACxC9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACI3T,MAAO,iBAEP,yBACIkJ,QAAS,WACLkM,GAAgB,IAEpBrY,UAAU,2FAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACZ,kBAAC2Z,GAAA,EAAD,WAUpB,kBAAC,GAAD,CACIvH,WAAYiG,EACZlG,QAASiG,EACT3F,SAAUA,EACVJ,YAAaA,EACbC,sBAAsB,MCtJhChI,GAAmBC,MAAaC,MAAM,CACxCgmB,UAAWjmB,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAcxEmL,GAAwB,SAAC9D,GAC3BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAK7C7E,GAAgB,CAClB4lB,UAAW,GACXxsB,MAAO,IA+NIoT,GAlNK,SAAC,GAAiG,IAA/FG,EAA8F,EAA9FA,sBAAuBC,EAAuE,EAAvEA,yBAA0BiZ,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,iBAA8B,EAE5DrmB,EAAe,GAAI,gBAFyC,mBAE1GsmB,EAF0G,KAEvFC,EAFuF,OAGjF9jB,oBAAS,GAHwE,gCAI/EA,mBAAS,KAJsE,mBAI1GojB,EAJ0G,KAI/FD,EAJ+F,KAO3GjlB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAGa0mB,EAAwB,CAClDloB,KAAM,CACF8nB,UAAWvlB,EAAOulB,UAClBxsB,MAAOksB,KANE,QAGXW,EAHW,SAWiC,OAA3BA,EAAgBvsB,QAnDdyN,OAoDrBD,EAnDRE,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,oBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAiDvCihB,EAAiB,GAAD,oBAAKD,GAAL,cACZ3uB,GAAI+uB,EAAe,IAAU,GAC7B7uB,IAAK6uB,EAAe,IAAU,GAC9BL,UAAWK,EAAe,WAAiB,IAExCA,MAEP3lB,EAAQsO,YACRyW,EAAa,IACbzY,GAAyB,IAIzB3B,KAMJ3K,EAAQC,eAAc,GAhCL,iCAxCO,IAAC4G,IAwCR,OAAH,wDAoClB/H,qBAAU,WACN,IAAK2mB,EAAiB,UAAe,CACjC,IAAM1nB,EAAQ0nB,EAAiB,MAC/B,GAAI1nB,EAAK,SAAe1I,OAAOC,KAAKyI,EAAK,OAAWxI,OAAS,GAIrDF,OAAO0K,OAAOhC,EAAK,OAAWxI,OAAS,EACjCF,OAAO0K,OAAOhC,EAAK,OACnB,IACHoL,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP5P,GAAsB4P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOllB,OAAOC,KAAKilB,GAAKhlB,OAAS,EACpBF,OAAO0K,OAAOwa,GACtBpR,SAAQ,SAAAoR,GACT5P,GAAsB4P,aAQ/C,CAACkL,IAOJ,IAAMlX,EAAe,SAACvN,GAClBsL,GAAyB,IAIvBpM,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOulB,WAWVM,EAAyB,WAC3Bb,EAAa,GAAD,oBAAKC,GAAL,CAAgB,CACxBjtB,MAAO,GACPsE,OAAQ,GACR1E,KAAM,GACNkC,MAAO,GACPjD,GAAG,GAAD,OAAKouB,EAAUzvB,aAOzB,OACI,kBAAC,IAAD,CACI6K,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI3L,MAAO,CACH2V,IAAK,QAET9S,MAAM,oBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACXxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,IAExCgC,MAAO,OACPiJ,UAAW,CACPjK,OAAQ,IACR+D,QAAS,SAGb,kBAAC7Q,EAAD,CACII,MAAM,uBACNE,MAAOwL,EAAOulB,UACdzwB,KAAK,YACLF,QAAU+L,EAAQ4kB,WAAa9kB,EAAO8kB,YAChC7kB,GAAgBglB,EAAkB1nB,MAAlB,WAEtBnJ,YAAc8L,EAAQ4kB,WAAa9kB,EAAO8kB,YACpC7kB,GAAgBglB,EAAkB1nB,MAAlB,WACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,gBAGxB,yBAAKzL,MAAO,CACRsP,UAAW,UAEf,wBAAI1P,UAAU,mBAAd,YAEA,yBAAKA,UAAU,2BACVkwB,EAAUlvB,KAAI,SAAA+vB,GACX,OAAO,kBAACC,GAAD,CACHb,cAAeY,EACfb,UAAWA,EAAWD,aAAcA,OAG5C,kBAAC,IAAD,CAAQ5Z,KAAK,QACTlK,QAAS2kB,EACT1wB,MAAO,CACH6M,MAAO,QACPwX,UAAW,QACX/U,UAAW,MACXrP,aAAc,OACfb,KAAK,SAASkH,KAAM,kBAACiT,GAAA,EAAD,OAP3B,kBAUJ,yBACIvZ,MAAO,CACHsP,UAAW,gB,UCtDhCoT,GAhLE,SAAC,GAAyE,EAAvE4N,iBAAuE,EAArDD,cAAsD,IAAvC1qB,EAAsC,EAAtCA,KAAMD,EAAgC,EAAhCA,UAAUmrB,EAAsB,EAAtBA,gBAAsB,EAEnCnkB,mBAAS,CACzD7J,MAAO8C,EAAK9C,MACZsE,OAAQxB,EAAKwB,OACb1E,KAAMkD,EAAKlD,KACXkC,MAAOgB,EAAKhB,QANuE,mBAEhFqrB,EAFgF,KAE5DC,EAF4D,OASvDvjB,mBAAS,IAT8C,mBAShF2F,EATgF,KAStEJ,EATsE,OAU/CvF,oBAAS,GAVsC,mBAUhFsL,EAVgF,KAUlEC,EAVkE,KAYjFiY,EAA6B,SAACpkB,GAChC,IAAMnM,EAAOmM,EAAE3E,OAAOxH,KAChBN,EAAQyM,EAAE3E,OAAO9H,MAEvB4wB,EAAsB,eACfD,EADc,gBAEhBrwB,EAAON,MAShBuK,qBAAU,WACFyI,EAAShS,OAAS,EAClB4vB,EAAsB,eACfD,EADc,CAGjBrrB,MAAM,aAAK,IAAImsB,IAAJ,uBAAYd,EAAmBrrB,OAA/B,aAAyC0N,SAIxD4d,EAAsB,eACfD,EADc,CAEjBrrB,MAAO,QAIhB,CAAC0N,IA8BJ,OACI,oCACI,yBACIrS,MAAO,CACH6M,MAAO,OACPC,UAAW,QAEflN,UAAU,iCACV,kBAAC4jB,GAAD,CACIrkB,MAAM,QACNE,MAAO2wB,EAAmBntB,MAC1BlD,KAAK,QACLJ,SAAU2wB,IAEd,kBAAC1M,GAAD,CACIrkB,MAAM,OACNE,MAAO2wB,EAAmBvtB,KAC1B9C,KAAK,OACLJ,SAAU2wB,IAGd,kBAAC1M,GAAD,CACIrkB,MAAM,SACNE,MAAO2wB,EAAmB7oB,OAC1BxH,KAAK,SACLJ,SAAU2wB,IAId,wBAAItwB,UAAU,yBAAd,UACA,yBAAKI,MAAO,CACRsW,aAAc,UAIlB,yBAAK1W,UAAU,gCACVowB,EAAmBrrB,OAEhBqrB,EAAmBrrB,MAAMtE,OAAS,GAAK2vB,EAAmBrrB,MAAM/D,KAAI,SAAC+D,EAAOgQ,GACxE,OACI,yBAAK/U,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAKsH,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,OAGtC,0BACIiH,QAAS,kBAxElB,SAACrK,GAExB,IAAMuc,EAAY+R,EAAmBrrB,OAASqrB,EAAmBrrB,MAAMtE,OAAS,GAAK2vB,EAAmBrrB,MAAMgP,QAAO,SAAAhP,GACjH,OAAOA,EAAMjD,KAAOA,KAGxBuuB,EAAsB,eACfD,EADc,CAEjBrrB,MAAM,aAAKsZ,MAGfhM,EAAYgM,GA6DmCvE,CAAmB/U,EAAMjD,KACxC9B,UAAU,6CACV,kBAAC4W,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACI3T,MAAO,iBAEP,yBACIkJ,QAAS,WACLkM,GAAgB,IAEpBrY,UAAU,2FAIV,kBAAC+Z,GAAA,EAAD,MAIA,0BAAM/Z,UAAU,iDACZ,kBAAC2Z,GAAA,EAAD,UAMhB,kBAAC,IAAD,CACAvZ,MAAO,CACHsP,UAAW,QAEXhJ,KAAM,kBAACyqB,GAAA,EAAD,MAChBnxB,UAAU,6BACVmM,QAAS,WA7FX8kB,EAAgBlrB,EAAKD,EAAUsqB,KAuFvB,SAYJ,kBAAC,GAAD,CACIhe,WAAYiG,EACZlG,QAASiG,EACT3F,SAAUA,EACVJ,YAAaA,EACbC,sBAAsB,M,UCsCvB8E,IA1MU7M,MAAaC,MAAM,CACxCgmB,UAAWjmB,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAwC1D,SAAC,GAGsC,IAHpC6M,EAGmC,EAHnCA,sBACnBC,EAEsD,EAFtDA,yBAEA4Z,GAAsD,EAF5BX,cAE4B,EADtDC,iBACsD,EAAtDU,6BAA6BC,EAAyB,EAAzBA,YAAyB,EAGFvkB,mBAAS,CACzD7J,MAAO,GACPsE,OAAQ,GACR1E,KAAM,GACNkC,MAAO,KAP2C,mBAG/CqrB,EAH+C,KAG3BC,EAH2B,OAUtBvjB,mBAAS,IAVa,mBAU/C2F,EAV+C,KAUrCJ,EAVqC,OAWdvF,oBAAS,GAXK,mBAW/CsL,EAX+C,KAWjCC,EAXiC,KAahDiY,EAA6B,SAACpkB,GAChC,IAAMnM,EAAOmM,EAAE3E,OAAOxH,KAChBN,EAAQyM,EAAE3E,OAAO9H,MAEvB4wB,EAAsB,eACfD,EADc,gBAEhBrwB,EAAON,MAmBhBuK,qBAAU,WACN,GAAIyI,EAAShS,OAAS,EAAG,CACrB,IAAM4d,EAAY5L,EAASzR,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAC5CuuB,EAAsB,eACfD,EADc,CAEjBrrB,MAAM,aAAKsZ,WAIfgS,EAAsB,eACfD,EADc,CAEjBrrB,MAAO,QAIhB,CAAC0N,IAwBJ,OACI,oCACI,kBAAC,KAAD,CACIrS,MAAO,CACH2V,IAAK,QAET0Q,gBAAgB,EAChBxjB,MAAM,yBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAffklB,EAA4BhB,EAAoBiB,IAgBxCpb,SA/DS,SAAC/J,GAClBsL,GAAyB,IA+DjBrB,OAAO,MACPyD,cAAe,CACXC,SAAU,UAEd5M,MAAO,QACPiJ,UAAW,CACPjK,OAAQ,IACR+D,QAAS,SAGb,kBAAC7Q,EAAD,CACII,MAAM,QACNE,MAAO2wB,EAAmBntB,MAC1BlD,KAAK,QACLJ,SAAU2wB,IAEd,kBAACnxB,EAAD,CACII,MAAM,OACNE,MAAO2wB,EAAmBvtB,KAC1B9C,KAAK,OACLJ,SAAU2wB,IAGd,kBAACnxB,EAAD,CACII,MAAM,SACNE,MAAO2wB,EAAmB7oB,OAC1BxH,KAAK,SACLJ,SAAU2wB,IAId,wBAAItwB,UAAU,yBAAd,UACA,yBAAKA,UAAU,gCACVyS,GAEGA,EAAShS,OAAS,GAAKgS,EAASzR,KAAI,SAAA+D,GAChC,OACI,yBAAK/E,UAAU,sCACX,yBACImM,QAAS,kBAnElB,SAACrK,GAExB,IAAMuc,EAAY5L,GAAYA,EAASsB,QAAO,SAAAhP,GAC1C,OAAOA,EAAMjD,KAAOA,KAGxBuQ,EAAYgM,GA6DmCvE,CAAmB/U,EAAMjD,KACxC9B,UAAU,8CACV,kBAAC8W,GAAA,EAAD,OAEJ,yBAAKxP,IAAKvC,EAAM3C,MAAO8C,IAAKH,EAAMG,UAKlD,yBACIiH,QAAS,WACLkM,GAAgB,IAEpBrY,UAAU,4CACV,kBAACsxB,GAAA,EAAD,QAGR,kBAAC,GAAD,CACIlf,WAAYiG,EACZlG,QAASiG,EACT3F,SAAUA,EACVJ,YAAaA,EACbC,sBAAsB,QC3MlCif,GAAUC,KAAVD,MACArX,GAAW/a,IAAX+a,OAIFpI,GAA0B,SAACC,GAC7BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,oBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BAK7CoG,GAAwB,SAAC9D,GAC3BC,KAAa/I,MAAM,CACf8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAsBnD,IAAMgiB,GAAW,SAACC,EAA0B5rB,EAAUhE,GAArC,OAChB,yBACC1B,MAAO,CACNsO,QAAS,SAIV,kBAAC,KAAD,CAASoB,UAAU,MAAM7M,MAAM,kBAC/B,uBAAGiN,KAAK,MACT,kBAACkL,GAAA,EAAD,CACGjP,QAAS,SAACwlB,SAWZ,yBACCvxB,MAAO,CACNuP,WAAY,UAGX,uBAAGO,KAAK,KAAK9P,MAAO,CAClBqP,MAAM,qBAGV,kBAAC,KAAD,CAEYwH,UAAW,kBAAMya,EAA0B5vB,EAAGgE,IAC9C7C,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAExD,kBAACJ,GAAA,EAAD,CACD3K,QAAS,SAACwlB,GAETA,EAAMC,yBASLC,GAAmB,SAACC,EAAqBC,EAA2BjwB,EAAQkwB,GAAzD,OACxB,yBACC5xB,MAAO,CACNsO,QAAS,SAGV,kBAAC,KAAD,CAASoB,UAAU,MAAM7M,MAAM,0BAC/B,uBAAGiN,KAAK,MACP,kBAACyJ,GAAA,EAAD,CACCxN,QAAS,SAACwlB,GAGTG,GAAe,GACfE,EAAelwB,QAMlB,yBACC1B,MAAO,CACNuP,WAAY,UAGd,kBAAC,KAAD,CAASG,UAAU,MAAM7M,MAAM,kBAC/B,uBAAGiN,KAAK,MACP,kBAACkL,GAAA,EAAD,CACCjP,QAAS,SAACwlB,SAQZ,yBACCvxB,MAAO,CACNuP,WAAY,UAGX,uBAAGO,KAAK,KAAK9P,MAAO,CAClBqP,MAAM,qBAGX,kBAAC,KAAD,CAEawH,UAAW,kBAAM8a,EAAsBjwB,IACvCmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAExD,kBAACJ,GAAA,EAAD,CACD3K,QAAS,SAACwlB,GAETA,EAAMC,yBAgbI7E,GAnaG,SAAClgB,GAAW,IAAD,EAGEC,oBAAS,GAHX,gCAIYA,oBAAS,IAJrB,mBAIrBmlB,EAJqB,KAIPC,EAJO,OAKUplB,oBAAS,GALnB,mBAKrBqlB,EALqB,KAKRL,EALQ,OAMShlB,mBAAS,IANlB,mBAMrBukB,EANqB,KAMTW,EANS,OAUuB3nB,EAAe,GAAI,iBAV1C,mBAUrB+nB,EAVqB,KAULC,EAVK,OAW+BhoB,EAAe,GAAI,mBAXlD,mBAWCioB,GAXD,aAY+BjoB,EAAe,GAAI,mBAZlD,mBAYCkoB,GAZD,aAcazlB,mBAAS,IAdtB,mBAcrB2jB,EAdqB,KAcPC,EAdO,KAgB5B1mB,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACKmoB,EAAyB,IAD9B,OACdxsB,EADc,OAGpB6qB,EAAiB7qB,GAHG,2CAAH,qDAKnB2sB,KACC,IAIF,IAYWT,EAAqB,uCAAG,WAAOjwB,GAAP,iBAAAoI,EAAA,sEACKooB,EAA2B,CAC1D1xB,WAAY,CACVE,aAAc,CACZgB,SAJsB,QACtB2wB,EADsB,SAUuB,OAA9BA,EAAmBnuB,QAC3CwN,GAAwB,qBAClB4gB,EAAoBjC,EAAc1c,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACnE4uB,EAAiBgC,IAGnB7c,GAAsB,yCAhBW,2CAAH,sDAyC1Bob,EAAe,uCAAG,WAAOlrB,EAAKD,EAAUsqB,GAAtB,iCAAAlmB,EAAA,6DAKTyoB,EAA6B,WACjC,OAAO7sB,EAAU9B,MAAMhD,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQwE,EAAKjE,KAGrD8wB,EARe,WACnB,OAAOnC,EAAczvB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQuE,EAAUhE,IAOvC+wB,GAEvBC,EAAYH,IAGZI,EAAqC3C,EAAmBrrB,MAAMtE,OAAS,EAAlC,eAEzC2vB,EAFyC,CAG5CrrB,MAAOqrB,EAAmBrrB,MAAMtE,OAAS,EAAI2vB,EAAmBrrB,MAAM/D,KAAI,SAAAgE,GAAG,OAAIA,EAAIlD,MAAM,KAExFsuB,EAEU4C,EArBS,uBAsBVltB,EAAU9B,MAAM1C,MAAM,EAAGwxB,IAtBf,CAuBb1C,GAvBa,aAwBVtqB,EAAU9B,MAAM1C,MAAMwxB,EAAY,KAGvCG,EA3Be,uBA4BVntB,EAAU9B,MAAM1C,MAAM,EAAGwxB,IA5Bf,CA6BbC,GA7Ba,aA8BVjtB,EAAU9B,MAAM1C,MAAMwxB,EAAY,KAIvCI,EAAyB3yB,OAAOoV,OAAO,GAAI8a,EAAcmC,GAAhCryB,OAAA,IAAAA,CAAA,GACpBuF,EADoB,CAEvB9B,MAAOivB,KAGHvd,EAAcnV,OAAOoV,OAAO,GAAI8a,EAAcmC,GAAhCryB,OAAA,IAAAA,CAAA,GACfuF,EADe,CAElB9B,MAAOgvB,KAGHzC,EA5CS,uBA6CVE,EAAcnvB,MAAM,EAAGsxB,IA7Cb,CA8Cbld,GA9Ca,aA+CV+a,EAAcnvB,MAAMsxB,EAAiB,KA/C3B,UAqDUL,EAA2B,CAC3D3xB,WAAY,CACXE,aAAc,CACZgB,GAAIgE,EAAUhE,KAGjB4G,KAAK,eACDwqB,EADA,CAEH1C,UAAW9a,EAAY3V,SA7DF,SAqDjBozB,EArDiB,SAkEoC,OAA9BA,EAAmB7uB,QAC9CwN,GAAwB,qBACxB4e,EAAiBH,IAIjB1a,KAxEqB,4CAAH,0DA6Ef6b,EAAyB,uCAAG,WAAO5vB,EAAGgE,GAAV,2BAAAoE,EAAA,6DAMnByoB,EAA6B,WACjC,OAAO7sB,EAAU9B,MAAMhD,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQO,IAGhD8wB,EARe,WACnB,OAAOnC,EAAczvB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQuE,EAAUhE,IAOvC+wB,GAEjBC,EAAYH,IAEZK,EAdmB,uBAepBltB,EAAU9B,MAAM1C,MAAM,EAAGwxB,IAfL,aAgBpBhtB,EAAU9B,MAAM1C,MAAMwxB,EAAY,KAGjCpd,EAAcnV,OAAOoV,OAAO,GAAI8a,EAAcmC,GAAhCryB,OAAA,IAAAA,CAAA,GACfuF,EADe,CAElB9B,MAAOgvB,KAGHzC,EAxBmB,uBAyBpBE,EAAcnvB,MAAM,EAAGsxB,IAzBH,CA0BvBld,GA1BuB,aA2BpB+a,EAAcnvB,MAAMsxB,EAAiB,KA3BjB,SAiCAL,EAA2B,CAC3D3xB,WAAY,CACXE,aAAc,CACZgB,GAAIgE,EAAUhE,KAGjB4G,KAAK,eACDgN,EADA,CAEH8a,UAAW9a,EAAY3V,SAzCQ,QAiC3BozB,EAjC2B,SA8C0B,OAA9BA,EAAmB7uB,QAC9CwN,GAAwB,0BACxB4e,EAAiBH,IAIjB1a,KApD+B,4CAAH,wDAyDzBub,EAA2B,uCAAG,WAAOhB,EAAmBtuB,GAA1B,uBAAAoI,EAAA,6DAMrB0oB,EALe,WACnB,OAAOnC,EAAczvB,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQO,GAI7B+wB,GAIjBG,EAVqB,uBAWtBvC,EAAcmC,GAAgB5uB,OAXR,CAYzBosB,IAGI1a,EAAcnV,OAAOoV,OAAO,GAAI8a,EAAcmC,GAAhCryB,OAAA,IAAAA,CAAA,GACfkwB,EAAcmC,GADC,CAElB5uB,MAAOgvB,KAGHzC,EApBqB,uBAqBtBE,EAAcnvB,MAAM,EAAGsxB,IArBD,CAsBzBld,GAtByB,aAuBtB+a,EAAcnvB,MAAMsxB,EAAiB,KAvBf,SA6BFL,EAA2B,CAC3D3xB,WAAY,CACXE,aAAc,CACZgB,GAAIA,IAGP4G,KAAK,eACDgN,EADA,CAEH8a,UAAW9a,EAAY3V,SArCU,QA6B7BozB,EA7B6B,SA0CwB,OAA9BA,EAAmB7uB,QAC9CwN,GAAwB,wBACxB4e,EAAiBH,GACjBuB,GAAe,IAIfjc,KAjDiC,2CAAH,wDAuDjC,OACC,oCACI,yBAAK7V,UAAU,yBACT,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,cAKA,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,sBACZC,SAAU,SAAAtc,GAAK,OAlQH,SAACA,GACrB,GAAG2yB,EAAezwB,KAAKlB,OAAS,EAAG,CACjC,IAAMiyB,EAAmBN,EAAezwB,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKic,cAAc9a,SAASzB,EAAMuc,kBACnG0U,EAAiBgC,IA+PQzW,CAAaxc,OAG9B,kBAAC,IAAD,CAEFO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACZxN,QAAS,kBAAM+lB,GAAgB,KAJvB,YAWA,yBAAKlyB,UAAU,uCAMxB,yBAAKA,UAAU,uCAEToyB,EAAe9oB,WAAa,kBAAC4S,GAAD,MAE5BkW,EAAe7oB,QAAUknB,EAAchwB,OAAS,IACtD,yBAAKL,MAAO,CACXsP,UAAW,SAEX,kBAAC,GAAD,CAAOzM,MAAM,wBAIdmvB,EAAe7oB,MAAQknB,EAAchwB,OAAS,GAC5C,yBAAKT,UAAU,2BACdywB,EAAczvB,KAAI,SAAA8E,GAClB,OACC,yBAAK9F,UAAU,gCACf,kBAAC,KAAD,CACCozB,WAAW,EACXC,UAAU,EACVC,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAACxD,GAAA,EAAD,CAAoByD,OAAQD,EAAW,GAAK,KAC1ExzB,UAAU,iCAEV,kBAACuxB,GAAD,CACCmC,OAAQ5tB,EAAU/F,KAClBiC,IAAI,IACJhC,UAAU,6BACV2zB,MAAO9B,GAAiBC,EAAeC,EAAuBjsB,EAAUhE,GAAGkwB,IAE3E,yBAAKhyB,UAAU,kCACb8F,EAAU9B,OAAS8B,EAAU9B,MAAMvD,OAAS,GAAKqF,EAAU9B,MAAMhD,KAAI,SAAA+E,GACrE,OACC,yBAAK/F,UAAU,qCACf,kBAAC,KAAD,CACCozB,WAAW,EACXC,UAAU,EACVC,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACX,kBAACxD,GAAA,EAAD,CAAoByD,OAAQD,EAAW,GAAK,KAE7CxzB,UAAU,iCAGV,kBAACuxB,GAAD,CACCmC,OAAQ3tB,EAAK9C,OAAS,GACtBjB,IAAI,IACJhC,UAAU,6BACV2zB,MAAOlC,GAASC,EAA0B5rB,EAAUC,EAAKjE,KAEzD,kBAAC8xB,GAAD,CACAlD,iBAAkBA,EAClBD,cAAeA,EACf1qB,KAAMA,EACND,UAAWA,EACXmrB,gBAAiBA,YAYlBnrB,EAAU9B,MAAMvD,OAAS,IAAO,kBAAC,GAAD,CAAOwC,MAAM,4BAcxD,kBAAC4wB,GAAD,CACQtc,sBAAuB0a,EACvBza,yBAA0B0a,EAC1BxB,iBAAkBA,EAClBD,cAAeA,IAErB,kBAACqD,GAAD,CACMvc,sBAAuB4a,EACvB3a,yBAA0Bsa,EAC1BpB,iBAAkBA,EACxBD,cAAeA,EACfW,4BAA6BA,EAC7BC,YAAaA,IAMd,kBAAC,KAAD,CACCpuB,MAAM,0BACNkP,SAAS,EACT6D,KAjVmB,SAAC9J,GACtBgmB,GAAgB,IAiVdjc,SA7UuB,SAAC/J,GAC1BgmB,GAAgB,IA6Ud6B,OAAQ,KACR5d,OAAO,QAEP,kBAAChX,EAAD,CAAYI,MAAM,4B,UCpiBdmS,GAAYC,KAAZD,QASFI,GAA0B,SAACC,GAC7BC,KAAa/I,MAAM,CACf8I,QAASA,GAAW,gBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BAK7CoG,GAAwB,SAAC9D,GAC3BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAsWpC2H,GA/UK,SAAC,GAAyF,IAAvFG,EAAsF,EAAtFA,sBAAuBC,EAA+D,EAA/DA,yBAA0Bwc,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAA0B,EAE5D5pB,EAAe,GAAI,WAAY,QAF6B,mBAElG6pB,EAFkG,KAEnFC,EAFmF,OAGzErnB,oBAAS,GAHgE,mBAGxFuF,GAHwF,aAIjEvF,oBAAS,GAJwD,mBAIlGsL,EAJkG,KAIpFC,EAJoF,OAKzDvL,mBAAS,IALgD,mBAKlG4F,EALkG,KAKhFH,EALgF,OAM3CzF,oBAAS,GANkC,mBAMlG0F,EANkG,aAO7C1F,mBAAS,KAPoC,mBAO1EsnB,GAP0E,aAQzEtnB,mBAAS,IARgE,mBAQlG6F,EARkG,KAQxFC,EARwF,OASvE9F,oBAAS,GAT8D,mBASlG+F,EATkG,KASvFC,EATuF,OAU1DhG,oBAAS,GAViD,mBAUlG4L,EAVkG,KAUjFoE,EAViF,OAWzEhQ,mBAAS,IAXgE,mBAWlG8P,EAXkG,KAWxFC,EAXwF,OAYjF/P,mBAAS,IAZwE,mBAYlG/M,EAZkG,KAY5Fs0B,EAZ4F,QAa/DvnB,mBAAS,IAbsD,qBAalGwnB,GAbkG,MAanFC,GAbmF,MAmBnGvpB,GAAY,uCAAG,8BAAAd,EAAA,6DACjB4I,GAAa,GAEPqB,EAAW,IAAIC,SACrBzB,EAAS0B,SAAQ,SAAAC,GACbH,EAASI,OAAO,SAAUD,EAAMA,EAAKvU,SAEzCoU,EAASI,OAAO,OAAQxU,GACxBoU,EAASI,OAAO,YAAa+f,IARZ,SAWSH,EAAoB,CAC1CzrB,KAAMyL,IAZO,OAWXqgB,EAXW,OAgBjB1hB,GAAa,GAET0hB,GAAsC,OAAvBA,EAAYlwB,QAE3BM,QAAQC,IAAI,cAAe2vB,GAC3BP,EAAa,GAAD,oBAAKD,GAAL,cACRlyB,GAAI0yB,EAAW,KAAW,GAC1BxyB,IAAKwyB,EAAW,KAAW,GAC3Bz0B,KAAMy0B,EAAW,MAAY,GAC7BlyB,UAAWkyB,EAAW,WAAiB,GACvCC,KAAMD,EAAW,MAAY,GAC7BzxB,MAAOyxB,EAAW,OAAa,IAE5BA,MAGP5hB,EAAY,IACZE,GAAa,GACbhB,GAAwB,mBACxB0F,GAAyB,GACzB6c,EAAQ,IACRD,EAA0B,IAK1B5c,GAAyB,IAGzB3B,GAAsB,6CA7CT,4CAAH,qDAoGZlB,GAAc,CAEhBE,SAAU,SAAAP,GACN1B,GAAY,SAAAkC,GACR,IAAMC,EAAQpC,EAASpR,QAAQ+S,GACzBU,EAAcrC,EAASrR,QAE7B,OADA0T,EAAYC,OAAOF,EAAO,GACnBC,MAIfE,aAAc,SAAAZ,GAIV,OAHA1B,GAAY,SAAAkC,GACR,MAAM,GAAN,oBAAWnC,GAAX,CAAqB2B,QAElB,GAEX3B,YAwFJ,IAAMiL,GACF,6BACKlF,EAAkB,kBAACgB,GAAA,EAAD,MAAsB,kBAACC,GAAA,EAAD,MACzC,yBAAK3Z,UAAU,mBAAf,WAIR,OACI,oCACI,kBAAC,KAAD,CACII,MAAO,CACH2V,IAAK,QAET9S,MAAM,gBACNkP,QAASoF,EACTvB,KAAMhL,GACNiL,SAxKS,SAAC/J,GAClBsL,GAAyB,IAwKjBrB,OAAO,eACPyD,cAAe,CACXxN,QAASyG,EACTgH,SAAU,SACVja,WAvKRs0B,EAAc5qB,WA0KV4M,UAAW,CACPjK,OAAQ,IACR+D,QAAS,SAIb,kBAAC7Q,EAAD,CACII,MAAM,OACNE,MAAOM,EACPA,KAAK,OACLJ,SAAU,SAACuM,GAAD,OAAYmoB,EAAQnoB,EAAE3E,OAAO9H,QACvCI,QAASq0B,EAAcjrB,MAAd,WAETnJ,YAAao0B,EAAcjrB,MAAd,aAGjB,yBAAK7I,MAAO,CACRsP,UAAW,UAIf,wBAAI1P,UAAU,mBAAd,aACA,kBAAC,KAAD,CACID,KAAK,SACLwW,SAAS,eACTvW,UAAU,kBACVoe,gBAAgB,EAChBlJ,aAzEhB,SAAsBZ,GAiBlB,MAhBiC,eAAdA,EAAK9U,MAAuC,cAAd8U,EAAK9U,MAElDuS,KAAQ9I,MAAM,qCAEHqL,EAAK+B,KAAO,KAAO,KAAO,GAErCtE,KAAQ9I,MAAM,gCAbtB,SAAmBjE,EAAKqY,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc1Y,GAcrB2Y,CAAUrJ,GAAM,SAAAsI,GACZC,EAAYD,GACZ2X,GAAiBjgB,GACjBwI,GAAoB,OAGjB,GAyDKlI,UAAU,GAETgI,EAAW,yBAAKtV,IAAKsV,EAAU1X,IAAI,SAAS9E,MAAO,CAAE6M,MAAO,UAAe2Q,IAKhF,yBAAKxd,MAAO,CACRsP,UAAW,SAEf,wBAAI1P,UAAU,mBAAd,uBAKA,kBAAC,GAAD,eACI4U,UAAU,EACV5U,UAAU,qBACVuW,SAAS,UACTnW,MAAO,CACHgP,WAAY,SAEZuF,IAEJ,uBAAG3U,UAAU,wBACT,kBAAC00B,GAAA,EAAD,OAEJ,uBAAG10B,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2GAMHk0B,EAAcjrB,MAAd,cACG,uBAAG7I,MAAO,CACNqP,MAAO,2BACPykB,EAAcjrB,MAAd,eASZ,kBAAC,GAAD,CACImJ,WAAYiG,EACZlG,QAASiG,EACT/F,YAAaA,EACbC,sBAAsB,EACtBC,oBAAqBA,EACrBC,wBAAyBA,EACzBE,iBAAkBA,MCpY1BwH,GAAW/a,IAAX+a,OAIFpI,GAA0B,SAACC,GAChCC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BAKtCoG,GAAwB,SAAC9D,GAChCC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAyO/B7C,gBA/NM,SAAC,GAAqB,EAApBkC,QAAqB,IAAD,EAENhC,mBAAS,IAFH,mBAEhCknB,EAFgC,KAEtBC,EAFsB,OAII5pB,EAAe,GAAI,aAJvB,mBAIhCsqB,EAJgC,KAIpBC,EAJoB,OAKYvqB,EAAe,GAAI,eAL/B,mBAKdwqB,GALc,aAMkBxqB,EAAe,GAAI,eANrC,mBAMRyqB,GANQ,WAUvC9qB,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACK0qB,EAAqB,IAD1B,OACVG,EADU,OAGhBd,EAAac,GAHG,2CAAH,qDAKfC,KACC,IAjBqC,MAuBgBloB,oBAAS,GAvBzB,mBAuBlCyK,EAvBkC,KAuBZC,EAvBY,KAsCnCyd,EAAiB,uCAAG,WAAOnzB,GAAP,eAAAoI,EAAA,sEACK2qB,EAAuB,CAClDj0B,WAAY,CACVE,aAAc,CACZgB,SAJkB,QAClBozB,EADkB,SAUqB,OAA1BA,EAAe5wB,OAClCwN,GAAwB,mBAIxB+D,GAAsB,qDAfE,2CAAH,sDAsBjBsf,EAAiB,uCAAG,WAAOrzB,GAAP,iBAAAoI,EAAA,sEACK4qB,EAAuB,CAClDl0B,WAAY,CACVE,aAAc,CACZgB,SAJkB,QAClBszB,EADkB,SAUqB,OAA1BA,EAAe9wB,QAClCwN,GAAwB,iBAClBujB,EAAgBrB,EAAUjgB,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KAC3DmyB,EAAaoB,IAGfxf,GAAsB,yCAhBI,2CAAH,sDAuBxB,OACC,oCAIE,yBAAK7V,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,UAMA,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,kBACZC,SAAU,SAAAtc,GAAK,OA5EF,SAACA,GACpB,GAAGk1B,EAAWhzB,KAAKlB,OAAS,EAAG,CAC7B,IAAM40B,EAAeV,EAAWhzB,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKmB,SAASzB,MACvEw0B,EAAaoB,IAyEUpZ,CAAaxc,OAI9B,kBAAC,IAAD,CAEFO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAMqL,GAAyB,KAJtC,YAWA,yBAAKxX,UAAU,uCAMxB,yBAAKA,UAAU,uCACT20B,EAAWprB,MAAQyqB,EAAUvzB,OAAS,GAE5C,yBAAKT,UAAU,4CAEPg0B,EAAUhzB,KAAI,SAAA4E,GACb,OACE,yBAAK5F,UAAU,iDAIX,yBAAKA,UAAU,qDACf,yBACEkF,IAAI,YACJoC,IAAK1B,EAAMtD,aAGf,yBAAKtC,UAAU,sDACb,gCAAM4F,EAAM7F,KAAZ,KAEA,yBACEK,MAAO,CACLsO,QAAS,OACTC,eAAgB,kBAGlB,kBAAC,KAAD,CAASmB,UAAU,MAAM7M,MAAM,qBAC/B,kBAAC,IAAD,CAEDoT,KAAK,QACLrW,UAAU,6BACV0G,KAAM,kBAACmQ,GAAA,EAAD,MACN1K,QAAS,kBAAM8oB,EAAkBrvB,EAAM9D,MAEtC,0BAAM1B,MAAO,CACX+W,SAAS,SADX,gBAaA,kBAAC,KAAD,CAASrH,UAAU,MAAM7M,MAAM,gBAC/B,kBAAC,KAAD,CAELgU,UAAW,kBAAMke,EAAkBvvB,EAAM9D,KACzCmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAElD,kBAAC,IAAD,CACab,KAAK,QACL7W,KAAK,OACL81B,QAAQ,EACR5uB,KAAM,kBAACoQ,GAAA,EAAD,iBAoBrB6d,EAAWrrB,WAAa,kBAAC4S,GAAD,MAExByY,EAAWprB,QAAUyqB,EAAUvzB,OAAS,IACzC,kBAAC,GAAD,CAAOwC,MAAM,qBAQhB0xB,EAAWprB,MACZ,kBAACgsB,GAAD,CACMhe,sBAAuBA,EACvBC,yBAA0BA,EAC1Bwc,UAAWW,EAAWhzB,KACtBsyB,aAAcA,QC1PTuB,GARD,SAAC3oB,GACX,OACI,uCCAO4oB,GAJC,SAAC5oB,GAChB,OAAO,yCCuCFgJ,IArBmBtL,MAAaC,MAAM,CACxCvH,MAAOsH,MACFhL,MAAM,SACNF,SAAS,+BACdq2B,WAAYnrB,MACPhL,MAAM,eACNF,SAAS,kCAeY,SAAC0S,GAC3BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,0BAK7C7E,GAAgB,CAClB3H,MAAO,GACP0yB,UAAW,GACXD,WAAY,IA4LDE,GAlLQ,SAAC,GAAgB,qBAE6BvrB,EAAe,GAAI,sBAFjD,mBAE5BwrB,EAF4B,KAEHC,EAFG,OAGiBzrB,EAAe,GAAI,gBAHpC,mBAG5B0rB,EAH4B,KAGTC,EAHS,KAOnChsB,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACU8rB,EAAuB,IADjC,yDAAH,qDAKrBC,KACD,CAACJ,IAKJ,IAAM7qB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAGY4rB,EAA8B,CAEvDptB,KAAM,CACFzF,MAAOgI,EAAOhI,MACd0yB,UAAW1qB,EAAO0qB,UAClBD,WAAYzqB,EAAOyqB,cARV,QAGXQ,EAHW,SAa+B,OAA1BA,EAAe5xB,QA/DZyN,OAgErBD,EA/DRE,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,oBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAwEvCvE,EAAQsO,aAGR3D,KAMJ3K,EAAQC,eAAc,GAnCL,iCAlDO,IAAC4G,IAkDR,OAAH,wDA2CZ3G,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOhI,OAAUgI,EAAOyqB,YAAerqB,IAsBhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAfAmrB,EAAkBp0B,MAAQpB,OAAOC,KAAKu1B,EAAkBp0B,MAAMlB,OAAS,EAChE,eAAKs1B,EAAkBp0B,MAGvBiJ,KAeN,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,yBAAK/L,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACb,EAAD,CACII,MAAM,aACNE,MAAOwL,EAAOhI,MACdlD,KAAK,QACLF,QAAU+L,EAAQ3I,OAASyI,EAAOzI,QAC5B0I,GAAgBkqB,EAAwB5sB,MAAxB,YAEtBnJ,YAAc8L,EAAQ3I,OAASyI,EAAOzI,QAChC0I,GAAgBkqB,EAAwB5sB,MAAxB,YACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAK7L,UAAU,gCACX,kBAACb,EAAD,CACII,MAAM,aACNE,MAAOwL,EAAO0qB,UACd51B,KAAK,YACLF,QAAU+L,EAAQ+pB,WAAajqB,EAAOiqB,YAChChqB,GAAgBkqB,EAAwB5sB,MAAxB,gBAEtBnJ,YAAc8L,EAAQ+pB,WAAajqB,EAAOiqB,YACpChqB,GAAgBkqB,EAAwB5sB,MAAxB,gBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAK7L,UAAU,qCACX,kBAACb,EAAD,CACII,MAAM,cACNE,MAAOwL,EAAOyqB,WACd31B,KAAK,aACLF,QAAU+L,EAAQ8pB,YAAchqB,EAAOgqB,aACjC/pB,GAAgBkqB,EAAwB5sB,MAAxB,iBAEtBnJ,YAAc8L,EAAQ8pB,YAAchqB,EAAOgqB,aACrC/pB,GAAgBkqB,EAAwB5sB,MAAxB,iBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,mBAQhC,kBAAC,IAAD,CACIrM,KAAK,UACL2M,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACT/L,SAAUwL,EAA0BH,EAAQI,IAJhD,eC5MlBf,GAAmBC,MAAaC,MAAM,CACxC2rB,aAAc5rB,MAAahL,MAAM,SAASF,SAAS,+BAcjDwW,GAAwB,SAAC9D,GAC3BC,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAK7C7E,GAAgB,CAClBurB,aAAc,GACdC,QAAS,GACT1wB,MAAO,GACPD,MAAO,GACP4wB,eAAgB,IA+NLT,GApNQ,SAAC,GAAgB,qBAEiCvrB,EAAe,GAAI,yBAFrD,mBAE5BisB,EAF4B,KAEFC,EAFE,OAG2BlsB,EAAe,GAAI,yBAH9C,mBAG5BmsB,EAH4B,KAGNC,EAHM,KAOnCzsB,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACUusB,EAA8B,IADxC,yDAAH,qDAKrBR,KACD,CAACK,IAIJ,IAAMtrB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAEcqsB,EAAiC,CAE5D7tB,KAAM,CACFytB,aAAclrB,EAAOkrB,aACrBC,QAASnrB,EAAOmrB,QAChB1wB,MAAOuF,EAAOvF,MACdD,MAAOwF,EAAOxF,MACd4wB,eAAgBprB,EAAOorB,kBATd,QAEXK,EAFW,SAemC,OAA5BA,EAAiBpyB,QAnEhByN,OAoErBD,EAnERE,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,oBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BA4EvCvE,EAAQsO,aAGR3D,KAIJ3K,EAAQC,eAAc,GAnCL,iCApDO,IAAC4G,IAoDR,OAAH,wDA2CZ3G,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOkrB,eAAiB9qB,GAsBjC,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBkB,oBAAoB,EACpBZ,cAlBA4rB,EAAqB70B,MAAQpB,OAAOC,KAAKg2B,EAAqB70B,MAAMlB,OAAS,EACtE,eAAK+1B,EAAqB70B,MAG1BiJ,KAkBN,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,yBAAK/L,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACb,EAAD,CACII,MAAM,eACNE,MAAOwL,EAAOkrB,aACdp2B,KAAK,eACLF,QAAU+L,EAAQuqB,cAAgBzqB,EAAOyqB,eACnCxqB,GAAgB2qB,EAAyBrtB,MAAzB,mBAEtBnJ,YAAc8L,EAAQuqB,cAAgBzqB,EAAOyqB,eACvCxqB,GAAgB2qB,EAAyBrtB,MAAzB,mBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,oBAI5B,yBAAK7L,UAAU,gCACX,kBAACb,EAAD,CACII,MAAM,eACNE,MAAOwL,EAAOvF,MACd3F,KAAK,QACLF,QAAU+L,EAAQlG,OAASgG,EAAOhG,QAC5BiG,GAAgB2qB,EAAyBrtB,MAAzB,YAEtBnJ,YAAc8L,EAAQlG,OAASgG,EAAOhG,QAChCiG,GAAgB2qB,EAAyBrtB,MAAzB,YACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAK7L,UAAU,gCACX,kBAACb,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOxF,MACd1F,KAAK,QACLF,QAAU+L,EAAQnG,OAASiG,EAAOjG,QAC5BkG,GAAgB2qB,EAAyBrtB,MAAzB,YAEtBnJ,YAAc8L,EAAQnG,OAASiG,EAAOjG,QAChCkG,GAAgB2qB,EAAyBrtB,MAAzB,YACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,aAM5B,yBAAK7L,UAAU,gCACX,kBAACb,EAAD,CACII,MAAM,kBACNE,MAAOwL,EAAOorB,eACdt2B,KAAK,iBACLF,QAAU+L,EAAQyqB,gBAAkB3qB,EAAO2qB,iBACrC1qB,GAAgB2qB,EAAyBrtB,MAAzB,qBAEtBnJ,YAAc8L,EAAQyqB,gBAAkB3qB,EAAO2qB,iBACzC1qB,GAAgB2qB,EAAyBrtB,MAAzB,qBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,sBAM5B,yBAAK7L,UAAU,qCACX,kBAAC,GAAD,CACIT,MAAM,UACNE,MAAOwL,EAAOmrB,QACdr2B,KAAK,UACLF,QAAU+L,EAAQwqB,SAAW1qB,EAAO0qB,UAC9BzqB,GAAgB2qB,EAAyBrtB,MAAzB,cAEtBnJ,YAAc8L,EAAQwqB,SAAW1qB,EAAO0qB,UAClCzqB,GAAgB2qB,EAAyBrtB,MAAzB,cACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,gBAQhC,kBAAC,IAAD,CACIM,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACT/L,SAAUwL,EAA0BH,EAAQI,GAC5C7L,KAAK,WAJT,eC/NhBoS,IAJiBrH,MAAaC,MAAM,CAC3CzK,KAAMwK,MAAahL,MAAM,QAAQF,SAAS,oBAAoBqL,IAAI,EAAG,0CAGlDmH,KAAZD,SAuOOwF,GAjMK,SAAC,GAAwF,EAAtFG,sBAAsF,EAA/DC,yBAA+D,EAArCG,UAAqC,EAA1BD,aAA2B,IAAD,EAE/DrN,EAAe,GAAI,YAF4C,gCAG9EyC,oBAAS,IAHqE,gCAI5EA,oBAAS,IAJmE,mBAI3FuF,GAJ2F,aAKpEvF,oBAAS,GAL2D,mBAKrGsL,EALqG,KAKvFC,EALuF,KAuF5G,OACC,oCACC,yBAAKrY,UAAU,qBAEd,kBAAC,KAAD,CAAMoW,iBAAiB,KACtB,kBAAC,GAAD,CAASE,IAAI,YAAYtU,IAAI,KAC5B,kBAAC20B,GAAD,OA4ED,kBAAC,GAAD,CAASrgB,IAAI,oBAAoBtU,IAAI,KAEpC,kBAAC40B,GAAD,SASH,kBAAC,GAAD,CACCxkB,WAAYiG,EACZlG,QAASiG,EACT/F,YAAaA,EACbC,sBAAsB,MCpLXukB,GAhEQ,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,mBAAoBC,EAAuD,EAAvDA,sBAAuBC,EAAgC,EAAhCA,mBAAgC,EACtDlqB,mBAAS,CACtDmqB,aAAcH,EAAmBG,aACjC7wB,OAAQ0wB,EAAmB1wB,SAHwE,mBAC5F8wB,EAD4F,KAC5EC,EAD4E,KAM9FC,EAA6B,SAAClrB,GACnC,IAAMnM,EAAOmM,EAAE3E,OAAOxH,KAChBN,EAAQyM,EAAE3E,OAAO9H,MAEvB03B,EAAkB,eACdD,EADa,gBAEfn3B,EAAON,MAIVuK,qBACC,WACC,IAIM+K,EAHEiiB,EAAmBh2B,KAAI,SAAC+E,GAAD,OAAUA,EAAKjE,MAAIP,QAAQu1B,EAAmBh1B,IAKvE4T,EAAcnV,OAAOoV,OAAO,GAAIqhB,EAAmBjiB,GAArCxU,OAAA,IAAAA,CAAA,GAAkD22B,IAChE3T,EAAmB,uBACrByT,EAAmB11B,MAAM,EAAGyT,IADP,CAExBW,GAFwB,aAGrBshB,EAAmB11B,MAAMyT,EAAQ,KAErCgiB,EAAsBxT,KAEvB,CAAE2T,IAQH,OACC,yBAAKl3B,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCK,KAAK,SACLF,YAAY,gBACZG,MAAOy3B,EAAeD,aACtBl3B,KAAK,eACLJ,SAAUy3B,KAGZ,yBAAKp3B,UAAU,yBACd,kBAACb,EAAD,CACCK,KAAK,SACLF,YAAY,SACZG,MAAOy3B,EAAe9wB,OACtBrG,KAAK,SACLJ,SAAUy3B,OCtCP9f,GAAWD,KAAXC,OAGFxF,GAA0B,SAACC,GAChCC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,mBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,+BAKvCoG,GAAwB,SAAC9D,GAC9BC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBASvCnF,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MACJhL,MAAM,QACNF,WACAqL,IAAI,EAAG,yCACTzE,eAAgBsE,MACdhL,MAAM,oBACNF,WACAqL,IAAI,EAAG,qDACTnG,KAAMgG,MACJhL,MAAM,QACNF,WACAqL,IAAI,EAAG,2CAOJE,GAAgB,CACrB7K,KAAM,GACNkG,eAAgB,GAChB1B,KAAM,IA0ZQ8yB,GA7YM,SAAC,GAA2F,IAAzF9f,EAAwF,EAAxFA,sBAAuBC,EAAiE,EAAjEA,yBAA0B8f,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,cAA2B,EAEnEltB,EAAe,GAAI,aAFgD,mBAExGmtB,EAFwG,KAExFC,EAFwF,OAGvD3qB,mBAAS,IAH8C,mBAGxGsc,EAHwG,KAGlFC,EAHkF,OAI7Dvc,mBAAS,IAJoD,mBAIxGwc,EAJwG,KAIrFC,EAJqF,OAMnEzc,mBAAS,IAN0D,mBAMxG0c,EANwG,KAMxFC,EANwF,OAOzE3c,mBAAS,IAPgE,mBAOxG4c,EAPwG,KAO3FC,EAP2F,OAS5Dtf,EAClD,GACA,eAX8G,mBASxGuf,EATwG,KAStFC,EATsF,OAclExf,EAAe,GAAI,YAd+C,mBAcxGyf,EAdwG,KAczFC,EAdyF,OAgBzEjd,mBAAS,IAhBgE,gCAiB/EA,mBAAS,KAjBsE,gCAmB3DA,mBAAS,CAAC,CAC7DmqB,aAAc,GACd7wB,OAAQ,GACRtE,GAAI,QAtB0G,mBAmBxGk1B,EAnBwG,KAmBpFD,EAnBoF,KA0BzG/rB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,+BAAAhB,EAAA,2DAGhB8sB,EAAmBv2B,OAAS,GAHZ,iBAMnB,IAFM2F,EAAS,GAJI,4BAMnB,EAAiB4wB,EAAjB,+CAASjxB,EAA4B,QACC,KAAjCK,EAAOL,EAAI,eAA+C,KAAnBA,EAAI,SAC9CK,EAAOL,EAAI,cAAoBA,EAAI,QARlB,wPAaQ0xB,EAAkB,CAE5C/uB,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkG,eAAgBgF,EAAOhF,eACvB1B,KAAM0G,EAAO1G,KACbgB,QAAS6jB,EACT5jB,KAAM8jB,EACNljB,YArBiB,SAabknB,EAba,SA2ByB,OAAxBA,EAAahpB,QAChCwN,KAEAylB,EAAc,GAAD,oBAAKD,GAAL,cACZx1B,GAAIwrB,EAAY,IAAU,GAC1BtrB,IAAKsrB,EAAY,IAAU,GAC3BvtB,KAAMutB,EAAY,MAAY,IAE3BA,MAEJ9V,GAAyB,GACzBtM,EAAQsO,aAGR3D,KAzCkB,yCAgDQ4hB,EAAkB,CAE5C/uB,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkG,eAAgBgF,EAAOhF,eACvB1B,KAAM0G,EAAO1G,KACbgB,QAAS6jB,EACT5jB,KAAM8jB,EACNljB,OAAQ,MAxDS,SAgDbknB,EAhDa,SA8DyB,OAAxBA,EAAahpB,QAChCwN,KAEAylB,EAAc,GAAD,oBAAKD,GAAL,cACZx1B,GAAIwrB,EAAY,IAAU,GAC1BtrB,IAAKsrB,EAAY,IAAU,GAC3BvtB,KAAMutB,EAAY,MAAY,IAE3BA,MAEJ9V,GAAyB,GACzBtM,EAAQsO,aAGR3D,KA5EkB,QAmFpB3K,EAAQC,eAAc,GAnFF,2EAAH,wDAwFZ8e,EAAe,SAACxqB,GACrB8pB,EAAqB9pB,IAGhByqB,EAAkB,SAACzqB,GACxB4pB,EAAwB5pB,IAGzBuK,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2f,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe1pB,OAAS,IAEvC+oB,EAAiBW,EAAenpB,KAAI,SAACuE,GAC1C,MAAO,CACN9F,MAAO8F,EAAQxF,KACfA,KAAMwF,EAAQxF,SAGhB0pB,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpgB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6f,EAAoB,CAC7CnpB,WAAY,CACXE,aAAc,CACbyE,QAAS6jB,MAJK,QACXiB,EADW,SAUEA,EAAY5pB,OAAS,IAEjCipB,EAAcW,EAAYrpB,KAAI,SAACwE,GACpC,MAAO,CACN/F,MAAO+F,EAAKzF,KACZA,KAAMyF,EAAKzF,SAGb4pB,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAKJ,IAAM3P,GAAe,SAACvN,GACrBsL,GAAyB,IAIpBpM,GAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAOlL,MACPkL,EAAOhF,gBACPgF,EAAO1G,OASJmzB,GAA0B,WAC/BX,EAAsB,GAAD,oBAAKC,GAAL,CAAyB,CAC7CC,aAAc,GACd7wB,OAAQ,GACRtE,GAAG,GAAD,OAAKk1B,EAAmBv2B,aAQ5B,OACC,kBAAC,IAAD,CACC6K,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC3L,MAAO,CACN2V,IAAK,QAGNG,UAAW,CACVjK,OAAQ,IACR+D,QAAS,QAEV/M,MAAM,iBACNkP,QAASoF,EACTvB,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,GACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,GAA0BH,EAAQI,KAK7C,yBAAKrL,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,OACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgB6rB,EAAevuB,MAAf,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgB6rB,EAAevuB,MAAf,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,YAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,mBACNE,MAAOwL,EAAOhF,eACdlG,KAAK,iBACLF,QAAU+L,EAAQ3F,gBAAkByF,EAAOzF,iBACxC0F,GAAgB6rB,EAAevuB,MAAf,qBAEnBnJ,YAAc8L,EAAQ3F,gBAAkByF,EAAOzF,iBAC5C0F,GAAgB6rB,EAAevuB,MAAf,qBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,uBAiBpB,yBAAKzL,MAAO,CACXyP,YAAa,SAEb,kBAAC1Q,EAAD,CACCI,MAAM,OACNE,MAAOwL,EAAO1G,KACdxE,KAAK,OACLF,QAAU+L,EAAQrH,MAAQmH,EAAOnH,OAC9BoH,GAAgB6rB,EAAevuB,MAAf,WAEnBnJ,YAAc8L,EAAQrH,MAAQmH,EAAOnH,OAClCoH,GAAgB6rB,EAAevuB,MAAf,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,YAOnB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACCuqB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,mBAAmB8C,MAAOyJ,KAAMK,yBACpEiP,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,mBACZiC,iBAAiB,WACjBpe,SAAUuqB,EACVlM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F4N,EAAiBrgB,MACjBqgB,EAAiBjoB,KAAKlB,OAAS,GAC/B+oB,EAAexoB,KAAI,SAACkd,GACnB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,WAIhD,yBAAKC,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACCuqB,gBAAiB,kBAAC,KAAD,CAAOtoB,YAAY,yBAAyB8C,MAAOyJ,KAAMK,yBAC1EtB,KAAK,WACLuQ,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,gBACZiC,iBAAiB,WACjBpe,SAAUsqB,EACVjM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F8N,EAAcvgB,MACdugB,EAAcnoB,KAAKlB,OAAS,GAC5BipB,EAAY1oB,KAAI,SAACkd,GAChB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,YAQjD,yBAAKK,MAAO,CACXsP,UAAW,UAEZ,wBAAI1P,UAAU,mBAAd,oBAICg3B,EAAmBh2B,KAAI,SAAA81B,GACvB,OAAO,kBAAC,GAAD,CACNA,mBAAoBA,EACpBE,mBAAoBA,EAAoBD,sBAAuBA,OAKjE,yBAAK32B,MAAO,CACXsP,UAAW,SAEZ,kBAAC,IAAD,CAAQ2G,KAAK,SACZlK,QAASurB,GACTl4B,KAAK,SAASkH,KAAM,kBAACiT,GAAA,EAAD,OAFrB,oBCzcCrC,GAAWD,KAAXC,OAGFhN,GAAmBC,MAAaC,MAAM,CAC3CzK,KAAMwK,MACJhL,MAAM,QACNF,WACAqL,IAAI,EAAG,yCACTzE,eAAgBsE,MACdhL,MAAM,oBACNF,WACAqL,IAAI,EAAG,qDACTnG,KAAMgG,MACJhL,MAAM,QACNF,WACAqL,IAAI,EAAG,2CAeJmL,GAAwB,SAAC9D,GAC9BC,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,yBAiU9B6O,GApTG,SAAC,GAAyE,IAAvElZ,EAAsE,EAAtEA,SAAUgN,EAA4D,EAA5DA,WAAYD,EAAgD,EAAhDA,QAASolB,EAAuC,EAAvCA,cAAeD,EAAwB,EAAxBA,WAAwB,EACrCjtB,EAAe,GAAI,gBADkB,mBACnFstB,EADmF,KAChEC,EADgE,OAIlC9qB,mBAAS,IAJyB,mBAInFsc,EAJmF,KAI7DC,EAJ6D,OAKxCvc,mBAAS,IAL+B,mBAKnFwc,EALmF,KAKhEC,EALgE,OAO9Czc,mBAAS,IAPqC,mBAOnF0c,EAPmF,KAOnEC,EAPmE,OAQpD3c,mBAAS,IAR2C,mBAQnF4c,EARmF,KAQtEC,EARsE,OAUvCtf,EAClD,GACA,eAZyF,mBAUnFuf,EAVmF,KAUjEC,EAViE,OAe7Cxf,EAAe,GAAI,YAf0B,mBAenFyf,EAfmF,KAepEC,EAfoE,OAiBpDjd,mBAAS,IAjB2C,gCAkB1DA,mBAAS,KAlBiD,mBAsBpF9B,GAtBoF,UAsBxE,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEAGO0tB,EAAwB,CAElDlvB,KAAM,CACL3I,KAAMkL,EAAOlL,KACbkG,eAAgBgF,EAAOhF,eACvB1B,KAAM0G,EAAO1G,KACbgB,QAAS6jB,EACT5jB,KAAM8jB,EACNljB,OAAQ,MAXU,QAGdknB,EAHc,SAgBwB,OAAxBA,EAAahpB,QAhEFyN,OAiE9BD,EAhEFE,KAAarN,QAAQ,CACpBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAmEpCsF,EAJgB,WACrB,OAAOuiB,EAAWt2B,KAAI,SAAA+E,GAAI,OAAIA,EAAKjE,MAAIP,QAAQ6D,EAAStD,IAG3C4c,GAGRhJ,EAAcnV,OAAOoV,OAAO,GAAI2hB,EAAWviB,GAA7BxU,OAAA,IAAAA,CAAA,GAA0C+sB,IACxDC,EAX2C,uBAWpB+J,EAAWh2B,MAAM,EAAGyT,IAXA,CAWQW,GAXR,aAWwB4hB,EAAWh2B,MAAMyT,EAAQ,KAClGwiB,EAAchK,IAId1X,KAGD3K,EAAQC,eAAc,GACtBiH,GAAW,GApCS,iCAhDU,IAACL,IAgDX,OAAH,yDA2CZkY,EAAe,SAACxqB,GACrB8pB,EAAqB9pB,IAGhByqB,EAAkB,SAACzqB,GACxB4pB,EAAwB5pB,IAGzBuK,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2f,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe1pB,OAAS,IAEvC+oB,EAAiBW,EAAenpB,KAAI,SAACuE,GAC1C,MAAO,CACN9F,MAAO8F,EAAQxF,KACfA,KAAMwF,EAAQxF,SAGhB0pB,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpgB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6f,EAAoB,CAC7CnpB,WAAY,CACXE,aAAc,CACbyE,QAAS6jB,MAJK,QACXiB,EADW,SAUEA,EAAY5pB,OAAS,IAEjCipB,EAAcW,EAAYrpB,KAAI,SAACwE,GACpC,MAAO,CACN/F,MAAO+F,EAAKzF,KACZA,KAAMyF,EAAKzF,SAGb4pB,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAQJ,IAAM3P,EAAe,SAACvN,GACrBkG,GAAW,IAKNhH,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAOlL,MACPkL,EAAOhF,gBACPgF,EAAO1G,OAOV,OACC,kBAAC,IAAD,CACC+G,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPxF,KAGL,gBACAqG,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACC9I,MAAM,aACNkP,QAASA,EACT6D,KAAM,SAAC9J,GAAD,OAAYlB,EAAakB,IAC/B+J,SAAUwD,EACVtD,OAAO,SACPyD,cAAe,CACdxN,QAAST,EACTkO,SAAU,SACVja,SAAUwL,EAA0BH,EAAQI,IAE7C6K,UAAW,CACVjK,OAAQ,IACR+D,QAAS,SAKV,yBAAKhQ,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,OACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC9B4L,GAAgBgsB,EAAkB1uB,MAAlB,WAEnBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAClC4L,GAAgBgsB,EAAkB1uB,MAAlB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,YAInB,yBAAK7L,UAAU,yBACd,kBAACb,EAAD,CACCI,MAAM,mBACNE,MAAOwL,EAAOhF,eACdlG,KAAK,iBACLF,QAAU+L,EAAQ3F,gBAAkByF,EAAOzF,iBACxC0F,GAAgBgsB,EAAkB1uB,MAAlB,qBAEnBnJ,YAAc8L,EAAQ3F,gBAAkByF,EAAOzF,iBAC5C0F,GAAgBgsB,EAAkB1uB,MAAlB,qBACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,uBAiBpB,yBAAKzL,MAAO,CACXyP,YAAa,SAEb,kBAAC1Q,EAAD,CACCI,MAAM,OACNE,MAAOwL,EAAO1G,KACdxE,KAAK,OACLF,QAAU+L,EAAQrH,MAAQmH,EAAOnH,OAC9BoH,GAAgBgsB,EAAkB1uB,MAAlB,WAEnBnJ,YAAc8L,EAAQrH,MAAQmH,EAAOnH,OAClCoH,GAAgBgsB,EAAkB1uB,MAAlB,WACnBtJ,SAAU,SAACuM,GACVT,EAAaS,GACbL,EAAgB,YAOnB,yBAAK7L,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACC8d,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,mBACZiC,iBAAiB,WACjBre,aAAc0F,GAAYA,EAASG,QACnC5F,SAAUuqB,EACVlM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F4N,EAAiBrgB,MACjBqgB,EAAiBjoB,KAAKlB,OAAS,GAC/B+oB,EAAexoB,KAAI,SAACkd,GACnB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,WAIhD,yBAAKC,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACC8d,YAAU,EACV1d,MAAO,CAAE6M,MAAO,QAChB6O,YAAY,gBACZiC,iBAAiB,WACjBre,aAAc0F,GAAYA,EAASI,KACnC7F,SAAUsqB,EACVjM,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOzb,SAASuZ,cAAcza,QAAQ0c,EAAMjC,gBAAkB,IAE9F8N,EAAcvgB,MACdugB,EAAcnoB,KAAKlB,OAAS,GAC5BipB,EAAY1oB,KAAI,SAACkd,GAChB,OAAO,kBAAC,GAAD,CAAQze,MAAOye,EAAOze,OAAQye,EAAOne,YAOjD,yBAAKK,MAAO,CACXsP,UAAW,gBCnVXsK,GAAwBC,KAAxBD,OACAE,IADwBD,KAAhBE,YACGhb,IAAX+a,QA+BFE,GAAU,SAAC,GAAwC,IAAvCzY,EAAsC,EAAtCA,KAAK41B,EAAiC,EAAjCA,cAAiC,EACvBzqB,oBAAS,GADc,mBAC7CqF,EAD6C,KACrCC,EADqC,OAEKtF,oBAAS,GAFd,mBAE7CwN,EAF6C,KAEvBC,EAFuB,OAGAlQ,EAAe,GAAI,gBAHnB,mBAG1BwtB,GAH0B,WAM5CpK,EAAkB,uCAAG,WAAO3rB,GAAP,iBAAAoI,EAAA,sEACK2tB,EAAuB,CACnDj3B,WAAY,CACVE,aAAc,CACZgB,SAJmB,QACnBg2B,EADmB,SAUoB,OAA3BA,EAAgBxzB,SA3CTyN,EA4CJ,iBA3C5BC,KAAarN,QAAQ,CACnBoN,QAASA,GAAW,cACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BAyCnCsoB,EAAiBp2B,EAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKjE,KAAOA,KACvDy1B,EAAcQ,IAbc,iCAjCD,IAAChmB,IAiCA,OAAH,sDAmB1B,OACI,oCACA,kBAAC,KAAD,CAMAsE,KAAK,QAELyE,WAAYnZ,GAGV,kBAAC,GAAD,CACCsB,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,mBACN8X,UAAU,iBACV/Y,IAAI,KACJhC,UAAU,yBAOrB,kBAAC,GAAD,CACWiD,MAAM,UACN8X,UAAU,cACV/Y,IAAI,KACJhC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAIrB,kBAAC,GAAD,CACWiD,MAAM,OACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,SACN8X,UAAU,OACV/Y,IAAI,KACJhC,UAAU,yBA+Bb,kBAAC,GAAD,CAEAA,UAAU,uBACRiD,MAAM,GACNjB,IAAI,SACJmZ,MAAM,QACNH,OAAQ,SAACnY,EAAMoY,GAAP,OACN,kBAAC,KAAD,CAAO5E,KAAK,UAEZ,uBAAGnG,KAAK,MACL,kBAAC,KAAD,CAASJ,UAAU,MAAM7M,MAAM,qBAChC,0BAAMjD,UAAU,WAAWmM,QAAS,WAClCiG,GAAW,GACXmI,EAAyBU,KAE3B,kBAACG,GAAA,EAAD,SAQC,kBAAC,KAAD,CAEAnE,UAAW,kBAAMwW,EAAmBxS,EAAOnZ,KAC3CmB,MAAM,qBAAgBkT,OAAO,MAAMe,WAAW,MAElD,0BACElX,UAAU,4BAEV,kBAAC8W,GAAA,EAAD,aAeRwD,GAA2B,kBAAC,GAAD,CAC5BlI,WAAYA,EACZD,QAASA,EACT/M,SAAUkV,EACVgd,WAAY31B,EACZ41B,cAAeA,MA6HJ3qB,gBA7GM,SAAC,GAAqB,EAApBkC,QAAqB,IAAD,EAEJhC,mBAAS,IAFL,mBAEhCwqB,EAFgC,KAErBC,EAFqB,OAIMltB,EAAe,GAAI,cAJzB,mBAIhC2tB,EAJgC,KAInBnK,EAJmB,KAOvC7jB,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACK2jB,EAAsB,IAD3B,OACXC,EADW,OAGjByJ,EAAczJ,GAHG,2CAAH,qDAKhBmK,KACC,IAdqC,MAoBgBnrB,oBAAS,GApBzB,mBAoBlCyK,EApBkC,KAoBZC,EApBY,KAsBzC5S,QAAQC,IAAI,cAAcmzB,GAa3B,OACC,oCAIE,yBAAKh4B,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,WAKA,kBAAC,GAAD,CACE6b,aAAa,EACb7b,UAAU,qBACZ8b,YAAY,mBACZC,SAAU,SAAAtc,GAAK,OA7BF,SAACA,GACpB,GAAGu4B,EAAYr2B,KAAKlB,OAAS,EAAG,CAC9B,IAAMioB,EAAasP,EAAYr2B,KAAKoS,QAAO,SAAAhO,GAAI,OAAIA,EAAKhG,KAAKic,cAAc9a,SAASzB,EAAMuc,kBAC1Fub,EAAc7O,IA0BSzM,CAAaxc,OAI9B,kBAAC,IAAD,CAEFO,UAAU,6BACV0G,KAAM,kBAACiT,GAAA,EAAD,MACNxN,QAAS,kBAAMqL,GAAyB,KAJtC,YAWA,yBAAKxX,UAAU,uCAWxB,yBAAKA,UAAU,uCACTg4B,EAAYzuB,MAAQ+tB,EAAW72B,OAAS,GAAK,kBAAC,GAAD,CAC9C82B,cAAeA,EACf51B,KAAM21B,IACLU,EAAY1uB,WAAa,kBAAC4S,GAAD,MAEzB8b,EAAYzuB,QAAU+tB,EAAW72B,OAAS,IACjD,kBAAC,GAAD,CAAOwC,MAAM,sBAOd+0B,EAAYzuB,MACT,kBAAC,GAAD,CACMgO,sBAAuBA,EACvBC,yBAA0BA,EAC1B8f,WAAYU,EAAYr2B,KACxB41B,cAAeA,Q,oBC3NVW,GAvEO,SAACrrB,GAAkB,IAAD,EACZC,mBAAS,IADG,mBAC7BjK,EAD6B,KACvBs1B,EADuB,OAEFrrB,mBAAS,IAFP,mBAE7BsrB,EAF6B,KAElBC,EAFkB,KAoBpC,OACI,oCACI,yBAAKj4B,MAAO,CACR6M,MAAO,UAEP,wBAAIjN,UAAU,mBAAd,aAIA,kBAAC,KAAD,CACII,MAAO,CACHqO,OAAQ,OACRpO,aAAc,MACdsf,YAAa,kBACb1S,MAAO,QAEXM,KAAK,OAAO5N,SA/B5B,SAAsBF,GAClB,IAAM24B,EAAY,UAAG34B,GAAQsB,MAAM,KACnCs3B,EAAaD,IA6BmCE,gBAAiB,CAAC,OAG1D,yBAAKl4B,MAAO,CACRsP,UAAW,UAEf,kBAAC,GAAD,CACInQ,MAAM,OACNE,MAAOoD,EACP9C,KAAK,OACLJ,SAAU,SAACuM,GACPisB,EAAQjsB,EAAE3E,OAAO9H,UAIzB,kBAAC,IAAD,CAEIW,MAAO,CACHsP,UAAW,QAEfvD,QA7CM,aA8CNvM,UAxCJiD,IAASu1B,EAAU,GA0Cfp4B,UAAU,iBARd,QAUS,0BAAMI,MAAO,CACduP,WAAY,SADX,IAED,kBAAC4oB,GAAA,EAAD,WC1ElB1iB,GAAwB,SAAC9D,GAC3BC,KAAa/I,MAAM,CACf8I,QAASA,GAAW,uBACpB9P,YAAa,GACbyE,KAAM,kBAAC8xB,GAAA,EAAD,CAAkBp4B,MAAO,CAAEqP,MAAO,yBAK1C7E,GAAgB,CAClB7K,KAAM,GACNkC,YAAa,IA2GFw2B,GAnGW,SAAC5rB,GAAkB,IAAD,EACaxC,EAAe,GAAI,gBADhC,mBACjCquB,EADiC,KACdC,EADc,KAIlC3tB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOyuB,EAAwB,CAC5C/3B,WAAY,CACRE,aAAc,CACVgB,GAAImJ,EAAOnJ,KAGnB4G,KAAM,CACF3I,KAAMkL,EAAOlL,KAAKuZ,OAClBrX,YAAagJ,EAAOhJ,eATX,QACXkmB,EADW,SAcqB,OAArBA,EAAU7jB,QA9CFyN,OA+CrBD,EA9CRE,KAAarN,QAAQ,CACjBoN,QAASA,GAAW,wBACpB9P,YAAa,GACbyE,KAAM,kBAACuL,GAAA,EAAD,CAAqB7R,MAAO,CAAEqP,MAAO,8BA8CvCvE,EAAQsO,aAGR3D,KAIJ3K,EAAQC,eAAc,GAzBL,iCAhCO,IAAC4G,IAgCR,OAAH,wDAqClB,OACI,kBAAC,IAAD,CACIzG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IAEpDK,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OAEAS,GAJH,EAGGV,aAHH,EAIGU,QAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC5M,EAAD,CACII,MAAM,QACNE,MAAOwL,EAAOlL,KACdA,KAAK,OACLF,QAAU+L,EAAQ7L,MAAQ2L,EAAO3L,OAC3B4L,GAAgB+sB,EAAkBzvB,MAAlB,WAEtBnJ,YAAc8L,EAAQ7L,MAAQ2L,EAAO3L,OAC/B4L,GAAgB+sB,EAAkBzvB,MAAlB,WACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACItM,MAAM,cACNE,MAAOwL,EAAOhJ,YACdlC,KAAK,cACLF,QAAU+L,EAAQ3J,aAAeyJ,EAAOzJ,cAClC0J,GAAgB+sB,EAAkBzvB,MAAlB,kBAEtBnJ,YAAc8L,EAAQ3J,aAAeyJ,EAAOzJ,cACtC0J,GAAgB+sB,EAAkBzvB,MAAlB,kBACtBtJ,SAAU,SAACuM,GACPT,EAAaS,GACbL,EAAgB,uBChIxC+F,GAAYC,KAAZD,QCVOgnB,GDkBH,SAAC/rB,GACT,OACI,oCACI,yBAAK7M,UAAU,qBAEX,kBAAC,KAAD,CAAMoW,iBAAiB,KACnB,kBAAC,GAAD,CAASE,IAAI,kBAAkBtU,IAAI,KAC/B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAASsU,IAAI,qBAAqBtU,IAAI,KAClC,kBAAC,GAAD,WEHhBwK,GAAYF,IAAZE,QC1BOA,GDgCU,SAACK,GACtB,OACI,kBAAC,GAAD,CACIgsB,UAAU,EACVz4B,MAAO,CACHyQ,gBAAiB,OACjBqW,WAAY,SAGhB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI4R,OAAK,EACLrE,KAAK,IACLzZ,OAAQ,kBAAM,kBAAC,IAAD,CAAUvN,GAAG,cAE/B,kBAAC,IAAD,CACIqrB,OAAK,EACLrE,KAAK,SACLzZ,OAAQ,kBAAM,kBAAC,IAAD,CAAUvN,GAAG,sBAI/B,kBAAC,IAAD,CAAOgnB,KAAK,SAASqE,OAAK,GACtB,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,kBAAkBqE,OAAK,GAC/B,kBAAC,GAAD,OAOJ,kBAAC,IAAD,CAAOrE,KAAK,mBAAmBqE,OAAK,GAChC,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,eAAeqE,OAAK,GAC5B,kBAACC,GAAD,OAEJ,kBAAC,IAAD,CAAOtE,KAAK,iBAAiBqE,OAAK,GAC9B,kBAAC,GAAD,OAKJ,kBAAC,IAAD,CAAOrE,KAAK,aAAaqE,OAAK,GAC1B,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,qBAAqBqE,OAAK,GAClC,kBAACnQ,GAAD,OAEJ,kBAAC,IAAD,CAAO8L,KAAK,mBAAmBqE,OAAK,GAChC,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,eAAeqE,OAAK,GAC5B,kBAACE,GAAD,OAEJ,kBAAC,IAAD,CAAOvE,KAAK,mBAAmBqE,OAAK,GAChC,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,kBAAkBqE,OAAK,GAC/B,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,cAAcqE,OAAK,GAC3B,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,kBAAkBqE,OAAK,GAC/B,kBAACG,GAAD,OAEJ,kBAAC,IAAD,CAAOxE,KAAK,kBAAkBqE,OAAK,GAC/B,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,6BAA6BqE,OAAK,GAC1C,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,wBAAwBqE,OAAK,GACrC,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,yBAAyBqE,OAAK,GACtC,kBAACI,GAAD,OAEJ,kBAAC,IAAD,CAAOzE,KAAK,0BAA0BqE,OAAK,GACvC,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOrE,KAAK,2BAA2BqE,OAAK,GACxC,kBAACK,GAAD,OAEJ,kBAAC,IAAD,CAAO1E,KAAK,aAAaqE,OAAK,GAC1B,kBAAC,GAAD,UE/ELM,GAxBH,WACX,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO3E,KAAK,eAAeqE,OAAK,GAC/B,kBAAC,EAAD,QAGF,kBAAC,IAAD,KAEC,kBAAC,IAAD,CAAQ14B,MAAO,CAAEqkB,UAAW,UAC3B,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAQzkB,UAAU,eACjB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,wCCjCC,SAASq5B,GAAmBC,GAC/B,OAAQA,IAASA,EAAKC,QAAUD,EAAKE,SAGlC,SAASC,GAAiBj6B,GAC7B,OAAOA,EAAK0B,SAAU,eAAkB1B,EAAK0B,SAAU,WCH3D,ICAew4B,GDAK,WAA0B,IAAxBtwB,EAAuB,uDAAf,EAAGC,EAAY,uCACzC,OAAKswB,GAAyBtwB,EAAOiwB,MAC1BlwB,EAENuwB,GAAsBtwB,EAAO7J,MACvB4J,EAAQ,EAEZA,EAAQ,GETZ,SAASwwB,GAAsBC,EAAMv2B,GAC1C,OAAOu2B,EAAK74B,KAAI,SAAA+E,GAAI,OAAIA,EAAKzC,QAAQxB,MAAIP,QAAQ+B,EAAQxB,IAGpD,SAASg4B,GAAYx2B,EAASa,EAAU41B,GAC7C,MAAO,CACLz2B,UACAa,WACA41B,yBCRW,I,GAAA,YAAElwB,GAAF,OAAoB,SAAEmwB,GAAF,OAAkB,WAAqC,IAAnC5wB,EAAkC,uDAA1BS,EAAcR,EAAY,uCAC/EqwB,EAAUM,EAAY3wB,EAAO7J,MACnC,OAAOk6B,EAAUA,EAAStwB,EAAOC,GAAWD,K,qBCAjC,YAACzI,EAAK2H,EAAQI,GAC5B,IAAMT,EAAU,CACfK,SACAE,QAoBM,CACNyxB,OAAQ,mBACR,eAAgB,oBArBhBvxB,KAAiB,QAAXJ,EAAmBK,KAAKC,UAAUF,GAAQ,MAGjD,OAAOwxB,KAAgBv5B,EAAKsH,GAASkyB,MAAK,SAAApxB,GAAG,OAK9C,SAAqBzE,EAAQyE,GAC5B,OAAO,IAAIqxB,SAAQ,SAACC,EAASC,GACxBh2B,GAAU,KAAOA,EAAS,IAC7ByE,EAAIoxB,MAAK,SAAAI,GAAQ,OAAIF,EAAQE,MAE7BxxB,EAAIoxB,MAAK,SAAAI,GAAQ,OAAID,EAAO,CAAEh2B,SAAQi2B,mBATvCC,CAAYzxB,EAAIzE,OAAQyE,EAAI0xB,YCNvB,I,GCMQf,GCKKgB,GAFC,GAEDA,EAAA,sBCdE,eDeJ,SAACtxB,EAAOC,GAAY,IAAD,EACoBA,EAAOG,QAApDlG,EADyB,EACzBA,QAASa,EADgB,EAChBA,SAAU41B,EADM,EACNA,sBAE3B,OAAe,IADDJ,GAA4BvwB,EAAO9F,GAEzC,CACJq2B,GAAkBr2B,EAASa,EAAU41B,IADvC,oBAEK3wB,IAI4BA,EAAM2K,QACvC,SAAChO,GAAD,OAAUA,EAAKzC,QAAQxB,KAAOwB,EAAQxB,SAZxB,gBCbgB,6BD+BJ,SAACsH,EAAOC,GAAY,IACxCtF,EAAcsF,EAAOG,QAArBzF,UAER,OAAIA,EAAUtD,OAAS,EACdsD,EAEA,aAAIqF,MAxBG,gBCZuB,wCDwCJ,SAACA,EAAOC,GAAY,IAC/C/F,EAAY+F,EAAOG,QAAnBlG,QAEFyR,EAAQ4kB,GAA4BvwB,EAAO9F,EAAQA,SACzD,IAAe,IAAXyR,EACF,MAAM,GAAN,oBAAW3L,GAAX,gBAAuB9F,EAAvB,CAAgCy2B,uBAAuB,MAClD,IAAe,IAAXhlB,IAAiBzR,EAAQy2B,sBAAuB,CACzD,IAAMY,EAA6BvxB,EAAM2K,QACvC,SAAChO,GAAD,OAAUA,EAAKzC,QAAQxB,KAAOwB,EAAQA,QAAQxB,MAGhD,MAAM,GAAN,oBACK64B,GADL,gBAEOr3B,EAFP,CAEgBy2B,uBAAuB,MAIzC,IAAMY,EAA6BvxB,EAAM2K,QACvC,SAAChO,GAAD,OAAUA,EAAKzC,QAAQxB,KAAOwB,EAAQA,QAAQxB,MAGhD,MAAM,GAAN,oBACK64B,GADL,gBAEOr3B,EAFP,CAEgBy2B,uBAAuB,SAnDvB,gBCXW,wBDkEJ,SAAC3wB,EAAOC,GAAY,IAAD,EACZA,EAAOG,QAA7BlG,EADkC,EAClCA,QAASa,EADyB,EACzBA,SACX4Q,EAAQ4kB,GAA4BvwB,EAAO9F,GAE3CoS,EAAcnV,OAAOoV,OAAO,GAAIvM,EAAM2L,GAAQ,CAAE5Q,aACtD,MAAM,GAAN,oBAAWiF,EAAM9H,MAAM,EAAGyT,IAA1B,CAAkCW,GAAlC,aAAkDtM,EAAM9H,MAAMyT,EAAQ,QA5DtD,gBCVE,eDwEJ,SAAC3L,EAAOC,GAAY,IAE5B0L,EAAQ4kB,GAA4BvwB,EADtBC,EAAOG,QAAnBlG,SAER,MAAM,GAAN,oBAAW8F,EAAM9H,MAAM,EAAGyT,IAA1B,aAAqC3L,EAAM9H,MAAMyT,EAAQ,QAjEzC,gBCTC,cD4EJ,iBAAM,MAnEH,KEfb,SAAS6lB,GAA0BC,EAAU5M,GAClD,OAAO4M,EAAS75B,KAAI,SAAA+E,GAAI,OAAIA,KAAMxE,QAAQ0sB,GCM7ByL,I,GAAAA,GCOSgB,GAFH,GAEGA,EAAA,sBCdF,mBDeJ,SAACtxB,EAAOC,GAAY,IAC1B4kB,EAAc5kB,EAAOG,QAArBykB,UAGR,OAAe,IADD0L,GAAgCvwB,EAAO6kB,GAE7C,GAAN,oBAAW7kB,GAAX,CAAkB6kB,IAGe7kB,EAAM2K,QACvC,SAAChO,GAAD,OAAUA,IAASkoB,QAVD,gBCbI,yBD4BJ,SAAC7kB,EAAOC,GAC5B,IAAMyxB,EAAWzxB,EAAOG,QACxB,OAAO,aAAIsxB,MAjBS,gBCZF,mBDgCJ,SAAC1xB,EAAOC,GAAY,IAE5B0L,EAAQ4kB,GAAgCvwB,EADxBC,EAAOG,QAArBykB,WAER,MAAM,GAAN,oBAAW7kB,EAAM9H,MAAM,EAAGyT,IAA1B,aAAqC3L,EAAM9H,MAAMyT,EAAQ,QAvBrC,gBCXH,kBDoCJ,iBAAM,MAzBC,KETjB,I,GCEQ2kB,GCQSgB,GAFH,GAEGA,EAAA,sBCbgB,qCDcJ,SAACtxB,EAAOC,GAAY,IAC5CvC,EAAauC,EAAOG,QAApB1C,SAER,OAAIA,EAASrG,OAAS,EACaqG,EAASiN,QAAO,SAASzQ,GACxD,OAAkC,GAA3B8F,EAAM7H,QAAQ+B,MAIhB,aAAI8F,MAVO,gBCXF,mBDwBJ,SAACA,EAAOC,GAAY,IAE5B0L,EE9BH,SAAgC8kB,EAAMv2B,GACzC,OAAOu2B,EAAK74B,KAAK,SAAA+E,GAAI,OAAIA,EAAKzC,QAAQxB,MAAKP,QAAS+B,EAAQxB,IF6B9C63B,CAA4BvwB,EADtBC,EAAOG,QAAnBlG,SAER,MAAM,GAAN,oBAAW8F,EAAM9H,MAAM,EAAGyT,IAA1B,aAAqC3L,EAAM9H,MAAMyT,EAAQ,QAhBrC,gBCVH,kBD4BJ,iBAAM,MAlBC,KGfXgmB,GAAM,aCAZ,SAASC,GAAyBC,EAAWC,GAClD,OAAOD,EAAUj6B,KAAI,SAAA+E,GAAI,OAAIA,EAAK/D,OAAKT,QAAQ25B,EAAMl5B,KCMxC03B,I,YAAAA,GCWWgB,GAFL,GAEKA,EAAA,sBACvBS,IAAY,SAAC/xB,EAAOC,GAAY,IACvB6xB,EAAU7xB,EAAOG,QAAjB0xB,MACFnmB,EAAQ4kB,GAA+BvwB,EAAO8xB,GACpD,IAAe,IAAXnmB,EACF,MAAM,CAAqBmmB,GAA3B,oBAAsC9xB,IAGxC,IAAMgyB,EAAchyB,EAAM2L,GACpBW,EAAcnV,OAAOoV,OAAO,GAAIylB,GACtC,MAAM,GAAN,oBAAWhyB,EAAM9H,MAAM,EAAGyT,IAA1B,CAAkCW,GAAlC,aAAkDtM,EAAM9H,MAAMyT,EAAQ,QAVhD,gBHjBJ,iBG6BJ,SAAC3L,EAAOC,GAAY,IAC1B6xB,EAAU7xB,EAAOG,QAAjB0xB,MACFG,EAAWjyB,EAAMgM,MAAK,SAAArP,GAAI,OAAIA,EAAK/D,MAAQk5B,EAAMl5B,OACjDs5B,EAA6BlyB,EAAM2K,QAAO,SAAAhO,GAAI,OAAIA,EAAK/D,MAAQk5B,EAAMl5B,OAC3E,MAAM,GAAN,oBAAWs5B,GAAX,gBAA4CD,EAA5C,GAAyDH,QAhBnC,gBHhBJ,iBGkCJ,SAAC9xB,EAAOC,GAAY,IAE5B0L,EAAQ4kB,GAA+BvwB,EADzBC,EAAOG,QAAnBlG,SAER,MAAM,GAAN,oBAAW8F,EAAM9H,MAAM,EAAGyT,IAA1B,aAAqC3L,EAAM9H,MAAMyT,EAAQ,QArBnC,gBHfL,gBGsCJ,iBAAM,MAvBG,KCPpBwmB,GAAiBb,GAAe,KAAfA,CAAA,gBCVgB,mCDWA,SAAEtxB,EAAOC,GAAT,OAAqBA,EAAOG,QAAQlG,YAGrEk4B,GAAcd,GAAe,GAAfA,CAAA,gBCVgB,gCDWA,SAAEtxB,EAAOC,GAAT,OAAqBA,EAAOG,QAAQ1C,aERzD4yB,GFWA+B,aAAiB,CAC5BC,QAASH,GACTI,KAAMH,KGVJI,GAAclB,IAAc,EAAdA,EAAA,sBCXC,iBDYJ,kBAAM,KADH,gBCRE,kBDUJ,kBAAM,KAFJ,KAKdmB,GAA4BnB,GAAc,KAAdA,CAAA,gBCXM,oCDYJ,SAACtxB,EAAOC,GAAR,OAAmBA,EAAOG,QAAQsyB,gBETvDpC,GFYA+B,aAAgB,CAC7BM,gBAAiBH,GACjBI,mBAAoBH,KGDPI,GAhBKvB,GAFC,GAEDA,EAAA,sBCLU,2BDMJ,SAACtxB,EAAOC,GAAY,IAClCsS,EAAetS,EAAOG,QAAtBmS,WAER,OAAIA,GAIG,aAAIvS,MARK,gBCJU,2BDeJ,SAACA,EAAOC,GAC9B,OAAO,aAAID,MAZK,KEELswB,I,OAAAA,ICUAuC,GAZKvB,GAFC,GAEDA,CAAA,gBCLa,8BDMJ,SAACtxB,EAAOC,GAAY,IACrCkxB,EAAalxB,EAAOG,QAApB+wB,SAER,OAAIA,EACK,eAAKnxB,EAAZ,GAAsBmxB,GAGjB,eAAKnxB,OENDswB,I,OAAAA,ICcAuC,GAhBKvB,GAFC,GAEDA,EAAA,sBCLK,sBDMJ,SAACtxB,EAAOC,GAAY,IAC7BkW,EAAWlW,EAAOG,QAAlB+V,OAER,OAAIA,GAIG,aAAInW,MARK,gBCJK,sBDeJ,SAACA,EAAOC,GACzB,OAAO,aAAID,MAZK,KEELswB,I,OAAAA,ICcAuC,GAhBKvB,GAFC,GAEDA,EAAA,sBCLI,gBDMJ,SAACtxB,EAAOC,GAAY,IAC5B5E,EAAS4E,EAAOG,QAAhB/E,KAER,OAAIA,GAIG,aAAI2E,MARK,gBCJI,gBDeJ,SAACA,EAAOC,GACxB,OAAO,aAAID,MAZK,KEELswB,I,OAAAA,ICLTwC,GAA8B,qBAAbC,SAA2B,4BAA8B,OAsBjEC,GApBI,kBAAO,SAAEh5B,GAAF,OAAY,SAAEiG,GACpC,IAAMoU,EAASra,EAAMiG,GACrB,IAAMA,EAAOiwB,OAASjwB,EAAOiwB,KAAKC,MAC9B,OAAO9b,EAHqC,MAMTpU,EAAOiwB,KAAtC7E,EANwC,EAMxCA,KANwC,IAMlCnsB,cANkC,MAMzB,MANyB,EAMlBI,EANkB,EAMlBA,KAE9B,IAAM+rB,EACF,MAAM,IAAIhrB,MAAJ,gDAAqDJ,EAAO7J,OAGtE,IAAMmB,EAAG,UAAOu7B,IAAP,OAAmBzH,GAE5B,OAAO5rB,GAAOlI,EAAK2H,EAAQI,GAAOyxB,MAC9B,SAAApxB,GAAG,OAiBX,SAAyBA,EAAKM,EAAQjG,GAOlC,OANAA,EAAM,CACF5D,KAAK,GAAD,OAAM6J,EAAO7J,KAAb,cACJgK,QAAST,EACTuwB,KAAMjwB,EAAOiwB,OAGVvwB,EAxBIszB,CAAgBtzB,EAAKM,EAAQjG,MACpC,SAAAqiB,GAAG,OAMX,SAAuBA,EAAKpc,EAAQjG,GAOhC,OANAA,EAAM,CACF5D,KAAK,GAAD,OAAM6J,EAAO7J,KAAb,WACJgK,QAASic,EACT6T,KAAMjwB,EAAOiwB,OAGVc,QAAQE,OAAQ7U,GAbZ6W,CAAc7W,EAAKpc,EAAQjG,SCpB1B,CACZ,mBACA,gBACF5B,KAAM,KAEQ,CACZ,oBACA,gBACFA,KAAM,KAEQ,CACZ,yBACA,gBACFA,KAAM,KAEQ,CACZ,kBACA,gBACFA,KAAM,KCZR,IAAM+6B,GAAcd,aAAgBe,GAE9BC,GAAgB,CACpBz6B,IAAK,OACL06B,QAASA,KACTC,UAAW,CAAC,YAGRC,GAAWC,aAAeJ,GAAeF,IAe/C,IAbwB1yB,GAalBizB,IAbkBjzB,GAaK,GAZpBkzB,aACLH,GACA/yB,GACAmzB,aACEC,aAAgBb,IAChBc,OAAOC,6BACHD,OAAOC,+BACP,SAACC,GAAD,OAAOA,M,IAOCC,aAAaP,I,eCb9BQ,IAAStiB,OACR,kBAAC,IAAD,CAAe8hB,MAAOA,IACrB,kBAAC,gBAAD,KACC,kBAAC,GAAD,QAGFX,SAASoB,eAAe,W","file":"static/js/main.54584fd6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n\r\n        }),\r\n\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tconsole.log('brandata', data)\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.thumbnail && data.cover.thumbnail : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon || '',\r\n\t\t\ttype: data.type || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Event'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>List Events</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Organizer</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                {/* <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item> */}\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    {/* <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item> */}\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n                    <Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n                    <Menu.Item key='15'>Auto emails</Menu.Item>\r\n                    <Menu.Item key='16'>Compose Email</Menu.Item>\r\n                    <Menu.Item key='177'>Sent emails</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='18'>\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<DesktopOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined, BellOutlined, OrderedListOutlined } from '@ant-design/icons';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst { Header } = Layout;\r\n\r\n// import styles\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n    const getNotificationCreationTime = (time: any) => {\r\n        console.log(time);\r\n        // return <Moment fromNow={true}></Moment>\r\n        return time;\r\n    }\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <Menu>\r\n                <div style={{\r\n                    padding: '0 30px'\r\n                }}>\r\n                    <Spin />\r\n                </div>\r\n\r\n            </Menu>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <Menu>\r\n                    <div style={{\r\n                        padding: '0 30px'\r\n                    }}>\r\n                        <Empty title='No Notification found' />\r\n                    </div>\r\n\r\n                </Menu>\r\n            )\r\n\r\n\r\n        }\r\n        return (\r\n            <Menu\r\n\r\n            \r\n\r\n                onClick={handleMenuClick}>\r\n                {getAllNotificationState.done && getAllNotificationState.data[0] && getAllNotificationState.data.map(item => {\r\n                    return (\r\n                        <Menu.Item\r\n                            // style={{\r\n                            //     padding: 0,\r\n                            //     margin: 0\r\n                            // }}\r\n                            key=\"1\">\r\n\r\n                            <div className='notificationItem'>\r\n                                <span className='notificationItem-icon'>\r\n                                    <OrderedListOutlined />\r\n                                </span>\r\n                                <div className='notificationItem-info'>\r\n                                    <h3>\r\n                                        {item.heading}\r\n                                    </h3>\r\n                                    <h4>\r\n                                        {item.text}\r\n                                    </h4>\r\n                                    <h2>\r\n\r\n                                        {getNotificationCreationTime(item.added)}\r\n                                    </h2>\r\n                                </div>\r\n                            </div>\r\n                        </Menu.Item>\r\n                    )\r\n                })}\r\n\r\n            </Menu>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Express Ticket\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n            \r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            count={99}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent; \r\n","import Header from \"./Header\";\r\nexport default Header; ","import React from 'react';\r\n// import Login from '../auth/login';\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <Login /> */}\r\n\t\t\t<h2 style={{\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\tComing Soon\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString, name, rows = 4 }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tproductRecord?: any;\r\n\tbrandList: any;\r\n\tsetBrandList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, productRecord, setBrandList, brandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getBrandDetail = async () => {\r\n\t\t\tawait handleBrandDetailFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tid: productRecord.id\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tgetBrandDetail();\r\n\r\n\t}, [productRecord]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (brandDetailState.done && Object.keys(brandDetailState).length > 0) {\r\n\r\n\t\t\tconst images = brandDetailState.data.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([brandDetailState.data.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(brandDetailState.data.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [brandDetailState])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: productRecord.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: productRecord.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(productRecord.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInBrand();\r\n\r\n\t\t\tconst prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n\t\t\tif (prevItem) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t\tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t\tsetBrandList(updateBrandList);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconsole.log('myReadyToGoImages', myImages);\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(brandDetailState.data).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: productRecord.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: productRecord.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateBrandRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: productRecord.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateBrandRes && updateBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\r\n\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(productRecord.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInBrand();\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\tconsole.log('updateBrandList', updatedItem)\r\n\r\n\t\t\tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\tsetBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (productRecord.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [productRecord])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...productRecord }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Detail\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{brandDetailState.isLoading && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tpadding: '20px 0'\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<Spin />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{brandDetailState.done && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\nimport CategoryDetail from \"./CategoryDetail\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n    const [categoryDetailVisible, setcategoryDetailVisible] = useState(false)\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n\r\n    <CategoryDetail\r\n     setBrandList={setcategoryList}\r\n     brandList={data}\r\n        addNewCategoryVisible={categoryDetailVisible}\r\n        setAddNewCategoryVisible={setcategoryDetailVisible}\r\n        productRecord={activeCategoryForEdit}\r\n      />\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory', 'form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", imagesIds);\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Organizer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    productRecord?: any;\r\n    brandList: any;\r\n    setBrandList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, productRecord, setBrandList, brandList }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('productRecord', productRecord);\r\n        const getBrandDetail = async () => {\r\n            await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productRecord.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [productRecord]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailState.done && Object.keys(brandDetailState).length > 0) {\r\n\r\n            const images = brandDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailState.data.cover, ...images]);\r\n                console.log('catcat', [brandDetailState.data.cover, ...images]);\r\n                setCoverImageId(brandDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: productRecord.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: productRecord.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes)\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            const positionInBrand = () => {\r\n                return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            }\r\n\r\n            const index = positionInBrand();\r\n\r\n            const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            if (prevItem) {\r\n                console.log('prevItem--', prevItem, 'image--', image);\r\n                // @ts-ignore\r\n                const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n                const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n                setBrandList(updateBrandList);\r\n\r\n            }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    console.log('brandDetailState', brandDetailState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailState && brandDetailState.done && Object.keys(brandDetailState.data).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: productRecord.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: productRecord.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productRecord.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n\r\n            const positionInBrand = () => {\r\n                return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            }\r\n\r\n            const index = positionInBrand();\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            console.log('updateBrandList', updatedItem)\r\n\r\n            const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages)\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...productRecord }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Organizer Detail\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                rows={3}\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n                                {brandDetailState.isLoading && (\r\n                                    <div style={{\r\n                                        padding: '20px 0'\r\n                                    }}>\r\n                                        <Spin />\r\n                                    </div>\r\n                                )}\r\n                                {brandDetailState.done && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport BrandDetail from \"./BrandDetail\"\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n      \r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n      <BrandDetail\r\n        brandList={data}\r\n        setBrandList={setBrandList}\r\n        addNewCategoryVisible={brandDetailVisible}\r\n        setAddNewCategoryVisible={setBrandDetailVisible}\r\n        productRecord={activeCategoryForEdit}\r\n      />\r\n\r\n\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Organizer\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search organizer..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Organizer found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\ninterface Props {\r\n    onChange: any;\r\n    label?: string;\r\n    withTime?: boolean;\r\n    placeholder?: string;\r\n    date?: string;\r\n    time?: string;\r\n}\r\n\r\n\r\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current && current < moment(date) && current > moment(date);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>{label}</h3>\r\n\r\n            {withTime ? <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                className='inputclassName'\r\n                placeholder={placeholder}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderColor: \"#eee\"\r\n                }}\r\n\r\n\r\n                onChange={onChange}\r\n                {...(time && {\r\n                    defaultValue: moment(time),\r\n                })}\r\n            />\r\n                : (\r\n                    <DatePicker\r\n\r\n                        placeholder={placeholder}\r\n                        className='inputclassName'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderColor: \"#eee\"\r\n                        }}\r\n                        onChange={onChange}\r\n                        {...(date && {\r\n                            defaultValue: moment(date),\r\n                        })}\r\n                    />\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DatePickerComponent\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// function disabledDate(current) {\r\n//   // Can not select days before today and today\r\n//   return current && current < moment().endOf('day');\r\n// }\r\n\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n  console.log('options', options)\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Organizer found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd To Pricing\r\n\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tdate: date,\r\n\t\t\t\ttime: time,\r\n\t\t\t\tvenue: values.venue,\r\n\t\t\t\tpurchaseLimit: values.purchaseLimit\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Event\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tEvent Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tEvent Pricing\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tOrganizer\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    model: '',\r\n    unit: '',\r\n    regular: '',\r\n    offer: '',\r\n    available: '',\r\n    minimum: '',\r\n    image: [],\r\n    url: '',\r\n    cover: '',\r\n    pricing: [],\r\n    venue: '',\r\n    date: '',\r\n    time: '',\r\n    purchaseLimit: null\r\n}\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n    productRecord?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList, productRecord }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('productRecord', productRecord);\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productRecord.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productRecord]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productRecord && productRecord.brand) {\r\n            setBrandId(productRecord.brand);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productRecord && productRecord.tags && productRecord.tags) {\r\n            setSelectedTags(productRecord.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productRecord && productRecord.category && productRecord.category) {\r\n            setCategoryOptions(productRecord.category);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productRecord && productRecord.pricing && productRecord.pricing) {\r\n            setPricing(productRecord.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productRecord && productRecord.date && productRecord.date) {\r\n            setDateFeild(productRecord.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productRecord && productRecord.time && productRecord.time) {\r\n            setTimeFeild(productRecord.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productRecord]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productRecord.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productRecord.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            const positionInBrand = () => {\r\n                return productList.map(item => item.id).indexOf(productRecord.id);\r\n            }\r\n\r\n            const index = positionInBrand();\r\n\r\n            const prevItem = productList.find(item => item.id === productRecord.id);\r\n\r\n            if (prevItem) {\r\n                console.log('prevItem--', prevItem, 'image--', image);\r\n                // @ts-ignore\r\n                const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n                const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n                setProductList(updateProductList);\r\n\r\n            }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productRecord.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n                date: date,\r\n                time: time,\r\n                venue: values.venue,\r\n                purchaseLimit: values.purchaseLimit\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setAddNewCategoryVisible(false);\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            setProductList([...productList, {\r\n                id: updatedProductRes['id'] || '',\r\n                key: updatedProductRes['id'] || '',\r\n                name: updatedProductRes['name'] || '',\r\n                description: updatedProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...updatedProductRes\r\n            }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productRecord', productRecord);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...productRecord }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Event Detail\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Event Information\r\n\t\t\t</h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        label='Date'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n\r\n                                            <TextArea\r\n                                                rows={1}\r\n                                                label='Venue'\r\n                                                value={values.venue}\r\n                                                name='venue'\r\n                                                isError={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n                                                errorString={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('venue');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n                                            <Input\r\n                                                label='Purchase Limit'\r\n                                                value={values.purchaseLimit}\r\n                                                type='number'\r\n                                                name='purchaseLimit'\r\n                                                isError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n                                                errorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('purchaseLimit');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n                                            <TextArea\r\n                                                label='Description'\r\n                                                value={values.description}\r\n                                                name='description'\r\n                                                isError={(touched.description && errors.description) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n                                                errorString={(touched.description && errors.description) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['description'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('description');\r\n                                                }}\r\n                                            />\r\n\r\n                                            {/* <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Event Pricing\r\n\t\t\t</h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Tabs\r\n                                                animated={true}\r\n                                                tabPosition=\"top\"\r\n                                                type='card'\r\n                                                defaultActiveKey='2'\r\n                                            >\r\n\r\n                                                <TabPane tab=\"Add Variation\" key=\"1\">\r\n                                                    <Pricing handleAddPricing={handleAddPricing} />\r\n                                                </TabPane>\r\n                                                <TabPane tab=\"Pricing List\" key=\"2\">\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n                                                        {pricing.length > 0 && pricing.map(item => {\r\n                                                            return (\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                                                        {/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n                                                                        <span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n                                                                            <DeleteOutlined />\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                                        <div>\r\n                                                                            <h3>\r\n                                                                                Price\r\n\t\t\t\t\t\t</h3>\r\n                                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                                {item.price.offer ? (\r\n                                                                                    <>\r\n                                                                                        <h4 >\r\n                                                                                            {item.price.offer}\r\n\r\n                                                                                        </h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n                                                                                            textDecoration: \"line-through\"\r\n                                                                                        }}>\r\n\r\n                                                                                            {item.price.regular}\r\n                                                                                        </h5>\r\n                                                                                    </>\r\n                                                                                ) : (\r\n                                                                                        <h4>\r\n                                                                                            {item.price.regular}\r\n\r\n                                                                                        </h4>\r\n                                                                                    )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        {item.stock && (\r\n                                                                            <div>\r\n                                                                                <Badge\r\n                                                                                    overflowCount={999}\r\n                                                                                    count={item.stock.available}>\r\n                                                                                    <h3>\r\n                                                                                        Stock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n                                                                                </Badge>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    <div>\r\n                                                                                        <h6>\r\n                                                                                            min\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n                                                                                                className=\"site-badge-count-4\"\r\n                                                                                                overflowCount={999}\r\n                                                                                                count={item.stock.minimum} />\r\n                                                                                        </h6>\r\n\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                                    {item.attribute\r\n                                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                                            <>\r\n                                                                                <h3>\r\n                                                                                    Attributes\r\n\t\t\t\t\t\t</h3>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    {item.attribute\r\n                                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                                            return (\r\n                                                                                                <div>\r\n                                                                                                    <h6>\r\n                                                                                                        {attributeItem}\r\n                                                                                                    </h6>\r\n                                                                                                    <h4>\r\n                                                                                                        {item.attribute[attributeItem]}\r\n                                                                                                    </h4>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })}\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                        {!(pricing.length > 0) && <div style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'center'\r\n                                                        }}>\r\n                                                            <Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                </TabPane>\r\n\r\n                                            </Tabs>\r\n\r\n                                            <div className='addProductGridContainer__item-body-container'>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Organizer\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t\tmessage: 'Product Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetProductList?: any;\r\n\tproductList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, setProductList, productList }: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateProductRes = await handleUpdateProductFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tcategory: category.category,\r\n\t\t\t\tpricing: category.pricing\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateProductRes && updateProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n\t\t\tsetProductList(updateProductList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductDetail from \"./ProductDetail\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setproductDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setproductDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n      <ProductDetail\r\n        addNewCategoryVisible={productDetailVisible}\r\n        setAddNewCategoryVisible={setproductDetailVisible}\r\n        productRecord={activeCategoryForEdit}\r\n        productList={ProductList}\r\n        setProductList={setProductList}\r\n      />\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Events\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search events..\"\r\n              onSearch={value => handleSearch(value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Events found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\ttagList: any; \r\nsetTagList: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateTagRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t \t  // @ts-ignore\r\n\t\t   if(updateTagRes && updateTagRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\t  const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\t  setTagList(updateTagList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\r\n\t\r\n\t<div className='categoryListContainer'>\r\n\t\t\t\t\t\t<div className='categoryListContainer__header'>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n            Tags\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t<AddNewTag \r\n\t\ttagList={tagList}\r\n\t\tsetTagList={setTagList}\r\n\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"First Name\" \r\n           dataIndex=\"firstName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n         <Column\r\n           title=\"Last Name\" \r\n           dataIndex=\"lastName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal  } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst data = [\r\n\t{\r\n\t\tkey: '1',\r\n\t\ttitle: 'Home Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\ttitle: 'Product Listing Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t},\r\n\t{\r\n\t\tkey: '3',\r\n\t\ttitle: 'Dashboard Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t}\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst MyTable = () => {\r\n    const [visible,setvisible] = useState(false);   \r\n\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        dataSource={data}>\r\n         \r\n          <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\r\n          <Column title=\"Created\" dataIndex=\"created\" key=\"created\" />\r\n          <Column title=\"Last Modified\" dataIndex=\"lastModified\" key=\"lastModified\" />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a onClick={() => setvisible(true)} href='##'>Quick Edit</a>\r\n              <Tooltip placement=\"top\" title='Delete Category'>\r\n              <a href='##'>Delete</a>\r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      <Modal\r\n          title=\"Quick Edit\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n        </Modal>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst PagesList = ({history}: Props) => {\r\n  \r\n    \r\n\treturn (\r\n\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n            <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            <Search\r\n      placeholder=\"search pages..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    />\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t<MyTable />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter(PagesList);\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = (props: Props) => {\r\n\treturn <div>AddNewPage</div>;\r\n};\r\n\r\nexport default AddNewPage;\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .label('Name')\r\n        .required()\r\n        .min(2, 'Name must have at least 2 characters '),\r\n    pickUpLocation: Yup.string()\r\n        .label('Pick up Location')\r\n        .required()\r\n        .min(2, 'Pick up Location must have at least 2 characters '),\r\n    time: Yup.string()\r\n        .label('Time')\r\n        .required()\r\n        .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n\r\n            body: {\r\n                name: values.name,\r\n                pickUpLocation: values.pickUpLocation,\r\n                time: values.time,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n                charge: {}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Pick up Location'\r\n                                        value={values.pickUpLocation}\r\n                                        name='pickUpLocation'\r\n                                        isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n\r\n                                        errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('pickUpLocation');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div style={{\r\n                                marginRight: '10px'\r\n                            }}>\r\n                                <Input\r\n                                    label='Time'\r\n                                    value={values.time}\r\n                                    name='time'\r\n                                    isError={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n\r\n                                    errorString={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('time');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.city}\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={orderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{/* {orderState.done && \r\n    <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {productDetailState.done && Object.keys(productDetailState.data).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={product['cover']}\r\n                        alt='productImg'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n\r\n                        >\r\n                            {product['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            ${product['offerPrice'] ? product['offerPrice'] : product['regularPrice']}\r\n                        </h5>\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(value) {\r\n        setSelectedBrandId(value);\r\n        setCustomerId(value);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            size='middle'\r\n            style={{ width: '100%' }}\r\n            placeholder='Select a Customer'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n        >\r\n            {brandState.done &&\r\n                brandState.data.length > 0 &&\r\n                options.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory.id;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {tagState.done && tagState.data.length > 0 && <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"search products\"\r\n                value={selectedOpions}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n            >\r\n                {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                    <Select.Option key={item} value={item}>\r\n                        {item}\r\n                    </Select.Option>\r\n                ))}\r\n            </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Last name')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: ''\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment Details',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Review your Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t_id: productIds[productIds.length - 1],\r\n\t\t\t\t\tvariation: '5f0a8f0e10cf2f1dc280d915',\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(productId => {\r\n\t\t\t\t\t\tif (productId === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\t// console.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId setCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts setProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n\t\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => next()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            console.log('addThemeRes', addThemeRes);\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            type='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t{/* <TabPane tab=\"Logo & Icon\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '30px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t// marginTop: '15px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Icon</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</TabPane> */}\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Admin Information\" key=\"2\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: {}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n</a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList } from '../../pages/category';\r\nimport { BrandList, AddNewBrand } from '../../pages/brand';\r\nimport { ProductList } from '../../pages/product';\r\nimport { TagList, AddNewTag } from '../../pages/tag';\r\nimport { CustomerList } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin' />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/product' />}\r\n                />\r\n\r\n\r\n                <Route path='/admin' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/product/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}