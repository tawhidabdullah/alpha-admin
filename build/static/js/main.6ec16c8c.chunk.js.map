{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryEdit.tsx","pages/category/NewCategoryDetail.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","components/Field/InputSmall.tsx","components/Field/DatePicker.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/QuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/OrderEdit.tsx","pages/order/OrderDetail.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","productCount","parent","cover","config","thumbnail","subCount","subCategory","children","subCat","noti","heading","text","link","added","read","title","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","isNext","startDate","endDate","actualPrice","products","console","log","item","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","orderedProducts","freeProducts","orderedProductsCount","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","success","original","image","img","labels","alt","caption","customer","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","cat","primaryCategory","inserted","icon","order","billingAddress","address","total","totalPrice","date_created","paymentMethod","paymentStatus","payment","customerId","orders","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","BankOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SlidersOutlined","SettingOutlined","UserOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMenuClick","getAllNotification","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","padding","maxHeight","overflowY","OrderedListOutlined","href","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","TooltipContainerStyles","Select","Option","fontSize","ApiVisits","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","uservisitsDataRes","getDemoGraphicVisitsValue","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","orientation","axisLine","tickLine","contentStyle","formatter","fill","localOptions","COLORS","PlatformVisits","selectedApiValue","setSelectedApiValue","demographicData","setdemographicData","RADIAN","Math","PI","bordered","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","index","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","analyticsProductVisitCountState","handleAnalyticsProductVisitCountFetch","analyticsCategoryVisitCountState","handleAnalyticsCategoryVisitCountFetch","totalUserCountState","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","DataTable","speed","viewBox","backgroundColor","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","setcategoryList","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","CheckCircleOutlined","newCategoryList","filter","objectFit","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","ImageItemMenu","EllipsisOutlined","textAlign","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","coverImageId","setCoverImageId","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","imagesIds","trim","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","uploadButton","LoadingOutlined","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","categoryEditVisible","setCategoryEditVisible","categoryDetailData","setcategoryDetailData","updateBrandState","handleUpdateBrandFetch","brandDetailState","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","visibleMedia","setvisibleMedia","myGoddamnImages","setMyGoddamnImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","updateTagRes","NewBrandDetail","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","CategoryEdit","avatar","paragraph","paddingTop","overflow","ProductBundleQuickEdit","tagList","setTagList","updateTagState","updateTagList","allowClear","DatePickerComponent","withTime","borderColor","moment","DatePicker","RangePicker","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","setTags","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","onBlur","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","setProductIds","productIds","selectedOpions","setselectedOptions","selectItems","o","CartOverLayCartItem","productList","setProductList","productId","variation","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","positionInAttribute","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","regular","offer","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","bundlePrice","AddNewProduct","bundleList","setBundleList","addProductState","handleAddProductFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setPrice","model","addProductRes","err","i","newProductList","isTrue","handleDateChange","dateString","handleTimeChange","editor","ClassicEditor","onInit","event","getData","InputSmall","SelectProducts","SelectedProductItems","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","newTagList","AddNewProductBundle","CouponProducts","handleProductDetailFetch","getProductDetail","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","brandList","setBrandList","addBrandRes","updatebrandState","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","handlebrandListFetch","brands","brandDetailData","brandEditVisible","setBrandEditVisible","handleBrandDetailFetch","brandProductsState","handleBrandProductsFetch","getBrandDetail","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","inputValue","suggestedOption","toUpperCase","Pricing","handleAddPricing","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","purchaseLimit","animated","tabPosition","newPricing","handleDeletePricing","textDecoration","updateProductState","handleUpdateProductFetch","updateProductRes","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","productState","handleProductListFetch","setProducts","productEditVisible","setProductEditVisible","productDetailData","setProductDetailData","categoryIds","updatedProductRes","destroyOnClose","productDetailRes","ProductEdit","addTagState","handleAddTagFetch","addTagRes","AddNewTag","tagEditVisible","setTagEditVisible","tagDetailData","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","CouponEdit","addCouponState","handleAddCouponStateFetch","freeProductIds","setFreeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","setCustomerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","withTitle","handleDeletePageFetch","handleDeletePage","deletePageRes","PageList","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","Steps","Step","AddNewPage","addPageState","handleAddPageFetch","content","setContent","handleAddPageSubmit","addOrderRes","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","handleUpdateOrderStatusFetch","handleUpdateOrderStatus","newStatus","newOrderstatus","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","orderList","orderState","handleRegionListFetch","regions","setOrders","newOrderList","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","current","setCurrent","selectedCustomerData","handleCheckoutSubmit","shippingAddress","CustomersId","AddProducts","CaretRightOutlined","CaretLeftOutlined","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","borderBottom","whiteSpace","updateOrderState","handleUpdateOrderFetch","addRegionRes","OrderInvoice","OrderEdit","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","updateSiteLogoAndIcon","handleUpdateSiteLogoAndIconFetch","logo","updateSiteIconAndLogoRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","updateRegionList","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","recipient","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","ConfigureSTMP","emailConfigurationState","handleEmailConfigurationFetch","isAuthenticated","setIsAuthenticated","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","handleAuthenticatedChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","subject","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","ConfigureAutoEmail","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","handleUpdateAutoEmail","NewCustomerTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","html","sethtml","Inbox","substring","PlusCircleOutlined","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","CouponDetail","NewTagDetail","OrderList","OrderDetail","CustomerDetail","PagesList","Delivery","ManageThemes","SiteInfo","Email","App","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6ec16c8c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync bundleList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tproduct: product['product'],\r\n\t\t\t\t\tproductCount: product['product'].length,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method bundleDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync bundleDetail(resData) {\r\n\t\tconst data = resData || {};\r\n\r\n\t\tif (Object.keys(data).length > 0) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['thumbnail']) || ''}`,\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t\tproducts: data.product,\r\n\t\t\t\tproductCount: data['product'].length,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse return data;\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n\tconst data = resData || [];\r\n\r\n\tconsole.log('getAnalyticsPageVisits',resData); \r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item._id || '',\r\n\t\t\t\tvisit: item.count || '',\r\n\t\t\t\tname: item['item'] && item['item']['name'] ,\r\n\t\t\t\turl: item['item'] && item['item']['url'] ,\r\n\t\t\t\titemId: item['item'] && item['item']['_id'] ,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n\treturn resData; \r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsDemographicVisits(resData) {\r\n\treturn resData; \r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync getAnalyticsTotalUserCount(resData) {\r\n\t\treturn resData; \r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method customerDetail convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync customerDetail(resData) {\r\n\t\tif(resData){\r\n\t\t\treturn {\r\n\t\t\t\tid: resData._id || '',\r\n\t\t\t\tkey: resData._id || '',\r\n\t\t\t\tfirstName: resData.firstName || '',\r\n\t\t\t\tlastName: resData.lastName || '',\r\n\t\t\t\tname: resData.firstName + ' ' + resData.lastName,\r\n\t\t\t\tcountry: resData.country || '',\r\n\t\t\t\tcity: resData.city || '',\r\n\t\t\t\temail: resData.email || '',\r\n\t\t\t\tphone: resData.phone || '',\r\n\t\t\t\taddress1: resData.address1 || '',\r\n\t\t\t\taddress2: resData.address2 || '',\r\n\t\t\t\tcreated: resData.created || ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return resData; \r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync couponList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tcode: product.code,\r\n\t\t\t\t\tminimumOrder: product.minimumOrder,\r\n\t\t\t\t\tmaximumOrder: product.maximumOrder,\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\torderedProducts: product.orderedProducts,\r\n\t\t\t\t\tfreeProducts: product.freeProducts,\r\n\t\t\t\t\torderedProductsCount: product.orderedProducts && product.orderedProducts.length,\r\n\t\t\t\t\tfreeProductsCount: product.freeProducts && product.orderedProducts.length,\r\n\t\t\t\t\tamountType: product.amountType,\r\n\t\t\t\t\tamount: product.amount,\r\n\t\t\t\t\tfreeDelivery: product.freeDelivery,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tmaxUsePerUser: product.maxUsePerUser,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method tagDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync tagDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync pageList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((page) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...page\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync couponDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tcode: data.code,\r\n\t\t\t\tminimumOrder: data.minimumOrder,\r\n\t\t\t\tmaximumOrder: data.maximumOrder,\r\n\t\t\t\torderedProducts: data.orderedProducts | [],\r\n\t\t\t\tfreeProducts: data.freeProducts || [],\r\n\t\t\t\torderedProductsCount: data.orderedProducts && data.orderedProducts.length,\r\n\t\t\t\tfreeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n\t\t\t\tamountType: data.amountType,\r\n\t\t\t\tamount: data.amount,\r\n\t\t\t\tfreeDelivery: data.freeDelivery,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tmaxUsePerUser: data.maxUsePerUser,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''}`\r\n\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\tdata.brand &&\r\n\t\t\t\t\t\tObject.keys(data.brand).length > 0 ? {\r\n\t\t\t\t\t\t\tid: data.brand._id,\r\n\t\t\t\t\t\t\tname: data.brand.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${data.brand.cover ? data.brand.cover.original && data.brand.cover.original : ''}`\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tdata.brand,\r\n\t\t\t\tprimaryCategory: data.primaryCategory &&\r\n\t\t\t\t\tObject.keys(data.primaryCategory).length > 0 ? {\r\n\t\t\t\t\t\tid: data.primaryCategory._id,\r\n\t\t\t\t\t\tname: data.primaryCategory.name,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${data.primaryCategory.cover ? data.primaryCategory.cover.original && data.primaryCategory.cover.original : ''}`\r\n\t\t\t\t\t} :\r\n\t\t\t\t\tdata.primaryCategory,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tid: data.updated._id || data.updated.id || '',\r\n\t\t\t\tname: data.updated.name || '',\r\n\t\t\t\tdescription: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.updated.price && data.updated.price['regular'],\r\n\t\t\t\tofferPrice: data.updated.price && data.updated.price['offer'],\r\n\t\t\t\turl: data.updated.url,\r\n\t\t\t\tavailableStock: data.updated.availableStock,\r\n\t\t\t\tminimumStock: data.updated.minimumStock,\r\n\t\t\t\tunit: data.updated.unit,\r\n\t\t\t\tdate: data.updated.date,\r\n\t\t\t\tvenue: data.updated.venue,\r\n\t\t\t\tbrand: data.updated.brand && Object.key(data.updated.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.updated.brand.id,\r\n\t\t\t\t\tname: data.updated.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.updated.price['offer']) > parseInt(data.updated.price['regular'])\r\n\t\t\t\t\t\t? data.updated.price['offer']\r\n\t\t\t\t\t\t: data.updated.price['regular'],\r\n\t\t\t\tpricing: data.updated.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.updated.category &&\r\n\t\t\t\t\t\tdata.updated.category.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.updated.category,\r\n\t\t\t\ttags: data.updated.tags && data.updated.tags.length > 0 ? data.updated.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.updated.cover ? data.updated.cover.original && data.updated.cover.original : ''}`,\r\n\t\t\t\t\tid: data.updated.cover ? data.updated.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.updated.image &&\r\n\t\t\t\t\t\tdata.updated.image.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tstatus: 'ok'\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updatePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updatePage(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBundle(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCoupon(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method pageDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync pageDetail(data) {\r\n\t\tconst convertedData = data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateOrderStatus(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method deletePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deletePage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method addPage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addPage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n\t\t\ttype: data.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name'] ? 'Top category' : 'Child category',\r\n\t\t\turl: data.url || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.medium}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method orderDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderDetail(data) {\r\n\t\t//map props\r\n\t\tconst order = data.order || false;\r\n\t\tif (order) {\r\n\t\t\treturn {\r\n\t\t\t\tid: order.id || order._id,\r\n\t\t\t\tbillingAddress: order.billingAddress,\r\n\t\t\t\tname: order.billingAddress['firstName'] + \" \" + order.billingAddress['lastName'],\r\n\t\t\t\tcountry: order.billingAddress['country'],\r\n\t\t\t\tcity: order.billingAddress['city'],\r\n\t\t\t\taddress: order.billingAddress['address'],\r\n\t\t\t\tphone: order.billingAddress['phone'],\r\n\t\t\t\temail: order.billingAddress['email'],\r\n\t\t\t\tstatus: order.status,\r\n\t\t\t\ttotal: order.totalPrice,\r\n\t\t\t\tproducts: order.products,\r\n\t\t\t\tdate_created: order.added,\r\n\t\t\t\tpaymentMethod: order['payment']['paymentMethod'],\r\n\t\t\t\tpaymentStatus: order['payment']['status'],\r\n\t\t\t\tpayment: order['payment'],\r\n\t\t\t\tcustomerId: order['customer'] ? order['customer']['_id'] : ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}\r\n\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tcustomerId: item.customer['_id']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderList(resData) {\r\n\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t// const isNext = resData.page.next;\r\n\r\n\t\tconsole.log('orderListDAta',data);\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.billingAddress && item.billingAddress['firstName'] && item.billingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.billingAddress && item.billingAddress['lastName'] && item.billingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.billingAddress && item.billingAddress['country'] && item.billingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.billingAddress && item.billingAddress['city'] && item.billingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t\t* @public\r\n\t\t* @method orderListForCustomer convert api data from API to general format based on config server\r\n\t\t* @param {Object} data response objectc from wc\r\n\t\t* @returns {Object}  converted data\r\n\t\t*/\r\n\t\tasync orderListForCustomer(resData) {\r\n\t\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t\t// const isNext = resData.page.next;\r\n\r\n\t\t\tlet convertedData =\r\n\t\t\t\t(data.length > 0 &&\r\n\t\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.billingAddress && item.billingAddress['firstName'] && item.billingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.billingAddress && item.billingAddress['lastName'] && item.billingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.billingAddress && item.billingAddress['country'] && item.billingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.billingAddress && item.billingAddress['city'] && item.billingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[];\r\n\r\n\t\t\t// convertedData = {\r\n\t\t\t// \tdata: convertedData,\r\n\t\t\t// \tisNext\r\n\t\t\t// };\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getTotalUserCount(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCoupon(data) {\r\n\t\tif (data && data[0]) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined,\r\n    FileAddOutlined,\r\n    FileSearchOutlined,\r\n    BgColorsOutlined,\r\n    BankOutlined,\r\n    FireOutlined,\r\n    MailTwoTone\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>Products</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BankOutlined />}\r\n                        key='2222'>\r\n                        <Link to='/admin/bundle'>Bundle</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brand</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                <Menu.Item key='1011' icon={<FireOutlined />}>\r\n                    <Link to='/admin/coupon'>Coupon</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='1888' icon={<MailOutlined />}>\r\n                    <Link to='/admin/email'>Email</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='18'\r\n                        icon={<FileSearchOutlined />}\r\n                    >\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<FileAddOutlined />}\r\n                        key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<BgColorsOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined, BellOutlined, OrderedListOutlined, TwitterSquareFilled } from '@ant-design/icons';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst { Header } = Layout;\r\n\r\n// import styles\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n    const getNotificationCreationTime = (time: any) => {\r\n        console.log(time);\r\n        // return <Moment fromNow={true}></Moment>\r\n        return time;\r\n    }\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <Menu>\r\n                <div style={{\r\n                    padding: '0 30px'\r\n                }}>\r\n                    <Spin />\r\n                </div>\r\n\r\n            </Menu>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <Menu>\r\n                    <div style={{\r\n                        padding: '0 30px'\r\n                    }}>\r\n                        <Empty title='No Notification found' />\r\n                    </div>\r\n\r\n                </Menu>\r\n            )\r\n\r\n\r\n        }\r\n        return (\r\n            <Menu\r\n                style={{\r\n                    maxHeight: '450px',\r\n                    overflowY: 'scroll'\r\n                }}\r\n\r\n\r\n                onClick={handleMenuClick}>\r\n                {getAllNotificationState.done && getAllNotificationState.data[0] && getAllNotificationState.data.map(item => {\r\n                    return (\r\n                        <Menu.Item\r\n                            // style={{\r\n                            //     padding: 0,\r\n                            //     margin: 0\r\n                            // }}\r\n                            key=\"1\">\r\n\r\n                            <div className='notificationItem'>\r\n                                <span className='notificationItem-icon'>\r\n                                    <OrderedListOutlined />\r\n                                </span>\r\n                                <div className='notificationItem-info'>\r\n                                    <h3>\r\n                                        {item.heading}\r\n                                    </h3>\r\n                                    <h4>\r\n                                        {item.text}\r\n                                    </h4>\r\n                                    <h2>\r\n\r\n                                        {getNotificationCreationTime(item.added)}\r\n                                    </h2>\r\n                                </div>\r\n                            </div>\r\n                        </Menu.Item>\r\n                    )\r\n                })}\r\n\r\n            </Menu>\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Admin\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n\r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            // @ts-ignore\r\n                            showZero={TwitterSquareFilled}\r\n                            count={getAllNotificationState.done && !getAllNotificationState.data ? 0 : getAllNotificationState.data.length ? getAllNotificationState.data.length : 0}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\nimport Moment from \"react-moment\";\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'day',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                marginTop:'150px',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey=\"day\" \r\n                        // tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            // unit=\"times\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            {/* <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\tIn the last month\r\n\t\t\t\t</h3>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                console.log('myRecord',record);\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<ApiVisits />\r\n\r\n\r\n\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString, name, rows = 4 }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory', 'form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n\tsetcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, \r\n\tsetCategoryEditVisible,\r\n\t categoryDetailData,\r\n\t setcategoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateTagRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateTagRes\r\n\t\t\t})\r\n\t\t\tconsole.log('updateTagRes',updateTagRes);\r\n\t\t\tconsole.log('categoryDetailData',categoryDetailData);\r\n\t\t\t// setcategoryDetailData()\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Detail\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\ninterface Props {\r\n    onChange: any;\r\n    label?: string;\r\n    withTime?: boolean;\r\n    placeholder?: string;\r\n    date?: string;\r\n    time?: string;\r\n}\r\n\r\n\r\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current && current < moment(date) && current > moment(date);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>{label}</h3>\r\n\r\n            {withTime ? <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                className='inputclassName'\r\n                placeholder={placeholder}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderColor: \"#eee\"\r\n                }}\r\n\r\n\r\n                onChange={onChange}\r\n                {...(time && {\r\n                    defaultValue: moment(time),\r\n                })}\r\n            />\r\n                : (\r\n                    <DatePicker\r\n\r\n                        placeholder={placeholder}\r\n                        className='inputclassName'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderColor: \"#eee\"\r\n                        }}\r\n                        onChange={onChange}\r\n                        {...(date && {\r\n                            defaultValue: moment(date),\r\n                        })}\r\n                    />\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DatePickerComponent\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// function disabledDate(current) {\r\n//   // Can not select days before today and today\r\n//   return current && current < moment().endOf('day');\r\n// }\r\n\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n\r\n            setBundleList([...bundleList, {\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            }])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        label='Start Time'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='End Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n                                {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Organizer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, brandEditVisible, setBrandEditVisible }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover, ...images]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailData])\r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages)\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...brandDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                rows={3}\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n    const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            }); \r\n\r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailState.data && (Object.keys(brandDetailState.data).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setBrandEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailState.data && !(Object.keys(brandDetailState.data).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailState.data && (Object.keys(brandDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailState.data['cover'] && brandDetailState.data['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailState.data['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd To Pricing\r\n\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\t// date: date,\r\n\t\t\t\t// time: time,\r\n\t\t\t\t// venue: values.venue,\r\n\t\t\t\t// purchaseLimit: values.purchaseLimit\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t\tmessage: 'Product Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetProductList?: any;\r\n\tproductList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, setProductList, productList }: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateProductRes = await handleUpdateProductFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tcategory: category.category,\r\n\t\t\t\tpricing: category.pricing\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateProductRes && updateProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n\t\t\tsetProductList(updateProductList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductDetail from \"./ProductEdit\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onSearch={value => handleSearch(value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    model: '',\r\n    unit: '',\r\n    regular: '',\r\n    offer: '',\r\n    available: '',\r\n    minimum: '',\r\n    image: [],\r\n    url: '',\r\n    cover: '',\r\n    pricing: [],\r\n    venue: '',\r\n    date: '',\r\n    time: '',\r\n    purchaseLimit: null\r\n}\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    setProductDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductDetailData\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category.map(item => item.id);\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setProductEditVisible(false);\r\n            setProductDetailData({\r\n                // @ts-ignore\r\n                ...updatedProductRes,\r\n                category: productDetailData.category,\r\n                brand: productDetailData.brand,\r\n                tags: productDetailData.tags,\r\n                cover: productDetailData.cover,\r\n                image: productDetailData.image,\r\n            }); \r\n\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...productDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        label='Date'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n\r\n                                            <TextArea\r\n                                                rows={1}\r\n                                                label='Venue'\r\n                                                value={values.venue}\r\n                                                name='venue'\r\n                                                isError={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n                                                errorString={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('venue');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n                                            <Input\r\n                                                label='Purchase Limit'\r\n                                                value={values.purchaseLimit}\r\n                                                type='number'\r\n                                                name='purchaseLimit'\r\n                                                isError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n                                                errorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('purchaseLimit');\r\n                                                }}\r\n                                            /> */}\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                            <Input\r\n                                                label='Model Number'\r\n                                                value={values.model}\r\n                                                name='model'\r\n                                                isError={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n                                                errorString={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('model');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Unit'\r\n                                                value={values.unit}\r\n                                                name='unit'\r\n                                                isError={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n                                                errorString={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('unit');\r\n                                                }}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Pricing\r\n\t\t\t</h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Tabs\r\n                                                animated={true}\r\n                                                tabPosition=\"top\"\r\n                                                type='card'\r\n                                                defaultActiveKey='2'\r\n                                            >\r\n\r\n                                                <TabPane tab=\"Add Variation\" key=\"1\">\r\n                                                    <Pricing handleAddPricing={handleAddPricing} />\r\n                                                </TabPane>\r\n                                                <TabPane tab=\"Pricing List\" key=\"2\">\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n                                                        {pricing.length > 0 && pricing.map(item => {\r\n                                                            return (\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                                                        {/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n                                                                        <span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n                                                                            <DeleteOutlined />\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                                        <div>\r\n                                                                            <h3>\r\n                                                                                Price\r\n\t\t\t\t\t\t</h3>\r\n                                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                                {item.price.offer ? (\r\n                                                                                    <>\r\n                                                                                        <h4 >\r\n                                                                                            {item.price.offer}\r\n\r\n                                                                                        </h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n                                                                                            textDecoration: \"line-through\"\r\n                                                                                        }}>\r\n\r\n                                                                                            {item.price.regular}\r\n                                                                                        </h5>\r\n                                                                                    </>\r\n                                                                                ) : (\r\n                                                                                        <h4>\r\n                                                                                            {item.price.regular}\r\n\r\n                                                                                        </h4>\r\n                                                                                    )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        {item.stock && (\r\n                                                                            <div>\r\n                                                                                <Badge\r\n                                                                                    overflowCount={999}\r\n                                                                                    count={item.stock.available}>\r\n                                                                                    <h3>\r\n                                                                                        Stock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n                                                                                </Badge>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    <div>\r\n                                                                                        <h6>\r\n                                                                                            min\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n                                                                                                className=\"site-badge-count-4\"\r\n                                                                                                overflowCount={999}\r\n                                                                                                count={item.stock.minimum} />\r\n                                                                                        </h6>\r\n\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                                    {item.attribute\r\n                                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                                            <>\r\n                                                                                <h3>\r\n                                                                                    Attributes\r\n\t\t\t\t\t\t</h3>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    {item.attribute\r\n                                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                                            return (\r\n                                                                                                <div>\r\n                                                                                                    <h6>\r\n                                                                                                        {attributeItem}\r\n                                                                                                    </h6>\r\n                                                                                                    <h4>\r\n                                                                                                        {item.attribute[attributeItem]}\r\n                                                                                                    </h4>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })}\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                        {!(pricing.length > 0) && <div style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'center'\r\n                                                        }}>\r\n                                                            <Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                </TabPane>\r\n\r\n                                            </Tabs>\r\n\r\n                                            <div className='addProductGridContainer__item-body-container'>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductEdit from \"./ProductEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n    const [productDetailData,setProductDetailData] = useState({}); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            const productDetailRes = await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(productDetailRes){\r\n                // @ts-ignore\r\n                setProductDetailData(productDetailRes); \r\n            };\r\n\r\n            console.log('productDetailRes',productDetailRes);\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailData && productDetailData['image'] ? getImagesInCollumn(productDetailData['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Product Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <ProductEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailData}\r\n                            setProductDetailData={setProductDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailData && !(Object.keys(productDetailData).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailData['cover'] && productDetailData['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailData['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailData['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailData['description']}\r\n                                </h3>\r\n\r\n\r\n                                {productDetailData['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailData['category'] && productDetailData['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailData['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailData['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailData['icon'] && productDetailData['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['pricing'] && productDetailData['pricing'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Pricing\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__pricing'>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                                        {productDetailData['pricing'].map(item => {\r\n                                            return (\r\n                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                        <div>\r\n                                                            <h3>\r\n                                                                Price\r\n    </h3>\r\n                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                {item.price.offer ? (\r\n                                                                    <>\r\n                                                                        <h4 >\r\n                                                                            {item.price.offer}\r\n\r\n                                                                        </h4>\r\n                                                        /\r\n                                                        <h5 style={{\r\n                                                                            textDecoration: \"line-through\"\r\n                                                                        }}>\r\n\r\n                                                                            {item.price.regular}\r\n                                                                        </h5>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                        <h4>\r\n                                                                            {item.price.regular}\r\n\r\n                                                                        </h4>\r\n                                                                    )}\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {item.stock && (\r\n                                                            <div>\r\n                                                                <Badge\r\n                                                                    overflowCount={999}\r\n                                                                    count={item.stock.available}>\r\n                                                                    <h3>\r\n                                                                        Stock\r\n                </h3>\r\n                                                                </Badge>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    <div>\r\n                                                                        <h6>\r\n                                                                            min\r\n                                                                        <Badge\r\n                                                                                className=\"site-badge-count-4\"\r\n                                                                                overflowCount={999}\r\n                                                                                count={item.stock.minimum} />\r\n                                                                        </h6>\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                    {item.attribute\r\n                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                            <>\r\n                                                                <h3>\r\n                                                                    Attributes\r\n    </h3>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    {item.attribute\r\n                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                            return (\r\n                                                                                <div>\r\n                                                                                    <h6>\r\n                                                                                        {attributeItem}\r\n                                                                                    </h6>\r\n                                                                                    <h4>\r\n                                                                                        {item.attribute[attributeItem]}\r\n                                                                                    </h4>\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailData['image'] && productDetailData['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['brand'] && Object.keys(productDetailData['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailData['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['brand']['cover'] && productDetailData['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailData['primaryCategory'] && Object.keys(productDetailData['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailData['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['primaryCategory']['cover'] && productDetailData['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Coupon Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('tagDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailState.data['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['freeDelivery'] && (\r\n                                <h3>\r\n                                    FREE DELIVERY:\r\n                                    <span>\r\n                                        {tagDetailState.data['freeDelivery']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['orderedProducts'] && !(tagDetailState.data['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['orderedProducts'] && tagDetailState.data['orderedProducts'].length > 0 &&\r\n                            tagDetailState.data['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div> */}\r\n            {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && tagDetailState.data['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['freeProducts'] && !(tagDetailState.data['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['freeProducts'] && tagDetailState.data['freeProducts'].length > 0 &&\r\n                            tagDetailState.data['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code.trim(),\r\n                minimumOrder: values.minimumOrder.trim(),\r\n                amount: values.amount.trim(),\r\n                amountType: values.amountType.trim(),\r\n                freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                freeProducts: freeProducts,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            />\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('tagState', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Customer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n        .label('Password')\r\n        .required()\r\n        .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n               <Column\r\n                title=\"Country\" \r\n                dataIndex=\"country\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                \r\n                    />\r\n\r\n\r\n                <Column\r\n                title=\"City\" \r\n                dataIndex=\"city\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                title=\"Created\" \r\n                dataIndex=\"date_created\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Page Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deletePageState, handleDeletePageFetch] = useHandleFetch({}, 'deletePage');\r\n\r\n    const history = useHistory(); \r\n      \r\n      const handleDeletePage = async (id) => {\r\n        const deletePageRes = await handleDeletePageFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deletePageRes && deletePageRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Page'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Page'>\r\n              <span className='iconSize' onClick={() => {\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeletePage(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PageList = ({}: Props) => {\r\n\r\n\r\n  const [pageList,setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  const history = useHistory(); \r\n\r\n  useEffect(()=>{\r\n   const setPages = async () => {\r\n     const pages = await handlePagsListFetch({}); \r\n     // @ts-ignore\r\n     setPageList(pages); \r\n   }\r\n   setPages(); \r\n  },[])\r\n\r\n\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(pageState.data.length > 0 ){\r\n      const newBrandList = pageState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setPageList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n  \r\n    <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n           <div className='categoryListContainer__header-searchBar'>\r\n\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Pages\r\n            </h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search pages..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {pageState.done && pageList.length > 0 && <MyTable \r\n          setBrandList={setPageList}\r\n        data={pageList} />}\r\n        {pageState.isLoading && <DataTableSkeleton />}\r\n        {pageState.done && !(pageList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Page found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default PageList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Page Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\turl: ''\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewPage = ({ }: Props) => {\r\n\r\n\tconst [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addpage');\r\n\tconst [content, setContent] = useState(\"<p>Hello from the new page !</p>\");\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleAddPageSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('content', content);\r\n\t\tconsole.log('values', values);\r\n\t\tconst addOrderRes = await handleAddPageFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\turl: values.name,\r\n\t\t\t\tcover: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create page, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImagesdx', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"addNewPageContainer\">\r\n\t\t\t\t\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\t\t\t\t\tAdd New Page\r\n\t\t                 \t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='URL'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.url}\r\n\t\t\t\t\t\t\t\t\t\t\tname='url'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('url');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__body'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tContent\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={content}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tloading={addPageState.isLoading}\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate page\r\n                            </Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckOutlined,CheckCircleOutlined,DownOutlined  } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import lib \r\nimport Moment from \"react-moment\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n    const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch({}, 'updateOrderStatus');\r\n\r\n    const history = useHistory();\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n\r\n      \r\n      const handleUpdateOrderStatus = async (record,id,newStatus) => {\r\n        const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n          urlOptions: {\r\n            params: {\r\n              newOrderstatus: newStatus,\r\n            },\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(updateOrderStatusRes && updateOrderStatusRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Updated Order Status'); \r\n\t\t\t  \r\n        const positionInTag = () => {\r\n          return data.map(item => item.id).indexOf(id);\r\n          }\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis',record,index );\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [...data.slice(0, index), updatedItem, ...data.slice(index + 1)];\r\n      console.log('updateOrderList',updateOrderList,'-----',setOrderList );\r\n      setOrderList(updateOrderList);\r\n\r\n\r\n      }\r\n\r\n      \r\n      else {\r\n        openErrorNotification(\"Couldn't changed order status, Something went wrong\")\r\n      }\r\n\r\n      }\r\n      \r\n\r\n      const StatusItemMenu = (record,id) => {\r\n        return (\r\n          (\r\n            <Menu>\r\n\r\n<Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'pending')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Pending\r\n              </Menu.Item>\r\n  \r\n\r\n  \r\n              <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'complete')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Completed\r\n    \r\n              </Menu.Item>\r\n    \r\n              {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n            \r\n            </Menu >\r\n          )\r\n        )\r\n      };\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n          width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n        <Dropdown overlay={() => StatusItemMenu(record,record.id)} placement=\"bottomRight\">\r\n           <a href='##'>\r\n            <span\r\n                // className={'product-attributeTag'}\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n\r\n                {text}\r\n                <span style={{\r\n                  marginLeft:\"5px\",\r\n                  fontSize:'10px'\r\n                }}>\r\n                   <DownOutlined />\r\n                </span>\r\n               \r\n            </span> \r\n            </a>\r\n\t\t\t\t\t</Dropdown>\r\n\r\n\r\n     \r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n\r\n{/*    \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm> */}\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {/* {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n     */}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n\r\n    console.log('orderState',orderState);\r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }; \r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={setOrderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n  \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Order Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: '',\r\n\tcountry: '',\r\n\tcity: '',\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleCheckoutSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\t\tconsole.log('values', values);\r\n\t\tconsole.log('productListcool', productList);\r\n\r\n\t\tconst products = productList && productList.length > 0 ? productList.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tproduct: item._id,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tvariation: item.variation\r\n\t\t\t}\r\n\t\t}) : [];\r\n\r\n\t\tconst addOrderRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tphone: values.phone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\taddress1: values.address1,\r\n\t\t\t\t\taddress2: values.address2,\r\n\t\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\t\tlastName: values.lastName,\r\n\t\t\t\t\tcity: selectedCityValue || selectedCustomerData['city'],\r\n\t\t\t\t\tcountry: selectedCountryValue || selectedCustomerData['country'],\r\n\t\t\t\t},\r\n\t\t\t\titems: products,\r\n\t\t\t\tcustomerId: customerId\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create order, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addOrderState['isLoading']) {\r\n\t\t\tconst error = addOrderState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addOrderState['isLoading'] &&\r\n\t\t\tObject.keys(addOrderState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addOrderState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addOrderState]);\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.id,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tconst variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n\t\t\t\tconsole.log('variation', variation)\r\n\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t...productIds[productIds.length - 1],\r\n\t\t\t\t\t_id: productIds[productIds.length - 1]['id'],\r\n\t\t\t\t\tvariation: variation,\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(product => {\r\n\t\t\t\t\t\tif (product._id === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\t// console.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\tconsole.log('selectedCustomerData', selectedCustomerData)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...selectedCustomerData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t   <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCustomerData={setSelectedCustomerData}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductIds={productIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 10 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Comoros'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\"\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '300px',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '50px'\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#666'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#333'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={addOrderState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline-blue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (current === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrent(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n    const [orderDetailState, handleOrderDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n\r\n    useEffect(() => {\r\n        const getOrderDetail = async () => {\r\n            await handleOrderDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderDetail();\r\n\r\n    }, [id]);\r\n\r\n\r\n    console.log('orderDetailState', orderDetailState)\r\n\r\n    const handleOk = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Invoice\"\r\n            visible={showInvoice}\r\n            bodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n            onCancel={() => setShowInvoice(false)}\r\n            width={'60vw'}\r\n            okText='Print'\r\n            onOk={() => handleOk()}\r\n        >\r\n            {orderDetailState.isLoading && <Spin />}\r\n            {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='invoiceContainer'>\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"10px 10px 0 0\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={40} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"left\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Hello, {orderDetailState.data['name']}\r\n                                                                                        <br /> Thank you for your order.\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={5} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 21,\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            letterSpacing: \"-1px\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Invoice\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                                <tr></tr>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={50} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <small>ORDER</small> #{orderDetailState.data['id']}\r\n                                                                                        <br />\r\n                                                                                        <small>\r\n                                                                                            {orderDetailState.data['date_created']}\r\n\r\n                                                                                        </small>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Header */}\r\n                        {/* Order Details */}\r\n                        {orderDetailState.data && orderDetailState.data['products'] && orderDetailState.data['products'].length > 0 && (\r\n                            <table\r\n                                width=\"100%\"\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align=\"center\"\r\n                                className=\"fullTable\"\r\n                                bgcolor=\"#e1e1e1\"\r\n                            >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table\r\n                                                width={600}\r\n                                                border={0}\r\n                                                cellPadding={0}\r\n                                                cellSpacing={0}\r\n                                                align=\"center\"\r\n                                                className=\"fullTable\"\r\n                                                bgcolor=\"#ffffff\"\r\n                                            >\r\n                                                <tbody>\r\n                                                    <tr></tr>\r\n                                                    <tr className=\"hiddenMobile\">\r\n                                                        <td height={60} />\r\n                                                    </tr>\r\n                                                    <tr className=\"visibleMobile\">\r\n                                                        <td height={40} />\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <table\r\n                                                                width={480}\r\n                                                                border={0}\r\n                                                                cellPadding={0}\r\n                                                                cellSpacing={0}\r\n                                                                align=\"center\"\r\n                                                                className=\"fullPadding\"\r\n                                                            >\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 10px 7px 0\"\r\n                                                                            }}\r\n                                                                            width=\"52%\"\r\n                                                                            align=\"left\"\r\n                                                                        >\r\n                                                                            Name\r\n                        </th>\r\n\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"center\"\r\n                                                                        >\r\n                                                                            Quantity\r\n                        </th>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#1e2b33\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"right\"\r\n                                                                        >\r\n                                                                            Subtotal\r\n                        </th>\r\n                                                                    </tr>\r\n\r\n\r\n                                                                    {orderDetailState.data['products'].map(item => {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        height={1}\r\n                                                                                        style={{ background: \"#bebebe\" }}\r\n                                                                                        colSpan={4}\r\n                                                                                    />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={10} colSpan={4} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        className=\"article\"\r\n                                                                                    >\r\n                                                                                        {item.name}\r\n                                                                                    </td>\r\n\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#646a6e\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"center\"\r\n                                                                                    >\r\n                                                                                        {item.quantity}\r\n                                                                                    </td>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#1e2b33\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"right\"\r\n                                                                                    >\r\n                                                                                        {item.quantity * item.price}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    })}\r\n\r\n\r\n                                                                    <tr>\r\n                                                                        <td\r\n                                                                            height={1}\r\n                                                                            colSpan={4}\r\n                                                                            style={{ borderBottom: \"1px solid #e4e4e4\" }}\r\n                                                                        />\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td height={20} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                        {/* /Order Details */}\r\n                        {/* Total */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {/* Table Total */}\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Total\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\",\r\n                                                                            whiteSpace: \"nowrap\"\r\n                                                                        }}\r\n                                                                        width={80}\r\n                                                                    >\r\n                                                                        {orderDetailState.data['total']}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        {/* /Table Total */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Total */}\r\n                        {/* Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr></tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>BILLING INFORMATION</strong>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['name']}\r\n                                                                                        <br /> {orderDetailState.data['country']}\r\n                                                                                        <br /> {orderDetailState.data['city']}\r\n                                                                                        <br />{orderDetailState.data['address']}\r\n                                                                                        <br /> {orderDetailState.data['phone']}\r\n                                                                                        <br /> {orderDetailState.data['email']}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>Status</strong>\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['paymentStatus']}\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <strong>SHIPPING METHOD</strong> */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* UPS: U.S. Shipping Services */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"0 0 10px 10px\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            color: \"#5b5b5b\",\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"left\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Have a nice day.\r\n                        </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"spacer\">\r\n                                                    <td height={50} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>;\r\n                </>\r\n            )}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return orderList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            // const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            // setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport OrderEdit from \"./OrderEdit\";\r\nimport { OrderDetail } from '.';\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        getBrandDetail()  ;\r\n    }, [tagId]);\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState)\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Order Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <OrderEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Order found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this order' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async () => {\r\n\r\n\r\n\t\tconst updateSiteIconAndLogoRes = await handleUpdateSiteLogoAndIconFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tlogo: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateSiteIconAndLogoRes && updateSiteIconAndLogoRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Updated Site Logo');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't updated site logo, Something went wrong\");\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\r\n\t\t\t\t\t\t\tloading={updateSiteLogoAndIcon.isLoading}\r\n\t\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate site Logo\r\n                            </Button>\r\n\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Admin Information\" key=\"3\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: {}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n</a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port.trim(),\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('STMP Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                     <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    type='number'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"newCustomer\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'newCustomer'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"New Customer Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"orderStatus\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'orderStatus'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Status Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"order\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'order'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport NewCustomerTemplate from \"./NewCustomerTemplate\";\r\nimport OrderStatusTemplateAutoEmail from \"./OrderStatusTemplateAutoEmail\";\r\nimport OrderTemplateAutoEmail from \"./OrderTemplateAutoEmail\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureAutoEmail = ({  }: Props) => {\r\n\r\n    const [getAutoEmailConfigurationState, handleGetAutoEmailConfigurationFetch] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n    const [configureAutoEmailConfigurationState, handleAutoEmailConfigurationFetch] = useHandleFetch({}, 'configureAutoEmail');\r\n \r\n    const [isnewCustomerAdmin,setnewCustomerAdmin] = useState(true);\r\n    const [isnewCustomerCustomer,setnewCustomerCustomer] = useState(true);\r\n    const [isorderAdmin,setorderAdmin] = useState(true);\r\n    const [isorderStatusAdmin,setorderStatusAdmin] = useState(true);\r\n    const [isorderCustomer,setorderCustomer] = useState(true);\r\n    const [isorderStatusCustomer,setIsorderStatusCustomer] = useState(true);\r\n\r\n    const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n    const [ordermodal, setordermodal] = useState(false);\r\n    const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n\r\n\r\n    const handleUpdateAutoEmail = async () => {\r\n        const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n            body: {\r\n                \"newCustomerAdmin\": isnewCustomerAdmin,\r\n                \"newCustomerCustomer\": isnewCustomerCustomer,\r\n                \"orderAdmin\": isorderAdmin, \r\n                \"orderCustomer\": isorderStatusAdmin, \r\n                \"orderStatusAdmin\": isorderCustomer, \r\n                \"orderStatusCustomer\": isorderStatusCustomer\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Auto email Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated Auto email configuration\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                                <div style={{\r\n                                    display:'flex',\r\n                                    flexDirection:'column'\r\n                                }}>\r\n                                <div style={{\r\n                                }}>\r\n                                    \r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                New Customer\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setnewcustomermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                          <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                   checked={isnewCustomerAdmin}\r\n                                                   defaultChecked={isnewCustomerAdmin}\r\n                                                    onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isnewCustomerCustomer}\r\n                                                  defaultChecked={isnewCustomerCustomer}\r\n                                                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n</div>\r\n\r\n                                    <div>\r\n\r\n\r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                            marginTop:'30px'\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                 Order\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setordermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n\r\n\r\n                                    <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px',\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                      checked={isorderAdmin}\r\n                                                      defaultChecked={isorderAdmin}\r\n                                                    onChange={(e) => setorderAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isorderCustomer}\r\n                                                  defaultChecked={isorderCustomer}\r\n                                                onChange={(e) => setorderCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                                <div>\r\n                                                <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:\"30px\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                           <h3 className='checkBoxFieldLabel'>\r\n                                                 Order status\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setorderStatusmodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                    checked={isorderStatusAdmin}\r\n                                                    defaultChecked={isorderStatusAdmin}\r\n                                                    onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                 checked={isorderStatusCustomer}\r\n                                                 defaultChecked={isorderStatusCustomer}\r\n                                                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                              \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n</div>\r\n                                        \r\n\r\n\r\n                                        \r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                                                marginTop:\"25px\"\r\n                                            }}></div>\r\n\r\n    <Button\r\n\r\n                                            onClick={(e: any) => handleUpdateAutoEmail()}\r\n                                            loading={configureAutoEmailConfigurationState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Update Auto Email Configuration\r\n                                            </Button>\r\n\r\n                                            \r\n                                            <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n        \r\n\r\n        <NewCustomerTemplate \r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n        />\r\n\r\n<OrderStatusTemplateAutoEmail \r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n        />\r\n\r\n\r\n        <OrderTemplateAutoEmail \r\n        visible={ordermodal}\r\n        setVisible={setordermodal}\r\n        />\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"recipient\": \"\",\r\n    \"subject\": \"\",\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ComposeCustomEmail = ({  }: Props) => {\r\n\r\n    const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch({}, 'sendCustomEmail');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [html,sethtml] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleSendCustomEmailFetch({\r\n            body: {\r\n                \"recipient\": values.recipient.trim(),\r\n                \"subject\": values.subject.trim(),\r\n               \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Email Sent!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='To'\r\n                                                    value={values.recipient}\r\n                                                    name='recipient'\r\n                                                    isError={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n\r\n                                                    errorString={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('recipient');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Subject'\r\n                                                    value={values.subject}\r\n                                                    name='subject'\r\n                                                    isError={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n\r\n                                                    errorString={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('subject');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={html}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            sethtml(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n    \r\n\r\n                                       <div style={{\r\n                                           marginTop:'20px'\r\n                                       }}></div>         \r\n                                          <Button\r\n\r\n                                            onClick={(e: any) => handleSubmit(e)}\r\n                                            loading={sendCustomerEmailState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Send\r\n                                            </Button>     \r\n\r\n                                            \r\n                                       <div style={{\r\n                                           marginTop:'10px'\r\n                                       }}></div>       \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Inbox = (props: Props) => {\r\n    return (\r\n        <div className='sentEmailListContainer'>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport ConfigureSTMP from \"./ConfigureSTMP\";\r\nimport ConfigureAutoEmail from \"./ConfigureAutoEmail\";\r\nimport ComposeCustomEmail from \"./ComposeCustomEmail\";\r\nimport Inbox from \"./Inbox\";\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n    InfoCircleOutlined,\r\n    InboxOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane \r\n                    tab={\r\n                        <span>\r\n                        <InboxOutlined />\r\n                        Inbox\r\n                        </span>\r\n                    }\r\n             key=\"1\">\r\n                        <Inbox />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <PlusCircleOutlined />\r\n                        Compose Email\r\n                        </span>\r\n                    } key=\"2\">\r\n                        <ComposeCustomEmail />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                     tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure STMP\r\n                        </span>\r\n                    }\r\n                    \r\n                   key=\"3\">\r\n                        <ConfigureSTMP />\r\n                    </TabPane>\r\n\r\n                    <TabPane\r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure Auto Email     \r\n                        </span>\r\n                    }\r\n                     key=\"4\">\r\n                        <ConfigureAutoEmail />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport { ProductBundleDetail, ProductBundleList } from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder, OrderDetail } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport {Email} from '../../pages/email';\r\n\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route path='/admin/overview' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:id' exact>\r\n                    <NewCategoryDetail />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/brand/:id' exact>\r\n                    <NewBrandDetail />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                <Route path='/admin/product/:id' exact>\r\n                    <NewProductDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle' exact>\r\n                    <ProductBundleList />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle/:id' exact>\r\n                    <ProductBundleDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon' exact>\r\n                    <CouponList />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon/:id' exact>\r\n                    <CouponDetail />\r\n                </Route>\r\n\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/tag/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/tag/:id' exact>\r\n                    <NewTagDetail />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/order/:id' exact>\r\n                    <OrderDetail />\r\n                </Route>\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/customer/:id' exact>\r\n                    <CustomerDetail />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n\r\n                <Route path='/admin/email' exact>\r\n                    <Email />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}