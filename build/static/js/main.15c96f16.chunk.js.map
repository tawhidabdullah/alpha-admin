{"version":3,"sources":["components/Field/Input.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryEdit.tsx","pages/category/NewCategoryDetail.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/BrandQuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductQuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/TagQuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/OrderEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/PostQuickEdit.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","className","Item","validateStatus","help","style","borderRadius","placeholder","actionShouldBlock","meta","async","blocking","actionFinished","includes","reducer","state","action","utils","productPositionInCart","cart","product","map","item","id","indexOf","newCartItem","quantity","isSelectedForCheckout","initialState","reducerMap","url","method","body","options","headers","Accept","JSON","stringify","isomorphicFetch","then","res","status","Promise","resolve","reject","response","parseStatus","json","createReducer","payload","filter","cartItems","length","index","tempArrayWithOutOldProduct","updatedItem","Object","assign","slice","productPositionInWishList","wishList","productId","wishlist","products","ADD","queryPositionInQueryList","queryList","query","key","types","currentItem","oldQuery","find","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","categories","brands","tags","isObjectEmpty","keys","manupulateURL","urlOptions","params","placeHolders","split","currentValue","console","log","actualPlaceholderValue","replace","fuckValue","join","param","converter","resData","data","formatedData","category","_id","description","productCount","parent","cover","config","thumbnail","subCount","subCategory","children","subCat","icon","noti","heading","text","link","added","read","title","page","next","convertedData","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","parseInt","available","minimum","items","cartItem","medium","cartKey","updated","avalable","isNext","post","preparationTime","servingSize","cookingTime","requiredProducts","cat","startDate","endDate","actualPrice","image","img","original","labels","alt","caption","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","orderedProducts","freeProducts","orderedProductsCount","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","success","customer","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","order","shippingAddress","address","total","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","orders","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","format","api","apiMap","server","credentials","Headers","fetch","baseURL","formattedData","error","connector","dataFetchReducer","isLoading","done","Error","useFetch","dependencies","initialData","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","BankOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","CalculatorOutlined","UsergroupAddOutlined","MoneyCollectOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SlidersOutlined","SettingOutlined","UserOutlined","UserAddOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","getAllNotification","typeIcon","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RangePicker","DatePicker","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","setStartDate","setEndDate","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","startDateValue","endDateValue","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","moment","orientation","axisLine","tickLine","contentStyle","formatter","fill","showTime","picker","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","setcategoryList","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","CheckCircleOutlined","newCategoryList","objectFit","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","sortItem","sortOrderValue","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","handleSearch","PlusOutlined","DataTableSkeleton","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","limitNumber","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","ImageItemMenu","EllipsisOutlined","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","preventDefault","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","coverImageId","setCoverImageId","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","bnTags","setBnTags","imagesIds","trim","bn","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","uploadButton","LoadingOutlined","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","categoryEditVisible","setCategoryEditVisible","categoryDetailData","setcategoryDetailData","updateBrandState","handleUpdateBrandFetch","brandDetailState","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","visibleMedia","setvisibleMedia","myGoddamnImages","setMyGoddamnImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","updateTagRes","NewBrandDetail","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryEdit","avatar","paragraph","paddingTop","overflow","ProductBundleQuickEdit","tagList","setTagList","updateTagState","updateTagList","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","setProductIds","productIds","selectedOpions","setselectedOptions","selectItems","o","CartOverLayCartItem","productList","setProductList","variation","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","positionInAttribute","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","regular","offer","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","bundlePrice","AddNewProduct","bundleList","setBundleList","addProductState","handleAddProductFetch","categoryids","tagIds","setPricing","setDescription","setPrice","model","addProductRes","err","i","newProductList","isTrue","editor","ClassicEditor","onInit","event","getData","InputSmall","SelectProducts","SelectedProductItems","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","newTagList","AddNewProductBundle","CouponProducts","handleProductDetailFetch","getProductDetail","brandList","setBrandList","addBrandRes","brandDetailData","brandEditVisible","setBrandEditVisible","updateBrandRes","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","BrandQuickEdit","handlebrandListFetch","setBrandDetailData","handleBrandDetailFetch","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandDetail","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","setBNDescription","setMetaTags","setBnMetaTags","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","metaUnit","updatePricingList","animated","tabPosition","activeKey","handleEditPricing","newPricing","handleDeletePricing","textDecoration","productEditVisible","setProductEditVisible","productDetailData","updateProductState","handleUpdateProductFetch","setDateFeild","setTimeFeild","categoryIds","updatedProductRes","updateProductList","destroyOnClose","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","ProductQuickEdit","productState","handleProductListFetch","setProducts","setProductDetailData","productDetailRes","ProductEdit","tagEditVisible","setTagEditVisible","tagDetailData","addTagState","handleAddTagFetch","addTagRes","TagQuickEdit","AddNewTag","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","CouponEdit","addCouponState","handleAddCouponStateFetch","freeProductIds","setFreeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","setCustomerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","withTitle","handleDeletePageFetch","handleDeletePage","deletePageRes","PageList","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","EditableTagGroup","AttributeList","AddAttributeValues","setOrderList","handleUpdateOrderStatusFetch","handleUpdateOrderStatus","newStatus","newOrderstatus","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","orderList","orderState","handleRegionListFetch","regions","setOrders","newOrderList","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","current","setCurrent","selectedCustomerData","customerListState","deliveryRegionState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","selectedRegion","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","getAndSetShippingDeliveryCharge","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","borderBottom","whiteSpace","updateOrderState","handleUpdateOrderFetch","addRegionRes","OrderInvoice","OrderEdit","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","updateSiteLogoAndIcon","handleUpdateSiteLogoAndIconFetch","logo","updateSiteIconAndLogoRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","updateRegionList","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","recipient","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","ConfigureSTMP","emailConfigurationState","handleEmailConfigurationFetch","setIsAuthenticated","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","handleAuthenticatedChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","subject","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","ConfigureAutoEmail","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","handleUpdateAutoEmail","NewCustomerTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","html","sethtml","Inbox","substring","PlusCircleOutlined","NotificationList","AccessCheckbox","checkedList","setCheckedList","plainOptions","interminate","setInterminate","checkAll","setCheckAll","indeterminate","accessItem","span","role","accesscheckedList","setAccessCheckedList","access","passwordConfirmation","oneOf","AddNewAdminRoles","password2","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","setBody","setBnBody","categoryOne","tagsOne","AddNewPostCategory","AddNewStaff","StaffEdit","AddNewExpense","ExpenseEdit","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","StaffList","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","Delivery","ManageThemes","SiteInfo","AdminList","AdminDetail","Email","App","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"ugYA+DeA,GA5DMC,IAAbC,SAmBK,SAAC,GAII,IAJFC,EAIC,EAJDA,SAAUC,EAIT,EAJSA,YAAaC,EAItB,EAJsBA,MACnCC,EAGa,EAHbA,KAAmBC,GAGN,EAHPC,aAGO,EAHMD,OAAOE,EAGb,EAHaA,SAAUC,EAGvB,EAHuBA,SACnCC,EAEY,EAFZA,QAASC,EAEG,EAFHA,YAAaC,EAEV,EAFUA,KACtBC,EACY,EADZA,YAED,OACI,oCACKT,GACG,wBAAIU,UAAU,mBACTV,GAIT,kBAAC,IAAKW,KAAN,CAEIC,eAAgBN,EAAU,QAAU,GAEpCO,KAAMN,GAIN,kBAAC,IAAD,CACIT,SAAUA,EACVG,KAAMA,EACNF,YAAaA,EACbe,MAAO,CACHC,aAAc,KAElBP,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVM,UAAU,iBACVM,YAAaP,Q,0CCvD1B,SAASQ,EAAmBC,GAC/B,OAAQA,IAASA,EAAKC,QAAUD,EAAKE,SAGlC,SAASC,EAAiBpB,GAC7B,OAAOA,EAAKqB,SAAU,eAAkBrB,EAAKqB,SAAU,WCH3D,ICAeC,EDAK,WAA0B,IAAxBC,EAAuB,uDAAf,EAAGC,EAAY,uCACzC,OAAKC,EAAyBD,EAAOP,MAC1BM,EAENE,EAAsBD,EAAOxB,MACvBuB,EAAQ,EAEZA,EAAQ,G,eETZ,SAASG,EAAsBC,EAAMC,GAC1C,OAAOD,EAAKE,KAAI,SAAAC,GAAI,OAAIA,EAAKF,QAAQG,MAAIC,QAAQJ,EAAQG,IAGpD,SAASE,EAAYL,EAASM,EAAUC,GAC7C,MAAO,CACLP,UACAM,WACAC,yBCRW,I,EAAA,WAAEC,GAAF,OAAoB,SAAEC,GAAF,OAAkB,WAAqC,IAAnCd,EAAkC,uDAA1Ba,EAAcZ,EAAY,uCAC/EF,EAAUe,EAAYb,EAAOxB,MACnC,OAAOsB,EAAUA,EAASC,EAAOC,GAAWD,K,kBCAjC,WAACe,EAAKC,EAAQC,GAC5B,IAAMC,EAAU,CACfF,SACAG,QAoBM,CACNC,OAAQ,mBACR,eAAgB,oBArBhBH,KAAiB,QAAXD,EAAmBK,KAAKC,UAAUL,GAAQ,MAGjD,OAAOM,IAAgBR,EAAKG,GAASM,MAAK,SAAAC,GAAG,OAK9C,SAAqBC,EAAQD,GAC5B,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACxBH,GAAU,KAAOA,EAAS,IAC7BD,EAAID,MAAK,SAAAM,GAAQ,OAAIF,EAAQE,MAE7BL,EAAID,MAAK,SAAAM,GAAQ,OAAID,EAAO,CAAEH,SAAQI,mBATvCC,CAAYN,EAAIC,OAAQD,EAAIO,YCNvB,I,ECMQjC,ECKKkC,EAFC,GAEDA,EAAA,mBCdE,eDeJ,SAACjC,EAAOC,GAAY,IAAD,EACoBA,EAAOiC,QAApD7B,EADyB,EACzBA,QAASM,EADgB,EAChBA,SAAUC,EADM,EACNA,sBAE3B,OAAe,IADDV,EAA4BF,EAAOK,GAEzC,CACJH,EAAkBG,EAASM,EAAUC,IADvC,mBAEKZ,IAI4BA,EAAMmC,QACvC,SAAC5B,GAAD,OAAUA,EAAKF,QAAQG,KAAOH,EAAQG,SAZxB,cCbgB,6BD+BJ,SAACR,EAAOC,GAAY,IACxCmC,EAAcnC,EAAOiC,QAArBE,UAER,OAAIA,EAAUC,OAAS,EACdD,EAEA,YAAIpC,MAxBG,cCZuB,wCDwCJ,SAACA,EAAOC,GAAY,IAC/CI,EAAYJ,EAAOiC,QAAnB7B,QAEFiC,EAAQpC,EAA4BF,EAAOK,EAAQA,SACzD,IAAe,IAAXiC,EACF,MAAM,GAAN,mBAAWtC,GAAX,gBAAuBK,EAAvB,CAAgCO,uBAAuB,MAClD,IAAe,IAAX0B,IAAiBjC,EAAQO,sBAAuB,CACzD,IAAM2B,EAA6BvC,EAAMmC,QACvC,SAAC5B,GAAD,OAAUA,EAAKF,QAAQG,KAAOH,EAAQA,QAAQG,MAGhD,MAAM,GAAN,mBACK+B,GADL,gBAEOlC,EAFP,CAEgBO,uBAAuB,MAIzC,IAAM2B,EAA6BvC,EAAMmC,QACvC,SAAC5B,GAAD,OAAUA,EAAKF,QAAQG,KAAOH,EAAQA,QAAQG,MAGhD,MAAM,GAAN,mBACK+B,GADL,gBAEOlC,EAFP,CAEgBO,uBAAuB,SAnDvB,cCXW,wBDkEJ,SAACZ,EAAOC,GAAY,IAAD,EACZA,EAAOiC,QAA7B7B,EADkC,EAClCA,QAASM,EADyB,EACzBA,SACX2B,EAAQpC,EAA4BF,EAAOK,GAE3CmC,EAAcC,OAAOC,OAAO,GAAI1C,EAAMsC,GAAQ,CAAE3B,aACtD,MAAM,GAAN,mBAAWX,EAAM2C,MAAM,EAAGL,IAA1B,CAAkCE,GAAlC,YAAkDxC,EAAM2C,MAAML,EAAQ,QA5DtD,cCVE,eDwEJ,SAACtC,EAAOC,GAAY,IAE5BqC,EAAQpC,EAA4BF,EADtBC,EAAOiC,QAAnB7B,SAER,MAAM,GAAN,mBAAWL,EAAM2C,MAAM,EAAGL,IAA1B,YAAqCtC,EAAM2C,MAAML,EAAQ,QAjEzC,cCTC,cD4EJ,iBAAM,MAnEH,IEfb,SAASM,EAA0BC,EAAUC,GAClD,OAAOD,EAASvC,KAAI,SAAAC,GAAI,OAAIA,KAAME,QAAQqC,GCM7B/C,I,EAAAA,ECOSkC,EAFH,GAEGA,EAAA,mBCdF,mBDeJ,SAACjC,EAAOC,GAAY,IAC1B6C,EAAc7C,EAAOiC,QAArBY,UAGR,OAAe,IADD5C,EAAgCF,EAAO8C,GAE7C,GAAN,mBAAW9C,GAAX,CAAkB8C,IAGe9C,EAAMmC,QACvC,SAAC5B,GAAD,OAAUA,IAASuC,QAVD,cCbI,yBD4BJ,SAAC9C,EAAOC,GAC5B,IAAM8C,EAAW9C,EAAOiC,QACxB,OAAO,YAAIa,MAjBS,cCZF,mBDgCJ,SAAC/C,EAAOC,GAAY,IAE5BqC,EAAQpC,EAAgCF,EADxBC,EAAOiC,QAArBY,WAER,MAAM,GAAN,mBAAW9C,EAAM2C,MAAM,EAAGL,IAA1B,YAAqCtC,EAAM2C,MAAML,EAAQ,QAvBrC,cCXH,kBDoCJ,iBAAM,MAzBC,IETjB,I,ECEQvC,ECQSkC,EAFH,GAEGA,EAAA,mBCbgB,qCDcJ,SAACjC,EAAOC,GAAY,IAC5C+C,EAAa/C,EAAOiC,QAApBc,SAER,OAAIA,EAASX,OAAS,EACaW,EAASb,QAAO,SAAS9B,GACxD,OAAkC,GAA3BL,EAAMS,QAAQJ,MAIhB,YAAIL,MAVO,cCXF,mBDwBJ,SAACA,EAAOC,GAAY,IAE5BqC,EE9BH,SAAgClC,EAAMC,GACzC,OAAOD,EAAKE,KAAK,SAAAC,GAAI,OAAIA,EAAKF,QAAQG,MAAKC,QAASJ,EAAQG,IF6B9CN,CAA4BF,EADtBC,EAAOiC,QAAnB7B,SAER,MAAM,GAAN,mBAAWL,EAAM2C,MAAM,EAAGL,IAA1B,YAAqCtC,EAAM2C,MAAML,EAAQ,QAhBrC,cCVH,kBD4BJ,iBAAM,MAlBC,IGfXW,EAAM,aCAZ,SAASC,EAAyBC,EAAWC,GAClD,OAAOD,EAAU7C,KAAI,SAAAC,GAAI,OAAIA,EAAK8C,OAAK5C,QAAQ2C,EAAMC,KCMxCtD,I,QAAAA,ECWWkC,EAFL,GAEKA,EAAA,mBACvBqB,GAAY,SAACtD,EAAOC,GAAY,IACvBmD,EAAUnD,EAAOiC,QAAjBkB,MACFd,EAAQpC,EAA+BF,EAAOoD,GACpD,IAAe,IAAXd,EACF,MAAM,CAAqBc,GAA3B,mBAAsCpD,IAGxC,IAAMuD,EAAcvD,EAAMsC,GACpBE,EAAcC,OAAOC,OAAO,GAAIa,GACtC,MAAM,GAAN,mBAAWvD,EAAM2C,MAAM,EAAGL,IAA1B,CAAkCE,GAAlC,YAAkDxC,EAAM2C,MAAML,EAAQ,QAVhD,cHjBJ,iBG6BJ,SAACtC,EAAOC,GAAY,IAC1BmD,EAAUnD,EAAOiC,QAAjBkB,MACFI,EAAWxD,EAAMyD,MAAK,SAAAlD,GAAI,OAAIA,EAAK8C,MAAQD,EAAMC,OACjDK,EAA6B1D,EAAMmC,QAAO,SAAA5B,GAAI,OAAIA,EAAK8C,MAAQD,EAAMC,OAC3E,MAAM,GAAN,mBAAWK,GAAX,gBAA4CF,EAA5C,GAAyDJ,QAhBnC,cHhBJ,iBGkCJ,SAACpD,EAAOC,GAAY,IAE5BqC,EAAQpC,EAA+BF,EADzBC,EAAOiC,QAAnB7B,SAER,MAAM,GAAN,mBAAWL,EAAM2C,MAAM,EAAGL,IAA1B,YAAqCtC,EAAM2C,MAAML,EAAQ,QArBnC,cHfL,gBGsCJ,iBAAM,MAvBG,I,QCPpBqB,EAAiB1B,EAAe,KAAfA,CAAA,eCVgB,mCDWA,SAAEjC,EAAOC,GAAT,OAAqBA,EAAOiC,QAAQ7B,YAGrEuD,GAAc3B,EAAe,GAAfA,CAAA,eCVgB,gCDWA,SAAEjC,EAAOC,GAAT,OAAqBA,EAAOiC,QAAQc,aERzDjD,GFWA8D,YAAiB,CAC5BC,QAASH,EACTI,KAAMH,KGVJI,GAAc/B,GAAc,EAAdA,EAAA,mBCXC,iBDYJ,kBAAM,KADH,cCRE,kBDUJ,kBAAM,KAFJ,IAKdgC,GAA4BhC,EAAc,KAAdA,CAAA,eCXM,oCDYJ,SAACjC,EAAOC,GAAR,OAAmBA,EAAOiC,QAAQgC,gBETvDnE,GFYA8D,YAAgB,CAC7BM,gBAAiBH,GACjBI,mBAAoBH,KGDPI,GAhBKpC,EAFC,GAEDA,EAAA,mBCLU,2BDMJ,SAACjC,EAAOC,GAAY,IAClCqE,EAAerE,EAAOiC,QAAtBoC,WAER,OAAIA,GAIG,YAAItE,MARK,cCJU,2BDeJ,SAACA,EAAOC,GAC9B,OAAO,YAAID,MAZK,IEELD,I,OAAAA,ICUAsE,GAZKpC,EAFC,GAEDA,CAAA,eCLa,8BDMJ,SAACjC,EAAOC,GAAY,IACrC6B,EAAa7B,EAAOiC,QAApBJ,SAER,OAAIA,EACK,eAAK9B,EAAZ,GAAsB8B,GAGjB,eAAK9B,OENDD,I,OAAAA,ICcAsE,GAhBKpC,EAFC,GAEDA,EAAA,mBCLK,sBDMJ,SAACjC,EAAOC,GAAY,IAC7BsE,EAAWtE,EAAOiC,QAAlBqC,OAER,OAAIA,GAIG,YAAIvE,MARK,cCJK,sBDeJ,SAACA,EAAOC,GACzB,OAAO,YAAID,MAZK,IEELD,I,OAAAA,ICcAsE,GAhBKpC,EAFC,GAEDA,EAAA,mBCLI,gBDMJ,SAACjC,EAAOC,GAAY,IAC5BuE,EAASvE,EAAOiC,QAAhBsC,KAER,OAAIA,GAIG,YAAIxE,MARK,cCJI,gBDeJ,SAACA,EAAOC,GACxB,OAAO,YAAID,MAZK,IEELD,I,OAAAA,ICPT0E,GAAgB,SAAA/F,GACpB,OAAQA,IAAU+D,OAAOiC,KAAKhG,GAAO2D,OAAS,GAiDjCsC,GA9CO,SAAC5D,GAA0B,IAArB6D,EAAoB,uDAAP,GACvC,GAAIH,GAAcG,GAAa,OAAO7D,EAEtC,IAAM8D,EAASD,EAAWC,QAAU,GAC9BC,EAAeF,EAAWE,cAAgB,GAIhD,OAAO/D,EACJgE,MAAM,KACNzE,KAAI,SAAA0E,GACH,GAAIA,EAAalF,SAAS,OAAS2E,GAAcK,KAAkBE,EAAalF,SAAS,KAAM,CAC7FmF,QAAQC,IAAI,eAAeF,GAC3B,IAAIG,EAAyBL,EAAaE,EAAaI,QAAQ,IAAK,KACpEH,QAAQC,IAAI,yBAAyBC,GACrCH,EAAeG,EAGjB,GAAIH,EAAalF,SAAS,OAAS2E,GAAcK,IAAiBE,EAAalF,SAAS,KAAM,CAC5F,IAAIuF,EAAYL,EAAaD,MAAM,KAChCM,GAAaA,EAAUhD,OAAS,IACjCgD,EAAYA,EAAU/E,KAAI,SAAAC,GACxB,OAAOuE,EAAavE,EAAK6E,QAAQ,IAAK,KAAON,EAAavE,EAAK6E,QAAQ,IAAK,KAAO7E,MAGvF0E,QAAQC,IAAI,YAAYG,GACxB,IAAIF,EAAyBE,EAAUC,KAAK,KAC5CL,QAAQC,IAAI,yBAAyBC,EAAuB,eAAeH,GAC3EC,QAAQC,IAAI,eAAeJ,GAC3BE,EAAeG,EAYjB,OATIH,EAAalF,SAAS,OACxBkF,EAAeA,EACZD,MAAM,KACNzE,KAAI,SAAA0E,GACH,IAAMO,EAAQP,EAAarC,MAAMqC,EAAavE,QAAQ,KAAO,GAC7D,OAAOuE,EAAaI,QAAQG,EAAOV,EAAOU,IAAU,OAErDD,KAAK,MAEHN,KAERM,KAAK,MCxCNE,GAAY,I,8ICIIC,G,gFACZC,EAAOD,EAAQC,MAAQ,GAEvBC,EACLD,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACsF,GACT,OAAO,aACNpF,GAAIoF,EAASC,KAAO,GACpBxC,IAAKuC,EAASC,KAAO,GACrB7G,KAAM4G,EAAS5G,MAAQ4G,EAAS5G,KAChC8G,YAAaF,EAASE,aAAeF,EAASE,YAC9CC,aAAcH,EAASG,cAAgB,EACvCC,OAAQJ,EAASI,QAAU,GAC3BC,MAAOL,EAASK,MAAT,UAAoBC,EAAM,SAA1B,OAAwCN,EAASK,MAAME,WAAc,KAC5EC,SACiC,IAAhCR,EAASS,YAAYhE,OAClBuD,EAASS,YAAY,IAAMT,EAASS,YAAY,GAAGrH,KAAO4G,EAASS,YAAYhE,OAAS,EACxFuD,EAASS,YAAYhE,QACrBuD,EAASS,aACZT,EAASS,YAAYhE,OAAS,GAC9BuD,EAASS,YAAY,IACrBT,EAASS,YAAY,GAArB,MAAmC,CACnCC,SAAUV,EAASS,YAAY/F,KAAI,SAACiG,GACnC,MAAO,CACN/F,GAAI+F,EAAOV,KAAO,GAClBxC,IAAKkD,EAAOV,IACZ7G,KAAMuH,EAAOvH,MAAQuH,EAAOvH,KAC5B8G,YAAaS,EAAOT,aAAeS,EAAOT,YAC1CG,MAAOM,EAAON,MAAP,UAAkBC,EAAM,SAAxB,OAAsCK,EAAON,MAAME,WAAc,Y,kBAOvER,G,kLAUgBF,G,gFAClBC,EAAOD,EAAQC,MAAQD,EAAQC,KAAQD,EAAQC,KAAO,GAEtDC,EACLD,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACsF,GACT,MAAO,CACNpF,GAAIoF,EAASC,KAAO,GACpBxC,IAAKuC,EAASC,KAAO,GACrB7G,KAAM4G,EAAS5G,MAAQ4G,EAAS5G,KAChC8G,YAAaF,EAASE,aAAeF,EAASE,YAC9CG,MAAOL,EAASK,MAAT,UAAoBC,EAAM,SAA1B,OAAwCN,EAASK,MAAME,WAAc,KAC5EK,KAAMZ,EAASY,KAAT,UAAmBN,EAAM,SAAzB,OAAuCN,EAASY,MAAS,S,kBAK3Db,G,oLAWmBF,G,0EACpBC,EAAOD,IAEVhD,OAAOiC,KAAKgB,GAAMrD,OAAS,G,yCACtB,CACN7B,GAAIkF,EAAKG,KAAO,GAChBxC,IAAKqC,EAAKG,KAAO,GACjB7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxB8G,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtCG,MAAOP,EAAKO,MAAL,UAAgBC,EAAM,SAAtB,OAAoCR,EAAKO,MAAME,WAAc,KACpEK,KAAMd,EAAKc,KAAL,UAAeN,EAAM,SAArB,OAAmCR,EAAKc,MAAS,O,oLAYhCf,G,gFAClBC,EAAOD,EAAQC,MAAQ,GAEvBC,EACLD,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACmG,GACT,MAAO,CACNjG,GAAIiG,EAAKZ,KAAO,GAChBxC,IAAKoD,EAAKZ,KAAO,GACjBa,QAASD,EAAKC,SAAWD,EAAKC,QAC9BC,KAAMF,EAAKE,MAAQF,EAAKE,KACxBlI,KAAMgI,EAAKhI,KACXmI,KAAMH,EAAKG,MAAQ,GACnBC,MAAOJ,EAAKI,OAAS,GACrBC,KAAML,EAAKK,S,kBAIPnB,G,mLAgBgBF,G,gFACjBC,EAAOD,EAAQC,MAAQ,GAEvBC,EACLD,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACsF,GACT,OAAO,aACNpF,GAAIoF,EAASC,KAAO,GACpBxC,IAAKuC,EAASC,KAAO,GACrBkB,MAAOnB,EAAS5G,MAAQ4G,EAAS5G,MAC7B4G,EAASS,aACZT,EAASS,YAAYhE,OAAS,GAC9BuD,EAASS,YAAY,IACrBT,EAASS,YAAY,GAArB,MAAmC,CACnCC,SAAUV,EAASS,YAAY/F,KAAI,SAACiG,GACnC,MAAO,CACN/F,GAAI+F,EAAOV,KAAO,GAClBxC,IAAKkD,EAAOV,IACZkB,MAAOR,EAAOvH,MAAQuH,EAAOvH,KAC7BiH,MAAOM,EAAON,MAAP,UAAkBC,EAAM,SAAxB,OAAsCK,EAAON,MAAME,UAAYI,EAAON,MAAME,UAAY,IAAO,Y,kBAOrGR,G,wLAcqBF,G,gFAEtBC,EAAOD,EAAQC,KAEfC,EACLD,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACsF,GACT,MAAO,CACNpF,GAAIoF,EAASC,KAAO,GACpBxC,IAAKuC,EAASC,KAAO,GACrBkB,MAAOnB,EAAS5G,MAAQ4G,EAAS5G,S,kBAI7B2G,G,kLASeF,G,gFAChBC,EAAOD,EAAQC,MAAQ,GACdD,EAAQuB,KAAKC,KAEtBC,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACD,GACT,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9B8G,YAAazF,EAAQyF,aAAezF,EAAQyF,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B7F,EAAQ4F,OAAS5F,EAAQ4F,MAAR,WAA+B,IAC/EkB,aAAc9G,EAAQ+G,OAAS/G,EAAQ+G,MAAR,QAC/BC,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BrG,IAAKV,EAAQU,IACbuG,KAAMjH,EAAQiH,KACd1B,SAAUvF,EAAQuF,SAClB2B,QAASlH,EAAQkH,QACjBC,KAAMnH,EAAQmH,KACdC,KAAMpH,EAAQoH,KACdC,MAAOrH,EAAQqH,MACfC,MAAOtH,EAAQsH,MACfnD,KAAMnE,EAAQmE,KACd4C,MACCQ,SAASvH,EAAQ+G,MAAR,OAA0BQ,SAASvH,EAAQ+G,MAAR,SACzC/G,EAAQ+G,MAAR,MACA/G,EAAQ+G,MAAR,QACJS,UAAWxH,EAAQkH,SACnBlH,EAAQkH,QAAQlF,OAAS,EACtBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,gBAC7B,EACLO,QAASzH,EAAQkH,SACjBlH,EAAQkH,QAAQlF,OAAS,EACzBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,cAC7B,M,kBASEL,G,yKASMzB,G,gFACPrD,EAAYqD,EAAQsC,OAAS,GAC7Bb,EACL9E,EAAUC,OAAS,GACnBD,EAAU9B,KAAI,SAAC0H,GACd,MAAO,CACNxH,GAAIwH,EAASnC,KAAO,GACpB7G,KAAMgJ,EAAShJ,MAAQgJ,EAAShJ,KAChCiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8B,EAAS/B,MAAMgC,QAC7Cd,aAAca,EAASZ,OAASY,EAASZ,MAAT,QAChCC,WAAYW,EAASZ,OAASY,EAASZ,MAAT,MAC9BzG,SAAUqH,EAASrH,SACnBI,IAAKiH,EAASjH,IACdmH,QAASF,EAASE,Y,kBAIdhB,G,2KASQzB,G,gFACXC,GAAO,EAEPD,EAAO,WACVC,EAAO,CACNlF,GAAIiF,EAAO,SAAaI,KAAO,GAC/B7G,KAAMyG,EAAO,SAAazG,MAAQyG,EAAO,SAAazG,KACtDiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBT,EAAO,SAAaQ,MAAMgC,QACxDd,aAAc1B,EAAO,SAAa2B,OAAS3B,EAAO,SAAa2B,MAApB,QAC3CC,WAAY5B,EAAO,SAAa2B,OAAS3B,EAAO,SAAa2B,MAApB,MACzCzG,SAAU8E,EAAO,SAAa9E,SAC9BI,IAAK0E,EAAO,SAAa1E,IACzBmH,QAASzC,EAAO,SAAayC,UAIzBhB,EAAgBxB,E,kBAEfwB,G,gLASazB,G,8EAChByB,GAAgB,EAChBzB,IACHyB,GAAgB,G,kBAEVA,G,gLASazB,G,8EAChByB,GAAgB,EAChBzB,EAAO,UACVyB,EAAgB,CACfvG,SAAU8E,EAAQ0C,QAAR,W,kBAGLjB,G,2KASQxB,G,qEACXA,IAAQA,EAAI,I,yCACR,CACNhE,OAAQ,O,gCAGHgE,G,6KASUD,G,8EAEXyB,EAAgBzB,E,kBAEfyB,G,6KASUzB,G,qEACbA,GAA8B,qBAAnBA,EAAO,I,yCACd,CACN/D,OAAQ,O,iCAIH,G,oLASiB+D,G,qEACpBA,GAA8B,qBAAnBA,EAAO,I,yCACd,CACN/D,OAAQ,O,iCAIH,G,mLASgB+D,G,qEACnBA,GAA8B,qBAAnBA,EAAO,I,yCACd,CACN/D,OAAQ,O,iCAIH,G,6KASU+D,G,gFACXC,EAAOD,EAAQC,MAAQ,GACdD,EAAQuB,KAAKC,KAEtBC,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACD,GACT,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9B8G,YAAazF,EAAQyF,aAAezF,EAAQyF,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B7F,EAAQ4F,OAAS5F,EAAQ4F,MAAR,WAA+B,IAC/EkB,aAAc9G,EAAQ+G,OAAS/G,EAAQ+G,MAAR,QAC/BC,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BrG,IAAKV,EAAQU,IACbuG,KAAMjH,EAAQiH,KACd1B,SAAUvF,EAAQuF,SAClB2B,QAASlH,EAAQkH,QACjBC,KAAMnH,EAAQmH,KACdC,KAAMpH,EAAQoH,KACdC,MAAOrH,EAAQqH,MACfC,MAAOtH,EAAQsH,MACfnD,KAAMnE,EAAQmE,KACd4C,MACCQ,SAASvH,EAAQ+G,MAAR,OAA0BQ,SAASvH,EAAQ+G,MAAR,SACzC/G,EAAQ+G,MAAR,MACA/G,EAAQ+G,MAAR,QACJgB,SAAU/H,EAAQkH,SAClBlH,EAAQkH,QAAQlF,OAAS,EACtBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,gBAC7B,EACLO,QAASzH,EAAQkH,SACjBlH,EAAQkH,QAAQlF,OAAS,EACzBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,cAAyC,M,kBASpEL,G,+KASYzB,G,gFACbC,EAAOD,EAAQC,MAAQ,GACdD,EAAQuB,KAAKC,KAEtBC,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACD,GACT,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9B8G,YAAazF,EAAQyF,aAAezF,EAAQyF,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B7F,EAAQ4F,OAAS5F,EAAQ4F,MAAR,WAA+B,IAC/EkB,aAAc9G,EAAQ+G,OAAS/G,EAAQ+G,MAAR,QAC/BC,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BrG,IAAKV,EAAQU,IACbuG,KAAMjH,EAAQiH,KACd1B,SAAUvF,EAAQuF,SAClB2B,QAASlH,EAAQkH,QACjBC,KAAMnH,EAAQmH,KACdC,KAAMpH,EAAQoH,KACdC,MAAOrH,EAAQqH,MACfC,MAAOtH,EAAQsH,MACfnD,KAAMnE,EAAQmE,KACd4C,MACCQ,SAASvH,EAAQ+G,MAAR,OAA0BQ,SAASvH,EAAQ+G,MAAR,SACzC/G,EAAQ+G,MAAR,MACA/G,EAAQ+G,MAAR,QACJgB,SAAU/H,EAAQkH,SAClBlH,EAAQkH,QAAQlF,OAAS,EACtBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,gBAC7B,EACLO,QAASzH,EAAQkH,SACjBlH,EAAQkH,QAAQlF,OAAS,EACzBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,cAC7B,M,kBASEL,G,+KASYzB,G,kFACbC,EAAOD,EAAQC,MAAQ,GACvB2C,EAAS5C,EAAQuB,KAAKC,KAEtBC,EACJxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACD,GACT,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9B8G,YAAazF,EAAQyF,aAAezF,EAAQyF,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB7F,EAAQ4F,MAAME,WAC5CgB,aAAc9G,EAAQ+G,OAAS/G,EAAQ+G,MAAR,QAC/BC,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BrG,IAAKV,EAAQU,IACbuG,KAAMjH,EAAQiH,KACdE,KAAMnH,EAAQmH,KACdE,MAAOrH,EAAQqH,MACfH,QAASlH,EAAQkH,aAGpB,G,kBAEM,CACN7B,KAAMwB,EACNmB,W,6KAUgB5C,G,gFACXC,EAAOD,EAAQC,MAAQ,GACdD,EAAQuB,KAAKC,KAExBC,EACHxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACD,GACT,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9B8G,YAAazF,EAAQyF,aAAezF,EAAQyF,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B7F,EAAQ4F,OAAS5F,EAAQ4F,MAAR,WAA+B,IAC/EkB,aAAc9G,EAAQ+G,OAAS/G,EAAQ+G,MAAR,QAC/BC,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BrG,IAAKV,EAAQU,IACbuG,KAAMjH,EAAQiH,KACd1B,SAAUvF,EAAQuF,SAClB2B,QAASlH,EAAQkH,QACjBC,KAAMnH,EAAQmH,KACdC,KAAMpH,EAAQoH,KACdC,MAAOrH,EAAQqH,MACfC,MAAOtH,EAAQsH,MACfnD,KAAMnE,EAAQmE,KACd4C,MACAQ,SAASvH,EAAQ+G,MAAR,OAA0BQ,SAASvH,EAAQ+G,MAAR,SACxC/G,EAAQ+G,MAAR,MACA/G,EAAQ+G,MAAR,QACJS,UAAWxH,EAAQkH,SACnBlH,EAAQkH,QAAQlF,OAAS,EACtBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,gBAC7B,EACLO,QAASzH,EAAQkH,SACjBlH,EAAQkH,QAAQlF,OAAS,EACzBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,cAC7B,M,kBAUEL,G,0KAYQzB,G,gFACVC,EAAOD,EAAQC,KAGjBwB,EACHxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACgI,GACT,MAAO,CACN9H,GAAI8H,EAAKzC,KAAO,GAChB7G,KAAMsJ,EAAKtJ,MAAQsJ,EAAKtJ,KACxBiC,KAAMqH,EAAKrH,MAAQqH,EAAKrH,KACxBsH,gBAAiBD,EAAKC,iBAAmBD,EAAKC,gBAC9CC,YAAaF,EAAKE,aAAeF,EAAKE,YACtCC,YAAaH,EAAKG,aAAeH,EAAKG,YACtCxC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BoC,EAAKrC,OAASqC,EAAKrC,MAAL,WAA4B,IACzElF,IAAKuH,EAAKvH,IACV6E,SAAU0C,EAAK1C,SACfpB,KAAM8D,EAAK9D,S,kBASP0C,G,4KAWWzB,G,0EACZC,EAAOD,IAGVhD,OAAOiC,KAAKgB,GAAMrD,OAAS,G,yCACtB,CACN7B,GAAIkF,EAAKG,KAAO,GAChB7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxBiC,KAAMyE,EAAKzE,MAAQyE,EAAKzE,KACxBsH,gBAAiB7C,EAAK6C,iBAAmB7C,EAAK6C,gBAC9CC,YAAa9C,EAAK8C,aAAe9C,EAAK8C,YACtCC,YAAa/C,EAAK+C,aAAe/C,EAAK+C,YACtCxC,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BR,EAAKO,OAASP,EAAKO,MAAL,QAAyB,IACtElF,IAAK2E,EAAK3E,IACViC,SAAU0C,EAAKgD,iBACf9C,SACCF,EAAKE,UACLF,EAAKE,SAASvD,OAAS,GACvBqD,EAAKE,SAAStF,KAAI,SAACqI,GAClB,MAAO,CACNnI,GAAImI,EAAI9C,IACR7G,KAAM2J,EAAI3J,UAGb0G,EAAKE,SACJpB,KAAMkB,EAAKlB,MAAQkB,EAAKlB,KAAKnC,OAAS,EAAIqD,EAAKlB,KAAO,K,gCAG7C,I,4KAaKiB,G,gFAGZyB,GAFExB,EAAOD,GAAW,IAGlBpD,OAAS,GACdqD,EAAKpF,KAAI,SAACD,GACT,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9B8G,YAAazF,EAAQyF,aAAezF,EAAQyF,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B7F,EAAQ4F,OAAS5F,EAAQ4F,MAAR,WAA+B,IAC/EkB,aAAc9G,EAAQ+G,OAAS/G,EAAQ+G,MAAR,QAC/BC,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BrG,IAAKV,EAAQU,IACb6H,UAAWvI,EAAQuI,UACnBC,QAASxI,EAAQwI,QACjBC,YAAazI,EAAQyI,YACrBxB,KAAMjH,EAAQiH,KACd1B,SAAUvF,EAAQuF,SAClB2B,QAASlH,EAAQkH,QACjBC,KAAMnH,EAAQmH,KACdC,KAAMpH,EAAQoH,KACdC,MAAOrH,EAAQqH,MACfC,MAAOtH,EAAQsH,MACfnD,KAAMnE,EAAQmE,KACdnE,QAASA,EAAO,QAChB0F,aAAc1F,EAAO,QAAYgC,OACjC+E,MACCQ,SAASvH,EAAQ+G,MAAR,OAA0BQ,SAASvH,EAAQ+G,MAAR,SACzC/G,EAAQ+G,MAAR,MACA/G,EAAQ+G,MAAR,Y,kBASAF,G,8KAWWzB,G,0EACZC,EAAOD,GAAW,KAEpBhD,OAAOiC,KAAKgB,GAAMrD,OAAS,G,yCACvB,CACN7B,GAAIkF,EAAKG,KAAO,GAChB7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxB8G,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtCG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0BR,EAAKO,OAASP,EAAKO,MAAL,WAA4B,IACzEkB,aAAczB,EAAK0B,OAAS1B,EAAK0B,MAAL,QAC5BC,WAAY3B,EAAK0B,OAAS1B,EAAK0B,MAAL,MAC1BrG,IAAK2E,EAAK3E,IACV6H,UAAWlD,EAAKkD,UAChBC,QAASnD,EAAKmD,QACdC,YAAapD,EAAKoD,YAClBxB,KAAM5B,EAAK4B,KACX1B,SAAUF,EAAKE,SACf2B,QAAS7B,EAAK6B,QACdC,KAAM9B,EAAK8B,KACXC,KAAM/B,EAAK+B,KACXC,MAAOhC,EAAKgC,MACZC,MAAOjC,EAAKiC,MACZnD,KAAMkB,EAAKlB,KACXxB,SAAU0C,EAAKrF,QACf0F,aAAcL,EAAI,QAAYrD,OAC9B+E,MACCQ,SAASlC,EAAK0B,MAAL,OAAuBQ,SAASlC,EAAK0B,MAAL,SACtC1B,EAAK0B,MAAL,MACA1B,EAAK0B,MAAL,QACF2B,MACDrD,EAAKqD,OACLrD,EAAKqD,MAAM1G,OAAS,GACpBqD,EAAKqD,MAAMzI,KAAI,SAAC0I,GACf,MAAO,CACNxI,GAAIwI,EAAInD,KAAO,GACf7G,KAAMgK,EAAIhK,MAAQgK,EAAIhK,KACtBiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8C,EAAIC,UAClCpC,MAAOmC,EAAInC,MACXE,MAAOiC,EAAIjC,MACXmC,OAAQF,EAAIE,OACZC,IAAKH,EAAIG,IACTC,QAASJ,EAAII,aAGhB,K,gCAIU1D,G,wLAqBiBD,G,gFACxBC,EAAOD,GAAWA,EAAQC,KAAOD,EAAQC,KAAO,GAEtDT,QAAQC,IAAI,yBAAyBO,GAEjCyB,EACHxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACC,GACT,MAAO,CACNC,GAAID,EAAKsF,KAAO,GAChBwD,MAAO9I,EAAK+I,OAAS,GACrBtK,KAAMuB,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,KAC7CQ,IAAKR,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,IAC5CgJ,OAAQhJ,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,Q,kBAS3C2G,G,4LAY2BzB,G,0FAC3BA,G,+LAU+BA,G,4EAE/BC,EAAOD,GAAWA,EAAQC,KAAOD,EAAQC,KAAO,I,yCAE9CA,G,gCAEI,I,oLAUcD,G,8EAClBC,EAAOD,EAAQC,MAAQ,G,kBACtBA,G,4LAYuBD,G,0FACzBA,G,gLAUaA,G,qEACjBA,E,yCACK,CACNjF,GAAIiF,EAAQI,KAAO,GACnBxC,IAAKoC,EAAQI,KAAO,GACpB2D,UAAW/D,EAAQ+D,WAAa,GAChCC,SAAUhE,EAAQgE,UAAY,GAC9BzK,KAAMyG,EAAQ+D,UAAY,IAAM/D,EAAQgE,SACxCC,QAASjE,EAAQiE,SAAW,GAC5BC,KAAMlE,EAAQkE,MAAQ,GACtBC,MAAOnE,EAAQmE,OAAS,GACxBC,MAAOpE,EAAQoE,OAAS,GACxBC,SAAUrE,EAAQqE,UAAY,GAC9BC,SAAUtE,EAAQsE,UAAY,GAC9BC,QAASvE,EAAQuE,SAAW,K,gCAGlBvE,G,4KAUIA,G,gFAGZyB,GAFExB,EAAOD,GAAW,IAGlBpD,OAAS,GACdqD,EAAKpF,KAAI,SAACD,GACT,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9BiL,KAAM5J,EAAQ4J,KACdC,aAAc7J,EAAQ6J,aACtBC,aAAc9J,EAAQ8J,aACtB9C,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BgD,gBAAiB/J,EAAQ+J,gBACzBC,aAAchK,EAAQgK,aACtBC,qBAAsBjK,EAAQ+J,iBAAmB/J,EAAQ+J,gBAAgB/H,OACzEkI,kBAAmBlK,EAAQgK,cAAgBhK,EAAQ+J,gBAAgB/H,OACnEmI,WAAYnK,EAAQmK,WACpBC,OAAQpK,EAAQoK,OAChBC,aAAcrK,EAAQqK,aACtB9B,UAAWvI,EAAQuI,UACnBC,QAASxI,EAAQwI,QACjB8B,cAAetK,EAAQsK,cACvB7B,YAAazI,EAAQyI,YACrBxB,KAAMjH,EAAQiH,KACd1B,SAAUvF,EAAQuF,SAClB2B,QAASlH,EAAQkH,QACjBC,KAAMnH,EAAQmH,KACdC,KAAMpH,EAAQoH,KACdC,MAAOrH,EAAQqH,MACfC,MAAOtH,EAAQsH,MACfnD,KAAMnE,EAAQmE,S,kBAUV0C,G,yKAcMzB,G,gFACPC,EAAOD,EAAQC,MAAQ,GAEvBwB,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACsK,GACT,OAAO,eACHA,EADJ,CAECpK,GAAIoK,EAAI/E,KAAO,GACfxC,IAAKuH,EAAI/E,KAAO,GAChB7G,KAAM4L,EAAI5L,MAAQ4L,EAAI5L,KACtB8G,YAAa8E,EAAI9E,aAAe8E,EAAI9E,iB,kBAIhCoB,G,6KAUUzB,G,gFACZC,EAAOD,EAAQC,KAEdwB,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACsK,GACT,MAAO,CACNpK,GAAIoK,EAAI/E,KAAO,GACfxC,IAAKuH,EAAI/E,KAAO,GAChB7G,KAAM4L,EAAI5L,MAAQ4L,EAAI5L,KACtB8G,YAAa8E,EAAI9E,aAAe8E,EAAI9E,gB,kBAIhCoB,G,+KAYazB,G,0EACfC,EAAOD,IAEVhD,OAAOiC,KAAKgB,GAAMrD,OAAS,G,wDAEzBqD,E,CACHlF,GAAIkF,EAAKG,KAAO,GAChBxC,IAAKqC,EAAKG,KAAO,GACjB7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxB8G,YAAaJ,EAAKI,aAAeJ,EAAKI,e,gCAG5B,I,2KAUIL,G,gFACTC,EAAOD,EAAQC,MAAQ,GAEvBwB,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACqH,GACT,MAAO,CACNnH,GAAImH,EAAM9B,KAAO,GACjBxC,IAAKsE,EAAM9B,KAAO,GAClB7G,KAAM2I,EAAM3I,MAAQ2I,EAAM3I,KAC1B8G,YAAa6B,EAAM7B,aAAe6B,EAAM7B,YACxCG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyByB,EAAM1B,MAAQ0B,EAAM1B,MAAME,UAAY,Q,kBAIhEe,G,2LAUwBzB,G,qEAC3BA,EAAQoF,Q,yCACJ,CACNnJ,OAAQ,O,gCAGH,I,6KAWU+D,G,4EACXC,EAAOjD,OAAOiC,KAAKe,GAASpD,OAAS,EAAIoD,EAAU,M,wDAGpDC,E,CACHlF,GAAIkF,EAAKG,KAAO,GAChBxC,IAAKqC,EAAKG,KAAO,GACjB7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxB8G,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtC/E,IAAK2E,EAAK3E,KAAO2E,EAAK3E,IACtBkF,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBR,EAAKO,MAAQP,EAAKO,MAAMgD,UAAYvD,EAAKO,MAAMgD,SAAW,IACxFzI,GAAIkF,EAAKO,MAAQP,EAAKO,MAAMJ,IAAM,IAEnCkD,MACErD,EAAKqD,OACLrD,EAAKqD,MAAM1G,OAAS,GACpBqD,EAAKqD,MAAMzI,KAAI,SAAC0I,GACf,MAAO,CACNxI,GAAIwI,EAAInD,KAAO,GACf7G,KAAMgK,EAAIhK,MAAQgK,EAAIhK,KACtBiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8C,EAAI7C,WAClCU,MAAOmC,EAAInC,MACXE,MAAOiC,EAAIjC,MACXmC,OAAQF,EAAIE,OACZC,IAAKH,EAAIG,IACTC,QAASJ,EAAII,aAGhB,M,gCAII,I,2KAUQ3D,G,4EACTC,EAAOjD,OAAOiC,KAAKe,GAASpD,OAAS,EAAIoD,EAAU,M,wDAGpDC,E,CACHlF,GAAIkF,EAAKG,KAAO,GAChBxC,IAAKqC,EAAKG,KAAO,GACjB7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxB+B,IAAK2E,EAAK3E,KAAO2E,EAAK3E,IACtB+E,YAAaJ,EAAKI,aAAeJ,EAAKI,e,gCAIjC,I,8KASWL,G,gFACZC,EAAOD,EAAQC,MAAQ,GAEvBwB,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACwK,GACT,MAAO,CACNtK,GAAIsK,EAASjF,KAAO,GACpBxC,IAAKyH,EAASjF,KAAO,GACrB2D,UAAWsB,EAAStB,WAAa,GACjCC,SAAUqB,EAASrB,UAAY,GAC/BzK,KAAM8L,EAAStB,UAAY,IAAMsB,EAASrB,SAC1CC,QAASoB,EAASpB,SAAW,GAC7BC,KAAMmB,EAASnB,MAAQ,GACvBC,MAAOkB,EAASlB,OAAS,GACzBC,MAAOiB,EAASjB,OAAS,GACzBC,SAAUgB,EAAShB,UAAY,GAC/BC,SAAUe,EAASf,UAAY,GAC/BC,QAASc,EAASd,SAAW,O,kBAIzB9C,G,0KAWOzB,G,gFACRC,EAAOD,EAAQC,MAAQ,GAEvBwB,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAAC0G,GACT,OAAO,eACHA,M,kBAICE,G,2KAWQzB,G,gFAGTyB,GAFAxB,EAAOD,GAAW,IAGlBpD,OAAS,GACdqD,EAAKpF,KAAI,SAACyK,GACT,MAAO,CACNvK,GAAIuK,EAAMlF,KAAO,GACjBxC,IAAK0H,EAAMlF,KAAO,GAClB7G,KAAM+L,EAAM/L,MAAQ,GACpB6H,MAAOkE,EAAMlE,OAAS,GACtBV,UAAU,GAAD,OAAKD,EAAM,SAAX,OAAyB6E,EAAM5E,UAAY4E,EAAM5E,UAAY,Q,kBAKlEe,G,+KAUYzB,G,+EACbuF,EAAavF,EAAQuF,YAAc,KAEvBA,EAAW3I,OAAS,G,uBAC/B6E,EACL8D,EAAW3I,OAAS,GACpB2I,EAAW1K,KAAI,SAAC2K,GACf,MAAO,CACNzK,GAAIyK,EAAUpF,KAAO,GACrBxC,IAAK4H,EAAUpF,KAAO,GACtB7G,KAAMiM,EAAUjM,MAAQ,GACxB+I,MAAOkD,EAAUlD,MAAM1F,OAAS,EAAI4I,EAAUlD,MAAMzH,KAAI,SAAAC,GACvD,OAAO,eACHA,EADJ,CAECwI,MAAOxI,EAAKwI,MAAM1G,OAAS,EAAI9B,EAAKwI,MAAMzI,KAAI,SAAA0I,GAC7C,MAAO,CACN/C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8C,EAAI7C,UAAY6C,EAAI7C,UAAY,IAC9D3F,GAAIwI,EAAInD,QAEL,QAEF,O,kBAIDqB,G,gCAGD,I,4KAaSxB,G,8EACVwB,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAAC4K,GACT,MAAO,CACN1K,GAAI0K,EAAOrF,KAAO,GAClBxC,IAAK6H,EAAOrF,KAAO,GACnB7G,KAAMkM,EAAOlM,MAAQ,GACrBmM,eAAgBD,EAAOC,gBAAkB,GACzCzB,QAASwB,EAAOxB,SAAW,GAC3B0B,YAAaF,EAAOE,aAAe,GACnCC,YAAaH,EAAOG,aAAe,GACnC1B,KAAMuB,EAAOvB,MAAQ,GACrBlC,KAAMyD,EAAOzD,MAAQ,GACrB6D,OAAQJ,EAAOI,QAAU,O,kBAIrBpE,G,+KASYxB,G,8EACbwB,EAAgBzE,OAAOiC,KAAKgB,GAAMrD,OAAS,GAAKqD,E,kBAC/CwB,G,sLASmBzB,G,gFACpBC,EAAOD,EAAQC,MAAQ,GAEvBwB,EACLxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACyI,GACT,MAAO,CACNvI,GAAIuI,EAAMlD,KAAO,GACjB7G,KAAM+J,EAAM/J,MAAQ+J,EAAM/J,KAC1BiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB6C,EAAM5C,WACpCU,MAAOkC,EAAMlC,MACbE,MAAOgC,EAAMhC,MACbmC,OAAQH,EAAMG,OACdC,IAAKJ,EAAMI,IACXC,QAASL,EAAMK,Y,kBAIXlC,G,6KASUzB,G,gFAGXyB,GAFAxB,EAAOD,GAAW,IAGlBpD,OAAS,GACdqD,EAAKpF,KAAI,SAACoJ,GACT,MAAO,CACNlJ,GAAIkJ,EAAQ7D,KAAO,GACnB7G,KAAM0K,EAAQ1K,MAAQ0K,EAAQ1K,S,kBAI1BkI,G,mLAYgBxB,G,8EACjBwB,EAAgBxB,E,kBAEfwB,G,0KAUOzB,G,gFAGRyB,GAFAxB,EAAOD,GAAW,IAGlBpD,OAAS,GACdqD,EAAKpF,KAAI,SAACqJ,GACT,MAAO,CACNnJ,GAAImJ,EAAK9D,KAAO,GAChB7G,KAAM2K,EAAK3K,MAAQ2K,EAAK3K,S,kBAIpBkI,G,8KASWzB,G,0FACXA,G,+KAUYC,G,8EACbwB,EACJzE,OAAOiC,KAAKgB,GAAMrD,OAAS,GAA3BI,OAAA,IAAAA,CAAA,GACGiD,EADH,CAEAlF,GAAIkF,EAAKG,KAAOH,EAAKlF,IAAM,GAC3BxB,KAAM0G,EAAK1G,MAAQ,GACnB8G,YAAaJ,EAAKI,YAAYV,QAAQ,WAAY,KAAO,GACzD+B,aAAczB,EAAK0B,OAAS1B,EAAK0B,MAAL,QAC5BC,WAAY3B,EAAK0B,OAAS1B,EAAK0B,MAAL,MAC1BrG,IAAK2E,EAAK3E,IACVwK,eAAgB7F,EAAK6F,eACrBC,aAAc9F,EAAK8F,aACnBlE,KAAM5B,EAAK4B,KACXE,KAAM9B,EAAK8B,KACXE,MAAOhC,EAAKgC,MACZC,MAAOjC,EAAKiC,OAASlF,OAAOY,IAAIqC,EAAKiC,OAAOtF,OAAS,EAAI,CACxD7B,GAAIkF,EAAKiC,MAAMnH,GACfxB,KAAM0G,EAAKiC,MAAM3I,MAEd,GACJoI,MACCQ,SAASlC,EAAK0B,MAAL,OAAuBQ,SAASlC,EAAK0B,MAAL,SACtC1B,EAAK0B,MAAL,MACA1B,EAAK0B,MAAL,QACJG,QAAS7B,EAAK6B,QACd3B,SACEF,EAAKE,UACLF,EAAKE,SAASvD,OAAS,GACvBqD,EAAKE,SAAStF,KAAI,SAACqI,GAClB,MAAO,CACNnI,GAAImI,EAAI9C,IACR7G,KAAM2J,EAAI3J,UAGb0G,EAAKE,SACNpB,KAAMkB,EAAKlB,MAAQkB,EAAKlB,KAAKnC,OAAS,EAAIqD,EAAKlB,KAAO,GAEtDyB,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBR,EAAKO,MAAQP,EAAKO,MAAMgD,UAAYvD,EAAKO,MAAMgD,SAAW,IACxFzI,GAAIkF,EAAKO,MAAQP,EAAKO,MAAMJ,IAAM,IAEnCkD,MACErD,EAAKqD,OACLrD,EAAKqD,MAAM1G,OAAS,GACpBqD,EAAKqD,MAAMzI,KAAI,SAAC0I,GACf,MAAO,CACNxI,GAAIwI,EAAInD,KAAO,GACf7G,KAAMgK,EAAIhK,MAAQgK,EAAIhK,KACtBiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8C,EAAIC,UAClCpC,MAAOmC,EAAInC,MACXE,MAAOiC,EAAIjC,MACXmC,OAAQF,EAAIE,OACZC,IAAKH,EAAIG,IACTC,QAASJ,EAAII,aAGhB,GACAvB,UAAWxH,GAAQkH,SACnBlH,GAAQkH,QAAQlF,OAAS,EACtBhC,GAAQkH,QAAQ,GAAhB,OAA+BlH,GAAQkH,QAAQ,GAAhB,gBAC7B,EACLO,QAASzH,GAAQkH,SACjBlH,GAAQkH,QAAQlF,OAAS,EACzBhC,GAAQkH,QAAQ,GAAhB,OAA+BlH,GAAQkH,QAAQ,GAAhB,cAC7B,KAEJ,G,kBAEML,G,8KAcWxB,G,8EACZwB,EACJzE,OAAOiC,KAAKgB,GAAMrD,OAAS,GAAK,CAChC7B,GAAIkF,EAAKG,KAAO,GAChB7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxBiL,KAAMvE,EAAKuE,KACXC,aAAcxE,EAAKwE,aACnBC,aAAczE,EAAKyE,aACnBC,gBAAiB1E,EAAK0E,gBAAkB,GACxCC,aAAc3E,EAAK2E,cAAgB,GACnCC,qBAAsB5E,EAAK0E,iBAAmB1E,EAAK0E,gBAAgB/H,OACnEkI,kBAAmB7E,EAAK2E,cAAgB3E,EAAK0E,gBAAgB/H,OAC7DmI,WAAY9E,EAAK8E,WACjBC,OAAQ/E,EAAK+E,OACbC,aAAchF,EAAKgF,aACnB9B,UAAWlD,EAAKkD,UAChBC,QAASnD,EAAKmD,QACd8B,cAAejF,EAAKiF,cACpB7B,YAAapD,EAAKoD,YAClBxB,KAAM5B,EAAK4B,KACX1B,SAAUF,EAAKE,SACf2B,QAAS7B,EAAK6B,QACdC,KAAM9B,EAAK8B,KACXC,KAAM/B,EAAK+B,KACXC,MAAOhC,EAAKgC,MACZC,MAAOjC,EAAKiC,MACZnD,KAAMkB,EAAKlB,OAEZ,G,kBAEM0C,G,mLAWgBxB,G,8EACjBwB,EACJzE,OAAOiC,KAAKgB,GAAMrD,OAAS,GAA3BI,OAAA,IAAAA,CAAA,GACGiD,EADH,CAEAlF,GAAIkF,EAAKG,KAAOH,EAAKlF,IAAM,GAC3BxB,KAAM0G,EAAK1G,MAAQ,GACnB8G,YAAaJ,EAAKI,YAAYV,QAAQ,WAAY,KAAO,GACzD+B,aAAczB,EAAK0B,OAAS1B,EAAK0B,MAAL,QAC5BC,WAAY3B,EAAK0B,OAAS1B,EAAK0B,MAAL,MAC1BrG,IAAK2E,EAAK3E,IACVuG,KAAM5B,EAAK4B,KACXE,KAAM9B,EAAK8B,KACXE,MAAOhC,EAAKgC,MACZH,QAAS7B,EAAK6B,QACdH,MACCQ,SAASlC,EAAK0B,MAAL,OAAuBQ,SAASlC,EAAK0B,MAAL,SACtC1B,EAAK0B,MAAL,MACA1B,EAAK0B,MAAL,QACJxB,SACEF,EAAKE,UACLF,EAAKE,SAASvD,OAAS,GACvBqD,EAAKE,SAAStF,KAAI,SAACqI,GAClB,MAAO,CACNnI,GAAImI,EAAI9C,IACR7G,KAAM2J,EAAI3J,KACViH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyByC,EAAI1C,MAAQ0C,EAAI1C,MAAMgD,UAAYN,EAAI1C,MAAMgD,SAAW,SAIxFvD,EAAKE,SACN+B,MACCjC,EAAKiC,OACJlF,OAAOiC,KAAKgB,EAAKiC,OAAOtF,OAAS,EAAI,CACpC7B,GAAIkF,EAAKiC,MAAM9B,IACf7G,KAAM0G,EAAKiC,MAAM3I,KACjBiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBR,EAAKiC,MAAM1B,MAAQP,EAAKiC,MAAM1B,MAAMgD,UAAYvD,EAAKiC,MAAM1B,MAAMgD,SAAW,KAE3GvD,EAAKiC,MACP8D,gBAAiB/F,EAAK+F,iBACrBhJ,OAAOiC,KAAKgB,EAAK+F,iBAAiBpJ,OAAS,EAAI,CAC9C7B,GAAIkF,EAAK+F,gBAAgB5F,IACzB7G,KAAM0G,EAAK+F,gBAAgBzM,KAC3BiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBR,EAAK+F,gBAAgBxF,MAAQP,EAAK+F,gBAAgBxF,MAAMgD,UAAYvD,EAAK+F,gBAAgBxF,MAAMgD,SAAW,KAEzIvD,EAAK+F,gBACNjH,KAAMkB,EAAKlB,MAAQkB,EAAKlB,KAAKnC,OAAS,EAAIqD,EAAKlB,KAAO,GACtD+G,eAAgB7F,EAAK6F,eACrBtF,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBR,EAAKO,MAAQP,EAAKO,MAAMgD,UAAYvD,EAAKO,MAAMgD,SAAW,IACxFzI,GAAIkF,EAAKO,MAAQP,EAAKO,MAAMJ,IAAM,IAEnCkD,MACErD,EAAKqD,OACLrD,EAAKqD,MAAM1G,OAAS,GACpBqD,EAAKqD,MAAMzI,KAAI,SAAC0I,GACf,MAAO,CACNxI,GAAIwI,EAAInD,KAAO,GACf7G,KAAMgK,EAAIhK,MAAQgK,EAAIhK,KACtBiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8C,EAAIC,UAClCpC,MAAOmC,EAAInC,MACXE,MAAOiC,EAAIjC,MACXmC,OAAQF,EAAIE,OACZC,IAAKH,EAAIG,IACTC,QAASJ,EAAII,aAGhB,MAEF,G,kBAEMlC,G,+KASYxB,G,0EACbwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACR3H,GAAIkF,EAAKyC,QAAQtC,KAAOH,EAAKyC,QAAQ3H,IAAM,GAC3CxB,KAAM0G,EAAKyC,QAAQnJ,MAAQ,GAC3B8G,YAAaJ,EAAKyC,QAAQrC,YAAYV,QAAQ,WAAY,KAAO,GACjE+B,aAAczB,EAAKyC,QAAQf,OAAS1B,EAAKyC,QAAQf,MAAb,QACpCC,WAAY3B,EAAKyC,QAAQf,OAAS1B,EAAKyC,QAAQf,MAAb,MAClCrG,IAAK2E,EAAKyC,QAAQpH,IAClBwK,eAAgB7F,EAAKyC,QAAQoD,eAC7BC,aAAc9F,EAAKyC,QAAQqD,aAC3BlE,KAAM5B,EAAKyC,QAAQb,KACnBE,KAAM9B,EAAKyC,QAAQX,KACnBE,MAAOhC,EAAKyC,QAAQT,MACpBC,MAAOjC,EAAKyC,QAAQR,OAASlF,OAAOY,IAAIqC,EAAKyC,QAAQR,OAAOtF,OAAS,EAAI,CACxE7B,GAAIkF,EAAKyC,QAAQR,MAAMnH,GACvBxB,KAAM0G,EAAKyC,QAAQR,MAAM3I,MAEtB,GACJoI,MACCQ,SAASlC,EAAKyC,QAAQf,MAAb,OAA+BQ,SAASlC,EAAKyC,QAAQf,MAAb,SAC9C1B,EAAKyC,QAAQf,MAAb,MACA1B,EAAKyC,QAAQf,MAAb,QACJG,QAAS7B,EAAKyC,QAAQZ,QACtB3B,SACEF,EAAKyC,QAAQvC,UACbF,EAAKyC,QAAQvC,SAASvD,OAAS,GAC/BqD,EAAKyC,QAAQvC,SAAStF,KAAI,SAACqI,GAC1B,MAAO,CACNnI,GAAImI,EAAI9C,IACR7G,KAAM2J,EAAI3J,UAGb0G,EAAKyC,QAAQvC,SACdpB,KAAMkB,EAAKyC,QAAQ3D,MAAQkB,EAAKyC,QAAQ3D,KAAKnC,OAAS,EAAIqD,EAAKyC,QAAQ3D,KAAO,GAE9EyB,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBR,EAAKyC,QAAQlC,MAAQP,EAAKyC,QAAQlC,MAAMgD,UAAYvD,EAAKyC,QAAQlC,MAAMgD,SAAW,IAChHzI,GAAIkF,EAAKyC,QAAQlC,MAAQP,EAAKyC,QAAQlC,MAAMJ,IAAM,IAEnDkD,MACErD,EAAKyC,QAAQY,OACbrD,EAAKyC,QAAQY,MAAM1G,OAAS,GAC5BqD,EAAKyC,QAAQY,MAAMzI,KAAI,SAAC0I,GACvB,MAAO,CACNxI,GAAIwI,EAAInD,KAAO,GACf7G,KAAMgK,EAAIhK,MAAQgK,EAAIhK,KACtBiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8C,EAAIC,UAClCpC,MAAOmC,EAAInC,MACXE,MAAOiC,EAAIjC,MACXmC,OAAQF,EAAIE,OACZC,IAAKH,EAAIG,IACTC,QAASJ,EAAII,aAGhB,GACA1H,OAAQ,Q,gCAKJwF,G,iLAUcxB,G,0EACfwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,wLAUqBxB,G,0EACtBwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,2KASQxB,G,0EACTwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,4KASSxB,G,0EACVwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,6KASUxB,G,0EACXwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,gLASaxB,G,0EACdwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,gLASaxB,G,0EACdwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,8KASWxB,G,0EACZwB,EAAgBxB,GAElBA,IAAQA,EAAKyC,Q,wDAEZzC,EAAKyC,Q,CACRzG,OAAQ,Q,gCAIHwF,G,+KASYxB,G,0EACbwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,8KAWWxB,G,0EACZwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,8KAWWxB,G,0EACZwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,4KAYSxB,G,8EACVwB,EAAgBxB,E,kBACfwB,G,mLAUgBxB,G,0EACjBwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,wDAEZnF,E,CACHhE,OAAQ,Q,gCAIHwF,G,wLASqBxB,G,0EACtBwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,4KASSxB,G,0EACVwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,wKAWKxB,G,0EACNwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,6KASUxB,G,0EACXwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,iLAUcxB,G,0EACfwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,4KAQSxB,G,0EACVwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,yKAWOxB,G,0EACTwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAGHwF,G,4KAYUxB,G,0EACVwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAGHwF,G,0KAaQxB,G,0EACVwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAGHwF,G,0KAWQxB,G,0EACRwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,wDAEZnF,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,yKASMxB,G,0EACPwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,wDAEZnF,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,0KAUOxB,G,0EACRwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,8KAQWxB,G,0EACZwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,6KAYUxB,G,0EACXwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,2KASQxB,G,0EACTwB,EAAgBxB,GAClBA,IAAQA,EAAKgG,S,wDAEZhG,EAAKgG,SAAS,G,CACjBhK,OAAQ,Q,gCAIHwF,G,2KASQxB,G,0EACTwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,wKAWKxB,G,0EACNwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,6KAUUxB,G,0EACXwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,6KASUxB,G,0EACXwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,gLAUaxB,G,0EACdwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,iLAUcxB,G,0EACfwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,6KAUUxB,G,0EACXwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,gLASaxB,G,0EACdwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,8KASWxB,G,0EACZwB,EAAgBxB,GAClBA,IAAQA,EAAKmF,Q,yCACT,CACNnJ,OAAQ,O,gCAIHwF,G,8KAWWzB,G,0EACZyB,EAAgBzB,GAElBA,EAAQC,K,wDAEPD,EAAQC,O,gCAINwB,G,oLAUiBxB,G,qEAEpBA,EAAI,Q,yCACA,CACNhE,OAAQ,O,gCAIHgE,G,uLASoBA,G,qEAEvBA,EAAI,Q,yCACA,CACNhE,OAAQ,O,gCAIHgE,G,uLAWoBD,G,0EACrByB,EAAgBzB,GAElBA,EAAQC,K,wDAEPD,EAAQC,O,gCAINwB,G,gLAkBaxB,G,8EAEdwB,EAAgB,CACrB1G,GAAIkF,EAAKlF,IAAMkF,EAAKG,KAAO,GAC3B7G,KAAM0G,EAAK1G,MAAQ0G,EAAK1G,KACxB8G,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtCC,aAAcL,EAAKK,cAAgB,EACnCS,KAAMd,EAAKc,KAAL,UAAeN,EAAM,SAArB,OAAmCR,EAAKc,MAAS,GACvD/H,KAAMiH,EAAKW,YAAYhE,OAAS,GAAKqD,EAAKW,YAAY,IAAMX,EAAKW,YAAY,GAAjB,KAA8B,eAAiB,iBAC3GtF,IAAK2E,EAAK3E,KAAO,GACjBsF,YACCX,EAAKW,YAAYhE,OAAS,GAAKqD,EAAKW,YAAY,IAAMX,EAAKW,YAAY,GAAjB,KACnDX,EAAKW,YAAY/F,KAAI,SAACiG,GACvB,MAAO,CACN/F,GAAI+F,EAAOV,KAAO,GAClB7G,KAAMuH,EAAOvH,MAAQuH,EAAOvH,KAC5B8G,YAAaS,EAAOT,aAAeS,EAAOT,YAC1CG,MAAOM,EAAON,MAAP,UAAkBC,EAAM,SAAxB,OAAsCK,EAAON,MAAMgC,QAAW,OAGrE,GACJhC,MAAO,CACNA,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBR,EAAKO,MAAQP,EAAKO,MAAMgD,UAAYvD,EAAKO,MAAMgD,SAAW,IACxFzI,GAAIkF,EAAKO,MAAQP,EAAKO,MAAMJ,IAAM,IAEnCkD,MACErD,EAAKqD,OACLrD,EAAKqD,MAAM1G,OAAS,GACpBqD,EAAKqD,MAAMzI,KAAI,SAAC0I,GACf,MAAO,CACNxI,GAAIwI,EAAInD,KAAO,GACf7G,KAAMgK,EAAIhK,MAAQgK,EAAIhK,KACtBiH,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB8C,EAAIf,QAClCpB,MAAOmC,EAAInC,MACXE,MAAOiC,EAAIjC,MACXmC,OAAQF,EAAIE,OACZC,IAAKH,EAAIG,IACTC,QAASJ,EAAII,aAGhB,I,kBAGKlC,G,6KAQUxB,G,8EAGXC,E,eACFD,G,kBAGGC,G,mLAYgBD,G,sEAGpBA,GAAQA,EAAKrD,OAAS,G,sDAEvBX,OAAQ,MACLgE,EAAK,K,gCAGE,I,2KAUGD,G,0FAGRA,G,6KAUWA,G,0FAGZA,G,6KAaWC,G,4EAEXiG,EAAQjG,EAAKiG,QAAS,G,yCAEpB,CACNnL,GAAImL,EAAMnL,IAAMmL,EAAM9F,IACtB+F,gBAAiBD,EAAMC,gBACvB5M,KAAM2M,EAAMC,gBAAN,UAAqC,IAAMD,EAAMC,gBAAN,SACjDlC,QAASiC,EAAMC,gBAAN,QACTjC,KAAMgC,EAAMC,gBAAN,KACNC,QAASF,EAAMC,gBAAN,QACT/B,MAAO8B,EAAMC,gBAAN,MACPhC,MAAO+B,EAAMC,gBAAN,MACPlK,OAAQiK,EAAMjK,OACdoK,MAAOH,EAAMI,WACbC,eAAgBL,EAAMI,WACtBE,eAAgBN,EAAMM,eACtBC,aAAcP,EAAMM,gBAAkBN,EAAMM,eAAN,KACtCE,uBAAwBR,EAAMM,gBAAkBN,EAAMM,eAAN,eAChDG,oBAAqBT,EAAMM,gBAAkBN,EAAMM,eAAN,YAC7CjJ,SAAU2I,EAAM3I,UAAY2I,EAAM3I,SAASX,OAAS,EAAIsJ,EAAM3I,SAAS1C,KAAI,SAAAD,GAC1E,MAAO,CACNG,GAAIH,EAAQwF,KAAO,GACnB7G,KAAMqB,EAAQrB,MAAQqB,EAAQrB,KAC9B8G,YAAazF,EAAQyF,aAAezF,EAAQyF,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAA0B7F,EAAQ4F,OAAS5F,EAAQ4F,MAAR,WAA+B,IAC/EkB,aAAc9G,EAAQ+G,OAAS/G,EAAQ+G,MAAR,QAC/BC,WAAYhH,EAAQ+G,OAAS/G,EAAQ+G,MAAR,MAC7BrG,IAAKV,EAAQU,IACbuG,KAAMjH,EAAQiH,KACd1B,SAAUvF,EAAQuF,SAClB2B,QAASlH,EAAQkH,QACjBC,KAAMnH,EAAQmH,KACdC,KAAMpH,EAAQoH,KACdC,MAAOrH,EAAQqH,MACfC,MAAOtH,EAAQsH,MACfnD,KAAMnE,EAAQmE,KACd4C,MAAO/G,EAAQ+G,MACfS,UAAWxH,EAAQkH,SAClBlH,EAAQkH,QAAQlF,OAAS,EACxBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,gBAC7B,EACFO,QAASzH,EAAQkH,SAClBlH,EAAQkH,QAAQlF,OAAS,EACxBhC,EAAQkH,QAAQ,GAAhB,OAA+BlH,EAAQkH,QAAQ,GAAhB,cAC7B,MAED,GACL8E,aAAcV,EAAM9E,MACpByF,cAAeX,EAAK,QAAL,cACfY,cAAeZ,EAAK,QAAL,OACfa,QAASb,EAAK,QACdc,WAAYd,EAAK,SAAeA,EAAK,SAAL,IAA2B,K,gCAGjD,I,wKAUAjG,G,0FACL,CACNhE,OAAQ,O,wKAUGgE,G,qEACRA,EAAI,I,yCACA,CACNhE,OAAQ,O,iCAIH,G,uKASIgE,G,qEACPA,EAAI,I,yCACA,CACNhE,OAAQ,O,iCAIH,G,mLASgBgE,G,0FAChBA,G,wLASqBA,G,8EAItBC,E,eACFD,G,kBAGGC,G,qLASkBD,G,8EAInBwB,E,eACFxB,G,kBAGGwB,G,2LASwBxB,G,8EAIzBwB,EAAgB,CACrBxF,OAAQ,M,kBAGFwF,G,gLASaxB,G,qEAChBA,EAAI,Q,yCACA,CACNhE,OAAQ,O,gCAIHgE,G,sLASmBD,G,kFACpBC,EAAOD,EAAQC,MAAQ,GACvB2C,EAAS5C,EAAQuB,KAAKC,KAmB5BC,EAAgB,CACfxB,KAlBGwB,EACFxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACC,GACT,OAAO,eACHA,EADJ,CAECC,GAAID,EAAKC,IAAMD,EAAKsF,IACpB6G,eAAgBnM,EAAKmM,eACrBhL,OAAQnB,EAAKmB,OACboK,MAAOvL,EAAKwL,WACZ/I,SAAUzC,EAAKyC,SACfqJ,aAAc9L,EAAKiH,KACnB8E,cAAe/L,EAAI,QAAJ,cACfkM,WAAYlM,EAAKuK,SAAL,UAGf,GAIAzC,U,kBAGMnB,G,2KAUQzB,G,gFACTC,EAAOD,EAAQC,MAAQ,GAG7BT,QAAQC,IAAI,gBAAgBQ,GAExBwB,EACFxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACC,GACT,MAAO,CACLC,GAAID,EAAKC,IAAMD,EAAKsF,IACpB+F,gBAAiBrL,EAAKmM,eACtB1N,KAAMuB,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,WAAqCrL,EAAKqL,gBAAL,UAAoC,IACtGrL,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,UAAoCrL,EAAKqL,gBAAL,SAC7DlC,QAASnJ,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,SAAmCrL,EAAKqL,gBAAL,QACpEjC,KAAMpJ,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,MAAgCrL,EAAKqL,gBAAL,KAC9DlK,OAAQnB,EAAKmB,OACboK,MAAOvL,EAAKwL,WACZ/I,SAAUzC,EAAKyC,SACfqJ,aAAc9L,EAAKsG,MACnByF,cAAe/L,EAAI,SAAeA,EAAI,QAAJ,cAClCgM,cAAehM,EAAI,SAAeA,EAAI,QAAJ,OAClCiM,QAASjM,EAAI,QACbkM,WAAYlM,EAAI,SAAeA,EAAI,SAAJ,IAA0B,QAI7D,G,kBAOM2G,G,sLAUoBzB,G,gFACpBC,EAAOD,EAAQkH,OAASlH,EAAQkH,OAAOjH,KAAO,GAGhDwB,EACFxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACC,GACT,MAAO,CACNC,GAAID,EAAKC,IAAMD,EAAKsF,IACpB+F,gBAAiBrL,EAAKmM,eACtB1N,KAAMuB,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,WAAqCrL,EAAKqL,gBAAL,UAAoC,IACtGrL,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,UAAoCrL,EAAKqL,gBAAL,SAC7DlC,QAASnJ,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,SAAmCrL,EAAKqL,gBAAL,QACpEjC,KAAMpJ,EAAKqL,iBAAmBrL,EAAKqL,gBAAL,MAAgCrL,EAAKqL,gBAAL,KAC9DlK,OAAQnB,EAAKmB,OACboK,MAAOvL,EAAKwL,WACZ/I,SAAUzC,EAAKyC,SACfqJ,aAAc9L,EAAKsG,MACnByF,cAAe/L,EAAI,SAAeA,EAAI,QAAJ,cAClCgM,cAAehM,EAAI,SAAeA,EAAI,QAAJ,OAClCiM,QAASjM,EAAI,QACbkM,WAAYlM,EAAI,SAAeA,EAAI,SAAJ,IAA0B,QAI5D,G,kBAOM2G,G,mLAUexB,G,gFAEnBkH,EAAgBC,EAAQ3G,EAAM,QAAd,kBAEdgB,EACJxB,EAAKrD,OAAS,GACdqD,EAAKpF,KAAI,SAACC,GACT,OAAO,eACHqM,EADJ,CAECpM,GAAID,EAAKC,GACTkB,OAAQnB,EAAKmB,OACboK,MAAOvL,EAAKuL,MACZgB,WAAYvM,EAAKuM,WACjBT,aAAc9L,EAAK8L,mBAGtB,G,kBAEMnF,G,yKAUMxB,G,gFACPqH,EAAerH,EAAKqC,OACR1F,OAAS,G,yCACnB0K,G,cAGFhF,EAAQgF,EAAazM,KAAI,SAACC,GAC/B,MAAO,CACNvB,KAAMuB,EAAKvB,MAAQ,GACnBgO,OAAQzM,EAAKoG,MAAQ,O,kBAGhBoB,G,yKASMrC,G,0FACN,CACNiB,KAAMjB,EAAKiB,O,sKAUFjB,G,8EACJuH,EAAMvH,EAAKqD,OAASrD,EAAKqD,MAAM1G,OAAS,EAAlC,UAAyC6D,EAAM,SAA/C,OAA6DR,EAAKqD,MAAM,GAAX,UAA8B,G,kBAChG,CACNkE,MACAC,OAAQxH,EAAKwH,S,yKAUDxH,G,0FACN,CACNiB,KAAMjB,EAAKiB,O,0KAUEjB,G,gFACRyH,EAAezH,EAAKqC,OACR1F,OAAS,G,yCACnB,I,cAGF0F,EAAQoF,EAAa7M,KAAI,SAACC,GAC/B,MAAO,CACNoG,KAAMpG,EAAKvB,MAAQuB,EAAKoG,KACxBuG,OAAQ3M,EAAK2M,W,kBAIRnF,G,wKASKrC,G,gFACN0H,EAAc1H,EAAKqC,OACR1F,OAAS,G,yCAClB+K,G,cAGFC,EAASD,EAAY9M,KAAI,SAACC,GAC/B,MAAO,CACN2M,OAAQ3M,EAAK2M,OACbD,IAAI,GAAD,OAAK/G,EAAM,SAAX,OAAyB3F,EAAKwI,MAAM,GAAX,Y,kBAGvBsE,G,6KASU3H,G,gFACX4H,EAAmB5H,EAAKqC,OACR1F,OAAS,G,yCACvBiL,G,cAGFD,EAASC,EAAiBhN,KAAI,SAACC,GACpC,MAAO,CACN2M,OAAQ3M,EAAK2M,OACbD,IAAI,GAAD,OAAK/G,EAAM,SAAX,OAAyB3F,EAAKwI,MAAM,GAAX,Y,kBAGvBsE,G,yKASM3H,G,0FACN,CACN1G,KAAM0G,EAAK1G,KACX2H,KAAMjB,EAAKiB,O,uKAUDjB,G,gFACL6H,EAAgB7H,EAAKqC,OACR1F,OAAS,G,yCACpBkL,G,cAGFxF,EAAQwF,EAAcjN,KAAI,SAACC,GAChC,MAAO,CACN2M,OAAQ3M,EAAK2M,OACblO,KAAMuB,EAAKvB,MAAQuB,EAAKoG,S,kBAGnBoB,G,yKASMrC,G,gFACP8H,EAAe9H,EAAKqC,OACR1F,OAAS,G,yCACnBmL,G,cAGFzF,EAAQyF,EAAalN,KAAI,SAACC,GAC/B,MAAO,CACN2M,OAAQ3M,EAAK2M,OACblO,KAAMuB,EAAKvB,MAAQuB,EAAKoG,S,kBAGnBoB,G,uGAYF,W,wDAAWrC,G,gFACV+H,EAAe/H,EAAKqC,OACR1F,OAAS,G,yCACnBoL,G,cAGF1F,EAAQ0F,EAAanN,KAAI,SAACC,GAC/B,MAAO,CACN2M,OAAQ3M,EAAK2M,OACblO,KAAMuB,EAAKvB,MAAQuB,EAAKoG,S,kBAGnBoB,G,mLAWgBrC,G,0FAChBA,G,2KAUQA,G,qEACXA,IAAQA,EAAK,G,sDAEfhE,OAAQ,MACLgE,EAAK,K,gCAGH,I,0GDh+FMgI,G,WA3Eb,aAAe,oBACbC,KAAKzM,QAAU,G,6FAaHX,G,sGAAMqN,E,+BAAS,OAAQ1M,E,+BAAU,GACzC2M,EAAMC,EAAO5H,EAAO6H,QAAQxN,GAIhCoN,KAAKzM,QAAL,eACKyM,KAAKzM,QADV,CAEEF,OAAQ6M,EAAI7M,OACZgN,YAAa,UACb7M,QAAS,IAAI8M,QAAJ,eACQ,SAAXL,GAAqB,CACvB,eAAgB,oBAFX,GAKH1M,EAAQC,SAAR,eACCD,EAAQC,YAIA,SAAXyM,EAAoB,CACtB3M,KAAqB,QAAf4M,EAAI7M,OAAmBK,KAAKC,UAAUJ,EAAQD,MAAQ,MAC1D,CACAA,KAAqB,QAAf4M,EAAI7M,OAAmBE,EAAQD,KAAO,OAM5CF,EAAM4D,GAAckJ,EAAI9M,IAAKG,EAAQ0D,YAC3CK,QAAQC,IAAI,MAAM2I,EAAI9M,KACtBkE,QAAQC,IAAI,iBAAiBnE,GAGzBmF,EAAM,O,mBAKQgI,MAAMhI,EAAOiI,QAAUpN,EAAK4M,KAAKzM,S,cAA7CO,E,QAEIC,QAAU,KAAOD,EAAIC,OAAS,K,kCACVD,EAAG,O,WACA,WADzB2M,E,QACc1M,O,uBACV0M,EAAcC,M,yBAGI7I,GAAUjF,GAAM6N,G,eAAtClH,E,yBACGA,G,yBAEWzF,EAAImM,K,kNEtDxBU,GAAY,IAAIZ,GAEhBa,GAAmB,SAACvO,EAAeC,GACvC,OAAQA,EAAOxB,MACb,IAAK,aACH,OAAO,eACFuB,EADL,CAEEwO,WAAW,EACXH,MAAO,CACLvP,SAAS,EACTuP,MAAO,IAETI,MAAM,IAEV,IAAK,gBACH,OAAO,eACFzO,EADL,CAEEwO,WAAW,EACX9I,KAAMzF,EAAOiC,QACbuM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFzO,EADL,CAEEwO,WAAW,EACXH,MAAO,CACLvP,SAAS,EACTuP,MAAOpO,EAAOiC,QACduM,MAAM,KAGZ,QACE,MAAM,IAAIC,QA+CDC,GA3CE,WAMH,IALZC,EAKW,uDALkB,GAC7BC,EAIW,uCAHXtO,EAGW,uCAFXW,EAEW,uCADX0M,EACW,uCACL/M,EAAuB,CAC3B2N,WAAW,EACXH,MAAO,CACLvP,SAAS,EACTuP,MAAO,IAET3I,KAAMmJ,EACNJ,MAAM,GARG,EAUeK,qBAAWP,GAAkB1N,GAV5C,mBAUJb,EAVI,KAUG+O,EAVH,KAkCX,OAtBAC,qBAAU,WACR,IAAIC,GAAY,EAgBhB,OAfe,uCAAG,4BAAAC,EAAA,6DAChBH,EAAS,CAAEtQ,KAAM,eADD,kBAIG6P,GAAUa,QAAQ5O,EAAMqN,EAAQ1M,GAJnC,OAIVwE,EAJU,OAKTuJ,GACHF,EAAS,CAAEtQ,KAAM,gBAAiByD,QAASwD,IAN/B,gDASTuJ,GACHF,EAAS,CAAEtQ,KAAM,gBAAiByD,QAAQ,EAAD,KAV7B,yDAAH,oDAcfkN,GACO,WACLH,GAAY,KAEbL,GAEI5O,GC9EHsO,GAAY,IAAIZ,GAEhBa,GAAmB,SAACvO,EAAeC,GACvC,OAAQA,EAAOxB,MACb,IAAK,aACH,OAAO,eACFuB,EADL,CAEEwO,WAAW,EACXH,MAAO,CACLvP,SAAS,EACTuP,MAAO,IAETI,MAAM,IAEV,IAAK,gBACH,OAAO,eACFzO,EADL,CAEEwO,WAAW,EACX9I,KAAMzF,EAAOiC,QACbuM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFzO,EADL,CAEEwO,WAAW,EACXH,MAAO,CACLvP,SAAS,EACTuP,MAAOpO,EAAOiC,SAEhBuM,MAAM,IAEV,QACE,MAAM,IAAIC,QAsCDW,GAlCQ,SACrBR,EACAtO,EACAqN,GAEA,IAAM/M,EAAuB,CAC3B2N,WAAW,EACXH,MAAO,CACLvP,SAAS,EACTuP,MAAO,IAET3I,KAAMmJ,EACNJ,MAAM,GAR4B,EAWVK,qBAAWP,GAAkB1N,GAXnB,mBAW7Bb,EAX6B,KAWtB+O,EAXsB,KA2BpC,MAAO,CAAC/O,EAdQ,uCAAG,WAAOkB,GAAP,eAAAgO,EAAA,6DACjBH,EAAS,CAAEtQ,KAAM,eADA,kBAKE6P,GAAUa,QAAQ5O,EAAMqN,GAAU,OAAQ1M,GAL5C,cAKXwE,EALW,OAMfqJ,EAAS,CAAEtQ,KAAM,gBAAiByD,QAASwD,IAN5B,kBAORA,GAPQ,uCASfqJ,EAAS,CAAEtQ,KAAM,gBAAiByD,QAAQ,EAAD,KAT1B,kBAUR2M,GAVQ,yDAAH,wDC7DZS,GAAmBC,MAAaC,MAAM,CAC3CC,SAAUF,MACR/Q,MAAM,YACNF,SAAS,wBACToR,IAAI,EAAG,4CAETC,SAAUJ,MAAa/Q,MAAM,YAAYF,SAAS,0BAG7CsR,GAAgB,CACrBH,SAAU,GACVE,SAAU,ICpBIE,GD2BG,SAAC,GAAgB,qBACKR,GAAe,GAAI,SADzB,mBAC1BS,EAD0B,KACdC,EADc,KAG3BC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,SAAAhB,EAAA,sEACYa,EAAiB,CAChD9O,KAAM,CACLwO,SAAUQ,EAAOR,SACjBE,SAAUM,EAAON,YAJC,cAQpBO,EAAQC,eAAc,GARF,2CAAH,wDAcZC,EAA4B,SAACH,EAAQI,GAC1C,QAAKJ,EAAOR,UAAaQ,EAAON,UAAaU,IAM9C,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,yBAAKzR,MAAO,CACX0R,SAAU,QACVC,OAAQ,SAER,kBAAC7S,EAAD,CACCI,MAAM,WACNE,MAAOuR,EAAOR,SACdzQ,KAAK,WACLF,QAAU8R,EAAQnB,UAAYiB,EAAOjB,WAClCkB,GAAgBb,EAAWzB,MAAX,eAEnBtP,YAAc6R,EAAQnB,UAAYiB,EAAOjB,WACtCkB,GAAgBb,EAAWzB,MAAX,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAACzS,EAAD,CACCI,MAAM,WACNE,MAAOuR,EAAON,SACd3Q,KAAK,WACLF,QAAU8R,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBb,EAAWzB,MAAX,eACnBtP,YAAc6R,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBb,EAAWzB,MAAX,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAAC,IAAD,CACCpS,KAAK,UACL0S,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCrS,SAAUuR,EAA0BH,EAAQI,GAC5Ce,QAAST,EACTrR,MAAO,IALR,e,sREtE0B+R,IAAUC,KAAnCC,OAAmCD,KAA3BE,QAA2BF,KAAlBG,OAAkBH,KAAVD,OACzBK,GAAYC,KAAZD,QCtCOL,GDoQAO,cA5NQ,SAACC,GAAgB,IAAD,EACDC,oBAAS,GADR,mBAC5BC,EAD4B,KACjBC,EADiB,KASnC,OACI,kBAACX,GAAD,CACIY,MAAO,IACP3S,MAAO,CACH4S,UAAW,6BACXC,OAAQ,QAEZC,aAAW,EAACL,UAAWA,EAAWM,WAdvB,SAACN,GAEhBC,EAAaD,IAYiDhH,MAAM,SAEhE,kBAAC,KAAD,CAAMuH,YAAY,EAAMC,KAAK,UACzB,kBAAC,KAAKpT,KAAN,CAAWkE,IAAI,IAAImD,KAAM,kBAACgM,GAAA,EAAD,OACrB,kBAAC,KAAD,CAAMC,GAAG,UAAT,cAgBJ,kBAACf,GAAD,CACIrO,IAAI,OACJmD,KAAM,kBAACkM,GAAA,EAAD,MACN3L,MAAM,WAGN,kBAAC,KAAK5H,KAAN,CACIqH,KAAM,kBAACmM,GAAA,EAAD,MACNtP,IAAI,KACJ,kBAAC,KAAD,CAAMoP,GAAG,kBAAT,aAGJ,kBAAC,KAAKtT,KAAN,CACIqH,KAAM,kBAACoM,GAAA,EAAD,MACNvP,IAAI,QACJ,kBAAC,KAAD,CAAMoP,GAAG,iBAAT,WAGJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,IAAImD,KAAM,kBAACqM,GAAA,EAAD,OACrB,kBAAC,KAAD,CAAMJ,GAAG,cAAT,SAIJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,IAAImD,KAAM,kBAACsM,GAAA,EAAD,OACrB,kBAAC,KAAD,CAAML,GAAG,mBAAT,eAGJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,IAAImD,KAAM,kBAACuM,GAAA,EAAD,OACrB,kBAAC,KAAD,CAAMN,GAAG,gBAAT,WAKR,kBAACf,GAAD,CACIrO,IAAI,SACJmD,KAAM,kBAACkM,GAAA,EAAD,MACN3L,MAAM,YAGN,kBAAC,KAAK5H,KAAN,CACIqH,KAAM,kBAACmM,GAAA,EAAD,MACNtP,IAAI,OACJ,kBAAC,KAAD,CAAMoP,GAAG,gBAAT,gBAGJ,kBAAC,KAAKtT,KAAN,CACIqH,KAAM,kBAACsM,GAAA,EAAD,MACNzP,IAAI,WACJ,kBAAC,KAAD,CAAMoP,GAAG,yBAAT,oBAGJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,MAAMmD,KAAM,kBAACqM,GAAA,EAAD,OACvB,kBAAC,KAAD,CAAMJ,GAAG,oBAAT,iBAiBR,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,OAAOmD,KAAM,kBAACwM,GAAA,EAAD,OACxB,kBAAC,KAAD,CAAMP,GAAG,iBAAT,WAGJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,KAAKmD,KAAM,kBAACyM,GAAA,EAAD,OACtB,kBAAC,KAAD,CAAMR,GAAG,mBAAT,aAIJ,kBAACf,GAAD,CACIrO,IAAI,QACJmD,KAAM,kBAAC0M,GAAA,EAAD,MACNnM,MAAM,cAGN,kBAAC,KAAK5H,KAAN,CACIqH,KAAM,kBAAC2M,GAAA,EAAD,MACN9P,IAAI,MACJ,kBAAC,KAAD,CAAMoP,GAAG,gBAAT,UAKJ,kBAAC,KAAKtT,KAAN,CACIqH,KAAM,kBAAC4M,GAAA,EAAD,MACN/P,IAAI,MACJ,kBAAC,KAAD,CAAMoP,GAAG,kBAAT,aASR,kBAACf,GAAD,CAASrO,IAAI,OAAOmD,KAAM,kBAAC6M,GAAA,EAAD,MAA0BtM,MAAM,UACtD,kBAAC,KAAK5H,KAAN,CAAWkE,IAAI,MACX,kBAAC,KAAD,CAAMoP,GAAG,gBAAT,gBAEJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,SACX,kBAAC,KAAD,CAAMoP,GAAG,yBAAT,oBAIJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,MACX,kBAAC,KAAD,CAAMoP,GAAG,oBAAT,eAIR,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,KAAKmD,KAAM,kBAAC8M,GAAA,EAAD,OACtB,kBAAC,KAAD,CAAMb,GAAG,mBAAT,aAIJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,OAAOmD,KAAM,kBAAC+M,GAAA,EAAD,OACxB,kBAAC,KAAD,CAAMd,GAAG,gBAAT,UAIJ,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,MAAMmD,KAAM,kBAACgN,GAAA,EAAD,OACvB,kBAAC,KAAD,CAAMf,GAAG,cAAT,QAGJ,kBAACf,GAAD,CAASrO,IAAI,OAAOmD,KAAM,kBAACiN,GAAA,EAAD,MAAkB1M,MAAM,SAC9C,kBAAC,KAAK5H,KAAN,CAAWkE,IAAI,KACXmD,KAAM,kBAACkN,GAAA,EAAD,OAEN,kBAAC,KAAD,CAAMjB,GAAG,eAAT,gBAEJ,kBAAC,KAAKtT,KAAN,CACIqH,KAAM,kBAACmN,GAAA,EAAD,MACNtQ,IAAI,MACJ,kBAAC,KAAD,CAAMoP,GAAG,mBAAT,mBAKR,kBAAC,KAAKtT,KAAN,CAAWkE,IAAI,KACXmD,KAAM,kBAACoN,GAAA,EAAD,OAEN,kBAAC,KAAD,CAAMnB,GAAG,8BAAT,eAGJ,kBAACf,GAAD,CAASrO,IAAI,OAAOmD,KAAM,kBAACqN,GAAA,EAAD,MAAqB9M,MAAM,YACjD,kBAAC,KAAK5H,KAAN,CACIqH,KAAM,kBAACsN,GAAA,EAAD,MACNzQ,IAAI,MACJ,kBAAC,KAAD,CAAMoP,GAAG,4BAAT,qBAGJ,kBAAC,KAAKtT,KAAN,CACIqH,KAAM,kBAACuN,GAAA,EAAD,MACN1Q,IAAI,SACJ,kBAAC,KAAD,CAAMoP,GAAG,0BAAT,WAGJ,kBAAC,KAAKtT,KAAN,CACIqH,KAAM,kBAACwN,GAAA,EAAD,MACN3Q,IAAI,MACJ,kBAAC,KAAD,CAAMoP,GAAG,0BAAT,iB,UEpPTwB,GCQQ,SAAC,GAGV,IAAD,IAFTlN,aAES,MAFD,gBAEC,MADTmN,cACS,MADA,IACA,EACT,OACI,yBAAK5U,MAAO,CACR4U,OAAQA,EACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,CAAOvO,YAAaiB,EAAOgC,MAAOkL,KAAMK,2B,gFCE5C/C,GAAWD,KAAXC,OCrBOA,GD+BS,SAACM,GACrB,IAAM0C,EAAUC,eADsB,EAGyBnF,GAAe,GAAI,sBAH5C,mBAG/BoF,EAH+B,KAGNC,EAHM,KAYtC1F,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACjBwF,EAA4B,IADX,2CAAH,qDAIxBC,KACD,IAKH1P,QAAQC,IAAI,0BAA0BuP,GAGtC,IAAMG,EAAW,CACb9J,SAAU,kBAACgJ,GAAA,EAAD,MACVnI,MAAO,kBAAC0H,GAAA,EAAD,OAoHX,OACI,kBAAC,GAAD,CACI/T,MAAO,CACHuV,WAAY,OACZX,OAAQ,OACRC,QAAS,OACTC,eAAgB,gBAChBlC,UAAW,qKACX4C,OAAQ,GACRC,WAAY,WACZV,WAAY,SACZW,aAAc,WAGlB,wBAEI7D,QAAS,kBAAMoD,EAAQU,KAAK,WAC5B3V,MAAO,CACH4V,MAAO,UAAWC,UAAW,OAAQC,WAAY,QACjDC,OAAQ,YALhB,SAYA,yBACI/V,MAAO,CACHgW,YAAa,UAIjB,kBAAC,KAAD,CACIC,UAAU,aAEVC,QApJH,WAET,OAAIf,EAAwBjG,UACxB,yBAAKlP,MAAO,CACR4U,OAAO,OACPC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXoB,gBAAgB,OAChBC,QAAS,WAET,kBAAC,KAAD,OAIJjB,EAAwBhG,MAAQgG,EAAwB/O,OAAS+O,EAAwB/O,KAAK,GAE1F,yBACAxG,UAAU,gCACVI,MAAO,CACH4U,OAAO,OACPC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXoB,gBAAgB,OAChBC,QAAS,WAER,kBAAC,GAAD,CAAO3O,MAAM,2BAKtB,yBACAzH,MAAO,GAGPJ,UAAU,iCAEYuV,EAAwBhG,MACtCgG,EAAwB/O,KAAK,IAE7B,yBAAKpG,MAAO,IAGZ,yBAAKA,MAAO,CACR2S,MAAM,OACNkC,QAAQ,OACRC,eAAe,iBAEnB,uBACC9U,MAAO,CACFqW,UAAU,SACVF,gBAAgB,UAChBC,QAAQ,OACRzD,MAAM,MACN2D,SAAS,QAGbC,KAAK,MATP,aAYC,uBACA1E,QAAS,kBAAMoD,EAAQU,KAAK,wBAC5B3V,MAAO,CACFqW,UAAU,SACVF,gBAAgB,OAChBC,QAAQ,OACRzD,MAAM,MACN2D,SAAS,QAEbC,KAAK,MATN,aAiBRpB,EAAwBhG,MACtBgG,EAAwB/O,KAAK,IAC7B+O,EAAwB/O,KAAKpF,KAAI,SAACC,EAAK+B,GAE1C,OADI2C,QAAQC,IAAI,mBAAmB3E,GAEnC,yBACE4Q,QAAS,kBAAMoD,EAAQU,KAAR,iBAAuB1U,EAAK9B,KAA5B,YAAoC8B,EAAKC,MACxDtB,UAAYqB,EAAKuG,KAA0F,sCAAnF,kFACtB,0BAAM5H,UAAU,4CACb0V,EAASrU,EAAI,OAEhB,yBAAKrB,UAAU,4CACX,4BACKqB,EAAKmG,SAEV,4BACKnG,EAAKoG,MAEV,4BACA,kBAAC,KAAD,KACKpG,EAAKsG,gBAqDV,uBACIvH,MAAO,CACHgW,YAAa,QAEjBO,KAAK,MAAM3W,UAAU,6BAErB,kBAAC,KAAD,CACI4W,cAAe,IAEfC,SAAUC,KACV1M,MAAOmL,EAAwBhG,OAASgG,EAAwB/O,KAAO,EAAI+O,EAAwB/O,KAAKrD,OAASoS,EAAwB/O,KAAKrD,OAAS,GAEvJ,0BAAM/C,MAAO,CACT8V,WAAY,OACZa,WAAY,IACZ1W,aAAc,OACd2V,MAAO,UACPQ,QAAS,WACTL,OAAQ,UACRC,YAAa,SAEb,kBAACY,GAAA,EAAD,UAUhB,uBAAGL,KAAK,sBACJ,0BAAMvW,MAAO,CACT8V,WAAY,OACZa,WAAY,IACZ1W,aAAc,OACd2V,MAAO,UACPQ,QAAS,WACTL,OAAQ,YAER,kBAACc,GAAA,EAAD,MACA,0BAAM7W,MAAO,CACT8V,WAAY,SADhB,e,iDElNhBgB,GAAWC,KAAXD,OAEAE,GAAgBC,KAAhBD,YA0GFE,GAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAMSC,GAAyB,CAClCtE,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,oCAsPAwE,GAjOG,SAAC7E,GAAkB,IAAD,EACgBC,mBAAS,QADzB,mBACzB6E,EADyB,KACPC,EADO,OAEC9E,mBAAS,IAFV,mBAEzBlJ,EAFyB,KAEfiO,EAFe,OAGH/E,mBAAS,IAHN,mBAGzBjJ,EAHyB,KAGjBiO,EAHiB,OASoCzH,GAAe,GAAI,iCATvD,mBASzB0H,EATyB,KASDC,EATC,OAYAlF,mBAAS,IAZT,mBAYzBmF,EAZyB,KAYfC,EAZe,KAchClI,qBAAU,YACyB,uCAAG,4BAAAE,EAAA,sEACG8H,EAAkC,CAC/DpS,WAAY,CACRC,OAAQ,CACJsS,WAAYR,EACZS,eAAgBxO,EAChByO,aAAcxO,MANI,OACxByO,EADwB,OAW/BrS,QAAQC,IAAI,iBAAiBoS,GAG1BA,GAEFJ,EAAYI,GAhBkB,2CAAH,qDAuB5BC,KAEL,CAACZ,EAAiB/N,EAAUC,IAG9B5D,QAAQC,IAAI,yBAAyB6R,GAKrC,IA6BMvP,EAAO,IAAIgQ,KACXC,EAAYjB,GAAOhP,EAAKkQ,YAsC9B,OACI,yBAAKxY,UAAU,iCACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,qCAII,uDAMR,yBAAKA,UAAU,uDACf,kBAAC,KAAD,CACIyY,UAAU,EACVC,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAAS1S,aAAc,MAAO2V,MAAO,WACrD1V,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAxCC,SAACF,GACdkY,EAAoBlY,IAwCRC,aAAcgY,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IA3F/F,CACZ,CACIvZ,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,YACPM,KAAM,eAEV,CACIN,MAAO,aACPM,KAAM,gBAET,CACGN,MAAO,QACPM,KAAM,SAEV,CACIN,MAAO,OACPM,KAAM,SAuEcsB,KAAI,SAAC0X,GACT,OAAO,kBAAC5B,GAAD,CAAQ1X,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAM5D,yBAAKE,UAAU,gCACd6X,EAAuBvI,WACxB,oCACA,yBAAKlP,MAAO,CACR2R,OAAO,UACPkD,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEb,kBAAC,KAAD,CAAM6D,KAAK,YAKRnB,EAAuBtI,QAAUsI,EAAuBrR,KAAKrD,OAAS,IACnE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,kBAAqBiD,MAAOkL,KAAMK,0BAK5DyC,EAAuBtI,MAAQwI,GAAYA,EAAS5U,OAAS,GACzD,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAMuR,EAAUrB,SAAU,IACjC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CAAOC,QAASjC,EAChBkC,cAzGQ,SAAClN,GAEzB,MAAwB,QAArBgL,EACQhL,EAAQmN,KAAOnN,GAAOiC,OAAO,2BAA6BjC,EAEvC,SAArBgL,EACEhL,EAAQmN,KAAOnN,GAAOiC,OAAO,gBAAkBjC,EAE5B,UAArBgL,GACEhL,EAAQ6K,GAAO7K,EAAQ,GAE3BA,KAgGS,kBAAC,KAAD,CACIoN,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL6I,KAA2B,UAArBqP,EAA+Bc,EAAY,GACjD2B,KAAK,0BAQrB,yBAAKla,UAAU,kCACT,kBAACoX,GAAD,CACA+C,UAAU,EACVza,SAlHsB,SAACsS,GAClC,GAAGA,GAAKA,EAAE,GAAG,CACZ,IAAMtI,EAAY,IAAI4O,KAAKsB,KAAO5H,EAAE,IAAItD,UAClC/E,EAAU,IAAI2O,KAAKsB,KAAO5H,EAAE,IAAItD,UAEtCiJ,EAAajO,GAEbkO,EAAWjO,KA4GD8O,UAAU,EACV2B,OAAO,YCjXjBlD,GAAWC,KAAXD,OAEAE,GAAgBC,KAAhBD,YA0GFE,GAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAWSC,GAAyB,CAClCtE,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,oCA0PAwE,GAtOG,SAAC7E,GAAkB,IAAD,EACgBC,mBAAS,QADzB,mBACzB6E,EADyB,KACPC,EADO,OAE0CvH,GAAe,GAAI,sBAF7D,mBAEzBkK,EAFyB,KAEEC,EAFF,OAGE1H,mBAAS,IAHX,mBAGzB2H,EAHyB,KAGdC,EAHc,OAIC5H,mBAAS,IAJV,mBAIzBlJ,EAJyB,KAIfiO,EAJe,OAKH/E,mBAAS,IALN,mBAKzBjJ,EALyB,KAKjBiO,EALiB,KAQhC9H,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMsK,EAAqC,CAC9D5U,WAAY,CACRC,OAAQ,CACJsS,WAAYR,EACZS,eAAgBxO,EAChByO,aAAcxO,MAPH,OAEjB8Q,EAFiB,OAYxB1U,QAAQC,IAAI,gBAAgByU,GAGzBA,GAEFD,EAAaC,GAjBU,2CAAH,qDAqBrBC,KAEL,CAACjD,EAAiB/N,EAAUC,IAG9B5D,QAAQC,IAAI,4BAA4BqU,GAGxC,IAkCM/R,EAAO,IAAIgQ,KACXC,EAAYjB,GAAOhP,EAAKkQ,YA8C9B,OACI,yBAAKxY,UAAU,iCACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,sCAII,wDAKR,yBAAKA,UAAU,uDACf,kBAAC,KAAD,CACIyY,UAAU,EACVC,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAAS1S,aAAc,MAAO2V,MAAO,WACrD1V,YAAY,gBACZqY,iBAAiB,WACjBjZ,SArGC,SAACF,GACdkY,EAAoBlY,IAqGRC,aAAcgY,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAlG/F,CACZ,CACIvZ,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,YACPM,KAAM,eAEV,CACIN,MAAO,aACPM,KAAM,gBAET,CACGN,MAAO,QACPM,KAAM,SAEV,CACIN,MAAO,OACPM,KAAM,SA8EcsB,KAAI,SAAC0X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAM5D,yBAAKE,UAAU,gCACdqa,EAA0B/K,WAC3B,oCAEA,yBAAKlP,MAAO,CACR2R,OAAO,UACPkD,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEX,kBAAC,KAAD,CAAM6D,KAAK,YAIVqB,EAA0B9K,QAAU8K,EAA0B7T,KAAKrD,OAAS,IACzE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,oBAAuBiD,MAAOkL,KAAMK,0BAK9DiF,EAA0B9K,MAAQgL,GAAaA,EAAUpX,OAAS,GAC9D,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAM+T,EAAW7D,SAAU,IAClC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACAC,QAASjC,EACTkC,cAlHQ,SAAClN,GAEzB,MAAwB,QAArBgL,EACQhL,EAAQmN,KAAOnN,GAAOiC,OAAO,2BAA6BjC,EAEvC,SAArBgL,EACEhL,EAAQmN,KAAOnN,GAAOiC,OAAO,gBAAkBjC,EAE5B,UAArBgL,EACEH,GAAO7K,EAAQ,GAEnBA,KAyGS,kBAAC,KAAD,CAEIoN,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLsI,KAA2B,UAArBqP,EAA+Bc,EAAY,GACjDhZ,KAAK,QACL2a,KAAK,0BAQrB,yBAAKla,UAAU,kCACT,kBAAC,GAAD,CACEma,UAAU,EACVza,SAhHoB,SAACsS,GACjCjM,QAAQC,IAAI,YAAY4T,KAAO5H,EAAE,IAAItD,UACrC3I,QAAQC,IAAI,UAAU4T,KAAO5H,EAAE,IAAItD,UACnC,IAAMhF,EAAY,IAAI4O,KAAKsB,KAAO5H,EAAE,IAAItD,UAClC/E,EAAU,IAAI2O,KAAKsB,KAAO5H,EAAE,IAAItD,UAEtCiJ,EAAajO,GAEbkO,EAAWjO,IAyGCyQ,OAAQ,OACR3B,UAAU,O,UCpYtBvB,GAAWC,KAAXD,OASFyD,GAAe,CACjB,CACInb,MAAO,UACPM,KAAM,WAEV,CACIN,MAAO,SACPM,KAAM,UAEV,CACIN,MAAO,KACPM,KAAM,MACP,CACCN,MAAO,WACPM,KAAM,aAkCD8a,GAAS,CAClB,UACA,UACA,UACA,UACA,UACA,WAMSrD,GAAyB,CAClCtE,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,oCAoLA6H,GA9KQ,SAAClI,GAAkB,IAAD,EACPC,mBAAS+H,IADF,mBAC9B3Y,EAD8B,aAEW4Q,mBAAS,YAFpB,mBAE9B6E,EAF8B,KAEZC,EAFY,OAK+BvH,GAAe,GAAI,iCALlD,mBAK9B0H,EAL8B,KAKNC,EALM,OAQSlF,mBAAS,IARlB,mBAQ9BkI,EAR8B,KAQbC,EARa,KAUrCjL,qBAAU,YACyB,uCAAG,sBAAAE,EAAA,sEACS8H,EAAkC,CACrEpS,WAAY,CACRC,OAAQ,CACJsS,WAAYR,MAJM,yDAAH,qDAU5BY,KAEL,CAACZ,IAIH3H,qBAAU,WACH+H,EAAuBtI,MAAQsI,EAAuBrR,MACrDuU,EAAmBlD,EAAuBrR,QAEhD,CAACqR,IAIH9R,QAAQC,IAAI,yBAAyB6R,GACrC9R,QAAQC,IAAI,kBAAkB8U,GAG9B,IAIME,EAASC,KAAKC,GAAK,IA4BzB,OACI,yBAAKlb,UAAU,0CACX,yBAAKA,UAAU,iDACX,yBAAKA,UAAU,sDACX,2CAGA,4BACIyX,EADJ,gBAIJ,yBAAKzX,UAAU,4DACX,kBAAC,KAAD,CACIyY,UAAU,EACVC,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAAS1S,aAAc,MAAO2V,MAAO,WACrD1V,YAAY,cACZqY,iBAAiB,WACjBjZ,SAlDH,SAACF,GACdkY,EAAoBlY,IAkDJC,aAAc,UACdmZ,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAG3F/W,EAAQZ,KAAI,SAAC0X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAMhE,yBAAKE,UAAU,gCAEd6X,EAAuBvI,WACxB,oCACI,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXc,UAAU,QACVkF,aAAa,UAEjB,kBAAC,KAAD,CACAnC,KAAK,YAMJnB,EAAuBtI,QAAUsI,EAAuBrR,KAAKrD,OAAS,IACnE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,wBAAmB6Q,GAAoB5N,MAAOkL,KAAMK,0BAKzEyC,EAAuBtI,MAAQuL,GAAmBA,EAAgB3X,OAAS,GACxE,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAU0B,SAAU,IAChB,kBAAC,KAAD,CACIP,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAGhD,kBAAC,KAAD,CACI4Z,QAAQ,QACRlT,KAAMsU,EACNM,YAAa,IACbC,YAAa,GACbvb,KAAM2X,EACN6D,QAAS7D,EACTrP,KAAK,IACL9I,MAnGE,SAAC,GAUxB,IATHic,EASE,EATFA,GACAC,EAQE,EARFA,GACAC,EAOE,EAPFA,SACAJ,EAME,EANFA,YACAD,EAKE,EALFA,YAIAM,GACE,EAJFlc,MAIE,EAHFM,KAGE,EAFFsD,MAEE,EADFsY,SAEMC,EAASN,EAA4C,IAA7BD,EAAcC,GACtCO,EAAIL,EAAKI,EAASV,KAAKY,KAAKJ,EAAWT,GAAU,GACjDc,EAAIN,EAAKG,EAASV,KAAKc,KAAKN,EAAWT,GAG7C,OADAjV,QAAQC,IAAI,YAAY0V,GAEpB,0BAAME,EAAGA,EAAGE,EAAGA,EAAG5B,KAAK,QAAQxD,SAAU,GAAIsF,iBAAiB,WAA9D,WACmB,IAAVN,GAAeO,QAAQ,GADhC,OAmFoBC,WAAW,GAEVpB,GAAmBA,EAAgB1Z,KAAI,SAAC+a,EAAO/Y,GAAR,OACpC,kBAAC,KAAD,CACIe,IAAG,eAAUf,GACb8W,KAAMU,GAAOxX,EAAQwX,GAAOzX,iBASxD,yBAAKnD,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,wB,UCnPRlF,GAAWC,KAAXD,OAEAmF,GAAwBC,KAAxBD,OAQF1B,IAR0B2B,KAAhBC,YAQK,CACjB,CACI/c,MAAO,WACPM,KAAM,YAET,CACGN,MAAO,UACPM,KAAM,aA6KC0c,GAvKI,SAAC7J,GAEhB,IAAM0C,EAAUC,eAFiB,EAKH1C,mBAAS+H,IALN,mBAK1B3Y,EAL0B,aAMe4Q,mBAAS,YANxB,mBAM1B6E,EAN0B,KAMRC,EANQ,OAOqBvH,GAAe,GAAI,0BAPxC,mBAO1BsM,EAP0B,KAOTC,EAPS,KAUjC5M,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACU0M,EAA2B,CACxDhX,WAAY,CACRC,OAAQ,CACJgX,UAAWlF,EACXpW,KAAM,WALK,yDAAH,qDAWrBub,KAEL,CAACnF,IAUH,OAHA1R,QAAQC,IAAI,kBAAkByW,GAK1B,yBAAKzc,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,0CAGA,mCACWyX,EADX,uBAIJ,yBAAKzX,UAAU,uDACX,kBAAC,KAAD,CACIyY,UAAU,EACVC,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAAS1S,aAAc,MAAO2V,MAAO,WACrD1V,YAAY,gBACZqY,iBAAiB,WACjBjZ,SA3BC,SAACF,GACdkY,EAAoBlY,IA2BRC,aAAcgY,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAG3F/W,EAAQZ,KAAI,SAAC0X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAMhE,yBAAKE,UAAU,gCACdyc,EAAgBnN,WACb,oCACA,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEf,kBAAC,KAAD,CACA6D,KAAK,YAMAyD,EAAgBlN,QAAUkN,EAAgBjW,KAAKrD,OAAS,IACrD,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,wBAAmB6Q,GAAoB5N,MAAOkL,KAAMK,0BAI7EqH,EAAgBlN,MAAQkN,EAAgBjW,MAAQiW,EAAgBjW,KAAKrD,OAAS,GAC3E,oCACI,kBAAC,KAAD,CACI/C,MAAO,GAOP4Y,KAAK,QAEL6D,WAAYJ,EAAgBjW,KAC5BsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAQnB,kBAACqG,GAAD,CACIxU,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACG,uBAAGxG,KAAK,MACR,wBACK1E,QAAS,WACLoD,EAAQU,KAAR,iBAAuB0B,GAAoBA,EAAiBsB,cAA5D,YAA6EoE,EAAO9S,UAExFjK,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPoH,cAAc,YACdjH,OAAQ,YAEX1O,GAAI,UAAOgQ,EAAP,kBAOrB,kBAAC4E,GAAD,CACIxU,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,4BAUlC,yBAAKA,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,wBCOGiB,GAlLE,SAAC1K,GAAkB,IAAD,EAC+CxC,GAAe,GAAI,8BADlE,mBACMmN,GADN,aAEiDnN,GAAe,GAAI,8BAFpE,mBAEOoN,GAFP,aAG0BpN,GAAe,GAAI,8BAH7C,mBAGNqN,GAHM,WA2ClC,OApCA1N,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACnBwN,EAA6B,IADV,2CAAH,qDAIvBC,KACE,IAIH3N,qBAAU,YACiB,uCAAG,sBAAAE,EAAA,sEACtBsN,EAAsC,CAC3C3X,OAAQ,YAFmB,2CAAH,qDAK1B+X,KACC,IAIF5N,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACvBuN,EAAuC,CAC5C5X,OAAQ,aAFoB,2CAAH,qDAK3BgY,KACC,IAQD,yBAAK3d,UAAU,qBA0Hd,yBAAKA,UAAU,2BACd,kBAAC,GAAD,MACA,kBAAC,GAAD,OAED,yBAAKA,UAAU,4BAEf,kBAAC4d,GAAD,MACA,kBAAC,GAAD,Q,0FC9MGC,GAAY,SAAClL,GAAD,OACjB,kBAAC,KAAD,eACCmL,MAAO,GACP/K,MAAO,KACPiC,OAAQ,IACR+I,QAAQ,eACRxH,gBAAgB,UAChByH,gBAAgB,WACZrL,GAEJ,0BAAMiJ,EAAE,KAAKE,EAAE,MAAMmC,GAAG,IAAIC,GAAG,IAAInL,MAAM,KAAKiC,OAAO,OACrD,0BAAM4G,EAAE,KAAKE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACvD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,KAAKE,EAAE,MAAMmC,GAAG,IAAIC,GAAG,IAAInL,MAAM,KAAKiC,OAAO,OACrD,0BAAM4G,EAAE,KAAKE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACvD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,4BAAQuG,GAAG,OAAOC,GAAG,MAAM2C,EAAE,OAC7B,0BAAMvC,EAAE,KAAKE,EAAE,MAAMmC,GAAG,IAAIC,GAAG,IAAInL,MAAM,KAAKiC,OAAO,OACrD,0BAAM4G,EAAE,KAAKE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACvD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,4BAAQuG,GAAG,OAAOC,GAAG,MAAM2C,EAAE,OAC7B,0BAAMvC,EAAE,KAAKE,EAAE,MAAMmC,GAAG,IAAIC,GAAG,IAAInL,MAAM,KAAKiC,OAAO,OACrD,0BAAM4G,EAAE,KAAKE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACvD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,4BAAQuG,GAAG,OAAOC,GAAG,MAAM2C,EAAE,OAC7B,0BAAMvC,EAAE,KAAKE,EAAE,MAAMmC,GAAG,IAAIC,GAAG,IAAInL,MAAM,KAAKiC,OAAO,OACrD,0BAAM4G,EAAE,KAAKE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACvD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACxD,4BAAQuG,GAAG,OAAOC,GAAG,MAAM2C,EAAE,OAC7B,0BAAMvC,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,MAAME,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,MAAMiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,0BAAM4G,EAAE,OAAOE,EAAE,MAAMmC,GAAG,KAAKC,GAAG,KAAKnL,MAAM,KAAKiC,OAAO,OACzD,4BAAQuG,GAAG,KAAKC,GAAG,KAAK2C,EAAE,OAC1B,0BAAMvC,EAAE,KAAKE,EAAE,KAAKmC,GAAG,IAAIC,GAAG,IAAInL,MAAM,MAAMiC,OAAO,OACrD,4BAAQuG,GAAG,OAAOC,GAAG,KAAK2C,EAAE,OAC5B,0BAAMvC,EAAE,OAAOE,EAAE,KAAKmC,GAAG,IAAIC,GAAG,IAAInL,MAAM,MAAMiC,OAAO,MACvD,4BAAQuG,GAAG,KAAKC,GAAG,KAAK2C,EAAE,SAI5BN,GAAUO,SAAW,CACpBte,KAAM,eACNue,OAAQ,UACRzX,YAAa,sBACb0X,SAAU,aAGIT,UCrEPxB,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACGrd,IAAXqf,QA+BFC,GAAU,SAAC,GAAoD,IAAnDhY,EAAkD,EAAlDA,KAAMiY,EAA4C,EAA5CA,gBAAiBpJ,EAA2B,EAA3BA,QAA2B,EACnCzC,oBAAS,GAD0B,mBACzD8L,EADyD,KACjDC,EADiD,OAEP/L,oBAAS,GAFF,mBAEzDgM,EAFyD,KAEnCC,EAFmC,OAGP1O,GAAe,GAAI,kBAHZ,mBAGpC2O,GAHoC,WAOxDC,EAAoB,uCAAG,WAAOzd,GAAP,iBAAA0O,EAAA,sEACK8O,EAA0B,CACxDpZ,WAAY,CACVE,aAAc,CACZtE,SAJqB,QACrB0d,EADqB,SAUsB,OAA7BA,EAAkBxc,SA7Cbyc,EA8CJ,mBA7C5BC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,mBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA2CnCoJ,EAAmB5Y,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACzDmd,EAAgBW,IAbc,iCAnCH,IAACH,IAmCE,OAAH,sDAkB5B,OACI,oCACA,kBAAC,KAAD,CAMAjG,KAAK,QAEL6D,WAAYrW,GAER,kBAAC,GAAD,CACFqB,MAAM,GACLoV,UAAU,QACT9Y,IAAI,KACJ4O,MAAO,OAER/S,UAAU,uBAETkd,OAAQ,SAACnW,EAAMoW,GAAP,OACJ,oCACA,yBAAKpP,IAAKhH,EACPkL,QAAS,WACRoD,EAAQU,KAAR,0BAAgCoH,EAAO7b,KAEvCud,EAAyB1B,IAE7BlT,IAAI,YACJ7J,MAAO,CACH4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAa,MACf8V,OAAQ,iBAMhB,kBAAC,GAAD,CACCtO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEE,wBACElL,QAAS,WACPoD,EAAQU,KAAR,0BAAgCoH,EAAO7b,KAEvCud,EAAyB1B,IAE3B/c,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGT1O,OASjB,kBAAC,GAAD,CACWI,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAKZ,kBAAC,GAAD,CACE6H,MAAM,gBACNoV,UAAU,WACV9Y,IAAI,KACJnE,UAAU,yBAIrB,kBAAC,GAAD,CACW6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBAgCb,kBAAC,GAAD,CAEAA,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACV,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,uBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,SAOC,kBAAC,KAAD,CAEAC,UAAW,kBAAMT,EAAqB5B,EAAO7b,KAC7CuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAExD,0BACQ1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAeRf,GAA2B,kBAAC,GAAD,CAC5BH,gBAAiBA,EACjBmB,aAAcpZ,EACdmY,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MA6IClM,iBAlIM,SAAC,GAAsB,IAArB2C,EAAoB,EAApBA,QAAoB,EAKQlF,GAAe,GAAI,gBAL3B,mBAKlC0P,EALkC,KAKnBC,EALmB,OAMFlN,mBAAS,IANP,mBAMlCgN,EANkC,KAMrBnB,EANqB,KAQzC3O,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACK8P,EAAwB,CAChDpa,WAAY,CACVC,OAAQ,CACNoa,eAAe,EACfC,mBAAmB,EACnBC,SAAU,QACVC,eAAgB,SAPD,OACd9a,EADc,OAYpBqZ,EAAgBrZ,GAZI,2CAAH,qDAcnB+a,KACC,IAxBuC,MA4BgBvN,oBAAS,GA5BzB,mBA4BlCwN,EA5BkC,KA4BZC,EA5BY,KAoD1C,OACC,oCAIE,yBAAKrgB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,cAKA,kBAACue,GAAD,CACE+B,aAAa,EACbtgB,UAAU,qBACZM,YAAY,sBACZZ,SAAU,SAAAsS,GAAC,OA7BE,SAACxS,GACpB,GAAGqgB,EAAcrZ,KAAKrD,OAAS,EAAG,CAChC,IAAMic,EAAkBS,EAAcrZ,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACjG0F,EAAgBW,IA0BGmB,CAAavO,EAAEhE,OAAOxO,WAGnC,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJtC,YAWA,yBAAKrgB,UAAU,uCAWxB,yBAAKA,UAAU,uCACT6f,EAActQ,MAAQqQ,EAAazc,OAAS,GAAK,kBAAC,GAAD,CAClDkS,QAASA,EACToJ,gBAAiBA,EACjBjY,KAAMoZ,IACLC,EAAcvQ,WAAa,kBAACmR,GAAD,MAE3BZ,EAActQ,QAAUqQ,EAAazc,OAAS,IACpD,yBAAK/C,MAAO,CACX6V,UAAW,SAEX,kBAAC,GAAD,CAAOpO,MAAM,yBAOhBgY,EAActQ,MACX,kBAAC,GAAD,CACM6Q,sBAAuBA,EACvBC,yBAA0BA,EAC1BT,aAAcA,EACdnB,gBAAiBA,Q,0FCjXnBtf,GAAaD,IAAbC,SAmDOF,GAjCF,SAAC,GAIK,IAJHK,EAIE,EAJFA,MAA2BE,GAIzB,EAJKD,KAIL,EAJWE,aAIX,EAJyBD,OACvCE,EAGc,EAHdA,SAAUC,EAGI,EAHJA,SAAUC,EAGN,EAHMA,QACnBC,EAEa,EAFbA,YAAaC,EAEA,EAFAA,KAEA,IAFM4gB,YAEN,MAFa,EAEb,EADbpgB,EACa,EADbA,YAED,OACI,oCACKhB,GACG,wBAAIU,UAAU,mBACTV,GAIT,kBAAC,IAAKW,KAAN,CACIC,eAAgBN,EAAU,QAAU,GACpCO,KAAMN,GAGN,kBAAC,GAAD,CACIF,SAAUA,EACVD,SAAUA,EACVF,MAAOA,EACPM,KAAMA,EACNE,UAAU,iBACV0gB,KAAMA,EACNpgB,YAAaA,O,uECVzBqgB,I,MAAYC,KAAZD,SACAE,GAAYC,KAAZD,QAKFE,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,mBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BA8nB9BgL,GAjmBM,SAAC,GAUR,IATbtC,EASY,EATZA,QACAC,EAQY,EARZA,WACAsC,EAOY,EAPZA,YACAC,EAMY,EANZA,qBAEAC,GAIY,EALZC,wBAKY,EAJZD,qBACAE,EAGY,EAHZA,SACAC,EAEY,EAFZA,iBAEY,+JAEoB1O,mBAAS,KAF7B,mBAEL2O,EAFK,KAEKC,EAFL,OAGsB5O,oBAAS,GAH/B,mBAGL6O,EAHK,KAGMC,EAHN,OAIgC9O,mBAAS,IAJzC,mBAIL+O,EAJK,KAIWC,EAJX,OAKkChP,oBAAS,GAL3C,mBAKLiP,EALK,KAKYC,EALZ,OAMgD3R,GAAe,GAAI,0BANnE,mBAML4R,EANK,KAMeC,EANf,OAOyD7R,GAAe,GAAI,wBAP5E,mBAOL8R,EAPK,KAOsBC,EAPtB,OAQkE/R,GAAe,GAAI,0BARrF,mBAQ6BgS,GAR7B,aASgCvP,mBAAS,IATzC,mBASLwP,EATK,KASWC,EATX,OAUoBzP,oBAAS,GAV7B,mBAUL0P,EAVK,KAUKC,EAVL,KAaNC,GAAiC,uCAAG,WAAOlhB,GAAP,iBAAA0O,EAAA,sEAEDmS,EAAkC,CACzEzc,WAAY,CACXE,aAAc,CACbtE,SALsC,QAEnCmhB,EAFmC,SAY6B,OAArCA,EAA0BjgB,SAC1Due,GAAwB,kBAClB2B,EAAeN,EAAenf,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KAC/D+gB,EAAkBK,IAfsB,2CAAH,sDAmBjCC,GAAY,uCAAG,4BAAA3S,EAAA,sEACOkS,EAAgC,CAC1Dxc,WAAY,CACXC,OAAQ,CACPid,YAAa,IACb3C,SAAU,QACRC,eAAgB,SAND,QACd2C,EADc,SAenBR,EAAkBQ,GAfC,2CAAH,qDAuBlB/S,qBAAU,WAET6S,OACE,IAKH,IAAMG,GAAY,uCAAG,4BAAA9S,EAAA,sDACd+S,EAAW,IAAIC,SACrBzB,EAAS0B,SAAQ,SAAAC,GAChBH,EAASI,OAAO,SAAUD,EAAMA,EAAKpjB,SAGtC4hB,GAAa,GAWb0B,KAAQ,CACPvhB,IAAI,GAAD,OAAKmF,EAAOiI,QAAZ,wBACHnN,OAAQ,OACRuhB,aAAa,EACb7c,KAAMuc,EACNO,iBAAiB,EACjB3X,QAAS,WACR6V,EAAY,IACZE,GAAa,GACbiB,KACA1D,KAAQtT,QAAQ,yBAEjBwD,MAAO,WACNuS,GAAa,GACbzC,KAAQ9P,MAAM,qBA/BI,2CAAH,qDAyDlBW,qBAAU,WACLuR,GAAYA,EAASle,OAAS,GACjCye,EAAkB,YAAIP,MACrB,CAACA,IAGJvR,qBAAU,WACLwS,GAAYpB,GAAwBG,GACvCO,EAAkB,YAAIP,MAErB,CAACA,EAAUiB,IAIdxS,qBAAU,cAKP,CAACwR,EAAkBgB,IAEtB,IAAMiB,GAAc,CAEnBC,UAAU,EACVC,SAAU,SAAAP,GACT1B,GAAY,SAAAkC,GACX,IAAMtgB,EAAQme,EAAShgB,QAAQ2hB,GACzBS,EAAcpC,EAAS9d,QAE7B,OADAkgB,EAAYC,OAAOxgB,EAAO,GACnBugB,MAITE,aAAc,SAAAX,GAKb,OAJA1B,GAAY,SAAAkC,GACX,IAAMI,EAAWJ,EACjB,MAAM,GAAN,mBAAWI,GAAX,CAAqBZ,QAEf,GAER3B,YAMKwC,GAA0B,SAACla,EAAOvI,GAEvC,GAAIqgB,GAAkBA,EAAexe,OAAS,EAE7C,GADqBwe,EAAepd,MAAK,SAAAsF,GAAK,OAAIA,EAAMvI,KAAOA,KAK1D,CACJ,IAAM0iB,EAAoBrC,EAAe1e,QAAO,SAAA4G,GAAK,OAAIA,EAAMvI,KAAOA,KACtEsgB,EAAkBoC,QALlBpC,EAAkB,CAAC/X,GAAF,mBAAW8X,KAC5BG,EAAmBjY,QAQpB+X,EAAkB,CAAC/X,GAAF,mBAAW8X,KAC5BG,EAAmBjY,IAqBfoa,GAAkB,uCAAG,WAAOlT,EAAQC,GAAf,qBAAAhB,EAAA,sEACcgS,EAA8B,CACrEjgB,KAAM,CACLT,GAAIyP,EAAOzP,GACX2I,IAAK8G,EAAO9G,IACZpC,MAAOkJ,EAAOlJ,MACdqc,QAASnT,EAAOmT,QAChBla,OAAQ+G,EAAO/G,UAPS,QACpBma,EADoB,SAc4C,OAArCA,EAA0B3hB,QAC1Due,GAAwB,iBAMlB3d,EAJsB,WAC3B,OAAOgf,EAAehhB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQwP,EAAOzP,IAG7C8iB,GAGR9gB,EAAcC,OAAOC,OAAO,GAAI4e,EAAehf,GAAjCG,OAAA,IAAAA,CAAA,GAA8C4gB,IAC5DE,EAXqE,sBAW/CjC,EAAe3e,MAAM,EAAGL,IAXuB,CAWfE,GAXe,YAWC8e,EAAe3e,MAAML,EAAQ,KACzGif,EAAkBgC,KAtQUpF,OA0Q5BqF,EAzQFpF,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA2Q3ChF,EAAQC,eAAc,GAnCI,iCA5OE,IAACgO,IA4OH,OAAH,wDAuClBsF,GAAkC,SAACxT,EAAQI,GAIhD,OAAKA,GAiCN,OACC,oCACC,kBAAC,KAAD,CACC/Q,MAAO,CACNokB,IAAK,QAEN3c,MAAM,gBACN6W,QAASA,EACT+F,KAzLc,SAACzS,GAEbkP,GACHD,EAAYU,GACZY,GAAY,KAGZpB,EAAoBQ,GACpBY,GAAY,IAEb5D,GAAW,IAgLT+F,SA5KkB,SAAC1S,GACrB2M,GAAW,IA4KT5L,MAAO,OACP4R,UAAW,CACV5S,OAAQ,IACRyE,QAAS,KAEViJ,OAAO,QAEP,yBAAKzf,UAAU,6BACd,yBAAKA,UAAU,kCAEd,kBAAC,KAAD,CAAM4kB,iBAAiB,IAAIrlB,KAAK,OAAOyZ,KAAK,UAC3C,kBAAC6H,GAAD,CAASgE,IAAI,mBAAmB1gB,IAAI,KACnC,yBAAKnE,UAAU,yCAEd,6BACC,kBAAC2gB,GAAD,eACC3gB,UAAU,qBACV8kB,SAAS,UACT1kB,MAAO,CACNuV,WAAY,OACZtV,aAAc,QAEXkjB,IAEJ,uBAAGvjB,UAAU,wBACZ,kBAAC+kB,GAAA,EAAD,OAED,uBAAG/kB,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2CASH,kBAAC,IAAD,CACCA,UAAU,6BACVT,KAAK,UACL0S,QAAS6Q,GACTnjB,SAA8B,IAApB4hB,EAASpe,OACnB+O,QAASuP,EACTna,KAAM,kBAAC0d,GAAA,EAAD,MACN5kB,MAAO,CACN6V,UAAW,OACXkF,aAAc,SAThB,WAgBD,kBAAC0F,GAAD,CAASgE,IAAI,gBAAgB1gB,IAAI,KAChC,oCACEkd,GAAYA,EAAS4D,OAAS,GAC9B,oCACC,wBAAIjlB,UAAU,mBAAd,kBAGA,yBAAKA,UAAU,4CACbiiB,EAA0B1S,MACvB8R,EAASle,OAAS,GAClBke,EAASjgB,KAAI,SAAAyI,GACf,OACC,yBACC1F,IAAK0F,EAAMvI,GAEXtB,UAAU,oEAGV,yBACCiS,QAAS,WACR8R,GAAwBla,EAAOA,EAAMvI,KAEtCtB,UAAU,yEACV,kBAACklB,GAAA,EAAD,OAMD,yBAAKllB,UAAU,yDACd,yBAAK+N,IAAKlE,EAAM9C,MAAOkD,IAAI,gBAapC,yBAAKjK,UAAU,qDAEbiiB,EAA0B1S,MACvB6S,EAAejf,OAAS,GACxBif,EAAehhB,KAAI,SAAAyI,GACrB,OACC,yBACC1F,IAAK0F,EAAMvI,GAEXtB,UAAU,2DA9MMsB,EA+MIuI,EAAMvI,GA9MjCqgB,GAAkBA,EAAexe,OAAS,GACxBwe,EAAepd,MAAK,SAAAsF,GAAK,OAAIA,EAAMvI,KAAOA,KA6MrB,yBAAKtB,UAAU,+DAC9C,kBAACmlB,GAAA,EAAD,OAGQ,IAET,kBAAC,KAAD,CAAU7O,QAAS,kBAnJT,SAACkM,EAAmClhB,EAAIyiB,EAAyBla,GACtF,OAEE,kBAAC,KAAD,KACC,kBAAC,KAAK5J,KAAN,CACCgS,QAAS,kBAAM8R,EAAwBla,EAAOvI,IAC9C6C,IAAI,IAAImD,KAAM,kBAAC6d,GAAA,EAAD,OAFf,UASA,kBAAC,KAAKllB,KAAN,CACCgS,QAAS,kBAAMuQ,EAAkClhB,IACjD6C,IAAI,IAAImD,KAAM,kBAACqY,GAAA,EAAD,CAAgB3J,MAAM,SAFrC,WAsIiCoP,CAAc5C,GAAmC3Y,EAAMvI,GAAIyiB,GAAyBla,IAAQwM,UAAU,eAC9H,yBAAKrW,UAAU,+DACd,kBAACqlB,GAAA,EAAD,QAUF,yBAAKpT,QAAS,WACb8R,GAAwBla,EAAOA,EAAMvI,KACnCyM,IAAKlE,EAAM9C,MAAOkD,IAAI,SAnOV,IAAC3I,KA0OnB2gB,EAA0B1S,QAAU6S,EAAejf,OAAS,IAC5D,yBAAK/C,MAAO,CACX6U,QAAS,OACTC,eAAgB,SAChBnC,MAAO,SAGP,kBAAC,GAAD,CAAOlL,MAAM,uCAYnB,yBAAK7H,UAAU,mCAEb6hB,GACA,oCACC,kBAAC,IAAD,CACCzQ,SAAU,SAACL,EAAQC,GAAT,OAAqBiT,GAAmBlT,EAAQC,IAC1DK,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEPmR,KAGL,gBACAtQ,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kDAGA,yBAAK7R,UAAU,gDACd,yBAAKA,UAAU,+DACd,yBAAK+N,IAAK8T,EAAe,MAAW5X,IAAI,SAEzC,yBAAKjK,UAAU,8DACd,wBAAIA,UAAU,oBACZ6hB,EAAe,MAEjB,4BACC,kBAAC,KAAD,KACEA,EAAe,QAOlB,kBAAC,KAAD,CAECrC,UAAW,kBAAMgD,GAAkCX,EAAe,KAClEha,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAE9C,wBACC1f,UAAU,sBADX,yBAaH,kBAACd,EAAD,CACCI,MAAM,iBACNE,MAAOuR,EAAO9G,IACdnK,KAAK,MACLF,QAAU8R,EAAQzH,KAAOuH,EAAOvH,MAC7BwH,GAAgBsQ,EAAmB5S,MAAnB,UAEnBtP,YAAc6R,EAAQzH,KAAOuH,EAAOvH,MACjCwH,GAAgBsQ,EAAmB5S,MAAnB,UACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,UAKlB,kBAACzS,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOlJ,MACd/H,KAAK,QACLF,QAAU8R,EAAQ7J,OAAS2J,EAAO3J,QAC/B4J,GAAgBsQ,EAAmB5S,MAAnB,YAEnBtP,YAAc6R,EAAQ7J,OAAS2J,EAAO3J,QACnC4J,GAAgBsQ,EAAmB5S,MAAnB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAO7G,QACdpK,KAAK,QACLF,QAAU8R,EAAQxH,SAAWsH,EAAOtH,UACjCuH,GAAgBsQ,EAAmB5S,MAAnB,cAEnBtP,YAAc6R,EAAQxH,SAAWsH,EAAOtH,UACrCuH,GAAgBsQ,EAAmB5S,MAAnB,cACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,cAIlB,kBAAC,IAAD,CACCpS,KAAK,UACL0S,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCrS,SAAU4kB,GAAgCxT,EAAQI,GAClDe,QAAST,EACTrR,MAAO,IALR,gBAwBJyhB,GACD,yBAAKzhB,MAAO,CACX4U,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,wBAAI/U,MAAO,CACVqW,UAAW,SACXC,SAAU,OACVV,MAAO,UAHR,4CCzpBOgL,M,wCCITsE,G,6MACJxkB,MAAQ,CACNwE,KAAM,GACNigB,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAKlBC,YAAc,SAAAC,GAAe,IAAD,EACH,EAAKjT,OAE5BkT,EAH0B,EACnBA,SADmB,EACXvgB,KACQrC,QAAO,SAAAyI,GAAG,OAAIA,IAAQka,O,EAI/CE,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAK1M,MAAMmN,Y,EAGzDC,kBAAoB,SAAAjU,GAClB,EAAK+T,SAAS,CAAEP,WAAYxT,EAAEhE,OAAOxO,S,EAGvC0mB,mBAAqB,WACjBngB,QAAQC,IAAI,qBAAqB,EAAK2M,OADf,IAEjB6S,EAAe,EAAK1kB,MAApB0kB,WAFiB,EAGD,EAAK7S,MAAvBrN,EAHmB,EAGnBA,KAAMugB,EAHa,EAGbA,QACRL,GAAclgB,IAAsC,IAA9BA,EAAK/D,QAAQikB,KACrClgB,EAAI,sBAAOA,GAAP,CAAakgB,KAEnBK,EAAQvgB,GACR,EAAKygB,SAAS,CACZR,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAAnU,GACtB,EAAK+T,SAAS,CAAEL,eAAgB1T,EAAEhE,OAAOxO,QACzCuG,QAAQC,IAAI,WAAWgM,EAAEhE,OAAOxO,Q,EAGlC4mB,uBAAyB,WACvB,EAAKL,UAAS,YAAwC,EAArCN,eAAqC,EAArBC,eAC/B,MAAO,CACLD,gBAAiB,EACjBC,eAAgB,OAIpB,IAAMW,EAAO,YAAO,EAAK1T,MAAMrN,MAC/B+gB,EAAQZ,gBAAkBC,eAC1B,EAAK/S,MAAMkT,QAAQQ,I,EAGrBC,aAAe,SAAAzN,GACb,EAAKA,MAAQA,G,EAGf0N,iBAAmB,SAAA1N,GACjB,EAAK2N,UAAY3N,G,yEAKT,IAAD,SAC8DpK,KAAK3N,MAAlEykB,EADD,EACCA,aAAcC,EADf,EACeA,WAAYC,EAD3B,EAC2BA,eAAgBC,EAD3C,EAC2CA,eAD3C,EAEsBjX,KAAKkE,MAA1BrS,EAFD,EAECA,YAAYgF,EAFb,EAEaA,KAEpB,OACE,oCACGA,GAAQA,EAAKnC,OAAS,GAAKmC,EAAKlE,KAAI,SAACsK,EAAKtI,GACzC,GAAIqiB,IAAmBriB,EACrB,OACE,kBAAC,IAAD,CACEqjB,IAAK,EAAKF,iBACVpiB,IAAKuH,EACLsN,KAAK,QACL1Y,YAAaA,EACbN,UAAU,YACVR,MAAOkmB,EACPhmB,SAAU,EAAKymB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYlb,EAAIvI,OAAS,GAEzB0jB,EACJ,kBAAC,KAAD,CACE7mB,UAAU,WACVmE,IAAKuH,EACLob,UAAU,EACVC,QAAS,kBAAM,EAAKpB,YAAYja,KAEhC,0BACEsb,cAAe,SAAAhV,GACC,IAAV5O,IACF,EAAK2iB,SAAS,CAAEN,eAAgBriB,EAAOsiB,eAAgBha,IAAO,WAC5D,EAAK8a,UAAUR,WAEjBhU,EAAEiV,oBAILL,EAAS,UAAMlb,EAAIjI,MAAM,EAAG,IAAnB,OAA8BiI,IAI9C,OAAOkb,EACL,kBAAC,KAAD,CAAS/e,MAAO6D,EAAKvH,IAAKuH,GACvBmb,GAGHA,KAGHtB,GACC,kBAAC,IAAD,CACAnlB,MAAO,CACL2R,OAAQ,UAER0U,IAAKhY,KAAK6X,aACV/mB,KAAK,OACLyZ,KAAK,QACLhZ,UAAU,YACVR,MAAOgmB,EACP9lB,SAAU+O,KAAKwX,kBACfS,OAAQjY,KAAKyX,mBACbS,aAAclY,KAAKyX,sBAGrBX,GACA,kBAAC,KAAD,CAAKvlB,UAAU,yBAAyBiS,QAASxD,KAAKqX,WACpD,kBAACtF,GAAA,EAAD,MADF,mB,GAzIa0G,IAAMC,WAkJd7B,MCpHTlV,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAYhE8T,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAQvCtF,GAAgB,CACrB5Q,KAAM,GACNsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ9d,MAAO,GACPhI,IAAK,GACLkF,MAAO,IAGAmQ,GAAWC,KAAXD,OAsiBO0Q,GA7hBQ,SAAC,GAA+F,IAA7FxH,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BT,EAA2C,EAA3CA,aAAcnB,EAA6B,EAA7BA,gBAA6B,EAElEtO,GAAe,GAAI,eAF+C,mBAE9G0X,EAF8G,KAE5FC,EAF4F,OAGvFlV,oBAAS,GAH8E,mBAG9G8L,EAH8G,KAGrGC,EAHqG,OAIrF/L,oBAAS,GAJ4E,mBAI9GyO,EAJ8G,KAIpGJ,EAJoG,OAKrErO,oBAAS,GAL4D,mBAK5FuO,GAL4F,aAMvDvO,oBAAS,GAN8C,mBAM9GmV,EAN8G,KAMrFC,EANqF,OAOvDpV,oBAAS,GAP8C,mBAO9GwO,EAP8G,KAOrF6G,EAPqF,OAQ7DrV,oBAAS,GARoD,mBAQ9GsO,EAR8G,KAQxFgH,EARwF,OAS7EtV,mBAAS,IAToE,mBAS9GuV,EAT8G,KAShGC,EATgG,OAUrExV,mBAAS,IAV4D,mBAU9GyV,EAV8G,KAU5FC,EAV4F,OAWrF1V,mBAAS,IAX4E,mBAW9G2V,EAX8G,KAWpGC,EAXoG,OAYtE5V,oBAAS,GAZ6D,oBAY9G6V,GAZ8G,MAY7FC,GAZ6F,SAanF9V,mBAAS,IAb0E,qBAa9G+V,GAb8G,MAanGC,GAbmG,SAc9FhW,mBAAS,IAdqF,qBAc9GtN,GAd8G,MAczGugB,GAdyG,SAe1FjT,mBAAS,IAfiF,qBAe9GiW,GAf8G,MAevGC,GAfuG,MAkB/GhY,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAhB,EAAA,6DAEd+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACzC,OAAOA,EAAMvI,MACT,IAECyhB,EAAW,IAAIC,UAEZG,OAAO,OAAQpS,EAAOjR,KAAKkpB,QACpCjG,EAASI,OAAO,cAAepS,EAAOnK,aACtCmc,EAASI,OAAO,QAAShhB,KAAKC,UAAU2mB,IACxChG,EAASI,OAAO,QAASgF,GAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEhG,EAASI,OAAO,SAAUkF,GAC1BtF,EAASI,OAAO,OAAQwF,IAbJ,UAiBSb,EAAuB,CACnD/lB,KAAM,CACLjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,YACpBiD,MAAOkf,EACPhiB,MAAOohB,GAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDjiB,OAAQuhB,EACR/gB,KAAMqhB,GACNrB,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUpiB,GAAKc,KAAK,KACpB6iB,GAAI,CACH3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,GAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpBpiB,YAAamK,EAAOsW,kBAjCH,SAiBd6B,EAjBc,SAwC4B,OAA1BA,EAAe1mB,QAxGNyc,EAyGN,oBAxG1BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,mBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAsG1CqK,GAAyB,GAEzB5B,EAAgB,CAAC,aAChBnd,GAAI4nB,EAAc,KAAW,GAC7B/kB,IAAK+kB,EAAc,KAAW,GAC9BppB,KAAMopB,EAAc,MAAY,GAChCtiB,YAAasiB,EAAc,aAAmB,IAE3CA,IANW,mBAOVtJ,KAEL5O,EAAQmY,YAERlI,EAAY,IACZmH,EAAgB,IAChBE,EAAoB,IACpBN,GAA2B,GAC3BQ,EAAY,KAGZlE,KAMDtT,EAAQC,eAAc,GApEF,kCAhEU,IAACgO,IAgEX,OAAH,wDAyEZmK,GAAiB,SAACC,GACvBrB,EAA2BqB,IAItBC,GAAe,SAACtX,GACrBqO,GAAyB,IAIpBnP,GAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GA+BhBoY,GAAiB,SAAC/pB,GACvB8oB,EAAoB9oB,IAYrB,SAASqkB,GAAaX,GAiBrB,MAhBiC,eAAdA,EAAK3jB,MAAuC,cAAd2jB,EAAK3jB,MAErD0f,KAAQ9P,MAAM,qCAEA+T,EAAKlK,KAAO,KAAO,KAAO,GAExCiG,KAAQ9P,MAAM,gCAdhB,SAAmBrF,EAAK0f,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc/f,GAerBggB,CAAU5G,GAAM,SAAAqF,GACfC,EAAYD,GACZK,GAAa1F,GACbwF,IAAoB,OAGd,EAIR,IAAMqB,GACL,6BACEtB,GAAkB,kBAACuB,GAAA,EAAD,MAAsB,kBAACxJ,GAAA,EAAD,MACzC,yBAAKxgB,UAAU,mBAAf,WAOF,OAFA+F,QAAQC,IAAI,qBAAqBV,IAGhC,kBAAC,IAAD,CACC8L,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAEN3c,MAAM,mBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOjR,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBoW,EAAiB1Y,MAAjB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBoW,EAAiB1Y,MAAjB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,wFACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBoW,EAAiB1Y,MAAjB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBoW,EAAiB1Y,MAAjB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACdtG,YAAa,mBACbR,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgBoW,EAAiB1Y,MAAjB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBoW,EAAiB1Y,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,yEACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgBoW,EAAiB1Y,MAAjB,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgBoW,EAAiB1Y,MAAjB,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKvR,MAAO,CACX6V,UAAW,UAGZ,yBAAKjW,UAAU,wBACd,kBAAC,KAAD,CACCqpB,QAAStB,EACToC,gBAAc,EAACzqB,SAAU0pB,KAC1B,yBAAKppB,UAAU,sCACd,kDACA,wBAAIA,UAAU,6BAAd,0CAIA+nB,GACD,oCACC,wBAAI/nB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACC0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,KAChBzS,YAAY,2BACZqY,iBAAiB,WACjBjZ,SAAU6pB,GAIV3Q,aAAc,SAACC,EAAOC,GAAR,OAAwBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAEnG6G,EAAazc,OAAS,GAAKyc,EAAaxe,KAAI,SAAAsF,GAC5C,OAAO,kBAAC,GAAD,CAAQlH,MAAOkH,EAASpF,IAAKoF,EAAS5G,WASjD,yBACCM,MAAO,CACN6V,UAAW,UAKb,yBAAKjW,UAAU,iCACd,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACCqW,UAAU,OAAOxO,MAAO,oCACxB,uBAAG8O,KAAK,OACP,kBAACyT,GAAA,EAAD,SAKH,kBAAC,KAAD,CACChqB,MAAO,CACNC,aAAc,OAEfP,KAAK,SACLglB,SAAS,eACT9kB,UAAU,kBACVqqB,gBAAgB,EAChBxG,aAAcA,GACdL,UAAU,GAET+E,EAAW,yBAAKxa,IAAKwa,EAAUte,IAAI,SAAS7J,MAAO,CAAE2S,MAAO,UAAegX,IAI7E,yBACC3pB,MAAO,CACN6V,UAAW,UAKb,yBAAKjW,UAAU,gCAAgCI,MAAO,CACrD+a,aAAc,SAEd,wBAAInb,UAAU,mBAAd,UACA,kBAAC,KAAD,CACCqW,UAAU,OAAOxO,MAAO,uFACxB,uBAAG8O,KAAK,OACP,kBAACyT,GAAA,EAAD,SAIH,yBAAKpqB,UAAU,gCACbqhB,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,kBAAMmW,EAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,kBAhRM,SAAC3Q,GAE3B,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAGrB2f,EAAYqJ,GA0QcC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIAiD,IAAiBte,EAAMvI,KAInB6mB,GAA0B,IAAV/kB,IAHpB,0BAAMpD,UAAU,4CACf,kBAACmlB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACCtd,MAAO,iBAEP,yBACCoK,QAAS,WACR0M,GAAW,GACXuJ,GAAwB,GACxBD,GAA2B,IAE5BjoB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,UAUJ,kBAACthB,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgBoW,EAAiB1Y,MAAjB,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgBoW,EAAiB1Y,MAAjB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgBoW,EAAiB1Y,MAAjB,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgBoW,EAAiB1Y,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgBoW,EAAiB1Y,MAAjB,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgBoW,EAAiB1Y,MAAjB,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgBoW,EAAiB1Y,MAAjB,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgBoW,EAAiB1Y,MAAjB,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,GACTvgB,KAAMA,KAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,GACTxjB,KAAMujB,MAKP,kBAAC,GAAD,CACClK,WAAYA,EACZD,QAASA,EACTuC,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCvlBvB9Q,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAgBhE8T,GAAwB,SAACrF,GAC9BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAiJ9ByU,GAjIG,SAAC,GAA6E,IAA3E/jB,EAA0E,EAA1EA,SAAUiY,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAASkB,EAA2C,EAA3CA,aAAcnB,EAA6B,EAA7BA,gBAA6B,EACrCtO,GAAe,GAAI,kBADkB,mBACvFua,EADuF,KAClEC,EADkE,KAGxF7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEACY2a,EAA0B,CACzDjlB,WAAY,CACXE,aAAc,CACbtE,GAAIyP,EAAOzP,KAGbS,KAAM,CACLjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATF,QACdgkB,EADc,SAgBkC,OAA7BA,EAAkBpoB,QAhDZyc,OAiD9B8B,EAhDF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,mBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAmDpC5S,EAJgB,WACrB,OAAOwc,EAAaxe,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQmF,EAASpF,IAG7CupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIoc,EAAaxc,GAA/BG,OAAA,IAAAA,CAAA,GAA4CqnB,IAC1DE,EAXqD,sBAW5BlL,EAAanc,MAAM,EAAGL,IAXM,CAWEE,GAXF,YAWkBsc,EAAanc,MAAML,EAAQ,KACxGqb,EAAgBqM,IAIhBxG,KAGDtT,EAAQC,eAAc,GACtB0N,GAAW,GApCS,iCAhCU,IAACM,IAgCX,OAAH,wDAyCZqK,EAAe,SAACtX,GACrB2M,GAAW,IAKNzN,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GAMtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPhK,KAGL,gBACA6K,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACChK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBiZ,EAAoBvb,MAApB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBiZ,EAAoBvb,MAApB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgBiZ,EAAoBvb,MAApB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBiZ,EAAoBvb,MAApB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wB,UCxInBvB,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAKhEuQ,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,mBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAKvCsO,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAKvCtF,GAAgB,CACrB5Q,KAAM,GACN8G,YAAa,GACbiD,MAAO,GACPhI,IAAK,GACLkF,MAAO,IAgjBOgkB,IA5iBI5T,KAAXD,OAWY,SAAC,GAGiB,IAHf8T,EAGc,EAHdA,oBACtBC,EAEoC,EAFpCA,uBACCC,EACmC,EADnCA,mBACAC,EAAmC,EAAnCA,sBAAmC,EAEehb,GAAe,GAAI,kBAFlC,mBAE7Bib,EAF6B,KAEXC,EAFW,OAGelb,GAAe,GAAI,kBAHlC,mBAG7Bmb,EAH6B,aAI2Cnb,GAAe,GAAI,8BAJ9D,mBAIGob,GAJH,aAKuCpb,GAAe,GAAI,2BAL1D,mBAKCqb,GALD,aAM+Crb,GAAe,GAAI,+BANlE,gCAO2CA,GAAe,GAAI,8BAP9D,mBAOGsb,GAPH,aAQ2Ctb,GAAe,GAAI,6BAR9D,mBAQGub,GARH,aAWJ9Y,oBAAS,GAXL,mBAW7ByO,EAX6B,KAWnBJ,EAXmB,OAYIrO,oBAAS,GAZb,mBAY7B+Y,EAZ6B,KAYfC,EAZe,OAaIhZ,mBAAS,IAbb,mBAa7BuV,EAb6B,KAafC,EAbe,OAcUxV,mBAAS,IAdnB,mBAc7BiZ,EAd6B,KAcZC,EAdY,OAeYlZ,mBAAS,IAfrB,gCAgBJA,mBAAS,KAhBL,oCAiBWA,oBAAS,IAjBpB,qBAiB7B6V,GAjB6B,gBAkBF7V,mBAAS,KAlBP,qBAkB7B+V,GAlB6B,gBAmB0B/V,oBAAS,IAnBnC,iCAwBpC9C,qBAAU,WACT,GAAIob,GAAsB3nB,OAAOiC,KAAK0lB,GAAoB/nB,OAAS,EAAG,CAErE,IAAMgL,EAAS+c,EAAmBrhB,MAC9BsE,GAAUA,EAAOhL,OAAS,IAC7B8d,EAAY9S,GACZ2d,EAAmB3d,IAGhB+c,EAAmBnkB,OAASmkB,EAAmBnkB,MAAnB,KAE/Bka,EAAY,CAACiK,EAAmBnkB,OAArB,mBAA+BoH,KAC1Cia,EAAgB8C,EAAmBnkB,MAAnB,QAIhB,CAACmkB,IAGJpb,qBAAU,WAELuR,GAAYA,EAAS,IAAMA,EAASle,OAAS,GAE5CglB,IAAiB9G,EAAS,GAAG/f,KAChC8mB,EAAgB/G,EAAS,GAAG/f,IAC5ByqB,GAAyB1K,EAAS,OAKlC,CAACA,IAGJ,IAAM2K,GAAuB,uCAAG,WAAM1qB,GAAN,SAAA0O,EAAA,sEACzByb,EAAqC,CAC1C/lB,WAAY,CACXE,aAAc,CACbqmB,QAAS3qB,EACT4qB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,OANC,2CAAH,sDAgBvByqB,GAAwB,uCAAG,WAAMliB,GAAN,eAAAmG,EAAA,sEAEL0b,EAAqC,CAC/DhmB,WAAY,CACXE,aAAc,CACbqmB,QAASpiB,EAAMvI,GACf4qB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,OAPE,QAE1B6qB,EAF0B,SAcY,OAAxBA,EAAa3pB,OAChCue,GAAwB,uBAiBxBuD,GAAsB,mDAhCS,2CAAH,sDAuC9Bve,QAAQC,IAAI,sBAAuBslB,GAEnC,IAAMxa,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,2DAGhBsb,GAAoBA,EAAiB/b,MAAQhM,OAAOiC,KAAK0lB,GAAoB/nB,OAAS,GAHtE,uBAKbgL,EAASkT,GAAYA,EAASle,OAAS,EAAIke,EAASjgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAM,IAEtE,IAAM6M,EAAOhL,OAAS,GAPd,gCAQZooB,EAAqC,CAC1C7lB,WAAY,CACXE,aAAc,CACbsmB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,KAG7BS,KAAM,CACL8H,MAAOsE,KAhBS,mCAoBVA,EAAO,IAAMA,EAAOhL,OAAS,GApBnB,kCAqBZqoB,EAAmC,CACxC9lB,WAAY,CACXE,aAAc,CACbqmB,QAAS9d,EAAO,GAAG7M,GACnB4qB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,OA1BZ,yBAoCO+pB,EAAuB,CACjD3lB,WAAY,CACXE,aAAc,CACbtE,GAAI4pB,EAAmB5pB,KAGzBS,KAAM,CACLjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,YACpBU,KAAMqhB,GACNppB,KAAM,YA9CY,SAoCd6sB,EApCc,SAmDwB,OAAxBA,EAAa5pB,QAChC2oB,EAAsB,eAClBD,EADiB,GAGjBkB,IAEJrmB,QAAQC,IAAI,eAAeomB,GAC3BrmB,QAAQC,IAAI,qBAAqBklB,GAEjCnK,KACAkK,GAAuB,GAgBvBja,EAAQmY,aAIR7E,KAGDtT,EAAQC,eAAc,GApFF,4CAAH,wDA2FlBnB,qBAAU,WACLob,EAAmB3rB,OAGrB,CAAC2rB,IAGJ,IAAM5B,GAAe,SAACtX,GACrBiZ,GAAuB,GACvBhK,GAAY,IAIP/P,GAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GAwDrB,6BACEsX,GAAkB,kBAACuB,GAAA,EAAD,MAAsB,kBAACxJ,GAAA,EAAD,MACzC,yBAAKxgB,UAAU,mBAAf,WAUF,OAFA+F,QAAQC,IAAI,yBAA0Bqb,GAGrC,kBAAC,IAAD,CACCjQ,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,GADO,GACWwa,KAGvB,gBACA3Z,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAEN3c,MAAM,gBACN6W,QAASsM,EACTvG,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgB2Z,EAAiBjc,MAAjB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgB2Z,EAAiBjc,MAAjB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACC+O,KAAM,EACNphB,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBA2ElB,yBACCvR,MAAO,CACN6V,UAAW,UAKb,yBAAKjW,UAAU,gCAEdI,MAAO,CACN+a,aAAc,SAGf,wBAAInb,UAAU,mBAAd,WAQD,yBAAKA,UAAU,gCAEbsrB,GACA,oCACEjK,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,WACRmW,EAAgBve,EAAMvI,IACtByqB,GAAyBliB,KAG1B,yBAAKkE,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,YA5MI,SAAC3Q,GAET+f,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAIrB2f,EAAY,IAsMEsJ,CAAmB1gB,EAAMvI,IACzB0qB,GAAwBniB,EAAMvI,KAI/BtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIAiD,IAAiBte,EAAMvI,KAInB6mB,GAA0B,IAAV/kB,IAHpB,0BAAMpD,UAAU,4CACf,kBAACmlB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACCtd,MAAO,iBAEP,yBACCoK,QAAS,WACR2Z,GAAgB,IAEjB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,YAYP,kBAAC,GAAD,CACC7B,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVwK,gBAAiBA,EACjBC,mBAAoBA,EACpB5K,sBAAsB,UC3kBrB7E,GAAwBC,KAAxBD,OA6ZOgQ,IA7ZiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACoBxC,GAAe,GAAI,kBADvC,mBAC9Boc,EAD8B,KACTC,EADS,OAEwBrc,GAAe,GAAI,oBAF3C,mBAE9Bsc,EAF8B,KAEPC,EAFO,KAI/B/mB,EAASgnB,eACTtX,EAAUC,eACVsX,EAAajnB,EAAM,GANY,EAOiBiN,oBAAS,GAP1B,mBAO9BoY,EAP8B,KAOTC,EAPS,OAQMrY,mBAAS,IARf,mBAQ9Bia,EAR8B,KAQfC,EARe,KAYrChd,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACewc,EAA0B,CAC3D9mB,WAAY,CACRE,aAAc,CACVtE,GAAIsrB,MAJM,QAChBG,EADgB,SAYlBD,EAAkBC,GAZA,2CAAH,qDAkBvBC,KAED,CAACJ,IAEJ9c,qBAAU,YAEmB,uCAAG,sBAAAE,EAAA,sEAClB0c,EAA4B,CAC9BhnB,WAAY,CACRE,aAAc,CACVtE,GAAIsrB,MAJQ,2CAAH,qDAUzBK,KAED,CAACL,IAKJ7mB,QAAQC,IAAI,wBAAyBymB,GAErC1mB,QAAQC,IAAI,cAAeL,GAG3B,IA+BMunB,EAAMX,EAAoBhd,MAAQsd,GAAkBA,EAAc,MA/B7C,SAACM,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK/rB,KAAI,SAAAC,GAAI,OAAIA,EAAK0F,SAC7B,IAAMqmB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKlK,SAAQ,SAAC5hB,EAAM+B,GACZiqB,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,sBAA4BF,EAAQE,IAApC,CAAmDjsB,IAElD+rB,EAAQE,GAAgB,CAACjsB,GAE9BgsB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACfvnB,QAAQC,IAAI,aAAcqnB,OAI3BD,EAIyEG,CAAmBV,EAAc,OAAa,GAIlI,OACI,yBAAK7sB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,+CAICusB,EAAoBhd,MAAQsd,GAAmBtpB,OAAOiC,KAAKqnB,GAAgB1pB,OAAS,GACjF,oCACI,kBAACqqB,GAAD,CACIxC,oBAAqBA,EACrBC,uBAAwBA,EACxBC,mBAAoB2B,EACpB1B,sBAAuB2B,IAG3B,kBAAC,IAAD,CACI7a,QAAS,kBAAMgZ,GAAuB,IACtC1rB,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAWZ,kBAAC,KAAD,CACIkO,QAAM,EAACC,UAAW,CAAEhN,KAAM,GAC1BxO,QAASqa,EAAoBjd,WAC5Bid,EAAoBhd,MAAQsd,KAAoBtpB,OAAOiC,KAAKqnB,GAAgB1pB,OAAS,IAClF,kBAAC,KAAD,CAAOyD,YAAY,oBAAoBiD,MAAOkL,KAAMK,yBAKvDmX,EAAoBhd,MAAQsd,GAAmBtpB,OAAOiC,KAAKqnB,GAAgB1pB,OAAS,GACjF,oCACI,yBAAKnD,UAAU,gCACX,yBAAKA,UAAU,oGACX,yBAAK+N,IAAK8e,EAAc,OAAaA,EAAc,MAAd,MAAkC5iB,IAAI,MAE/E,yBAAKjK,UAAU,qCACX,4BACK6sB,EAAc,MAEnB,4BACKA,EAAc,aAEnB,8CACmB,8BACVA,EAAc,OAItBA,EAAc,KACX,mCAEI,8BACKA,EAAc,QAUlCA,EAAc,MACX,oCACI,yBAAK7sB,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAK+N,IAAK8e,EAAc,MAAYA,EAAc,KAAU5iB,IAAI,OAKxE,yBAAK7J,MAAO,CACR+a,aAAc,WAMzB0R,EAAc,OAAaA,EAAc,MAAU1pB,OAAS,GACzD,oCACI,yBAAKnD,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACVktB,GAAO3pB,OAAOiC,KAAK0nB,GAAK9rB,KAAI,SAAA4b,GACzB,OACI,yBAAKhd,UAAU,qBACVktB,EAAIlQ,IAAWkQ,EAAIlQ,GAAQ5b,KAAI,SAAA0I,GAC5B,OAAO,yBACPG,IAAI,KACJ8D,IAAKjE,EAAK1J,MAAO,CACb2S,MAAO,oBAcvC,yBAAK3S,MAAO,CACR+a,aAAc,WAMzB0R,EAAc,aAAmBA,EAAc,YAAgB1pB,OAAS,GACrE,oCACI,yBAAKnD,UAAU,iCACX,iDAKJ,yBAAKA,UAAU,yBACV6sB,EAAc,YAAgBzrB,KAAI,SAAAiG,GAC/B,OACI,yBACI4K,QAAS,kBAAMoD,EAAQU,KAAR,0BAAgC1O,EAAO/F,MACtDtB,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK1G,EAAON,MAAOkD,IAAI,MAEhC,yBAAKjK,UAAU,oCACX,4BACKqH,EAAOvH,YAShC,yBAAKM,MAAO,CACR+a,aAAc,aAYtC,yBAAKnb,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACVysB,EAAsBnd,WAAa,kBAACmR,GAAD,MACnCgM,EAAsBld,QAAUkd,EAAsBjmB,KAAKrD,OAAS,IACjE,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,sCAAsCiD,MAAOkL,KAAMK,0BAI7EqX,EAAsBld,MAAQkd,EAAsBjmB,MAAQimB,EAAsBjmB,KAAKrD,OAAS,GAC7F,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAGfgG,KAAK,QACL6D,WAAY4P,EAAsBjmB,KAClCsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAG1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAU5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OASjB,kBAAC,GAAD,CACII,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAI1C,kBAAC,GAAD,CACgC6H,MAAM,YACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,+BCxZpCoQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA6IpC6X,GAhIgB,SAAC,GAAmE,IAAjEnnB,EAAgE,EAAhEA,SAAUiY,EAAsD,EAAtDA,WAAYD,EAA0C,EAA1CA,QAASoP,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAC1C5d,GAAe,GAAI,gBADuB,mBACvF6d,EADuF,KACvErD,EADuE,KAGxF7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEAEU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAK,aACDjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,YACpBsB,MAAOxB,EAASwB,OACbxB,KAZM,QAEX0lB,EAFW,SAiB2B,OAAxBA,EAAa5pB,QA9CRyc,OA+CrB8B,EA9CR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAiDjC5S,EAJgB,WAClB,OAAO0qB,EAAQ1sB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQmF,EAASpF,IAG3CupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,EAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuC6oB,IACrD6B,EAXwC,sBAWpBH,EAAQrqB,MAAM,EAAGL,IAXG,CAWKE,GAXL,YAWqBwqB,EAAQrqB,MAAML,EAAQ,KACzF2qB,EAAWE,IAIX3J,KAGJtT,EAAQC,eAAc,GACtB0N,GAAW,GArCM,iCA7BO,IAACM,IA6BR,OAAH,wDAyCZqK,EAAe,SAACtX,GAClB2M,GAAW,IAITzN,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GAMzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJhK,KAGR,gBACG6K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBuc,EAAe7e,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBuc,EAAe7e,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgBuc,EAAe7e,MAAf,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBuc,EAAe7e,MAAf,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wB,wCCpHrC1S,GA3BF,SAAC,GAAgH,IAA9GK,EAA6G,EAA7GA,MAA2BE,GAAkF,EAAtGD,KAAsG,EAAhGE,aAAgG,EAAlFD,OAAOE,EAA2E,EAA3EA,SAAUC,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,YAAcC,EAAgC,EAAhCA,KAAgC,IAA1BkZ,YAA0B,MAArB,SAAqB,EACzH,OACI,oCACC1Z,GAAS,wBAAIU,UAAU,yBACfV,GAGL,kBAAC,IAAKW,KAAN,CACAC,eAAgBN,EAAU,QAAU,GAEpCO,KAAMN,GAGG,kBAAC,IAAD,CACAmZ,KAAMA,EACPkV,YAAU,EACVpuB,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVM,UAAU,4B,UC5BxB+gB,GAA0B,SAAC9B,GAC7BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,UACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAK7CsO,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6mB,GAAA,EAAD,CAA2B/tB,MAAO,CAAE4V,MAAO,yBCHjDoY,GAAiBC,KAAjBD,aACA7P,GAAWrf,IAAXqf,OAgOO+P,GAvNF,SAAC,GAKA,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,aAEW,EACmB7b,mBAAS,IAD5B,mBACJ5Q,EADI,KACK0sB,EADL,OAEkC9b,mBAAS,IAF3C,gCAG4BzC,GAAe,GAAI,YAH/C,mBAGJwe,EAHI,KAGMC,EAHN,OAI2Bhc,mBAAS,IAJpC,mBAIJic,EAJI,KAISC,EAJT,KAyBXhf,qBAAU,WACR,GAAI6e,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKsrB,EAAatrB,OAAS,EAAG,CACxE,IAAM4rB,EAAsBN,EAAartB,KAAI,SAACC,GAC5C,IAAM2tB,EAAmBL,EAASnoB,KAAKjC,MACrC,SAACkF,GAAD,OAASA,EAAInI,KAAOD,KAEtB,GAAI2tB,EACF,OAAOA,EAAiBlvB,QAG5B0uB,EAAgBO,MAEjB,CAACJ,IAIJ7e,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACW4e,EAAmB,CAC1ClpB,WAAY,CACVC,OAAQ,CACNoa,eAAe,MAJP,QACRkP,EADQ,SAUIA,EAAW9rB,OAAS,IAE9B+rB,EAAaD,EAAW7tB,KAAI,SAACsK,GACjC,OAAOA,EAAI5L,QAEb4uB,EAAWQ,IAfC,2CAAH,qDAoBbrJ,KACC,IAiDH,OAJA9f,QAAQC,IAAI,eAAgByoB,GAK1B,oCAEGE,EAASrf,WACR,yBAAKlP,MAAO,CACVoW,QAAS,SACTzD,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMHwZ,EAASpf,QAAUof,EAASnoB,KAAKrD,OAAS,IACzC,yBAAK/C,MAAO,CACV2S,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOtN,MAAM,eAAemN,OAAQ,OAoBvC2Z,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKnB,EAAQmB,OAAS,GAC7D,oCACE,yBAAKnD,UAAU,8CACb,kBAAC,GAAD,CACE+S,MAAO,MACP3S,MAAO,CACL4U,OAAQ,OACR3U,aAAc,iBACd8uB,YAAa,mBAEfnW,KAAK,SACL1Y,YAAY,WACZ8uB,SAAU,SAAC5vB,GAAD,OAAWuG,QAAQC,IAAIxG,IACjCE,SArFW,SAACsS,GAGtB,GAFA8c,EAAe9c,EAAEhE,OAAOxO,OAED,KAAnBwS,EAAEhE,OAAOxO,OACX,GAAImvB,EAASnoB,MAAQmoB,EAASnoB,KAAKrD,OAAS,EAAG,CAE7C,IAAMksB,EAAgBV,EAASnoB,KAAKpF,KAAI,SAACqI,GAAD,OAASA,EAAI3J,QACrD4uB,EAAWW,QAER,CACL,IAAMC,EACJttB,EAAQmB,OAAS,EACbnB,EAAQiB,QAAO,SAAC6V,GAChB,OAAOA,EAAOC,cAAcnY,SAASiuB,EAAY9V,kBAEjD,GAEN2V,EAAWY,QAwENttB,EAAQZ,KAAI,SAAAsK,GAAG,OACd,oCACE,kBAAC0iB,GAAD,CACEjqB,IAAKuH,EACL2d,QAASoF,EAAaltB,QAAQmK,IAAQ,EACtChM,SAAU,SAAA2pB,GAAO,OA7KV,SAAC3d,EAAK2d,GACzB,IAAMkG,EAAmBlG,EAAO,sBAAOoF,GAAP,CAAqB/iB,IAAO+iB,EAAaxrB,QAAO,SAAAusB,GAAC,OAAIA,IAAM9jB,KAG3F,GAFA8iB,EAAgBe,GAEZZ,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKosB,EAAiBpsB,OAAS,EAAG,CAC5E,IAAM4rB,EAAsBQ,EAAiBnuB,KAAI,SAACC,GAChD,IAAM2tB,EAAmBL,EAASnoB,KAAKjC,MACrC,SAACkF,GAAD,OAASA,EAAI3J,KAAKiZ,gBAAkB1X,EAAK0X,iBAE3C,GAAIiW,EACF,OAAOA,EAAiB1tB,MAG5BitB,EAAUQ,IAgKqBxd,CAAa7F,EAAK2d,KAEtC3d,UCjMTwL,GAAWC,KAAXD,OA2HOuY,GAzHA,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,QAAyC,KAAhCC,mBACRhd,mBAAS,KAD+B,mBAC/D5Q,EAD+D,KACtD0sB,EADsD,OAExB9b,mBAAS,IAFe,mBAE9Cid,GAF8C,aAG7B1f,GAAe,GAAI,aAHU,mBAG/D2f,EAH+D,KAGnDlB,EAHmD,KA2CtE,OApBA9e,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACU4e,EAAmB,IAD7B,QACXmB,EADW,SAIGA,EAAa5sB,OAAS,IAEnC6sB,EAAeD,EAAa3uB,KAAI,SAACqH,GACtC,MAAO,CACNjJ,MAAOiJ,EAAMnH,GACbxB,KAAM2I,EAAM3I,SAGd4uB,EAAWsB,IAZK,2CAAH,qDAgBfC,KACE,IAGF,oCAEC,8BAECH,EAAWxgB,WACX,yBAAKlP,MAAO,CACXoW,QAAS,SACTzD,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMD2a,EAAWvgB,QAAUugB,EAAWtpB,KAAKrD,OAAS,IAC9C,yBAAK/C,MAAO,CACX2S,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOtN,MAAM,iBAAiBmN,OAAQ,OAKvC8a,EAAWvgB,MAAQugB,EAAWtpB,MAAQspB,EAAWtpB,KAAKrD,OAAS,GAAKnB,EAAQmB,OAAS,GAErF,kBAAC,KAAD,CACCuV,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAAS1S,aAAc,OACvCC,YAAY,iBACZqY,iBAAiB,WACjBjZ,SA9EJ,SAAkBF,GACjBqwB,EAAmBrwB,GACnBkwB,EAAWlwB,IA6ER0wB,QArEJ,aAsEIxJ,OA1EJ,aA2EI0I,SAnEJ,SAAkBe,KAoEd1wB,aAAckwB,EACd/W,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F+W,EAAWvgB,MACXugB,EAAWtpB,KAAKrD,OAAS,GACzBnB,EAAQZ,KAAI,SAAC0X,GACZ,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,Y,UCtG3Cye,GAAWrf,IAAXqf,OAuJO6R,GA5II,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,eAAgBC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,mBAAgC,EACxD3d,mBAAS,IAD+C,mBAC/E5Q,EAD+E,KACtE0sB,EADsE,OAEhD9b,mBAAS,IAFuC,mBAE/Eic,EAF+E,KAElEC,EAFkE,OAIrC3e,GAAe,GAAI,qBAJkB,mBAI/E0P,EAJ+E,KAIhEC,EAJgE,KAMtFhQ,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACS8P,EAAwB,IADjC,QACf0Q,EADe,SAIEA,EAAgBrtB,OAAS,GAE/CurB,EAAW8B,GANS,2CAAH,qDAUnBrQ,KACE,IAsCH,OAJApa,QAAQC,IAAI,gBAAiB6Z,GAC7B9Z,QAAQC,IAAI,aAAchE,GAIzB,yBAAKhC,UAAU,oCAEb6f,EAAcvQ,WACd,yBAAKlP,MAAO,CACXoW,QAAS,SACTzD,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAKD0K,EAActQ,QAAUsQ,EAAcrZ,KAAKrD,OAAS,IACpD,yBAAK/C,MAAO,CACX2S,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOtN,MAAM,oBAAoBmN,OAAQ,OAI1C6K,EAActQ,MAAQsQ,EAAcrZ,KAAKrD,OAAS,GAAKnB,EAAQmB,OAAS,GACxE,oCACC,yBAAKnD,UAAU,8CACd,kBAAC,GAAD,CACC+S,MAAO,OACP3S,MAAO,CACN4U,OAAQ,OACR3U,aAAc,iBACd8uB,YAAa,mBAEdnW,KAAK,SACL1Y,YAAY,kBACZ8uB,SAAU,SAAC5vB,GAAD,OAAWuG,QAAQC,IAAIxG,IACjCE,SAnEiB,SAACsS,GAGvB,GAFA8c,EAAe9c,EAAEhE,OAAOxO,OAED,KAAnBwS,EAAEhE,OAAOxO,OACZ,GAAIqgB,EAAcrZ,MAAQqZ,EAAcrZ,KAAKrD,OAAS,EAAG,CAExD,IAAMksB,EAAgBxP,EAAcrZ,KAAKpF,KAAI,SAACqI,GAAD,OAASA,EAAI3J,QAC1D4uB,EAAWW,QAEN,CACN,IAAMC,EACLttB,EAAQmB,OAAS,EACdnB,EAAQiB,QAAO,SAAC6V,GACjB,OAAOA,EAAOC,cAAcnY,SAASiuB,EAAY9V,kBAEhD,GAEJ2V,EAAWY,QAsDT,yBAAKlvB,MAAO,IAGV4B,EAAQmB,OAAS,GACjB,kBAAC,KAAD,CACCstB,WAAS,EACTC,YAAaJ,EACbK,SAzFU,SAACC,EAAcC,KA0FzBC,QArFS,SAACJ,EAAaG,GAC7B,IAAME,EAAaL,EAAYrH,SAAW,GAC1CgH,EAAeU,GACfR,EAAmBQ,IAmFbC,SAAUhvB,EACVivB,kBAAkB,EAClBC,eAAe,QC3CR5C,GAtFF,SAAC,GAGA,IAFV6C,EAES,EAFTA,cAES,KADTC,WAE8Bxe,mBAAS,KAD9B,mBACF5Q,EADE,KACO0sB,EADP,OAEoC9b,mBAAS,IAF7C,mBAEFye,EAFE,KAEcC,EAFd,OAG8BnhB,GAAe,GAAI,eAHjD,mBAGFwe,EAHE,KAGQC,EAHR,KAKT9e,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACa4e,EAAmB,CACxClpB,WAAY,CACRC,OAAQ,CACJoa,eAAe,MAJf,QACNkP,EADM,SAUMA,EAAW9rB,OAAS,IAE5B+rB,EAAaD,EAAW7tB,KAAI,SAACsK,GAC/B,OAAOA,EAAI5L,QAEf4uB,EAAWQ,IAfH,2CAAH,qDAoBbrJ,KACD,IAgCH,OACI,oCAEI,kBAAC,KAAD,CAAU3T,QAASyc,EAASrf,WACvBqf,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAK,kBAAC,KAAD,CAC1CkQ,KAAK,WACL/S,YAAY,kBACZd,MAAO6xB,EACP3xB,SApCK,SAAC6xB,GAKlB,GAJAD,EAAmBC,GAEnBxrB,QAAQC,IAAI,mBAAoBurB,GAE5B5C,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKouB,EAAYpuB,OAAS,EAAG,CACrE,IAAM4rB,EAAsBwC,EAAYnwB,KAAI,SAACC,GACzC,IAAM2tB,EAAmBL,EAASnoB,KAAKjC,MACnC,SAACkF,GAAD,OAASA,EAAI3J,KAAKiZ,gBAAkB1X,EAAK0X,iBAE7C,GAAIiW,EACA,OAAOA,KAGfjpB,QAAQC,IAAI,sBAAuB+oB,GACnCoC,EAAcpC,QAGdoC,EAAc,KAmBN/wB,MAAO,CAAE2S,MAAO,SAEf/Q,EAAQiB,QAAO,SAAAuuB,GAAC,OAAKH,EAAezwB,SAAS4wB,MAAIpwB,KAAI,SAAAC,GAAI,OACtD,kBAAC,KAAO6V,OAAR,CAAe/S,IAAK9C,EAAM7B,MAAO6B,GAC5BA,UCkMdowB,GAtQa,SAAC,GAOf,IANVC,EAMS,EANTA,YACAC,EAKS,EALTA,eACA/tB,EAIS,EAJTA,UACAnC,EAGS,EAHTA,SACAJ,EAES,EAFTA,KACAuwB,EACS,EADTA,UACS,EAGwCzhB,GAC7C,GACA,qBALK,mBAGkB0hB,GAHlB,aAOqBjf,mBAAS,IAP9B,mBAOOkf,GAPP,aAQyBlf,oBAAS,GARlC,mBAQSmf,GART,aASiCnf,mBAAS,IAT1C,mBASFof,EATE,KASaC,EATb,OAU6Crf,mBAASgf,GAVtD,mBAUFM,EAVE,KAUmBC,EAVnB,KAcTriB,qBAAU,WACNiiB,GAAa,GACS,uCAAG,4BAAA/hB,EAAA,sEACC6hB,EAAmB,CACrCnsB,WAAY,CACRE,aAAc,CACVtE,GAAIsC,MAJK,OACfzC,EADe,OAUrB2wB,EAAW3wB,GACX4wB,GAAa,GAXQ,2CAAH,oDAatBK,KACD,IAkBH,IAOMC,EAAoB,uCAAG,WAAO7yB,GAAP,yBAAAwQ,EAAA,yDACX,UAAVxQ,EADqB,oBAEJ,IAAbiC,EAFiB,iDAUf2B,EAJsB,WACxB,OAAOsuB,EAAYtwB,KAAI,SAAAC,GAAI,OAAIA,EAAKsF,OAAKpF,QAAQqC,GAGvC0uB,GAERhvB,EAAcC,OAAOC,OAAO,GAAIkuB,EAAYtuB,GAA9BG,OAAA,IAAAA,CAAA,GAA2ClC,EAA3C,CAAiDI,WAAYA,KAC3E8wB,EAbe,sBAaWb,EAAYjuB,MAAM,EAAGL,IAbhC,CAawCE,GAbxC,YAawDouB,EAAYjuB,MAAML,EAAQ,KACvGuuB,EAAeY,GAdM,wBAsBfnvB,EAJsB,WACxB,OAAOsuB,EAAYtwB,KAAI,SAAAC,GAAI,OAAIA,EAAKsF,OAAKpF,QAAQqC,GAGvC0uB,GAERhvB,EAAcC,OAAOC,OAAO,GAAIkuB,EAAYtuB,GAA9BG,OAAA,IAAAA,CAAA,GAA2ClC,EAA3C,CAAiDI,WAAYA,KAC3E8wB,EAzBe,sBAyBWb,EAAYjuB,MAAM,EAAGL,IAzBhC,CAyBwCE,GAzBxC,YAyBwDouB,EAAYjuB,MAAML,EAAQ,KACvGuuB,EAAeY,GA1BM,4CAAH,sDAgCpBC,EAAsC,SAACC,GACzC,IAAMjzB,EAAQ,GAQd,OANsB+D,OAAOwN,OAAO0hB,GACpBxP,SAAQ,SAAAyP,GAEpBlzB,EAAMuW,KAAK2c,MAGRlzB,EAAM4G,KAAK,MA4BhBusB,EAAiBtxB,GAAQkC,OAAOiC,KAAKnE,GAAM8B,OAAS,EAtBhC,SAACkF,GACvB,GAAIA,GAAWA,EAAQlF,OAAS,EAAG,CAC/B,IAAMwvB,EAAiB,GAevB,OAbAtqB,EAAQ4a,SAAQ,SAAA2P,GAEZ,GAAIrvB,OAAOwN,OAAO6hB,EAAYH,WAAWtvB,OAAS,GAAKyvB,EAAYjsB,IAAK,CACpE,IAAIksB,EAAgB,CAChBrzB,MAAOozB,EAAYjsB,IACnBrH,MAAM,GAAD,OAAKkzB,EAAoCI,EAAYH,YAAc,KAG5EE,EAAe5c,KAAK8c,OAKrBF,EAEN,OAAO,EAG8CG,CAAkBzxB,EAAKgH,SAAW,GAGhGtC,QAAQC,IAAI,iBAAkB2sB,GA6C9B,OA3BA7iB,qBAAU,WAiBN,GAAIoiB,EAAqB,CACrB,IAAMhqB,EAhBoB,SAAC5G,GAC3B,IAAM+G,KAAUhH,GAAQkC,OAAOiC,KAAKnE,GAAM8B,OAAS,IAAI9B,EAAKgH,QAC5D,GAAIA,EAAS,CACT,IAAM0qB,EAAY1qB,EAAQ9D,MAAK,SAAAquB,GAAW,OAAIA,EAAYjsB,MAAQrF,KAGlE,OAFAyE,QAAQC,IAAI,YAAa1E,MAErByxB,IAAaA,EAAU7qB,MAAM8qB,WACtBD,EAAU7qB,MAAM+qB,OAChBvqB,SAASqqB,EAAU7qB,MAAM+qB,OAC1BF,EAAU7qB,MAAM+qB,MAAQF,EAAU7qB,MAAM8qB,UAOxCE,CAAsBhB,GACpCD,EAAiB/pB,MAGtB,CAACgqB,IAIJnsB,QAAQC,IAAI,gBAAiBgsB,GAEzB,oCAEK3wB,GAAQkC,OAAOiC,KAAKnE,GAAM8B,OAAS,GAChC,yBAAKnD,UAAU,YAAYmE,IAAK,IAC5B,yBAAKnE,UAAU,6BACX,uBACIiS,QAAS,WACLogB,EAAqB,SAEzBryB,UAAU,qBAGd,uBAAGA,UAAU,eAAeyB,GAC5B,uBACIwQ,QAAS,WACLogB,EAAqB,UAEzBryB,UAAU,wBAMlB,yBAEI+N,IAAK1M,EAAI,OAAaA,EAAI,MAC1B4I,IAAI,MACJ7J,MAAO,CACH+V,OAAQ,aAGhB,yBAAKnW,UAAU,kBACX,4BAGKqB,EAAI,MAET,4BAEK2wB,GAAiB3wB,EAAI,OAIzBsxB,GAAkBA,EAAexvB,OAAS,GAAKwvB,EAAevxB,KAAI,SAAAsK,GAAG,OAClE,oCACI,0BACIuG,QAAS,kBA1FX,SAACkhB,GAC3BhB,EAAuBgB,GAEvB,IAIM/vB,EAHKsuB,EAAYtwB,KAAI,SAAAC,GAAI,OAAIA,EAAKsF,OAAKpF,QAAQqC,GAK/CN,EAAcC,OAAOC,OAAO,GAAIkuB,EAAYtuB,GAA9BG,OAAA,IAAAA,CAAA,GAA2ClC,EAA3C,CAAiDI,SAAU,KACzE8wB,EAAmB,sBAAOb,EAAYjuB,MAAM,EAAGL,IAA5B,CAAoCE,GAApC,YAAoDouB,EAAYjuB,MAAML,EAAQ,KACvGuuB,EAAeY,GA+E4Ba,CAAsB1nB,EAAIlM,QACzCQ,UAAWkyB,IAAwBxmB,EAAIlM,MAAQ,mDAAqD,wBACnGkM,EAAIpM,eCjM1B+zB,GApCY,SAAC,GAGd,IAFV1B,EAES,EAFTA,eACAD,EACS,EADTA,YAEA,OACI,yBACItxB,MAAO,CAEHkzB,cAAe,QAEnBtzB,UAAU,6CACV,yBAAKA,UAAU,qDACV0xB,GAAeA,EAAYvuB,OAAS,GAAKuuB,EAAYtwB,KAAI,SAAAC,GACtD,OAAO,kBAACkyB,GAAD,CACH5B,eAAgBA,EAChBD,YAAaA,EACb9tB,UAAWvC,EAAKsF,IAChBlF,SAAUJ,EAAKI,SACfJ,KAAMA,EACNuwB,UAAWvwB,EAAKuwB,iBAIrBF,EAAYvuB,OAAS,IACpB,yBAAK/C,MAAO,CACR8V,WAAY,SAEZ,kBAAC,GAAD,CAAOrO,MAAM,mBAAmBmN,OAAQ,UCG1D5E,IAFc0Q,KAAZD,QAEiBxQ,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,2CAInEE,GAAgB,CAClB5Q,KAAM,GACN0zB,YAAa,KACb9pB,UAAW,GACXC,QAAS,GACT/C,YAAa,IA6sBF6sB,GAjsBO,SAAC,GAAwH,IAAtHrT,EAAqH,EAArHA,sBAAuBC,EAA8F,EAA9FA,yBAAuCqT,EAAuD,EAApEhC,YAAyCiC,EAA2B,EAA3ChC,eAA2C,EAEzFxhB,GAAe,GAAI,aAFsE,mBAEnIyjB,EAFmI,KAElHC,EAFkH,OAG5GjhB,oBAAS,GAHmG,mBAGnI8L,EAHmI,KAG1HC,EAH0H,OAI1G/L,oBAAS,GAJiG,mBAInIyO,EAJmI,KAIzHJ,EAJyH,OAK1FrO,oBAAS,GALiF,mBAKjHuO,GALiH,aAM5EvO,oBAAS,GANmE,mBAMnIwO,EANmI,KAM1G6G,EAN0G,OAOlFrV,oBAAS,GAPyE,mBAOnIsO,EAPmI,KAO7GgH,EAP6G,OAQpGtV,mBAAS,IAR2F,mBAQnIkhB,EARmI,KAQtHzD,EARsH,OAS9Gzd,mBAAS,IATqG,mBASnImhB,EATmI,KAS3HxF,EAT2H,OAU5G3b,mBAAS,IAVmG,mBAUnI+c,EAVmI,KAU1HD,EAV0H,OAW5G9c,mBAAS,IAXmG,mBAWnIvK,EAXmI,KAW1H2rB,EAX0H,OAYlGphB,mBAAS,IAZyF,oBAYnIuV,GAZmI,MAYrHC,GAZqH,SAa5FxV,mBAAS,IAbmF,qBAanI0d,GAbmI,MAalHC,GAbkH,SAclG3d,mBAAS,IAdyF,qBAcnI6b,GAdmI,MAcrHD,GAdqH,SAexG5b,mBAAS,IAf+F,qCAgB5GA,mBAAS,KAhBmG,qCAiBpGA,mBAAS,KAjB2F,qBAiBnIhM,GAjBmI,MAiBtHqtB,GAjBsH,SAkBtGrhB,mBAAS,IAlB6F,qBAkBnIwe,GAlBmI,MAkBvHD,GAlBuH,SAmBpGve,mBAAS,IAnB2F,qBAmBnI8e,GAnBmI,MAmBtHC,GAnBsH,SAsBhH/e,mBAAS,CAC/BogB,QAAS,KACTC,MAAO,OAxB+H,qBAsBnI/qB,GAtBmI,MAsB5HgsB,GAtB4H,MAgCpIpjB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAhB,EAAA,6DAEX+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACtC,OAAOA,EAAMvI,MACZ,GAECwC,EAAW4tB,GAAYvuB,OAAS,EAAIuuB,GAAYtwB,KAAI,SAAAD,GACtD,MAAO,CACHwF,IAAKxF,EAAQwF,IACbirB,UAAWzwB,EAAQywB,UACnBnwB,SAAUN,EAAQM,aAErB,GAZY,SAeWoyB,EAAsB,CAC9C9xB,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBtiB,SAAUotB,EACVxuB,KAAMyuB,EACNtrB,MAAOknB,EACPznB,MAAOA,GACPtB,YAAaA,GACbutB,MAAOpjB,EAAOojB,MACd/rB,KAAM2I,EAAO3I,KACbyB,MAAOkf,EACPjlB,cA1BS,QAeXswB,EAfW,SAiC6B,OAAzBA,EAAc5xB,SAC/Bue,GAAwB,kBAExB4S,EAAc,CAAC,aACXryB,GAAI8yB,EAAa,KAAW,GAC5BjwB,IAAKiwB,EAAa,KAAW,GAC7Bt0B,KAAMs0B,EAAa,MAAY,GAC/BxtB,YAAawtB,EAAa,aAAmB,IAE1CA,IANM,mBAORV,KACLrT,GAAyB,GAEzBY,EAAY,IACZmH,GAAgB,IAChB4L,EAAW,IACXzF,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBvf,EAAQmY,aAMZnY,EAAQC,eAAc,GA5DL,2CAAH,wDAmElBnB,qBAAU,WACN,IAAK8jB,EAAe,UAAe,CAC/B,IAAMzkB,EAAQykB,EAAe,MAC7B,GAAIzkB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,GAIrDI,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACjCI,OAAOwN,OAAO5B,EAAK,OACnB,IACH8T,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP/P,GAAsB+P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACpBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACT/P,GAAsB+P,aAQ/C,CAACT,IAMJ9jB,qBAAU,WAEN,GAAIshB,GAAWjuB,OAAS,GACpB,GAAIiuB,GAAWjuB,OAASuuB,GAAYvuB,OAAQ,CACxC,IAAMyuB,EAAYR,GAAWA,GAAWjuB,OAAS,GAA/B,QAA6CA,OAAS,GAAKiuB,GAAWA,GAAWjuB,OAAS,GAA/B,QAA6C,GAA7C,IAC7E4C,QAAQC,IAAI,YAAa4rB,GAEzBD,GAAe,GAAD,mBAAKD,IAAL,gBACPN,GAAWA,GAAWjuB,OAAS,GADxB,CAEVwD,IAAKyqB,GAAWA,GAAWjuB,OAAS,GAA/B,GACLyuB,UAAWA,EACXnwB,SAAU,YAKb,GAAI2vB,GAAWjuB,OAASuuB,GAAYvuB,OAAQ,CAC7C4C,QAAQC,IAAI,aAAcorB,IAC1BrrB,QAAQC,IAAI,cAAe0rB,IAE3B,IAAM6C,EAAiB7C,GAAYzuB,QAAO,SAAA5B,GACtC,IAAImzB,GAAS,EAMb,OALApD,GAAWnO,SAAQ,SAAA9hB,GACXA,EAAQG,KAAOD,EAAKsF,MACpB6tB,GAAS,MAGVA,KAEX7C,GAAe4C,SAMnB5C,GAAe,MAKpB,CAACP,KAOJ,IAAM9H,GAAe,SAACtX,GAClBqO,GAAyB,IAqF7B,OACI,kBAAC,IAAD,CACIjP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAGTG,UAAW,CACP5S,OAAQ,EACRyE,QAAS,GAEbzD,MAAO,OACPlL,MAAM,iBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,WAKd,6BAASlqB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,kDAIA,yBAAKA,UAAW+Q,EAAOjR,MAAQiR,EAAOjR,KAAKqD,OAAS,EAAI,mBAAqB,aACzE,kBAACgc,GAAA,EAAD,QAGR,yBAAKnf,UAAU,sCACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBmiB,EAAgBzkB,MAAhB,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBmiB,EAAgBzkB,MAAhB,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAIxB,wBAAI3R,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACR2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACI2iB,OAAQC,KACRluB,KAAMI,GACN+tB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpBZ,GAAeztB,IAEnBkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OA8BlC,yBAAKr0B,MAAO,CACR+a,aAAc,UAqClB,yBAAKnb,UAAU,yDACX,qCAGA,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,wEACX,kBAAC80B,GAAD,CACIx1B,MAAM,UACNE,MAAO0I,GAAM8qB,QACblzB,KAAK,UACLJ,SAAU,SAACsS,GAAD,OAAOkiB,GAAS,eACnBhsB,GADkB,CAErB8qB,QAAShhB,EAAEhE,OAAOxO,aAM9B,yBAAKQ,UAAU,yEAEX,kBAAC80B,GAAD,CACIx1B,MAAM,QACNE,MAAO0I,GAAM+qB,MACbnzB,KAAK,QACLJ,SAAU,SAACsS,GAAD,OAAOkiB,GAAS,eACnBhsB,GADkB,CAErB+qB,MAAOjhB,EAAEhE,OAAOxO,iBAyC5C,yBAAKQ,UAAU,kCACX,yBAAKA,UAAU,wCACX,wCAIA,yBAAKA,UAAWqI,GAAWA,EAAQlF,OAAS,EAAI,mBAAqB,aACjE,kBAACgc,GAAA,EAAD,QAKR,yBAAKnf,UAAU,sCAEX,wBAAIA,UAAU,mBAAd,YAGA,kBAAC+0B,GAAD,CACI5D,cAAeA,GACfC,WAAYA,KAGhB,yBAAKhxB,MAAO,CACR6V,UAAW,UAGf,wBAAIjW,UAAU,mBAAd,oBAIA,kBAACg1B,GAAD,CACItD,YAAaA,GACbC,eAAgBA,OAQ5B,yBAAK3xB,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIqW,UAAU,OAAOxO,MAAO,uFACxB,uBAAG8O,KAAK,OACJ,kBAACyT,GAAA,EAAD,SAIZ,yBAAKpqB,UAAU,sCAIX,yBAAKA,UAAU,gCACVqhB,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GACxC,OACI,yBAAKpD,UAAU,sCACX,yBACIA,UAAU,kDACViS,QAAS,kBAAMmW,GAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,kBAxX9C,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GAkX+DC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIHiD,KAAiBte,EAAMvI,KAInB6mB,IAA0B,IAAV/kB,IAHjB,0BAAMpD,UAAU,4CACZ,kBAACmlB,GAAA,EAAD,WAYxB,kBAAC,KAAD,CACItd,MAAO,iBAEP,yBACIoK,QAAS,WACL0M,GAAW,GACXuJ,GAAwB,GACxBD,GAA2B,IAE/BjoB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,aAa5B,yBAAKxgB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,0CAIA,kBAAC,KAAD,CACIgW,MAAM,MACN0I,QAASkV,EAAgBzkB,MAAhB,kBAAgD2kB,EAAY3wB,OAAS,GAC9EkT,UAAU,OAAOxO,MAAO,gCACxB,yBAAK7H,UAAa8zB,EAAY3wB,OAAS,GAC/BywB,EAAgBzkB,MAAhB,eAA2DykB,EAAgBzkB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACgQ,GAAA,EAAD,SAKZ,yBAAKnf,UAAU,mDACX,kBAAC,GAAD,CACIuwB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMhC,yBAAKrwB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIwuB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,OAK3B,yBAAKvuB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CAAQ0vB,WAAYA,UAa5C,kBAAC,GAAD,CACI/Q,WAAYA,EACZD,QAASA,EACTuC,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SClrB1C7E,IAXiBhM,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAUzC8L,KAAxBD,QACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAA0B,IAAxBhY,EAAuB,EAAvBA,KAAMunB,EAAiB,EAAjBA,WAAiB,EACRnb,oBAAS,GADD,mBAC/B8L,EAD+B,KACtBC,EADsB,OAEoB/L,oBAAS,GAF7B,mBAE/BgM,EAF+B,KAERC,EAFQ,OAGS1O,GAAe,GAAI,gBAH5B,mBAGf8kB,GAHe,WAKhC5f,EAAUC,eAGV4f,EAAe,uCAAG,WAAO5zB,GAAP,iBAAA0O,EAAA,sEACOilB,EAAqB,CAC5CvvB,WAAY,CACRE,aAAc,CACVtE,SAJQ,QACd6zB,EADc,SAYwB,OAAxBA,EAAa3yB,SAvDRyc,EAwDG,iBAvDhCC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAqDjCof,EAAa5uB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnDysB,EAAWqH,IAfK,iCA3CI,IAACnW,IA2CL,OAAH,sDAiCrB,OACI,oCACI,kBAAC,KAAD,CAMIjG,KAAK,QAEL6D,WAAYrW,GAGZ,kBAAC,GAAD,CACIqB,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,wBAA8BoH,EAAO7b,KACrCud,EAAyB1B,IAE7BpP,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAM5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCAEI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,wBAA8BoH,EAAO7b,KAErCud,EAAyB1B,IAE7B/c,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAEX1O,OAQjB,kBAAC,GAAD,CACII,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBAkCd,kBAAC,GAAD,CAEIA,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,kBAAC,KAAD,CAAOnE,KAAK,UACR,uBAAGrC,KAAK,MACJ,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,qBAC3B,0BAAM7H,UAAU,WAAWiS,QAAS,WAChC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAOZ,kBAAC,KAAD,CACIC,UAAW,kBAAM0V,EAAgB/X,EAAO7b,KACxCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACI1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAavBf,GAAyB,kBAAC,GAAD,CACtBkP,QAAStnB,EACTunB,WAAYA,EACZpP,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MA8GXyW,GApGC,SAAC,GAAgB,qBAGCziB,mBAAS,IAHX,mBAGrBkb,EAHqB,KAGZC,EAHY,OAKW5d,GAAe,GAAI,cAL9B,mBAKrBwe,EALqB,KAKXC,EALW,KAQ5B9e,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACO4e,EAAmB,IAD1B,OACNtpB,EADM,OAGZyoB,EAAWzoB,GAHC,2CAAH,qDAKbugB,KACD,IAfyB,MAmB8BjT,oBAAS,GAnBvC,mBAmBrBwN,EAnBqB,KAmBEC,EAnBF,KA8C5B,OACI,oCAEI,yBAAKrgB,UAAU,yBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uCAAd,WAIA,kBAAC,GAAD,CACIsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,mBACZ8uB,SAAU,SAAA5vB,GAAK,OAtBlB,SAACA,GAClB,GAAImvB,EAASnoB,KAAKrD,OAAS,EAAG,CAC1B,IAAMmyB,EAAa3G,EAASnoB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACvFgV,EAAWuH,IAmBwB/U,CAAa/gB,OAGxC,kBAAC,IAAD,CAEIQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJ5C,YASJ,yBAAKrgB,UAAU,uCACV2uB,EAASpf,MAAQue,EAAQ3qB,OAAS,GAAK,kBAAC,GAAD,CACpC4qB,WAAYA,EACZvnB,KAAMsnB,IACTa,EAASrf,WAAa,kBAACmR,GAAD,MAGtBkO,EAASpf,QAAUue,EAAQ3qB,OAAS,IACjC,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,kBAAkBiD,MAAOkL,KAAMK,4BAMlE,kBAACmgB,GAAD,CACI7D,YAAa5D,EACb6D,eAAgB5D,EAChB3N,sBAAuBA,EACvBC,yBAA0BA,MCvS3BmV,GAhEQ,SAAC,GAGV,IAFV5xB,EAES,EAFTA,UACAnC,EACS,EADTA,SAGM4T,EAAUC,eAFP,EAIwCnF,GAC7C,GACA,qBANK,mBAIFyf,EAJE,KAIkBiC,EAJlB,KA2BT,OAlBA/hB,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACf6hB,EAAmB,CACrBnsB,WAAY,CACRE,aAAc,CACVtE,GAAIsC,MAJK,2CAAH,qDAUtBwuB,KACD,IAGHrsB,QAAQC,IAAI,2BAA4B4pB,GAIpC,kBAAC,KAAD,CACIlC,UAAW,CAAEhN,KAAM,GACnBxO,QAAS0d,EAAmBtgB,WAC3BsgB,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GACtE,oCACI,yBAAKnD,UAAU,2BACX,yBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,yBAA+BnS,KAC9C5D,UAAU,kCACV,yBAAK+N,IAAK6hB,EAAmBppB,KAAKO,MAAOkD,IAAI,MAEjD,yBAAKjK,UAAU,iCACX,wBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,yBAA+BnS,MAE7CgsB,EAAmBppB,KAAK1G,MAE7B,4BACK8vB,EAAmBppB,KAAK0B,OAE7B,yCACezG,QCgU5B4qB,IA9WiB/P,KAAxBD,OAAwBC,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACkBxC,GAAe,GAAI,gBADrC,mBAC9Byf,EAD8B,KACV6F,EADU,KAG/B9vB,EAASgnB,eACTtX,EAAUC,eACV1R,EAAY+B,EAAM,GALa,EAMeiN,oBAAS,GANxB,6BASrC9C,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfylB,EAAyB,CAC3B/vB,WAAY,CACRE,aAAc,CACVtE,GAAIsC,MAJK,2CAAH,qDAUtB8xB,KAED,CAAC9xB,IAKJmC,QAAQC,IAAI,qBAAsB4pB,GAElC7pB,QAAQC,IAAI,cAAeL,GAE3B,IA+BMunB,EAAM0C,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQopB,EAAmBppB,KAAnB,MA/BvC,SAAC2mB,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK/rB,KAAI,SAAAC,GAAI,OAAIA,EAAK0F,SAC7B,IAAMqmB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKlK,SAAQ,SAAC5hB,EAAM+B,GACZiqB,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,sBAA4BF,EAAQE,IAApC,CAAmDjsB,IAElD+rB,EAAQE,GAAgB,CAACjsB,GAE9BgsB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACfvnB,QAAQC,IAAI,aAAcqnB,OAI3BD,EAI0FG,CAAmBqC,EAAmBppB,KAAnB,OAAoC,GAI5J,OADAT,QAAQC,IAAI,eAAgB4pB,GAExB,yBAAK5vB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,6CAIC4vB,EAAmBrgB,MAAQqgB,EAAmBppB,MAASjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GAClG,sCAiBR,kBAAC,KAAD,CACIsqB,QAAM,EAACC,UAAW,CAAEhN,KAAM,GAC1BxO,QAAS0d,EAAmBtgB,WAC3BsgB,EAAmBrgB,MAAQqgB,EAAmBppB,QAAUjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,IACnG,kBAAC,KAAD,CAAOyD,YAAY,0BAA0BiD,MAAOkL,KAAMK,yBAG7Dwa,EAAmBrgB,MAAQqgB,EAAmBppB,MAASjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GAClG,oCACI,yBAAKnD,UAAU,gCACX,yBAAKA,UAAU,mGACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,OAAoCopB,EAAmBppB,KAAnB,YAA2CyD,IAAI,MAEjG,yBAAKjK,UAAU,qCACX,4BACK4vB,EAAmBppB,KAAnB,MAEL,4BACKopB,EAAmBppB,KAAnB,OAGJopB,EAAmBppB,KAAnB,aACG,4BACCopB,EAAmBppB,KAAnB,aA2BJopB,EAAmBppB,KAAnB,KACG,mCAEI,8BACKopB,EAAmBppB,KAAnB,MAsBZopB,EAAmBppB,KAAnB,UAAuCopB,EAAmBppB,KAAnB,SAAoCrD,OAAS,GAChF,oCACG,0CAECysB,EAAmBppB,KAAnB,SAAoCpF,KAAI,SAAAqI,GACrC,OACI,0BACIwI,QAAS,kBAAMoD,EAAQU,KAAR,0BAAgCtM,EAAInI,OAGlDmI,EAAI3J,aAahC8vB,EAAmBppB,KAAnB,MACG,oCACI,yBAAKxG,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,MAAmCopB,EAAmBppB,KAAnB,KAAiCyD,IAAI,OAK1F,yBAAK7J,MAAO,CACR+a,aAAc,WAOzByU,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GAAKysB,EAAmBppB,KAAnB,UACtG,yBAAKxG,UAAU,iCACX,yCAQR,yBAAKA,UAAU,8BACV4vB,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQopB,EAAmBppB,KAAnB,YAAyCopB,EAAmBppB,KAAnB,SAAoCrD,OAAS,IACzI,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,qCAAqCiD,MAAOkL,KAAMK,0BAI5Ewa,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GACjG,oCACKysB,EAAmBppB,KAAnB,UAAuCopB,EAAmBppB,KAAnB,SAAoCrD,OAAS,GACjFysB,EAAmBppB,KAAnB,SAAoCpF,KAAI,SAAAD,GACpC,OACI,kBAAC,GAAD,CACIM,SAAUN,EAAQM,SAClBmC,UAAWzC,EAAO,WAO7CyuB,EAAmBppB,KAAnB,OAAoCopB,EAAmBppB,KAAnB,MAAiCrD,OAAS,GAC3E,oCACI,yBAAKnD,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACVktB,GAAO3pB,OAAOiC,KAAK0nB,GAAK9rB,KAAI,SAAA4b,GACzB,OACI,yBAAKhd,UAAU,qBACVktB,EAAIlQ,IAAWkQ,EAAIlQ,GAAQ5b,KAAI,SAAA0I,GAC5B,OAAO,yBAAKiE,IAAKjE,EAAK1J,MAAO,CACzB2S,MAAO,oBAcvC,yBAAK3S,MAAO,CACR+a,aAAc,WAKzByU,EAAmBppB,KAAnB,OAAoCjD,OAAOiC,KAAKoqB,EAAmBppB,KAAnB,OAAkCrD,OAAS,GACxF,oCACI,yBAAKnD,UAAU,iCACX,sCAKJ,yBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,uBAA6B6Z,EAAmBppB,KAAnB,YAE5CxG,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,aAA6CopB,EAAmBppB,KAAnB,YAA2CyD,IAAI,MAE1G,yBAAKjK,UAAU,oCACX,4BACK4vB,EAAmBppB,KAAnB,YAEL,4BACKopB,EAAmBppB,KAAnB,qBAKb,yBAAKpG,MAAO,CACR+a,aAAc,WAMzByU,EAAmBppB,KAAnB,iBAA8CjD,OAAOiC,KAAKoqB,EAAmBppB,KAAnB,iBAA4CrD,OAAS,GAC5G,oCACI,yBAAKnD,UAAU,iCACX,iDAKJ,yBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,0BAAgC6Z,EAAmBppB,KAAnB,sBAC/CxG,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,uBAAuDopB,EAAmBppB,KAAnB,sBAAqDyD,IAAI,MAE9H,yBAAKjK,UAAU,oCACX,4BACK4vB,EAAmBppB,KAAnB,sBAEL,4BACKopB,EAAmBppB,KAAnB,+BAKb,yBAAKpG,MAAO,CACR+a,aAAc,gBCxV5C/K,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAchE8T,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAKvCtF,GAAgB,CACrB5Q,KAAM,GACNsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ9d,MAAO,GACPhI,IAAK,GACLkF,MAAO,IAiZOgkB,GApYK,SAAC,GAAyF,IAAvF3K,EAAsF,EAAtFA,sBAAuBC,EAA+D,EAA/DA,yBAA0BsV,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAA0B,EAEzDzlB,GAAe,GAAI,YAFsC,mBAErGib,EAFqG,KAEnFC,EAFmF,OAG9EzY,oBAAS,GAHqE,gCAI5EA,oBAAS,IAJmE,mBAIrGyO,EAJqG,KAI3FJ,EAJ2F,OAKpErO,oBAAS,GAL2D,mBAKrG+Y,EALqG,KAKvFC,EALuF,OAMpEhZ,mBAAS,IAN2D,mBAMrGuV,EANqG,KAMvFC,EANuF,OAOrFxV,mBAAS,IAP4E,mBAOrGtN,EAPqG,KAOhGugB,EAPgG,OAQjFjT,mBAAS,IARwE,mBAQrGiW,EARqG,KAQ9FC,EAR8F,KAUtGhY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,6DAGd+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACzC,OAAOA,EAAMvI,MACT,GALe,SAQM+pB,EAAuB,CAEhDtpB,KAAM,CACLjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,YACpBrH,KAAMwR,EAAOxR,KACbsK,MAAOkf,EACPhiB,MAAOohB,GAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDzB,UAAWvW,EAAOuW,UACNE,gBAAiBzW,EAAOyW,gBACpCE,SAAUpiB,EAAKc,KAAK,KAGpB6iB,GAAI,CACH3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,EAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpBpiB,YAAamK,EAAOsW,kBA1BH,QAQdwO,EARc,SAgCsB,OAAvBA,EAAYrzB,QAtFAyc,OAuF9B8B,EAtFF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAqF1C4f,EAAa,CAAC,aACbt0B,GAAIu0B,EAAW,IAAU,GACzB1xB,IAAK0xB,EAAW,IAAU,GAC1B/1B,KAAM+1B,EAAW,MAAY,GAC7BjvB,YAAaivB,EAAW,aAAmB,IAExCA,IANQ,mBAOPF,KAEL3kB,EAAQmY,YACR9I,GAAyB,IAGzBiE,KAGDtT,EAAQC,eAAc,GAnDF,iCAtDU,IAACgO,IAsDX,OAAH,wDA6DZqK,EAAe,SAACtX,GACrBqO,GAAyB,IAIpBnP,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GAiBtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAEN3c,MAAM,gBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAa,kBACbH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgB2Z,EAAiBjc,MAAjB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgB2Z,EAAiBjc,MAAjB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,sEACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgB2Z,EAAiBjc,MAAjB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgB2Z,EAAiBjc,MAAjB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLQ,YAAa,gBACbV,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,yEACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgB2Z,EAAiBjc,MAAjB,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgB2Z,EAAiBjc,MAAjB,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBACCvR,MAAO,CACN6V,UAAW,UAKb,yBAAKjW,UAAU,gCAEdI,MAAO,CACN+a,aAAc,SAGf,wBAAInb,UAAU,mBAAd,WAKD,yBAAKA,UAAU,gCACbqhB,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,kBAAMmW,EAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,kBAlJM,SAAC3Q,GAE3B,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAGrB2f,EAAYqJ,GA4IcC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIAiD,IAAiBte,EAAMvI,KAInB6mB,GAA0B,IAAV/kB,IAHpB,0BAAMpD,UAAU,4CACf,kBAACmlB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACCtd,MAAO,iBAEP,yBACCoK,QAAS,WACR2Z,GAAgB,IAEjB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,UAYJ,kBAACthB,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgB2Z,EAAiBjc,MAAjB,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgB2Z,EAAiBjc,MAAjB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgB2Z,EAAiBjc,MAAjB,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgB2Z,EAAiBjc,MAAjB,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgB2Z,EAAiBjc,MAAjB,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgB2Z,EAAiBjc,MAAjB,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,IAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,EACTxjB,KAAMujB,KAMP,kBAAC,GAAD,CACClK,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SCxavB9Q,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAKnEuQ,GAA0B,SAAC9B,GAC7BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAK7CsO,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACTsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ9d,MAAO,GACPhI,IAAK,GACLkF,MAAO,IA+kBOgkB,GAjkBK,SAAC,GAIN,IAJQ+K,EAIT,EAJSA,gBACnBC,EAGU,EAHVA,iBAAkBC,EAGR,EAHQA,oBAClBL,EAEU,EAFVA,UACAC,EACU,EADVA,aACU,EAEyCzlB,GAAe,GAAI,eAF5D,mBAEHib,EAFG,KAEeC,EAFf,OAGqElb,GAAe,GAAI,6BAHxF,mBAG6Bob,GAH7B,aAIiEpb,GAAe,GAAI,2BAJpF,mBAI2Bqb,GAJ3B,aAKyErb,GAAe,GAAI,+BAL5F,gCAMqEA,GAAe,GAAI,8BANxF,mBAM6Bsb,GAN7B,aAOqEtb,GAAe,GAAI,6BAPxF,mBAO6Bub,GAP7B,aAUsB9Y,oBAAS,GAV/B,mBAUHyO,EAVG,KAUOJ,EAVP,OAW8BrO,oBAAS,GAXvC,mBAWH+Y,EAXG,KAWWC,EAXX,OAY8BhZ,mBAAS,IAZvC,mBAYHuV,EAZG,KAYWC,EAZX,OAaoCxV,mBAAS,IAb7C,mBAaHiZ,EAbG,KAacC,EAbd,OAcUlZ,mBAAS,IAdnB,mBAcNtN,EAdM,KAcDugB,EAdC,OAecjT,mBAAS,IAfvB,oBAeNiW,GAfM,MAeCC,GAfD,MAoBVhZ,qBAAU,WACN,GAAIgmB,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,EAAG,CAE5D,IAAMgL,EAAS2nB,EAAgBjsB,MAC3BsE,GAAUA,EAAOhL,OAAS,IAC1B8d,EAAY9S,GACZ2d,EAAmB3d,IAGnB2nB,EAAgB/uB,OAAS+uB,EAAgB/uB,MAAhB,KAEzBka,EAAY,CAAC6U,EAAgB/uB,OAAlB,mBAA4BoH,KACvCia,EAAgB0N,EAAgB/uB,MAAhB,QAIzB,CAAC+uB,IAGJhmB,qBAAU,WAEFuR,GAAYA,EAAS,IAAMA,EAASle,OAAS,GAEzCglB,IAAiB9G,EAAS,GAAG/f,KAC7B8mB,EAAgB/G,EAAS,GAAG/f,IAC5ByqB,GAAyB1K,EAAS,OAK3C,CAACA,IAGJ,IAAM2K,GAAuB,uCAAG,WAAM1qB,GAAN,SAAA0O,EAAA,sEACtByb,EAAqC,CACvC/lB,WAAY,CACRE,aAAc,CACVqmB,QAAS3qB,EACT4qB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,OANR,2CAAH,sDAmBvByqB,GAAwB,uCAAG,WAAMliB,GAAN,eAAAmG,EAAA,sEAEF0b,EAAqC,CAC5DhmB,WAAY,CACRE,aAAc,CACVqmB,QAASpiB,EAAMvI,GACf4qB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,OAPP,QAEvB6qB,EAFuB,SAce,OAAxBA,EAAa3pB,OAC7Bue,GAAwB,uBAgBxBuD,GAAsB,mDA/BG,2CAAH,sDAwCxBxT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,yDAEjBjK,QAAQC,IAAI,oBAAqBqb,KAE7ByU,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GAJ5C,uBAMPgL,EAASkT,GAAYA,EAASle,OAAS,EAAIke,EAASjgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAM,IAEtE,IAAM6M,EAAOhL,OAAS,GARpB,gCASHooB,EAAqC,CACvC7lB,WAAY,CACRE,aAAc,CACVsmB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,KAGhCS,KAAM,CACF8H,MAAOsE,KAjBN,mCAqBJA,EAAO,IAAMA,EAAOhL,OAAS,GArBzB,kCAsBHqoB,EAAmC,CACrC9lB,WAAY,CACRE,aAAc,CACVqmB,QAAS9d,EAAO,GAAG7M,GACnB4qB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,OA3B3B,yBAqCY+pB,EAAuB,CAChD3lB,WAAY,CACRE,aAAc,CACVtE,GAAIw0B,EAAgBx0B,KAG5BS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,eA7CX,SAqCXqvB,EArCW,SAkD+B,OAA1BA,EAAezzB,QACjCuD,QAAQC,IAAI,iBAAiBiwB,GAE7BL,EAAa,CAAC,eACPE,EADK,CAEpBx0B,GAAI20B,EAAc,IAAU,GAC5B9xB,IAAK8xB,EAAc,IAAU,GAC7Bn2B,KAAMm2B,EAAc,MAAY,GAChCrvB,YAAaqvB,EAAc,aAAmB,IAE3CA,IAPiB,mBAQhBN,KAEI5U,GAAwB,kBACxBiV,GAAoB,GAgBpBhlB,EAAQmY,aAIR7E,KAGJtT,EAAQC,eAAc,GAvFL,4CAAH,wDAiGZqY,GAAe,SAACtX,GAClBgkB,GAAoB,IAIlB9kB,GAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GAuCzB,OAnBApL,QAAQC,IAAI,WAAYqb,GAGxBvR,qBAAU,WAEN,GAAGgmB,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,EAAE,CAC1D,IAAMukB,EAAWoO,EAAgBpO,UAAYoO,EAAgBpO,SAAS7hB,MAAM,KAE5EE,QAAQC,IAAI,gBAAgB0hB,GAE5B,IAAMC,EAAamO,EAAgB7M,IAAM6M,EAAgB7M,GAAhB,UAAkC6M,EAAgB7M,GAAhB,SAA+BpjB,MAAM,KAChHggB,EAAQ6B,GACRoB,GAAUnB,MAGhB,IAEF5hB,QAAQC,IAAI,YAAY8vB,GAGpB,kBAAC,IAAD,CACI1kB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GAEFolB,EAFE,GAGAA,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GAAK,CAC/DokB,YAAauO,EAAe,IACzBA,EAAe,GAAOxO,WACtBwO,EAAe,GAAOxO,UACzBG,kBAAmBqO,EAAe,IAAWA,EAAe,GAAOtO,iBAAmBsO,EAAe,GAAOtO,gBAC5GJ,OAAQ0O,EAAe,IAAUA,EAAe,GAAOh2B,MAAQg2B,EAAe,GAAOh2B,KACrFunB,cAAeyO,EAAe,IAAUA,EAAe,GAAOlvB,aAAekvB,EAAe,GAAOlvB,gBAK9G,gBACG2K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAET3c,MAAM,aACN6W,QAASqX,EACTtR,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAGvD,kBAACjS,EAAD,CACbI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAa,kBACbH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgB2Z,EAAiBjc,MAAjB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgB2Z,EAAiBjc,MAAjB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,sEACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgB2Z,EAAiBjc,MAAjB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgB2Z,EAAiBjc,MAAjB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLQ,YAAa,gBACbV,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,yEACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgB2Z,EAAiBjc,MAAjB,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgB2Z,EAAiBjc,MAAjB,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAIG,yBACIvR,MAAO,CACH6V,UAAW,UAKnB,yBAAKjW,UAAU,gCAEXI,MAAO,CACH+a,aAAc,SAGlB,wBAAInb,UAAU,mBAAd,WAQJ,yBAAKA,UAAU,gCAEV81B,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GACtD,oCACKke,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GACxC,OACI,yBAAKpD,UAAU,sCACX,yBACIA,UAAU,kDACViS,QAAS,WACLmW,EAAgBve,EAAMvI,IACtByqB,GAAyBliB,KAG7B,yBAAKkE,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,YAxLtC,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GAmL4CC,CAAmB1gB,EAAMvI,IACzB0qB,GAAwBniB,EAAMvI,KAIlCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIHiD,IAAiBte,EAAMvI,KAInB6mB,GAA0B,IAAV/kB,IAHjB,0BAAMpD,UAAU,4CACZ,kBAACmlB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACItd,MAAO,iBAEP,yBACIoK,QAAS,WACL2Z,GAAgB,IAEpB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,WAWxB,kBAACthB,EAAD,CACpBI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgB2Z,EAAiBjc,MAAjB,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgB2Z,EAAiBjc,MAAjB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgB2Z,EAAiBjc,MAAjB,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgB2Z,EAAiBjc,MAAjB,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgB2Z,EAAiBjc,MAAjB,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgB2Z,EAAiBjc,MAAjB,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,IAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,GACTxjB,KAAMujB,MAMW,kBAAC,GAAD,CACIlK,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVwK,gBAAiBA,EACjBC,mBAAoBA,EACpB5K,sBAAsB,SCpnB1C7E,GAAWC,KAAXD,OACAkC,GAAWrf,IAAXqf,OA8BFC,GAAU,SAAC,GAAuC,IAAtChY,EAAqC,EAArCA,KAAKovB,EAAgC,EAAhCA,aAAgC,EACtBhjB,oBAAS,GADa,mBAC5C8L,EAD4C,KACpCC,EADoC,OAEM/L,oBAAS,GAFf,mBAE5CgM,EAF4C,KAEtBC,EAFsB,OAGA1O,GAAe,GAAI,eAHnB,mBAG1B+lB,GAH0B,aAIAtjB,oBAAS,GAJT,mBAK7CyC,GAL6C,UAKnCC,gBAIR6gB,EAAiB,uCAAG,WAAO70B,GAAP,iBAAA0O,EAAA,sEACKkmB,EAAuB,CAClDxwB,WAAY,CACVE,aAAc,CACZtE,SAJkB,QAClB80B,EADkB,SAUmB,OAA1BA,EAAe5zB,SA9CPyc,EA+CJ,gBA9C5BC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA4CnCqgB,EAAgB7vB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACtDs0B,EAAaS,IAbc,iCApCA,IAACpX,IAoCD,OAAH,sDAkBzB,OACI,oCACA,kBAAC,KAAD,CAMAjG,KAAK,QAEL6D,WAAYrW,GAER,kBAAC,GAAD,CACFqB,MAAM,GACLoV,UAAU,QACT9Y,IAAI,KACJ4O,MAAO,OAER/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACP,oCACE,yBACElL,QAAS,WAEPoD,EAAQU,KAAR,uBAA6BoH,EAAO7b,KACpCud,EAAyB1B,IAE3BpP,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CACjC4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAKhB,kBAAC,GAAD,CACCtO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEE,wBACElL,QAAS,WACPoD,EAAQU,KAAR,uBAA6BoH,EAAO7b,KAEpCud,EAAyB1B,IAE3B/c,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGT1O,OAQT,kBAAC,GAAD,CACGI,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAId,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBA6Bb,kBAAC,GAAD,CAEAA,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACR,uBAAGrC,KAAK,MACT,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,oBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,SAOC,kBAAC,KAAD,CAEAC,UAAW,kBAAM2W,EAAkBhZ,EAAO7b,KAC1CuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAElD,0BACE1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAYRf,GAA2B,kBAAC0X,GAAD,CAC5BX,UAAWnvB,EACXovB,aAAcA,EACdI,oBAAqBrX,EACrBoX,iBAAkBrX,EAClBoX,gBAAiBlX,MAyINlM,iBA7HM,SAAC,GAAqB,EAApB2C,QAAqB,IAAD,EAGRzC,mBAAS,IAHD,mBAGlC+iB,EAHkC,KAGxBC,EAHwB,OAMEzlB,GAAe,GAAI,aANrB,mBAMlC2f,EANkC,KAMtByG,EANsB,KASzCzmB,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACKumB,EAAqB,CACzC7wB,WAAW,CACTC,OAAQ,CACNsa,SAAU,QACVC,eAAgB,SALL,OACV7a,EADU,OAUhBuwB,EAAavwB,GAVG,2CAAH,qDAYf4qB,KACC,IAvBuC,MA2BgBrd,oBAAS,GA3BzB,mBA2BlCwN,EA3BkC,KA2BZC,EA3BY,KAsD1C,OACC,oCAIE,yBAAKrgB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,SAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,iBACZZ,SAAU,SAAAsS,GAAC,OAjCE,SAACxS,GACpB,GAAGswB,EAAWtpB,KAAKrD,OAAS,EAAG,CAC7B,IAAMkzB,EAAevG,EAAWtpB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBAC3F6c,EAAaS,IA8BM9V,CAAavO,EAAEhE,OAAOxO,WAInC,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJtC,YAWA,yBAAKrgB,UAAU,uCAWxB,yBAAKA,UAAU,uCACT8vB,EAAWvgB,MAAQomB,EAAUxyB,OAAS,GAAK,kBAAC,GAAD,CAC1CyyB,aAAcA,EAChBpvB,KAAMmvB,IACL7F,EAAWxgB,WAAa,kBAACmR,GAAD,MACxBqP,EAAWvgB,QAAUomB,EAAUxyB,OAAS,IAC9C,yBAAK/C,MAAO,CACX6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,iBAAkBiD,MAAOkL,KAAMK,4BAMlD,kBAAC,GAAD,CACMgL,sBAAuBA,EACvBC,yBAA0BA,EAC1BuV,aAAcA,EACdD,UAAWA,QCxUfvlB,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAKnEuQ,GAA0B,SAAC9B,GAC7BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAK7CsO,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACTsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ9d,MAAO,GACPhI,IAAK,GACLkF,MAAO,IAmkBOgkB,GAvjBK,SAAC,GAA0F,IAAxF+K,EAAuF,EAAvFA,gBAAiBC,EAAsE,EAAtEA,iBAAkBC,EAAoD,EAApDA,oBAAoBQ,EAAgC,EAAhCA,mBAAgC,EAEvDrmB,GAAe,GAAI,eAFoC,mBAEnGib,EAFmG,KAEjFC,EAFiF,OAG3Blb,GAAe,GAAI,6BAHQ,mBAGnEob,GAHmE,aAI/Bpb,GAAe,GAAI,2BAJY,mBAIrEqb,GAJqE,aAKvBrb,GAAe,GAAI,+BALI,gCAM3BA,GAAe,GAAI,8BANQ,mBAMnEsb,GANmE,aAO3Btb,GAAe,GAAI,6BAPQ,mBAOnEub,GAPmE,aAU1E9Y,oBAAS,GAViE,mBAUnGyO,EAVmG,KAUzFJ,EAVyF,OAWlErO,oBAAS,GAXyD,mBAWnG+Y,EAXmG,KAWrFC,EAXqF,OAYlEhZ,mBAAS,IAZyD,mBAYnGuV,EAZmG,KAYrFC,EAZqF,OAa5DxV,mBAAS,IAbmD,mBAanGiZ,EAbmG,KAalFC,EAbkF,OActFlZ,mBAAS,IAd6E,mBActGtN,EAdsG,KAcjGugB,EAdiG,OAelFjT,mBAAS,IAfyE,mBAetGiW,GAfsG,KAe/FC,GAf+F,KAoB1GhZ,qBAAU,WACN,GAAIgmB,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,EAAG,CAE5D,IAAMgL,EAAS2nB,EAAgBjsB,MAC3BsE,GAAUA,EAAOhL,OAAS,IAC1B8d,EAAY9S,GACZ2d,EAAmB3d,IAGnB2nB,EAAgB/uB,OAAS+uB,EAAgB/uB,MAAhB,KAEzBka,EAAY,CAAC6U,EAAgB/uB,OAAlB,mBAA4BoH,KACvCia,EAAgB0N,EAAgB/uB,MAAhB,QAIzB,CAAC+uB,IAGJhmB,qBAAU,WAEFuR,GAAYA,EAAS,IAAMA,EAASle,OAAS,GAEzCglB,IAAiB9G,EAAS,GAAG/f,KAC7B8mB,EAAgB/G,EAAS,GAAG/f,IAC5ByqB,GAAyB1K,EAAS,OAK3C,CAACA,IAGJ,IAAM2K,GAAuB,uCAAG,WAAM1qB,GAAN,SAAA0O,EAAA,sEACtByb,EAAqC,CACvC/lB,WAAY,CACRE,aAAc,CACVqmB,QAAS3qB,EACT4qB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,OANR,2CAAH,sDAmBvByqB,GAAwB,uCAAG,WAAMliB,GAAN,eAAAmG,EAAA,sEAEF0b,EAAqC,CAC5DhmB,WAAY,CACRE,aAAc,CACVqmB,QAASpiB,EAAMvI,GACf4qB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,OAPP,QAEvB6qB,EAFuB,SAce,OAAxBA,EAAa3pB,OAC7Bue,GAAwB,uBAgBxBuD,GAAsB,mDA/BG,2CAAH,sDAwCxBxT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,yDAEjBjK,QAAQC,IAAI,oBAAqBqb,KAE7ByU,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GAJ5C,uBAMPgL,EAASkT,GAAYA,EAASle,OAAS,EAAIke,EAASjgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAM,IAEtE,IAAM6M,EAAOhL,OAAS,GARpB,gCASHooB,EAAqC,CACvC7lB,WAAY,CACRE,aAAc,CACVsmB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,KAGhCS,KAAM,CACF8H,MAAOsE,KAjBN,mCAqBJA,EAAO,IAAMA,EAAOhL,OAAS,GArBzB,kCAsBHqoB,EAAmC,CACrC9lB,WAAY,CACRE,aAAc,CACVqmB,QAAS9d,EAAO,GAAG7M,GACnB4qB,WAAY,QACZ7hB,OAAQyrB,EAAgBx0B,OA3B3B,yBAqCY+pB,EAAuB,CAChD3lB,WAAY,CACRE,aAAc,CACVtE,GAAIw0B,EAAgBx0B,KAG5BS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,eA7CX,SAqCXqvB,EArCW,SAkD+B,OAA1BA,EAAezzB,QACjCuD,QAAQC,IAAI,iBAAiBiwB,GAC7BO,EAAmB,eACZV,EADW,GAGXG,IAEPlV,KACAiV,GAAoB,GAgBpBhlB,EAAQmY,aAIR7E,KAGJtT,EAAQC,eAAc,GAjFL,4CAAH,wDA2FZqY,GAAe,SAACtX,GAClBgkB,GAAoB,IAIlB9kB,GAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GAuCzB,OAnBApL,QAAQC,IAAI,WAAYqb,GAGxBvR,qBAAU,WAEN,GAAGgmB,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,EAAE,CAC1D,IAAMukB,EAAWoO,EAAgBpO,UAAYoO,EAAgBpO,SAAS7hB,MAAM,KAE5EE,QAAQC,IAAI,gBAAgB0hB,GAE5B,IAAMC,EAAamO,EAAgB7M,IAAM6M,EAAgB7M,GAAhB,UAAkC6M,EAAgB7M,GAAhB,SAA+BpjB,MAAM,KAChHggB,EAAQ6B,GACRoB,GAAUnB,MAGhB,IAEF5hB,QAAQC,IAAI,YAAY8vB,GAGpB,kBAAC,IAAD,CACI1kB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GAEFolB,EAFE,GAGAA,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GAAK,CAC/DokB,YAAauO,EAAe,IACzBA,EAAe,GAAOxO,WACtBwO,EAAe,GAAOxO,UACzBG,kBAAmBqO,EAAe,IAAWA,EAAe,GAAOtO,iBAAmBsO,EAAe,GAAOtO,gBAC5GJ,OAAQ0O,EAAe,IAAUA,EAAe,GAAOh2B,MAAQg2B,EAAe,GAAOh2B,KACrFunB,cAAeyO,EAAe,IAAUA,EAAe,GAAOlvB,aAAekvB,EAAe,GAAOlvB,gBAK9G,gBACG2K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAET3c,MAAM,aACN6W,QAASqX,EACTtR,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAGvD,kBAACjS,EAAD,CACbI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAa,kBACbH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgB2Z,EAAiBjc,MAAjB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgB2Z,EAAiBjc,MAAjB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,sEACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgB2Z,EAAiBjc,MAAjB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgB2Z,EAAiBjc,MAAjB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLQ,YAAa,gBACbV,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,yEACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgB2Z,EAAiBjc,MAAjB,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgB2Z,EAAiBjc,MAAjB,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAIG,yBACIvR,MAAO,CACH6V,UAAW,UAKnB,yBAAKjW,UAAU,gCAEXI,MAAO,CACH+a,aAAc,SAGlB,wBAAInb,UAAU,mBAAd,WAQJ,yBAAKA,UAAU,gCAEV81B,GAAmBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GACtD,oCACKke,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GACxC,OACI,yBAAKpD,UAAU,sCACX,yBACIA,UAAU,kDACViS,QAAS,WACLmW,EAAgBve,EAAMvI,IACtByqB,GAAyBliB,KAG7B,yBAAKkE,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,YAxLtC,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GAmL4CC,CAAmB1gB,EAAMvI,IACzB0qB,GAAwBniB,EAAMvI,KAIlCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIHiD,IAAiBte,EAAMvI,KAInB6mB,GAA0B,IAAV/kB,IAHjB,0BAAMpD,UAAU,4CACZ,kBAACmlB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACItd,MAAO,iBAEP,yBACIoK,QAAS,WACL2Z,GAAgB,IAEpB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,WAWxB,kBAACthB,EAAD,CACpBI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgB2Z,EAAiBjc,MAAjB,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgB2Z,EAAiBjc,MAAjB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgB2Z,EAAiBjc,MAAjB,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgB2Z,EAAiBjc,MAAjB,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgB2Z,EAAiBjc,MAAjB,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgB2Z,EAAiBjc,MAAjB,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,IAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,GACTxjB,KAAMujB,MAMW,kBAAC,GAAD,CACIlK,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVwK,gBAAiBA,EACjBC,mBAAoBA,EACpB5K,sBAAsB,SC9lB1C7E,GAAwBC,KAAxBD,OAqROgQ,IArRiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACcxC,GAAe,GAAI,eADjC,mBAC9Bmb,EAD8B,KACZmL,EADY,OAEkBtmB,GAAe,GAAI,iBAFrC,mBAE9BumB,EAF8B,KAEVC,EAFU,KAI/BhxB,EAASgnB,eACTtX,EAAUC,eACVqa,EAAUhqB,EAAM,GANe,EAOWiN,oBAAS,GAPpB,mBAO9BmjB,EAP8B,KAOZC,EAPY,OAQSpjB,oBAAS,GARlB,mBAQ9BkjB,EAR8B,KAQbU,EARa,KA6DrC,OAlDA1mB,qBAAU,YACc,uCAAG,4BAAAE,EAAA,sEACUymB,EAAuB,CAChD/wB,WAAY,CACRE,aAAc,CACVtE,GAAIquB,MAJG,QACbiH,EADa,SAYfJ,EAAmBI,GAIvB7wB,QAAQC,IAAI,iBAAiB4wB,GAhBV,2CAAH,qDAqBpBC,KAED,CAAClH,IAEJ7f,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACf2mB,EAAyB,CAC3BjxB,WAAY,CACRE,aAAc,CACVtE,GAAIquB,MAJK,2CAAH,qDAUtBmH,KAED,CAACnH,IAKJ5pB,QAAQC,IAAI,qBAAsB0wB,GAElC3wB,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBAKX,yBAAKA,UAAU,iCACX,4CAKCsrB,EAAiB/b,MAAQumB,GAAoBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GAChF,oCACI,kBAAC4zB,GAAD,CACIhB,iBAAkBA,EAClBC,oBAAqBA,EACrBF,gBAAiBA,EACjBU,mBAAoBA,IAExB,kBAAC,IAAD,CACIvkB,QAAS,kBAAM+jB,GAAoB,IACnCz2B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAWZ,kBAAC,KAAD,CACIkO,QAAM,EAACC,UAAW,CAAEhN,KAAM,GAC1BxO,QAASoZ,EAAiBhc,WACzBgc,EAAiB/b,MAAQumB,KAAqBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,IACjF,kBAAC,KAAD,CAAOyD,YAAY,iBAAiBiD,MAAOkL,KAAMK,yBAGpDkW,EAAiB/b,MAAQumB,GAAoBvyB,OAAOiC,KAAKswB,GAAiB3yB,OAAS,GAChF,yBAAKnD,UAAU,gCACX,yBAAKA,UAAU,+CACX,yBAAK+N,IAAK+nB,EAAe,OAAaA,EAAe,MAAf,MAAmC7rB,IAAI,MAEjF,yBAAKjK,UAAU,qCACX,4BACK81B,EAAe,MAEpB,4BACKA,EAAe,aAGnBA,EAAe,KACZ,mCAEI,8BACKA,EAAe,SAW5C,yBAAK91B,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACV02B,EAAmBpnB,WAAa,kBAACmR,GAAD,MAChCiW,EAAmBnnB,QAAUmnB,EAAmBlwB,KAAKrD,OAAS,IAC3D,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,oCAAoCiD,MAAOkL,KAAMK,0BAI3EshB,EAAmBnnB,MAAQmnB,EAAmBlwB,MAAQkwB,EAAmBlwB,KAAKrD,OAAS,GACpF,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAOfgG,KAAK,QAEL6D,WAAY6Z,EAAmBlwB,KAC/BsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAU5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OASjB,kBAAC,GAAD,CACII,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,YACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,+B,UC1J3Bg3B,GAjIE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,iBAAkBC,EAA+B,EAA/BA,cAAezE,EAAgB,EAAhBA,UAAgB,EAElB7f,mBAAS,IAFS,mBAE1DukB,EAF0D,KAExCC,EAFwC,KAG3DC,EAAoB5nB,GAAS,GAAI,GAAI,gBAAiB,IAHK,EAMvBmD,mBAAS,CAC/C9S,KAAM2yB,EAAU3yB,KAChBN,MAAOizB,EAAUjzB,QAR4C,mBAM1D83B,EAN0D,KAM3CC,EAN2C,KAajEznB,qBAAU,WACN,IAIM1M,EAHK8zB,EAAc91B,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQkxB,EAAUnxB,IAK1DgC,EAAcC,OAAOC,OAAO,GAAI0zB,EAAc9zB,GAAhCG,OAAA,IAAAA,CAAA,GAA6C+zB,IAC3D/E,EAAmB,sBAAO2E,EAAczzB,MAAM,EAAGL,IAA9B,CAAsCE,GAAtC,YAAsD4zB,EAAczzB,MAAML,EAAQ,KAC3G6zB,EAAiB1E,KAElB,CAAC+E,IAWJxnB,qBAAU,WACN,GAAIunB,EAAkB7wB,MAAQjD,OAAOiC,KAAK6xB,EAAkB7wB,MAAMrD,OAAS,EAAG,CAC1E,IACMq0B,EADUj0B,OAAOiC,KAAK6xB,EAAkB7wB,MACXpF,KAAI,SAAA0X,GACnC,MAAO,CACHtZ,MAAOsZ,MAGfse,EAAmBI,MAExB,CAACH,EAAkB7wB,OAqCtB,OACI,oCAEI,yBACIrC,IAAKsuB,EAAUnxB,GACftB,UAAU,wEACV,yBACIiS,QA9Dc,WAE1B,IAAMsgB,EAAsB2E,EAAcj0B,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOmxB,EAAUnxB,MAC/E21B,EAAiB1E,IA4DLvyB,UAAU,+EACV,kBAAC2f,GAAA,EAAD,OAGJ,wBAAI3f,UAAU,yBAAd,QAGA,kBAAC,KAAD,CACIR,MAAOizB,EAAU3yB,KACjBM,MAAO,CAAE2S,MAAO,QAChB/Q,QAASm1B,EACT72B,YAAY,YACZZ,SAlDc,SAACF,GAEvB63B,GAAqB9zB,OAAOiC,KAAK6xB,EAAkB7wB,MAAMrD,OAAS,EAC9Dk0B,EAAkB7wB,KAAKhH,IACvB+3B,EAAiB,eACV9E,EADS,CAEZ3yB,KAAMN,EACNA,MAAO63B,EAAkB7wB,KAAKhH,MAOtC+3B,EAAiB,eACV9E,EADS,CAEZ3yB,KAAMN,MAmCFoZ,aAAc,SAAC4M,EAAYiS,GAAb,OACiE,IAA3EA,EAAgBj4B,MAAMk4B,cAAcn2B,QAAQikB,EAAWkS,kBAI9DjF,EAAU3yB,MACP,oCACI,yBAAKM,MAAO,CAAE6V,UAAW,UACzB,kBAAC6e,GAAD,CACIx1B,MAAM,QACNE,MAAOizB,EAAUjzB,MACjBM,KAAK,QACLJ,SAxCW,SAACsS,GAChCulB,EAAiB,eACV9E,EADS,CAEZjzB,MAAOwS,EAAEhE,OAAOxO,gBCuPbm4B,GA5TC,SAAC,GAKH,IAJbC,EAIY,EAJZA,iBACAhF,EAGY,EAHZA,YACAiF,EAEY,EAFZA,oBACAC,EACY,EADZA,oBACY,EAEcllB,mBAAS,CAClCogB,QAAS,GACTC,MAAO,KAJI,mBAEL/qB,EAFK,KAEE6vB,EAFF,OAMcnlB,mBAAS,CAClCjK,UAAW,GACXC,QAAS,KARE,mBAMLovB,EANK,KAMEC,EANF,OAW8BrlB,mBAAS,IAXvC,mBAWLskB,EAXK,KAWUD,EAXV,KAeZnnB,qBAAU,WACT,GAAG8iB,GAAervB,OAAOiC,KAAKotB,GAAazvB,OAAS,EAAE,CACrD40B,EAAS,eACL7vB,EADI,GAEJ0qB,EAAW,QAGfqF,EAAS,eACLD,EADI,GAEJpF,EAAW,QAGf,IAAMsF,EAAqB,GAC3B,GAAGtF,EAAYH,WAAalvB,OAAOiC,KAAKotB,EAAYH,WAAWtvB,OAAS,EACjDI,OAAOiC,KAAKotB,EAAYH,WAChCxP,SAAQ,SAACkV,EAAa/0B,GACnC80B,EAAmBniB,KAAK,CACvBjW,KAAOq4B,EACP34B,MAAQozB,EAAYH,UAAU0F,GAC9B72B,GAAI8B,OAKP6zB,EAAiBiB,MAGjB,CAACtF,IAEH7sB,QAAQC,IAAI,cAAc4sB,GAC1B7sB,QAAQC,IAAI,gBAAgBkxB,GAI5B,IAAMkB,EAAoB,SAAApmB,GACzB,IAAMlS,EAAOkS,EAAEhE,OAAOlO,KAChBN,EAAQwS,EAAEhE,OAAOxO,MAGvBu4B,EAAS,eACL7vB,EADI,eAENpI,EAAON,MAIJ64B,EAAoB,SAAArmB,GACzB,IAAMlS,EAAOkS,EAAEhE,OAAOlO,KAChBN,EAAQwS,EAAEhE,OAAOxO,MAEvBy4B,EAAS,eACLD,EADI,eAENl4B,EAAON,MAgIV,OACC,oCACC,yBAAKQ,UAAU,oDAEd,yBAAKA,UAAU,yDAEd,yBAAKA,UAAU,yDACd,qCAGA,yBAAKA,UAAU,mEACd,yBAAKA,UAAU,wEACd,kBAAC80B,GAAD,CACCx1B,MAAM,aACNE,MAAO0I,EAAM8qB,QACblzB,KAAK,UACLJ,SAAU04B,KAGZ,yBAAKp4B,UAAU,yEACd,kBAAC80B,GAAD,CACC9b,KAAK,QACL1Z,MAAM,QACNE,MAAO0I,EAAM+qB,MACbnzB,KAAK,QACLJ,SAAU04B,MAOb,yBAAKp4B,UAAU,yDACd,qCAGA,yBAAKA,UAAU,mEACd,yBAAKA,UAAU,wEACd,kBAAC80B,GAAD,CACCx1B,MAAM,eACNE,MAAOw4B,EAAMrvB,UACb7I,KAAK,YACLJ,SAAU24B,KAKZ,yBAAKr4B,UAAU,yEAEd,kBAAC80B,GAAD,CACCx1B,MAAM,UACNE,MAAOw4B,EAAMpvB,QACb9I,KAAK,UACLJ,SAAU24B,QAUf,yBAAKr4B,UAAU,0DACd,yBAAKA,UAAU,yDACd,0CAGA,yBAAKA,UAAU,mEAEbk3B,EAAc91B,KAAI,SAAAqxB,GAClB,OAAO,kBAAC6F,GAAD,CACN7F,UAAWA,EACXyE,cAAeA,EAAeD,iBAAkBA,OAElD,kBAAC,IAAD,CAAQje,KAAK,QACZ/G,QA/FmB,WAC1BglB,EAAiB,GAAD,mBAAKC,GAAL,CAAoB,CACnCp3B,KAAM,GACNN,MAAO,GACP8B,GAAG,GAAD,OAAK41B,EAAc/zB,aA4Ff/C,MAAO,CACN2S,MAAO,QACPwlB,UAAW,OACXtiB,UAAW,MACX5V,aAAc,OACZd,KAAK,SAAS+H,KAAM,kBAACkZ,GAAA,EAAD,OAPxB,sBAyBL,kBAAC,IAAD,CAECpgB,MAAO,CACN8V,WAAY,QAEbjE,QAAS6lB,EAjLoB,SAAC9lB,GAGhC,GAFAA,EAAEiV,iBAEEiQ,EAAc/zB,OAAS,EAAG,CAC7B,IAAMsvB,EAAY,GADW,uBAG7B,YAAiByE,EAAjB,+CAAgC,CAAC,IAAxB71B,EAAuB,QAE/B0E,QAAQC,IAAI,kBAAmB3E,GAC3BA,EAAI,OAAaA,EAAI,OACxBoxB,EAAUpxB,EAAI,MAAYA,EAAI,QAPH,kFAY7B,IAAM0xB,EAAY,CACjB7qB,MAAOA,EACP8vB,MAAOA,EACPvF,UAAWA,EACXnxB,GAAKsxB,EAAYtxB,IAIlBy2B,EAAS,CACR/E,QAAS,GACTC,MAAO,KAERgF,EAAS,CAAEtvB,UAAW,GAAIC,QAAS,KACnCivB,EAAoB9E,GACpBkE,EAAiB,QAEb,CACJ,IAAMlE,EAAY,CACjB7qB,MAAOA,EACP8vB,MAAOA,EACPvF,UAAW,GACXnxB,GAAKsxB,EAAYtxB,IAGlBy2B,EAAS,CACR/E,QAAS,GACTC,MAAO,KAERgF,EAAS,CAAEtvB,UAAW,GAAIC,QAAS,KACnCquB,EAAiB,IACjBY,EAAoB9E,KAhGI,SAAC/gB,GAG1B,GAFAA,EAAEiV,iBAEEiQ,EAAc/zB,OAAS,EAAG,CAC7B,IAAMsvB,EAAY,GADW,uBAG7B,YAAiByE,EAAjB,+CAAgC,CAAC,IAAxB71B,EAAuB,QAE/B0E,QAAQC,IAAI,kBAAmB3E,GAC3BA,EAAI,OAAaA,EAAI,OACxBoxB,EAAUpxB,EAAI,MAAYA,EAAI,QAPH,kFAY7B,IAAM0xB,EAAY,CACjB7qB,MAAOA,EACP8vB,MAAOA,EACPvF,UAAWA,GAIZsF,EAAS,CACR/E,QAAS,GACTC,MAAO,KAERgF,EAAS,CAAEtvB,UAAW,GAAIC,QAAS,KACnCgvB,EAAiB7E,GACjBkE,EAAiB,QAEb,CACJ,IAAMlE,EAAY,CACjB7qB,MAAOA,EACP8vB,MAAOA,EACPvF,UAAW,IAGZsF,EAAS,CACR/E,QAAS,GACTC,MAAO,KAERgF,EAAS,CAAEtvB,UAAW,GAAIC,QAAS,KACnCquB,EAAiB,IACjBW,EAAiB7E,KA0LhBpzB,UAnHGuI,EAAM8qB,UAAYgF,EAAMrvB,UAoH3B3I,UAAU,gBACVsH,KAAM,kBAAC6d,GAAA,EAAD,OAEL2S,EAAsB,iBAAmB,oBCxRtCjX,GAAYC,KAAZD,QAEFzQ,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAIhEE,GAAgB,CACrB5Q,KAAM,GACN8G,YAAa,GACbutB,MAAO,GACP/rB,KAAM,GACN4qB,QAAS,GACTC,MAAO,GACPtqB,UAAW,GACXC,QAAS,GACTiB,MAAO,GACPhI,IAAK,GACLkF,MAAO,GACPsB,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACNiwB,cAAe,KACfC,OAAQ,GACRrR,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAm9BE8L,GAx8BO,SAAC,GAA6F,IAA3FrT,EAA0F,EAA1FA,sBAAuBC,EAAmE,EAAnEA,yBAA0BqR,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,eAA4B,EAEjExhB,GAAe,GAAI,cAF8C,mBAE3GyjB,EAF2G,KAE1FC,EAF0F,OAGpFjhB,oBAAS,GAH2E,mBAG3G8L,EAH2G,KAGlGC,EAHkG,OAIlF/L,oBAAS,GAJyE,mBAI3GyO,EAJ2G,KAIjGJ,EAJiG,OAKlErO,oBAAS,GALyD,mBAKzFuO,GALyF,aAMpDvO,oBAAS,GAN2C,mBAM3GwO,EAN2G,KAMlF6G,EANkF,OAO1DrV,oBAAS,GAPiD,mBAO3GsO,EAP2G,KAOrFgH,EAPqF,OAQ5EtV,mBAAS,IARmE,mBAQ3GkhB,EAR2G,KAQ9FzD,EAR8F,OAStFzd,mBAAS,IAT6E,mBAS3GmhB,EAT2G,KASnGxF,EATmG,OAUpF3b,mBAAS,IAV2E,mBAU3G+c,EAV2G,KAUlGD,EAVkG,OAWpF9c,mBAAS,IAX2E,mBAW3GvK,EAX2G,KAWlG2rB,EAXkG,OAY1EphB,mBAAS,IAZiE,oBAY3GuV,GAZ2G,MAY7FC,GAZ6F,SAapExV,mBAAS,IAb2D,qBAa3G0d,GAb2G,MAa1FC,GAb0F,SAc1E3d,mBAAS,IAdiE,qBAc3G6b,GAd2G,MAc7FD,GAd6F,SAerF5b,mBAAS,IAf4E,qCAgBrFA,mBAAS,KAhB4E,qCAiB5EA,mBAAS,KAjBmE,qBAiB3GhM,GAjB2G,MAiB9FqtB,GAjB8F,SAkBxErhB,mBAAS,IAlB+D,qBAkB3GyU,GAlB2G,MAkB5FqR,GAlB4F,SAmBnF9lB,mBAAS,IAnB0E,qBAmB3G8U,GAnB2G,MAmBlGiR,GAnBkG,SAoB/E/lB,mBAAS,IApBsE,qBAoB3G+U,GApB2G,MAoBhGiR,GApBgG,SAqBrEhmB,mBAAS,IArB4D,qBAqB3GimB,GArB2G,MAqB3FC,GArB2F,SAsB7DlmB,mBAAS,KAtBoD,qBAsB3GmmB,GAtB2G,MAsBvFC,GAtBuF,SAuB5DpmB,oBAAS,GAvBmD,qBAuB3GklB,GAvB2G,MAuBtFmB,GAvBsF,MA+B5GnoB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,6DAEd+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACzC,OAAOA,EAAMvI,MACT,GAJe,SAMQuyB,EAAsB,CAEjD9xB,KAAM,CACLjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAaA,GACbutB,MAAOpjB,EAAOojB,MACd/rB,KAAM2I,EAAO3I,KACb1B,SAAUotB,EACVxuB,KAAMyuB,EACNtrB,MAAOknB,EACP9lB,MAAOkf,EACPhiB,MAAOohB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrD1gB,QAASA,EACTif,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUA,GAASthB,KAAK,KAGxB6iB,GAAI,CACH3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUC,GAAWvhB,KAAK,KAC1BtG,KAAMiR,EAAOqW,OAAO4B,OACpB5gB,KAAM2I,EAAOmoB,SACbtyB,YAAamK,EAAOsW,kBA9BH,QAMd+M,EANc,SAqC0B,OAAzBA,EAAc5xB,SAClCue,GAAwB,mBAExB4Q,EAAe,CAAC,aACfrwB,GAAI8yB,EAAa,KAAW,GAC5BjwB,IAAKiwB,EAAa,KAAW,GAC7Bt0B,KAAMs0B,EAAa,MAAY,GAC/BxtB,YAAawtB,EAAa,aAAmB,IAE1CA,IANU,mBAOT1C,KACLrR,GAAyB,GAEzBY,EAAY,IACZmH,GAAgB,IAChB4L,EAAW,IACXzF,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBvf,EAAQmY,aAMTnY,EAAQC,eAAc,GAhEF,2CAAH,wDAuElBnB,qBAAU,WACT,IAAK8jB,EAAe,UAAe,CAClC,IAAMzkB,EAAQykB,EAAe,MAC7B,GAAIzkB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,GAI3DI,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACpCI,OAAOwN,OAAO5B,EAAK,OACnB,IACG8T,SAAQ,SAACoR,EAAKC,GACpB,GAAmB,kBAARD,EACV/P,GAAsB+P,QAElB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACvBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACZ/P,GAAsB+P,aAQ1B,CAACT,IAGJ,IAAMtK,GAAe,SAACtX,GACrBqO,GAAyB,IAIpBnP,GAA4B,SAACH,EAAQI,GAC1C,QAAKJ,EAAOjR,MAAUuI,EAAQlF,OAAS,GAAQ2wB,EAAY3wB,OAAS,GAAQgO,IAqCvEymB,GAAmB,SAAC7E,GAEzBiB,EAAW,CAAC,eACRjB,EADM,CAETzxB,GAAI+G,EAAQlF,UAFH,mBAGJkF,KACN4W,KAAQ4R,KAAK,0BAIRgH,GAAsB,SAAC9E,GAE5B,IAIQ3vB,EAHAiF,EAAQjH,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQwxB,EAAUzxB,IAM/CgC,EAAcC,OAAOC,OAAO,GAAI6E,EAAQjF,GAA1BG,OAAA,IAAAA,CAAA,GAAuCwvB,IACrDoG,EAAiB,sBAAO9wB,EAAQ5E,MAAM,EAAGL,IAAxB,CAAgCE,GAAhC,YAAgD+E,EAAQ5E,MAAML,EAAQ,KAE7F4wB,EAAWmF,GAEbla,KAAQ4R,KAAK,2BACboI,IAAuB,GACvBD,GAAuB,MA4CxB,OAFAjzB,QAAQC,IAAI,cAAcqC,GAGzB,kBAAC,IAAD,CACC+I,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAGNG,UAAW,CACV5S,OAAQ,EACRyE,QAAS,GAEVzD,MAAO,OACPlL,MAAM,kBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAK7C,6BAASnR,UAAU,2BAClB,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAIA,yBAAKA,UAAW+Q,EAAOjR,MAAQiR,EAAOjR,KAAKqD,OAAS,EAAI,mBAAqB,aAC5E,kBAACgc,GAAA,EAAD,QAGF,yBAAKnf,UAAU,sCACd,kBAACd,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOjR,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBmiB,EAAgBzkB,MAAhB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBmiB,EAAgBzkB,MAAhB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACAI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBmiB,EAAgBzkB,MAAhB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBmiB,EAAgBzkB,MAAhB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAsEjB,kBAACzS,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAO3I,KACdtI,KAAK,OACFC,YAAa,cAChBH,QAAU8R,EAAQtJ,MAAQoJ,EAAOpJ,OAC9BqJ,GAAgBmiB,EAAgBzkB,MAAhB,WAEnBtP,YAAc6R,EAAQtJ,MAAQoJ,EAAOpJ,OAClCqJ,GAAgBmiB,EAAgBzkB,MAAhB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAKlB,kBAACzS,EAAD,CACAI,MAAM,UACNE,MAAOuR,EAAO0nB,OACd14B,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ+mB,QAAUjnB,EAAOinB,SAChChnB,GAAgBmiB,EAAgBzkB,MAAhB,aAEnBtP,YAAc6R,EAAQ+mB,QAAUjnB,EAAOinB,SACpChnB,GAAgBmiB,EAAgBzkB,MAAhB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKjB,kBAACzS,EAAD,CACCI,MAAM,eACNE,MAAOuR,EAAOojB,MACdr0B,KAAK,QACLF,QAAU8R,EAAQyiB,OAAS3iB,EAAO2iB,QAC/B1iB,GAAgBmiB,EAAgBzkB,MAAhB,YAEnBtP,YAAc6R,EAAQyiB,OAAS3iB,EAAO2iB,QACnC1iB,GAAgBmiB,EAAgBzkB,MAAhB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAKlB,wBAAI3R,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACX2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACC2iB,OAAQC,KACRluB,KAAMI,GACN+tB,OAAQ,SAAAF,GAEP1uB,QAAQC,IAAI,0BAA2ByuB,IAExC/0B,SAAU,SAACk1B,EAAOH,GACjB,IAAMjuB,EAAOiuB,EAAOI,UACpBZ,GAAeztB,IAEhBkgB,OAAQ,SAACkO,EAAOH,GACf1uB,QAAQC,IAAI,QAASyuB,IAEtBvE,QAAS,SAAC0E,EAAOH,GAChB1uB,QAAQC,IAAI,SAAUyuB,OAKxB,yBAAKr0B,MAAO,CACX6V,UAAU,UAGZ,wBAAIjW,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACX2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACC2iB,OAAQC,KACRluB,KAAM6gB,GACNsN,OAAQ,SAAAF,GAEP1uB,QAAQC,IAAI,0BAA2ByuB,IAExC/0B,SAAU,SAACk1B,EAAOH,GACjB,IAAMjuB,EAAOiuB,EAAOI,UACpB6D,GAAiBlyB,IAElBkgB,OAAQ,SAACkO,EAAOH,GACf1uB,QAAQC,IAAI,QAASyuB,IAEtBvE,QAAS,SAAC0E,EAAOH,GAChB1uB,QAAQC,IAAI,SAAUyuB,SAc3B,yBAAKz0B,UAAU,kCACd,yBAAKA,UAAU,wCACd,iDAIA,yBAAKA,UAAWqI,GAAWA,EAAQlF,OAAS,EAAI,mBAAqB,aACpE,kBAACgc,GAAA,EAAD,QAKF,yBAAKnf,UAAU,sCAEd,kBAAC,KAAD,CACCo5B,UAAU,EACVC,YAAY,MACZ95B,KAAK,OACL+5B,UAAWP,GACXr5B,SAAU,SAACF,GACVw5B,GAAuB,GAAD,OAAIx5B,MAI3B,kBAAC,GAAD,CAASqlB,IAAI,gBAAgB1gB,IAAI,KAChC,kBAAC,GAAD,CACAyzB,iBAAkBA,GAClBhF,YAAaiG,GACbhB,oBAAqBA,GACrBC,oBAAqBA,MAGtB,kBAAC,GAAD,CAECjT,IAAI,eAAe1gB,IAAI,KACvB,yBAAKnE,UAAU,uDAEbqI,EAAQlF,OAAS,GAAKkF,EAAQjH,KAAI,SAAAC,GAClC,OACC,yBAAKrB,UAAU,4DACd,yBAAKA,UAAU,iEAId,0BAAMA,UAAU,kBAAkBiS,QAAS,YAxWlC,SAAC3Q,GAC1B23B,IAAuB,GACvB,IAAMrG,EAAcvqB,EAAQ9D,MAAK,SAAAlD,GAAI,OAAIA,EAAKC,KAAOA,KAClDsxB,GACFkG,GAAmBlG,GAqWH2G,CAAkBl4B,EAAKC,IACvB03B,GAAuB,OAGvB,kBAACzZ,GAAA,EAAD,OAED,0BAAMvf,UAAU,oBAAoBiS,QAAS,kBAtWlC,SAAC3Q,GAC5B,IAAMk4B,EAAanxB,EAAQpF,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACtD0yB,EAAWwF,GACXva,KAAQ4R,KAAK,2BAmWsD4I,CAAoBp4B,EAAKC,MAC3E,kBAACqe,GAAA,EAAD,QAGF,yBAAK3f,UAAU,gEACd,6BACC,qCAGA,yBAAKA,UAAU,iEAGbqB,EAAK6G,MAAM+qB,MACX,oCACC,4BACE5xB,EAAK6G,MAAM+qB,OAFd,IAMF,wBAAI7yB,MAAO,CACPs5B,eAAgB,iBAGfr4B,EAAK6G,MAAM8qB,UAIb,4BACE3xB,EAAK6G,MAAM8qB,WAShB3xB,EAAK22B,OACL,6BACC,kBAAC,KAAD,CACCphB,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMrvB,WAClB,sCAID,yBAAK3I,UAAU,iEACd,6BACC,kCAEC,kBAAC,KAAD,CACCA,UAAU,qBACV4W,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMpvB,eAcxBvH,EAAKoxB,WACFlvB,OAAOwN,OAAO1P,EAAKoxB,WAAWtvB,OAAS,GACzC,oCACC,0CAGA,yBAAKnD,UAAU,iEACbqB,EAAKoxB,WACFlvB,OAAOiC,KAAKnE,EAAKoxB,WAAWtvB,OAAS,GACrCI,OAAOiC,KAAKnE,EAAKoxB,WAAWrxB,KAAI,SAAAk2B,GAClC,OACC,6BACC,4BACEA,GAEF,4BACEj2B,EAAKoxB,UAAU6E,gBAczBjvB,EAAQlF,OAAS,IAAM,yBAAK/C,MAAO,CACrC2S,MAAO,OACPkC,QAAS,OACTC,eAAgB,WAEhB,kBAAC,KAAD,CAAOtO,YAAY,mBAAmBiD,MAAOkL,KAAMK,6BAOvD,yBAAKpV,UAAU,mDAQjB,yBAAKA,UAAU,kCAEd,yBAAKA,UAAU,wCACd,qCAIA,kBAAC,KAAD,CACCqW,UAAU,OAAOxO,MAAO,uFACxB,uBAAG8O,KAAK,OACP,kBAACyT,GAAA,EAAD,SAIH,yBAAKpqB,UAAU,sCAId,yBAAKA,UAAU,gCACbqhB,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,kBAAMmW,GAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,kBAhkBE,SAAC3Q,GAE3B,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAGrB2f,EAAYqJ,GA0jBkBC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIAiD,KAAiBte,EAAMvI,KAInB6mB,IAA0B,IAAV/kB,IAHpB,0BAAMpD,UAAU,4CACf,kBAACmlB,GAAA,EAAD,WAYN,kBAAC,KAAD,CACCtd,MAAO,iBAEP,yBACCoK,QAAS,WACR0M,GAAW,GACXuJ,GAAwB,GACxBD,GAA2B,IAE5BjoB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,YAcN,yBAAKxgB,UAAU,kCAEZ,yBAAKA,UAAU,wCACd,yCAIA,kBAAC,KAAD,CACCqW,UAAU,OAAOxO,MAAO,sFACxB,uBAAG8O,KAAK,OACP,kBAACyT,GAAA,EAAD,SAIP,yBAAKpqB,UAAU,sCAGf,kBAACd,EAAD,CACAI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgBmiB,EAAgBzkB,MAAhB,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgBmiB,EAAgBzkB,MAAhB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgBmiB,EAAgBzkB,MAAhB,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgBmiB,EAAgBzkB,MAAhB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgBmiB,EAAgBzkB,MAAhB,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgBmiB,EAAgBzkB,MAAhB,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgBmiB,EAAgBzkB,MAAhB,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgBmiB,EAAgBzkB,MAAhB,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAAS8S,GACTrzB,KAAMoiB,KAGN,yBAAKtnB,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAAS+S,GACTtzB,KAAMqiB,QAOL,yBAAK3nB,UAAU,kCACd,yBAAKA,UAAU,qCAEd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,4CAIA,kBAAC,KAAD,CACCgW,MAAM,MACN0I,QAASkV,EAAgBzkB,MAAhB,kBAAgD2kB,EAAY3wB,OAAS,GAC9EkT,UAAU,OAAOxO,MAAO,gCACxB,yBAAK7H,UAAa8zB,EAAY3wB,OAAS,GAClCywB,EAAgBzkB,MAAhB,eAA2DykB,EAAgBzkB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACgQ,GAAA,EAAD,SAKH,yBAAKnf,UAAU,mDACd,kBAAC,GAAD,CACCuwB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMpB,yBAAKrwB,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,qCAID,yBAAKA,UAAU,mDACd,kBAAC,GAAD,CACCwuB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,OAKf,yBAAKvuB,UAAU,kCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,sCAID,yBAAKA,UAAU,mDACd,kBAAC,GAAD,CAAQ0vB,WAAYA,UAa1B,kBAAC,GAAD,CACC/Q,WAAYA,EACZD,QAASA,EACTuC,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCt+BrBL,GAAYC,KAAZD,QAEFzQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAInEE,GAAgB,CAClB5Q,KAAM,GACT8G,YAAa,GACbutB,MAAO,GACP/rB,KAAM,GACN4qB,QAAS,GACTC,MAAO,GACPtqB,UAAW,GACXC,QAAS,GACTiB,MAAO,GACPhI,IAAK,GACLkF,MAAO,GACPsB,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACNiwB,cAAe,KACfC,OAAQ,GACRrR,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAytCE8L,GA5sCO,SAAC,GAKR,IALUkG,EAKX,EALWA,mBACrBC,EAIU,EAJVA,sBACAC,EAGU,EAHVA,kBACAlI,EAEU,EAFVA,eACAD,EACU,EADVA,YACU,EAE6CvhB,GAAe,GAAI,iBAFhE,mBAEH2pB,EAFG,KAEiBC,EAFjB,OAG6C5pB,GAAe,GAAI,qBAHhE,mBAGHyf,EAHG,KAGiB6F,EAHjB,OAIqEtlB,GAAe,GAAI,6BAJxF,gCAKiEA,GAAe,GAAI,4BALpF,gCAMyEA,GAAe,GAAI,gCAN5F,gCAOqEA,GAAe,GAAI,8BAPxF,mBAO6Bsb,GAP7B,aAQqEtb,GAAe,GAAI,6BARxF,mBAQ6Bub,GAR7B,aAYoB9Y,oBAAS,GAZ7B,mBAYH8L,EAZG,KAYMC,EAZN,OAasB/L,oBAAS,GAb/B,mBAaHyO,EAbG,KAaOJ,EAbP,OAcsCrO,oBAAS,GAd/C,mBAceuO,GAdf,aAeoDvO,oBAAS,GAf7D,mBAeHwO,EAfG,KAesB6G,EAftB,OAgB8CrV,oBAAS,GAhBvD,mBAgBHsO,EAhBG,KAgBmBgH,EAhBnB,QAiB4BtV,mBAAS,IAjBrC,qBAiBHkhB,GAjBG,MAiBUzD,GAjBV,SAkBkBzd,mBAAS,IAlB3B,qBAkBHmhB,GAlBG,MAkBKxF,GAlBL,SAmBoB3b,mBAAS,IAnB7B,qBAmBH+c,GAnBG,MAmBMD,GAnBN,SAoBoB9c,mBAAS,IApB7B,qBAoBHvK,GApBG,MAoBM2rB,GApBN,SAqB8BphB,mBAAS,IArBvC,qBAqBHuV,GArBG,MAqBWC,GArBX,SAsBoCxV,mBAAS,IAtB7C,qBAsBH0d,GAtBG,MAsBcC,GAtBd,SAuB8B3d,mBAAS,IAvBvC,qBAuBH6b,GAvBG,MAuBWD,GAvBX,SAwBmB5b,mBAAS,IAxB5B,qBAwBGonB,IAxBH,gBAyBmBpnB,mBAAS,IAzB5B,qBAyBGqnB,IAzBH,gBA0B4BrnB,mBAAS,IA1BrC,qBA0BHhM,GA1BG,MA0BUqtB,GA1BV,SA2B6BrhB,mBAAS,IA3BtC,qBA2BNyU,GA3BM,MA2BSqR,GA3BT,SA4BkB9lB,mBAAS,IA5B3B,qBA4BN8U,GA5BM,MA4BGiR,GA5BH,SA6BsB/lB,mBAAS,IA7B/B,qBA6BN+U,GA7BM,MA6BKiR,GA7BL,SA8BgChmB,mBAAS,IA9BzC,qBA8BNimB,GA9BM,MA8BUC,GA9BV,SA+BwClmB,mBAAS,KA/BjD,qBA+BNmmB,GA/BM,MA+BcC,GA/Bd,SAgCyCpmB,oBAAS,GAhClD,qBAgCNklB,GAhCM,MAgCemB,GAhCf,MAmCVnpB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfylB,EAAyB,CAC3B/vB,WAAY,CACRE,aAAc,CACVtE,GAAIu4B,EAAkBv4B,OAJb,2CAAH,qDAUtBo0B,KAED,CAACmE,IAEJ/pB,qBAAU,WAgBN,GAdI+pB,GAAqBA,EAAkBpxB,MACvCinB,GAAWmK,EAAkBpxB,MAAlB,IAGXinB,GAAW,IAEXmK,GAAqBA,EAAkBv0B,MAAQu0B,EAAkBv0B,KAAKnC,OAAS,EAE/EqrB,GAAgBqL,EAAkBv0B,MAGlCkpB,GAAgB,IAGhBqL,GAAqBA,EAAkBnzB,UAAYmzB,EAAkBnzB,SAASvD,OAAS,EAAG,CAC1F,IAAM+2B,EAAcL,EAAkBnzB,SACtC6pB,GAAmB2J,QAGnB3J,GAAmB,IAInBsJ,GAAqBA,EAAkBxxB,SAAWwxB,EAAkBxxB,QACpE2rB,GAAW6F,EAAkBxxB,SAG7B2rB,GAAW,IAKX6F,GAAqBA,EAAkBvxB,MAAQuxB,EAAkBvxB,KACjE0xB,GAAaH,EAAkBvxB,MAG/B0xB,GAAa,IAIbH,GAAqBA,EAAkBtxB,MAAQsxB,EAAkBtxB,KACjE0xB,GAAaJ,EAAkBtxB,MAG/B0xB,GAAa,MAKlB,CAACJ,IAIJ/pB,qBAAU,WACN,GAAI8f,EAAmBrgB,MAAQhM,OAAOiC,KAAKoqB,GAAoBzsB,OAAS,EAAG,CAEvE,IAAMgL,EAASyhB,EAAmBppB,KAAKqD,MACnCsE,GAAUA,EAAOhL,OAAS,GAC1B8d,EAAY9S,GAGZyhB,EAAmBppB,KAAKO,OAAS6oB,EAAmBppB,KAAKO,MAAxB,KAEjCka,EAAY,CAAC2O,EAAmBppB,KAAKO,OAA1B,mBAAoCoH,KAC/CpI,QAAQC,IAAI,SAAZ,CAAuB4pB,EAAmBppB,KAAKO,OAA/C,mBAAyDoH,KACzDia,GAAgBwH,EAAmBppB,KAAKO,MAAxB,QAGzB,CAAC6oB,IAGJ9f,qBAAU,WACN/J,QAAQC,IAAI,WAAYqb,GAEpBA,GAAYA,EAAS,IAAMA,EAASle,OAAS,IAC7C4C,QAAQC,IAAI,YAAaqb,GAErB8G,KAAiB9G,EAAS,GAAG/f,KAC7B8mB,GAAgB/G,EAAS,GAAG/f,IAC5ByqB,GAAyB1K,EAAS,QAK3C,CAACA,IAGJ,IAAM2K,GAAuB,uCAAG,WAAM1qB,GAAN,SAAA0O,EAAA,sEACtByb,EAAqC,CACvC/lB,WAAY,CACRE,aAAc,CACVqmB,QAAS3qB,EACT4qB,WAAY,UACZ7hB,OAAQwvB,EAAkBv4B,OANV,2CAAH,sDAcvByqB,GAAwB,uCAAG,WAAMliB,GAAN,eAAAmG,EAAA,sEAEF0b,EAAqC,CAC5DhmB,WAAY,CACRE,aAAc,CACVqmB,QAASpiB,EAAMvI,GACf4qB,WAAY,UACZ7hB,OAAQwvB,EAAkBv4B,OAPT,OAEvB6qB,EAFuB,OAY7BpmB,QAAQC,IAAI,eAAgBmmB,GAGxBA,GAAwC,OAAxBA,EAAa3pB,OAC7Bue,GAAwB,uBAkBxBuD,GAAsB,mDAlCG,2CAAH,sDAgDxBxT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,uBAAAhB,EAAA,6DAEX+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACtC,OAAOA,EAAMvI,MACZ,GAJY,SAMey4B,EAAyB,CACrDr0B,WAAY,CACRE,aAAc,CACVtE,GAAIu4B,EAAkBv4B,KAG9BS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAaA,GACbutB,MAAOpjB,EAAOojB,MACd/rB,KAAM2I,EAAO3I,KACb1B,SAAU4pB,GACVhrB,KAAMyuB,GACNtrB,MAAOknB,GACP9lB,MAAOkf,EACPhiB,MAAOohB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrD1gB,QAASA,GACTif,UAAWvW,EAAOuW,UAC9BE,gBAAiBzW,EAAOyW,gBACZE,SAAUA,GAASthB,KAAK,KAGpC6iB,GAAI,CACH3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUC,GAAWvhB,KAAK,KAC1BtG,KAAMiR,EAAOqW,OAAO4B,OACpB5gB,KAAM2I,EAAOmoB,SACbtyB,YAAamK,EAAOsW,kBAlCA,QAMX8S,EANW,SAyCqC,OAA7BA,EAAkB33B,SACvCue,GAAwB,mBAO3B3d,EAJsB,WAC3B,OAAOsuB,EAAYtwB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQs4B,EAAkBv4B,IAGrDgxB,GAGRhvB,EAAcC,OAAOC,OAAO,GAAIkuB,EAAYtuB,GAA9BG,OAAA,IAAAA,CAAA,GAA2Cs2B,EAA3C,GAAiEM,IAC/EC,EAZ2D,sBAYnC1I,EAAYjuB,MAAM,EAAGL,IAZc,CAYNE,GAZM,YAYUouB,EAAYjuB,MAAML,EAAQ,KAC5FuuB,EAAeyI,GAGfR,GAAsB,GAwBtB3Y,EAAY,IACZmH,GAAgB,IAChB4L,GAAW,IACXzF,GAAU,IACVC,GAAgB,IAChBkB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnBvf,EAAQmY,aAMZnY,EAAQC,eAAc,GA/FL,2CAAH,wDAsGlBnB,qBAAU,WACN,IAAKgqB,EAAkB,UAAe,CAClC,IAAM3qB,EAAQ2qB,EAAkB,MAChC,GAAI3qB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,GAIrDI,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACjCI,OAAOwN,OAAO5B,EAAK,OACnB,IACH8T,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP/P,GAAsB+P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACpBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACT/P,GAAsB+P,aAQ/C,CAACyF,IAGJ,IAAMxQ,GAAe,SAACtX,GAClB4nB,GAAsB,IAIpB1oB,GAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAAUuI,GAAQlF,OAAS,GAAQmtB,GAAgBntB,OAAS,GAAOgO,IAsC7E0mB,GAAsB,SAAC9E,GAE/B,IAIQ3vB,EAHAiF,GAAQjH,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQwxB,EAAUzxB,IAM/CgC,EAAcC,OAAOC,OAAO,GAAI6E,GAAQjF,GAA1BG,OAAA,IAAAA,CAAA,GAAuCwvB,IACrDoG,EAAiB,sBAAO9wB,GAAQ5E,MAAM,EAAGL,IAAxB,CAAgCE,GAAhC,YAAgD+E,GAAQ5E,MAAML,EAAQ,KAE7F4wB,GAAWmF,GAEbla,KAAQ4R,KAAK,2BACboI,IAAuB,GACvBD,GAAuB,MAMfpB,GAAmB,SAAC7E,GAEtBiB,GAAW,CAAC,eACLjB,EADG,CAENzxB,GAAI+G,GAAQlF,UAFN,mBAGJkF,MACN4W,KAAQ4R,KAAK,0BAgEjB,OAtBA9qB,QAAQC,IAAI,oBAAqB6zB,GACjC9zB,QAAQC,IAAI,qBAAsB4pB,GAGlC9f,qBAAU,WAEN,GAAG8f,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,EAAE,CAC1E,IAAMukB,EAAWkI,EAAmBppB,KAAKkhB,SAAS7hB,MAAM,KAExDE,QAAQC,IAAI,gBAAgB0hB,GAE5B,IAAMC,EAAaiI,EAAmBppB,KAAKyiB,GAAxB,SAAuCpjB,MAAM,KAChE8yB,GAAYjR,GACZkR,GAAcjR,MAGpB,CAACiI,EAAkB,OAIrB7pB,QAAQC,IAAI,qBAGR,kBAAC,IAAD,CACIoL,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,kBAGFmpB,EAHE,GAIAjK,EAAkB,MAAYrsB,OAAOiC,KAAKoqB,EAAkB,MAAUzsB,OAAS,GAAK,CACrFokB,YAAaqI,EAAkB,KAAlB,GAAiCtI,UAC9CG,kBAAmBmI,EAAkB,KAAlB,GAAiCpI,gBACpDJ,OAAQwI,EAAkB,KAAlB,GAAiC9vB,KACzCo5B,SAAUtJ,EAAkB,KAAlB,GAAiCxnB,KAC3Cif,cAAeuI,EAAkB,KAAlB,GAAiChpB,iBAK3D,gBACG2K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAGTG,UAAW,CACP5S,OAAQ,EACRyE,QAAS,GAEbzD,MAAO,OACPlL,MAAM,eACN6W,QAASib,EACTlV,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV+Q,gBAAgB,EAChB5a,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAGhD,6BAASnR,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,qDAGA,yBAAKA,UAAW+Q,EAAOjR,MAAQiR,EAAOjR,KAAKqD,OAAS,EAAI,mBAAqB,aACzE,kBAACgc,GAAA,EAAD,QAGR,yBAAKnf,UAAU,sCACf,kBAACd,EAAD,CAC5BI,MAAM,OACNE,MAAOuR,EAAOjR,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBqoB,EAAmB3qB,MAAnB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBqoB,EAAmB3qB,MAAnB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACAI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBqoB,EAAmB3qB,MAAnB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBqoB,EAAmB3qB,MAAnB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAsEjB,kBAACzS,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAO3I,KACdtI,KAAK,OACFC,YAAa,cAChBH,QAAU8R,EAAQtJ,MAAQoJ,EAAOpJ,OAC9BqJ,GAAgBqoB,EAAmB3qB,MAAnB,WAEnBtP,YAAc6R,EAAQtJ,MAAQoJ,EAAOpJ,OAClCqJ,GAAgBqoB,EAAmB3qB,MAAnB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAKlB,kBAACzS,EAAD,CACAI,MAAM,UACNE,MAAOuR,EAAO0nB,OACd14B,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ+mB,QAAUjnB,EAAOinB,SAChChnB,GAAgBqoB,EAAmB3qB,MAAnB,aAEnBtP,YAAc6R,EAAQ+mB,QAAUjnB,EAAOinB,SACpChnB,GAAgBqoB,EAAmB3qB,MAAnB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKjB,kBAACzS,EAAD,CACCI,MAAM,eACNE,MAAOuR,EAAOojB,MACdr0B,KAAK,QACLF,QAAU8R,EAAQyiB,OAAS3iB,EAAO2iB,QAC/B1iB,GAAgBqoB,EAAmB3qB,MAAnB,YAEnBtP,YAAc6R,EAAQyiB,OAAS3iB,EAAO2iB,QACnC1iB,GAAgBqoB,EAAmB3qB,MAAnB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAKe,wBAAI3R,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACR2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACI2iB,OAAQC,KACRluB,KAAMI,GACN+tB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpBZ,GAAeztB,IAEnBkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAMlC,wBAAIz0B,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACR2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACI2iB,OAAQC,KACRluB,KAAM6gB,GACNsN,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB6D,GAAiBlyB,IAErBkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAKlC,yBAAKr0B,MAAO,CACR6V,UAAU,SADd,OASR,yBAAKjW,UAAU,kCACzC,yBAAKA,UAAU,wCACd,iDAIA,yBAAKA,UAAWqI,IAAWA,GAAQlF,OAAS,EAAI,mBAAqB,aACpE,kBAACgc,GAAA,EAAD,QAKF,yBAAKnf,UAAU,sCAEd,kBAAC,KAAD,CACCo5B,UAAU,EACVC,YAAY,MACZ95B,KAAK,OACL+5B,UAAWP,GACXr5B,SAAU,SAACF,GACVw5B,GAAuB,GAAD,OAAIx5B,MAI3B,kBAAC,GAAD,CAASqlB,IAAI,gBAAgB1gB,IAAI,KAChC,kBAAC,GAAD,CACAyzB,iBAAkBA,GAClBhF,YAAaiG,GACbhB,oBAAqBA,GACrBC,oBAAqBA,MAGtB,kBAAC,GAAD,CAECjT,IAAI,eAAe1gB,IAAI,KACvB,yBAAKnE,UAAU,uDAEbqI,GAAQlF,OAAS,GAAKkF,GAAQjH,KAAI,SAAAC,GAClC,OACC,yBAAKrB,UAAU,4DACd,yBAAKA,UAAU,iEAId,0BAAMA,UAAU,kBAAkBiS,QAAS,YA1X/B,SAAC3Q,GAC7B23B,IAAuB,GACvB,IAAMrG,EAAcvqB,GAAQ9D,MAAK,SAAAlD,GAAI,OAAIA,EAAKC,KAAOA,KAClDsxB,GACFkG,GAAmBlG,GAuXH2G,CAAkBl4B,EAAKC,IACvB03B,GAAuB,OAGvB,kBAACzZ,GAAA,EAAD,OAED,0BAAMvf,UAAU,oBAAoBiS,QAAS,kBAxY/B,SAAC3Q,GACzB,IAAMk4B,EAAanxB,GAAQpF,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACtD0yB,GAAWwF,GACXva,KAAQ4R,KAAK,2BAqYgD4I,CAAoBp4B,EAAKC,MAC3E,kBAACqe,GAAA,EAAD,QAGF,yBAAK3f,UAAU,gEACd,6BACC,qCAGA,yBAAKA,UAAU,iEAGbqB,EAAK6G,MAAM+qB,MACX,oCACC,4BACE5xB,EAAK6G,MAAM+qB,OAFd,IAMF,wBAAI7yB,MAAO,CACPs5B,eAAgB,iBAGfr4B,EAAK6G,MAAM8qB,UAIb,4BACE3xB,EAAK6G,MAAM8qB,WAShB3xB,EAAK22B,OACL,6BACC,kBAAC,KAAD,CACCphB,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMrvB,WAClB,sCAID,yBAAK3I,UAAU,iEACd,6BACC,kCAEC,kBAAC,KAAD,CACCA,UAAU,qBACV4W,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMpvB,eAcxBvH,EAAKoxB,WACFlvB,OAAOwN,OAAO1P,EAAKoxB,WAAWtvB,OAAS,GACzC,oCACC,0CAGA,yBAAKnD,UAAU,iEACbqB,EAAKoxB,WACFlvB,OAAOiC,KAAKnE,EAAKoxB,WAAWtvB,OAAS,GACrCI,OAAOiC,KAAKnE,EAAKoxB,WAAWrxB,KAAI,SAAAk2B,GAClC,OACC,6BACC,4BACEA,GAEF,4BACEj2B,EAAKoxB,UAAU6E,gBAczBjvB,GAAQlF,OAAS,IAAM,yBAAK/C,MAAO,CACrC2S,MAAO,OACPkC,QAAS,OACTC,eAAgB,WAEhB,kBAAC,KAAD,CAAOtO,YAAY,mBAAmBiD,MAAOkL,KAAMK,6BAOvD,yBAAKpV,UAAU,mDAQU,yBAAKA,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIqW,UAAU,OAAOxO,MAAO,uFACxB,uBAAG8O,KAAK,OACJ,kBAACyT,GAAA,EAAD,SAKZ,yBACIhqB,MAAO,CACHoW,QAAS,QAEbxW,UAAU,gCACT4vB,EAAmBtgB,WAChB,yBAAKlP,MAAO,CACRoW,QAAS,WAET,kBAAC,KAAD,OAGPoZ,EAAmBrgB,MAChB,oCACK8R,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GACxC,OACI,yBAAKpD,UAAU,sCACX,yBACIA,UAAU,kDACViS,QAAS,WACLmW,GAAgBve,EAAMvI,IACtByqB,GAAyBliB,KAG7B,yBAAKkE,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,YAzmBlD,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GAomBwDC,CAAmB1gB,EAAMvI,IACzB0qB,GAAwBniB,EAAMvI,KAIlCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIHiD,KAAiBte,EAAMvI,KAInB6mB,IAA0B,IAAV/kB,IAHjB,0BAAMpD,UAAU,4CACZ,kBAACmlB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACItd,MAAO,iBAEP,yBACIoK,QAAS,WACL0M,GAAW,GACXuJ,GAAwB,GACxBD,GAA2B,IAE/BjoB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,YAgBvD,yBAAKxgB,UAAU,kCAEgB,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIqW,UAAU,OAAOxO,MAAO,sFACxB,uBAAG8O,KAAK,OACJ,kBAACyT,GAAA,EAAD,SAIZ,yBAAKpqB,UAAU,sCAGf,kBAACd,EAAD,CACAI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACpC7V,GAAgBqoB,EAAmB3qB,MAAnB,gBAElBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACxC7V,GAAgBqoB,EAAmB3qB,MAAnB,gBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACzS,EAAD,CACAI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACtC9V,GAAgBqoB,EAAmB3qB,MAAnB,kBAElBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cAC1C9V,GAAgBqoB,EAAmB3qB,MAAnB,kBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACArS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC1C/V,GAAgBqoB,EAAmB3qB,MAAnB,sBAElBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC9C/V,GAAgBqoB,EAAmB3qB,MAAnB,sBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACArS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC5ChW,GAAgBqoB,EAAmB3qB,MAAnB,wBAElBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAChDhW,GAAgBqoB,EAAmB3qB,MAAnB,wBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAAS8S,GACTrzB,KAAMoiB,KAGN,yBAAKtnB,MAAO,CACZ6V,UAAU,UAGV,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAAS+S,GACTtzB,KAAMqiB,QAOd,yBAAK3nB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACIgW,MAAM,MACN0I,QAASob,EAAmB3qB,MAAnB,kBAAmD2kB,GAAY3wB,OAAS,GACjFkT,UAAU,OAAOxO,MAAO,gCACxB,yBAAK7H,UAAa8zB,GAAY3wB,OAAS,GAC/B22B,EAAmB3qB,MAAnB,eAA8D2qB,EAAmB3qB,MAAnB,eAAgD,kBAAoB,mBAAlF,aACpD,kBAACgQ,GAAA,EAAD,SAKZ,yBAAKnf,UAAU,mDACX,kBAAC,GAAD,CACIuwB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAKrwB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIwuB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAKvuB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACI4vB,mBAAoBA,EACpBD,QAASA,GACTD,WAAYA,WAaxC,kBAAC,GAAD,CACI/Q,WAAYA,EACZD,QAASA,EACTuC,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SC5wC1C7E,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACGrd,IAAXqf,QAoBFC,GAAU,SAAC,GAA4C,IAA1ChY,EAAyC,EAAzCA,KAAMmrB,EAAmC,EAAnCA,eAAmC,EAC5B/e,oBAAS,GADmB,mBACnD8L,EADmD,KAC1CC,EAD0C,OAEA/L,oBAAS,GAFT,mBAEnDgM,EAFmD,KAE5BC,EAF4B,OAGH1O,GAAe,GAAI,iBAHhB,mBAG/BmqB,GAH+B,aAIF1nB,oBAAS,GAJP,mBAMpDyC,GANoD,UAM1CC,gBAEVilB,EAAmB,uCAAG,WAAOj5B,GAAP,iBAAA0O,EAAA,sEACKsqB,EAAyB,CACtD50B,WAAY,CACVE,aAAc,CACZtE,SAJoB,QACpBk5B,EADoB,SAU0B,OAA5BA,EAAiBh4B,SAjC3C0c,KAAavT,QAAQ,CACnBsT,QAAS,kBACTrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAgCnCue,EAAiB/tB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACvDqwB,EAAe4C,IAbS,2CAAH,sDAoBzB,OACE,oCACE,kBAAC,KAAD,CACEn0B,MAAO,CACLutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAObgG,KAAK,QAEL6D,WAAYrW,EACZsW,YAAa,OACbC,YAAa,SAAAC,GACX,MAAO,CACL5c,MAAO,CACL4V,MAAO,qBAMb,kBAAC,GAAD,CACEnO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACN,oCACE,yBACElL,QAAS,WACPoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,KACtCud,EAAyB1B,IAE3BpP,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CACjC4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAUlB,kBAAC,GAAD,CACEtO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACN,oCAEE,wBACElL,QAAS,WACPoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,KACtCud,EAAyB1B,IAE3B/c,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGT1O,OAST,kBAAC,GAAD,CACEI,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAKZ,kBAAC,GAAD,CACE6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKE,kBAAC,GAAD,CACU6H,MAAM,YACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,yBAuClC,kBAAC,GAAD,CAEEA,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACV,uBAAGrC,KAAK,MACN,kBAAC,KAAD,CAEEN,UAAU,MAAMxO,MAAM,gBACtB,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAMN,kBAAC,KAAD,CAEEC,UAAW,kBAAM+a,EAAoBpd,EAAO7b,KAC5CuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACE1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAeXf,GAAyB,kBAAC6b,GAAD,CACxB/I,YAAalrB,EACbmrB,eAAgBA,EAChBiI,sBAAuBjb,EACvBgb,mBAAoBjb,EACpBmb,kBAAmBjb,MAsIZlM,iBAxHK,SAAC,GAAuB,EAArB2C,QAAsB,IAAD,EAIJzC,mBAAS,IAJL,mBAInC8e,EAJmC,KAItBC,EAJsB,OAMKxhB,GAAe,GAAI,eANxB,mBAMnCuqB,EANmC,KAMrBC,EANqB,KAS1C7qB,qBAAU,YACS,uCAAG,4BAAAE,EAAA,sEACK2qB,EAAuB,CAC5Cj1B,WAAW,CACTC,OAAQ,CACNsa,SAAU,QACVC,eAAgB,SALJ,OACZpc,EADY,OAUlB6tB,EAAe7tB,GAVG,2CAAH,qDAYjB82B,KACC,IAvBuC,MA0BgBhoB,oBAAS,GA1BzB,mBA0BnCwN,EA1BmC,KA0BZC,EA1BY,KAyC1C,OACE,oCAIE,yBAAKrgB,UAAU,yBACb,yBAAKA,UAAU,iCAGb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,YAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,oBACZZ,SAAU,SAAAsS,GAAC,OA5BF,SAACxS,GACpB,GAAIk7B,EAAal0B,KAAKrD,OAAS,EAAG,CAChC,IAAMoxB,EAAiBmG,EAAal0B,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBAC/F4Y,EAAe4C,IAyBQhU,CAAavO,EAAEhE,OAAOxO,WAKzC,kBAAC,IAAD,CAEEQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJ1C,YAYF,yBAAKrgB,UAAU,uCAUf,yBAAKA,UAAU,uCACZ06B,EAAanrB,MAAQmiB,EAAYvuB,OAAS,GAAK,kBAAC,GAAD,CAC9CwuB,eAAgBA,EAChBnrB,KAAMkrB,IACPgJ,EAAaprB,WAAa,kBAACmR,GAAD,MAC1Bia,EAAanrB,QAAUmiB,EAAYvuB,OAAS,IAC3C,yBAAK/C,MAAO,CACV6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,oBAAoBiD,MAAOkL,KAAMK,4BAO3DslB,EAAanrB,MACZ,kBAAC,GAAD,CACE6Q,sBAAuBA,EACvBC,yBAA0BA,EAC1BqR,YAAagJ,EAAal0B,KAC1BmrB,eAAgBA,QCvVlB9Q,GAAYC,KAAZD,QAEFzQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAInEE,GAAgB,CAClB5Q,KAAM,GACT8G,YAAa,GACbutB,MAAO,GACP/rB,KAAM,GACN4qB,QAAS,GACTC,MAAO,GACPtqB,UAAW,GACXC,QAAS,GACTiB,MAAO,GACPhI,IAAK,GACLkF,MAAO,GACPsB,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACNiwB,cAAe,KACfC,OAAQ,GACRrR,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAqsCE8L,GAzrCO,SAAC,GAIR,IAJUkG,EAIX,EAJWA,mBACrBC,EAGU,EAHVA,sBACAC,EAEU,EAFVA,kBACAgB,EACU,EADVA,qBACU,EAE6C1qB,GAAe,GAAI,iBAFhE,mBAEH2pB,EAFG,KAEiBC,EAFjB,OAG6C5pB,GAAe,GAAI,qBAHhE,mBAGHyf,EAHG,KAGiB6F,EAHjB,OAIqEtlB,GAAe,GAAI,6BAJxF,gCAKiEA,GAAe,GAAI,4BALpF,gCAMyEA,GAAe,GAAI,gCAN5F,gCAOqEA,GAAe,GAAI,8BAPxF,mBAO6Bsb,GAP7B,aAQqEtb,GAAe,GAAI,6BARxF,mBAQ6Bub,GAR7B,aAYoB9Y,oBAAS,GAZ7B,mBAYH8L,EAZG,KAYMC,EAZN,OAasB/L,oBAAS,GAb/B,mBAaHyO,EAbG,KAaOJ,EAbP,OAcsCrO,oBAAS,GAd/C,mBAceuO,GAdf,aAeoDvO,oBAAS,GAf7D,mBAeHwO,EAfG,KAesB6G,EAftB,OAgB8CrV,oBAAS,GAhBvD,mBAgBHsO,EAhBG,KAgBmBgH,EAhBnB,OAiB4BtV,mBAAS,IAjBrC,oBAiBHkhB,GAjBG,MAiBUzD,GAjBV,SAkBkBzd,mBAAS,IAlB3B,qBAkBHmhB,GAlBG,MAkBKxF,GAlBL,SAmBoB3b,mBAAS,IAnB7B,qBAmBH+c,GAnBG,MAmBMD,GAnBN,SAoBoB9c,mBAAS,IApB7B,qBAoBHvK,GApBG,MAoBM2rB,GApBN,SAqB8BphB,mBAAS,IArBvC,qBAqBHuV,GArBG,MAqBWC,GArBX,SAsBoCxV,mBAAS,IAtB7C,qBAsBH0d,GAtBG,MAsBcC,GAtBd,SAuB8B3d,mBAAS,IAvBvC,qBAuBH6b,GAvBG,MAuBWD,GAvBX,SAwBmB5b,mBAAS,IAxB5B,qBAwBGonB,IAxBH,gBAyBmBpnB,mBAAS,IAzB5B,qBAyBGqnB,IAzBH,gBA0B4BrnB,mBAAS,IA1BrC,qBA0BHhM,GA1BG,MA0BUqtB,GA1BV,SA2B6BrhB,mBAAS,IA3BtC,qBA2BNyU,GA3BM,MA2BSqR,GA3BT,SA4BkB9lB,mBAAS,IA5B3B,qBA4BN8U,GA5BM,MA4BGiR,GA5BH,SA6BsB/lB,mBAAS,IA7B/B,qBA6BN+U,GA7BM,MA6BKiR,GA7BL,SA8BgChmB,mBAAS,IA9BzC,qBA8BNimB,GA9BM,MA8BUC,GA9BV,SA+BwClmB,mBAAS,KA/BjD,qBA+BNmmB,GA/BM,MA+BcC,GA/Bd,SAgCyCpmB,oBAAS,GAhClD,qBAgCNklB,GAhCM,MAgCemB,GAhCf,MAsCVnpB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfylB,EAAyB,CAC3B/vB,WAAY,CACRE,aAAc,CACVtE,GAAIu4B,EAAkBv4B,OAJb,2CAAH,qDAUtBo0B,KAED,CAACmE,IAEJ/pB,qBAAU,WAgBN,GAdI+pB,GAAqBA,EAAkBpxB,MACvCinB,GAAWmK,EAAkBpxB,MAAlB,IAGXinB,GAAW,IAEXmK,GAAqBA,EAAkBv0B,MAAQu0B,EAAkBv0B,KAAKnC,OAAS,EAE/EqrB,GAAgBqL,EAAkBv0B,MAGlCkpB,GAAgB,IAGhBqL,GAAqBA,EAAkBnzB,UAAYmzB,EAAkBnzB,SAASvD,OAAS,EAAG,CAC1F,IAAM+2B,EAAcL,EAAkBnzB,SAAStF,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAChEivB,GAAmB2J,QAGnB3J,GAAmB,IAInBsJ,GAAqBA,EAAkBxxB,SAAWwxB,EAAkBxxB,QACpE2rB,GAAW6F,EAAkBxxB,SAG7B2rB,GAAW,IAKX6F,GAAqBA,EAAkBvxB,MAAQuxB,EAAkBvxB,KACjE0xB,GAAaH,EAAkBvxB,MAG/B0xB,GAAa,IAIbH,GAAqBA,EAAkBtxB,MAAQsxB,EAAkBtxB,KACjE0xB,GAAaJ,EAAkBtxB,MAG/B0xB,GAAa,MAKlB,CAACJ,IAIJ/pB,qBAAU,WACN,GAAI8f,EAAmBrgB,MAAQhM,OAAOiC,KAAKoqB,GAAoBzsB,OAAS,EAAG,CAEvE,IAAMgL,EAASyhB,EAAmBppB,KAAKqD,MACnCsE,GAAUA,EAAOhL,OAAS,GAC1B8d,EAAY9S,GAGZyhB,EAAmBppB,KAAKO,OAAS6oB,EAAmBppB,KAAKO,MAAxB,KAEjCka,EAAY,CAAC2O,EAAmBppB,KAAKO,OAA1B,mBAAoCoH,KAC/CpI,QAAQC,IAAI,SAAZ,CAAuB4pB,EAAmBppB,KAAKO,OAA/C,mBAAyDoH,KACzDia,GAAgBwH,EAAmBppB,KAAKO,MAAxB,QAGzB,CAAC6oB,IAGJ9f,qBAAU,WACN/J,QAAQC,IAAI,WAAYqb,GAEpBA,GAAYA,EAAS,IAAMA,EAASle,OAAS,IAC7C4C,QAAQC,IAAI,YAAaqb,GAErB8G,KAAiB9G,EAAS,GAAG/f,KAC7B8mB,GAAgB/G,EAAS,GAAG/f,IAC5ByqB,GAAyB1K,EAAS,QAK3C,CAACA,IAGJ,IAAM2K,GAAuB,uCAAG,WAAM1qB,GAAN,SAAA0O,EAAA,sEACtByb,EAAqC,CACvC/lB,WAAY,CACRE,aAAc,CACVqmB,QAAS3qB,EACT4qB,WAAY,UACZ7hB,OAAQwvB,EAAkBv4B,OANV,2CAAH,sDAcvByqB,GAAwB,uCAAG,WAAMliB,GAAN,eAAAmG,EAAA,sEAEF0b,EAAqC,CAC5DhmB,WAAY,CACRE,aAAc,CACVqmB,QAASpiB,EAAMvI,GACf4qB,WAAY,UACZ7hB,OAAQwvB,EAAkBv4B,OAPT,OAEvB6qB,EAFuB,OAY7BpmB,QAAQC,IAAI,eAAgBmmB,GAGxBA,GAAwC,OAAxBA,EAAa3pB,OAC7Bue,GAAwB,uBAkBxBuD,GAAsB,mDAlCG,2CAAH,sDAgDxBxT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,6DAEX+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACtC,OAAOA,EAAMvI,MACZ,GAJY,SAMey4B,EAAyB,CACrDr0B,WAAY,CACRE,aAAc,CACVtE,GAAIu4B,EAAkBv4B,KAG9BS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAaA,GACbutB,MAAOpjB,EAAOojB,MACd/rB,KAAM2I,EAAO3I,KACb1B,SAAU4pB,GACVhrB,KAAMyuB,GACNtrB,MAAOknB,GACP9lB,MAAOkf,EACPhiB,MAAOohB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrD1gB,QAASA,GACTif,UAAWvW,EAAOuW,UAC9BE,gBAAiBzW,EAAOyW,gBACxBE,SAAUA,GAASthB,KAAK,KACxB6iB,GAAI,CACH3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUC,GAAWvhB,KAAK,KAC1BtG,KAAMiR,EAAOqW,OAAO4B,OACpB5gB,KAAM2I,EAAOmoB,SACbtyB,YAAamK,EAAOsW,kBAhCA,QAMX8S,EANW,SAuCqC,OAA7BA,EAAkB33B,SACvCue,GAAwB,mBACxB6Y,GAAsB,GACtBiB,EAAqB,eAEdV,EAFa,CAGhBzzB,SAAUmzB,EAAkBnzB,SAC5B+B,MAAOoxB,EAAkBpxB,MACzBnD,KAAMu0B,EAAkBv0B,KACxByB,MAAO8yB,EAAkB9yB,MACzB8C,MAAOgwB,EAAkBhwB,SAI7B9D,QAAQC,IAAI,oBAAqBm0B,GAUjClZ,EAAY,IACZmH,GAAgB,IAChB4L,GAAW,IACXzF,GAAU,IACVC,GAAgB,IAChBkB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnBvf,EAAQmY,aAMZnY,EAAQC,eAAc,GA7EL,2CAAH,wDAoFlBnB,qBAAU,WACN,IAAKgqB,EAAkB,UAAe,CAClC,IAAM3qB,EAAQ2qB,EAAkB,MAChC,GAAI3qB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,GAIrDI,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACjCI,OAAOwN,OAAO5B,EAAK,OACnB,IACH8T,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP/P,GAAsB+P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACpBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACT/P,GAAsB+P,aAQ/C,CAACyF,IAGJ,IAAMxQ,GAAe,SAACtX,GAClB4nB,GAAsB,IAIpB1oB,GAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAAUuI,GAAQlF,OAAS,GAAQ2wB,GAAY3wB,OAAS,GAAOgO,IAoCzE0mB,GAAsB,SAAC9E,GAE/B,IAIQ3vB,EAHAiF,GAAQjH,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQwxB,EAAUzxB,IAM/CgC,EAAcC,OAAOC,OAAO,GAAI6E,GAAQjF,GAA1BG,OAAA,IAAAA,CAAA,GAAuCwvB,IACrDoG,EAAiB,sBAAO9wB,GAAQ5E,MAAM,EAAGL,IAAxB,CAAgCE,GAAhC,YAAgD+E,GAAQ5E,MAAML,EAAQ,KAE7F4wB,GAAWmF,GAEbla,KAAQ4R,KAAK,2BACboI,IAAuB,GACvBD,GAAuB,MAafpB,GAAmB,SAAC7E,GAEtBiB,GAAW,CAAC,eACLjB,EADG,CAENzxB,GAAI+G,GAAQlF,UAFN,mBAGJkF,MACN4W,KAAQ4R,KAAK,0BAsDjB,OAtBA9qB,QAAQC,IAAI,oBAAqB6zB,GACjC9zB,QAAQC,IAAI,qBAAsB4pB,GAGlC9f,qBAAU,WAEN,GAAG8f,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,EAAE,CAC1E,IAAMukB,EAAWkI,EAAmBppB,KAAKkhB,SAAS7hB,MAAM,KAExDE,QAAQC,IAAI,gBAAgB0hB,GAE5B,IAAMC,EAAaiI,EAAmBppB,KAAKyiB,GAAxB,SAAuCpjB,MAAM,KAChE8yB,GAAYjR,GACZkR,GAAcjR,MAGpB,CAACiI,EAAkB,OAIrB7pB,QAAQC,IAAI,qBAGR,kBAAC,IAAD,CACIoL,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,kBAGFmpB,EAHE,GAIAjK,EAAkB,MAAYrsB,OAAOiC,KAAKoqB,EAAkB,MAAUzsB,OAAS,GAAK,CACrFokB,YAAaqI,EAAkB,KAAlB,GAAiCtI,UAC9CG,kBAAmBmI,EAAkB,KAAlB,GAAiCpI,gBACpDJ,OAAQwI,EAAkB,KAAlB,GAAiC9vB,KACzCo5B,SAAUtJ,EAAkB,KAAlB,GAAiCxnB,KAC3Cif,cAAeuI,EAAkB,KAAlB,GAAiChpB,iBAK3D,gBACG2K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAGTG,UAAW,CACP5S,OAAQ,EACRyE,QAAS,GAEbzD,MAAO,OACPlL,MAAM,eACN6W,QAASib,EACTlV,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV+Q,gBAAgB,EAChB5a,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAGhD,6BAASnR,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,mDAGA,yBAAKA,UAAW+Q,EAAOjR,MAAQiR,EAAOjR,KAAKqD,OAAS,EAAI,mBAAqB,aACzE,kBAACgc,GAAA,EAAD,QAGR,yBAAKnf,UAAU,sCACf,kBAACd,EAAD,CAC5BI,MAAM,OACNE,MAAOuR,EAAOjR,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBqoB,EAAmB3qB,MAAnB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBqoB,EAAmB3qB,MAAnB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACAI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBqoB,EAAmB3qB,MAAnB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBqoB,EAAmB3qB,MAAnB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAsEjB,kBAACzS,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAO3I,KACdtI,KAAK,OACFC,YAAa,cAChBH,QAAU8R,EAAQtJ,MAAQoJ,EAAOpJ,OAC9BqJ,GAAgBqoB,EAAmB3qB,MAAnB,WAEnBtP,YAAc6R,EAAQtJ,MAAQoJ,EAAOpJ,OAClCqJ,GAAgBqoB,EAAmB3qB,MAAnB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAKlB,kBAACzS,EAAD,CACAI,MAAM,UACNE,MAAOuR,EAAO0nB,OACd14B,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ+mB,QAAUjnB,EAAOinB,SAChChnB,GAAgBqoB,EAAmB3qB,MAAnB,aAEnBtP,YAAc6R,EAAQ+mB,QAAUjnB,EAAOinB,SACpChnB,GAAgBqoB,EAAmB3qB,MAAnB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKjB,kBAACzS,EAAD,CACCI,MAAM,eACNE,MAAOuR,EAAOojB,MACdr0B,KAAK,QACLF,QAAU8R,EAAQyiB,OAAS3iB,EAAO2iB,QAC/B1iB,GAAgBqoB,EAAmB3qB,MAAnB,YAEnBtP,YAAc6R,EAAQyiB,OAAS3iB,EAAO2iB,QACnC1iB,GAAgBqoB,EAAmB3qB,MAAnB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAKe,wBAAI3R,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACR2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACI2iB,OAAQC,KACRluB,KAAMI,GACN+tB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpBZ,GAAeztB,IAEnBkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAMlC,wBAAIz0B,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACR2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACI2iB,OAAQC,KACRluB,KAAM6gB,GACNsN,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB6D,GAAiBlyB,IAErBkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAKlC,yBAAKr0B,MAAO,CACR6V,UAAU,SADd,OASR,yBAAKjW,UAAU,kCACzC,yBAAKA,UAAU,wCACd,iDAIA,yBAAKA,UAAWqI,IAAWA,GAAQlF,OAAS,EAAI,mBAAqB,aACpE,kBAACgc,GAAA,EAAD,QAKF,yBAAKnf,UAAU,sCAEd,kBAAC,KAAD,CACCo5B,UAAU,EACVC,YAAY,MACZ95B,KAAK,OACL+5B,UAAWP,GACXr5B,SAAU,SAACF,GACVw5B,GAAuB,GAAD,OAAIx5B,MAI3B,kBAAC,GAAD,CAASqlB,IAAI,gBAAgB1gB,IAAI,KAChC,kBAAC,GAAD,CACAyzB,iBAAkBA,GAClBhF,YAAaiG,GACbhB,oBAAqBA,GACrBC,oBAAqBA,MAGtB,kBAAC,GAAD,CAECjT,IAAI,eAAe1gB,IAAI,KACvB,yBAAKnE,UAAU,uDAEbqI,GAAQlF,OAAS,GAAKkF,GAAQjH,KAAI,SAAAC,GAClC,OACC,yBAAKrB,UAAU,4DACd,yBAAKA,UAAU,iEAId,0BAAMA,UAAU,kBAAkBiS,QAAS,YA1YlC,SAAC3Q,GAC1B23B,IAAuB,GACvB,IAAMrG,EAAcvqB,GAAQ9D,MAAK,SAAAlD,GAAI,OAAIA,EAAKC,KAAOA,KAClDsxB,GACFkG,GAAmBlG,GAuYH2G,CAAkBl4B,EAAKC,IACvB03B,GAAuB,OAGvB,kBAACzZ,GAAA,EAAD,OAED,0BAAMvf,UAAU,oBAAoBiS,QAAS,kBA9X/B,SAAC3Q,GACzB,IAAMk4B,EAAanxB,GAAQpF,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACtD0yB,GAAWwF,GACXva,KAAQ4R,KAAK,2BA2XgD4I,CAAoBp4B,EAAKC,MAC3E,kBAACqe,GAAA,EAAD,QAGF,yBAAK3f,UAAU,gEACd,6BACC,qCAGA,yBAAKA,UAAU,iEAGbqB,EAAK6G,MAAM+qB,MACX,oCACC,4BACE5xB,EAAK6G,MAAM+qB,OAFd,IAMF,wBAAI7yB,MAAO,CACPs5B,eAAgB,iBAGfr4B,EAAK6G,MAAM8qB,UAIb,4BACE3xB,EAAK6G,MAAM8qB,WAShB3xB,EAAK22B,OACL,6BACC,kBAAC,KAAD,CACCphB,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMrvB,WAClB,sCAID,yBAAK3I,UAAU,iEACd,6BACC,kCAEC,kBAAC,KAAD,CACCA,UAAU,qBACV4W,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMpvB,eAcxBvH,EAAKoxB,WACFlvB,OAAOwN,OAAO1P,EAAKoxB,WAAWtvB,OAAS,GACzC,oCACC,0CAGA,yBAAKnD,UAAU,iEACbqB,EAAKoxB,WACFlvB,OAAOiC,KAAKnE,EAAKoxB,WAAWtvB,OAAS,GACrCI,OAAOiC,KAAKnE,EAAKoxB,WAAWrxB,KAAI,SAAAk2B,GAClC,OACC,6BACC,4BACEA,GAEF,4BACEj2B,EAAKoxB,UAAU6E,gBAczBjvB,GAAQlF,OAAS,IAAM,yBAAK/C,MAAO,CACrC2S,MAAO,OACPkC,QAAS,OACTC,eAAgB,WAEhB,kBAAC,KAAD,CAAOtO,YAAY,mBAAmBiD,MAAOkL,KAAMK,6BAOvD,yBAAKpV,UAAU,mDAUU,yBAAKA,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIqW,UAAU,OAAOxO,MAAO,uFACxB,uBAAG8O,KAAK,OACJ,kBAACyT,GAAA,EAAD,SAKZ,yBACIhqB,MAAO,CACHoW,QAAS,QAEbxW,UAAU,gCACT4vB,EAAmBtgB,WAChB,yBAAKlP,MAAO,CACRoW,QAAS,WAET,kBAAC,KAAD,OAGPoZ,EAAmBrgB,MAChB,oCACK8R,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GACxC,OACI,yBAAKpD,UAAU,sCACX,yBACIA,UAAU,kDACViS,QAAS,WACLmW,GAAgBve,EAAMvI,IACtByqB,GAAyBliB,KAG7B,yBAAKkE,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,YAtmBlD,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GAimBwDC,CAAmB1gB,EAAMvI,IACzB0qB,GAAwBniB,EAAMvI,KAIlCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIHiD,KAAiBte,EAAMvI,KAInB6mB,IAA0B,IAAV/kB,IAHjB,0BAAMpD,UAAU,4CACZ,kBAACmlB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACItd,MAAO,iBAEP,yBACIoK,QAAS,WACL0M,GAAW,GACXuJ,GAAwB,GACxBD,GAA2B,IAE/BjoB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,YAgBvD,yBAAKxgB,UAAU,kCAEgB,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIqW,UAAU,OAAOxO,MAAO,sFACxB,uBAAG8O,KAAK,OACJ,kBAACyT,GAAA,EAAD,SAIZ,yBAAKpqB,UAAU,sCAGf,kBAACd,EAAD,CACAI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACpC7V,GAAgBqoB,EAAmB3qB,MAAnB,gBAElBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACxC7V,GAAgBqoB,EAAmB3qB,MAAnB,gBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACzS,EAAD,CACAI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACtC9V,GAAgBqoB,EAAmB3qB,MAAnB,kBAElBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cAC1C9V,GAAgBqoB,EAAmB3qB,MAAnB,kBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACArS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC1C/V,GAAgBqoB,EAAmB3qB,MAAnB,sBAElBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC9C/V,GAAgBqoB,EAAmB3qB,MAAnB,sBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACArS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC5ChW,GAAgBqoB,EAAmB3qB,MAAnB,wBAElBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAChDhW,GAAgBqoB,EAAmB3qB,MAAnB,wBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAAS8S,GACTrzB,KAAMoiB,KAGN,yBAAKtnB,MAAO,CACZ6V,UAAU,UAGV,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAAS+S,GACTtzB,KAAMqiB,QAOd,yBAAK3nB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,0CAIA,kBAAC,KAAD,CACIgW,MAAM,MACN0I,QAASob,EAAmB3qB,MAAnB,kBAAmD2kB,GAAY3wB,OAAS,GACjFkT,UAAU,OAAOxO,MAAO,gCACxB,yBAAK7H,UAAa8zB,GAAY3wB,OAAS,GAC/B22B,EAAmB3qB,MAAnB,eAA8D2qB,EAAmB3qB,MAAnB,eAAgD,kBAAoB,mBAAlF,aACpD,kBAACgQ,GAAA,EAAD,SAKZ,yBAAKnf,UAAU,mDACX,kBAAC,GAAD,CACIuwB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAKrwB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIwuB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAKvuB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACI4vB,mBAAoBA,EACpBD,QAASA,GACTD,WAAYA,WAaxC,kBAAC,GAAD,CACI/Q,WAAYA,EACZD,QAASA,EACTuC,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCl0BnCmL,IA/aiB/P,KAAxBD,OAAwBC,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACkBxC,GAAe,GAAI,qBADrC,mBAC9Byf,EAD8B,KACV6F,EADU,KAG/B9vB,EAASgnB,eACTtX,EAAUC,eACV1R,EAAY+B,EAAM,GALa,EAMeiN,oBAAS,GANxB,mBAM9B+mB,EAN8B,KAMVC,EANU,OAOYhnB,mBAAS,IAPrB,mBAO9BinB,EAP8B,KAOZgB,EAPY,KAYrC/qB,qBAAU,YAEgB,uCAAG,4BAAAE,EAAA,sEACUylB,EAAyB,CACpD/vB,WAAY,CACRE,aAAc,CACVtE,GAAIsC,MAJK,QACfk3B,EADe,SAYjBD,EAAqBC,GAGzB/0B,QAAQC,IAAI,mBAAmB80B,GAfV,2CAAH,qDAkBtBpF,KAED,CAAC9xB,IAKJmC,QAAQC,IAAI,qBAAsB4pB,GAElC7pB,QAAQC,IAAI,cAAeL,GAE3B,IA+BMunB,EAAM0C,EAAmBrgB,MAAQsqB,GAAqBA,EAAiB,MA/BlD,SAAC1M,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK/rB,KAAI,SAAAC,GAAI,OAAIA,EAAK0F,SAC7B,IAAMqmB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKlK,SAAQ,SAAC5hB,EAAM+B,GACZiqB,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,sBAA4BF,EAAQE,IAApC,CAAmDjsB,IAElD+rB,EAAQE,GAAgB,CAACjsB,GAE9BgsB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACfvnB,QAAQC,IAAI,aAAcqnB,OAI3BD,EAI8EG,CAAmBsM,EAAiB,OAAa,GAE1I,OACI,yBAAK75B,UAAU,wBAEX,yBAAKA,UAAU,iCACX,8CAIC4vB,EAAmBrgB,MAAQsqB,GAAsBt2B,OAAOiC,KAAKq0B,GAAmB12B,OAAS,GACtF,oCACI,kBAAC43B,GAAD,CACIpB,mBAAoBA,EACpBC,sBAAuBA,EACvBC,kBAAmBA,EACnBgB,qBAAsBA,IAE1B,kBAAC,IAAD,CACI5oB,QAAS,kBAAM2nB,GAAsB,IACrCr6B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAWZ,kBAAC,KAAD,CACIkO,QAAM,EAACC,UAAW,CAAEhN,KAAM,GAC1BxO,QAAS0d,EAAmBtgB,WAC3BsgB,EAAmBrgB,MAAQsqB,KAAuBt2B,OAAOiC,KAAKq0B,GAAmB12B,OAAS,IACvF,kBAAC,KAAD,CAAOyD,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBAGtDwa,EAAmBrgB,MAAQsqB,GAAsBt2B,OAAOiC,KAAKq0B,GAAmB12B,OAAS,GACtF,oCACI,yBAAKnD,UAAU,gCACX,yBAAKA,UAAU,mGACX,yBAAK+N,IAAK8rB,EAAiB,OAAaA,EAAiB,MAAjB,MAAqC5vB,IAAI,MAErF,yBAAKjK,UAAU,qCACX,4BACK65B,EAAiB,MAEtB,4BACKA,EAAiB,OAEtB,4BACKA,EAAiB,aAIrBA,EAAiB,KACd,mCAEI,8BACKA,EAAiB,MAsB7BA,EAAiB,UAAgBA,EAAiB,SAAa12B,OAAS,GACpE,oCACG,0CAEC02B,EAAiB,SAAaz4B,KAAI,SAAAqI,GAC/B,OACI,0BACIwI,QAAS,kBAAMoD,EAAQU,KAAR,0BAAgCtM,EAAInI,OAGlDmI,EAAI3J,aAahC+5B,EAAiB,MACd,oCACI,yBAAK75B,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAK+N,IAAK8rB,EAAiB,MAAYA,EAAiB,KAAU5vB,IAAI,OAK9E,yBAAK7J,MAAO,CACR+a,aAAc,WAKzB0e,EAAiB,SAAeA,EAAiB,QAAY12B,OAAS,GACnE,oCACI,yBAAKnD,UAAU,iCACX,wCAKJ,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,uDACV65B,EAAiB,QAAYz4B,KAAI,SAAAC,GAC9B,OACI,yBAAKrB,UAAU,4DAEX,yBAAKA,UAAU,gEACX,6BACI,qCAGA,yBAAKA,UAAU,iEAGVqB,EAAK6G,MAAM+qB,MACR,oCACI,4BACK5xB,EAAK6G,MAAM+qB,OAFpB,IAMZ,wBAAI7yB,MAAO,CACSs5B,eAAgB,iBAGfr4B,EAAK6G,MAAM8qB,UAIhB,4BACK3xB,EAAK6G,MAAM8qB,WAS/B3xB,EAAK22B,OACF,6BACI,kBAAC,KAAD,CACIphB,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMrvB,WAClB,sCAIJ,yBAAK3I,UAAU,iEACX,6BACI,kCAEA,kBAAC,KAAD,CACQA,UAAU,qBACV4W,cAAe,IACfxM,MAAO/I,EAAK22B,MAAMpvB,eAa7CvH,EAAKoxB,WACClvB,OAAOwN,OAAO1P,EAAKoxB,WAAWtvB,OAAS,GACtC,oCACI,0CAGA,yBAAKnD,UAAU,iEACVqB,EAAKoxB,WACClvB,OAAOiC,KAAKnE,EAAKoxB,WAAWtvB,OAAS,GACrCI,OAAOiC,KAAKnE,EAAKoxB,WAAWrxB,KAAI,SAAAk2B,GAC/B,OACI,6BACI,4BACKA,GAEL,4BACKj2B,EAAKoxB,UAAU6E,gBAexE,yBAAKl3B,MAAO,CACR+a,aAAc,WAOzB0e,EAAiB,OAAaA,EAAiB,MAAU12B,OAAS,GAC/D,oCACI,yBAAKnD,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACVktB,GAAO3pB,OAAOiC,KAAK0nB,GAAK9rB,KAAI,SAAA4b,GACzB,OACI,yBAAKhd,UAAU,qBACVktB,EAAIlQ,IAAWkQ,EAAIlQ,GAAQ5b,KAAI,SAAA0I,GAC5B,OAAO,yBAAKiE,IAAKjE,EAAK1J,MAAO,CACzB2S,MAAO,oBAcvC,yBAAK3S,MAAO,CACR+a,aAAc,WAKzB0e,EAAiB,OAAat2B,OAAOiC,KAAKq0B,EAAiB,OAAW12B,OAAS,GAC5E,oCACI,yBAAKnD,UAAU,iCACX,sCAKJ,yBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,uBAA6B8jB,EAAiB,MAAjB,MAE5C75B,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK8rB,EAAiB,MAAjB,OAAuCA,EAAiB,MAAjB,MAAqC5vB,IAAI,MAE9F,yBAAKjK,UAAU,oCACX,4BACK65B,EAAiB,MAAjB,MAEL,4BACKA,EAAiB,MAAjB,eAKb,yBAAKz5B,MAAO,CACR+a,aAAc,WAMzB0e,EAAiB,iBAAuBt2B,OAAOiC,KAAKq0B,EAAiB,iBAAqB12B,OAAS,GAChG,oCACI,yBAAKnD,UAAU,iCACX,iDAKJ,yBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,0BAAgC8jB,EAAiB,gBAAjB,MAC/C75B,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK8rB,EAAiB,gBAAjB,OAAiDA,EAAiB,gBAAjB,MAA+C5vB,IAAI,MAElH,yBAAKjK,UAAU,oCACX,4BACK65B,EAAiB,gBAAjB,MAEL,4BACKA,EAAiB,gBAAjB,eAKb,yBAAKz5B,MAAO,CACR+a,aAAc,gBCxa5C/K,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BActDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACTsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA6UE8C,GA9TG,SAAC,GAAoF,IAAlFuQ,EAAiF,EAAjFA,eAAgBC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,cAAcnN,EAAgC,EAAhCA,WAAWD,EAAqB,EAArBA,QAAqB,EAC9C3d,GAAe,GAAI,aAD2B,mBAC3F6d,EAD2F,KAC3ErD,EAD2E,OAE3E/X,mBAAS,IAFkE,mBAE3FtN,EAF2F,KAEtFugB,EAFsF,OAGvEjT,mBAAS,IAH8D,mBAG3FiW,EAH2F,KAGpFC,EAHoF,KAM5FhY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,YACpB0gB,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUpiB,EAAKc,KAAK,KAEpB6iB,GAAI,CACf3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,EAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpBpiB,YAAamK,EAAOsW,kBAnBA,QACX+E,EADW,SA0B2B,OAAxBA,EAAa5pB,QAQ7BurB,EAAW,CAAC,aACRzsB,GAAI8qB,EAAY,KAAW,GAC3BjoB,IAAKioB,EAAY,KAAW,GAC5BtsB,KAAMssB,EAAY,MAAY,GAC9BxlB,YAAawlB,EAAY,aAAmB,IACzC8O,IALG,mBAMLpN,KAGL/nB,QAAQC,IAAI,uBAAuBomB,GA5FdnN,OA6FrB8B,EA5FR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAuGvCsO,KAGJtT,EAAQC,eAAc,GACtBgqB,GAAkB,GA9DD,iCAjDO,IAAChc,IAiDR,OAAH,wDAkEZqK,EAAe,SAACtX,GAClBipB,GAAkB,IAIhB/pB,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IA4BhD,OALApL,QAAQC,IAAI,gBAAgBk1B,GAMxB,kBAAC,IAAD,CACI9pB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENwqB,EAFM,GAGJA,GAAiB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAAK,CAC3DokB,YAAa2T,EAAa,IACvBA,EAAa,GAAO5T,WACpB4T,EAAa,GAAO5T,UACvBG,kBAAmByT,EAAa,IAAWA,EAAa,GAAO1T,iBAAmB0T,EAAa,GAAO1T,gBACtGJ,OAAQ8T,EAAa,IAAUA,EAAa,GAAOp7B,MAAQo7B,EAAa,GAAOp7B,KAC/EunB,cAAe6T,EAAa,IAAUA,EAAa,GAAOt0B,aAAes0B,EAAa,GAAOt0B,gBAIpG,gBACG2K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACCzR,MAAO,CACxBokB,IAAK,QAGe3c,MAAM,WACN6W,QAASsc,EACTvW,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGxC,kBAACjS,EAAD,CAC5BI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBuc,EAAe7e,MAAf,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBuc,EAAe7e,MAAf,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBuc,EAAe7e,MAAf,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBuc,EAAe7e,MAAf,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACU9G,KAAK,cACLQ,YAAa,cACrCV,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgBuc,EAAe7e,MAAf,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBuc,EAAe7e,MAAf,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,iDACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgBuc,EAAe7e,MAAf,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgBuc,EAAe7e,MAAf,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACzS,EAAD,CACQI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgBuc,EAAe7e,MAAf,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgBuc,EAAe7e,MAAf,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgBuc,EAAe7e,MAAf,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgBuc,EAAe7e,MAAf,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgBuc,EAAe7e,MAAf,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgBuc,EAAe7e,MAAf,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgBuc,EAAe7e,MAAf,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgBuc,EAAe7e,MAAf,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,IAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,EACTxjB,KAAMujB,UC/UPzY,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACTsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAqTEoD,GAxSK,SAAC,GAAqF,IAAnF3K,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0ByN,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAE5D5d,GAAe,GAAI,UAFyC,mBAE9FgrB,EAF8F,KAEjFC,EAFiF,OAGrExoB,oBAAS,GAH4D,mBAG9FyO,EAH8F,KAGpFJ,EAHoF,OAI7DrO,oBAAS,GAJoD,mBAI9F+Y,EAJ8F,KAIhFC,EAJgF,OAK9EhZ,mBAAS,IALqE,mBAK9FtN,EAL8F,KAKzFugB,EALyF,OAM7EjT,mBAAS,IANoE,mBAMjGiW,EANiG,KAM1FC,EAN0F,KAQ/FhY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOorB,EAAkB,CACtC11B,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,YACpB0gB,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUpiB,EAAKc,KAAK,KAIpB6iB,GAAI,CACf3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,EAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpBpiB,YAAamK,EAAOsW,kBArBA,QACXgU,EADW,SA2BqB,OAArBA,EAAU74B,QA5EFyc,OA6ErB8B,EA5ER7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA2EvC+X,EAAW,CAAC,CACRzsB,GAAI+5B,EAAS,KAAW,GACxBl3B,IAAKk3B,EAAS,KAAW,GACzBv7B,KAAMu7B,EAAS,MAAY,GAC3Bz0B,YAAay0B,EAAS,aAAmB,KAJnC,mBAKLvN,KACL9c,EAAQmY,YACR9I,GAAyB,IAGzBiE,KAIJtT,EAAQC,eAAc,GA5CL,iCAjDO,IAACgO,IAiDR,OAAH,wDAiDZqK,EAAe,SAACtX,GAClBqO,GAAyB,IAIvBnP,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GAqBzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAET3c,MAAM,cACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGvD,kBAACjS,EAAD,CACbI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgB0pB,EAAYhsB,MAAZ,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgB0pB,EAAYhsB,MAAZ,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgB0pB,EAAYhsB,MAAZ,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgB0pB,EAAYhsB,MAAZ,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACU9G,KAAK,cACLQ,YAAa,cACrCV,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgB0pB,EAAYhsB,MAAZ,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgB0pB,EAAYhsB,MAAZ,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,iDACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgB0pB,EAAYhsB,MAAZ,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgB0pB,EAAYhsB,MAAZ,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACzS,EAAD,CACQI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgB0pB,EAAYhsB,MAAZ,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgB0pB,EAAYhsB,MAAZ,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgB0pB,EAAYhsB,MAAZ,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgB0pB,EAAYhsB,MAAZ,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgB0pB,EAAYhsB,MAAZ,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgB0pB,EAAYhsB,MAAZ,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgB0pB,EAAYhsB,MAAZ,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgB0pB,EAAYhsB,MAAZ,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,IAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,EACTxjB,KAAMujB,KAKW,kBAAC,GAAD,CACIlK,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SCpS1C7E,IAXiBhM,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAUtC8L,KAAxBD,QACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAA0B,IAAxBhY,EAAuB,EAAvBA,KAAMunB,EAAiB,EAAjBA,WAAiB,EACXnb,oBAAS,GADE,mBAClC8L,EADkC,KACzBC,EADyB,OAEiB/L,oBAAS,GAF1B,mBAElCgM,EAFkC,KAEXC,EAFW,OAGM1O,GAAe,GAAI,aAHzB,mBAGlB8kB,GAHkB,WAKnC5f,EAAUC,eAGV4f,EAAe,uCAAG,WAAO5zB,GAAP,iBAAA0O,EAAA,sEACIilB,EAAqB,CAC/CvvB,WAAY,CACXE,aAAc,CACbtE,SAJoB,QACjB6zB,EADiB,SAYqB,OAAxBA,EAAa3yB,SAvDFyc,EAwDN,cAvD1BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAqDpCof,EAAa5uB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnDysB,EAAWqH,IAfW,iCA3CO,IAACnW,IA2CR,OAAH,sDAiCrB,OACC,oCACC,kBAAC,KAAD,CAMCjG,KAAK,QAEL6D,WAAYrW,GAGZ,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEC,wBACClL,QAAS,WACRoD,EAAQU,KAAR,qBAA2BoH,EAAO7b,KAElCud,EAAyB1B,IAE1B/c,MAAO,CACN2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGR1O,OAQL,kBAAC,GAAD,CACCI,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBAGX,kBAAC,GAAD,CAECA,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACP,kBAAC,KAAD,CAAOnE,KAAK,UACX,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,kBAC9B,0BAAM7H,UAAU,WAAWiS,QAAS,WACnC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAOH,kBAAC,KAAD,CACCC,UAAW,kBAAM0V,EAAgB/X,EAAO7b,KACxCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACC1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAaLf,GAAyB,kBAAC0c,GAAD,CACzBxN,QAAStnB,EACTunB,WAAYA,EACZiN,eAAgBrc,EAChBsc,kBAAmBvc,EACnBwc,cAAetc,MAyHJyW,GA/GC,SAAC,GAAgB,qBAGFziB,mBAAS,IAHR,mBAGxBkb,EAHwB,KAGfC,EAHe,OAKQ5d,GAAe,GAAI,WAL3B,mBAKxBwe,EALwB,KAKdC,EALc,KAQ/B9e,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACI4e,EAAmB,CACrClpB,WAAW,CACVC,OAAQ,CACNsa,SAAU,QACVC,eAAgB,SALL,OACT5a,EADS,OAUfyoB,EAAWzoB,GAVI,2CAAH,qDAYbugB,KACE,IAtB4B,MA0BU1V,GAAe,GAAI,UA1B7B,gCA2B2ByC,oBAAS,IA3BpC,mBA2BxBwN,EA3BwB,KA2BDC,EA3BC,KAyD/B,OACC,oCAEC,yBAAKrgB,UAAU,yBACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,QAKA,kBAAC,GAAD,CACCsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,gBACZZ,SAAU,SAAAsS,GAAC,OAvBI,SAACxS,GACrB,GAAImvB,EAASnoB,KAAKrD,OAAS,EAAG,CAC7B,IAAMmyB,EAAa3G,EAASnoB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACvFgV,EAAWuH,IAoBQ/U,CAAavO,EAAEhE,OAAOxO,WAGvC,kBAAC,IAAD,CAECQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJzC,YASD,yBAAKrgB,UAAU,uCACb2uB,EAASpf,MAAQue,EAAQ3qB,OAAS,GAAK,kBAAC,GAAD,CACvC4qB,WAAYA,EACZvnB,KAAMsnB,IACNa,EAASrf,WAAa,kBAACmR,GAAD,MAGtBkO,EAASpf,QAAUue,EAAQ3qB,OAAS,IACpC,yBAAK/C,MAAO,CACX6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,gBAAgBiD,MAAOkL,KAAMK,4BAMpD,kBAACmmB,GAAD,CACCzN,QAASA,EACTC,WAAYA,EACZ3N,sBAAuBA,EACvBC,yBAA0BA,MCjUxBjQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BActDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACTsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAkUE8C,GApTG,SAAC,GAAkF,IAAhFuQ,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAcM,EAA8B,EAA9BA,iBAA8B,EAC5CrrB,GAAe,GAAI,aADyB,mBACzF6d,EADyF,KACzErD,EADyE,OAEzE/X,mBAAS,IAFgE,mBAEzFtN,EAFyF,KAEpFugB,EAFoF,OAGrEjT,mBAAS,IAH4D,mBAGzFiW,EAHyF,KAGlFC,EAHkF,KAM1FhY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,YACpB0gB,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUpiB,EAAKc,KAAK,KAEpB6iB,GAAI,CACf3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,EAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpBpiB,YAAamK,EAAOsW,kBAnBA,QACX+E,EADW,SA0B2B,OAAxBA,EAAa5pB,QAC7Bg5B,EAAiB,CACbl6B,GAAGyP,EAAOzP,GACV6C,IAAI4M,EAAOzP,GACXxB,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,cAExBb,QAAQC,IAAI,uBAAuBomB,GAjFdnN,OAkFrB8B,EAjFR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BA4FvCsO,KAGJtT,EAAQC,eAAc,GACtBgqB,GAAkB,GApDD,iCAhDO,IAAChc,IAgDR,OAAH,wDAwDZqK,EAAe,SAACtX,GAClBipB,GAAkB,IAIhB/pB,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IA4BhD,OALApL,QAAQC,IAAI,gBAAgBk1B,GAMxB,kBAAC,IAAD,CACI9pB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENwqB,EAFM,GAGJA,GAAiB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAAK,CAC3DokB,YAAa2T,EAAa,IACvBA,EAAa,GAAO5T,WACpB4T,EAAa,GAAO5T,UACvBG,kBAAmByT,EAAa,IAAWA,EAAa,GAAO1T,iBAAmB0T,EAAa,GAAO1T,gBACtGJ,OAAQ8T,EAAa,IAAUA,EAAa,GAAOp7B,MAAQo7B,EAAa,GAAOp7B,KAC/EunB,cAAe6T,EAAa,IAAUA,EAAa,GAAOt0B,aAAes0B,EAAa,GAAOt0B,gBAIpG,gBACG2K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACCzR,MAAO,CACxBokB,IAAK,QAGe3c,MAAM,WACN6W,QAASsc,EACTvW,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGxC,kBAACjS,EAAD,CAC5BI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBuc,EAAe7e,MAAf,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBuc,EAAe7e,MAAf,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBuc,EAAe7e,MAAf,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBuc,EAAe7e,MAAf,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACU9G,KAAK,cACLQ,YAAa,cACrCV,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgBuc,EAAe7e,MAAf,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBuc,EAAe7e,MAAf,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,iDACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgBuc,EAAe7e,MAAf,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgBuc,EAAe7e,MAAf,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACzS,EAAD,CACQI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgBuc,EAAe7e,MAAf,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgBuc,EAAe7e,MAAf,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgBuc,EAAe7e,MAAf,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgBuc,EAAe7e,MAAf,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgBuc,EAAe7e,MAAf,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgBuc,EAAe7e,MAAf,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgBuc,EAAe7e,MAAf,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgBuc,EAAe7e,MAAf,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,IAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,EACTxjB,KAAMujB,UCxULxM,GAAwBC,KAAxBD,OAuQOgQ,IAvQiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACUxC,GAAe,GAAI,aAD7B,mBAC9BsrB,EAD8B,KACdC,EADc,OAEcvrB,GAAe,GAAI,eAFjC,mBAE9BwrB,EAF8B,KAEZC,EAFY,OAGOhpB,oBAAS,GAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,OAIIroB,mBAAS,IAJb,mBAI9BsoB,EAJ8B,KAIhBM,EAJgB,KAO/B71B,EAASgnB,eACTtX,EAAUC,eACV6d,EAAQxtB,EAAM,GAgDpB,OA9CAmK,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS0rB,EAAqB,CAC7Ch2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,QACb0I,EADa,UAWf91B,QAAQC,IAAI,eAAe61B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpBhF,KAED,CAAC1D,IAEJrjB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4rB,EAAuB,CACzBl2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB2I,KAED,CAAC3I,IAKJptB,QAAQC,IAAI,mBAAoB21B,GAEhC51B,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,iCACX,0CAICy7B,EAAelsB,MAAQ2rB,GAAkB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAC1E,oCACI,kBAAC44B,GAAD,CACIf,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfM,iBAAkBA,IAEtB,kBAAC,IAAD,CACIvpB,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASupB,EAAensB,WACvBmsB,EAAelsB,MAAQ2rB,KAAmB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,IAC3E,kBAAC,KAAD,CAAOyD,YAAY,eAAeiD,MAAOkL,KAAMK,yBAGlDqmB,EAAelsB,MAAQ2rB,GAAkB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAC1E,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKk7B,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,SAW1C,yBAAKl7B,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACV27B,EAAiBrsB,WAAa,kBAACmR,GAAD,MAC9Bkb,EAAiBpsB,QAAUosB,EAAiBn1B,KAAKrD,OAAS,IACvD,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,kCAAkCiD,MAAOkL,KAAMK,0BAIzEumB,EAAiBpsB,MAAQosB,EAAiBn1B,MAAQm1B,EAAiBn1B,KAAKrD,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAOfgG,KAAK,QAEL6D,WAAY8e,EAAiBn1B,KAC7BsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAU5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OASjB,kBAAC,GAAD,CACII,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,YACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,+BC3QpCoQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BActDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAuIpCyU,GA5HG,SAAC,GAAiE,IAA/DuQ,EAA8D,EAA9DA,eAAgBC,EAA8C,EAA9CA,kBAAmBC,EAA2B,EAA3BA,cAA2B,EAC3B/qB,GAAe,GAAI,gBADQ,mBACxE6d,EADwE,KACxDrD,EADwD,KAGzE7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATX,QACXwlB,EADW,SAc2B,OAAxBA,EAAa5pB,QAzCRyc,OA0CrB8B,EAzCR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAoDvCsO,KAGJtT,EAAQC,eAAc,GACtBgqB,GAAkB,GAjCD,iCA3BO,IAAChc,IA2BR,OAAH,wDAqCZqK,EAAe,SAACtX,GAClBipB,GAAkB,IAIhB/pB,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IAMhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJwqB,KAGR,gBACG3pB,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,cACN6W,QAASsc,EACTvW,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBuc,EAAe7e,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBuc,EAAe7e,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgBuc,EAAe7e,MAAf,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBuc,EAAe7e,MAAf,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wBCwErC0a,IArMiB/P,KAAxBD,OAAwBC,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACUxC,GAAe,GAAI,gBAD7B,mBAC9BsrB,EAD8B,KACdC,EADc,OAEcvrB,GAAe,GAAI,eAFjC,mBAE9BwrB,EAF8B,aAGO/oB,oBAAS,IAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,KAM/Bt1B,EAASgnB,eAETwG,GADU7d,eACF3P,EAAM,IA4BpB,OA1BAmK,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACb0rB,EAAqB,CACvBh2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB0D,KAED,CAAC1D,IAOJptB,QAAQC,IAAI,iBAAkBy1B,GAE9B11B,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,iCACX,6CAICy7B,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,oCACI,kBAAC64B,GAAD,CACIhB,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeO,EAAej1B,OAElC,kBAAC,IAAD,CACIyL,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASupB,EAAensB,WACvBmsB,EAAelsB,MAAQksB,EAAej1B,QAAUjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,IACvF,kBAAC,KAAD,CAAOyD,YAAY,kBAAkBiD,MAAOkL,KAAMK,yBAGrDqmB,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKy7B,EAAej1B,KAAf,MAEL,4BACKi1B,EAAej1B,KAAf,aAEJi1B,EAAej1B,KAAf,MACG,oCAEI,8BACKi1B,EAAej1B,KAAf,OAKZi1B,EAAej1B,KAAf,MACG,oCAEI,8BACKi1B,EAAej1B,KAAf,OAMZi1B,EAAej1B,KAAf,QACG,qCAEI,8BACKi1B,EAAej1B,KAAf,SAMZi1B,EAAej1B,KAAf,cACG,6CAEI,8BACKi1B,EAAej1B,KAAf,kBA0C5Bi1B,EAAelsB,MAAQksB,EAAej1B,MAAQjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GAAKs4B,EAAej1B,KAAf,cAC1F,yBAAKxG,UAAU,iCACX,8CAOR,yBAAKA,UAAU,8BACV27B,EAAiBrsB,WAAa,kBAACmR,GAAD,MAC9Bgb,EAAelsB,MAAQksB,EAAej1B,MAAQi1B,EAAej1B,KAAf,gBAAyCi1B,EAAej1B,KAAf,aAAoCrD,OAAS,IACjI,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,qCAAqCiD,MAAOkL,KAAMK,0BAI5EqmB,EAAelsB,MAAQksB,EAAej1B,MAAQjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACrF,oCACKs4B,EAAej1B,KAAf,cAAuCi1B,EAAej1B,KAAf,aAAoCrD,OAAS,GACjFs4B,EAAej1B,KAAf,aAAoCpF,KAAI,SAAAD,GACpC,OACI,kBAAC,GAAD,CACIM,SAAUN,EAAQM,SAClBmC,UAAWzC,EAAO,cC5MpDiP,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BActDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA0IpC6X,GA7HgB,SAAC,GAAmE,IAAjEnnB,EAAgE,EAAhEA,SAAUiY,EAAsD,EAAtDA,WAAYD,EAA0C,EAA1CA,QAASoP,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAC1C5d,GAAe,GAAI,gBADuB,mBACvF6d,EADuF,KACvErD,EADuE,KAGxF7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEACU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATX,QACXwlB,EADW,SAc2B,OAAxBA,EAAa5pB,QA3CRyc,OA4CrB8B,EA3CR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA8CjC5S,EAJgB,WAClB,OAAO0qB,EAAQ1sB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQmF,EAASpF,IAG3CupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,EAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuC6oB,IACrD6B,EAXwC,sBAWpBH,EAAQrqB,MAAM,EAAGL,IAXG,CAWKE,GAXL,YAWqBwqB,EAAQrqB,MAAML,EAAQ,KACzF2qB,EAAWE,IAIX3J,KAGJtT,EAAQC,eAAc,GACtB0N,GAAW,GAlCM,iCA7BO,IAACM,IA6BR,OAAH,wDAsCZqK,EAAe,SAACtX,GAClB2M,GAAW,IAITzN,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IAMhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJhK,KAGR,gBACG6K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBuc,EAAe7e,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBuc,EAAe7e,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgBuc,EAAe7e,MAAf,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBuc,EAAe7e,MAAf,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wBC7DrC2c,GAtFF,SAAC,GAGA,IAFV6C,EAES,EAFTA,cAES,KADTC,WAE8Bxe,mBAAS,KAD9B,mBACF5Q,EADE,KACO0sB,EADP,OAEoC9b,mBAAS,IAF7C,mBAEFye,EAFE,KAEcC,EAFd,OAG8BnhB,GAAe,GAAI,eAHjD,mBAGFwe,EAHE,KAGQC,EAHR,KAKT9e,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACa4e,EAAmB,CACxClpB,WAAY,CACRC,OAAQ,CACJoa,eAAe,MAJf,QACNkP,EADM,SAUMA,EAAW9rB,OAAS,IAE5B+rB,EAAaD,EAAW7tB,KAAI,SAACsK,GAC/B,OAAOA,EAAI5L,QAEf4uB,EAAWQ,IAfH,2CAAH,qDAoBbrJ,KACD,IAgCH,OACI,oCAEI,kBAAC,KAAD,CAAU3T,QAASyc,EAASrf,WACvBqf,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAK,kBAAC,KAAD,CAC1CkQ,KAAK,WACL/S,YAAY,kBACZd,MAAO6xB,EACP3xB,SApCK,SAAC6xB,GAKlB,GAJAD,EAAmBC,GAEnBxrB,QAAQC,IAAI,mBAAoBurB,GAE5B5C,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKouB,EAAYpuB,OAAS,EAAG,CACrE,IAAM4rB,EAAsBwC,EAAYnwB,KAAI,SAACC,GACzC,IAAM2tB,EAAmBL,EAASnoB,KAAKjC,MACnC,SAACkF,GAAD,OAASA,EAAI3J,KAAKiZ,gBAAkB1X,EAAK0X,iBAE7C,GAAIiW,EACA,OAAOA,KAGfjpB,QAAQC,IAAI,sBAAuB+oB,GACnCoC,EAAcpC,QAGdoC,EAAc,KAmBN/wB,MAAO,CAAE2S,MAAO,SAEf/Q,EAAQiB,QAAO,SAAAuuB,GAAC,OAAKH,EAAezwB,SAAS4wB,MAAIpwB,KAAI,SAAAC,GAAI,OACtD,kBAAC,KAAO6V,OAAR,CAAe/S,IAAK9C,EAAM7B,MAAO6B,GAC5BA,UCjCdgyB,GApCY,SAAC,GAGd,IAFV1B,EAES,EAFTA,eACAD,EACS,EADTA,YAEA,OACI,yBACItxB,MAAO,CAEHkzB,cAAe,QAEnBtzB,UAAU,6CACV,yBAAKA,UAAU,qDACV0xB,GAAeA,EAAYvuB,OAAS,GAAKuuB,EAAYtwB,KAAI,SAAAC,GACtD,OAAO,kBAACkyB,GAAD,CACH5B,eAAgBA,EAChBD,YAAaA,EACb9tB,UAAWvC,EAAKsF,IAChBlF,SAAUJ,EAAKI,SACfJ,KAAMA,EACNuwB,UAAWvwB,EAAKuwB,iBAIrBF,EAAYvuB,OAAS,IACpB,yBAAK/C,MAAO,CACR8V,WAAY,SAEZ,kBAAC,GAAD,CAAOrO,MAAM,mBAAmBmN,OAAQ,UCP1D5E,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB,KAAQ,GACR,KAAQ,GACR,aAAgB,KAChB,OAAU,GACV,WAAc,GACd,gBAAmB,GACnB,cAAgB,EAChB,aAAgB,IAgbLqa,GAnaK,SAAC,GAAqF,IAAnF3K,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0ByN,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAEjD5d,GAAe,GAAI,aAF8B,mBAE9F8rB,EAF8F,KAE9EC,EAF8E,OAGrEtpB,oBAAS,GAH4D,mBAG9FyO,EAH8F,KAGpFJ,EAHoF,OAI7DrO,oBAAS,GAJoD,mBAI9F+Y,EAJ8F,KAIhFC,EAJgF,OAK7DhZ,mBAAS,IALoD,gCAMjEA,mBAAS,KANwD,mBAM9Fwe,EAN8F,KAMlFD,EANkF,OAO/Dve,mBAAS,IAPsD,mBAO9F8e,EAP8F,KAOjFC,EAPiF,OAQzD/e,mBAAS,IARgD,mBAQ9FupB,EAR8F,KAQ9EC,EAR8E,OASvDxpB,mBAAS,IAT8C,mBAS9FypB,EAT8F,KAS7EC,EAT6E,KAa/FxrB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAhB,EAAA,6DAEX9E,EAAkBwmB,EAAYvuB,OAAS,EAAIuuB,EAAYtwB,KAAI,SAAAD,GAC7D,MAAO,CACHwF,IAAKxF,EAAQwF,IACbirB,UAAWzwB,EAAQywB,UACnBnwB,SAAUN,EAAQM,aAErB,GAGC0J,EAAekxB,EAAgBl5B,OAAS,EAAIk5B,EAAgBj7B,KAAI,SAAAD,GAClE,MAAO,CACHwF,IAAKxF,EAAQwF,IACbirB,UAAWzwB,EAAQywB,UACnBnwB,SAAUN,EAAQM,aAErB,GAjBY,SAoBOy6B,EAA0B,CAC9Cx2B,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBje,KAAMgG,EAAOhG,KAAKie,OAClBhe,aAAc+F,EAAO/F,aAAage,OAClCzd,OAAQwF,EAAOxF,OAAOyd,OACtB1d,WAAYyF,EAAOzF,WAAW0d,OAC9Bxd,cAAc,EACdN,gBAAiBA,EACjBC,aAAcA,KAlCL,QAoBXkwB,EApBW,SAuCqB,OAArBA,EAAU74B,QA3FFyc,OA4FrB8B,EA3FR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA0FvC+X,EAAW,CAAC,CACRzsB,GAAI+5B,EAAS,KAAW,GACxBl3B,IAAKk3B,EAAS,KAAW,GACzBv7B,KAAMu7B,EAAS,MAAY,GAC3Bz0B,YAAay0B,EAAS,aAAmB,KAJnC,mBAKLvN,KACL9c,EAAQmY,YACR9I,GAAyB,IAGzBiE,KAIJtT,EAAQC,eAAc,GAxDL,iCApDO,IAACgO,IAoDR,OAAH,wDA6DZqK,EAAe,SAACtX,GAClBqO,GAAyB,IAIvBnP,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GASzBrB,qBAAU,WACN,IAAKmsB,EAAc,UAAe,CAC9B,IAAM9sB,EAAQ8sB,EAAc,MAC5B,GAAI9sB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,GAIrDI,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACjCI,OAAOwN,OAAO5B,EAAK,OACnB,IACH8T,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP/P,GAAsB+P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACpBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACT/P,GAAsB+P,aAQ/C,CAAC4H,IAMJnsB,qBAAU,WAEN,GAAIshB,EAAWjuB,OAAS,GACpB,GAAIiuB,EAAWjuB,OAASuuB,EAAYvuB,OAAQ,CACxC,IAAMyuB,EAAYR,EAAWA,EAAWjuB,OAAS,GAA/B,QAA6CA,OAAS,GAAKiuB,EAAWA,EAAWjuB,OAAS,GAA/B,QAA6C,GAA7C,IAC7E4C,QAAQC,IAAI,YAAa4rB,GAEzBD,EAAe,GAAD,mBAAKD,GAAL,gBACPN,EAAWA,EAAWjuB,OAAS,GADxB,CAEVwD,IAAKyqB,EAAWA,EAAWjuB,OAAS,GAA/B,GACLyuB,UAAWA,EACXnwB,SAAU,YAKb,GAAI2vB,EAAWjuB,OAASuuB,EAAYvuB,OAAQ,CAC7C4C,QAAQC,IAAI,aAAcorB,GAC1BrrB,QAAQC,IAAI,cAAe0rB,GAE3B,IAAM6C,EAAiB7C,EAAYzuB,QAAO,SAAA5B,GACtC,IAAImzB,GAAS,EAMb,OALApD,EAAWnO,SAAQ,SAAA9hB,GACXA,EAAQG,KAAOD,EAAKsF,MACpB6tB,GAAS,MAGVA,KAEX7C,EAAe4C,SAMnB5C,EAAe,MAKpB,CAACP,IAIJthB,qBAAU,WAEN,GAAIqsB,EAAeh5B,OAAS,GACxB,GAAIg5B,EAAeh5B,OAASk5B,EAAgBl5B,OAAQ,CAChD,IAAMyuB,EAAYuK,EAAeA,EAAeh5B,OAAS,GAAvC,QAAqDA,OAAS,GAAKg5B,EAAeA,EAAeh5B,OAAS,GAAvC,QAAqD,GAArD,IACrF4C,QAAQC,IAAI,YAAa4rB,GAEzB0K,EAAmB,GAAD,mBAAKD,GAAL,gBACXF,EAAeA,EAAeh5B,OAAS,GAD5B,CAEdwD,IAAKw1B,EAAeA,EAAeh5B,OAAS,GAAvC,GACLyuB,UAAWA,EACXnwB,SAAU,YAKb,GAAI06B,EAAeh5B,OAASk5B,EAAgBl5B,OAAQ,CACrD4C,QAAQC,IAAI,iBAAkBm2B,GAC9Bp2B,QAAQC,IAAI,cAAe0rB,GAE3B,IAAM6C,EAAiB8H,EAAgBp5B,QAAO,SAAA5B,GAC1C,IAAImzB,GAAS,EAMb,OALA2H,EAAelZ,SAAQ,SAAA9hB,GACfA,EAAQG,KAAOD,EAAKsF,MACpB6tB,GAAS,MAGVA,KAEX8H,EAAmB/H,SAMvB+H,EAAmB,MAKxB,CAACH,IAgBJ,OACI,kBAAC,IAAD,CACI/qB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIkB,MAAO,OACP3S,MAAO,CACHokB,IAAK,QAET3c,MAAM,iBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAIhD,yBAAKnR,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBwqB,EAAe9sB,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBwqB,EAAe9sB,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,YAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,OACNE,MAAOuR,EAAOhG,KACdjL,KAAK,OACLF,QAAU8R,EAAQ3G,MAAQyG,EAAOzG,OAC3B0G,GAAgBwqB,EAAe9sB,MAAf,WAEtBtP,YAAc6R,EAAQ3G,MAAQyG,EAAOzG,OAC/B0G,GAAgBwqB,EAAe9sB,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAOhC,kBAACzS,EAAD,CACII,MAAM,gBACNE,MAAOuR,EAAO/F,aACdlL,KAAK,eACLF,QAAU8R,EAAQ1G,cAAgBwG,EAAOxG,eACnCyG,GAAgBwqB,EAAe9sB,MAAf,mBAEtBtP,YAAc6R,EAAQ1G,cAAgBwG,EAAOxG,eACvCyG,GAAgBwqB,EAAe9sB,MAAf,mBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAK3R,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,SACNE,MAAOuR,EAAOxF,OACdzL,KAAK,SACLF,QAAU8R,EAAQnG,QAAUiG,EAAOjG,SAC7BkG,GAAgBwqB,EAAe9sB,MAAf,aAEtBtP,YAAc6R,EAAQnG,QAAUiG,EAAOjG,SACjCkG,GAAgBwqB,EAAe9sB,MAAf,aACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,cAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,cACNE,MAAOuR,EAAOzF,WACdxL,KAAK,aACLF,QAAU8R,EAAQpG,YAAckG,EAAOlG,aACjCmG,GAAgBwqB,EAAe9sB,MAAf,iBAEtBtP,YAAc6R,EAAQpG,YAAckG,EAAOlG,aACrCmG,GAAgBwqB,EAAe9sB,MAAf,iBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,mBAahC,wBAAI3R,UAAU,mBAAd,oBAIA,kBAACu8B,GAAD,CACIpL,cAAeA,EACfC,WAAYA,IAGhB,yBAAKhxB,MAAO,CACR6V,UAAW,UAGf,wBAAIjW,UAAU,mBAAd,6BAIA,kBAACw8B,GAAD,CACI9K,YAAaA,EACbC,eAAgBA,IAIpB,wBAAI3xB,UAAU,mBAAd,iBAIA,kBAACu8B,GAAD,CACIpL,cAAeiL,EACfhL,WAAY+K,IAGhB,yBAAK/7B,MAAO,CACR6V,UAAW,UAGf,wBAAIjW,UAAU,mBAAd,0BAIA,kBAACw8B,GAAD,CACI9K,YAAa2K,EACb1K,eAAgB2K,KAOxB,kBAAC,GAAD,CACI3d,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SCta1C7E,IAXiBhM,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAUzC8L,KAAxBD,QACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAA0B,IAAxBhY,EAAuB,EAAvBA,KAAMunB,EAAiB,EAAjBA,WAAiB,EACRnb,oBAAS,GADD,mBAC/B8L,EAD+B,KACtBC,EADsB,OAEoB/L,oBAAS,GAF7B,mBAE/BgM,EAF+B,KAERC,EAFQ,OAGS1O,GAAe,GAAI,gBAH5B,mBAGf8kB,GAHe,WAKhC5f,EAAUC,eAGV4f,EAAe,uCAAG,WAAO5zB,GAAP,iBAAA0O,EAAA,sEACOilB,EAAqB,CAC5CvvB,WAAY,CACRE,aAAc,CACVtE,SAJQ,QACd6zB,EADc,SAYwB,OAAxBA,EAAa3yB,SAvDRyc,EAwDG,iBAvDhCC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAqDjCof,EAAa5uB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnDysB,EAAWqH,IAfK,iCA3CI,IAACnW,IA2CL,OAAH,sDAiCrB,OACI,oCACI,kBAAC,KAAD,CAMIjG,KAAK,QAEL6D,WAAYrW,GAGZ,kBAAC,GAAD,CACIqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCAEI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,wBAA8BoH,EAAO7b,KAErCud,EAAyB1B,IAE7B/c,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAEX1O,OAQjB,kBAAC,GAAD,CACII,MAAM,iBACNoV,UAAU,uBACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,gBACNoV,UAAU,oBACV9Y,IAAI,KACJnE,UAAU,yBAGd,kBAAC,GAAD,CACI6H,MAAM,aACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,uBAEVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCAEI,wBACI/c,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGb,kBAAC,KAAD,KACE1O,QAWjB,kBAAC,GAAD,CACII,MAAM,WACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,uBAEVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCAEI,wBACI/c,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGb,kBAAC,KAAD,KACE1O,QAQjB,kBAAC,GAAD,CAEIzH,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,kBAAC,KAAD,CAAOnE,KAAK,UACR,uBAAGrC,KAAK,MACJ,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,qBAC3B,0BAAM7H,UAAU,WAAWiS,QAAS,WAChC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAOZ,kBAAC,KAAD,CACIC,UAAW,kBAAM0V,EAAgB/X,EAAO7b,KACxCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACI1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAavBf,GAAyB,kBAAC6d,GAAD,CACtB3O,QAAStnB,EACTunB,WAAYA,EACZpP,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MA8GX8d,GApGI,SAAC,GAAgB,qBAGF9pB,mBAAS,IAHR,mBAGxBkb,EAHwB,KAGfC,EAHe,OAKQ5d,GAAe,GAAI,cAL3B,mBAKxBwe,EALwB,KAKdC,EALc,KAQ/B9e,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACO4e,EAAmB,IAD1B,OACNtpB,EADM,OAGZyoB,EAAWzoB,GAHC,2CAAH,qDAKbugB,KACD,IAGH9f,QAAQC,IAAI,WAAY2oB,GAlBO,MAoB2B/b,oBAAS,GApBpC,mBAoBxBwN,EApBwB,KAoBDC,EApBC,KA+C/B,OACI,oCAEI,yBAAKrgB,UAAU,yBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uCAAd,WAIA,kBAAC,GAAD,CACIsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,kBACZ8uB,SAAU,SAAA5vB,GAAK,OAtBlB,SAACA,GAClB,GAAImvB,EAASnoB,KAAKrD,OAAS,EAAG,CAC1B,IAAMmyB,EAAa3G,EAASnoB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACvFgV,EAAWuH,IAmBwB/U,CAAa/gB,OAGxC,kBAAC,IAAD,CAEIQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJ5C,YASJ,yBAAKrgB,UAAU,uCACV2uB,EAASpf,MAAQue,EAAQ3qB,OAAS,GAAK,kBAAC,GAAD,CACpC4qB,WAAYA,EACZvnB,KAAMsnB,IACTa,EAASrf,WAAa,kBAACmR,GAAD,MAGtBkO,EAASpf,QAAUue,EAAQ3qB,OAAS,IACjC,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,kBAAkBiD,MAAOkL,KAAMK,4BAMlE,kBAACunB,GAAD,CACI7O,QAASA,EACTC,WAAYA,EACZ3N,sBAAuBA,EACvBC,yBAA0BA,MC1VlCnJ,GAAWC,KAAXD,OAIF9G,GAAmBC,MAAaC,MAAM,CAC3ChG,UAAW+F,MACT/Q,MAAM,cACNF,WACAoR,IAAI,EAAG,+CACTjG,SAAU8F,MACR/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,8CACT7F,MAAO0F,MACLjR,SAAS,sCACTw9B,IAAI,GAAI,uCACVnsB,SAAUJ,MACR/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,4CACT5F,SAAUyF,MACR/Q,MAAM,kBACNF,WACAoR,IAAI,EAAG,mDAET9F,MAAO2F,MAAa/Q,MAAM,SAASoL,MAAM,gCAMpCgG,GAAgB,CACrB/F,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVK,SAAU,GACVC,SAAU,GACVgyB,QAAS,GACTpsB,SAAU,IAaL6T,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAgb9B4R,GApaQ,SAAC,GAA+F,IAA7FxH,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0Byc,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElE5sB,GAAe,GAAI,eAF+C,mBAE9G6sB,EAF8G,KAE5FC,EAF4F,OAG7DrqB,mBAAS,IAHoD,mBAG9GsqB,EAH8G,KAGxFC,EAHwF,OAInEvqB,mBAAS,IAJ0D,mBAI9GwqB,EAJ8G,KAI3FC,EAJ2F,OAMzEzqB,mBAAS,IANgE,mBAM9G0qB,EAN8G,KAM9FC,EAN8F,OAO/E3qB,mBAAS,IAPsE,mBAO9G4qB,EAP8G,KAOjGC,EAPiG,OASlEttB,GAClD,GACA,eAXoH,mBAS9GutB,EAT8G,KAS5FC,EAT4F,OAcxExtB,GAAe,GAAI,YAdqD,mBAc9GytB,EAd8G,KAc/FC,EAd+F,OAgB/EjrB,mBAAS,IAhBsE,gCAiBrFA,mBAAS,KAjB4E,mBAsB/G9B,GAtB+G,UAsBnG,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAESitB,EAAuB,CAEnDl7B,KAAM,CACL4I,MAAOoG,EAAOpG,MACdD,MAAOqG,EAAOrG,MACd+F,SAAUM,EAAON,SACjB7F,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBC,QAAS0yB,EACTzyB,KAAM2yB,KAbY,QAEdU,EAFc,SAmB4B,OAA1BA,EAAet7B,QAlENyc,OAmE9B8B,EAlEF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAiE1C+mB,EAAgB,CAAC,aAChBz7B,GAAIw8B,EAAc,KAAW,GAC7B35B,IAAK25B,EAAc,KAAW,IAE3BA,IAJW,mBAKVhB,KACLzc,GAAyB,GACzBrP,EAAQmY,aAGR7E,KAKDtT,EAAQC,eAAc,GArCF,iCA/CU,IAACgO,IA+CX,OAAH,yDA0CZ8e,EAAe,SAACv+B,GACrB69B,EAAqB79B,IAGhBw+B,EAAkB,SAACx+B,GACxB29B,EAAwB39B,IAGzBsQ,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2tB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe96B,OAAS,IAEvCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GAC1C,MAAO,CACNhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGhBy9B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpuB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6tB,EAAoB,CAC7Cn4B,WAAY,CACXE,aAAc,CACb4E,QAAS0yB,MAJK,QACXiB,EADW,SAUEA,EAAYh7B,OAAS,IAEjCq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACpC,MAAO,CACNjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGb29B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAKJ,IAAM5T,EAAe,SAACtX,GACrBqO,GAAyB,IAIpBnP,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAOzG,WACPyG,EAAOxG,UACPwG,EAAON,UACPM,EAAOpG,OACPoG,EAAOnG,WAaV,OALA7E,QAAQC,IAAI,gBAAiB43B,GAM5B,kBAAC,IAAD,CACCxsB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAKNG,UAAW,CACV5S,OAAQ,IACRyE,QAAS,QAEV3O,MAAM,mBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAK7C,yBAAKnR,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YACnCmH,GAAgBurB,EAAiB7tB,MAAjB,gBAEnBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACvCmH,GAAgBurB,EAAiB7tB,MAAjB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WAClCkH,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACtCkH,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC/B8G,GAAgBurB,EAAiB7tB,MAAjB,YAEnBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QACnC8G,GAAgBurB,EAAiB7tB,MAAjB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC/B+G,GAAgBurB,EAAiB7tB,MAAjB,YAEnBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QACnC+G,GAAgBurB,EAAiB7tB,MAAjB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,cAcpB,yBAAKvR,MAAO,CACXgW,YAAa,SAEb,kBAAClX,EAAD,CACCI,MAAM,WACNE,MAAOuR,EAAON,SACd3Q,KAAK,WACLF,QAAU8R,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAKnB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiB88B,EAAiB7tB,MAAjB,cAA8C,QAAU,GACzEhP,KAAM68B,EAAiB7tB,MAAjB,eAGN,kBAAC,KAAD,CACCkvB,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBACpEsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBjZ,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAUjD,yBAAKE,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiB88B,EAAiB7tB,MAAjB,WAA2C,QAAU,GACtEhP,KAAM68B,EAAiB7tB,MAAjB,YAGN,kBAAC,KAAD,CACCnP,UAAU,kBACVq+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,yBAAyBiD,MAAOkL,KAAMK,yBAC1EsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,aAQlD,yBAAKM,MAAO,CACX6V,UAAW,UAKZ,yBAAKjW,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WAClC6G,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACtC6G,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,wBACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WAClC4G,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACtC4G,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,uBC9dnBuF,GAAWC,KAAXD,OAGF9G,GAAmBC,MAAaC,MAAM,CACxChG,UAAW+F,MACR/Q,MAAM,aACNF,WACAoR,IAAI,EAAG,+CACVjG,SAAU8F,MACP/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,6CACV7F,MAAO0F,MACJjR,SAAS,sCACTw9B,IAAI,GAAI,uCACXnsB,SAAUJ,MACP/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,4CACV5F,SAAUyF,MACP/Q,MAAM,kBACNF,WACAoR,IAAI,EAAG,mDAEV9F,MAAO2F,MAAa/Q,MAAM,SAASoL,MAAM,gCAerC4Z,GAAwB,SAACrF,GAChCC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAoY/ByU,GAlXG,SAAC,GAA6E,IAA3E7e,EAA0E,EAA1EA,SAAU+S,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAASoe,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EACrC5sB,GAAe,GAAI,kBADkB,mBACvFmuB,EADuF,KAClEC,EADkE,OAIvC3rB,mBAAS,IAJ8B,mBAIvFsqB,EAJuF,KAIlEC,EAJkE,OAK1CvqB,mBAAS,IALiC,mBAKpFwqB,EALoF,KAKlEC,EALkE,OAOhDzqB,mBAAS,IAPuC,mBAOpF0qB,EAPoF,KAOrEC,EAPqE,OAQtD3qB,mBAAS,IAR6C,mBAQpF4qB,EARoF,KAQxEC,EARwE,OAUxCttB,GAC/C,GACA,eAZuF,mBAUpFutB,EAVoF,KAUlEC,EAVkE,OAe5CxtB,GAAe,GAAI,YAfyB,mBAelFytB,EAfkF,KAenEC,EAfmE,OAiBnDjrB,mBAAS,IAjB0C,gCAkBzDA,mBAAS,KAlBgD,mBAuBxF9B,GAvBwF,UAuB5E,uCAAG,WAAOC,EAAcC,GAArB,qBAAAhB,EAAA,sEACauuB,EAA0B,CAC3D74B,WAAY,CACXE,aAAc,CACZtE,GAAIyP,EAAOzP,KAGdS,KAAM,CACL4I,MAAOoG,EAAOpG,MACLD,MAAOqG,EAAOrG,MACd+F,SAAUM,EAAON,SACjB7F,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBC,QAAS0yB,EACTzyB,KAAM2yB,KAhBI,QACboB,EADa,SAsBmC,OAA7BA,EAAkBh8B,QA5Ebyc,OA6E7B8B,EA5EH7B,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA+ElC5S,EAJc,WACrB,OAAO05B,EAAa17B,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQqK,EAAStK,IAG3CupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,QAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuCi7B,IACrDvQ,EAXkD,sBAW9B6O,EAAar5B,MAAM,EAAGL,IAXQ,CAWAE,GAXA,YAWgBw5B,EAAar5B,MAAML,EAAQ,KACnG25B,EAAgB9O,IAIlB3J,KAGCtT,EAAQC,eAAc,GACtB0N,GAAW,GA1CM,iCAtDU,IAACM,IAsDX,OAAH,yDA+CT8e,EAAe,SAACv+B,GAClB69B,EAAqB79B,IAGnBw+B,EAAkB,SAACx+B,GACrB29B,EAAwB39B,IAG/BsQ,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2tB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe96B,OAAS,IAEvCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GAC1C,MAAO,CACNhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGhBy9B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACK,IAGHpuB,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACS6tB,EAAoB,CACjCn4B,WAAY,CACRE,aAAc,CACZ4E,QAAS0yB,MAJX,QACXiB,EADW,SAUEA,EAAYh7B,OAAS,IAEjCq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACpC,MAAO,CACNjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGb29B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACK,CAAClB,IAQP,IAAM5T,EAAe,SAACtX,GACf2M,GAAW,IAKVzN,EAA4B,SAACH,EAAOI,GAC3C,QAAIA,GACOJ,EAAOzG,WACPyG,EAAOxG,UACPwG,EAAON,UACPM,EAAOpG,OACPoG,EAAOnG,WAMnB,OACC,kBAAC,IAAD,CACAwG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP9E,KAGL,gBACC2F,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACAhK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAalB,EAAakB,IAChC0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACf/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,IAE5CwT,UAAW,CACE5S,OAAQ,IACRyE,QAAS,SAGnB,yBAAKxW,UAAU,mBACZ,yBAAKA,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YACpCmH,GAAgB6sB,EAAoBnvB,MAApB,gBAElBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACvCmH,GAAgB6sB,EAAoBnvB,MAApB,gBACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,iBAIb,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WACnCkH,GAAgB6sB,EAAoBnvB,MAApB,eAElBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACtCkH,GAAgB6sB,EAAoBnvB,MAApB,eACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,iBAYV,yBAAK3R,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAChC8G,GAAgB6sB,EAAoBnvB,MAApB,YAElBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QACnC8G,GAAgB6sB,EAAoBnvB,MAApB,YACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,aAIb,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAChC+G,GAAgB6sB,EAAoBnvB,MAApB,YAElBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QACnC+G,GAAgB6sB,EAAoBnvB,MAApB,YACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,cActB,yBAAK3R,UAAU,mBACN,yBAAKA,UAAU,yBACf,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACN0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBlZ,aAAcmM,GAAYA,EAASpB,QACnC9K,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAIxC,yBAAKE,UAAU,yBACf,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACNP,aAAcmM,GAAYA,EAASnB,KACnCiO,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOrC,yBAAKM,MAAO,CACR6V,UAAW,UAKf,yBAAKjW,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WACnC6G,GAAgB6sB,EAAoBnvB,MAApB,eAElBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACtC6G,GAAgB6sB,EAAoBnvB,MAApB,eACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,gBAIb,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,wBACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WACnC4G,GAAgB6sB,EAAoBnvB,MAApB,eAElBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACtC4G,GAAgB6sB,EAAoBnvB,MAApB,eACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,uBC5Zd0K,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACGrd,IAAXqf,QA+BFC,GAAU,SAAC,GAA0C,IAAzChY,EAAwC,EAAxCA,KAAKu2B,EAAmC,EAAnCA,gBAAmC,EACzBnqB,oBAAS,GADgB,mBAC/C8L,EAD+C,KACvCC,EADuC,OAEG/L,oBAAS,GAFZ,mBAE/CgM,EAF+C,KAEzBC,EAFyB,KAIjDxJ,EAAUC,eAJuC,EAMGnF,GAAe,GAAI,kBANtB,mBAM1BsuB,GAN0B,WAO9CC,EAAoB,uCAAG,WAAOp9B,GAAP,iBAAA0O,EAAA,sEACKyuB,EAA0B,CACxD/4B,WAAY,CACVE,aAAc,CACZtE,SAJqB,QACrBq9B,EADqB,SAWsB,OAA7BA,EAAkBn8B,SA7Cbyc,EA8CJ,mBA7C5BC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA2CnC4oB,EAAmBp4B,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACzDy7B,EAAgB6B,IAdc,iCAlCH,IAAC3f,IAkCE,OAAH,sDAmB5B,OACI,oCACA,kBAAC,KAAD,CAMAjG,KAAK,QAEL6D,WAAYrW,GAGV,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCACE,wBACElL,QAAS,WACPoD,EAAQU,KAAR,0BAAgCoH,EAAO7b,KAEvCud,EAAyB1B,IAE3B/c,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAET1O,OAOP,kBAAC,GAAD,CACCI,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAIV,kBAAC,GAAD,CACA6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,kBAAC,KAAD,CAAOnE,KAAK,UAEZ,4BACE,kBAAC,KAAD,KACGvR,QAoCT,kBAAC,GAAD,CAEAzH,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACV,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,uBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,SASC,kBAAC,KAAD,CAEAC,UAAW,kBAAMkf,EAAqBvhB,EAAO7b,KAC7CuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAElD,0BACE1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAYRf,GAA2B,kBAAC,GAAD,CAC5Bke,aAAct2B,EACdu2B,gBAAiBA,EACjBpe,WAAYA,EACZD,QAASA,EACT9S,SAAUgT,MAmIClM,iBAvHM,SAAC,GAAqB,EAApB2C,QAAqB,IAAD,EAGAzC,mBAAS,IAHT,mBAGhCkqB,EAHgC,KAGnBC,EAHmB,OAKU5sB,GAAe,GAAI,gBAL7B,mBAKhC0uB,EALgC,KAKjBC,EALiB,KAQvChvB,qBAAU,YACS,uCAAG,4BAAAE,EAAA,sEACK8uB,EAAwB,CAC/Cp5B,WAAW,CACTC,OAAQ,CACNsa,SAAU,QACVC,eAAgB,SALF,OACb6e,EADa,OAUnBhC,EAAgBgC,GAVG,2CAAH,qDAYlBC,KACC,IAMJ,IA5ByC,EAwCgBpsB,oBAAS,GAxCzB,mBAwClCwN,EAxCkC,KAwCZC,EAxCY,KA8C1C,OACC,oCAIE,yBAAKrgB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,aAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,oBACZ8uB,SAAU,SAAA5vB,GAAK,OArCF,SAACA,GACpB,GAAGq/B,EAAcr4B,KAAKrD,OAAS,EAAG,CAChC,IAAMy7B,EAAkBC,EAAcr4B,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACjGgkB,EAAgB6B,IAkCMre,CAAa/gB,OAI7B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJtC,YAWA,yBAAKrgB,UAAU,uCAWxB,yBAAKA,UAAU,uCACT6+B,EAActvB,MAAQutB,EAAa35B,OAAS,GAAK,kBAAC,GAAD,CAClD45B,gBAAiBA,EAChBv2B,KAAMs2B,IACN+B,EAAcvvB,WAAa,kBAACmR,GAAD,MAC3Boe,EAActvB,QAAUutB,EAAa35B,OAAS,IACpD,kBAAC,GAAD,CAAO0E,MAAM,wBAMfg3B,EAActvB,MACX,kBAAC0vB,GAAD,CACAlC,gBAAiBA,EACX3c,sBAAuBA,EACvBC,yBAA0BA,EAC1Byc,aAAc+B,EAAcr4B,WChV9B0Q,GAAWC,KAAXD,OAGF9G,GAAmBC,MAAaC,MAAM,CACxChG,UAAW+F,MACN/Q,MAAM,aACNF,WACAoR,IAAI,EAAG,+CACZjG,SAAU8F,MACL/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,6CACZ7F,MAAO0F,MACFjR,SAAS,sCACTw9B,IAAI,GAAI,uCACbhyB,SAAUyF,MACL/Q,MAAM,kBACNF,WACAoR,IAAI,EAAG,mDAEZ9F,MAAO2F,MAAa/Q,MAAM,SAASoL,MAAM,gCAevC4Z,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA4XpCyU,GA3WG,SAAC,GAA8C,IAA5C7e,EAA2C,EAA3CA,SAAU+S,EAAiC,EAAjCA,WAAYD,EAAqB,EAArBA,QAAqB,EACHvO,GAAe,GAAI,kBADhB,mBACrDmuB,EADqD,KAChCC,EADgC,OAIJ3rB,mBAAS,IAJL,mBAIrDsqB,EAJqD,KAI/BC,EAJ+B,OAKVvqB,mBAAS,IALC,mBAKrDwqB,EALqD,KAKlCC,EALkC,OAOhBzqB,mBAAS,IAPO,mBAOrD0qB,EAPqD,KAOrCC,EAPqC,OAQtB3qB,mBAAS,IARa,mBAQrD4qB,EARqD,KAQxCC,EARwC,OAUTttB,GAC/C,GACA,eAZwD,mBAUrDutB,EAVqD,KAUnCC,EAVmC,OAefxtB,GAAe,GAAI,YAfJ,mBAerDytB,EAfqD,KAetCC,EAfsC,OAiBtBjrB,mBAAS,IAjBa,gCAkB5BA,mBAAS,KAlBmB,mBAuBtD9B,GAvBsD,UAuB1C,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACeuuB,EAA0B,CACtD74B,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACF4I,MAAOoG,EAAOpG,MACdD,MAAOqG,EAAOrG,MACd+F,SAAUM,EAAON,SACjB7F,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBC,QAAS0yB,EACTzyB,KAAM2yB,KAhBG,QACXoB,EADW,SAsBqC,OAA7BA,EAAkBh8B,QA3ElByc,OA4ErB8B,EA3ER7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAsFvCsO,KAGJtT,EAAQC,eAAc,GACtB0N,GAAW,GAzCM,iCArDO,IAACM,IAqDR,OAAH,yDA8CZ8e,EAAe,SAACv+B,GAClB69B,EAAqB79B,IAGnBw+B,EAAkB,SAACx+B,GACrB29B,EAAwB39B,IAG5BsQ,qBAAU,YACY,uCAAG,8BAAAE,EAAA,sEACY2tB,EAAuB,IADnC,QACXM,EADW,SAIKA,EAAe96B,OAAS,IAEpCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GACvC,MAAO,CACHhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGtBy9B,EAAkBD,IAZL,2CAAH,qDAgBlBY,KACD,IAGHpuB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACY6tB,EAAoB,CAC1Cn4B,WAAY,CACRE,aAAc,CACV4E,QAAS0yB,MAJP,QACRiB,EADQ,SAUKA,EAAYh7B,OAAS,IAE9Bq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACjC,MAAO,CACHjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGnB29B,EAAeD,IAlBL,2CAAH,qDAsBfY,KACD,CAAClB,IAGJ,IAAM5T,EAAe,SAACtX,GAClB2M,GAAW,IAKTzN,EAA4B,SAACH,EAAQI,GACvC,QAAKA,GACAJ,EAAOzG,WACPyG,EAAOxG,UACPwG,EAAOpG,OACPoG,EAAOnG,WAMhB,OACI,kBAAC,IAAD,CACIwG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJ9E,KAGR,gBACG2F,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,gBACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,IAEhDwT,UAAW,CACP5S,OAAQ,IACRyE,QAAS,SAGb,yBAAKxW,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YAChCmH,GAAgB6sB,EAAoBnvB,MAApB,gBAEtBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACpCmH,GAAgB6sB,EAAoBnvB,MAApB,gBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WAC/BkH,GAAgB6sB,EAAoBnvB,MAApB,eAEtBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACnCkH,GAAgB6sB,EAAoBnvB,MAApB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAYhC,yBAAK3R,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC5B8G,GAAgB6sB,EAAoBnvB,MAApB,YAEtBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QAChC8G,GAAgB6sB,EAAoBnvB,MAApB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC5B+G,GAAgB6sB,EAAoBnvB,MAApB,YAEtBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QAChC+G,GAAgB6sB,EAAoBnvB,MAApB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,cAchC,yBAAK3R,UAAU,mBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACI0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBlZ,aAAcmM,GAAYA,EAASpB,QACnC9K,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACdmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAI5D,yBAAKE,UAAU,yBACX,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACIP,aAAcmM,GAAYA,EAASnB,KACnCiO,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACXquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GACb,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOhE,yBAAKM,MAAO,CACR6V,UAAW,UAKf,yBAAKjW,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WAC/B6G,GAAgB6sB,EAAoBnvB,MAApB,eAEtBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACnC6G,GAAgB6sB,EAAoBnvB,MAApB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,gBAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,wBACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WAC/B4G,GAAgB6sB,EAAoBnvB,MAApB,eAEtBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACnC4G,GAAgB6sB,EAAoBnvB,MAApB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,uBC9XpD0K,GAAwBC,KAAxBD,OAmTOgQ,IAnTiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACoBxC,GAAe,GAAI,kBADvC,mBAC9B+uB,EAD8B,KACTC,EADS,OAEUhvB,GAAe,GAAI,wBAF7B,mBAE9BivB,EAF8B,KAEdC,EAFc,OAGOzsB,oBAAS,GAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,OAIcroB,mBAAS,IAJvB,mBAI9B0sB,EAJ8B,KAIXC,EAJW,KAO/B55B,EAASgnB,eACTtX,EAAUC,eACV/H,EAAa5H,EAAM,GAkDzB,OAhDAmK,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACcmvB,EAA0B,CAC1Dz5B,WAAY,CACRE,aAAc,CACVtE,GAAIiM,MAJM,QAChBiyB,EADgB,SAYlBD,EAAsBC,GAG1Bz5B,QAAQC,IAAI,wBAAwBw5B,GAfd,2CAAH,qDAkBvBC,KAED,CAAClyB,IAIJuC,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACXqvB,EAAqB,CACvB35B,WAAY,CACRC,OAAQ,CACJ4H,WAAYA,MAJP,2CAAH,qDAUlBmyB,KAED,CAACnyB,IAKJxH,QAAQC,IAAI,qBAAsBs5B,GAK9B,yBAAKt/B,UAAU,wBACX,yBAAKA,UAAU,iCACX,+CAICk/B,EAAoB3vB,MAAQ+vB,GAAuB/7B,OAAOiC,KAAK85B,GAAoBn8B,OAAS,GACzF,oCACI,kBAACw8B,GAAD,CACIjhB,QAASsc,EACTrc,WAAYsc,EACZrvB,SAAU0zB,IAEd,kBAAC,IAAD,CACIrtB,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASgtB,EAAoB5vB,WAC5B4vB,EAAoB3vB,MAAQ+vB,KAAwB/7B,OAAOiC,KAAK85B,GAAoBn8B,OAAS,IAC1F,kBAAC,KAAD,CAAOyD,YAAY,oBAAoBiD,MAAOkL,KAAMK,yBAGvD8pB,EAAoB3vB,MAAQ+vB,GAAuB/7B,OAAOiC,KAAK85B,GAAoBn8B,OAAS,GACzF,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKs/B,EAAkB,MAEvB,4BACKA,EAAkB,aAGtBA,EAAkB,SACf,uCAEI,8BACKA,EAAkB,UAM9BA,EAAkB,MACf,oCAEI,8BACKA,EAAkB,OAO9BA,EAAkB,UACf,uCAEI,8BACKA,EAAkB,WAM9BA,EAAkB,OACf,qCAEI,8BACKA,EAAkB,QAK7BA,EAAkB,OAChB,qCAEI,8BACKA,EAAkB,WAW/C,yBAAKt/B,UAAU,iCACX,uCAIJ,yBAAKA,UAAU,8BACVo/B,EAAe9vB,WAAa,kBAACmR,GAAD,MAC5B2e,EAAe7vB,QAAU6vB,EAAe54B,KAAKrD,OAAS,IACnD,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,sCAAsCiD,MAAOkL,KAAMK,0BAI7EgqB,EAAe7vB,MAAQ6vB,EAAe54B,MAAQ44B,EAAe54B,KAAKrD,OAAS,GACxE,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAOfgG,KAAK,QAEL6D,WAAYuiB,EAAe54B,KAC3BsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAQvC,kBAAC,GAAD,CACEnO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACN,oCAEE,wBACElL,QAAS,WAEPoD,EAAQU,KAAR,uBAA6BoH,EAAO7b,MAEtClB,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGT1O,OASF,kBAAC,GAAD,CACCI,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,yBAKV,kBAAC,GAAD,CACA6H,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAGV,kBAAC,GAAD,CACA6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACZ,oCAEE,wBACE/c,MAAO,CACL2W,WAAY,IACZf,MAAO,SAGP,kBAAC,KAAD,CAAS4pB,WAAS,GACfn4B,QAQX,kBAAC,GAAD,CACEsL,MAAO,IACRlL,MAAM,SACNoV,UAAU,SACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEC,uBAAGxG,KAAK,MACP,0BACAvW,MAAO,CACLsW,SAAS,SAGRjP,cCnTT4U,GAAWC,KAAXD,OACAkC,GAAWrf,IAAXqf,OA8BFC,GAAU,SAAC,GAAuC,IAAtChY,EAAqC,EAArCA,KAAKovB,EAAgC,EAAhCA,aAAgC,EACMhjB,oBAAS,GADf,mBACtBiM,GADsB,aAEF1O,GAAe,GAAI,cAFjB,mBAE3B0vB,GAF2B,WAI7CxqB,EAAUC,eAERwqB,EAAgB,uCAAG,WAAOx+B,GAAP,iBAAA0O,EAAA,sEACK6vB,EAAsB,CAChDn6B,WAAY,CACVE,aAAc,CACZtE,SAJiB,QACjBy+B,EADiB,SAUkB,OAAzBA,EAAcv9B,SA3CLyc,EA4CJ,eA3C5BC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,eACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAyCnCqgB,EAAgB7vB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACtDs0B,EAAaS,IAba,iCAjCC,IAACpX,IAiCF,OAAH,sDAkBxB,OACI,oCACA,kBAAC,KAAD,CAMAjG,KAAK,QAEL6D,WAAYrW,GAER,kBAAC,GAAD,CACFqB,MAAM,GACLoV,UAAU,QACT9Y,IAAI,KACJ4O,MAAO,QAER/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACP,oCACE,yBACElL,QAAS,WACP4M,EAAyB1B,GACzB9H,EAAQU,KAAK,yBAEfhI,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CACjC4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAShB,kBAAC,GAAD,CACCtO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEE,wBACElL,QAAS,WACP4M,EAAyB1B,GACzB9H,EAAQU,KAAK,yBAEf3V,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAET1O,OAQjB,kBAAC,GAAD,CACWI,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBA6Bb,kBAAC,GAAD,CAEAA,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACR,uBAAGrC,KAAK,MACT,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,mBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC4M,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,SAQC,kBAAC,KAAD,CAEAC,UAAW,kBAAMsgB,EAAiB3iB,EAAO7b,KACzCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAElD,0BACE1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,eAmHEqgB,GAzFE,SAAC,GAAe,qBAGAptB,mBAAS,IAHV,mBAGvBqtB,EAHuB,KAGdC,EAHc,OAIW/vB,GAAe,GAAI,YAJ9B,mBAIvBgwB,EAJuB,KAIZC,EAJY,KAMxB/qB,EAAUC,eAEhBxF,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKowB,EAAoB,IADzB,OACTC,EADS,OAGfH,EAAYG,GAHG,2CAAH,qDAKdC,KACC,IAcH,OACC,oCAEE,yBAAKtgC,UAAU,yBACX,yBAAKA,UAAU,iCACZ,yBAAKA,UAAU,2CAEhB,wBAAIA,UAAU,uCAAd,SAIA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,iBACZ8uB,SAAU,SAAA5vB,GAAK,OAvBF,SAACA,GACpB,GAAG2gC,EAAU35B,KAAKrD,OAAS,EAAG,CAC5B,IAAMkzB,EAAe8J,EAAU35B,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBAC1FmnB,EAAY7J,IAoBW9V,CAAa/gB,OAG9B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoD,EAAQU,KAAK,qBAJ1B,YAWA,yBAAK/V,UAAU,uCAWxB,yBAAKA,UAAU,uCACTmgC,EAAU5wB,MAAQ0wB,EAAS98B,OAAS,GAAK,kBAAC,GAAD,CACxCyyB,aAAcsK,EAChB15B,KAAMy5B,IACLE,EAAU7wB,WAAa,kBAACmR,GAAD,MACvB0f,EAAU5wB,QAAU0wB,EAAS98B,OAAS,IAC5C,yBAAK/C,MAAO,CACX6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,gBAAiBiD,MAAOkL,KAAMK,8B,UCnQ/C2L,IAHa5J,KAAXD,OACSqpB,KAATC,KAEwB,SAACvhB,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,eACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,gCAKvCsO,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC8iB,GAAA,EAAD,CAAoBhqB,MAAO,CAAE4V,MAAO,yBAStC5F,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAMhEE,GAAgB,CACrB5Q,KAAM,GACNsnB,OAAQ,GACRqZ,QAAS,GACTC,UAAW,GACXpZ,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ9lB,IAAK,IA+gBS8+B,GApfI,SAAC,GAAgB,qBAEQxwB,GAAe,GAAI,WAF5B,mBAE3BywB,EAF2B,KAEbC,EAFa,OAGJjuB,mBAAS,oCAHL,mBAG3B6tB,EAH2B,KAGlBK,EAHkB,OAIAluB,mBAAS,qHAJT,mBAI3B8tB,EAJ2B,KAIhBK,EAJgB,OAKFnuB,oBAAS,GALP,mBAK3ByO,EAL2B,KAKjBJ,EALiB,OAMMrO,oBAAS,GANf,mBAM3B+Y,EAN2B,KAMbC,EANa,OAOMhZ,mBAAS,IAPf,mBAObwV,GAPa,aAQXxV,mBAAS,IARE,mBAQ3BtN,EAR2B,KAQtBugB,EARsB,OASPjT,mBAAS,IATF,mBAS3BiW,EAT2B,KASpBC,EAToB,KAY5BkY,EAAmB,uCAAG,WAAOjwB,EAAaC,GAApB,eAAAhB,EAAA,6DAC3BjK,QAAQC,IAAI,SAAU+K,GACtBhL,QAAQC,IAAI,SAAU+K,GAFK,SAID8vB,EAAmB,CAC5C9+B,KAAM,CACLjC,KAAMiR,EAAOjR,KACb2gC,QAASA,EACT5+B,IAAKkP,EAAOjR,KACZiH,MAAOsa,EAAWA,EAAS,IAAMA,EAAS,GAAG/f,GAAK,GAClDgmB,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUpiB,EAAKc,KAAK,KAGpB6iB,GAAI,CACH3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,EAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpByX,QAAS1vB,EAAOgwB,iBApBQ,QAIrBE,EAJqB,SA0Be,OAAvBA,EAAYz+B,QAC9Bue,KAGA/P,EAAQmY,aAGR7E,GAAsB,8CAGvBtT,EAAQC,eAAc,GApCK,2CAAH,wDAyHzB,OAzDGnB,qBAAU,WACZ,IAAK8wB,EAAY,UAAe,CAC/B,IAAMzxB,EAAQyxB,EAAY,MAC1B,GAAIzxB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,EACxDgM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAQV5L,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACpCI,OAAOwN,OAAO5B,EAAK,OACnB,IACG8T,SAAQ,SAACoR,EAAKC,GACpB,GAAmB,kBAARD,EACV/P,GAAsB+P,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACvBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACZ/P,GAAsB+P,WAU1BuM,EAAY,WACbr9B,OAAOiC,KAAKo7B,EAAap6B,MAAMrD,OAAS,GAED,OAAnCy9B,EAAY,KAAZ,QACH7f,GAAwB,+BAUrB,CAAC6f,IAKP76B,QAAQC,IAAI,aAAcqb,GAGzB,kBAAC,IAAD,CACCjQ,SAAU,SAACL,EAAQC,GAAT,OAAqBgwB,EAAoBjwB,EAAQC,IAC3DZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,yBAAK7R,UAAU,uBACd,wBAAIA,UAAU,gCAAd,gBAIA,yBAAKA,UAAU,+BACd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAY,sBACZH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBmvB,EAAazxB,MAAb,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBmvB,EAAazxB,MAAb,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAInB,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACCI,MAAM,WACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,8BACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBmvB,EAAazxB,MAAb,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBmvB,EAAazxB,MAAb,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,eAUnB,kBAACzS,EAAD,CACGI,MAAM,MACNE,MAAOuR,EAAOlP,IACd/B,KAAK,MACLF,QAAU8R,EAAQ7P,KAAO2P,EAAO3P,MAC7B4P,GAAgBmvB,EAAazxB,MAAb,UAEnBtP,YAAc6R,EAAQ7P,KAAO2P,EAAO3P,MACjC4P,GAAgBmvB,EAAazxB,MAAb,UACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,UAIpB,wBAAI3R,UAAU,mBAAd,aAEA,yBAAKA,UAAU,gCACbqhB,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,kBAAMmW,EAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,kBA1KK,SAAC3Q,GAE3B,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAGrB2f,EAAYqJ,GAoKeC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,WAOJ7D,GAAYA,EAAS,IACrB,kBAAC,KAAD,CACCxZ,MAAO,iBAEP,yBACCoK,QAAS,WACR2Z,GAAgB,IAEjB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,SAIA,kBAAC,KAAD,CACH3Y,MAAO,iBAEN,yBACCoK,QAAS,WACR2Z,GAAgB,IAEjB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,UAML,uBAAGpgB,MAAO,CACT4V,MAAO,UACPC,UAAU,UAEV2qB,EAAazxB,MAAb,cAIF,yBAAKnP,UAAU,6BACd,wBAAIA,UAAU,mBAAd,WAIA,kBAAC,KAAD,CACCy0B,OAAQC,KACRluB,KAAMi6B,EACN9L,OAAQ,SAAAF,GAEP1uB,QAAQC,IAAI,0BAA2ByuB,IAExC/0B,SAAU,SAACk1B,EAAOH,GACjB,IAAMjuB,EAAOiuB,EAAOI,UACpBiM,EAAWt6B,IAEZkgB,OAAQ,SAACkO,EAAOH,GACf1uB,QAAQC,IAAI,QAASyuB,IAEtBvE,QAAS,SAAC0E,EAAOH,GAChB1uB,QAAQC,IAAI,SAAUyuB,MAIxB,yBAAKr0B,MAAO,CACX6V,UAAU,UAGZ,wBAAIjW,UAAU,mBAAd,cAIC,kBAAC,KAAD,CACCy0B,OAAQC,KACRluB,KAAMk6B,EACN/L,OAAQ,SAAAF,GAEP1uB,QAAQC,IAAI,0BAA2ByuB,IAExC/0B,SAAU,SAACk1B,EAAOH,GACjB,IAAMjuB,EAAOiuB,EAAOI,UACpBkM,EAAav6B,IAEdkgB,OAAQ,SAACkO,EAAOH,GACf1uB,QAAQC,IAAI,QAASyuB,IAEtBvE,QAAS,SAAC0E,EAAOH,GAChB1uB,QAAQC,IAAI,SAAUyuB,OAMzB,yBAAKr0B,MAAO,CACX6V,UAAW,UAKZ,yBAAKjW,UAAU,+BACd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOuW,UACdxnB,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgBmvB,EAAazxB,MAAb,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgBmvB,EAAazxB,MAAb,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAMnB,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACEI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,0DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgBmvB,EAAazxB,MAAb,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgBmvB,EAAazxB,MAAb,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAOnB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAAC,GAAD,CACDV,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgBmvB,EAAazxB,MAAb,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgBmvB,EAAazxB,MAAb,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,uBAOhB,yBAAK3R,UAAU,yBACf,kBAAC,GAAD,CACCV,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgBmvB,EAAazxB,MAAb,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgBmvB,EAAazxB,MAAb,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,0BASnB,yBAAK3R,UAAU,mBACf,yBAAKA,UAAU,yBACf,wBAAIA,UAAU,mBAAd,+BAIF,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,KAOJ,yBAAKtF,UAAU,yBACf,wBAAIA,UAAU,mBAAd,wGAIF,kBAAC,GAAD,CAEA6lB,QAASiD,EACTxjB,KAAMujB,OAQN,yBAAKzoB,MAAO,CACX6V,UAAW,UAIZ,kBAAC,IAAD,CACC/D,QAAS0uB,EAAatxB,UACtB2C,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClChS,UAAU,8BAHX,gBASD,kBAAC,GAAD,CACC2e,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SC5kBvB9Q,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BAsH1CqrB,GAzGG,SAAC,GAA8C,IAA5C/jB,EAA2C,EAA3CA,SAAUiY,EAAiC,EAAjCA,WAAYD,EAAqB,EAArBA,QAAqB,EACNvO,GAAe,GAAI,kBADb,mBACxDua,EADwD,KACnCC,EADmC,KAGzD7Z,EAAY,uCAAG,WAAOC,EAAcC,GAArB,SAAAhB,EAAA,sEACa2a,EAA0B,CAC3DjlB,WAAY,CACXE,aAAc,CACZtE,GAAIyP,EAAOzP,KAGdS,KAAM,CACLjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATD,cAanBoK,EAAQC,eAAc,GAbH,2CAAH,wDAiBZqY,EAAe,SAACtX,GACf2M,GAAW,IAKVzN,EAA4B,SAACH,EAAOI,GAC3C,QAAIJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IAM5C,OACC,kBAAC,IAAD,CACAC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPhK,KAGL,gBACC6K,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACAhK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAalB,EAAakB,IAChC0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACf/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBiZ,EAAoBvb,MAApB,WAElBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBiZ,EAAoBvb,MAApB,WACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,WAGjB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBiZ,EAAoBvb,MAApB,kBAElBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBiZ,EAAoBvb,MAApB,kBACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,wBCwBPuvB,G,6MAvIbpgC,MAAQ,CACNwE,KAAM,GACNigB,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAGlBC,YAAc,SAAAC,GACZ,IAAMtgB,EAAO,EAAKxE,MAAMwE,KAAKrC,QAAO,SAAAyI,GAAG,OAAIA,IAAQka,KACnD,EAAKG,SAAS,CAAEzgB,U,EAGlBwgB,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAK1M,MAAMmN,Y,EAGzDC,kBAAoB,SAAAjU,GAClB,EAAK+T,SAAS,CAAEP,WAAYxT,EAAEhE,OAAOxO,S,EAGvC0mB,mBAAqB,WAAO,IAClBV,EAAe,EAAK1kB,MAApB0kB,WACFlgB,EAAS,EAAKxE,MAAdwE,KACFkgB,IAA4C,IAA9BlgB,EAAK/D,QAAQikB,KAC7BlgB,EAAI,sBAAOA,GAAP,CAAakgB,KAEnB,EAAKO,SAAS,CACZzgB,OACAigB,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAAnU,GACtB,EAAK+T,SAAS,CAAEL,eAAgB1T,EAAEhE,OAAOxO,S,EAG3C4mB,uBAAyB,WACvB,EAAKL,UAAS,YAA+C,IAA5CzgB,EAA2C,EAA3CA,KAAMmgB,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eAC/BW,EAAO,YAAO/gB,GAGpB,OAFA+gB,EAAQZ,GAAkBC,EAEnB,CACLpgB,KAAM+gB,EACNZ,gBAAiB,EACjBC,eAAgB,Q,EAKtBY,aAAe,SAAAzN,GACb,EAAKA,MAAQA,G,EAGf0N,iBAAmB,SAAA1N,GACjB,EAAK2N,UAAY3N,G,yEAGT,IAAD,SACoEpK,KAAK3N,MAAxEwE,EADD,EACCA,KAAMigB,EADP,EACOA,aAAcC,EADrB,EACqBA,WAAYC,EADjC,EACiCA,eAAgBC,EADjD,EACiDA,eACxD,OACE,oCACGpgB,EAAKlE,KAAI,SAACsK,EAAKtI,GACd,GAAIqiB,IAAmBriB,EACrB,OACE,kBAAC,IAAD,CACEqjB,IAAK,EAAKF,iBACVpiB,IAAKuH,EACLsN,KAAK,QACLhZ,UAAU,YACVR,MAAOkmB,EACPhmB,SAAU,EAAKymB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYlb,EAAIvI,OAAS,GAEzB0jB,EACJ,kBAAC,KAAD,CACE7mB,UAAU,WACVmE,IAAKuH,EACLob,SAAoB,IAAV1jB,EACV2jB,QAAS,kBAAM,EAAKpB,YAAYja,KAEhC,0BACEsb,cAAe,SAAAhV,GACC,IAAV5O,IACF,EAAK2iB,SAAS,CAAEN,eAAgBriB,EAAOsiB,eAAgBha,IAAO,WAC5D,EAAK8a,UAAUR,WAEjBhU,EAAEiV,oBAILL,EAAS,UAAMlb,EAAIjI,MAAM,EAAG,IAAnB,OAA8BiI,IAI9C,OAAOkb,EACL,kBAAC,KAAD,CAAS/e,MAAO6D,EAAKvH,IAAKuH,GACvBmb,GAGHA,KAGHtB,GACC,kBAAC,IAAD,CACAnlB,MAAO,CACL2R,OAAQ,UAER0U,IAAKhY,KAAK6X,aACV/mB,KAAK,OACLyZ,KAAK,QACLhZ,UAAU,YACVR,MAAOgmB,EACP9lB,SAAU+O,KAAKwX,kBACfS,OAAQjY,KAAKyX,mBACbS,aAAclY,KAAKyX,sBAGrBX,GACA,kBAAC,KAAD,CAAKvlB,UAAU,gBAAgBiS,QAASxD,KAAKqX,WAC3C,kBAACtF,GAAA,EAAD,MADF,mB,GA/HqB0G,IAAMC,WCkC/B/W,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BAInDsR,GAAgB,CACrB5Q,KAAM,GACN8G,YAAa,IAINyV,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAAY,IAAXhY,EAAU,EAAVA,KAAU,EACKoM,oBAAS,GADd,mBACjB8L,EADiB,KACTC,EADS,OAE8B/L,oBAAS,GAFvC,mBAEpBgM,EAFoB,KAEEC,EAFF,OAGuB1O,GAAe,GAAI,aAH1C,mBAGD8kB,GAHC,WAMrBlW,EAAoB,uCAAG,WAAOzd,GAAP,SAAA0O,EAAA,sEACKilB,EAAqB,CAC9CvvB,WAAY,CACVE,aAAc,CACZtE,SAJgB,yDAAH,sDAsBvB,OACI,oCACC,kBAAC,KAAD,CAMD0X,KAAK,QAEL6D,WAAYrW,GAGV,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAIrB,kBAAC,GAAD,CACW6H,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAGb,kBAAC,GAAD,CAEAA,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UAET,kBAAC,KAAD,CAAS3C,UAAU,MAAMxO,MAAM,kBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,QAOA,kBAAC,KAAD,CAASlJ,UAAU,MAAMxO,MAAM,cAGhC,0BACA7H,UAAU,2BACViS,QAAS,kBAAM8M,EAAqB5B,EAAO7b,MAE3C,kBAACqe,GAAA,EAAD,aAcVf,GAA2B,kBAAC,GAAD,CAC1BD,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MA8MCuiB,GAlLO,SAAC,GAAiB,eACvC,IAAMxS,EAAWlf,GAAS,GAAI,GAAI,YAAa,CAC9C/J,WAAY,CACVC,OAAQ,CACToa,eAAe,MAJqB,EASqB5P,GAAe,GAAI,kBATxC,mBAS7Bua,EAT6B,KASRC,EATQ,OAUqB/X,oBAAS,GAV9B,mBAc9B9B,GAd8B,UAclB,uCAAG,WAAOC,EAAcC,GAArB,SAAAhB,EAAA,sEACU2a,EAA0B,CACxDjlB,WAAY,CACXE,aAAc,CACftE,GAAIyP,EAAOzP,KAGXS,KAAM,CACLjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATD,cAatBoK,EAAQC,eAAc,GAbA,2CAAH,yDAoBbC,EAA4B,SAACH,EAAOI,GACxC,QAAIJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IAkB9C,OACC,yBAAKnR,UAAU,yBAAyBI,MAAO,CAAEoW,QAAS,sBAAuB+hB,UAAW,MAC3F,yBAAKv4B,UAAU,mCACd,wBAAIA,UAAU,yBAAd,kBAED,yBAAKA,UAAU,8DACd,yBAAKA,UAAU,4CACf,kBAAC,IAAD,CACFoR,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACD,kBAAC3S,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBiZ,EAAoBvb,MAApB,WAElBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBiZ,EAAoBvb,MAApB,WACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,WAIhB,yBAAKvR,MAAO,CACX6V,UAAW,SAIb,wBAAIjW,UAAU,mBAAd,WAED,kBAACohC,GAAD,MACG,kBAAC,IAAD,CACAhhC,MAAO,CACN6U,QAAS,QACTgB,UAAW,QAEZ1W,KAAK,UACL0S,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCrS,SAAUuR,EAA0BH,EAAOI,GAC3Ce,QAAST,GART,eAmBS,yBAAKzR,UAAU,6CAE3B,yBAAKA,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,+CAMf,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,sBACZ8uB,SAAU,SAAA5vB,GAAK,OAAIuG,QAAQC,IAAIxG,QAe7B,yBAAKQ,UAAU,uCAWxB,yBAAKA,UAAU,uCACb2uB,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAK,kBAAC,GAAD,CAASqD,KAAMmoB,EAASnoB,OACrEmoB,EAASrf,WAAa,kBAACmR,GAAD,Y,UC9UnBpE,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACGrd,IAAXqf,QAIFwC,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAuBxCwI,GAAU,SAAC,GAAuC,IAAtChY,EAAqC,EAArCA,KAAK66B,EAAgC,EAAhCA,aAAgC,EACtBzuB,oBAAS,GADa,mBACpC+L,GADoC,aAEM/L,oBAAS,GAFf,mBAEtBiM,GAFsB,aAGA1O,GAAe,GAAI,eAHnB,gCAIYA,GAAe,GAAI,sBAJ/B,mBAIpBmxB,GAJoB,WAM7CjsB,EAAUC,eAuBRisB,EAAuB,uCAAG,WAAOpkB,EAAO7b,EAAGkgC,GAAjB,qBAAAxxB,EAAA,sEACKsxB,EAA6B,CAC9D57B,WAAY,CACVC,OAAQ,CACN87B,eAAgBD,GAElB57B,aAAc,CACZtE,SAPwB,QACxBogC,EADwB,SAayB,OAAhCA,EAAqBl/B,QAC/Cue,GAAwB,wBAMjB3d,EAJkB,WACpB,OAAOoD,EAAKpF,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQD,GAG/BupB,GACd9kB,QAAQC,IAAI,WAAWmX,EAAO/Z,GAGxBE,EAAcC,OAAOC,OAAO,GAAIgD,EAAKpD,GAAQ,CAAEZ,OAAQg/B,IACvDG,EAZwD,sBAYlCn7B,EAAK/C,MAAM,EAAGL,IAZoB,CAYZE,GAZY,YAYIkD,EAAK/C,MAAML,EAAQ,KACrF2C,QAAQC,IAAI,kBAAkB27B,EAAgB,QAAQN,GACtDA,EAAaM,KA1Ec1iB,EAiFH,sDAhF7BC,KAAa/P,MAAM,CACjB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA2CR,iCA/CN,IAACiJ,IA+CK,OAAH,0DA6E/B,OACI,oCACC,kBAAC,KAAD,CAMDjG,KAAK,QAEL6D,WAAYrW,GAIZ,kBAAC,GAAD,CACEqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACN,oCAEE,wBACElL,QAAS,WAEPoD,EAAQU,KAAR,uBAA6BoH,EAAO7b,KACpCud,EAAyB1B,IAE3B/c,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGT1O,OASjB,kBAAC,GAAD,CACWI,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,yBAKrB,kBAAC,GAAD,CACW6H,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAIX,kBAAC,GAAD,CACC6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEE,wBAEE/c,MAAO,CACL2W,WAAY,IACZf,MAAO,SAGP,kBAAC,KAAD,CAAS4pB,WAAS,GACfn4B,QAUX,kBAAC,GAAD,CACAsL,MAAO,IACNlL,MAAM,SACNoV,UAAU,SACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEJ,kBAAC,KAAD,CAAU7G,QAAS,kBApIE,SAAC6G,EAAO7b,GAC7B,OAEI,kBAAC,KAAD,KAEZ,kBAAC,KAAKrB,KAAN,CACgBgS,QAAS,kBAAMsvB,EAAwBpkB,EAAO7b,EAAG,YACjD6C,IAAI,IAAImD,KAAM,kBAAC6d,GAAA,EAAD,OAF9B,WAQc,kBAAC,KAAKllB,KAAN,CACEgS,QAAS,kBAAMsvB,EAAwBpkB,EAAO7b,EAAG,aACjD6C,IAAI,IAAImD,KAAM,kBAAC6d,GAAA,EAAD,OAFhB,cAuHmByc,CAAezkB,EAAOA,EAAO7b,KAAK+U,UAAU,eAClE,uBAAGM,KAAK,MACP,0BAEEvW,MAAO,CACLsW,SAAS,SAIRjP,EACD,0BAAMrH,MAAO,CACX8V,WAAW,MACXQ,SAAS,SAER,kBAACmrB,GAAA,EAAD,cAwCX,kBAAC,GAAD,CAEA7hC,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACV,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,qBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,gBAsKC7M,iBAjHM,SAAC,GAAsB,IAArB2C,EAAoB,EAApBA,QAAoB,EAENzC,mBAAS,IAFH,mBAEhCkvB,EAFgC,KAEtBT,EAFsB,OAIKlxB,GAAe,GAAI,aAJxB,mBAIhC4xB,EAJgC,KAIpBC,EAJoB,KAOvCj8B,QAAQC,IAAI,aAAa+7B,GAEzBjyB,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACMgyB,EAAsB,CAC3Ct8B,WAAW,CACTC,OAAQ,CACNsa,SAAU,QACVC,eAAgB,SALL,OACV+hB,EADU,OAUhBZ,EAAaY,GAVG,2CAAH,qDAYfC,KACC,IAvBqC,MAyBgBtvB,oBAAS,GAzBzB,6BAyC1C,OACC,oCAIE,yBAAK5S,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,UAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,kBACZ8uB,SAAU,SAAA5vB,GAAK,OA9BF,SAACA,GACpB,GAAGuiC,EAAWv7B,KAAKrD,OAAS,EAAG,CAC7B,IAAMg/B,EAAeJ,EAAWv7B,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKc,SAASpB,MACvE6hC,EAAac,IA2BU5hB,CAAa/gB,OAI9B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoD,EAAQU,KAAK,gBAJ1B,YAWA,yBAAK/V,UAAU,uCAWxB,yBAAKA,UAAU,uCACT+hC,EAAWxyB,MAAQuyB,EAAU3+B,OAAS,GAAK,kBAAC,GAAD,CAC5Ck+B,aAAcA,EACd76B,KAAMs7B,IACLC,EAAWzyB,WAAa,kBAACmR,GAAD,MAExBshB,EAAWxyB,QAAUuyB,EAAU3+B,OAAS,IACzC,kBAAC,GAAD,CAAO0E,MAAM,yB,kDCxZNu6B,mBA1CY,SAAC,GAGd,IAFVzQ,EAES,EAFTA,eACAD,EACS,EADTA,YAEA,OACI,yBACItxB,MAAO,CAEHkzB,cAAe,QAEnBtzB,UAAU,6CACJ,wBAAIA,UAAU,kCAChB,8BACI,kBAACqiC,GAAA,EAAD,OAFF,kBAMN,yBAAKriC,UAAU,qDACV0xB,GAAeA,EAAYvuB,OAAS,GAAKuuB,EAAYtwB,KAAI,SAAAC,GACtD,OAAO,kBAACkyB,GAAD,CACH5B,eAAgBA,EAChBD,YAAaA,EACb9tB,UAAWvC,EAAKsF,IAChBlF,SAAUJ,EAAKI,SACfJ,KAAMA,EACNuwB,UAAWvwB,EAAKuwB,iBAIrBF,EAAYvuB,OAAS,IACpB,yBAAK/C,MAAO,CACR8V,WAAY,SAEZ,kBAAC,GAAD,CAAOrO,MAAM,mBAAmBmN,OAAQ,YCxCxDkC,GAAWC,KAAXD,OA6EOuY,GA3EA,SAAC,GAAuD,IAArD6S,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,wBAAqC,EACpC3vB,mBAAS,IAD2B,mBAC3D5Q,EAD2D,KAClD0sB,EADkD,OAEpB9b,mBAAS,IAFW,mBAE1Cid,GAF0C,aAGzB1f,GAAe,GAAI,gBAHM,mBAG3D2f,EAH2D,KAG/ClB,EAH+C,KAkDlE,OArBA9e,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACa4e,EAAmB,IADhC,QACRmB,EADQ,SAIMA,EAAa5sB,OAAS,IAEhC6sB,EAAeD,EAAa3uB,KAAI,SAACqH,GACnC,OAAO,eACAA,EADP,CAEIjJ,MAAOiJ,EAAMnH,GACbxB,KAAK,GAAD,OAAK2I,EAAM6B,UAAX,YAAwB7B,EAAM8B,eAG1CmkB,EAAWsB,IAbD,2CAAH,qDAiBfC,KACD,IAGC,kBAAC,KAAD,CAAU/d,QAAS4d,EAAWxgB,WAC1B,kBAAC,KAAD,CACIoJ,YAAU,EACVM,KAAK,SACL5Y,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,oBACZqY,iBAAiB,WACjBjZ,SArDZ,SAAkBoZ,GACd,GAAI9W,GAAWA,EAAQmB,OAAS,EAAG,CAC/B,IAAMq/B,EAAexgC,EAAQuC,MAAK,SAAAlD,GAAI,OAAIA,EAAK7B,QAAUsZ,KACrD0pB,GACAD,EAAwBC,GAGhC3S,EAAmB/W,GACnBwpB,EAAcxpB,IA8CNoX,QAtCZ,aAuCYxJ,OA3CZ,aA4CY0I,SApCZ,SAAkBe,KAqCNvX,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F+W,EAAWvgB,MACRugB,EAAWtpB,KAAKrD,OAAS,GACzBnB,EAAQZ,KAAI,SAAC0X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YCIrDsiC,mBAvEF,SAAC,GAIA,IAHVjR,EAGS,EAHTA,cAEAsR,GACS,EAFTrR,WAES,EADTqR,kBACS,EACqB7vB,mBAAS,IAD9B,mBACF5Q,EADE,KACO0sB,EADP,OAEoC9b,mBAAS,IAF7C,mBAEFye,EAFE,KAEcC,EAFd,KAKTxhB,qBAAU,WACN,GAAI2yB,EAAiBlzB,MAAQkzB,EAAiBj8B,MAASi8B,EAAiBj8B,KAAKrD,OAAS,EAAG,CAErF,IAAMu/B,EAAiBD,EAAiBj8B,KAAKpF,KAAI,SAACD,GAC9C,OAAOA,EAAQrB,QAEnB4uB,EAAWgU,MAGhB,CAACD,IA8BJ,OACI,oCACI,kBAAC,KAAD,CAAUvwB,QAASuwB,EAAiBnzB,WAC/BmzB,EAAiBlzB,MAAQkzB,EAAiBj8B,KAAKrD,OAAS,GAAK,kBAAC,KAAD,CAC1DkQ,KAAK,WACL/S,YAAY,kBACZd,MAAO6xB,EACP3xB,SAjCK,SAAC6xB,GAKlB,GAJAD,EAAmBC,GAEnBxrB,QAAQC,IAAI,mBAAoBurB,GAE5BkR,EAAiBlzB,MAAQkzB,EAAiBj8B,KAAKrD,OAAS,GAAKouB,EAAYpuB,OAAS,EAAG,CACrF,IAAM4rB,EAAsBwC,EAAYnwB,KAAI,SAACC,GACzC,IAAM2tB,EAAmByT,EAAiBj8B,KAAKjC,MAC3C,SAACkF,GAAD,OAASA,EAAI3J,KAAKiZ,gBAAkB1X,EAAK0X,iBAE7C,GAAIiW,EACA,OAAOA,KAGfjpB,QAAQC,IAAI,sBAAuB+oB,GACnCoC,EAAcpC,QAGdoC,EAAc,KAgBN/wB,MAAO,CAAE2S,MAAO,SAEf/Q,EAAQiB,QAAO,SAAAuuB,GAAC,OAAKH,EAAezwB,SAAS4wB,MAAIpwB,KAAI,SAAAC,GAAI,OACtD,kBAAC,KAAO6V,OAAR,CAAe/S,IAAK9C,EAAM7B,MAAO6B,GAC5BA,YCrBrB6V,GAAWC,KAAXD,OACAspB,GAASD,KAATC,KAEFzf,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAKvCsO,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC8iB,GAAA,EAAD,CAAoBhqB,MAAO,CAAE4V,MAAO,yBAStC5F,GAAmBC,MAAaC,MAAM,IAQtCI,GAAgB,CACrB/F,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVK,SAAU,GACVC,SAAU,GACVgyB,QAAS,GACT8F,eAAgB,GAChBn4B,QAAS,GACTC,KAAM,IAKDm4B,GAAQ,CACb,CACC/6B,MAAO,oBACP44B,QAAS,IAGV,CACC54B,MAAO,oBAGR,CACCA,MAAO,gBACP44B,QAAS,KA2iCIoC,GAhiCK,SAAC,GAAgB,qBAEM1yB,GAAe,GAAI,YAF1B,mBAE5B2yB,EAF4B,KAEbC,EAFa,OAGqBnwB,mBAAS,IAH9B,mBAG5BsqB,EAH4B,KAGNC,EAHM,OAIevqB,mBAAS,IAJxB,mBAI5BwqB,EAJ4B,KAITC,EAJS,OAKCzqB,mBAAS,IALV,mBAK5BrF,EAL4B,KAKhB+0B,EALgB,OAOS1vB,mBAAS,IAPlB,mBAO5B0qB,EAP4B,KAOZC,EAPY,OAQG3qB,mBAAS,IARZ,mBAQ5B4qB,EAR4B,KAQfC,EARe,OAUgBttB,GAClD,GACA,eAZkC,mBAU5ButB,EAV4B,KAUVC,EAVU,OAeUxtB,GAAe,GAAI,YAf7B,mBAe5BytB,EAf4B,KAebC,EAfa,OAiBGjrB,mBAAS,IAjBZ,gCAkBHA,mBAAS,KAlBN,gCAmBLA,mBAAS,IAnBJ,mBAmB5BowB,EAnB4B,KAmBnBC,EAnBmB,OAoBqBrwB,mBAAS,IApB9B,oBAoB5BswB,GApB4B,MAoBNX,GApBM,SAqBC3vB,mBAAS,IArBV,qBAqB5Bwe,GArB4B,MAqBhBD,GArBgB,SAsBGve,mBAAS,IAtBZ,qBAsB5B8e,GAtB4B,MAsBfC,GAtBe,SAwBgBxhB,GAAe,GAAI,eAxBnC,qBAwB5BsyB,GAxB4B,MAwBV9H,GAxBU,SAyBkBxqB,GAAe,GAAI,gBAzBrC,qBAyB5BgzB,GAzB4B,MAyBTrE,GAzBS,SA6BsB3uB,GACxD,GACA,qBA/BkC,qBA6B5BizB,GA7B4B,MA6BPC,GA7BO,SAmCmBzwB,mBAAS,IAnC5B,qBAmC1B0wB,GAnC0B,MAmCNC,GAnCM,SAoCW3wB,mBAAS,IApCpB,qBAoC1B4wB,GApC0B,MAoCVC,GApCU,SAqCsB7wB,mBAAS,IArC/B,qBAqC1B8wB,GArC0B,MAqCLC,GArCK,MAuC3BC,GAAyB,SAAC3B,GACjC,QAAKA,GAMJnyB,qBAAU,YAC0B,uCAAG,4BAAAE,EAAA,sEACLqzB,GAA0B,CAC1D39B,WAAY,CACbE,aAAc,CACZi+B,SAAUzG,MAJ0B,OACjCgG,EADiC,OASvCO,GAAwBP,GATe,2CAAH,qDAYnCU,KACE,CAAC1G,IAuBJttB,qBAAU,WACX,GACE8zB,GACAF,GAAqBvgC,OAAS,GAC/BugC,IAEC,CACA,IAEMF,EAFkBE,GAEen/B,MACxC,SAACyH,EAAQ5I,GAAT,OAAmB,IAAMA,KAEpBogC,IACLD,GAAsBC,EAAc,MACpCC,GAAkBD,OAGf,CAACE,KAYJ39B,QAAQC,IAAI,sBAAsBo9B,IAClCr9B,QAAQC,IAAI,iBAAiBw9B,IAC7Bz9B,QAAQC,IAAI,uBAAuB09B,IAErC5zB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACa2qB,GAAuB,IADpC,yDAAH,qDAIjBC,KACD,IAGN9qB,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACa8uB,GAAwB,IADrC,yDAAH,qDAGlBE,KACD,IAIN,IAYM+E,GAAoB,uCAAG,WAAOhzB,EAAaC,GAApB,iBAAAhB,EAAA,6DAE5BjK,QAAQC,IAAI,SAAU+K,GACtBhL,QAAQC,IAAI,kBAAmB0rB,IAEzB5tB,EAAW4tB,IAAeA,GAAYvuB,OAAS,EAAIuuB,GAAYtwB,KAAI,SAAAC,GACxE,MAAO,CACNF,QAASE,EAAKsF,IACdlF,SAAUJ,EAAKI,SACfmwB,UAAWvwB,EAAKuwB,cAEb,GAXuB,SAaFmR,EAAiB,CAE1ChhC,KAAM,CACL2K,gBAAiB,CAChB/B,MAAOoG,EAAOpG,MACdD,MAAOqG,EAAOrG,MACdE,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBE,KAAM2yB,GAAqB8F,GAAoB,KAC/C14B,QAAS0yB,GAAwBgG,GAAoB,SAEtDr6B,MAAO/E,EACPkgC,SAAUV,GACV/1B,WAAYA,KA5Bc,QAatB0zB,EAbsB,SAkCc,OAAvBA,EAAYz+B,QAC9Bue,KAGA/P,EAAQmY,aAGR7E,GAAsB,+CAGvBtT,EAAQC,eAAc,GA5CM,2CAAH,wDAiD1BnB,qBAAU,WACT,IAAKgzB,EAAa,UAAe,CAChC,IAAM3zB,EAAQ2zB,EAAa,MAC3B,GAAI3zB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,EACxDgM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAQV5L,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACpCI,OAAOwN,OAAO5B,EAAK,OACnB,IACG8T,SAAQ,SAACoR,EAAKC,GACpB,GAAmB,kBAARD,EACV/P,GAAsB+P,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACvBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACZ/P,GAAsB+P,WAU1ByO,EAAa,WACdv/B,OAAOiC,KAAKs9B,EAAct8B,MAAMrD,OAAS,GAED,OAApC2/B,EAAa,KAAb,QACH/hB,GAAwB,gCAUxB,CAAC+hB,IAKJ,IAAM/E,GAAe,SAACv+B,GACrB69B,EAAqB79B,IAGhBw+B,GAAkB,SAACx+B,GACxB29B,EAAwB39B,IAKzBsQ,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2tB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe96B,OAAS,IAEvCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GAC1C,MAAO,CACNhL,MAAOgL,EAAQlJ,GACfxB,KAAM0K,EAAQ1K,SAGhBy9B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpuB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6tB,EAAoB,CAC7Cn4B,WAAY,CACXE,aAAc,CACb4E,QAAS0yB,MAJK,QACXiB,EADW,SAUEA,EAAYh7B,OAAS,IAEjCq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACpC,MAAO,CACNjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGb29B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAwBDptB,qBAAU,WAEN,GAAIshB,IAAcA,GAAWjuB,OAAS,GAAKuuB,IACvC,GAAIN,GAAWjuB,OAASuuB,GAAYvuB,OAAQ,CACxC,IAAMyuB,EAAYR,GAAWA,GAAWjuB,OAAS,GAA/B,SAAgDiuB,GAAWA,GAAWjuB,OAAS,GAA/B,QAA6CA,OAAS,GAAKiuB,GAAWA,GAAWjuB,OAAS,GAA/B,QAA6C,GAA7C,IAC7H4C,QAAQC,IAAI,YAAa4rB,GAEzBD,GAAe,GAAD,mBAAKD,IAAL,gBACPN,GAAWA,GAAWjuB,OAAS,GADxB,CAEVwD,IAAKyqB,GAAWA,GAAWjuB,OAAS,GAA/B,GACLyuB,UAAWA,EACXnwB,SAAU,YAKb,GAAI2vB,GAAWjuB,OAASuuB,GAAYvuB,OAAQ,CAC7C4C,QAAQC,IAAI,aAAcorB,IAC1BrrB,QAAQC,IAAI,cAAe0rB,IAE3B,IAAM6C,EAAiB7C,GAAYzuB,QAAO,SAAA5B,GACtC,IAAImzB,GAAS,EAMb,OALApD,GAAWnO,SAAQ,SAAA9hB,GACXA,EAAQG,KAAOD,EAAKsF,MACpB6tB,GAAS,MAGVA,KAEX7C,GAAe4C,SAMnB5C,GAAe,MAKpB,CAACP,KAIPrrB,QAAQC,IAAI,uBAAwBk9B,IAQpC,OACC,kBAAC,IAAD,CACC9xB,SAAU,SAACL,EAAQC,GAAT,OAAqB+yB,GAAqBhzB,EAAQC,IAC5DZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,GADO,GACWwyB,MAGvB,gBACA3xB,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,yBAAK7R,UAAU,qBACd,6CAGA,yBAAKA,UAAU,gCACd,kBAAC,KAAD,CAAOgjC,QAASA,GACdJ,GAAMxhC,KAAI,SAAAC,GAAI,OACd,kBAAC,GAAD,CACC8C,IAAK9C,EAAKwG,MACVA,MAAOxG,EAAKwG,YAIF,IAAZm7B,GACA,yBAAKhjC,UAAU,mDACd,yBAAKA,UAAU,wDACd,wBACAI,MAAO,GACPJ,UAAU,kCAET,8BACC,kBAAC4U,GAAA,EAAD,OALF,0BAUE,yBAAKxU,MAAO,CACb6V,UAAW,UAGZ,wBAAIjW,UAAU,mBAAd,YAGA,kBAACikC,GAAD,CACId,kBAAmBA,GACtBZ,wBAAyBA,GACzBD,cAAeA,IAChB,yBAAKliC,MAAO,CACX6V,UAAW,UAEZ,wBAAIjW,UAAU,mBAAd,YAGA,kBAACkkC,GAAD,CACIzB,iBAAkBA,GACrBrR,WAAYA,GACZD,cAAeA,MAEjB,yBAAKnxB,UAAU,yDACd,kBAAC,GAAD,CACC2xB,eAAgBA,GAChBD,YAAaA,OAMJ,IAAZsR,GACA,yBAAKhjC,UAAU,wCAEd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YACnCmH,GAAgBqxB,EAAc3zB,MAAd,gBAEnBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACvCmH,GAAgBqxB,EAAc3zB,MAAd,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WAClCkH,GAAgBqxB,EAAc3zB,MAAd,eAEnBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACtCkH,GAAgBqxB,EAAc3zB,MAAd,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAQpB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC/B8G,GAAgBqxB,EAAc3zB,MAAd,YAEnBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QACnC8G,GAAgBqxB,EAAc3zB,MAAd,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC/B+G,GAAgBqxB,EAAc3zB,MAAd,YAEnBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QACnC+G,GAAgBqxB,EAAc3zB,MAAd,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,cAOpB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiB4iC,EAAc3zB,MAAd,cAA2C,QAAU,GACtEhP,KAAM2iC,EAAc3zB,MAAd,eAGN,kBAAC,KAAD,CACC1P,aAAcsR,EAAOvG,QACrB6zB,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBACpEsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBjZ,SAAUs+B,GACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAUjD,yBAAKE,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiB4iC,EAAc3zB,MAAd,WAAwC,QAAU,GACnEhP,KAAM2iC,EAAc3zB,MAAd,YAGN,kBAAC,KAAD,CACC1P,aAAcsR,EAAOtG,KACrBzK,UAAU,kBACVq+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,yBAAyBiD,MAAOkL,KAAMK,yBAC1EsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,GACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,aAQlD,yBAAKM,MAAO,CACX6V,UAAW,UAKZ,yBAAKjW,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WAClC6G,GAAgBqxB,EAAc3zB,MAAd,eAEnBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACtC6G,GAAgBqxB,EAAc3zB,MAAd,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,YACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WAClC4G,GAAgBqxB,EAAc3zB,MAAd,eAEnBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACtC4G,GAAgBqxB,EAAc3zB,MAAd,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAkBT,KAAZqxB,GACA,yBAAKhjC,UAAU,wCAEd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YACnCmH,GAAgBqxB,EAAc3zB,MAAd,gBAEnBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACvCmH,GAAgBqxB,EAAc3zB,MAAd,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WAClCkH,GAAgBqxB,EAAc3zB,MAAd,eAEnBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACtCkH,GAAgBqxB,EAAc3zB,MAAd,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC/B8G,GAAgBqxB,EAAc3zB,MAAd,YAEnBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QACnC8G,GAAgBqxB,EAAc3zB,MAAd,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC/B+G,GAAgBqxB,EAAc3zB,MAAd,YAEnBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QACnC+G,GAAgBqxB,EAAc3zB,MAAd,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,cAMpB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiB4iC,EAAc3zB,MAAd,cAA2C,QAAU,GACtEhP,KAAM2iC,EAAc3zB,MAAd,eAGN,kBAAC,KAAD,CACC1P,aAAc,UACd4+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBACpEsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBjZ,SAAUs+B,GACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAUjD,yBAAKE,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiB4iC,EAAc3zB,MAAd,WAAwC,QAAU,GACnEhP,KAAM2iC,EAAc3zB,MAAd,YAGN,kBAAC,KAAD,CACC1P,aAAcsR,EAAOtG,KACrBzK,UAAU,kBACVq+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,yBAAyBiD,MAAOkL,KAAMK,yBAC1EsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,GACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,aAQlD,yBAAKM,MAAO,CACX6V,UAAW,UAKZ,yBAAKjW,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WAClC6G,GAAgBqxB,EAAc3zB,MAAd,eAEnBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACtC6G,GAAgBqxB,EAAc3zB,MAAd,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,wBACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WAClC4G,GAAgBqxB,EAAc3zB,MAAd,eAEnBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACtC4G,GAAgBqxB,EAAc3zB,MAAd,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAWT,IAAZqxB,GACA,yBAAK5iC,MAAO,CACX6U,QAAS,OACTC,eAAgB,SAChBe,UAAW,OACXd,WAAY,SACZme,cAAe,WAEf,kBAAC,GAAD,CACC3B,eAAgBA,GAChBD,YAAaA,KAEd,6BAEA,wBACAtxB,MAAO,CACN6V,UAAU,OACVhB,QAAQ,SAETjV,UAAU,kCACT,8BACC,kBAAC+T,GAAA,EAAD,OAPF,yBASwBqpB,EATxB,KAYA,kBAAC,WAAM+G,MAAP,CACA3kC,MAAO8jC,GACP7jC,aAAc6jC,GACbxjC,KAAK,cACH4jC,GAAqBtiC,KAAI,SAAAgjC,GACzB,OACA,yBACAnyB,QAAS,kBAnzBkB,SAACzS,GAGvC,GAFA+jC,GAAsB/jC,GAGpBokC,GACDF,GAAqBvgC,OAAS,GAC9BugC,IAEC,CACA,IAEMF,EAFkBE,GAEen/B,MACxC,SAACyH,GAAD,OAAYA,EAAM,MAAYxM,KAEzBgkC,GACLC,GAAkBD,IAoyBOa,CAA6BD,EAAmBz9B,MAC/D3G,UAAU,gCACT,yBAAKA,UAAU,uCACf,kBAAC,WAAD,CACCR,MAAO4kC,EAAmBz9B,OAI5B,yBAAK3G,UAAU,sCACf,4BACEokC,EAAmBtkC,MAEpB,4BACC,8BACA,kBAACiU,GAAA,EAAD,OAECqwB,EAAmBn4B,gBAErB,4BACC,8BACA,kBAACq4B,GAAA,EAAD,OAECF,EAAmB77B,aAYzB,yBAAKnI,MAAO,CACX6U,QAAS,OACTgB,UAAW,OACXkF,aAAc,SAkBd,kBAAC,IAAD,CACCjJ,QAAS4wB,EAAcxzB,UACvBlP,MAAO,CACN6V,UAAW,OACXC,WAAY,QAGblW,UAAU,kCACViS,QAAS,SAACD,GAAD,OAAYlB,EAAakB,KARnC,cAWA,kBAACuyB,GAAA,EAAD,SAUH,yBAAKnkC,MAAO,CACX6U,QAAS,OACTC,eAAgB,kBAEf8tB,EAAU,GACV,kBAAC,IAAD,CACC5iC,MAAO,CAAEgW,YAAa,OAAQH,UAAW,QAEzCjW,UAAU,6BACVT,KAAK,UAAU0S,QAAS,WAzzBjCgxB,EADmBD,EAAU,KA4zBpB,kBAACwB,GAAA,EAAD,MAND,aAYAxB,EAAUJ,GAAMz/B,OAAS,GACzB,oCACC,6BACC,kBAAC,IAAD,CACC/C,MAAO,CACN6V,UAAW,QAGZjW,UAAU,6BACVT,KAAK,UAAU0S,QAAS,WAEtBgxB,EADe,IAAZD,EACQ,EAn1BLA,EAAU,KA20BnB,OAeK,kBAAEuB,GAAA,EAAF,iBC5OF9Z,IAt2BItT,KAAXD,OAGU,SAAC,GAAyC,IAAvC5V,EAAsC,EAAtCA,GAAImjC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAAkB,EACJv0B,GAAe,GAAI,eADf,mBAChDw0B,EADgD,KAC9BC,EAD8B,KAGvD90B,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb40B,EAAuB,CACzBl/B,WAAY,CACRE,aAAc,CACVtE,SAJO,2CAAH,qDAUpBujC,KAED,CAACvjC,IAGJyE,QAAQC,IAAI,mBAAoB2+B,GAMhC,OACI,kBAAC,KAAD,CACI98B,MAAM,UACN6W,QAASgmB,EACT/f,UAAW,CACP5S,OAAQ,IACRyE,QAAS,QAEbkO,SAAU,kBAAM+f,GAAe,IAC/B1xB,MAAO,OACP0M,OAAO,QACPgF,KAAM,WAdVqgB,OAAOC,UAgBFJ,EAAiBr1B,WAAa,kBAAC,KAAD,MAC9Bq1B,EAAiBn+B,MAAQjD,OAAOiC,KAAKm/B,EAAiBn+B,MAAMrD,OAAS,GAClE,oCACI,yBAAKnD,UAAU,oBACX,2BACI+S,MAAM,OACNE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,4BACI,wBAAIlwB,OAAQ,MAEhB,4BACI,4BACI,2BACIjC,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,UACR9kC,MAAO,CAAEC,aAAc,kBAEvB,+BACI,wBAAIL,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,4BACI,2BACIjC,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,eAEV,+BACI,4BACI,4BACI,2BACI+S,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,OACNtf,UAAU,OAEV,+BAaI,wBAAIA,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVV,MAAO,UACPmvB,WAAY,0BACZC,WAAY,IACZC,cAAe,MACf5uB,UAAW,SAPnB,UAUYkuB,EAAiBn+B,KAAjB,KACR,6BAXJ,iCAgBZ,2BACIuM,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,QACNtf,UAAU,OAEV,+BACI,wBAAIA,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,wBAAIA,OAAQ,KAEhB,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVV,MAAO,UACPsvB,cAAe,OACfH,WAAY,0BACZC,WAAY,IACZC,cAAe,MACf5uB,UAAW,UARnB,YAcJ,6BACA,wBAAIzW,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVV,MAAO,UACPmvB,WAAY,0BACZC,WAAY,IACZC,cAAe,MACf5uB,UAAW,UAGf,wCAVJ,KAU2BkuB,EAAiBn+B,KAAjB,GACvB,6BACA,+BACKm+B,EAAiBn+B,KAAjB,8BAqBpEm+B,EAAiBn+B,MAAQm+B,EAAiBn+B,KAAjB,UAAqCm+B,EAAiBn+B,KAAjB,SAAkCrD,OAAS,GACtG,2BACI4P,MAAM,OACNE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,4BACI,4BACI,2BACInyB,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,6BACA,wBAAIllC,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,4BACI,2BACIjC,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,eAEV,+BACI,4BACI,wBACII,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPe,WAAY,SACZquB,WAAY,IACZC,cAAe,MACf7uB,QAAS,gBAEbzD,MAAM,MACNuM,MAAM,QAXV,QAgBA,wBACIlf,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPe,WAAY,SACZquB,WAAY,IACZC,cAAe,MACf7uB,QAAS,WAEb8I,MAAM,UAVV,YAcA,wBACIlf,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPe,WAAY,SACZquB,WAAY,IACZC,cAAe,MACf7uB,QAAS,WAEb8I,MAAM,SAVV,aAiBHqlB,EAAiBn+B,KAAjB,SAAkCpF,KAAI,SAAAC,GACnC,OACI,oCACI,4BACI,wBACI2T,OAAQ,EACR5U,MAAO,CAAEuV,WAAY,WACrB4vB,QAAS,KAGjB,4BACI,wBAAIvwB,OAAQ,GAAIuwB,QAAS,KAE7B,4BACI,wBACInlC,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,MACf7uB,QAAS,UAEbxW,UAAU,WAETqB,EAAKvB,MAGV,wBACIM,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,MACf7uB,QAAS,UAEb8I,MAAM,UAELje,EAAKI,UAEV,wBACIrB,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,MACf7uB,QAAS,UAEb8I,MAAM,SAELje,EAAKI,SAAWJ,EAAK6G,YAQ1C,4BACI,wBACI8M,OAAQ,EACRuwB,QAAS,EACTnlC,MAAO,CAAEolC,aAAc,4BAO/C,4BACI,wBAAIxwB,OAAQ,YAW5C,2BACIjC,MAAM,OACNE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,4BACI,4BACI,2BACInyB,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,4BACI,4BAEI,2BACInyB,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,eAEV,+BACI,4BACI,wBACII,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,MACf5uB,UAAW,UAPnB,SAYA,wBACIrW,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,MACf5uB,UAAW,QACXgvB,WAAY,UAEhB1yB,MAAO,IAEN4xB,EAAiBn+B,KAAjB,kBA8FjD,2BACIuM,MAAM,OACNE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,4BACI,4BACI,2BACInyB,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,6BACA,wBAAIllC,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,4BACI,2BACIjC,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,eAEV,+BACI,4BACI,4BACI,2BACI+S,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,OACNtf,UAAU,OAEV,+BACI,4BACI,wBACII,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,QAGnB,yDAGR,4BACI,wBAAItyB,MAAM,OAAOiC,OAAQ,MAE7B,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,QAGlBV,EAAiBn+B,KAAjB,KACD,6BAVJ,IAUYm+B,EAAiBn+B,KAAjB,QACR,6BAXJ,IAWYm+B,EAAiBn+B,KAAjB,KACR,6BAAOm+B,EAAiBn+B,KAAjB,QACP,6BAbJ,IAaYm+B,EAAiBn+B,KAAjB,MACR,6BAdJ,IAcYm+B,EAAiBn+B,KAAjB,UAKxB,2BACIuM,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,QACNtf,UAAU,OAEV,+BACI,wBAAIA,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,QAGnB,4CAIR,4BACI,wBAAItyB,MAAM,OAAOiC,OAAQ,MAE7B,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,QAGlBV,EAAiBn+B,KAAjB,wBAYzC,4BACI,4BACI,2BACIuM,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,eAEV,+BACI,4BACI,4BACI,2BACI+S,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,OACNtf,UAAU,OAEV,+BACI,wBAAIA,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,6BAaA,4BACI,wBAAIjC,MAAM,OAAOiC,OAAQ,MAE7B,+BAmBR,2BACIjC,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,QACNtf,UAAU,OAEV,+BACI,wBAAIA,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,MAEhB,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,UAM3B,4BACI,wBAAItyB,MAAM,OAAOiC,OAAQ,MAE7B,4BACI,wBACI5U,MAAO,CACHsW,SAAU,GACVyuB,WAAY,0BACZnvB,MAAO,UACPovB,WAAY,IACZC,cAAe,kBAc3D,wBAAIrlC,UAAU,gBACV,wBAAIgV,OAAQ,MAEhB,wBAAIhV,UAAU,iBACV,wBAAIgV,OAAQ,YASxC,2BACIjC,MAAM,OACNE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,WAER,+BACI,4BACI,4BACI,2BACInyB,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,YACVklC,QAAQ,UACR9kC,MAAO,CAAEC,aAAc,kBAEvB,+BACI,4BACI,4BACI,2BACI0S,MAAO,IACPE,OAAQ,EACR+xB,YAAa,EACbC,YAAa,EACb3lB,MAAM,SACNtf,UAAU,eAEV,+BACI,4BACI,wBACII,MAAO,CACHsW,SAAU,GACVV,MAAO,UACPmvB,WAAY,0BACZC,WAAY,IACZC,cAAe,MACf5uB,UAAW,SAPnB,yBAiBpB,wBAAIzW,UAAU,UACV,wBAAIgV,OAAQ,UAMhC,4BACI,wBAAIA,OAAQ,SA9yBhC,QCmFDyc,GArHa,SAAC,GAKf,IAJV7tB,EAIS,EAJTA,UACAnC,EAGS,EAHTA,SACAJ,EAES,EAFTA,KACAuwB,EACS,EADTA,UACS,EAGwCzhB,GAC7C,GACA,qBALK,mBAGFyf,EAHE,KAGkBiC,EAHlB,OAOqBjf,mBAAS,IAP9B,mBAOOkf,GAPP,aAQyBlf,oBAAS,GARlC,mBAQSmf,GART,aASiCnf,mBAAS,IAT1C,mBASFof,EATE,aAU6Cpf,mBAASgf,IAVtD,6BAuCT,OAzBA9hB,qBAAU,WACNiiB,GAAa,GACS,uCAAG,4BAAA/hB,EAAA,sEACC6hB,EAAmB,CACrCnsB,WAAY,CACRE,aAAc,CACVtE,GAAIsC,MAJK,OACfzC,EADe,OAUrB2wB,EAAW3wB,GACX4wB,GAAa,GAXQ,2CAAH,oDAatBK,KACD,IAQHrsB,QAAQC,IAAI,gBAAiBgsB,GAEzB,oCAEI,kBAAC,KAAD,CAAU9f,QAAS0d,EAAmBtgB,WACjCsgB,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GACtE,yBAAKnD,UAAU,YAAYmE,IAAK,IAG5B,yBAEI4J,IAAK6hB,EAAmBppB,KAAnB,OAAoCopB,EAAmBppB,KAAnB,YACzCyD,IAAI,MACJ7J,MAAO,CACH+V,OAAQ,aAGhB,yBAAKnW,UAAU,kBACX,4BAGK4vB,EAAmBppB,KAAnB,MAEL,0CAEgB/E,GAEhB,4BAEKJ,EAAI,gBC7E7B6V,GAAWC,KAAXD,OAGF9G,GAAmBC,MAAaC,MAAM,IA2BtCgU,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC8iB,GAAA,EAAD,CAAoBhqB,MAAO,CAAE4V,MAAO,yBAucnCyU,GA5bG,SAAC,GAA4D,IAA1D7e,EAAyD,EAAzDA,SAAUqvB,EAA+C,EAA/CA,kBAAmBD,EAA4B,EAA5BA,eAA4B,EACvB7qB,GAAe,GAAI,eADI,mBACnEu1B,EADmE,KACjDC,EADiD,KAG1E5/B,QAAQC,IAAI,cAAe4F,GAH+C,MAKlBgH,mBAAS,IALS,mBAKnEsqB,EALmE,KAK7CC,EAL6C,OAMxBvqB,mBAAS,IANe,mBAMnEwqB,EANmE,KAMhDC,EANgD,OAQ9BzqB,mBAAS,IARqB,mBAQnE0qB,EARmE,KAQnDC,EARmD,OASpC3qB,mBAAS,IAT2B,mBASnE4qB,EATmE,KAStDC,EATsD,OAWvBttB,GAC/C,GACA,eAbsE,mBAWnEutB,EAXmE,KAWjDC,EAXiD,OAgB7BxtB,GAAe,GAAI,YAhBU,mBAgBnEytB,EAhBmE,KAgBpDC,EAhBoD,OAkBpCjrB,mBAAS,IAlB2B,gCAmB1CA,mBAAS,KAnBiC,gCAoBpCA,oBAAS,IApB2B,mBAoBnE8xB,EApBmE,KAoBtDD,EApBsD,KAwBpE3zB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,6DAEjBjK,QAAQC,IAAI,SAAU4F,GAFL,SAIU+5B,EAAuB,CAC9CjgC,WAAY,CACRE,aAAc,CACVtE,GAAIsK,EAAStK,KAGrBS,KAAM,CACFyL,eAAgB,CACZ7C,MAAOoG,EAAOpG,MACdD,MAAOqG,EAAOrG,MACdE,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBE,KAAM2yB,GAAqBxxB,EAAQ,eAAR,KAC3BpB,QAAS0yB,GAAwBtxB,EAAQ,eAAR,SAErC9H,SAAU8H,EAAS9H,SACnByJ,WAAY3B,EAAS2B,cAtBZ,QAIXq4B,EAJW,SA4B2B,OAAxBA,EAAapjC,QA5ERyc,OA6ErB8B,EA5ER7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAuFvCsO,KAGJtT,EAAQC,eAAc,GACtBgqB,GAAkB,GA/CD,iCAhDO,IAAChc,IAgDR,OAAH,wDAoDZ8e,EAAe,SAACv+B,GAClB69B,EAAqB79B,IAGnBw+B,EAAkB,SAACx+B,GACrB29B,EAAwB39B,IAG5BsQ,qBAAU,YACY,uCAAG,8BAAAE,EAAA,sEACY2tB,EAAuB,IADnC,QACXM,EADW,SAIKA,EAAe96B,OAAS,IAEpCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GACvC,MAAO,CACHhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGtBy9B,EAAkBD,IAZL,2CAAH,qDAgBlBY,KACD,IAGHpuB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACY6tB,EAAoB,CAC1Cn4B,WAAY,CACRE,aAAc,CACV4E,QAAS0yB,MAJP,QACRiB,EADQ,SAUKA,EAAYh7B,OAAS,IAE9Bq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACjC,MAAO,CACHjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGnB29B,EAAeD,IAlBL,2CAAH,qDAsBfY,KACD,CAAClB,IAQJ,IAAM5T,EAAe,SAACtX,GAClBipB,GAAkB,IAetB,OACI,kBAAC,IAAD,CACI7pB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJ9E,EAAS4B,eAAiB5B,EAAS4B,eAAiB,MAG5D,gBACG+D,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,aACN6W,QAASsc,EACTvW,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,UAGdvF,UAAW,CACP5S,OAAQ,IACRyE,QAAS,QAEbzD,MAAO,QAIP,yBAAK/S,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YAChCmH,GAAgBi0B,EAAiBv2B,MAAjB,gBAEtBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACpCmH,GAAgBi0B,EAAiBv2B,MAAjB,gBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WAC/BkH,GAAgBi0B,EAAiBv2B,MAAjB,eAEtBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACnCkH,GAAgBi0B,EAAiBv2B,MAAjB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAYhC,yBAAK3R,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC5B8G,GAAgBi0B,EAAiBv2B,MAAjB,YAEtBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QAChC8G,GAAgBi0B,EAAiBv2B,MAAjB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC5B+G,GAAgBi0B,EAAiBv2B,MAAjB,YAEtBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QAChC+G,GAAgBi0B,EAAiBv2B,MAAjB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,cAOhC,yBAAK3R,UAAU,mBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACIC,eAAiBwlC,EAAiBv2B,MAAjB,cAA8C,QAAU,GACzEhP,KAAMulC,EAAiBv2B,MAAjB,eAGN,kBAAC,KAAD,CACI1P,aAAcsR,EAAOvG,QACrB6zB,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBACpEsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBjZ,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACdmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAUhE,yBAAKE,UAAU,yBACX,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAEIC,eAAiBwlC,EAAiBv2B,MAAjB,WAA2C,QAAU,GACtEhP,KAAMulC,EAAiBv2B,MAAjB,YAGN,kBAAC,KAAD,CACI1P,aAAcsR,EAAOtG,KACrBzK,UAAU,kBACVq+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,yBAAyBiD,MAAOkL,KAAMK,yBAC1EsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACXquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GACb,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,aAQpE,yBAAKM,MAAO,CACR6V,UAAW,UAKf,yBAAKjW,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WAC/B6G,GAAgBi0B,EAAiBv2B,MAAjB,eAEtBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACnC6G,GAAgBi0B,EAAiBv2B,MAAjB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,gBAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,YACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WAC/B4G,GAAgBi0B,EAAiBv2B,MAAjB,eAEtBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACnC4G,GAAgBi0B,EAAiBv2B,MAAjB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAOhC,yBAAKvR,MAAO,CACR6V,UAAW,UAKNrK,EAAS9H,UAAY8H,EAAS9H,SAASX,OAAS,GAC7C,wBAAInD,UAAU,mBAAd,YAMX4L,EAAS9H,UAAY8H,EAAS9H,SAASX,OAAS,GAAK,oCAEjDyI,EAAS9H,SAAS1C,KAAI,SAAAC,GACnC,OAAO,kBAAC,GAAD,CACHuC,UAAWvC,EAAKsF,IAChBlF,SAAUJ,EAAKI,SACfJ,KAAMA,EACNuwB,UAAWvwB,EAAKuwB,gBAOZ,yBAAKxxB,MAAO,CACR6V,UAAW,UAEvB,kBAAC,IAAD,CACAhE,QAAS,kBAAMwyB,GAAe,IAC9BzkC,UAAU,8BAFV,oBAQR,yBAAKI,MAAO,CACQ+a,aAAc,UAGlC,kBAAC0qB,GAAD,CACAvkC,GAAIsK,EAAStK,GACbmjC,eAAgBA,EACfC,YAAaA,UCtclBroB,GAAwBC,KAAxBD,OA6WOgQ,IA7WiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACUxC,GAAe,GAAI,eAD7B,mBAC9BsrB,EAD8B,KACdC,EADc,OAEcvrB,GAAe,GAAI,eAFjC,mBAEZyrB,GAFY,aAGOhpB,oBAAS,GAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,KAM/Bt1B,EAASgnB,eACTtX,EAAUC,eACV6d,EAAQxtB,EAAM,GA0CpB,OAxCAmK,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACb0rB,EAAqB,CACvBh2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDASpB0D,KACD,CAAC1D,IAGJptB,QAAQC,IAAI,mBAAoBy1B,GAEhC3rB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4rB,EAAuB,CACzBl2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB2I,KAED,CAAC3I,IAKJptB,QAAQC,IAAI,mBAAoBy1B,GAEhC11B,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,iCACX,4CAICy7B,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,oCACI,kBAAC2iC,GAAD,CACI9K,eAAgBA,EAChBC,kBAAmBA,EACnBrvB,SAAU6vB,EAAej1B,OAE7B,kBAAC,IAAD,CACIyL,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASupB,EAAensB,WACvBmsB,EAAelsB,MAAQksB,EAAej1B,QAAUjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,IACvF,kBAAC,KAAD,CAAOyD,YAAY,iBAAiBiD,MAAOkL,KAAMK,yBAGpDqmB,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKy7B,EAAej1B,KAAf,MAEL,4BACKi1B,EAAej1B,KAAf,aAEJi1B,EAAej1B,KAAf,KACG,mCAEI,8BACKi1B,EAAej1B,KAAf,MAMZi1B,EAAc,KAAd,SACG,uCAEI,8BACKA,EAAc,KAAd,UAMZA,EAAc,KAAd,MACG,oCAEI,8BACKA,EAAc,KAAd,OAOZA,EAAc,KAAd,UACG,uCAEI,8BACKA,EAAc,KAAd,WAMZA,EAAc,KAAd,OACG,qCAEI,8BACKA,EAAc,KAAd,QAKXA,EAAc,KAAd,OACE,qCAEI,8BACKA,EAAc,KAAd,QAMZA,EAAc,KAAd,eACG,8CAEI,8BACKA,EAAc,KAAd,gBAMZA,EAAc,KAAd,eACG,8CAEI,8BACKA,EAAc,KAAd,gBAMhBA,EAAc,KAAd,QACO,4CAEI,8BACKA,EAAc,KAAd,SAMZA,EAAc,KAAd,gBACG,+CAEI,8BACKA,EAAc,KAAd,iBAOhBA,EAAc,KAAd,cACO,iDAEI,wCACQA,EAAc,KAAd,aADR,aACmDA,EAAc,KAAd,uBADnD,aACwGA,EAAc,KAAd,0BAahI,yBAAKz7B,UAAU,iCACP,yCAOR,yBAAKA,UAAU,8BAGVy7B,EAAelsB,MACTksB,EAAej1B,MACdjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GAC3Cs4B,EAAej1B,KAAf,YAAqCi1B,EAAej1B,KAAf,SAAgCrD,OAAS,IACjF,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,oCAAoCiD,MAAOkL,KAAMK,0BAK3EqmB,EAAelsB,MACTksB,EAAej1B,MACdjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GAC3Cs4B,EAAej1B,KAAf,UACAi1B,EAAej1B,KAAf,SAAgCrD,OAAS,GAChD,oCACQ,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAOfgG,KAAK,QAEL6D,WAAY4e,EAAej1B,KAAf,SACZsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAM5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OAUjB,kBAAC,GAAD,CACII,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBASd,kBAAC,GAAD,CACI6H,MAAM,YACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,+BCxSpCuY,IAxCapB,KAAXD,OAEwBoF,KAAxBD,OAAwBC,KAAhBC,YAsBD,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGS,IAAIjE,MACaE,aAGjButB,GAAsB,SAACt5B,GAAD,gBAC5BA,GAD4B,OACpB8L,KAGFhB,GAAyB,CAClCtE,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,oCA6IAwJ,GAtII,SAAC7J,GACA2C,eAAhB,IADiC,EAGyCnF,GAAe,GAAI,sBAH5D,mBAG1BkK,EAH0B,KAGCC,EAHD,OAIC1H,mBAAS,IAJV,mBAI1B2H,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BA1K,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMsK,EAAqC,CAC9D5U,WAAY,CACRC,OAAQ,CACJsS,WAAY,iBALD,QAEjBwC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGF3U,QAAQC,IAAI,4BAA4BqU,GAOpC,yBAAKra,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,0CAGA,+DAMR,yBAAKA,UAAU,gCACdqa,EAA0B/K,WACvB,oCACA,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXpD,OAAO,YAEX,kBAAC,KAAD,CACAiH,KAAK,YAQHqB,EAA0B9K,MAAQgL,GAAaA,EAAUpX,OAAS,GAC5D,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAM+T,EAAW7D,SAAU,IAClC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,aACTC,cAAeosB,KAEhB,kBAAC,KAAD,CAEIlsB,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL2a,KAAK,yBAOhBG,EAA0B9K,QAAU8K,EAA0B7T,KAAKrD,OAAS,IACzE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,0BAA6BiD,MAAOkL,KAAMK,2BAO5E,yBAAKpV,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,wBC1JN4pB,IAxBa7uB,KAAXD,OAEwBoF,KAAxBD,OAAwBC,KAAhBC,YAsBF,CACV,MACA,MACA,MACA,OACA,MACA,OACA,QAIS0pB,GAAqB,SAACx5B,GAAD,OAC9Bu5B,GAAMv5B,EAAQ,IAML8K,GAAyB,CAClCtE,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,oCA6IAwJ,GAtII,SAAC7J,GACA2C,eAAhB,IADiC,EAGyCnF,GAAe,GAAI,sBAH5D,mBAG1BkK,EAH0B,KAGCC,EAHD,OAIC1H,mBAAS,IAJV,mBAI1B2H,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BA1K,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMsK,EAAqC,CAC9D5U,WAAY,CACRC,OAAQ,CACJsS,WAAY,gBALD,QAEjBwC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGF3U,QAAQC,IAAI,4BAA4BqU,GAOpC,yBAAKra,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,yCAGA,8DAMR,yBAAKA,UAAU,gCACdqa,EAA0B/K,WACvB,oCACA,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXpD,OAAO,YAEX,kBAAC,KAAD,CACAiH,KAAK,YAQhBqB,EAA0B9K,MAAQgL,GAAaA,EAAUpX,OAAS,GAC/C,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAM+T,EAAW7D,SAAU,IAClC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,YACTC,cAAessB,KAEhB,kBAAC,KAAD,CAEIpsB,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL2a,KAAK,yBAOhBG,EAA0B9K,QAAU8K,EAA0B7T,KAAKrD,OAAS,IACzE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,0BAA6BiD,MAAOkL,KAAMK,2BAO5E,yBAAKpV,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,wBCvIC7E,IAtCMJ,KAAXD,OAEwBoF,KAAxBD,OAAwBC,KAAhBC,YAoCsB,CAClCtJ,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,qCAwIAwJ,GApII,SAAC7J,GACA2C,eAAhB,IADiC,EAGyCnF,GAAe,GAAI,sBAH5D,mBAG1BkK,EAH0B,KAGCC,EAHD,OAIC1H,mBAAS,IAJV,mBAI1B2H,EAJ0B,KAIfC,EAJe,KAiCjC,OA1BA1K,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMsK,EAAqC,CAC9D5U,WAAY,CACRC,OAAQ,CACJsS,WAAY,WALD,QAEjBwC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGF3U,QAAQC,IAAI,4BAA4BqU,GAKpC,yBAAKra,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,sDAMR,yBAAKA,UAAU,gCACdqa,EAA0B/K,WACvB,oCACA,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXpD,OAAO,YAEX,kBAAC,KAAD,CACAiH,KAAK,YAQHqB,EAA0B9K,MAAQgL,GAAaA,EAAUpX,OAAS,GAC5D,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAM+T,EAAW7D,SAAU,IAClC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,SAGV,kBAAC,KAAD,CAEIG,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL2a,KAAK,yBAOhBG,EAA0B9K,QAAU8K,EAA0B7T,KAAKrD,OAAS,IACzE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,qBAAwBiD,MAAOkL,KAAMK,2BAOvE,yBAAKpV,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,wBC9IC8pB,IAtBM/uB,KAAXD,OAEwBoF,KAAxBD,OAAwBC,KAAhBC,YAoBgB,SAAC9P,GAAD,gBACzBA,EADyB,QAInB8K,GAAyB,CAClCtE,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,oCA4IAwJ,GAvII,SAAC7J,GACA2C,eAAhB,IADiC,EAGyCnF,GAAe,GAAI,sBAH5D,mBAG1BkK,EAH0B,KAGCC,EAHD,OAIC1H,mBAAS,IAJV,mBAI1B2H,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BA1K,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMsK,EAAqC,CAC9D5U,WAAY,CACRC,OAAQ,CACJsS,WAAY,WALD,QAEjBwC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGF3U,QAAQC,IAAI,4BAA4BqU,GAOpC,yBAAKra,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,uDAOR,yBAAKA,UAAU,gCACdqa,EAA0B/K,WACvB,oCACA,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXpD,OAAO,YAEX,kBAAC,KAAD,CACAiH,KAAK,YAQHqB,EAA0B9K,MAAQgL,GAAaA,EAAUpX,OAAS,GAC5D,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAM+T,EAAW7D,SAAU,IAClC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,OACTC,cAAeusB,KAEhB,kBAAC,KAAD,CAEIrsB,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL2a,KAAK,yBAOhBG,EAA0B9K,QAAU8K,EAA0B7T,KAAKrD,OAAS,IACzE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,sBAAyBiD,MAAOkL,KAAMK,2BAOxE,yBAAKpV,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,wBCrIN9E,IAvBaH,KAAXD,OAEwBoF,KAAxBD,OAAwBC,KAAhBC,YAqBD,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAISwpB,GAAsB,SAACt5B,GAAD,gBAC/B6K,GAAO7K,EAAQ,KAIN8K,GAAyB,CAClCtE,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,oCA+IAwJ,GAxII,SAAC7J,GACA2C,eAAhB,IADiC,EAGyCnF,GAAe,GAAI,sBAH5D,mBAG1BkK,EAH0B,KAGCC,EAHD,OAIC1H,mBAAS,IAJV,mBAI1B2H,EAJ0B,KAIfC,EAJe,KAqCjC,OA5BA1K,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMsK,EAAqC,CAC9D5U,WAAY,CACRC,OAAQ,CACJsS,WAAY,YALD,QAEjBwC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGF3U,QAAQC,IAAI,iCAAiCqU,GAOzC,yBAAKra,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,wCAGA,uDAMR,yBAAKA,UAAU,gCACdqa,EAA0B/K,WACvB,oCACA,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXpD,OAAO,YAEX,kBAAC,KAAD,CACAiH,KAAK,YAQHqB,EAA0B9K,MAAQgL,GAAaA,EAAUpX,OAAS,GAC5D,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAM+T,EAAW7D,SAAU,IAClC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,QACTC,cAAeosB,KAEhB,kBAAC,KAAD,CAEIlsB,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL2a,KAAK,yBAOhBG,EAA0B9K,QAAU8K,EAA0B7T,KAAKrD,OAAS,IACzE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,4BAA+BiD,MAAOkL,KAAMK,2BAO9E,yBAAKpV,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,wBCvIC7E,IA1CMJ,KAAXD,OAEwBoF,KAAxBD,OAAwBC,KAAhBC,YAwCsB,CAClCtJ,OAAQ,EACR5S,aAAc,MACdqW,SAAU,GACV1D,UAAW,qCA6IAwJ,GAtII,SAAC7J,GACA2C,eAAhB,IADiC,EAGyCnF,GAAe,GAAI,sBAH5D,mBAG1BkK,EAH0B,KAGCC,EAHD,OAIC1H,mBAAS,IAJV,mBAI1B2H,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BA1K,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMsK,EAAqC,CAC9D5U,WAAY,CACRC,OAAQ,CACJsS,WAAY,WALD,QAEjBwC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGF3U,QAAQC,IAAI,4BAA4BqU,GAOpC,yBAAKra,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,sDAMR,yBAAKA,UAAU,gCACdqa,EAA0B/K,WACvB,oCACA,yBAAKlP,MAAO,CACR6U,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXpD,OAAO,YAEX,kBAAC,KAAD,CACAiH,KAAK,YAQHqB,EAA0B9K,MAAQgL,GAAaA,EAAUpX,OAAS,GAC5D,kBAAC,KAAD,CAAqB4P,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWxO,KAAM+T,EAAW7D,SAAU,IAClC,8BACI,oCAAgBpV,GAAG,eAAe2X,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,SAGV,kBAAC,KAAD,CAEIG,YAAY,OACZ9G,MAAO,GACP+G,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI5D,QAAQ,EACR6D,aAAczC,GACd0C,UAAW,SAACza,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL2a,KAAK,yBAOhBG,EAA0B9K,QAAU8K,EAA0B7T,KAAKrD,OAAS,IACzE,yBAAK/C,MAAO,CACR6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAW,0BAA6BiD,MAAOkL,KAAMK,2BAO5E,yBAAKpV,UAAU,kCACX,4BACI,8BACI,kBAACoc,GAAA,EAAD,OAFR,uBCvNG+pB,GCqCE,SAACxzB,GAAkB,IAAD,EAC+CxC,GAAe,GAAI,8BADlE,mBACMmN,GADN,aAEiDnN,GAAe,GAAI,8BAFpE,mBAEOoN,GAFP,aAG0BpN,GAAe,GAAI,8BAH7C,mBAGNqN,GAHM,WA2ClC,OApCA1N,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACnBwN,EAA6B,IADV,2CAAH,qDAIvBC,KACE,IAIH3N,qBAAU,YACiB,uCAAG,sBAAAE,EAAA,sEACtBsN,EAAsC,CAC3C3X,OAAQ,YAFmB,2CAAH,qDAK1B+X,KACC,IAIF5N,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACvBuN,EAAuC,CAC5C5X,OAAQ,aAFoB,2CAAH,qDAK3BgY,KACC,IAQD,yBAAK3d,UAAU,qBACd,yBAAKA,UAAU,2BACd,kBAAComC,GAAD,MACA,kBAACC,GAAD,OAGD,yBAAKrmC,UAAU,2BACd,kBAACsmC,GAAD,MACA,kBAACC,GAAD,OAGD,yBAAKvmC,UAAU,2BACd,kBAACwmC,GAAD,MACA,kBAACC,GAAD,S,UC2FWzP,GAtKE,SAAC,GAAgD,IAA9C0P,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAAoB,EAGTh0B,mBAAS,CACzD/K,MAAO++B,EAAc/+B,MACrBmG,OAAQ44B,EAAc54B,OACtBvG,KAAMm/B,EAAcn/B,KACpBoC,MAAO+8B,EAAc/8B,QAPoC,mBAGtDg9B,EAHsD,KAGlCC,EAHkC,OAU7Bl0B,mBAAS,IAVoB,mBAUtDyO,EAVsD,KAU5CJ,EAV4C,OAWrBrO,oBAAS,GAXY,mBAWtD+Y,EAXsD,KAWxCC,EAXwC,KAavDmb,EAA6B,SAAC/0B,GAChC,IAAMlS,EAAOkS,EAAEhE,OAAOlO,KAChBN,EAAQwS,EAAEhE,OAAOxO,MAEvBsnC,EAAsB,eACfD,EADc,eAEhB/mC,EAAON,MAIhBsQ,qBAAU,WACN,GAAIuR,EAASle,OAAS,EAAG,CACrB,IAAMmnB,EAAYjJ,EAASjgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAC5CwlC,EAAsB,eACfD,EADc,CAEjBh9B,MAAM,YAAKygB,WAIfwc,EAAsB,eACfD,EADc,CAEjBh9B,MAAO,QAIhB,CAACwX,IAEJvR,qBAAU,WACN,IAIM1M,EAHKujC,EAAUvlC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQqlC,EAActlC,IAK1DgC,EAAcC,OAAOC,OAAO,GAAImjC,EAAUvjC,GAA5BG,OAAA,IAAAA,CAAA,GAAyCsjC,IACvDG,EAAmB,sBAAOL,EAAUljC,MAAM,EAAGL,IAA1B,CAAkCE,GAAlC,YAAkDqjC,EAAUljC,MAAML,EAAQ,KACnGsjC,EAAaM,KAEd,CAACH,IAuBJ,OACI,oCAGI,yBAAK7mC,UAAU,iCACX,kBAAC80B,GAAD,CACIx1B,MAAM,QACNE,MAAOqnC,EAAmBh/B,MAC1B/H,KAAK,QACLJ,SAAUqnC,IAEd,kBAACjS,GAAD,CACIx1B,MAAM,OACNE,MAAOqnC,EAAmBp/B,KAC1B3H,KAAK,OACLJ,SAAUqnC,IAGd,kBAACjS,GAAD,CACIx1B,MAAM,SACNE,MAAOqnC,EAAmB74B,OAC1BlO,KAAK,SACLJ,SAAUqnC,IAId,wBAAI/mC,UAAU,yBAAd,UACA,yBAAKI,MAAO,CACR+a,aAAc,UAGlB,yBAAKnb,UAAU,gCACVqhB,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GACxC,OACI,yBAAKpD,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAK+N,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,kBAzDlB,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GAmDmCC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACIrd,MAAO,iBAEP,yBACIoK,QAAS,WACL2Z,GAAgB,IAEpB5rB,UAAU,2FAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,WAUpB,kBAAC,GAAD,CACI7B,WAAYiN,EACZlN,QAASiN,EACTtK,SAAUA,EACVJ,YAAaA,EACbC,sBAAsB,MCtJhC9Q,GAAmBC,MAAaC,MAAM,CACxC22B,UAAW52B,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcxE8T,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClBu2B,UAAW,GACXp+B,MAAO,IA+NIkiB,GAlNK,SAAC,GAAiG,IAA/F3K,EAA8F,EAA9FA,sBAAuBC,EAAuE,EAAvEA,yBAA0B6mB,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,iBAA8B,EAE5Dh3B,GAAe,GAAI,gBAFyC,mBAE1Gi3B,EAF0G,KAEvFC,EAFuF,OAGjFz0B,oBAAS,GAHwE,gCAI/EA,mBAAS,KAJsE,mBAI1G+zB,EAJ0G,KAI/FD,EAJ+F,KAO3G51B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAGaq3B,EAAwB,CAClDtlC,KAAM,CACFklC,UAAWl2B,EAAOk2B,UAClBp+B,MAAO89B,KANE,QAGXW,EAHW,SAWiC,OAA3BA,EAAgB9kC,QAnDdyc,OAoDrB8B,EAnDR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,oBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAiDvCmxB,EAAiB,GAAD,mBAAKD,GAAL,cACZ5lC,GAAIgmC,EAAe,IAAU,GAC7BnjC,IAAKmjC,EAAe,IAAU,GAC9BL,UAAWK,EAAe,WAAiB,IAExCA,MAEPt2B,EAAQmY,YACRud,EAAa,IACbrmB,GAAyB,IAIzBiE,KAMJtT,EAAQC,eAAc,GAhCL,iCAxCO,IAACgO,IAwCR,OAAH,wDAoClBnP,qBAAU,WACN,IAAKs3B,EAAiB,UAAe,CACjC,IAAMj4B,EAAQi4B,EAAiB,MAC/B,GAAIj4B,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,GAIrDI,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACjCI,OAAOwN,OAAO5B,EAAK,OACnB,IACH8T,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP/P,GAAsB+P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACpBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACT/P,GAAsB+P,aAQ/C,CAAC+S,IAOJ,IAAM9d,EAAe,SAACtX,GAClBqO,GAAyB,IAIvBnP,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOk2B,WAWVM,EAAyB,WAC3Bb,EAAa,GAAD,mBAAKC,GAAL,CAAgB,CACxB9+B,MAAO,GACPmG,OAAQ,GACRvG,KAAM,GACNoC,MAAO,GACPvI,GAAG,GAAD,OAAKqlC,EAAUxjC,aAOzB,OACI,kBAAC,IAAD,CACIiO,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAET3c,MAAM,oBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,IAExCgC,MAAO,OACP4R,UAAW,CACP5S,OAAQ,IACRyE,QAAS,SAGb,kBAACtX,EAAD,CACII,MAAM,uBACNE,MAAOuR,EAAOk2B,UACdnnC,KAAK,YACLF,QAAU8R,EAAQu1B,WAAaz1B,EAAOy1B,YAChCx1B,GAAgB21B,EAAkBj4B,MAAlB,WAEtBtP,YAAc6R,EAAQu1B,WAAaz1B,EAAOy1B,YACpCx1B,GAAgB21B,EAAkBj4B,MAAlB,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,gBAGxB,yBAAKvR,MAAO,CACR6V,UAAW,UAEf,wBAAIjW,UAAU,mBAAd,YAEA,yBAAKA,UAAU,2BACV2mC,EAAUvlC,KAAI,SAAAomC,GACX,OAAO,kBAACC,GAAD,CACHb,cAAeY,EACfb,UAAWA,EAAWD,aAAcA,OAG5C,kBAAC,IAAD,CAAQ1tB,KAAK,QACT/G,QAASs1B,EACTnnC,MAAO,CACH2S,MAAO,QACPwlB,UAAW,QACXtiB,UAAW,MACX5V,aAAc,OACfd,KAAK,SAAS+H,KAAM,kBAACkZ,GAAA,EAAD,OAP3B,kBAUJ,yBACIpgB,MAAO,CACH6V,UAAW,gB,UCtDhC+gB,GAhLE,SAAC,GAAyE,EAAvEmQ,iBAAuE,EAArDD,cAAsD,IAAvC7lC,EAAsC,EAAtCA,KAAM0K,EAAgC,EAAhCA,UAAU27B,EAAsB,EAAtBA,gBAAsB,EAEnC90B,mBAAS,CACzD/K,MAAOxG,EAAKwG,MACZmG,OAAQ3M,EAAK2M,OACbvG,KAAMpG,EAAKoG,KACXoC,MAAOxI,EAAKwI,QANuE,mBAEhFg9B,EAFgF,KAE5DC,EAF4D,OASvDl0B,mBAAS,IAT8C,mBAShFyO,EATgF,KAStEJ,EATsE,OAU/CrO,oBAAS,GAVsC,mBAUhF+Y,EAVgF,KAUlEC,EAVkE,KAYjFmb,EAA6B,SAAC/0B,GAChC,IAAMlS,EAAOkS,EAAEhE,OAAOlO,KAChBN,EAAQwS,EAAEhE,OAAOxO,MAEvBsnC,EAAsB,eACfD,EADc,eAEhB/mC,EAAON,MAShBsQ,qBAAU,WACFuR,EAASle,OAAS,EAClB2jC,EAAsB,eACfD,EADc,CAGjBh9B,MAAM,YAAK,IAAI89B,IAAJ,sBAAYd,EAAmBh9B,OAA/B,YAAyCwX,SAIxDylB,EAAsB,eACfD,EADc,CAEjBh9B,MAAO,QAIhB,CAACwX,IA8BJ,OACI,oCACI,yBACIjhB,MAAO,CACH2S,MAAO,OACPC,UAAW,QAEfhT,UAAU,iCACV,kBAAC80B,GAAD,CACIx1B,MAAM,QACNE,MAAOqnC,EAAmBh/B,MAC1B/H,KAAK,QACLJ,SAAUqnC,IAEd,kBAACjS,GAAD,CACIx1B,MAAM,OACNE,MAAOqnC,EAAmBp/B,KAC1B3H,KAAK,OACLJ,SAAUqnC,IAGd,kBAACjS,GAAD,CACIx1B,MAAM,SACNE,MAAOqnC,EAAmB74B,OAC1BlO,KAAK,SACLJ,SAAUqnC,IAId,wBAAI/mC,UAAU,yBAAd,UACA,yBAAKI,MAAO,CACR+a,aAAc,UAIlB,yBAAKnb,UAAU,gCACV6mC,EAAmBh9B,OAEhBg9B,EAAmBh9B,MAAM1G,OAAS,GAAK0jC,EAAmBh9B,MAAMzI,KAAI,SAACyI,EAAOzG,GACxE,OACI,yBAAKpD,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAK+N,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,kBAxElB,SAAC3Q,GAExB,IAAMgpB,EAAYuc,EAAmBh9B,OAASg9B,EAAmBh9B,MAAM1G,OAAS,GAAK0jC,EAAmBh9B,MAAM5G,QAAO,SAAA4G,GACjH,OAAOA,EAAMvI,KAAOA,KAGxBwlC,EAAsB,eACfD,EADc,CAEjBh9B,MAAM,YAAKygB,MAGfrJ,EAAYqJ,GA6DmCC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACIrd,MAAO,iBAEP,yBACIoK,QAAS,WACL2Z,GAAgB,IAEpB5rB,UAAU,2FAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,UAMhB,kBAAC,IAAD,CACApgB,MAAO,CACH6V,UAAW,QAEX3O,KAAM,kBAACsgC,GAAA,EAAD,MAChB5nC,UAAU,6BACViS,QAAS,WA7FXy1B,EAAgBrmC,EAAK0K,EAAU86B,KAuFvB,SAYJ,kBAAC,GAAD,CACIloB,WAAYiN,EACZlN,QAASiN,EACTtK,SAAUA,EACVJ,YAAaA,EACbC,sBAAsB,MCsCvB6J,IA1MU1a,MAAaC,MAAM,CACxC22B,UAAW52B,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAwC1D,SAAC,GAGsC,IAHpC4P,EAGmC,EAHnCA,sBACnBC,EAEsD,EAFtDA,yBAEAwnB,GAAsD,EAF5BX,cAE4B,EADtDC,iBACsD,EAAtDU,6BAA6BC,EAAyB,EAAzBA,YAAyB,EAGFl1B,mBAAS,CACzD/K,MAAO,GACPmG,OAAQ,GACRvG,KAAM,GACNoC,MAAO,KAP2C,mBAG/Cg9B,EAH+C,KAG3BC,EAH2B,OAUtBl0B,mBAAS,IAVa,mBAU/CyO,EAV+C,KAUrCJ,EAVqC,OAWdrO,oBAAS,GAXK,mBAW/C+Y,EAX+C,KAWjCC,EAXiC,KAahDmb,EAA6B,SAAC/0B,GAChC,IAAMlS,EAAOkS,EAAEhE,OAAOlO,KAChBN,EAAQwS,EAAEhE,OAAOxO,MAEvBsnC,EAAsB,eACfD,EADc,eAEhB/mC,EAAON,MAmBhBsQ,qBAAU,WACN,GAAIuR,EAASle,OAAS,EAAG,CACrB,IAAMmnB,EAAYjJ,EAASjgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAC5CwlC,EAAsB,eACfD,EADc,CAEjBh9B,MAAM,YAAKygB,WAIfwc,EAAsB,eACfD,EADc,CAEjBh9B,MAAO,QAIhB,CAACwX,IAwBJ,OACI,oCACI,kBAAC,KAAD,CACIjhB,MAAO,CACHokB,IAAK,QAET6V,gBAAgB,EAChBxyB,MAAM,yBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAff61B,EAA4BhB,EAAoBiB,IAgBxCpjB,SA/DS,SAAC1S,GAClBqO,GAAyB,IA+DjBZ,OAAO,MACPwK,cAAe,CACXC,SAAU,UAEdnX,MAAO,QACP4R,UAAW,CACP5S,OAAQ,IACRyE,QAAS,SAGb,kBAACtX,EAAD,CACII,MAAM,QACNE,MAAOqnC,EAAmBh/B,MAC1B/H,KAAK,QACLJ,SAAUqnC,IAEd,kBAAC7nC,EAAD,CACII,MAAM,OACNE,MAAOqnC,EAAmBp/B,KAC1B3H,KAAK,OACLJ,SAAUqnC,IAGd,kBAAC7nC,EAAD,CACII,MAAM,SACNE,MAAOqnC,EAAmB74B,OAC1BlO,KAAK,SACLJ,SAAUqnC,IAId,wBAAI/mC,UAAU,yBAAd,UACA,yBAAKA,UAAU,gCACVqhB,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAAAyI,GAChC,OACI,yBAAK7J,UAAU,sCACX,yBACIiS,QAAS,kBAnElB,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GA6DmCC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,8CACV,kBAAC2f,GAAA,EAAD,OAEJ,yBAAK5R,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,UAKlD,yBACIgI,QAAS,WACL2Z,GAAgB,IAEpB5rB,UAAU,4CACV,kBAACyU,GAAA,EAAD,QAGR,kBAAC,GAAD,CACIkK,WAAYiN,EACZlN,QAASiN,EACTtK,SAAUA,EACVJ,YAAaA,EACbC,sBAAsB,QC3MlC6mB,GAAUC,KAAVD,MACAxpB,GAAWrf,IAAXqf,OAIFwC,GAA0B,SAAC9B,GAC7BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,oBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAK7CsO,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAsBnD,IAAMiyB,GAAW,SAACC,EAA0Bn8B,EAAUzK,GAArC,OAChB,yBACClB,MAAO,CACN6U,QAAS,SAIV,kBAAC,KAAD,CAASoB,UAAU,MAAMxO,MAAM,kBAC/B,uBAAG8O,KAAK,MACT,kBAAC4I,GAAA,EAAD,CACGtN,QAAS,SAAC2iB,SAWZ,yBACCx0B,MAAO,CACN8V,WAAY,UAGX,uBAAGS,KAAK,KAAKvW,MAAO,CAClB4V,MAAM,qBAGV,kBAAC,KAAD,CAEYwJ,UAAW,kBAAM0oB,EAA0B5mC,EAAGyK,IAC9ClE,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAExD,kBAACC,GAAA,EAAD,CACD1N,QAAS,SAAC2iB,GAETA,EAAMuT,yBASLC,GAAmB,SAACC,EAAqBC,EAA2BhnC,EAAQinC,GAAzD,OACxB,yBACCnoC,MAAO,CACN6U,QAAS,SAGV,kBAAC,KAAD,CAASoB,UAAU,MAAMxO,MAAM,0BAC/B,uBAAG8O,KAAK,MACP,kBAAC6J,GAAA,EAAD,CACCvO,QAAS,SAAC2iB,GAGTyT,GAAe,GACfE,EAAejnC,QAMlB,yBACClB,MAAO,CACN8V,WAAY,UAGd,kBAAC,KAAD,CAASG,UAAU,MAAMxO,MAAM,kBAC/B,uBAAG8O,KAAK,MACP,kBAAC4I,GAAA,EAAD,CACCtN,QAAS,SAAC2iB,SAQZ,yBACCx0B,MAAO,CACN8V,WAAY,UAGX,uBAAGS,KAAK,KAAKvW,MAAO,CAClB4V,MAAM,qBAGX,kBAAC,KAAD,CAEawJ,UAAW,kBAAM8oB,EAAsBhnC,IACvCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAExD,kBAACC,GAAA,EAAD,CACD1N,QAAS,SAAC2iB,GAETA,EAAMuT,yBAgbIhhB,GAnaG,SAACxU,GAAW,IAAD,EAGEC,oBAAS,GAHX,gCAIYA,oBAAS,IAJrB,mBAIrB41B,EAJqB,KAIPC,EAJO,OAKU71B,oBAAS,GALnB,mBAKrB81B,EALqB,KAKRL,EALQ,OAMSz1B,mBAAS,IANlB,mBAMrBk1B,EANqB,KAMTS,EANS,OAUuBp4B,GAAe,GAAI,iBAV1C,mBAUrBw4B,EAVqB,KAULC,EAVK,OAW+Bz4B,GAAe,GAAI,mBAXlD,mBAWC04B,GAXD,aAY+B14B,GAAe,GAAI,mBAZlD,mBAYC24B,GAZD,aAcal2B,mBAAS,IAdtB,mBAcrBs0B,EAdqB,KAcPC,EAdO,KAgB5Br3B,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACK44B,EAAyB,IAD9B,OACd98B,EADc,OAGpBq7B,EAAiBr7B,GAHG,2CAAH,qDAKnBi9B,KACC,IAIF,IAYWT,EAAqB,uCAAG,WAAOhnC,GAAP,iBAAA0O,EAAA,sEACK64B,EAA2B,CAC1DnjC,WAAY,CACVE,aAAc,CACZtE,SAJsB,QACtB0nC,EADsB,SAUuB,OAA9BA,EAAmBxmC,QAC3Cue,GAAwB,qBAClBkoB,EAAoB/B,EAAcjkC,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnE6lC,EAAiB8B,IAGnB3kB,GAAsB,yCAhBW,2CAAH,sDAyC1BojB,EAAe,uCAAG,WAAOrmC,EAAK0K,EAAU86B,GAAtB,iCAAA72B,EAAA,6DAKTk5B,EAA6B,WACjC,OAAOn9B,EAAUlD,MAAMzH,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQF,EAAKC,KAGrD6nC,EARe,WACnB,OAAOjC,EAAc9lC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQwK,EAAUzK,IAOvC8nC,GAEvBC,EAAYH,IAGZI,EAAqCzC,EAAmBh9B,MAAM1G,OAAS,EAAlC,eAEzC0jC,EAFyC,CAG5Ch9B,MAAOg9B,EAAmBh9B,MAAM1G,OAAS,EAAI0jC,EAAmBh9B,MAAMzI,KAAI,SAAA0I,GAAG,OAAIA,EAAIxI,MAAM,KAExFulC,EAEU0C,EArBS,sBAsBVx9B,EAAUlD,MAAMpF,MAAM,EAAG4lC,IAtBf,CAuBbxC,GAvBa,YAwBV96B,EAAUlD,MAAMpF,MAAM4lC,EAAY,KAGvCG,EA3Be,sBA4BVz9B,EAAUlD,MAAMpF,MAAM,EAAG4lC,IA5Bf,CA6BbC,GA7Ba,YA8BVv9B,EAAUlD,MAAMpF,MAAM4lC,EAAY,KAIvCI,EAAyBlmC,OAAOC,OAAO,GAAI0jC,EAAciC,GAAhC5lC,OAAA,IAAAA,CAAA,GACpBwI,EADoB,CAEvBlD,MAAO2gC,KAGHlmC,EAAcC,OAAOC,OAAO,GAAI0jC,EAAciC,GAAhC5lC,OAAA,IAAAA,CAAA,GACfwI,EADe,CAElBlD,MAAO0gC,KAGHvC,EA5CS,sBA6CVE,EAAczjC,MAAM,EAAG0lC,IA7Cb,CA8Cb7lC,GA9Ca,YA+CV4jC,EAAczjC,MAAM0lC,EAAiB,KA/C3B,UAqDUL,EAA2B,CAC3DpjC,WAAY,CACXE,aAAc,CACZtE,GAAIyK,EAAUzK,KAGjBS,KAAK,eACD0nC,EADA,CAEHxC,UAAW3jC,EAAYxD,SA7DF,SAqDjB4pC,EArDiB,SAkEoC,OAA9BA,EAAmBlnC,QAC9Cue,GAAwB,qBACxBomB,EAAiBH,IAIjB1iB,KAxEqB,4CAAH,0DA6Ef4jB,EAAyB,uCAAG,WAAO5mC,EAAGyK,GAAV,2BAAAiE,EAAA,6DAMnBk5B,EAA6B,WACjC,OAAOn9B,EAAUlD,MAAMzH,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQD,IAGhD6nC,EARe,WACnB,OAAOjC,EAAc9lC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQwK,EAAUzK,IAOvC8nC,GAEjBC,EAAYH,IAEZK,EAdmB,sBAepBx9B,EAAUlD,MAAMpF,MAAM,EAAG4lC,IAfL,YAgBpBt9B,EAAUlD,MAAMpF,MAAM4lC,EAAY,KAGjC/lC,EAAcC,OAAOC,OAAO,GAAI0jC,EAAciC,GAAhC5lC,OAAA,IAAAA,CAAA,GACfwI,EADe,CAElBlD,MAAO0gC,KAGHvC,EAxBmB,sBAyBpBE,EAAczjC,MAAM,EAAG0lC,IAzBH,CA0BvB7lC,GA1BuB,YA2BpB4jC,EAAczjC,MAAM0lC,EAAiB,KA3BjB,SAiCAL,EAA2B,CAC3DpjC,WAAY,CACXE,aAAc,CACZtE,GAAIyK,EAAUzK,KAGjBS,KAAK,eACDuB,EADA,CAEH2jC,UAAW3jC,EAAYxD,SAzCQ,QAiC3B4pC,EAjC2B,SA8C0B,OAA9BA,EAAmBlnC,QAC9Cue,GAAwB,0BACxBomB,EAAiBH,IAIjB1iB,KApD+B,4CAAH,wDAyDzBujB,EAA2B,uCAAG,WAAOhB,EAAmBvlC,GAA1B,uBAAA0O,EAAA,6DAMrBm5B,EALe,WACnB,OAAOjC,EAAc9lC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQD,GAI7B8nC,GAIjBG,EAVqB,sBAWtBrC,EAAciC,GAAgBtgC,OAXR,CAYzBg+B,IAGIvjC,EAAcC,OAAOC,OAAO,GAAI0jC,EAAciC,GAAhC5lC,OAAA,IAAAA,CAAA,GACf2jC,EAAciC,GADC,CAElBtgC,MAAO0gC,KAGHvC,EApBqB,sBAqBtBE,EAAczjC,MAAM,EAAG0lC,IArBD,CAsBzB7lC,GAtByB,YAuBtB4jC,EAAczjC,MAAM0lC,EAAiB,KAvBf,SA6BFL,EAA2B,CAC3DpjC,WAAY,CACXE,aAAc,CACZtE,GAAIA,IAGPS,KAAK,eACDuB,EADA,CAEH2jC,UAAW3jC,EAAYxD,SArCU,QA6B7B4pC,EA7B6B,SA0CwB,OAA9BA,EAAmBlnC,QAC9Cue,GAAwB,wBACxBomB,EAAiBH,GACjBqB,GAAe,IAIf/jB,KAjDiC,2CAAH,wDAuDjC,OACC,oCACI,yBAAKtkB,UAAU,yBACT,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,cAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,sBACZ8uB,SAAU,SAAA5vB,GAAK,OAlQH,SAACA,GACrB,GAAGmpC,EAAeniC,KAAKrD,OAAS,EAAG,CACjC,IAAM8lC,EAAmBN,EAAeniC,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACnGouB,EAAiB8B,IA+PQ1oB,CAAa/gB,OAG9B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACZvO,QAAS,kBAAMw2B,GAAgB,KAJvB,YAWA,yBAAKzoC,UAAU,uCAMxB,yBAAKA,UAAU,uCAET2oC,EAAer5B,WAAa,kBAACmR,GAAD,MAE5BkoB,EAAep5B,QAAU23B,EAAc/jC,OAAS,IACtD,yBAAK/C,MAAO,CACX6V,UAAW,SAEX,kBAAC,GAAD,CAAOpO,MAAM,wBAId8gC,EAAep5B,MAAQ23B,EAAc/jC,OAAS,GAC5C,yBAAKnD,UAAU,2BACdknC,EAAc9lC,KAAI,SAAA2K,GAClB,OACC,yBAAK/L,UAAU,gCACf,kBAAC,KAAD,CACC2pC,WAAW,EACXlxB,UAAU,EACVmxB,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAACvF,GAAA,EAAD,CAAoBwF,OAAQD,EAAW,GAAK,KAC1E9pC,UAAU,iCAEV,kBAAC+nC,GAAD,CACCiC,OAAQj+B,EAAUjM,KAClBqE,IAAI,IACJnE,UAAU,6BACViqC,MAAO7B,GAAiBC,EAAeC,EAAuBv8B,EAAUzK,GAAGinC,IAE3E,yBAAKvoC,UAAU,kCACb+L,EAAUlD,OAASkD,EAAUlD,MAAM1F,OAAS,GAAK4I,EAAUlD,MAAMzH,KAAI,SAAAC,GACrE,OACC,yBAAKrB,UAAU,qCACf,kBAAC,KAAD,CACC2pC,WAAW,EACXlxB,UAAU,EACVmxB,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACX,kBAACvF,GAAA,EAAD,CAAoBwF,OAAQD,EAAW,GAAK,KAE7C9pC,UAAU,iCAGV,kBAAC+nC,GAAD,CACCiC,OAAQ3oC,EAAKwG,OAAS,GACtB1D,IAAI,IACJnE,UAAU,6BACViqC,MAAOhC,GAASC,EAA0Bn8B,EAAU1K,EAAKC,KAEzD,kBAAC4oC,GAAD,CACA/C,iBAAkBA,EAClBD,cAAeA,EACf7lC,KAAMA,EACN0K,UAAWA,EACX27B,gBAAiBA,YAYlB37B,EAAUlD,MAAM1F,OAAS,IAAO,kBAAC,GAAD,CAAO0E,MAAM,4BAcxD,kBAACsiC,GAAD,CACQ/pB,sBAAuBooB,EACvBnoB,yBAA0BooB,EAC1BtB,iBAAkBA,EAClBD,cAAeA,IAErB,kBAACkD,GAAD,CACMhqB,sBAAuBsoB,EACvBroB,yBAA0BgoB,EAC1BlB,iBAAkBA,EACxBD,cAAeA,EACfW,4BAA6BA,EAC7BC,YAAaA,IAMd,kBAAC,KAAD,CACCjgC,MAAM,0BACN6W,SAAS,EACT+F,KAjVmB,SAACzS,GACtBy2B,GAAgB,IAiVd/jB,SA7UuB,SAAC1S,GAC1By2B,GAAgB,IA6Ud4B,OAAQ,KACR5qB,OAAO,QAEP,kBAACvgB,EAAD,CAAYI,MAAM,4B,UCpiBdqhB,GAAYC,KAAZD,QASFI,GAA0B,SAAC9B,GAC7BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAK7CsO,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAqWpC+U,GA9UK,SAAC,GAAyF,IAAvF3K,EAAsF,EAAtFA,sBAAuBC,EAA+D,EAA/DA,yBAA0BiqB,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAA0B,EAE5Dp6B,GAAe,GAAI,WAAY,QAF6B,mBAElGq6B,EAFkG,KAEnFC,EAFmF,OAGzE73B,oBAAS,GAHgE,mBAGxFqO,GAHwF,aAIjErO,oBAAS,GAJwD,mBAIlG+Y,EAJkG,KAIpFC,EAJoF,OAKzDhZ,mBAAS,IALgD,mBAKlG0O,EALkG,KAKhFH,EALgF,OAM3CvO,oBAAS,GANkC,mBAMlGwO,EANkG,aAO7CxO,mBAAS,KAPoC,mBAO1E83B,GAP0E,aAQzE93B,mBAAS,IARgE,mBAQlG2O,EARkG,KAQxFC,EARwF,OASvE5O,oBAAS,GAT8D,mBASlG6O,EATkG,KASvFC,EATuF,OAU1D9O,oBAAS,GAViD,mBAUlG6V,EAVkG,KAUjFC,EAViF,OAWzE9V,mBAAS,IAXgE,mBAWlG2V,EAXkG,KAWxFC,EAXwF,OAYjF5V,mBAAS,IAZwE,mBAYlG9S,EAZkG,KAY5F6qC,EAZ4F,QAa/D/3B,mBAAS,IAbsD,qBAalGg4B,GAbkG,MAanFC,GAbmF,MAmBnG/5B,GAAY,uCAAG,8BAAAd,EAAA,6DACjB0R,GAAa,GAEPqB,EAAW,IAAIC,SACrBzB,EAAS0B,SAAQ,SAAAC,GACbH,EAASI,OAAO,SAAUD,EAAMA,EAAKpjB,SAEzCijB,EAASI,OAAO,OAAQrjB,GACxBijB,EAASI,OAAO,YAAaynB,IARZ,SAWSH,EAAoB,CAC1C1oC,KAAMghB,IAZO,OAWX+nB,EAXW,OAgBjBppB,GAAa,GAETopB,GAAsC,OAAvBA,EAAYtoC,QAE3B+nC,EAAa,GAAD,mBAAKD,GAAL,cACRhpC,GAAIwpC,EAAW,KAAW,GAC1B3mC,IAAK2mC,EAAW,KAAW,GAC3BhrC,KAAMgrC,EAAW,MAAY,GAC7B7jC,UAAW6jC,EAAW,WAAiB,GACvCC,KAAMD,EAAW,MAAY,GAC7BnjC,MAAOmjC,EAAW,OAAa,IAE5BA,MAGPtpB,EAAY,IACZE,GAAa,GACbX,GAAwB,mBACxBV,GAAyB,GACzBsqB,EAAQ,IACRD,EAA0B,IAK1BrqB,GAAyB,IAGzBiE,GAAsB,6CA5CT,4CAAH,qDAmGZf,GAAc,CAEhBE,SAAU,SAAAP,GACN1B,GAAY,SAAAkC,GACR,IAAMtgB,EAAQme,EAAShgB,QAAQ2hB,GACzBS,EAAcpC,EAAS9d,QAE7B,OADAkgB,EAAYC,OAAOxgB,EAAO,GACnBugB,MAIfE,aAAc,SAAAX,GAIV,OAHA1B,GAAY,SAAAkC,GACR,MAAM,GAAN,mBAAWnC,GAAX,CAAqB2B,QAElB,GAEX3B,YAwFJ,IAAMwI,GACF,6BACKtB,EAAkB,kBAACuB,GAAA,EAAD,MAAsB,kBAACxJ,GAAA,EAAD,MACzC,yBAAKxgB,UAAU,mBAAf,WAIR,OACI,oCACI,kBAAC,KAAD,CACII,MAAO,CACHokB,IAAK,QAET3c,MAAM,gBACN6W,QAAS0B,EACTqE,KAAM3T,GACN4T,SAxKS,SAAC1S,GAClBqO,GAAyB,IAwKjBZ,OAAO,eACPwK,cAAe,CACX/X,QAASuP,EACTyI,SAAU,SACVvqB,WAvKR6qC,EAAcl7B,WA0KVqV,UAAW,CACP5S,OAAQ,IACRyE,QAAS,SAIb,kBAACtX,EAAD,CACII,MAAM,OACNE,MAAOM,EACPA,KAAK,OACLJ,SAAU,SAACsS,GAAD,OAAY24B,EAAQ34B,EAAEhE,OAAOxO,QACvCI,QAAS4qC,EAAcr7B,MAAd,WAETtP,YAAa2qC,EAAcr7B,MAAd,aAGjB,yBAAK/O,MAAO,CACR6V,UAAW,UAIf,wBAAIjW,UAAU,mBAAd,aACA,kBAAC,KAAD,CACIF,KAAK,SACLglB,SAAS,eACT9kB,UAAU,kBACVqqB,gBAAgB,EAChBxG,aAzEhB,SAAsBX,GAiBlB,MAhBiC,eAAdA,EAAK3jB,MAAuC,cAAd2jB,EAAK3jB,MAElD0f,KAAQ9P,MAAM,qCAEH+T,EAAKlK,KAAO,KAAO,KAAO,GAErCiG,KAAQ9P,MAAM,gCAbtB,SAAmBrF,EAAK0f,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc/f,GAcrBggB,CAAU5G,GAAM,SAAAqF,GACZC,EAAYD,GACZsiB,GAAiB3nB,GACjBwF,GAAoB,OAGjB,GAyDKlF,UAAU,GAET+E,EAAW,yBAAKxa,IAAKwa,EAAUte,IAAI,SAAS7J,MAAO,CAAE2S,MAAO,UAAegX,IAKhF,yBAAK3pB,MAAO,CACR6V,UAAW,SAEf,wBAAIjW,UAAU,mBAAd,uBAKA,kBAAC,GAAD,eACIwjB,UAAU,EACVxjB,UAAU,qBACV8kB,SAAS,UACT1kB,MAAO,CACHuV,WAAY,SAEZ4N,IAEJ,uBAAGvjB,UAAU,wBACT,kBAACgrC,GAAA,EAAD,OAEJ,uBAAGhrC,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2GAMHwqC,EAAcr7B,MAAd,cACG,uBAAG/O,MAAO,CACN4V,MAAO,2BACPw0B,EAAcr7B,MAAd,eASZ,kBAAC,GAAD,CACIwP,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbC,sBAAsB,EACtBC,oBAAqBA,EACrBC,wBAAyBA,EACzBE,iBAAkBA,MCnY1B/C,GAAWrf,IAAXqf,OAIFwC,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAKtCsO,GAAwB,SAACrF,GAChCC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAyO/BtD,iBA/NM,SAAC,GAAqB,EAApB2C,QAAqB,IAAD,EAENzC,mBAAS,IAFH,mBAEhC03B,EAFgC,KAEtBC,EAFsB,OAIIp6B,GAAe,GAAI,aAJvB,mBAIhC86B,EAJgC,KAIpBC,EAJoB,OAKY/6B,GAAe,GAAI,eAL/B,mBAKdg7B,GALc,aAMkBh7B,GAAe,GAAI,eANrC,mBAMRi7B,GANQ,WAUvCt7B,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACKk7B,EAAqB,IAD1B,OACVG,EADU,OAGhBd,EAAac,GAHG,2CAAH,qDAKfC,KACC,IAjBqC,MAuBgB14B,oBAAS,GAvBzB,mBAuBlCwN,EAvBkC,KAuBZC,EAvBY,KAsCnCkrB,EAAiB,uCAAG,WAAOjqC,GAAP,eAAA0O,EAAA,sEACKm7B,EAAuB,CAClDzlC,WAAY,CACVE,aAAc,CACZtE,SAJkB,QAClBkqC,EADkB,SAUqB,OAA1BA,EAAehpC,OAClCue,GAAwB,mBAIxBuD,GAAsB,qDAfE,2CAAH,sDAsBjBmnB,EAAiB,uCAAG,WAAOnqC,GAAP,iBAAA0O,EAAA,sEACKo7B,EAAuB,CAClD1lC,WAAY,CACVE,aAAc,CACZtE,SAJkB,QAClBoqC,EADkB,SAUqB,OAA1BA,EAAelpC,QAClCue,GAAwB,iBAClB4qB,EAAgBrB,EAAUrnC,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KAC3DipC,EAAaoB,IAGfrnB,GAAsB,yCAhBI,2CAAH,sDAuBxB,OACC,oCAIE,yBAAKtkB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,UAMA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,kBACZ8uB,SAAU,SAAA5vB,GAAK,OA5EF,SAACA,GACpB,GAAGyrC,EAAWzkC,KAAKrD,OAAS,EAAG,CAC7B,IAAMwoC,EAAeV,EAAWzkC,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKc,SAASpB,MACvE+qC,EAAaoB,IAyEUprB,CAAa/gB,OAI9B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJtC,YAWA,yBAAKrgB,UAAU,uCAMxB,yBAAKA,UAAU,uCACTirC,EAAW17B,MAAQ+6B,EAAUnnC,OAAS,GAE5C,yBAAKnD,UAAU,4CAEPsqC,EAAUlpC,KAAI,SAAAyK,GACb,OACE,yBAAK7L,UAAU,iDAIX,yBAAKA,UAAU,qDACf,yBACEiK,IAAI,YACJ8D,IAAKlC,EAAM5E,aAGf,yBAAKjH,UAAU,sDACb,gCAAM6L,EAAM/L,KAAZ,KAEA,yBACEM,MAAO,CACL6U,QAAS,OACTC,eAAgB,kBAGlB,kBAAC,KAAD,CAASmB,UAAU,MAAMxO,MAAM,qBAC/B,kBAAC,IAAD,CAEDmR,KAAK,QACLhZ,UAAU,6BACVsH,KAAM,kBAAC6d,GAAA,EAAD,MACNlT,QAAS,kBAAMs5B,EAAkB1/B,EAAMvK,MAEtC,0BAAMlB,MAAO,CACXsW,SAAS,SADX,gBAaA,kBAAC,KAAD,CAASL,UAAU,MAAMxO,MAAM,gBAC/B,kBAAC,KAAD,CAEL2X,UAAW,kBAAMisB,EAAkB5/B,EAAMvK,KACzCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAElD,kBAAC,IAAD,CACa1G,KAAK,QACLzZ,KAAK,OACLqsC,QAAQ,EACRtkC,KAAM,kBAACqY,GAAA,EAAD,iBAoBrBsrB,EAAW37B,WAAa,kBAACmR,GAAD,MAExBwqB,EAAW17B,QAAU+6B,EAAUnnC,OAAS,IACzC,kBAAC,GAAD,CAAO0E,MAAM,qBAQhBojC,EAAW17B,MACZ,kBAACs8B,GAAD,CACMzrB,sBAAuBA,EACvBC,yBAA0BA,EAC1BiqB,UAAWW,EAAWzkC,KACtB+jC,aAAcA,QC1PTuB,GARD,SAACn5B,GACX,OACI,uCCAOo5B,GAJC,SAACp5B,GAChB,OAAO,yCCuCF2R,IArBmBjU,MAAaC,MAAM,CACxCzI,MAAOwI,MACF/Q,MAAM,SACNF,SAAS,+BACd4sC,WAAY37B,MACP/Q,MAAM,eACNF,SAAS,kCAeY,SAAC6f,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,0BAK7CtF,GAAgB,CAClB7I,MAAO,GACPokC,UAAW,GACXD,WAAY,IAsMDE,GA5LQ,SAAC,GAAgB,qBAE6B/7B,GAAe,GAAI,sBAFjD,mBAE5Bg8B,EAF4B,KAEHC,EAFG,OAGiBj8B,GAAe,GAAI,gBAHpC,mBAG5Bk8B,EAH4B,KAGTC,EAHS,KAOnCx8B,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACUs8B,EAAuB,IADjC,yDAAH,qDAKrBC,KACD,CAACJ,IAKJ,IAAMr7B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAGYo8B,EAA8B,CAEvDrqC,KAAM,CACF8F,MAAOkJ,EAAOlJ,MACdokC,UAAWl7B,EAAOk7B,UAClBD,WAAYj7B,EAAOi7B,cARV,QAGXQ,EAHW,SAa+B,OAA1BA,EAAehqC,QA/DZyc,OAgErB8B,EA/DR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,oBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAwEvChF,EAAQmY,aAGR7E,KAMJtT,EAAQC,eAAc,GAnCL,iCAlDO,IAACgO,IAkDR,OAAH,wDA2CZ/N,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOlJ,OAAUkJ,EAAOi7B,YAAe76B,IAsBhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAfA27B,EAAkB7lC,MAAQjD,OAAOiC,KAAK6mC,EAAkB7lC,MAAMrD,OAAS,EAChE,eAAKkpC,EAAkB7lC,MAGvBkK,KAeN,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,yBAAK7R,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACd,EAAD,CACII,MAAM,aACNE,MAAOuR,EAAOlJ,MACd/H,KAAK,QACLF,QAAU8R,EAAQ7J,OAAS2J,EAAO3J,QAC5B4J,GAAgB06B,EAAwBh9B,MAAxB,YAEtBtP,YAAc6R,EAAQ7J,OAAS2J,EAAO3J,QAChC4J,GAAgB06B,EAAwBh9B,MAAxB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAK3R,UAAU,gCACX,kBAACd,EAAD,CACII,MAAM,aACNE,MAAOuR,EAAOk7B,UACdnsC,KAAK,YACLF,QAAU8R,EAAQu6B,WAAaz6B,EAAOy6B,YAChCx6B,GAAgB06B,EAAwBh9B,MAAxB,gBAEtBtP,YAAc6R,EAAQu6B,WAAaz6B,EAAOy6B,YACpCx6B,GAAgB06B,EAAwBh9B,MAAxB,gBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAK3R,UAAU,qCACX,kBAACd,EAAD,CACII,MAAM,cACNE,MAAOuR,EAAOi7B,WACdlsC,KAAK,aACLF,QAAU8R,EAAQs6B,YAAcx6B,EAAOw6B,aACjCv6B,GAAgB06B,EAAwBh9B,MAAxB,iBAEtBtP,YAAc6R,EAAQs6B,YAAcx6B,EAAOw6B,aACrCv6B,GAAgB06B,EAAwBh9B,MAAxB,iBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,mBAShC,yBAAKvR,MAAO,CACR6V,UAAW,UAGf,kBAAC,IAAD,CAEIhE,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACT9R,SAAUuR,EAA0BH,EAAQI,GAC5CnR,UAAU,8BALd,qBAUA,yBAAKI,MAAO,CACR+a,aAAc,eC5NpC/K,GAAmBC,MAAaC,MAAM,CACxCm8B,aAAcp8B,MAAa/Q,MAAM,SAASF,SAAS,+BAcjDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB+7B,aAAc,GACd9/B,QAAS,GACThC,MAAO,GACPD,MAAO,GACPgiC,eAAgB,IA0OLR,GA/NQ,SAAC,GAAgB,qBAEiC/7B,GAAe,GAAI,yBAFrD,mBAE5Bw8B,EAF4B,KAEFC,EAFE,OAG2Bz8B,GAAe,GAAI,yBAH9C,mBAG5B08B,EAH4B,KAGNC,EAHM,KAOnCh9B,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACU88B,EAA8B,IADxC,yDAAH,qDAKrBP,KACD,CAACI,IAIJ,IAAM77B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAEc48B,EAAiC,CAE5D7qC,KAAM,CACF0qC,aAAc17B,EAAO07B,aACrB9/B,QAASoE,EAAOpE,QAChBhC,MAAOoG,EAAOpG,MACdD,MAAOqG,EAAOrG,MACdgiC,eAAgB37B,EAAO27B,kBATd,QAEXK,EAFW,SAemC,OAA5BA,EAAiBvqC,QAnEhByc,OAoErB8B,EAnER7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,oBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA4EvChF,EAAQmY,aAGR7E,KAIJtT,EAAQC,eAAc,GAnCL,iCApDO,IAACgO,IAoDR,OAAH,wDA2CZ/N,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAO07B,eAAiBt7B,GAsBjC,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBkB,oBAAoB,EACpBZ,cAlBAm8B,EAAqBrmC,MAAQjD,OAAOiC,KAAKqnC,EAAqBrmC,MAAMrD,OAAS,EACtE,eAAK0pC,EAAqBrmC,MAG1BkK,KAkBN,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,yBAAK7R,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACd,EAAD,CACII,MAAM,eACNE,MAAOuR,EAAO07B,aACd3sC,KAAK,eACLF,QAAU8R,EAAQ+6B,cAAgBj7B,EAAOi7B,eACnCh7B,GAAgBk7B,EAAyBx9B,MAAzB,mBAEtBtP,YAAc6R,EAAQ+6B,cAAgBj7B,EAAOi7B,eACvCh7B,GAAgBk7B,EAAyBx9B,MAAzB,mBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,oBAI5B,yBAAK3R,UAAU,gCACX,kBAACd,EAAD,CACII,MAAM,eACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC5B8G,GAAgBk7B,EAAyBx9B,MAAzB,YAEtBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QAChC8G,GAAgBk7B,EAAyBx9B,MAAzB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAK3R,UAAU,gCACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC5B+G,GAAgBk7B,EAAyBx9B,MAAzB,YAEtBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QAChC+G,GAAgBk7B,EAAyBx9B,MAAzB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAM5B,yBAAK3R,UAAU,gCACX,kBAACd,EAAD,CACII,MAAM,kBACNE,MAAOuR,EAAO27B,eACd5sC,KAAK,iBACLF,QAAU8R,EAAQg7B,gBAAkBl7B,EAAOk7B,iBACrCj7B,GAAgBk7B,EAAyBx9B,MAAzB,qBAEtBtP,YAAc6R,EAAQg7B,gBAAkBl7B,EAAOk7B,iBACzCj7B,GAAgBk7B,EAAyBx9B,MAAzB,qBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,sBAM5B,yBAAK3R,UAAU,qCACX,kBAAC,GAAD,CACIV,MAAM,UACNE,MAAOuR,EAAOpE,QACd7M,KAAK,UACLF,QAAU8R,EAAQ/E,SAAW6E,EAAO7E,UAC9B8E,GAAgBk7B,EAAyBx9B,MAAzB,cAEtBtP,YAAc6R,EAAQ/E,SAAW6E,EAAO7E,UAClC8E,GAAgBk7B,EAAyBx9B,MAAzB,cACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,gBAShC,yBAAKvR,MAAO,CACR6V,UAAW,UAGf,kBAAC,IAAD,CAEIhE,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACT9R,SAAUuR,EAA0BH,EAAQI,GAC5CnR,UAAU,8BALd,qBAUA,yBAAKI,MAAO,CACR+a,aAAc,eC3OlC0F,IAJiBxQ,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAGlDsQ,KAAZD,SAWFyD,GAAwB,SAACrF,GAC9BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA6P9B+U,GAtOK,SAAC,GAAwF,EAAtF3K,sBAAsF,EAA/DC,yBAA+D,EAArCsV,UAAqC,EAA1BC,aAA2B,IAAD,EAE1CzlB,GAAe,GAAI,yBAFuB,mBAErG68B,EAFqG,KAE9EC,EAF8E,OAG5Er6B,oBAAS,GAHmE,mBAGrGyO,EAHqG,KAG3FJ,EAH2F,OAIpErO,oBAAS,GAJ2D,mBAIrG+Y,EAJqG,KAIvFC,EAJuF,OAKpEhZ,mBAAS,IAL2D,mBAKvFwV,GALuF,WAStGtX,EAAY,uCAAG,4BAAAd,EAAA,sEAGmBi9B,EAAiC,CAEvElrC,KAAM,CACLmrC,KAAM7rB,EAAWA,EAAS,IAAMA,EAAS,GAAG/f,GAAK,MAN/B,QAGd6rC,EAHc,SAWgD,OAApCA,EAAyB3qC,QAxD1Byc,EAyDN,oBAxD1BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAwD1CsO,GAAsB,oDAfH,iCA7CU,IAACrF,IA6CX,OAAH,qDA+BlB,OACC,oCACC,yBAAKjf,UAAU,qBAEd,kBAAC,KAAD,CAAM4kB,iBAAiB,KACtB,kBAAC,GAAD,CAASC,IAAI,YAAY1gB,IAAI,KAC5B,kBAACipC,GAAD,OAED,kBAAC,GAAD,CAASvoB,IAAI,YAAY1gB,IAAI,KAC5B,yBAAK/D,MAAO,CACX6U,QAAS,OACTE,WAAY,WAEZ,yBAAK/U,MAAO,CACXgW,YAAa,SAEb,wBAAIpW,UAAU,mBAAd,QACA,yBAAKA,UAAU,gCACbqhB,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,kBAAMmW,EAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,kBAzCK,SAAC3Q,GAE3B,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAGrB2f,EAAYqJ,GAmCeC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,WAOJ7D,GAAYA,EAAS,IACrB,kBAAC,KAAD,CACCxZ,MAAO,iBAEP,yBACCoK,QAAS,WACR2Z,GAAgB,IAEjB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,SAIA,kBAAC,KAAD,CACH3Y,MAAO,iBAEN,yBACCoK,QAAS,WACR2Z,GAAgB,IAEjB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,YA0EP,kBAAC,IAAD,CAECtO,QAAS86B,EAAsB19B,UAC/B2C,QAAS,kBAAMnB,KACf9Q,UAAU,8BAJX,oBASA,yBAAKI,MAAO,CACX+a,aAAc,WAKhB,kBAAC,GAAD,CAAS0J,IAAI,oBAAoB1gB,IAAI,KAEpC,kBAACkpC,GAAD,SASH,kBAAC,GAAD,CACC1uB,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbC,sBAAsB,MC7NXosB,GAhEQ,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,mBAAoBC,EAAuD,EAAvDA,sBAAuBC,EAAgC,EAAhCA,mBAAgC,EACtD76B,mBAAS,CACtD5H,aAAcuiC,EAAmBviC,aACjCoB,OAAQmhC,EAAmBnhC,SAHwE,mBAC5FU,EAD4F,KAC5E4gC,EAD4E,KAM9FC,EAA6B,SAAC37B,GACnC,IAAMlS,EAAOkS,EAAEhE,OAAOlO,KAChBN,EAAQwS,EAAEhE,OAAOxO,MAEvBkuC,EAAkB,eACd5gC,EADa,eAEfhN,EAAON,MAIVsQ,qBACC,WACC,IAIM1M,EAHEqqC,EAAmBrsC,KAAI,SAACC,GAAD,OAAUA,EAAKC,MAAIC,QAAQgsC,EAAmBjsC,IAKvEgC,EAAcC,OAAOC,OAAO,GAAIiqC,EAAmBrqC,GAArCG,OAAA,IAAAA,CAAA,GAAkDuJ,IAChEylB,EAAmB,sBACrBkb,EAAmBhqC,MAAM,EAAGL,IADP,CAExBE,GAFwB,YAGrBmqC,EAAmBhqC,MAAML,EAAQ,KAErCoqC,EAAsBjb,KAEvB,CAAEzlB,IAQH,OACC,yBAAK9M,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCK,KAAK,SACLF,YAAY,gBACZG,MAAOsN,EAAe9B,aACtBlL,KAAK,eACLJ,SAAUiuC,KAGZ,yBAAK3tC,UAAU,yBACd,kBAACd,EAAD,CACCK,KAAK,SACLF,YAAY,SACZG,MAAOsN,EAAeV,OACtBtM,KAAK,SACLJ,SAAUiuC,OCtCPz2B,GAAWC,KAAXD,OAGF6J,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,mBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAKvCsO,GAAwB,SAACrF,GAC9BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBASvC5F,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MACJ/Q,MAAM,QACNF,WACAoR,IAAI,EAAG,yCACTvE,eAAgBoE,MACd/Q,MAAM,oBACNF,WACAoR,IAAI,EAAG,qDACTjI,KAAM8H,MACJ/Q,MAAM,QACNF,WACAoR,IAAI,EAAG,2CAOJE,GAAgB,CACrB5Q,KAAM,GACNmM,eAAgB,GAChB1D,KAAM,IA0ZQqlC,GA7YM,SAAC,GAA2F,IAAzFxtB,EAAwF,EAAxFA,sBAAuBC,EAAiE,EAAjEA,yBAA0BwtB,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,cAA2B,EAEnE39B,GAAe,GAAI,aAFgD,mBAExG49B,EAFwG,KAExFC,EAFwF,OAGvDp7B,mBAAS,IAH8C,mBAGxGsqB,EAHwG,KAGlFC,EAHkF,OAI7DvqB,mBAAS,IAJoD,mBAIxGwqB,EAJwG,KAIrFC,EAJqF,OAMnEzqB,mBAAS,IAN0D,mBAMxG0qB,EANwG,KAMxFC,EANwF,OAOzE3qB,mBAAS,IAPgE,mBAOxG4qB,EAPwG,KAO3FC,EAP2F,OAS5DttB,GAClD,GACA,eAX8G,mBASxGutB,EATwG,KAStFC,EATsF,OAclExtB,GAAe,GAAI,YAd+C,mBAcxGytB,EAdwG,KAczFC,EAdyF,OAgBzEjrB,mBAAS,IAhBgE,gCAiB/EA,mBAAS,KAjBsE,gCAmB3DA,mBAAS,CAAC,CAC7D5H,aAAc,GACdoB,OAAQ,GACR9K,GAAI,QAtB0G,mBAmBxGmsC,EAnBwG,KAmBpFD,EAnBoF,KA0BzG18B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,+BAAAhB,EAAA,2DAGhBy9B,EAAmBtqC,OAAS,GAHZ,iBAMnB,IAFMiJ,EAAS,GAJI,4BAMnB,EAAiBqhC,EAAjB,+CAASpsC,EAA4B,QACC,KAAjC+K,EAAO/K,EAAI,eAA+C,KAAnBA,EAAI,SAC9C+K,EAAO/K,EAAI,cAAoBA,EAAI,QARlB,wPAaQ2sC,EAAkB,CAE5CjsC,KAAM,CACLjC,KAAMiR,EAAOjR,KACbmM,eAAgB8E,EAAO9E,eACvB1D,KAAMwI,EAAOxI,KACbiC,QAAS0yB,EACTzyB,KAAM2yB,EACNhxB,YArBiB,SAabw5B,EAba,SA2ByB,OAAxBA,EAAapjC,QAChCue,KAEA+sB,EAAc,CAAC,aACdxsC,GAAIskC,EAAY,IAAU,GAC1BzhC,IAAKyhC,EAAY,IAAU,GAC3B9lC,KAAM8lC,EAAY,MAAY,IAE3BA,IALS,mBAMRiI,KACLxtB,GAAyB,GACzBrP,EAAQmY,aAGR7E,KAzCkB,yCAgDQ0pB,EAAkB,CAE5CjsC,KAAM,CACLjC,KAAMiR,EAAOjR,KACbmM,eAAgB8E,EAAO9E,eACvB1D,KAAMwI,EAAOxI,KACbiC,QAAS0yB,EACTzyB,KAAM2yB,EACNhxB,OAAQ,MAxDS,SAgDbw5B,EAhDa,SA8DyB,OAAxBA,EAAapjC,QAChCue,KAEA+sB,EAAc,GAAD,mBAAKD,GAAL,cACZvsC,GAAIskC,EAAY,IAAU,GAC1BzhC,IAAKyhC,EAAY,IAAU,GAC3B9lC,KAAM8lC,EAAY,MAAY,IAE3BA,MAEJvlB,GAAyB,GACzBrP,EAAQmY,aAGR7E,KA5EkB,QAmFpBtT,EAAQC,eAAc,GAnFF,2EAAH,wDAwFZ8sB,EAAe,SAACv+B,GACrB69B,EAAqB79B,IAGhBw+B,EAAkB,SAACx+B,GACxB29B,EAAwB39B,IAGzBsQ,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2tB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe96B,OAAS,IAEvCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GAC1C,MAAO,CACNhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGhBy9B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpuB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6tB,EAAoB,CAC7Cn4B,WAAY,CACXE,aAAc,CACb4E,QAAS0yB,MAJK,QACXiB,EADW,SAUEA,EAAYh7B,OAAS,IAEjCq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACpC,MAAO,CACNjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGb29B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAKJ,IAAM5T,GAAe,SAACtX,GACrBqO,GAAyB,IAIpBnP,GAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAOjR,MACPiR,EAAO9E,gBACP8E,EAAOxI,OASJ0lC,GAA0B,WAC/BT,EAAsB,GAAD,mBAAKC,GAAL,CAAyB,CAC7CziC,aAAc,GACdoB,OAAQ,GACR9K,GAAG,GAAD,OAAKmsC,EAAmBtqC,aAQ5B,OACC,kBAAC,IAAD,CACCiO,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAGNG,UAAW,CACV5S,OAAQ,IACRyE,QAAS,QAEV3O,MAAM,iBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAK7C,yBAAKnR,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBs8B,EAAe5+B,MAAf,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBs8B,EAAe5+B,MAAf,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,mBACNE,MAAOuR,EAAO9E,eACdnM,KAAK,iBACLF,QAAU8R,EAAQzF,gBAAkBuF,EAAOvF,iBACxCwF,GAAgBs8B,EAAe5+B,MAAf,qBAEnBtP,YAAc6R,EAAQzF,gBAAkBuF,EAAOvF,iBAC5CwF,GAAgBs8B,EAAe5+B,MAAf,qBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,uBAiBpB,yBAAKvR,MAAO,CACXgW,YAAa,SAEb,kBAAClX,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOxI,KACdzI,KAAK,OACLF,QAAU8R,EAAQnJ,MAAQiJ,EAAOjJ,OAC9BkJ,GAAgBs8B,EAAe5+B,MAAf,WAEnBtP,YAAc6R,EAAQnJ,MAAQiJ,EAAOjJ,OAClCkJ,GAAgBs8B,EAAe5+B,MAAf,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAOnB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACCq+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBACpEsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBjZ,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAIhD,yBAAKE,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACCq+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,yBAAyBiD,MAAOkL,KAAMK,yBAC1E/B,KAAK,WACLqF,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAQjD,yBAAKM,MAAO,CACX6V,UAAW,UAEZ,wBAAIjW,UAAU,mBAAd,oBAICytC,EAAmBrsC,KAAI,SAAAmsC,GACvB,OAAO,kBAAC,GAAD,CACNA,mBAAoBA,EACpBE,mBAAoBA,EAAoBD,sBAAuBA,OAKjE,yBAAKptC,MAAO,CACX6V,UAAW,SAEZ,kBAAC,IAAD,CAAQ+C,KAAK,SACZ/G,QAASg8B,GACT1uC,KAAK,SAAS+H,KAAM,kBAACkZ,GAAA,EAAD,OAFrB,oBCzcCtJ,GAAWC,KAAXD,OAGF9G,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MACJ/Q,MAAM,QACNF,WACAoR,IAAI,EAAG,yCACTvE,eAAgBoE,MACd/Q,MAAM,oBACNF,WACAoR,IAAI,EAAG,qDACTjI,KAAM8H,MACJ/Q,MAAM,QACNF,WACAoR,IAAI,EAAG,2CAeJ8T,GAAwB,SAACrF,GAC9BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAkU9ByU,GArTG,SAAC,GAAyE,IAAvE7e,EAAsE,EAAtEA,SAAU+S,EAA4D,EAA5DA,WAAYD,EAAgD,EAAhDA,QAASovB,EAAuC,EAAvCA,cAAeD,EAAwB,EAAxBA,WAAwB,EACrC19B,GAAe,GAAI,gBADkB,mBACnF+9B,EADmF,KAChEC,EADgE,KAI1FpoC,QAAQC,IAAI,iBAAiB4F,GAJ6D,MAOlCgH,mBAAS,IAPyB,mBAOnFsqB,EAPmF,KAO7DC,EAP6D,OAQxCvqB,mBAAS,IAR+B,mBAQnFwqB,EARmF,KAQhEC,EARgE,OAU9CzqB,mBAAS,IAVqC,mBAUnF0qB,EAVmF,KAUnEC,EAVmE,OAWpD3qB,mBAAS,IAX2C,mBAWnF4qB,EAXmF,KAWtEC,EAXsE,OAavCttB,GAClD,GACA,eAfyF,mBAanFutB,EAbmF,KAajEC,EAbiE,OAkB7CxtB,GAAe,GAAI,YAlB0B,mBAkBnFytB,EAlBmF,KAkBpEC,EAlBoE,OAoBpDjrB,mBAAS,IApB2C,gCAqB1DA,mBAAS,KArBiD,mBAyBpF9B,GAzBoF,UAyBxE,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEAGOm+B,EAAwB,CAElDpsC,KAAM,CACLjC,KAAMiR,EAAOjR,KACbmM,eAAgB8E,EAAO9E,eACvB1D,KAAMwI,EAAOxI,KACbiC,QAAS0yB,EACTzyB,KAAM2yB,EACNhxB,OAAQR,EAASQ,UAXC,QAGdw5B,EAHc,SAgBwB,OAAxBA,EAAapjC,QAnEFyc,OAoE9B8B,EAnEF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAsEpC5S,EAJgB,WACrB,OAAOyqC,EAAWzsC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQqK,EAAStK,IAG3CupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIqqC,EAAWzqC,GAA7BG,OAAA,IAAAA,CAAA,GAA0CqiC,IACxDwI,EAX2C,sBAWpBP,EAAWpqC,MAAM,EAAGL,IAXA,CAWQE,GAXR,YAWwBuqC,EAAWpqC,MAAML,EAAQ,KAClG0qC,EAAcM,IAId9pB,KAGDtT,EAAQC,eAAc,GACtB0N,GAAW,GApCS,iCAnDU,IAACM,IAmDX,OAAH,yDAyCZ8e,EAAe,SAACv+B,GACrB69B,EAAqB79B,IAGhBw+B,EAAkB,SAACx+B,GACxB29B,EAAwB39B,IAGzBsQ,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2tB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe96B,OAAS,IAEvCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GAC1C,MAAO,CACNhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGhBy9B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpuB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6tB,EAAoB,CAC7Cn4B,WAAY,CACXE,aAAc,CACb4E,QAAS0yB,MAJK,QACXiB,EADW,SAUEA,EAAYh7B,OAAS,IAEjCq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACpC,MAAO,CACNjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGb29B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAQJ,IAAM5T,EAAe,SAACtX,GACrB2M,GAAW,IAKNzN,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAOjR,MACPiR,EAAO9E,gBACP8E,EAAOxI,OAOV,OACC,kBAAC,IAAD,CACC6I,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP9E,KAGL,gBACA2F,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACChK,MAAM,cACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,IAE7CwT,UAAW,CACV5S,OAAQ,IACRyE,QAAS,SAKV,yBAAKxW,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBy8B,EAAkB/+B,MAAlB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBy8B,EAAkB/+B,MAAlB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,mBACNE,MAAOuR,EAAO9E,eACdnM,KAAK,iBACLF,QAAU8R,EAAQzF,gBAAkBuF,EAAOvF,iBACxCwF,GAAgBy8B,EAAkB/+B,MAAlB,qBAEnBtP,YAAc6R,EAAQzF,gBAAkBuF,EAAOvF,iBAC5CwF,GAAgBy8B,EAAkB/+B,MAAlB,qBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,uBAiBpB,yBAAKvR,MAAO,CACXgW,YAAa,SAEb,kBAAClX,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOxI,KACdzI,KAAK,OACLF,QAAU8R,EAAQnJ,MAAQiJ,EAAOjJ,OAC9BkJ,GAAgBy8B,EAAkB/+B,MAAlB,WAEnBtP,YAAc6R,EAAQnJ,MAAQiJ,EAAOjJ,OAClCkJ,GAAgBy8B,EAAkB/+B,MAAlB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,YAOnB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACC0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBlZ,aAAcmM,GAAYA,EAASpB,QACnC9K,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAIhD,yBAAKE,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACC0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBlZ,aAAcmM,GAAYA,EAASnB,KACnC/K,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOjD,yBAAKM,MAAO,CACX6V,UAAW,gBCpVXoG,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACGrd,IAAXqf,QA+BFC,GAAU,SAAC,GAAwC,IAAvChY,EAAsC,EAAtCA,KAAKsnC,EAAiC,EAAjCA,cAAiC,EACvBl7B,oBAAS,GADc,mBAC7C8L,EAD6C,KACrCC,EADqC,OAEK/L,oBAAS,GAFd,mBAE7CgM,EAF6C,KAEvBC,EAFuB,OAGA1O,GAAe,GAAI,gBAHnB,mBAG1Bk+B,GAH0B,WAM5CC,EAAkB,uCAAG,WAAOhtC,GAAP,iBAAA0O,EAAA,sEACKq+B,EAAuB,CACnD3oC,WAAY,CACVE,aAAc,CACZtE,SAJmB,QACnBitC,EADmB,SAUoB,OAA3BA,EAAgB/rC,SA3CTyc,EA4CJ,iBA3C5BC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAyCnCw4B,EAAiBhoC,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACvDwsC,EAAcU,IAbc,iCAjCD,IAACvvB,IAiCA,OAAH,sDAmB1B,OACI,oCACA,kBAAC,KAAD,CAMAjG,KAAK,QAEL6D,WAAYrW,GAGV,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAKrB,kBAAC,GAAD,CACW6H,MAAM,mBACNoV,UAAU,iBACV9Y,IAAI,KACJnE,UAAU,yBAOrB,kBAAC,GAAD,CACW6H,MAAM,UACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAKrB,kBAAC,GAAD,CACW6H,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAIrB,kBAAC,GAAD,CACW6H,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAKrB,kBAAC,GAAD,CACW6H,MAAM,SACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBA+Bb,kBAAC,GAAD,CAEAA,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UAEZ,uBAAGrC,KAAK,MACL,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,eAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,SAQC,kBAAC,KAAD,CAEAC,UAAW,kBAAM8uB,EAAmBnxB,EAAO7b,KAC3CuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAElD,0BACE1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAeRf,GAA2B,kBAAC,GAAD,CAC5BD,WAAYA,EACZD,QAASA,EACT9S,SAAUgT,EACVivB,WAAYrnC,EACZsnC,cAAeA,MA6HJp7B,iBA7GM,SAAC,GAAqB,EAApB2C,QAAqB,IAAD,EAEJzC,mBAAS,IAFL,mBAEhCi7B,EAFgC,KAErBC,EAFqB,OAIM39B,GAAe,GAAI,cAJzB,mBAIhCs+B,EAJgC,KAInBzM,EAJmB,KAOvClyB,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACKgyB,EAAsB,IAD3B,OACXC,EADW,OAGjB6L,EAAc7L,GAHG,2CAAH,qDAKhByM,KACC,IAdqC,MAoBgB97B,oBAAS,GApBzB,mBAoBlCwN,EApBkC,KAoBZC,EApBY,KAsBzCta,QAAQC,IAAI,cAAcyoC,GAa3B,OACC,oCAIE,yBAAKzuC,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,WAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,mBACZ8uB,SAAU,SAAA5vB,GAAK,OA7BF,SAACA,GACpB,GAAGivC,EAAYjoC,KAAKrD,OAAS,EAAG,CAC9B,IAAMmyB,EAAamZ,EAAYjoC,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBAC1F+0B,EAAcxY,IA0BS/U,CAAa/gB,OAI9B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJtC,YAWA,yBAAKrgB,UAAU,uCAWxB,yBAAKA,UAAU,uCACTyuC,EAAYl/B,MAAQs+B,EAAW1qC,OAAS,GAAK,kBAAC,GAAD,CAC9C2qC,cAAeA,EACftnC,KAAMqnC,IACLY,EAAYn/B,WAAa,kBAACmR,GAAD,MAEzBguB,EAAYl/B,QAAUs+B,EAAW1qC,OAAS,IACjD,kBAAC,GAAD,CAAO0E,MAAM,sBAOd4mC,EAAYl/B,MACT,kBAAC,GAAD,CACM6Q,sBAAuBA,EACvBC,yBAA0BA,EAC1BwtB,WAAYY,EAAYjoC,KACxBsnC,cAAeA,Q,oBC3NVa,GAvEO,SAACh8B,GAAkB,IAAD,EACZC,mBAAS,IADG,mBAC7BnL,EAD6B,KACvBmnC,EADuB,OAEFh8B,mBAAS,IAFP,mBAE7Bi8B,EAF6B,KAElBC,EAFkB,KAoBpC,OACI,oCACI,yBAAK1uC,MAAO,CACR2S,MAAO,UAEP,wBAAI/S,UAAU,mBAAd,aAIA,kBAAC,KAAD,CACII,MAAO,CACH4U,OAAQ,OACR3U,aAAc,MACd8uB,YAAa,kBACbpc,MAAO,QAEXM,KAAK,OAAO3T,SA/B5B,SAAsBF,GAClB,IAAMqvC,EAAY,UAAGrvC,GAAQqG,MAAM,KACnCipC,EAAaD,IA6BmCE,gBAAiB,CAAC,OAG1D,yBAAK3uC,MAAO,CACR6V,UAAW,UAEf,kBAAC,GAAD,CACI3W,MAAM,OACNE,MAAOiI,EACP3H,KAAK,OACLJ,SAAU,SAACsS,GACP48B,EAAQ58B,EAAEhE,OAAOxO,UAIzB,kBAAC,IAAD,CAEIY,MAAO,CACH6V,UAAW,QAEfhE,QA7CM,aA8CNtS,UAxCJ8H,IAASonC,EAAU,GA0Cf7uC,UAAU,iBARd,QAUS,0BAAMI,MAAO,CACd8V,WAAY,SADX,IAED,kBAAC84B,GAAA,EAAD,WC1ElB1qB,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC2nC,GAAA,EAAD,CAAkB7uC,MAAO,CAAE4V,MAAO,yBAK1CtF,GAAgB,CAClB5Q,KAAM,GACN8G,YAAa,IA2GFsoC,GAnGW,SAACv8B,GAAkB,IAAD,EACaxC,GAAe,GAAI,gBADhC,mBACjCg/B,EADiC,KACdC,EADc,KAIlCt+B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOo/B,EAAwB,CAC5C1pC,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,eATX,QACXy0B,EADW,SAcqB,OAArBA,EAAU74B,QA9CFyc,OA+CrB8B,EA9CR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,wBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA8CvChF,EAAQmY,aAGR7E,KAIJtT,EAAQC,eAAc,GAzBL,iCAhCO,IAACgO,IAgCR,OAAH,wDAqClB,OACI,kBAAC,IAAD,CACI7N,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IAEpDK,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OAEAS,GAJH,EAGGV,aAHH,EAIGU,QAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC3S,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgB09B,EAAkBhgC,MAAlB,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgB09B,EAAkBhgC,MAAlB,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgB09B,EAAkBhgC,MAAlB,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgB09B,EAAkBhgC,MAAlB,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,uBChIxCkP,GAAYC,KAAZD,QA8BOwuB,GAtBH,SAAC18B,GACT,OACI,oCACI,yBAAK3S,UAAU,qBAEX,kBAAC,KAAD,CAAM4kB,iBAAiB,KACnB,kBAAC,GAAD,CAASC,IAAI,kBAAkB1gB,IAAI,KAC/B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAS0gB,IAAI,qBAAqB1gB,IAAI,KAClC,kBAAC,GAAD,WC7BTkrC,M,UC8BTj/B,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB,UAAa,GACb,SAAY,GACZ,KAAQ,GACR,WAAa,GACb,KAAO,GACP,aAAe,GACf,aAAgB,IA+QL4+B,GAvQO,SAAC,GAAiB,qBAEmCn/B,GAAe,GAAI,yBAFvD,gCAG8BA,GAAe,GAAI,uBAHjD,mBAG5Bo/B,EAH4B,KAGHC,EAHG,OAKU58B,oBAAS,GALnB,mBAK5B3N,EAL4B,KAKZwqC,EALY,KAQ7B3+B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOw/B,EAA8B,CAClDztC,KAAM,CACF,UAAagP,EAAO2+B,UAAU1mB,OAC9B,SAAYjY,EAAO4+B,SAAS3mB,OAC5B,KAAQjY,EAAO6+B,KAAK5mB,OACpB,WAAajY,EAAO8+B,WAAW7mB,OAC/B,KAAOjY,EAAO++B,KAAK9mB,OACnB,eAAkB/jB,EAClB,aAAe8L,EAAOg/B,aAAa/mB,OACnC,aAAgBjY,EAAOi/B,aAAahnB,UAV3B,QACXqS,EADW,SAeqB,OAArBA,EAAU74B,QAxDFyc,EAyDG,8BAxDhCC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAwDvCsO,GAAsB,6DAI1BtT,EAAQC,eAAc,GAvBL,iCAzCO,IAACgO,IAyCR,OAAH,wDAsCZgxB,EAA4B,SAACj+B,GAC/By9B,EAAmBz9B,EAAEhE,OAAOqb,UAKhC,OACI,kBAAC,IAAD,CACIjY,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCAEsB,yBAAKzR,MAAO,CAC1C6U,QAAS,OACTC,eAAgB,kBAEhB,yBAAK9U,MAAO,CACX2S,MAAO,QAEN,kBAAC7T,EAAD,CACsCI,MAAM,aACNE,MAAOuR,EAAO2+B,UACd5vC,KAAK,YACLF,QAAU8R,EAAQg+B,WAAal+B,EAAOk+B,YAChCj+B,GAAgB89B,EAAwBpgC,MAAxB,gBAEtBtP,YAAc6R,EAAQg+B,WAAal+B,EAAOk+B,YACpCj+B,GAAgB89B,EAAwBpgC,MAAxB,gBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAI5D,yBAAKvR,MAAO,CACX2S,MAAO,QAGgC,kBAAC7T,EAAD,CACAI,MAAM,YACNE,MAAOuR,EAAO4+B,SACd7vC,KAAK,WACLF,QAAU8R,EAAQi+B,UAAYn+B,EAAOm+B,WAC/Bl+B,GAAgB89B,EAAwBpgC,MAAxB,eAEtBtP,YAAc6R,EAAQi+B,UAAYn+B,EAAOm+B,WACnCl+B,GAAgB89B,EAAwBpgC,MAAxB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAO5B,yBAAKvR,MAAO,CAC5C6U,QAAS,OACTC,eAAgB,kBAEhB,yBAAK9U,MAAO,CACX2S,MAAO,QAEN,kBAAC7T,EAAD,CACsCI,MAAM,OACNE,MAAOuR,EAAO++B,KACdhwC,KAAK,OACLF,QAAU8R,EAAQo+B,MAAQt+B,EAAOs+B,OAC3Br+B,GAAgB89B,EAAwBpgC,MAAxB,WAEtBtP,YAAc6R,EAAQo+B,MAAQt+B,EAAOs+B,OAC/Br+B,GAAgB89B,EAAwBpgC,MAAxB,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,YAI5D,yBAAKvR,MAAO,CACX2S,MAAO,QAGgC,kBAAC7T,EAAD,CACAI,MAAM,aACNE,MAAOuR,EAAO8+B,WACd/vC,KAAK,aACLF,QAAU8R,EAAQm+B,YAAcr+B,EAAOq+B,aACjCp+B,GAAgB89B,EAAwBpgC,MAAxB,iBAEtBtP,YAAc6R,EAAQm+B,YAAcr+B,EAAOq+B,aACrCp+B,GAAgB89B,EAAwBpgC,MAAxB,iBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,mBAQ5B,yBAAKvR,MAAO,CAC5C6U,QAAS,OACTC,eAAgB,kBAEhB,yBAAK9U,MAAO,CACX2S,MAAO,QAEN,kBAAC7T,EAAD,CACsCI,MAAM,gBACNE,MAAOuR,EAAOg/B,aACdjwC,KAAK,eACLF,QAAU8R,EAAQq+B,cAAgBv+B,EAAOu+B,eACnCt+B,GAAgB89B,EAAwBpgC,MAAxB,mBAEtBtP,YAAc6R,EAAQq+B,cAAgBv+B,EAAOu+B,eACvCt+B,GAAgB89B,EAAwBpgC,MAAxB,mBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,oBAI5D,yBAAKvR,MAAO,CACX2S,MAAO,QAGgC,kBAAC7T,EAAD,CACAI,MAAM,gBACNE,MAAOuR,EAAOi/B,aACdlwC,KAAK,eACLF,QAAU8R,EAAQs+B,cAAgBx+B,EAAOw+B,eACnCv+B,GAAgB89B,EAAwBpgC,MAAxB,mBAEtBtP,YAAc6R,EAAQs+B,cAAgBx+B,EAAOw+B,eACvCv+B,GAAgB89B,EAAwBpgC,MAAxB,mBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,qBAO5B,yBAAKvR,MAAO,CAC3C2S,MAAO,QAEiC,kBAAC7T,EAAD,CACDI,MAAM,OACNE,MAAOuR,EAAO6+B,KACd9vC,KAAK,OACLP,KAAK,SACLK,QAAU8R,EAAQk+B,MAAQp+B,EAAOo+B,OAC3Bn+B,GAAgB89B,EAAwBpgC,MAAxB,WAEtBtP,YAAc6R,EAAQk+B,MAAQp+B,EAAOo+B,OAC/Bn+B,GAAgB89B,EAAwBpgC,MAAxB,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,YAM5B,kBAAC,KAAD,CAAUjS,SAAUuwC,GACZ,0BAAMjwC,UAAU,sBAAhB,mBAQpD,yBAAKI,MAAO,CACR6V,UAAU,UAEwB,yBAAK7V,MAAO,CACR6U,QAAQ,QACRkG,aAAa,OACblF,UAAU,SAGd,kBAAC,IAAD,CAEEhE,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASq9B,EAAwBjgC,UACjCtP,UAAU,8BAJZ,oCCtR9B6gB,IALiBxQ,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAIrDsQ,KAAZD,SAaFyD,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAyPpC+U,GAvOK,SAAC,GAAoC,IAAlCrM,EAAiC,EAAjCA,QAASwxB,EAAwB,EAAxBA,WAAwB,EAEM//B,GAAe,GAAI,8BAFzB,mBAE7CggC,EAF6C,KAE1BC,EAF0B,OAG8BjgC,GAAe,GAAI,iCAHjD,gCAMpByC,mBAAS,CACrCy9B,QAAQ,GACRtuC,KAAK,MAR2C,mBAM7C6J,EAN6C,KAMnC0kC,EANmC,OAW1B19B,mBAAS,CAC/By9B,QAAQ,GACRtuC,KAAK,KAb2C,mBAW7CwuC,EAX6C,KAWtCC,EAXsC,KAgB9C1/B,EAAY,uCAAG,4BAAAd,EAAA,sEACkCogC,EAA6B,CAC5EruC,KAAM,CACF,MAAS,cACT,SAAW,eACJ6J,GAEP,MAAQ,eACD2kC,MARE,QACXE,EADW,SAe2E,OAAhDA,EAAqCjuC,QA9DxDyc,OA+DrB8B,EA9DR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,gCACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA4DvCk6B,GAAW,IAGX5rB,KApBa,iCA/CO,IAACrF,IA+CR,OAAH,qDAyBlBnP,qBAAU,YACoB,uCAAG,sBAAAE,EAAA,sEACPogC,EAA6B,CAC3C1qC,WAAY,CACRE,aAAc,CACV8qC,UAAW,kBAJE,yDAAH,qDAW1BC,KAEF,IASF,OACI,kBAAC,KAAD,CACA59B,MAAO,OACP3S,MAAO,CACHokB,IAAK,QAET3c,MAAM,8BACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,KAClB4T,SAfiB,SAAC1S,GAClBk+B,GAAW,IAeXzwB,OAAO,SACPwK,cAAe,CACX/X,QAASi+B,EAAkB7gC,UAC3B4a,SAAU,UAGdvF,UAAW,CACP5S,OAAQ,OACRyE,QAAS,SAGhB,kBAAC,KAAD,CAAMoO,iBAAiB,KACvB,kBAAC,GAAD,CAASC,IAAI,WAAW1gB,IAAI,KAEzB,yBAAK/D,MAAO,CACR6U,QAAQ,SAGR,yBAAK7U,MAAO,CACR2S,MAAM,QAEV,kBAAC7T,EAAD,CACAI,MAAM,UACNE,MAAOoM,EAASykC,QAChBvwC,KAAK,UACLJ,SAAU,SAACsS,GACPs+B,EAAY,eACL1kC,EADI,CAEPykC,QAASr+B,EAAEhE,OAAOxO,YAK1B,wBAAIQ,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACAy0B,OAAQC,KACRluB,KAAMoF,EAAS7J,KACf4yB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpByb,EAAY,eACL1kC,EADI,CAEP7J,KAAMyE,MAGdkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAKtB,yBAAKr0B,MAAO,CACR2S,MAAM,MACN69B,UAAU,OACVj7B,WAAW,UACXO,WAAW,OACXM,QAAQ,OACRnW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNsW,SAAS,SADb,iFAKA,wBAAItW,MAAO,CACPoW,QAAQ,SAER,wBAAIpW,MAAO,CACPsW,SAAS,OACTyE,aAAa,OACbiqB,WAAW,IACXruB,WAAW,MACZ,uBAAG3W,MAAO,CACTC,aAAa,OACbkW,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACApW,MAAO,CACHsW,SAAS,OACT0uB,WAAW,EACXruB,WAAW,MAEd,uBACD3W,MAAO,CACHC,aAAa,OACbkW,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,4BAoBhB,kBAAC,GAAD,CAASqO,IAAI,QAAQ1gB,IAAI,KACzB,kBAACjF,EAAD,CACQI,MAAM,UACNE,MAAO+wC,EAAMF,QACbvwC,KAAK,UACLJ,SAAU,SAACsS,GACPw+B,EAAS,eACFD,EADC,CAEJF,QAASr+B,EAAEhE,OAAOxO,YAKtC,wBAAIQ,UAAU,mBAAd,QAKA,kBAAC,KAAD,CACAy0B,OAAQC,KACRluB,KAAM+pC,EAAMxuC,KACZ4yB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB2b,EAAS,eACFD,EADC,CAEJxuC,KAAMyE,MAGdkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,UC7PlB5T,IALiBxQ,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAIrDsQ,KAAZD,SAaFyD,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAyPpC+U,GAvOK,SAAC,GAAoC,IAAlCrM,EAAiC,EAAjCA,QAASwxB,EAAwB,EAAxBA,WAAwB,EAEM//B,GAAe,GAAI,8BAFzB,mBAE7CggC,EAF6C,KAE1BC,EAF0B,OAG8BjgC,GAAe,GAAI,iCAHjD,gCAMpByC,mBAAS,CACrCy9B,QAAQ,GACRtuC,KAAK,MAR2C,mBAM7C6J,EAN6C,KAMnC0kC,EANmC,OAW1B19B,mBAAS,CAC/By9B,QAAQ,GACRtuC,KAAK,KAb2C,mBAW7CwuC,EAX6C,KAWtCC,EAXsC,KAgB9C1/B,EAAY,uCAAG,4BAAAd,EAAA,sEACkCogC,EAA6B,CAC5EruC,KAAM,CACF,MAAS,cACT,SAAW,eACJ6J,GAEP,MAAQ,eACD2kC,MARE,QACXE,EADW,SAe2E,OAAhDA,EAAqCjuC,QA9DxDyc,OA+DrB8B,EA9DR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,gCACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA4DvCk6B,GAAW,IAGX5rB,KApBa,iCA/CO,IAACrF,IA+CR,OAAH,qDAyBlBnP,qBAAU,YACoB,uCAAG,sBAAAE,EAAA,sEACPogC,EAA6B,CAC3C1qC,WAAY,CACRE,aAAc,CACV8qC,UAAW,kBAJE,yDAAH,qDAW1BC,KAEF,IASF,OACI,kBAAC,KAAD,CACA59B,MAAO,OACP3S,MAAO,CACHokB,IAAK,QAET3c,MAAM,wBACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,KAClB4T,SAfiB,SAAC1S,GAClBk+B,GAAW,IAeXzwB,OAAO,SACPwK,cAAe,CACX/X,QAASi+B,EAAkB7gC,UAC3B4a,SAAU,UAGdvF,UAAW,CACP5S,OAAQ,OACRyE,QAAS,SAGhB,kBAAC,KAAD,CAAMoO,iBAAiB,KACvB,kBAAC,GAAD,CAASC,IAAI,WAAW1gB,IAAI,KAEzB,yBAAK/D,MAAO,CACR6U,QAAQ,SAGR,yBAAK7U,MAAO,CACR2S,MAAM,QAEV,kBAAC7T,EAAD,CACAI,MAAM,UACNE,MAAOoM,EAASykC,QAChBvwC,KAAK,UACLJ,SAAU,SAACsS,GACPs+B,EAAY,eACL1kC,EADI,CAEPykC,QAASr+B,EAAEhE,OAAOxO,YAK1B,wBAAIQ,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACAy0B,OAAQC,KACRluB,KAAMoF,EAAS7J,KACf4yB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpByb,EAAY,eACL1kC,EADI,CAEP7J,KAAMyE,MAGdkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAKtB,yBAAKr0B,MAAO,CACR2S,MAAM,MACN69B,UAAU,OACVj7B,WAAW,UACXO,WAAW,OACXM,QAAQ,OACRnW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNsW,SAAS,SADb,iFAKA,wBAAItW,MAAO,CACPoW,QAAQ,SAER,wBAAIpW,MAAO,CACPsW,SAAS,OACTyE,aAAa,OACbiqB,WAAW,IACXruB,WAAW,MACZ,uBAAG3W,MAAO,CACTC,aAAa,OACbkW,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACApW,MAAO,CACHsW,SAAS,OACT0uB,WAAW,EACXruB,WAAW,MAEd,uBACD3W,MAAO,CACHC,aAAa,OACbkW,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,4BAoBhB,kBAAC,GAAD,CAASqO,IAAI,QAAQ1gB,IAAI,KACzB,kBAACjF,EAAD,CACQI,MAAM,UACNE,MAAO+wC,EAAMF,QACbvwC,KAAK,UACLJ,SAAU,SAACsS,GACPw+B,EAAS,eACFD,EADC,CAEJF,QAASr+B,EAAEhE,OAAOxO,YAKtC,wBAAIQ,UAAU,mBAAd,QAKA,kBAAC,KAAD,CACAy0B,OAAQC,KACRluB,KAAM+pC,EAAMxuC,KACZ4yB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB2b,EAAS,eACFD,EADC,CAEJxuC,KAAMyE,MAGdkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,UC7PlB5T,IALiBxQ,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAIrDsQ,KAAZD,SAaFyD,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAyPpC+U,GAvOK,SAAC,GAAoC,IAAlCrM,EAAiC,EAAjCA,QAASwxB,EAAwB,EAAxBA,WAAwB,EAEM//B,GAAe,GAAI,8BAFzB,mBAE7CggC,EAF6C,KAE1BC,EAF0B,OAG8BjgC,GAAe,GAAI,iCAHjD,gCAMpByC,mBAAS,CACrCy9B,QAAQ,GACRtuC,KAAK,MAR2C,mBAM7C6J,EAN6C,KAMnC0kC,EANmC,OAW1B19B,mBAAS,CAC/By9B,QAAQ,GACRtuC,KAAK,KAb2C,mBAW7CwuC,EAX6C,KAWtCC,EAXsC,KAgB9C1/B,EAAY,uCAAG,4BAAAd,EAAA,sEACkCogC,EAA6B,CAC5EruC,KAAM,CACF,MAAS,QACT,SAAW,eACJ6J,GAEP,MAAQ,eACD2kC,MARE,QACXE,EADW,SAe2E,OAAhDA,EAAqCjuC,QA9DxDyc,OA+DrB8B,EA9DR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,gCACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA4DvCk6B,GAAW,IAGX5rB,KApBa,iCA/CO,IAACrF,IA+CR,OAAH,qDAyBlBnP,qBAAU,YACoB,uCAAG,sBAAAE,EAAA,sEACPogC,EAA6B,CAC3C1qC,WAAY,CACRE,aAAc,CACV8qC,UAAW,YAJE,yDAAH,qDAW1BC,KAEF,IASF,OACI,kBAAC,KAAD,CACA59B,MAAO,OACP3S,MAAO,CACHokB,IAAK,QAET3c,MAAM,uBACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,KAClB4T,SAfiB,SAAC1S,GAClBk+B,GAAW,IAeXzwB,OAAO,SACPwK,cAAe,CACX/X,QAASi+B,EAAkB7gC,UAC3B4a,SAAU,UAGdvF,UAAW,CACP5S,OAAQ,OACRyE,QAAS,SAGhB,kBAAC,KAAD,CAAMoO,iBAAiB,KACvB,kBAAC,GAAD,CAASC,IAAI,WAAW1gB,IAAI,KAEzB,yBAAK/D,MAAO,CACR6U,QAAQ,SAGR,yBAAK7U,MAAO,CACR2S,MAAM,QAEV,kBAAC7T,EAAD,CACAI,MAAM,UACNE,MAAOoM,EAASykC,QAChBvwC,KAAK,UACLJ,SAAU,SAACsS,GACPs+B,EAAY,eACL1kC,EADI,CAEPykC,QAASr+B,EAAEhE,OAAOxO,YAK1B,wBAAIQ,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACAy0B,OAAQC,KACRluB,KAAMoF,EAAS7J,KACf4yB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpByb,EAAY,eACL1kC,EADI,CAEP7J,KAAMyE,MAGdkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAKtB,yBAAKr0B,MAAO,CACR2S,MAAM,MACN69B,UAAU,OACVj7B,WAAW,UACXO,WAAW,OACXM,QAAQ,OACRnW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNsW,SAAS,SADb,iFAKA,wBAAItW,MAAO,CACPoW,QAAQ,SAER,wBAAIpW,MAAO,CACPsW,SAAS,OACTyE,aAAa,OACbiqB,WAAW,IACXruB,WAAW,MACZ,uBAAG3W,MAAO,CACTC,aAAa,OACbkW,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACApW,MAAO,CACHsW,SAAS,OACT0uB,WAAW,EACXruB,WAAW,MAEd,uBACD3W,MAAO,CACHC,aAAa,OACbkW,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,4BAoBhB,kBAAC,GAAD,CAASqO,IAAI,QAAQ1gB,IAAI,KACzB,kBAACjF,EAAD,CACQI,MAAM,UACNE,MAAO+wC,EAAMF,QACbvwC,KAAK,UACLJ,SAAU,SAACsS,GACPw+B,EAAS,eACFD,EADC,CAEJF,QAASr+B,EAAEhE,OAAOxO,YAKtC,wBAAIQ,UAAU,mBAAd,QAKA,kBAAC,KAAD,CACAy0B,OAAQC,KACRluB,KAAM+pC,EAAMxuC,KACZ4yB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB2b,EAAS,eACFD,EADC,CAEJxuC,KAAMyE,MAGdkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,UClPpBnQ,IAfmBjU,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAc3C,SAACyO,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,0BA+TpC66B,GAnTY,SAAC,GAAiB,qBAEsC1gC,GAAe,GAAI,6BAF1D,gCAG0CA,GAAe,GAAI,uBAH7D,mBAGjC2gC,EAHiC,KAGKC,EAHL,OAKSn+B,oBAAS,GALlB,mBAKjCo+B,EALiC,KAKdC,EALc,OAMer+B,oBAAS,GANxB,mBAMjCs+B,EANiC,KAMXC,EANW,OAOHv+B,oBAAS,GAPN,mBAOjCw+B,EAPiC,KAOpBC,EAPoB,OAQSz+B,oBAAS,GARlB,mBAQjC0+B,EARiC,KAQdC,EARc,OASG3+B,oBAAS,GATZ,mBASjC4+B,EATiC,KASjBC,EATiB,OAUiB7+B,oBAAS,GAV1B,mBAUjC8+B,EAViC,KAUXC,EAVW,OAYQ/+B,oBAAS,GAZjB,mBAYjCg/B,EAZiC,KAYfC,EAZe,OAaJj/B,oBAAS,GAbL,mBAajCk/B,EAbiC,KAarBC,EAbqB,OAcQn/B,oBAAS,GAdjB,mBAcjCo/B,EAdiC,KAcfC,EAde,KAiBlCC,EAAqB,uCAAG,sBAAAliC,EAAA,sEACO+gC,EAAkC,CAC/DhvC,KAAM,CACF,iBAAoBivC,EACpB,oBAAuBE,EACvB,WAAcE,EACd,cAAiBE,EACjB,iBAAoBE,EACpB,oBAAuBE,KARL,cAatBrW,WAAkC,OAArBA,UAAU74B,QAvDFyc,EAwDG,oCAvDhCC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAuDvCsO,GAAsB,mEAjBA,iCA1CF,IAACrF,IA0CC,OAAH,qDAgC3B,OACI,oCACwB,yBAAK7e,MAAO,CACR6U,QAAQ,OACRqe,cAAc,WAElB,yBAAKlzB,MAAO,IAGR,yBAAKA,MAAO,CACI6U,QAAQ,OACRE,WAAW,WAEf,yBAAK/U,MAAO,CACRgW,YAAY,OACZH,UAAU,SAEd,wBAAIjW,UAAU,sBAAd,iBAIC,kBAAC,IAAD,CACAA,UAAU,oBACPiS,QAAS,kBAAM4/B,GAAoB,IACnCtyC,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAJT,uBASP,yBAAKnf,MAAO,CACN6V,UAAU,UAElB,yBAAK7V,MAAO,CACJ6U,QAAS,OACTgB,UAAU,SAE9C,yBAAK7V,MAAO,CACgCgW,YAAY,SAIjB,kBAAC,KAAD,CACAiT,QAAS2nB,EACT7mB,eAAgB6mB,EACftxC,SAAU,SAACsS,GAAD,OAAOi/B,EAAoBj/B,EAAEhE,OAAOqb,WAE9C,0BAAMrpB,UAAU,2BAAhB,WAKxC,yBAAKI,MAAO,IAGwB,kBAAC,KAAD,CACEipB,QAAS6nB,EACT/mB,eAAgB+mB,EAClBxxC,SAAU,SAACsS,GAAD,OAAOm/B,EAAuBn/B,EAAEhE,OAAOqb,WAE7C,0BAAMrpB,UAAU,2BAAhB,gBAWhB,6BAGA,yBAAKI,MAAO,CACI6U,QAAQ,OACRE,WAAW,SACnBc,UAAU,SAEN,yBAAK7V,MAAO,CACRgW,YAAY,OACZH,UAAU,SAEd,wBAAIjW,UAAU,sBAAd,UAIC,kBAAC,IAAD,CACAA,UAAU,oBACPiS,QAAS,kBAAM8/B,GAAc,IAC7BxyC,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAJT,uBAWb,yBAAKnf,MAAO,CACA6V,UAAU,SAGlB,yBAAK7V,MAAO,CACJ6U,QAAS,OACTgB,UAAU,SAG9C,yBAAK7V,MAAO,CACgCgW,YAAY,SAIjB,kBAAC,KAAD,CACGiT,QAAS+nB,EACTjnB,eAAgBinB,EAClB1xC,SAAU,SAACsS,GAAD,OAAOq/B,EAAcr/B,EAAEhE,OAAOqb,WAExC,0BAAMrpB,UAAU,2BAAhB,WAKxC,yBAAKI,MAAO,IAGwB,kBAAC,KAAD,CACEipB,QAASmoB,EACTrnB,eAAgBqnB,EAClB9xC,SAAU,SAACsS,GAAD,OAAOy/B,EAAiBz/B,EAAEhE,OAAOqb,WAEvC,0BAAMrpB,UAAU,2BAAhB,gBAaJ,6BACA,yBAAKI,MAAO,CACR6U,QAAQ,OACRE,WAAW,SACXc,UAAU,SAEd,yBAAK7V,MAAO,CACRgW,YAAY,OACZH,UAAU,SAEnB,wBAAIjW,UAAU,sBAAd,iBAIM,kBAAC,IAAD,CACAA,UAAU,oBACPiS,QAAS,kBAAMggC,GAAoB,IACnC1yC,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAJT,uBASL,yBAAKnf,MAAO,CACR6V,UAAU,UAElB,yBAAK7V,MAAO,CACJ6U,QAAS,OACTgB,UAAU,SAE9C,yBAAK7V,MAAO,CACgCgW,YAAY,SAIjB,kBAAC,KAAD,CACCiT,QAASioB,EACTnnB,eAAgBmnB,EAChB5xC,SAAU,SAACsS,GAAD,OAAOu/B,EAAoBv/B,EAAEhE,OAAOqb,WAE9C,0BAAMrpB,UAAU,2BAAhB,WAKxC,yBAAKI,MAAO,IAGwB,kBAAC,KAAD,CACCipB,QAASqoB,EACTvnB,eAAgBunB,EACjBhyC,SAAU,SAACsS,GAAD,OAAO2/B,EAAyB3/B,EAAEhE,OAAOqb,WAE/C,0BAAMrpB,UAAU,2BAAhB,cAOJ,yBAAKI,MAAO,QAexD,yBAAKA,MAAO,CACgC6V,UAAU,UAGtD,kBAAC,IAAD,CAEwChE,QAAS,SAACD,GAAD,OAAYkgC,KACrBhgC,QAAS4+B,EAAqCxhC,UAC9CtP,UAAU,8BAJlD,mCAUwC,yBAAKI,MAAO,CACR6V,UAAU,SAKlD,kBAACk8B,GAAD,CACAzzB,QAASkzB,EACT1B,WAAY2B,IAGpB,kBAACO,GAAD,CACQ1zB,QAASszB,EACT9B,WAAY+B,IAIZ,kBAACI,GAAD,CACA3zB,QAASozB,EACT5B,WAAY6B,MC3Ud3hC,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB,UAAa,GACb,QAAW,IA4KA4hC,GApKY,SAAC,GAAiB,qBAEoBniC,GAAe,GAAI,mBAFxC,mBAEjCoiC,EAFiC,KAETC,EAFS,OAIK5/B,oBAAS,GAJd,gCAKjBA,mBAAS,KALQ,mBAKjC6/B,EALiC,KAK5BC,EAL4B,KAQlC5hC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOwiC,EAA2B,CAC/CzwC,KAAM,CACF,UAAagP,EAAO89B,UAAU7lB,OAC9B,QAAWjY,EAAOs/B,QAAQrnB,UAJjB,QACXqS,EADW,SAUqB,OAArBA,EAAU74B,QA9CFyc,EA+CG,cA9ChCC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BA8CvCsO,GAAsB,6CAI1BtT,EAAQC,eAAc,GAlBL,iCApCO,IAACgO,IAoCR,OAAH,wDAuClB,OACI,kBAAC,IAAD,CACI7N,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCAEsB,yBAAKzR,MAAO,CAC1C6U,QAAS,OACTC,eAAgB,kBAEhB,yBAAK9U,MAAO,CACX2S,MAAO,QAEN,kBAAC7T,EAAD,CACsCI,MAAM,KACNE,MAAOuR,EAAO89B,UACd/uC,KAAK,YACLF,QAAU8R,EAAQm9B,WAAar9B,EAAOq9B,YAChCp9B,GAAgB8gC,EAAuBpjC,MAAvB,gBAEtBtP,YAAc6R,EAAQm9B,WAAar9B,EAAOq9B,YACpCp9B,GAAgB8gC,EAAuBpjC,MAAvB,gBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAI5D,yBAAKvR,MAAO,CACX2S,MAAO,QAGgC,kBAAC7T,EAAD,CACAI,MAAM,UACNE,MAAOuR,EAAOs/B,QACdvwC,KAAK,UACLF,QAAU8R,EAAQ2+B,SAAW7+B,EAAO6+B,UAC9B5+B,GAAgB8gC,EAAuBpjC,MAAvB,cAEtBtP,YAAc6R,EAAQ2+B,SAAW7+B,EAAO6+B,UAClC5+B,GAAgB8gC,EAAuBpjC,MAAvB,cACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,gBAS5D,wBAAI3R,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACAy0B,OAAQC,KACRluB,KAAMisC,EACN9d,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB6d,EAAQlsC,IAEZkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,MAKK,yBAAKr0B,MAAO,CACR6V,UAAU,UAEX,kBAAC,IAAD,CAEEhE,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASqgC,EAAuBjjC,UAChCtP,UAAU,8BAJZ,QAUH,yBAAKI,MAAO,CACR6V,UAAU,eCvFtC08B,GArID,SAAChgC,GACX,OACI,yBAAK3S,UAAU,0BACX,yBAAKA,UAAU,gCACX,+CAGA,4BACC,iWAI8DmD,OAAS,IAAM,yWAIbyvC,UAAU,EAAG,KAAO,MARpF,kXAgBD,uCAIJ,yBAAK5yC,UAAU,gCACX,+CAGA,4BACC,iWAI8DmD,OAAS,IAAM,yWAIbyvC,UAAU,EAAG,KAAO,MARpF,kXAgBD,uCAIJ,yBAAK5yC,UAAU,gCACX,+CAGA,4BACC,iWAI8DmD,OAAS,IAAM,yWAIbyvC,UAAU,EAAG,KAAO,MARpF,kXAgBD,uCAIJ,yBAAK5yC,UAAU,gCACX,+CAGA,4BACC,iWAI8DmD,OAAS,IAAM,yWAIbyvC,UAAU,EAAG,KAAO,MARpF,kXAgBD,uCAIJ,yBAAK5yC,UAAU,gCACX,+CAGA,4BACC,iWAI8DmD,OAAS,IAAM,yWAIbyvC,UAAU,EAAG,KAAO,MARpF,kXAgBD,yC,UCnGR/xB,GAAYC,KAAZD,QAoEOwuB,GA5DH,SAAC18B,GACT,OACI,oCACI,yBAAK3S,UAAU,qBAEX,kBAAC,KAAD,CAAM4kB,iBAAiB,KACvB,kBAAC,GAAD,CACIC,IACI,8BACA,kBAACmmB,GAAA,EAAD,MADA,SAKX7mC,IAAI,KACO,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAEA0gB,IACI,8BACA,kBAACguB,GAAA,EAAD,MADA,iBAIF1uC,IAAI,KACF,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CACC0gB,IACG,8BACA,kBAAClQ,GAAA,EAAD,MADA,kBAMLxQ,IAAI,KACC,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAEA0gB,IACI,8BACA,kBAAClQ,GAAA,EAAD,MADA,wBAKHxQ,IAAI,KACD,kBAAC,GAAD,WC2DT2uC,IArHI1gC,KAAXC,OASiB,SAACM,GAEtB,IAAM0C,EAAUC,eAFuB,EAIwBnF,GAAe,GAAI,sBAJ3C,mBAIhCoF,EAJgC,KAIPC,EAJO,KAavC1F,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACjBwF,EAA4B,IADX,2CAAH,qDAIxBC,KACD,IAKH1P,QAAQC,IAAI,0BAA0BuP,GAGtC,IAAMG,EAAW,CACb9J,SAAU,kBAACgJ,GAAA,EAAD,MACVnI,MAAO,kBAAC0H,GAAA,EAAD,OAmEX,OACE,oCACE,yBAAKnU,UAAU,oBACf,wBAAIA,UAAU,6BAAd,gBAjEIuV,EAAwBjG,UACxB,yBAAKlP,MAAO,CACR4U,OAAO,OACPC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXc,UAAU,UAEV,kBAAC,KAAD,OAMJV,EAAwBhG,MAAQgG,EAAwB/O,OAAS+O,EAAwB/O,KAAK,GAE1F,yBAAKpG,MAAO,CACR4U,OAAO,OACPC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXc,UAAU,UAET,kBAAC,GAAD,CAAOpO,MAAM,2BAOtB,yBAAK7H,UAAU,iCACFuV,EAAwBhG,MACtBgG,EAAwB/O,KAAK,IAC7B+O,EAAwB/O,KAAKpF,KAAI,SAACC,EAAK+B,GAC1C,OACA,yBACE6O,QAAS,kBAAMoD,EAAQU,KAAR,iBAAuB1U,EAAK9B,KAA5B,YAAoC8B,EAAKC,MACxDtB,UAAU,uCACR,0BAAMA,UAAU,4CACb0V,EAASrU,EAAI,OAEhB,yBAAKrB,UAAU,4CACX,4BACKqB,EAAKmG,SAEV,4BACKnG,EAAKoG,MAEV,4BACA,kBAAC,KAAD,KACKpG,EAAKsG,kB,oBCpD3BorC,GAhEQ,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,YAAYC,EAAiD,EAAjDA,eAAeC,EAAkC,EAAlCA,aAAkC,IAArBzzC,oBAAqB,MAAR,GAAQ,IAE7CmT,oBAAS,GAFoC,mBAE3EugC,EAF2E,KAE/DC,EAF+D,OAGnDxgC,oBAAS,GAH0C,mBAG3EygC,EAH2E,KAGlEC,EAHkE,KAoBlF,OAFEvtC,QAAQC,IAAI,eAAevG,GAGzB,oCACA,yBACAW,MAAO,CACHolC,aAAa,iBACbrqB,aAAa,QAEhBnb,UAAU,6BACH,kBAAC,KAAD,CACII,MAAO,CACH+a,aAAa,QAEjBo4B,cAAeJ,EACfzzC,SAtBW,SAAAsS,GACvBihC,EAAejhC,EAAEhE,OAAOqb,QAAU6pB,EAAe,IACjDE,GAAe,GACfE,EAAYthC,EAAEhE,OAAOqb,UAoBTA,QAASgqB,GANb,gBAWR,kBAAC,KAASlP,MAAV,CACA/jC,MAAO,CAAE2S,MAAO,QACfvT,MAAOwzC,EACPvzC,aAAcA,EACdC,SAtCY,SAAAszC,GACbC,EAAeD,GACfI,IAAiBJ,EAAY7vC,QAAU6vC,EAAY7vC,OAAS+vC,EAAa/vC,QACzEmwC,EAAYN,EAAY7vC,SAAW+vC,EAAa/vC,UAoClD,kBAAC,KAAD,KACC+vC,EAAa9xC,KAAI,SAAAoyC,GACd,OACE,kBAAC,KAAD,CACApzC,MAAO,CACH+a,aAAa,QAEjBs4B,KAAM,GACN,kBAAC,KAAD,CAAUj0C,MAAOg0C,GACZA,WChDXpjC,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAchE8T,GAAwB,SAACrF,GAC9BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAKvCk9B,GAAe,CACjB,eAAgB,gBAChB,cAAe,eACf,WAAY,YACZ,UAAW,WACX,UAAW,WACX,YACA,YA2IWzoB,GA9HG,SAAC,GAAmE,IAAjE/jB,EAAgE,EAAhEA,SAAUiY,EAAsD,EAAtDA,WAAYD,EAA0C,EAA1CA,QAASoP,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAChC5d,GAAe,GAAI,mBADa,mBAC7E6d,EAD6E,KAC7DrD,EAD6D,OAEnC/X,mBAASlM,EAASgtC,MAAQhtC,EAASgtC,KAAKvwC,OAA/B,YAA4CuD,EAASgtC,MAAO,IAFlC,mBAE7EC,EAF6E,KAE3DC,EAF2D,KAK9E9iC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEACO2a,EAA0B,CACpDjlB,WAAY,CACXE,aAAc,CACbtE,GAAIyP,EAAOzP,KAGbS,KAAM,CACLjC,KAAMiR,EAAOjR,KACb+zC,OAAQF,KATU,QACdvnB,EADc,SAcwB,OAAxBA,EAAa5pB,QAzDFyc,OA0D9B8B,EAzDF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA4DpC5S,EAJgB,WACrB,OAAO0qB,EAAQ1sB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQmF,EAASpF,IAGxCupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,EAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuC6oB,IACrD6B,EAX2C,sBAWvBH,EAAQrqB,MAAM,EAAGL,IAXM,CAWEE,GAXF,YAWkBwqB,EAAQrqB,MAAML,EAAQ,KACzF2qB,EAAWE,IAIX3J,KAGDtT,EAAQC,eAAc,GACtB0N,GAAW,GAlCS,iCA3CU,IAACM,IA2CX,OAAH,wDAsCZqK,EAAe,SAACtX,GACrB2M,GAAW,IAINzN,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GAMtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPhK,KAGL,gBACA6K,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACChK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBuc,EAAe7e,MAAf,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBuc,EAAe7e,MAAf,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAKlB,wBAAI3R,UAAU,mBAAd,uBAIA,kBAAC,GAAD,CACAP,aAAciH,EAASgtC,KACFR,aAAcA,GACdF,YAAaW,EACbV,eAAgBW,UC1ItCxjC,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE7F,MAAO0F,MACNjR,SAAS,sCACTw9B,IAAI,GAAI,uCACVnsB,SAAUJ,MACR/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,4CACVsjC,qBAAsBzjC,MACnB/Q,MAAM,oBACNF,WACAoR,IAAI,EAAG,oDACPujC,MAAM,CAAC1jC,IAAQ,YAAa,MAAO,0BAclCiU,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACN6K,MAAO,GACPD,MAAO,GACP+F,SAAU,GACVqjC,qBAAsB,GACtBD,OAAQ,IAINX,GAAe,CACjB,eAAgB,gBAChB,cAAe,eACf,WAAY,YACZ,UAAW,WACX,UAAW,WACX,YACA,YAgRWc,GApQU,SAAC,GAAqF,IAAnF5zB,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0ByN,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAEjE5d,GAAe,GAAI,qBAF8C,mBAEnGgrB,EAFmG,KAEtFC,EAFsF,OAG1ExoB,oBAAS,GAHiE,mBAGnGyO,EAHmG,KAGzFJ,EAHyF,OAIlErO,oBAAS,GAJyD,mBAInG+Y,EAJmG,KAIrFC,EAJqF,OAKzDhZ,mBAAS,IALgD,mBAKnG+gC,EALmG,KAKjFC,EALiF,KAQpG9iC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOorB,EAAkB,CACtCr5B,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBte,MAAOqG,EAAOrG,MAAMse,OACpBre,MAAOoG,EAAOpG,MACd8F,SAAUM,EAAON,SACjBwjC,UAAWljC,EAAO+iC,qBAClBD,OAAQF,KARC,QACXtY,EADW,SAcqB,OAArBA,EAAU74B,QAGvBurB,EAAW,GAAD,mBAAKD,GAAL,CAAc,CACpBxsB,GAAI+5B,EAAS,IAAU,GACvBl3B,IAAKk3B,EAAS,IAAU,GACxBv7B,KAAMu7B,EAAS,MAAY,OAE/BrqB,EAAQmY,YACR9I,GAAyB,IAGzBiE,KAIJtT,EAAQC,eAAc,GA9BL,2CAAH,wDAmClBnB,qBAAU,WACZ,IAAKqrB,EAAW,UAAe,CAC9B,IAAMhsB,EAAQgsB,EAAW,MACzB,GAAIhsB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,EACxDgM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAQV5L,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACpCI,OAAOwN,OAAO5B,EAAK,OACnB,IACG8T,SAAQ,SAACoR,EAAKC,GACpB,GAAmB,kBAARD,EACV/P,GAAsB+P,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACvBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACZ/P,GAAsB+P,UApHE,IAACpV,GA8H7Bkc,EAAW,WACZ53B,OAAOiC,KAAK21B,EAAY30B,MAAMrD,OAAS,GAED,OAAlCg4B,EAAW,KAAX,SAjI0Blc,EAkIL,6BAjIxBC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,iCAwI5C,CAACmlB,IAIJ,IAAM7R,EAAe,SAACtX,GAClBqO,GAAyB,IAIvBnP,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOpG,OAAUoG,EAAON,UAAaM,EAAO+iC,sBAAyB3iC,IAO9F,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAET3c,MAAM,qBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgB0pB,EAAYhsB,MAAZ,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgB0pB,EAAYhsB,MAAZ,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAKxB,kBAACzS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC5B8G,GAAgB0pB,EAAYhsB,MAAZ,YAEtBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QAChC8G,GAAgB0pB,EAAYhsB,MAAZ,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,YAKxB,kBAACzS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC5B+G,GAAgB0pB,EAAYhsB,MAAZ,YAEtBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QAChC+G,GAAgB0pB,EAAYhsB,MAAZ,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,YAKzB,kBAACzS,EAAD,CACKI,MAAM,WACNE,MAAOuR,EAAON,SACd3Q,KAAK,WACLP,KAAK,WACLK,QAAU8R,EAAQjB,UAAYe,EAAOf,WAC/BgB,GAAgB0pB,EAAYhsB,MAAZ,eAEtBtP,YAAc6R,EAAQjB,UAAYe,EAAOf,WACnCgB,GAAgB0pB,EAAYhsB,MAAZ,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,eAKxB,kBAACzS,EAAD,CACII,MAAM,mBACNE,MAAOuR,EAAO+iC,qBACdh0C,KAAK,uBACLP,KAAK,WACLK,QAAU8R,EAAQoiC,sBAAwBtiC,EAAOsiC,uBAC3CriC,GAAgB0pB,EAAYhsB,MAAZ,2BAEtBtP,YAAc6R,EAAQoiC,sBAAwBtiC,EAAOsiC,uBAC/CriC,GAAgB0pB,EAAYhsB,MAAZ,gBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,2BAIpB,wBAAI3R,UAAU,mBAAd,uBAIJ,kBAAC,GAAD,CACAkzC,aAAcA,GACdF,YAAaW,EACbV,eAAgBW,KAMpB,kBAAC,GAAD,CACIj1B,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SChT5CH,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BA0BrCqG,IAXiBhM,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAUtC8L,KAAxBD,QACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAA0B,IAAxBhY,EAAuB,EAAvBA,KAAMunB,EAAiB,EAAjBA,WAAiB,EACXnb,oBAAS,GADE,mBAClC8L,EADkC,KACzBC,EADyB,OAEiB/L,oBAAS,GAF1B,mBAElCgM,EAFkC,KAEXC,EAFW,OAGM1O,GAAe,GAAI,aAHzB,mBAGlB8kB,GAHkB,WAKnC5f,EAAUC,eAGV4f,EAAe,uCAAG,WAAO5zB,GAAP,iBAAA0O,EAAA,sEACIilB,EAAqB,CAC/CvvB,WAAY,CACXE,aAAc,CACbtE,SAJoB,QACjB6zB,EADiB,SAYqB,OAAxBA,EAAa3yB,SAChCue,GAAwB,iBAClBqU,EAAa5uB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnDysB,EAAWqH,IAfW,2CAAH,sDAiCrB,OACC,oCACC,kBAAC,KAAD,CAMCpc,KAAK,QAEL6D,WAAYrW,GAGZ,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEC,wBACClL,QAAS,WACRoD,EAAQU,KAAR,qBAA2BoH,EAAO7b,KAElCud,EAAyB1B,IAE1B/c,MAAO,CACN2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGR1O,OAQL,kBAAC,GAAD,CACCI,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAIX,kBAAC,GAAD,CACC6H,MAAM,QACNoV,UAAU,OACV9Y,IAAI,OACJnE,UAAU,uBACVkd,OAAQ,SAAA5X,GAAI,OACX,oCACCA,GAAQA,EAAKnC,OAAS,GAAKmC,EAAK7B,MAAM,EAAE,GAAGrC,KAAI,SAACsK,GAAD,OAC/C,kBAAC,KAAD,CACAtL,MAAO,CACNC,aAAa,OAEd2V,MAAM,OAAO7R,IAAKuH,GACjBA,MAIDpG,GAAwB,IAAhBA,EAAKnC,QAAgB,cAMhC,kBAAC,GAAD,CAECnD,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACP,kBAAC,KAAD,CAAOnE,KAAK,UACX,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,kBAC9B,0BAAM7H,UAAU,WAAWiS,QAAS,WACnC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAOH,kBAAC,KAAD,CACCC,UAAW,kBAAM0V,EAAgB/X,EAAO7b,KACxCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACC1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAaLf,GAAyB,kBAAC,GAAD,CACzBkP,QAAStnB,EACTunB,WAAYA,EACZpP,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MAgJCyW,GAtIC,SAAC,GAAgB,qBAGFziB,mBAAS,IAHR,mBAGxBkb,EAHwB,KAGfC,EAHe,OAKQ5d,GAAe,GAAI,aAL3B,mBAKxBwe,EALwB,KAKdC,EALc,KAQ/B9e,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACI4e,EAAmB,IADvB,OACTtpB,EADS,OAGfyoB,EAAWzoB,GAHI,2CAAH,qDAKbugB,KACE,IAf4B,MAmBU1V,GAAe,GAAI,UAnB7B,gCAoB2ByC,oBAAS,IApBpC,mBAoBxBwN,EApBwB,KAoBDC,EApBC,KAgF/B,OADAta,QAAQC,IAAI,iBAAiB2oB,GAE5B,oCAEC,yBAAK3uB,UAAU,yBACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,UAKA,kBAAC,GAAD,CACCsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,kBACZ8uB,SAAU,SAAA5vB,GAAK,OAzBA,SAACA,GACrB,GAAImvB,EAASnoB,KAAKrD,OAAS,EAAG,CAC7B,IAAMmyB,EAAa3G,EAASnoB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACvFgV,EAAWuH,IAsBY/U,CAAa/gB,OAGlC,kBAAC,IAAD,CAECQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJzC,YASD,yBAAKrgB,UAAU,uCACb2uB,EAASpf,MAAQue,EAAQ3qB,OAAS,GAAK,kBAAC,GAAD,CACvC4qB,WAAYA,EACZvnB,KAAMsnB,IACNa,EAASrf,WAAa,kBAACmR,GAAD,MAGtBkO,EAASpf,QAAUue,EAAQ3qB,OAAS,IACpC,yBAAK/C,MAAO,CACX6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAY,iBAAiBiD,MAAOkL,KAAMK,4BAMrD,kBAAC8+B,GAAD,CACCpmB,QAASA,EACTC,WAAYA,EACZ3N,sBAAuBA,EACvBC,yBAA0BA,MChXxBjQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BActDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA8IpCyU,GAlIG,SAAC,GAAkF,IAAhFuQ,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAcM,EAA8B,EAA9BA,iBAA8B,EAC5CrrB,GAAe,GAAI,aADyB,mBACzF6d,EADyF,KACzErD,EADyE,KAG1F7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATX,QACXwlB,EADW,SAc2B,OAAxBA,EAAa5pB,QAC7Bg5B,EAAiB,CACbl6B,GAAGyP,EAAOzP,GACV6C,IAAI4M,EAAOzP,GACXxB,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,cA/CHqY,OAiDrB8B,EAhDR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,gBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BA2DvCsO,KAGJtT,EAAQC,eAAc,GACtBgqB,GAAkB,GAvCD,iCA5BO,IAAChc,IA4BR,OAAH,wDA2CZqK,EAAe,SAACtX,GAClBipB,GAAkB,IAIhB/pB,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IAMhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJwqB,KAGR,gBACG3pB,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,aACN6W,QAASsc,EACTvW,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBuc,EAAe7e,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBuc,EAAe7e,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgBuc,EAAe7e,MAAf,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBuc,EAAe7e,MAAf,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wBCLrC0a,IAhIiB/P,KAAxBD,OAAwBC,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACUxC,GAAe,GAAI,eAD7B,mBAC9BsrB,EAD8B,KACdC,EADc,OAEcvrB,GAAe,GAAI,eAFjC,mBAE9BwrB,EAF8B,KAEZC,EAFY,OAGOhpB,oBAAS,GAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,OAIIroB,mBAAS,IAJb,mBAI9BsoB,EAJ8B,KAIhBM,EAJgB,KAO/B71B,EAASgnB,eAETwG,GADU7d,eACF3P,EAAM,IAgDpB,OA9CAmK,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS0rB,EAAqB,CAC7Ch2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,QACb0I,EADa,UAWf91B,QAAQC,IAAI,eAAe61B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpBhF,KAED,CAAC1D,IAEJrjB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4rB,EAAuB,CACzBl2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB2I,KAED,CAAC3I,IAKJptB,QAAQC,IAAI,mBAAoB21B,GAEhC51B,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,iCACX,4CAICy7B,EAAelsB,MAAQ2rB,GAAkB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAC1E,oCACI,kBAACgxC,GAAD,CACInZ,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfM,iBAAkBA,IAEtB,kBAAC,IAAD,CACIvpB,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASupB,EAAensB,WACvBmsB,EAAelsB,MAAQ2rB,KAAmB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,IAC3E,kBAAC,KAAD,CAAOyD,YAAY,iBAAiBiD,MAAOkL,KAAMK,yBAGpDqmB,EAAelsB,MAAQ2rB,GAAkB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAC1E,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKk7B,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,YChIhD9qB,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA6IpC6X,GAhIgB,SAAC,GAAmE,IAAjEnnB,EAAgE,EAAhEA,SAAUiY,EAAsD,EAAtDA,WAAYD,EAA0C,EAA1CA,QAASoP,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAC1C5d,GAAe,GAAI,gBADuB,mBACvF6d,EADuF,KACvErD,EADuE,KAGxF7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEAEU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAK,aACDjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,YACpBsB,MAAOxB,EAASwB,OACbxB,KAZM,QAEX0lB,EAFW,SAiB2B,OAAxBA,EAAa5pB,QA9CRyc,OA+CrB8B,EA9CR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAiDjC5S,EAJgB,WAClB,OAAO0qB,EAAQ1sB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQmF,EAASpF,IAG3CupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,EAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuC6oB,IACrD6B,EAXwC,sBAWpBH,EAAQrqB,MAAM,EAAGL,IAXG,CAWKE,GAXL,YAWqBwqB,EAAQrqB,MAAML,EAAQ,KACzF2qB,EAAWE,IAIX3J,KAGJtT,EAAQC,eAAc,GACtB0N,GAAW,GArCM,iCA7BO,IAACM,IA6BR,OAAH,wDAyCZqK,EAAe,SAACtX,GAClB2M,GAAW,IAITzN,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GAMzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJhK,KAGR,gBACG6K,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBuc,EAAe7e,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBuc,EAAe7e,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgBuc,EAAe7e,MAAf,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBuc,EAAe7e,MAAf,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wBC7I5Cyc,GAAiBC,KAAjBD,aACA7P,GAAWrf,IAAXqf,OAgOO+P,GAvNF,SAAC,GAKA,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,aAEW,EACmB7b,mBAAS,IAD5B,mBACJ5Q,EADI,KACK0sB,EADL,OAEkC9b,mBAAS,IAF3C,gCAG4BzC,GAAe,GAAI,gBAH/C,mBAGJwe,EAHI,KAGMC,EAHN,OAI2Bhc,mBAAS,IAJpC,mBAIJic,EAJI,KAISC,EAJT,KAyBXhf,qBAAU,WACR,GAAI6e,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKsrB,EAAatrB,OAAS,EAAG,CACxE,IAAM4rB,EAAsBN,EAAartB,KAAI,SAACC,GAC5C,IAAM2tB,EAAmBL,EAASnoB,KAAKjC,MACrC,SAACkF,GAAD,OAASA,EAAInI,KAAOD,KAEtB,GAAI2tB,EACF,OAAOA,EAAiBlvB,QAG5B0uB,EAAgBO,MAEjB,CAACJ,IAIJ7e,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACW4e,EAAmB,CAC1ClpB,WAAY,CACVC,OAAQ,CACNoa,eAAe,MAJP,QACRkP,EADQ,SAUIA,EAAW9rB,OAAS,IAE9B+rB,EAAaD,EAAW7tB,KAAI,SAACsK,GACjC,OAAOA,EAAI5L,QAEb4uB,EAAWQ,IAfC,2CAAH,qDAoBbrJ,KACC,IAiDH,OAJA9f,QAAQC,IAAI,eAAgByoB,GAK1B,oCAEGE,EAASrf,WACR,yBAAKlP,MAAO,CACVoW,QAAS,SACTzD,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMHwZ,EAASpf,QAAUof,EAASnoB,KAAKrD,OAAS,IACzC,yBAAK/C,MAAO,CACV2S,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOtN,MAAM,eAAemN,OAAQ,OAoBvC2Z,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKnB,EAAQmB,OAAS,GAC7D,oCACE,yBAAKnD,UAAU,8CACb,kBAAC,GAAD,CACE+S,MAAO,MACP3S,MAAO,CACL4U,OAAQ,OACR3U,aAAc,iBACd8uB,YAAa,mBAEfnW,KAAK,SACL1Y,YAAY,WACZ8uB,SAAU,SAAC5vB,GAAD,OAAWuG,QAAQC,IAAIxG,IACjCE,SArFW,SAACsS,GAGtB,GAFA8c,EAAe9c,EAAEhE,OAAOxO,OAED,KAAnBwS,EAAEhE,OAAOxO,OACX,GAAImvB,EAASnoB,MAAQmoB,EAASnoB,KAAKrD,OAAS,EAAG,CAE7C,IAAMksB,EAAgBV,EAASnoB,KAAKpF,KAAI,SAACqI,GAAD,OAASA,EAAI3J,QACrD4uB,EAAWW,QAER,CACL,IAAMC,EACJttB,EAAQmB,OAAS,EACbnB,EAAQiB,QAAO,SAAC6V,GAChB,OAAOA,EAAOC,cAAcnY,SAASiuB,EAAY9V,kBAEjD,GAEN2V,EAAWY,QAwENttB,EAAQZ,KAAI,SAAAsK,GAAG,OACd,oCACE,kBAAC,GAAD,CACEvH,IAAKuH,EACL2d,QAASoF,EAAaltB,QAAQmK,IAAQ,EACtChM,SAAU,SAAA2pB,GAAO,OA7KV,SAAC3d,EAAK2d,GACzB,IAAMkG,EAAmBlG,EAAO,sBAAOoF,GAAP,CAAqB/iB,IAAO+iB,EAAaxrB,QAAO,SAAAusB,GAAC,OAAIA,IAAM9jB,KAG3F,GAFA8iB,EAAgBe,GAEZZ,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKosB,EAAiBpsB,OAAS,EAAG,CAC5E,IAAM4rB,EAAsBQ,EAAiBnuB,KAAI,SAACC,GAChD,IAAM2tB,EAAmBL,EAASnoB,KAAKjC,MACrC,SAACkF,GAAD,OAASA,EAAI3J,KAAKiZ,gBAAkB1X,EAAK0X,iBAE3C,GAAIiW,EACF,OAAOA,EAAiB1tB,MAG5BitB,EAAUQ,IAgKqBxd,CAAa7F,EAAK2d,KAEtC3d,UCxMT6S,GAAWrf,IAAXqf,OAwJO6R,GA7II,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,eAAgBC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,mBAAgC,EACxD3d,mBAAS,IAD+C,mBAC/E5Q,EAD+E,KACtE0sB,EADsE,OAEhD9b,mBAAS,IAFuC,mBAE/Eic,EAF+E,KAElEC,EAFkE,OAIrC3e,GAAe,GAAI,0BAJkB,mBAI/E0P,EAJ+E,KAIhEC,EAJgE,KAOtFhQ,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACS8P,EAAwB,IADjC,QACf0Q,EADe,SAIEA,EAAgBrtB,OAAS,GAE/CurB,EAAW8B,GANS,2CAAH,qDAUnBrQ,KACE,IAsCH,OAJApa,QAAQC,IAAI,gBAAiB6Z,GAC7B9Z,QAAQC,IAAI,aAAchE,GAIzB,yBAAKhC,UAAU,oCAEb6f,EAAcvQ,WACd,yBAAKlP,MAAO,CACXoW,QAAS,SACTzD,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAKD0K,EAActQ,QAAUsQ,EAAcrZ,KAAKrD,OAAS,IACpD,yBAAK/C,MAAO,CACX2S,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOtN,MAAM,oBAAoBmN,OAAQ,OAI1C6K,EAActQ,MAAQsQ,EAAcrZ,KAAKrD,OAAS,GAAKnB,EAAQmB,OAAS,GACxE,oCACC,yBAAKnD,UAAU,8CACd,kBAAC,GAAD,CACC+S,MAAO,OACP3S,MAAO,CACN4U,OAAQ,OACR3U,aAAc,iBACd8uB,YAAa,mBAEdnW,KAAK,SACL1Y,YAAY,kBACZ8uB,SAAU,SAAC5vB,GAAD,OAAWuG,QAAQC,IAAIxG,IACjCE,SAnEiB,SAACsS,GAGvB,GAFA8c,EAAe9c,EAAEhE,OAAOxO,OAED,KAAnBwS,EAAEhE,OAAOxO,OACZ,GAAIqgB,EAAcrZ,MAAQqZ,EAAcrZ,KAAKrD,OAAS,EAAG,CAExD,IAAMksB,EAAgBxP,EAAcrZ,KAAKpF,KAAI,SAACqI,GAAD,OAASA,EAAI3J,QAC1D4uB,EAAWW,QAEN,CACN,IAAMC,EACLttB,EAAQmB,OAAS,EACdnB,EAAQiB,QAAO,SAAC6V,GACjB,OAAOA,EAAOC,cAAcnY,SAASiuB,EAAY9V,kBAEhD,GAEJ2V,EAAWY,QAsDT,yBAAKlvB,MAAO,IAGV4B,EAAQmB,OAAS,GACjB,kBAAC,KAAD,CACCstB,WAAS,EACTC,YAAaJ,EACbK,SAzFU,SAACC,EAAcC,KA0FzBC,QArFS,SAACJ,EAAaG,GAC7B,IAAME,EAAaL,EAAYrH,SAAW,GAC1CgH,EAAeU,GACfR,EAAmBQ,IAmFbC,SAAUhvB,EACVivB,kBAAkB,EAClBC,eAAe,QC5CR5C,GAtFF,SAAC,GAGA,IAFV6C,EAES,EAFTA,cAES,KADTC,WAE8Bxe,mBAAS,KAD9B,mBACF5Q,EADE,KACO0sB,EADP,OAEoC9b,mBAAS,IAF7C,mBAEFye,EAFE,KAEcC,EAFd,OAG8BnhB,GAAe,GAAI,eAHjD,mBAGFwe,EAHE,KAGQC,EAHR,KAKT9e,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACa4e,EAAmB,CACxClpB,WAAY,CACRC,OAAQ,CACJoa,eAAe,MAJf,QACNkP,EADM,SAUMA,EAAW9rB,OAAS,IAE5B+rB,EAAaD,EAAW7tB,KAAI,SAACsK,GAC/B,OAAOA,EAAI5L,QAEf4uB,EAAWQ,IAfH,2CAAH,qDAoBbrJ,KACD,IAgCH,OACI,oCAEI,kBAAC,KAAD,CAAU3T,QAASyc,EAASrf,WACvBqf,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAK,kBAAC,KAAD,CAC1CkQ,KAAK,WACL/S,YAAY,kBACZd,MAAO6xB,EACP3xB,SApCK,SAAC6xB,GAKlB,GAJAD,EAAmBC,GAEnBxrB,QAAQC,IAAI,mBAAoBurB,GAE5B5C,EAASpf,MAAQof,EAASnoB,KAAKrD,OAAS,GAAKouB,EAAYpuB,OAAS,EAAG,CACrE,IAAM4rB,EAAsBwC,EAAYnwB,KAAI,SAACC,GACzC,IAAM2tB,EAAmBL,EAASnoB,KAAKjC,MACnC,SAACkF,GAAD,OAASA,EAAI3J,KAAKiZ,gBAAkB1X,EAAK0X,iBAE7C,GAAIiW,EACA,OAAOA,KAGfjpB,QAAQC,IAAI,sBAAuB+oB,GACnCoC,EAAcpC,QAGdoC,EAAc,KAmBN/wB,MAAO,CAAE2S,MAAO,SAEf/Q,EAAQiB,QAAO,SAAAuuB,GAAC,OAAKH,EAAezwB,SAAS4wB,MAAIpwB,KAAI,SAAAC,GAAI,OACtD,kBAAC,KAAO6V,OAAR,CAAe/S,IAAK9C,EAAM7B,MAAO6B,GAC5BA,UCjCdgyB,GApCY,SAAC,GAGd,IAFV1B,EAES,EAFTA,eACAD,EACS,EADTA,YAEA,OACI,yBACItxB,MAAO,CAEHkzB,cAAe,QAEnBtzB,UAAU,6CACV,yBAAKA,UAAU,qDACV0xB,GAAeA,EAAYvuB,OAAS,GAAKuuB,EAAYtwB,KAAI,SAAAC,GACtD,OAAO,kBAACkyB,GAAD,CACH5B,eAAgBA,EAChBD,YAAaA,EACb9tB,UAAWvC,EAAKsF,IAChBlF,SAAUJ,EAAKI,SACfJ,KAAMA,EACNuwB,UAAWvwB,EAAKuwB,iBAIrBF,EAAYvuB,OAAS,IACpB,yBAAK/C,MAAO,CACR8V,WAAY,SAEZ,kBAAC,GAAD,CAAOrO,MAAM,mBAAmBmN,OAAQ,UCG1D5E,IAFc0Q,KAAZD,QAEiBxQ,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,2CAInEE,GAAgB,CAClB5Q,KAAM,GACN+B,IAAK,GACLwH,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbxH,KAAM,GACNqlB,OAAQ,GACXgtB,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACfjtB,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA+6BE8L,GAn6BO,SAAC,GAAwH,IAAtHrT,EAAqH,EAArHA,sBAAuBC,EAA8F,EAA9FA,yBAAuCqT,EAAuD,EAApEhC,YAAyCiC,EAA2B,EAA3ChC,eAA2C,EAEzFxhB,GAAe,GAAI,WAFsE,mBAEnIyjB,EAFmI,KAElHC,EAFkH,OAG5GjhB,oBAAS,GAHmG,mBAGnI8L,EAHmI,KAG1HC,EAH0H,OAI1G/L,oBAAS,GAJiG,mBAInIyO,EAJmI,KAIzHJ,EAJyH,OAK1FrO,oBAAS,GALiF,mBAKjHuO,GALiH,aAM5EvO,oBAAS,GANmE,mBAMnIwO,EANmI,KAM1G6G,EAN0G,OAOlFrV,oBAAS,GAPyE,mBAOnIsO,EAPmI,KAO7GgH,EAP6G,OAQpGtV,mBAAS,IAR2F,mBAQnIkhB,EARmI,KAQtHzD,EARsH,OAS9Gzd,mBAAS,IATqG,mBASnImhB,EATmI,KAS3HxF,EAT2H,OAU5G3b,mBAAS,IAVmG,mBAUnI+c,EAVmI,KAU1HD,EAV0H,OAW5G9c,mBAAS,IAXmG,mBAWnIvK,EAXmI,KAW1H2rB,EAX0H,OAYlGphB,mBAAS,IAZyF,oBAYnIuV,GAZmI,MAYrHC,GAZqH,SAa5FxV,mBAAS,IAbmF,qBAanI0d,GAbmI,MAalHC,GAbkH,SAclG3d,mBAAS,IAdyF,qBAcnI6b,GAdmI,MAcrHD,GAdqH,SAe7G5b,mBAAS,IAfoG,qCAgB7GA,mBAAS,KAhBoG,qCAiBpGA,mBAAS,KAjB2F,qCAkBlHA,mBAAS,KAlByG,qBAkBnI7Q,GAlBmI,MAkB7HyyC,GAlB6H,SAmB9G5hC,mBAAS,IAnBqG,qBAmBnIwhC,GAnBmI,MAmB3HK,GAnB2H,SAoBtG7hC,mBAAS,IApB6F,qBAoBnIwe,GApBmI,MAoBvHD,GApBuH,SAqBpGve,mBAAS,IArB2F,qBAqBnI8e,GArBmI,MAqBtHC,GArBsH,SAsBnG/e,mBAAS,4CAtB0F,qCAuB9GA,mBAAS,KAvBqG,qBAuBtI8U,GAvBsI,MAuB7HiR,GAvB6H,SAwB1G/lB,mBAAS,IAxBiG,qBAwBtI+U,GAxBsI,MAwB3HiR,GAxB2H,SA2BhHhmB,mBAAS,CAC/BogB,QAAS,KACTC,MAAO,OA7B+H,qBAqCpIniB,IArCoI,YAqCxH,uCAAG,WAAOC,EAAaC,GAApB,mBAAAhB,EAAA,6DAEX+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACtC,OAAOA,EAAMvI,MACZ,GAECwC,EAAW4tB,GAAYvuB,OAAS,EAAIuuB,GAAYtwB,KAAI,SAAAD,GACtD,MAAO,CACHwF,IAAKxF,EAAQwF,IACbirB,UAAWzwB,EAAQywB,UACnBnwB,SAAUN,EAAQM,aAErB,GAZY,SAeWoyB,EAAsB,CAC9C9xB,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBtiB,SAAUotB,EACVxuB,KAAMyuB,EACNtrB,MAAO,CAACknB,GACR9lB,MAAOkf,EACPhnB,KAAMA,GACNyH,iBAAkB1F,EAClBuF,gBAAiB0H,EAAO1H,gBACxBC,YAAayH,EAAOzH,YACpB8d,OAAQ,GACRgtB,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACfjtB,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZsB,GAAI,CACf3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUC,GAAWvhB,KAAK,KAC1BtG,KAAMiR,EAAOqW,OAAO4B,OACpB3f,gBAAiB0H,EAAOsjC,kBACxBtyC,KAAMgP,EAAOqjC,OACb9qC,YAAayH,EAAOujC,cACpB/qC,YAAawH,EAAOwjC,kBA7CA,QAeXngB,EAfW,SAoD6B,OAAzBA,EAAc5xB,SAC/Bue,GAAwB,kBACxBV,GAAyB,GAEzBsT,EAAc,GAAD,mBAAKD,GAAL,cACTpyB,GAAI8yB,EAAa,IAAU,GAC3BjwB,IAAKiwB,EAAa,IAAU,GAC5Bt0B,KAAMs0B,EAAa,MAAY,IAE5BA,MAGPnT,EAAY,IACZmH,GAAgB,IAChB4L,EAAW,IACXzF,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBvf,EAAQmY,aAMZnY,EAAQC,eAAc,GA9EL,2CAAH,yDAqFlBnB,qBAAU,WACN,IAAK8jB,EAAe,UAAe,CAC/B,IAAMzkB,EAAQykB,EAAe,MAC7B,GAAIzkB,EAAK,SAAe5L,OAAOiC,KAAK2J,EAAK,OAAWhM,OAAS,GAIrDI,OAAOwN,OAAO5B,EAAK,OAAWhM,OAAS,EACjCI,OAAOwN,OAAO5B,EAAK,OACnB,IACH8T,SAAQ,SAACoR,EAAKC,GACjB,GAAmB,kBAARD,EACP/P,GAAsB+P,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAO9wB,OAAOiC,KAAK6uB,GAAKlxB,OAAS,EACpBI,OAAOwN,OAAOsjB,GACtBpR,SAAQ,SAAAoR,GACT/P,GAAsB+P,aAQ/C,CAACT,IAMJ9jB,qBAAU,WAEN,GAAIshB,GAAWjuB,OAAS,GACpB,GAAIiuB,GAAWjuB,OAASuuB,GAAYvuB,OAAQ,CACxC,IAAMyuB,EAAYR,GAAWA,GAAWjuB,OAAS,GAA/B,QAA6CA,OAAS,GAAKiuB,GAAWA,GAAWjuB,OAAS,GAA/B,QAA6C,GAA7C,IAC7E4C,QAAQC,IAAI,YAAa4rB,GAEzBD,GAAe,GAAD,mBAAKD,IAAL,gBACPN,GAAWA,GAAWjuB,OAAS,GADxB,CAEVwD,IAAKyqB,GAAWA,GAAWjuB,OAAS,GAA/B,GACLyuB,UAAWA,EACXnwB,SAAU,YAKb,GAAI2vB,GAAWjuB,OAASuuB,GAAYvuB,OAAQ,CAC7C4C,QAAQC,IAAI,aAAcorB,IAC1BrrB,QAAQC,IAAI,cAAe0rB,IAE3B,IAAM6C,EAAiB7C,GAAYzuB,QAAO,SAAA5B,GACtC,IAAImzB,GAAS,EAMb,OALApD,GAAWnO,SAAQ,SAAA9hB,GACXA,EAAQG,KAAOD,EAAKsF,MACpB6tB,GAAS,MAGVA,KAEX7C,GAAe4C,SAMnB5C,GAAe,MAKpB,CAACP,KAOJ,IAAM9H,GAAe,SAACtX,GAClBqO,GAAyB,IAiF7B,OACI,kBAAC,IAAD,CACIjP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAGTG,UAAW,CACP5S,OAAQ,EACRyE,QAAS,GAEbzD,MAAO,OACPlL,MAAM,iBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,WAId,6BAASlqB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,kDAIA,yBAAKA,UAAW+Q,EAAOjR,MAAQiR,EAAOjR,KAAKqD,OAAS,EAAI,mBAAqB,aACzE,kBAACgc,GAAA,EAAD,QAGR,yBAAKnf,UAAU,sCAEX,kBAACd,EAAD,CACII,MAAM,OACNS,YAAY,YACZP,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBmiB,EAAgBzkB,MAAhB,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBmiB,EAAgBzkB,MAAhB,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAKxB,kBAACzS,EAAD,CACII,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAC7B3V,GAAgBmiB,EAAgBzkB,MAAhB,aAEtBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACjC3V,GAAgBmiB,EAAgBzkB,MAAhB,aACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAKxB,kBAACzS,EAAD,CACII,MAAM,mBACNE,MAAOuR,EAAO1H,gBACdtJ,YAAY,SACZD,KAAK,kBACLF,QAAU8R,EAAQrI,iBAAmBmI,EAAOnI,kBACtCoI,GAAgBmiB,EAAgBzkB,MAAhB,sBAEtBtP,YAAc6R,EAAQrI,iBAAmBmI,EAAOnI,kBAC1CoI,GAAgBmiB,EAAgBzkB,MAAhB,sBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,sBAIpB,kBAACzS,EAAD,CACAI,MAAM,sBACNE,MAAOuR,EAAOsjC,kBACdt0C,YAAa,8CACbD,KAAK,oBACLF,QAAU8R,EAAQ2iC,mBAAqB7iC,EAAO6iC,oBACxC5iC,GAAgBmiB,EAAgBzkB,MAAhB,wBAEtBtP,YAAc6R,EAAQ2iC,mBAAqB7iC,EAAO6iC,oBAC5C5iC,GAAgBmiB,EAAgBzkB,MAAhB,wBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wBAOxB,kBAACzS,EAAD,CACII,MAAM,eACNS,YAAa,SACbP,MAAOuR,EAAOxH,YACdzJ,KAAK,cACLF,QAAU8R,EAAQnI,aAAeiI,EAAOjI,cAClCkI,GAAgBmiB,EAAgBzkB,MAAhB,kBAEtBtP,YAAc6R,EAAQnI,aAAeiI,EAAOjI,cACtCkI,GAAgBmiB,EAAgBzkB,MAAhB,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,kBAKxB,kBAACzS,EAAD,CACII,MAAM,kBACNS,YAAa,8CACbP,MAAOuR,EAAOwjC,cACdz0C,KAAK,gBACLF,QAAU8R,EAAQ6iC,eAAiB/iC,EAAO+iC,gBACpC9iC,GAAgBmiB,EAAgBzkB,MAAhB,oBAEtBtP,YAAc6R,EAAQ6iC,eAAiB/iC,EAAO+iC,gBACxC9iC,GAAgBmiB,EAAgBzkB,MAAhB,oBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,oBAIxB,kBAACzS,EAAD,CACII,MAAM,eACNE,MAAOuR,EAAOzH,YACdxJ,KAAK,cACLF,QAAU8R,EAAQpI,aAAekI,EAAOlI,cAClCmI,GAAgBmiB,EAAgBzkB,MAAhB,kBAEtBtP,YAAc6R,EAAQpI,aAAekI,EAAOlI,cACtCmI,GAAgBmiB,EAAgBzkB,MAAhB,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,kBAIpE,kBAACzS,EAAD,CACgDI,MAAM,kBACNE,MAAOuR,EAAOujC,cACdx0C,KAAK,gBACLF,QAAU8R,EAAQ4iC,eAAiB9iC,EAAO8iC,gBACpC7iC,GAAgBmiB,EAAgBzkB,MAAhB,oBAEtBtP,YAAc6R,EAAQ4iC,eAAiB9iC,EAAO8iC,gBACxC7iC,GAAgBmiB,EAAgBzkB,MAAhB,oBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,oBAIxB,kBAACzS,EAAD,CACII,MAAM,MACNE,MAAOuR,EAAOlP,IACd/B,KAAK,MACLF,QAAU8R,EAAQ7P,KAAO2P,EAAO3P,MAC1B4P,GAAgBmiB,EAAgBzkB,MAAhB,UAEtBtP,YAAc6R,EAAQ7P,KAAO2P,EAAO3P,MAC9B4P,GAAgBmiB,EAAgBzkB,MAAhB,UACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,UAOxB,wBAAI3R,UAAU,mBAAd,QAIA,yBAAKI,MAAO,CACR2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACI2iB,OAAQC,KACRluB,KAAMzE,GACN4yB,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB2f,GAAQhuC,IAEZkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OAKlC,yBAAKr0B,MAAO,CACR6V,UAAU,UAGd,wBAAIjW,UAAU,mBAAd,WAIA,yBAAKI,MAAO,CACR2S,MAAO,OACPjB,SAAU,SAEV,kBAAC,KAAD,CACI2iB,OAAQC,KACRluB,KAAM4tC,GACNzf,OAAQ,SAAAF,GAEJ1uB,QAAQC,IAAI,0BAA2ByuB,IAE3C/0B,SAAU,SAACk1B,EAAOH,GACd,IAAMjuB,EAAOiuB,EAAOI,UACpB4f,GAAUjuC,IAEdkgB,OAAQ,SAACkO,EAAOH,GACZ1uB,QAAQC,IAAI,QAASyuB,IAEzBvE,QAAS,SAAC0E,EAAOH,GACb1uB,QAAQC,IAAI,SAAUyuB,OA8BlC,yBAAKr0B,MAAO,CACR+a,aAAc,YAiD1B,yBAAKnb,UAAU,kCACX,yBAAKA,UAAU,wCACX,wCAIA,yBAAKA,UAAWqI,GAAWA,EAAQlF,OAAS,EAAI,mBAAqB,aACjE,kBAACgc,GAAA,EAAD,QAKR,yBAAKnf,UAAU,sCAEX,wBAAIA,UAAU,mBAAd,YAGA,kBAAC,GAAD,CACImxB,cAAeA,GACfC,WAAYA,KAGhB,yBAAKhxB,MAAO,CACR6V,UAAW,UAGf,wBAAIjW,UAAU,mBAAd,oBAIA,kBAAC,GAAD,CACI0xB,YAAaA,GACbC,eAAgBA,OAQ5B,yBAAK3xB,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIqW,UAAU,OAAOxO,MAAO,uFACxB,uBAAG8O,KAAK,OACJ,kBAACyT,GAAA,EAAD,SAIZ,yBAAKpqB,UAAU,sCAIX,yBAAKA,UAAU,gCACVqhB,GAEGA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GACxC,OACI,yBAAKpD,UAAU,sCACX,yBACIA,UAAU,kDACViS,QAAS,kBAAMmW,GAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGtC,0BACIgI,QAAS,kBApe9C,SAAC3Q,GAExB,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC1C,OAAOA,EAAMvI,KAAOA,KAGxB2f,EAAYqJ,GA8d+DC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIHiD,KAAiBte,EAAMvI,KAInB6mB,IAA0B,IAAV/kB,IAHjB,0BAAMpD,UAAU,4CACZ,kBAACmlB,GAAA,EAAD,WAYxB,kBAAC,KAAD,CACItd,MAAO,iBAEP,yBACIoK,QAAS,WACL0M,GAAW,GACXuJ,GAAwB,GACxBD,GAA2B,IAE/BjoB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACZ,kBAACwgB,GAAA,EAAD,YAcxB,yBAAKxgB,UAAU,kCAEnD,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIqW,UAAU,OAAOxO,MAAO,sFACxB,uBAAG8O,KAAK,OACJ,kBAACyT,GAAA,EAAD,SAIZ,yBAAKpqB,UAAU,sCAGf,kBAACd,EAAD,CACAI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACpC7V,GAAgBmiB,EAAgBzkB,MAAhB,gBAElBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACxC7V,GAAgBmiB,EAAgBzkB,MAAhB,gBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACzS,EAAD,CACAI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACtC9V,GAAgBmiB,EAAgBzkB,MAAhB,kBAElBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cAC1C9V,GAAgBmiB,EAAgBzkB,MAAhB,kBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACArS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC1C/V,GAAgBmiB,EAAgBzkB,MAAhB,sBAElBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC9C/V,GAAgBmiB,EAAgBzkB,MAAhB,sBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACArS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC5ChW,GAAgBmiB,EAAgBzkB,MAAhB,wBAElBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAChDhW,GAAgBmiB,EAAgBzkB,MAAhB,wBAClBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAAS8S,GACTrzB,KAAMoiB,KAGN,yBAAKtnB,MAAO,CACZ6V,UAAU,UAGV,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAAS+S,GACTtzB,KAAMoiB,QAQ0B,yBAAK1nB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,iDAIA,kBAAC,KAAD,CACIgW,MAAM,MACN0I,QAASkV,EAAgBzkB,MAAhB,kBAAgD2kB,EAAY3wB,OAAS,GAC9EkT,UAAU,OAAOxO,MAAO,gCACxB,yBAAK7H,UAAa8zB,EAAY3wB,OAAS,GAC/BywB,EAAgBzkB,MAAhB,eAA2DykB,EAAgBzkB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACgQ,GAAA,EAAD,SAKZ,yBAAKnf,UAAU,mDACX,kBAAC,GAAD,CACIuwB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMhC,yBAAKrwB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACIwuB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,UAUvC,kBAAC,GAAD,CACI5P,WAAYA,EACZD,QAASA,EACTuC,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCl6B1C7E,IAXiBhM,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAUzC8L,KAAxBD,QACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAA0B,IAAxBhY,EAAuB,EAAvBA,KAAMunB,EAAiB,EAAjBA,WAAiB,EACRnb,oBAAS,GADD,mBAC/B8L,EAD+B,KACtBC,EADsB,OAEoB/L,oBAAS,GAF7B,mBAE/BgM,EAF+B,KAERC,EAFQ,OAGS1O,GAAe,GAAI,gBAH5B,mBAGf8kB,GAHe,WAKhC5f,EAAUC,eAGV4f,EAAe,uCAAG,WAAO5zB,GAAP,iBAAA0O,EAAA,sEACOilB,EAAqB,CAC5CvvB,WAAY,CACRE,aAAc,CACVtE,SAJQ,QACd6zB,EADc,SAYwB,OAAxBA,EAAa3yB,SArDRyc,EAsDG,iBArDhCC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAmDjCof,EAAa5uB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnDysB,EAAWqH,IAfK,iCAzCI,IAACnW,IAyCL,OAAH,sDAiCrB,OACI,oCACI,kBAAC,KAAD,CAMIjG,KAAK,QAEL6D,WAAYrW,GAGZ,kBAAC,GAAD,CACIqB,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,uBAA6BoH,EAAO7b,KACpCud,EAAyB1B,IAE7BpP,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAM5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCAEI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,uBAA6BoH,EAAO7b,KAEpCud,EAAyB1B,IAE7B/c,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAEX1O,OAQjB,kBAAC,GAAD,CACII,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBAGd,kBAAC,GAAD,CACI6H,MAAM,aACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACI/c,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAEZ,kBAAC,KAAD,KACK1O,QASrB,kBAAC,GAAD,CACII,MAAM,WACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,yBAId,kBAAC,GAAD,CAEIA,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,kBAAC,KAAD,CAAOnE,KAAK,UACR,uBAAGrC,KAAK,MACJ,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,qBAC3B,0BAAM7H,UAAU,WAAWiS,QAAS,WAChC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAOZ,kBAAC,KAAD,CACIC,UAAW,kBAAM0V,EAAgB/X,EAAO7b,KACxCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACI1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAavBf,GAAyB,kBAAC,GAAD,CACtBkP,QAAStnB,EACTunB,WAAYA,EACZpP,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MAiHXyW,GAtGC,SAAC,GAAgB,qBAGCziB,mBAAS,IAHX,mBAGrBkb,EAHqB,KAGZC,EAHY,OAKW5d,GAAe,GAAI,YAL9B,mBAKrBwe,EALqB,KAKXC,EALW,KAS5B7oB,QAAQC,IAAI,eAAe2oB,GAG3B7e,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACO4e,EAAmB,IAD1B,OACNtpB,EADM,OAGZyoB,EAAWzoB,GAHC,2CAAH,qDAKbugB,KACD,IAnByB,MAuB8BjT,oBAAS,GAvBvC,mBAuBrBwN,EAvBqB,KAuBEC,EAvBF,KAkD5B,OACI,oCACI,yBAAKrgB,UAAU,yBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uCAAd,WAGA,kBAAC,GAAD,CACIsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,mBACZ8uB,SAAU,SAAA5vB,GAAK,OApBlB,SAACA,GAClB,GAAImvB,EAASnoB,KAAKrD,OAAS,EAAG,CAC1B,IAAMmyB,EAAa3G,EAASnoB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACvFgV,EAAWuH,IAiBwB/U,CAAa/gB,OAGxC,kBAAC,IAAD,CAEIQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJ5C,YASJ,yBAAKrgB,UAAU,uCACV2uB,EAASpf,MAAQue,EAAQ3qB,OAAS,GAAK,kBAAC,GAAD,CACpC4qB,WAAYA,EACZvnB,KAAMsnB,IACTa,EAASrf,WAAa,kBAACmR,GAAD,MAGtBkO,EAASpf,QAAUue,EAAQ3qB,OAAS,IACjC,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,kBAAkBiD,MAAOkL,KAAMK,4BAMlE,kBAAC,GAAD,CACIsc,YAAa5D,EACb6D,eAAgB5D,EAChB3N,sBAAuBA,EACvBC,yBAA0BA,MCU3BgM,IA5WiB/P,KAAxBD,OAAwBC,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACkBxC,GAAe,GAAI,cADrC,mBAC9Byf,EAD8B,KACV6F,EADU,KAG/B9vB,EAASgnB,eACTtX,EAAUC,eACV1R,EAAY+B,EAAM,GALa,EAOeiN,oBAAS,GAPxB,6BAUrC9C,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,6DACrBjK,QAAQC,IAAI,UADS,SAEfyvB,EAAyB,CAC3B/vB,WAAY,CACRC,OAAQ,CACJ+uC,YAAa,EACbC,QAAS,GAEb/uC,aAAc,CACVtE,GAAIsC,MATK,2CAAH,qDAetB8xB,KAED,CAAC9xB,IAKJmC,QAAQC,IAAI,qBAAsB4pB,GAElC7pB,QAAQC,IAAI,cAAeL,GAE3B,IA+BMunB,EAAM0C,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQopB,EAAmBppB,KAAnB,MA/BvC,SAAC2mB,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK/rB,KAAI,SAAAC,GAAI,OAAIA,EAAK0F,SAC7B,IAAMqmB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKlK,SAAQ,SAAC5hB,EAAM+B,GACZiqB,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,sBAA4BF,EAAQE,IAApC,CAAmDjsB,IAElD+rB,EAAQE,GAAgB,CAACjsB,GAE9BgsB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACfvnB,QAAQC,IAAI,aAAcqnB,OAI3BD,EAI0FG,CAAmBqC,EAAmBppB,KAAnB,OAAoC,GAI5J,OADAT,QAAQC,IAAI,eAAgB4pB,GAExB,yBAAK5vB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,6CAIC4vB,EAAmBrgB,MAAQqgB,EAAmBppB,MAASjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GAClG,sCAiBR,kBAAC,KAAD,CACIsqB,QAAM,EAACC,UAAW,CAAEhN,KAAM,GAC1BxO,QAAS0d,EAAmBtgB,WAC3BsgB,EAAmBrgB,MAAQqgB,EAAmBppB,QAAUjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,IACnG,kBAAC,KAAD,CAAOyD,YAAY,kBAAkBiD,MAAOkL,KAAMK,yBAGrDwa,EAAmBrgB,MAAQqgB,EAAmBppB,MAASjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GAClG,oCACI,yBAAKnD,UAAU,gCACX,yBAAKA,UAAU,mGACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,OAAoCopB,EAAmBppB,KAAnB,MAAkCyD,IAAI,MAExF,yBAAKjK,UAAU,qCACX,4BACK4vB,EAAmBppB,KAAnB,MAEL,4BACKopB,EAAmBppB,KAAnB,OAEL,4BACKopB,EAAmBppB,KAAnB,aAGJopB,EAAmBppB,KAAnB,WACG,0CAEI,8BACKopB,EAAmBppB,KAAnB,MAMZopB,EAAmBppB,KAAnB,SACG,wCAEI,8BACKopB,EAAmBppB,KAAnB,MAQZopB,EAAmBppB,KAAnB,KACG,mCAEI,8BACKopB,EAAmBppB,KAAnB,MAsBZopB,EAAmBppB,KAAnB,UAAuCopB,EAAmBppB,KAAnB,SAAoCrD,OAAS,GAChF,oCACG,0CAECysB,EAAmBppB,KAAnB,SAAoCpF,KAAI,SAAAqI,GACrC,OACI,0BACIwI,QAAS,kBAAMoD,EAAQU,KAAR,gCAAsCtM,EAAInI,OAGxDmI,EAAI3J,aAWhC8vB,EAAmBppB,KAAnB,MACG,oCACI,yBAAKxG,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,MAAmCopB,EAAmBppB,KAAnB,KAAiCyD,IAAI,OAK1F,yBAAK7J,MAAO,CACR+a,aAAc,WAOzByU,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GAAKysB,EAAmBppB,KAAnB,UACtG,yBAAKxG,UAAU,iCACX,yCAQR,yBAAKA,UAAU,8BACV4vB,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQopB,EAAmBppB,KAAnB,YAAyCopB,EAAmBppB,KAAnB,SAAoCrD,OAAS,IACzI,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,qCAAqCiD,MAAOkL,KAAMK,0BAI5Ewa,EAAmBrgB,MAAQqgB,EAAmBppB,MAAQjD,OAAOiC,KAAKoqB,EAAmBppB,MAAMrD,OAAS,GACjG,oCACKysB,EAAmBppB,KAAnB,UAAuCopB,EAAmBppB,KAAnB,SAAoCrD,OAAS,GACjFysB,EAAmBppB,KAAnB,SAAoCpF,KAAI,SAAAD,GACpC,OACI,kBAAC,GAAD,CACIM,SAAUN,EAAQM,SAClBmC,UAAWzC,EAAO,WAO7CyuB,EAAmBppB,KAAnB,OAAoCopB,EAAmBppB,KAAnB,MAAiCrD,OAAS,GAC3E,oCACI,yBAAKnD,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACVktB,GAAO3pB,OAAOiC,KAAK0nB,GAAK9rB,KAAI,SAAA4b,GACzB,OACI,yBAAKhd,UAAU,qBACVktB,EAAIlQ,IAAWkQ,EAAIlQ,GAAQ5b,KAAI,SAAA0I,GAC5B,OAAO,yBAAKiE,IAAKjE,EAAK1J,MAAO,CACzB2S,MAAO,oBAcvC,yBAAK3S,MAAO,CACR+a,aAAc,WAKzByU,EAAmBppB,KAAnB,OAAoCjD,OAAOiC,KAAKoqB,EAAmBppB,KAAnB,OAAkCrD,OAAS,GACxF,oCACI,yBAAKnD,UAAU,iCACX,sCAKJ,yBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,uBAA6B6Z,EAAmBppB,KAAnB,YAE5CxG,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,aAA6CopB,EAAmBppB,KAAnB,YAA2CyD,IAAI,MAE1G,yBAAKjK,UAAU,oCACX,4BACK4vB,EAAmBppB,KAAnB,YAEL,4BACKopB,EAAmBppB,KAAnB,qBAKb,yBAAKpG,MAAO,CACR+a,aAAc,WAMzByU,EAAmBppB,KAAnB,iBAA8CjD,OAAOiC,KAAKoqB,EAAmBppB,KAAnB,iBAA4CrD,OAAS,GAC5G,oCACI,yBAAKnD,UAAU,iCACX,iDAKJ,yBACIiS,QAAS,kBAAMoD,EAAQU,KAAR,0BAAgC6Z,EAAmBppB,KAAnB,sBAC/CxG,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK6hB,EAAmBppB,KAAnB,uBAAuDopB,EAAmBppB,KAAnB,sBAAqDyD,IAAI,MAE9H,yBAAKjK,UAAU,oCACX,4BACK4vB,EAAmBppB,KAAnB,sBAEL,4BACKopB,EAAmBppB,KAAnB,+BAKb,yBAAKpG,MAAO,CACR+a,aAAc,gBC1W5C/K,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAchE8T,GAAwB,SAACrF,GAC9BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA4I9ByU,GA7HG,SAAC,GAAmE,IAAjE/jB,EAAgE,EAAhEA,SAAUiY,EAAsD,EAAtDA,WAAYD,EAA0C,EAA1CA,QAASoP,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAChC5d,GAAe,GAAI,aADa,mBAC7E6d,EAD6E,KAC7DrD,EAD6D,KAG9E7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEACO2a,EAA0B,CACpDjlB,WAAY,CACXE,aAAc,CACbtE,GAAIyP,EAAOzP,KAGbS,KAAM,CACLjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATF,QACdwlB,EADc,SAcwB,OAAxBA,EAAa5pB,QA7CFyc,OA8C9B8B,EA7CF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAgDpC5S,EAJgB,WACrB,OAAO0qB,EAAQ1sB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQmF,EAASpF,IAGxCupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,EAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuC6oB,IACrD6B,EAX2C,sBAWvBH,EAAQrqB,MAAM,EAAGL,IAXM,CAWEE,GAXF,YAWkBwqB,EAAQrqB,MAAML,EAAQ,KACzF2qB,EAAWE,IAIX3J,KAGDtT,EAAQC,eAAc,GACtB0N,GAAW,GAlCS,iCA/BU,IAACM,IA+BX,OAAH,wDAsCZqK,EAAe,SAACtX,GACrB2M,GAAW,IAINzN,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GAMtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPhK,KAGL,gBACA6K,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACChK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBuc,EAAe7e,MAAf,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBuc,EAAe7e,MAAf,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgBuc,EAAe7e,MAAf,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBuc,EAAe7e,MAAf,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBC9HnBvB,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACTsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAsTEoD,GAzSK,SAAC,GAAqF,IAAnF3K,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0ByN,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAE5D5d,GAAe,GAAI,cAFyC,mBAE9FgrB,EAF8F,KAEjFC,EAFiF,OAGrExoB,oBAAS,GAH4D,mBAG9FyO,EAH8F,KAGpFJ,EAHoF,OAI7DrO,oBAAS,GAJoD,mBAI9F+Y,EAJ8F,KAIhFC,EAJgF,OAK7DhZ,mBAAS,IALoD,gCAM9EA,mBAAS,KANqE,mBAM9FtN,EAN8F,KAMzFugB,EANyF,OAO7EjT,mBAAS,IAPoE,mBAOjGiW,EAPiG,KAO1FC,EAP0F,KAS/FhY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOorB,EAAkB,CACtC11B,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,YACpB0gB,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUpiB,EAAKc,KAAK,KAIpB6iB,GAAI,CACf3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,EAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpBpiB,YAAamK,EAAOsW,kBArBA,QACXgU,EADW,SA2BqB,OAArBA,EAAU74B,QA7EFyc,OA8ErB8B,EA7ER7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA4EvC+X,EAAW,GAAD,mBAAKD,GAAL,CAAc,CACpBxsB,GAAI+5B,EAAS,IAAU,GACvBl3B,IAAKk3B,EAAS,IAAU,GACxBv7B,KAAMu7B,EAAS,MAAY,GAC3Bz0B,YAAay0B,EAAS,aAAmB,OAE7CrqB,EAAQmY,YACR9I,GAAyB,IAGzBiE,KAIJtT,EAAQC,eAAc,GA5CL,iCAlDO,IAACgO,IAkDR,OAAH,wDAiDZqK,EAAe,SAACtX,GAClBqO,GAAyB,IAIvBnP,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GAqBzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAET3c,MAAM,mBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGvD,kBAACjS,EAAD,CACbI,MAAM,OACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgB0pB,EAAYhsB,MAAZ,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgB0pB,EAAYhsB,MAAZ,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,0DACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgB0pB,EAAYhsB,MAAZ,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgB0pB,EAAYhsB,MAAZ,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACU9G,KAAK,cACLQ,YAAa,cACrCV,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgB0pB,EAAYhsB,MAAZ,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgB0pB,EAAYhsB,MAAZ,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,iDACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgB0pB,EAAYhsB,MAAZ,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgB0pB,EAAYhsB,MAAZ,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACzS,EAAD,CACQI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgB0pB,EAAYhsB,MAAZ,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgB0pB,EAAYhsB,MAAZ,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgB0pB,EAAYhsB,MAAZ,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgB0pB,EAAYhsB,MAAZ,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgB0pB,EAAYhsB,MAAZ,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgB0pB,EAAYhsB,MAAZ,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgB0pB,EAAYhsB,MAAZ,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgB0pB,EAAYhsB,MAAZ,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,EACTvgB,KAAMA,IAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,EACTxjB,KAAMujB,KAKW,kBAAC,GAAD,CACIlK,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SCtS1C7E,IAXiBhM,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAUtC8L,KAAxBD,QACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAA0B,IAAxBhY,EAAuB,EAAvBA,KAAMunB,EAAiB,EAAjBA,WAAiB,EACXnb,oBAAS,GADE,mBAClC8L,EADkC,KACzBC,EADyB,OAEiB/L,oBAAS,GAF1B,mBAElCgM,EAFkC,KAEXC,EAFW,OAGM1O,GAAe,GAAI,aAHzB,mBAGlB8kB,GAHkB,WAKnC5f,EAAUC,eAGV4f,EAAe,uCAAG,WAAO5zB,GAAP,iBAAA0O,EAAA,sEACIilB,EAAqB,CAC/CvvB,WAAY,CACXE,aAAc,CACbtE,SAJoB,QACjB6zB,EADiB,SAYqB,OAAxBA,EAAa3yB,SAvDFyc,EAwDN,qBAvD1BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,qBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAqDpCof,EAAa5uB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnDysB,EAAWqH,IAfW,iCA3CO,IAACnW,IA2CR,OAAH,sDAgCrB,OACC,oCACC,kBAAC,KAAD,CAMCjG,KAAK,QAEL6D,WAAYrW,GAGZ,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEC,wBACClL,QAAS,WACRoD,EAAQU,KAAR,2BAAiCoH,EAAO7b,KAExCud,EAAyB1B,IAE1B/c,MAAO,CACN2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAER1O,OAQL,kBAAC,GAAD,CACCI,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBAGX,kBAAC,GAAD,CAECA,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACP,kBAAC,KAAD,CAAOnE,KAAK,UACX,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,yBAC9B,0BAAM7H,UAAU,WAAWiS,QAAS,WACnC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAOH,kBAAC,KAAD,CACCC,UAAW,kBAAM0V,EAAgB/X,EAAO7b,KACxCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACC1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAQLf,GAAyB,kBAAC,GAAD,CACzBkP,QAAStnB,EACTunB,WAAYA,EACZpP,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MA4FCyW,GAlFC,SAAC,GAAgB,qBAGFziB,mBAAS,IAHR,mBAGxBkb,EAHwB,KAGfC,EAHe,OAKQ5d,GAAe,GAAI,eAL3B,mBAKxBwe,EALwB,KAKdC,EALc,KAO/B7oB,QAAQC,IAAI,gBAAgB2oB,GAE5B7e,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACI4e,EAAmB,IADvB,OACTtpB,EADS,OAGfyoB,EAAWzoB,GAHI,2CAAH,qDAKbugB,KACE,IAhB4B,MAoB2BjT,oBAAS,GApBpC,mBAoBxBwN,EApBwB,KAoBDC,EApBC,KA6B/B,OACC,oCAEC,yBAAKrgB,UAAU,yBACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,eAIA,kBAAC,GAAD,CACCsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,uBACZ8uB,SAAU,SAAA5vB,GAAK,OArBA,SAACA,GACrB,GAAImvB,EAASnoB,KAAKrD,OAAS,EAAG,CAC7B,IAAMmyB,EAAa3G,EAASnoB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACvFgV,EAAWuH,IAkBY/U,CAAa/gB,OAGlC,kBAAC,IAAD,CAECQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJzC,YASD,yBAAKrgB,UAAU,uCACb2uB,EAASpf,MAAQue,EAAQ3qB,OAAS,GAAK,kBAAC,GAAD,CACvC4qB,WAAYA,EACZvnB,KAAMsnB,IACNa,EAASrf,WAAa,kBAACmR,GAAD,MAGtBkO,EAASpf,QAAUue,EAAQ3qB,OAAS,IACpC,yBAAK/C,MAAO,CACX6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,uBAAuBiD,MAAOkL,KAAMK,4BAM3D,kBAAC,GAAD,CACC0Y,QAASA,EACTC,WAAYA,EACZ3N,sBAAuBA,EACvBC,yBAA0BA,MC7RxBjQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BActDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA+IpCyU,GAnIG,SAAC,GAAkF,IAAhFuQ,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAcM,EAA8B,EAA9BA,iBAA8B,EAC5CrrB,GAAe,GAAI,aADyB,mBACzF6d,EADyF,KACzErD,EADyE,KAG1F7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATX,QACXwlB,EADW,SAc2B,OAAxBA,EAAa5pB,QAC7Bg5B,EAAiB,CACbl6B,GAAGyP,EAAOzP,GACV6C,IAAI4M,EAAOzP,GACXxB,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,cAExBb,QAAQC,IAAI,uBAAuBomB,GAjDdnN,OAkDrB8B,EAjDR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BA4DvCsO,KAGJtT,EAAQC,eAAc,GACtBgqB,GAAkB,GAxCD,iCA5BO,IAAChc,IA4BR,OAAH,wDA4CZqK,EAAe,SAACtX,GAClBipB,GAAkB,IAIhB/pB,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IAMhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJwqB,KAGR,gBACG3pB,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,WACN6W,QAASsc,EACTvW,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBuc,EAAe7e,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBuc,EAAe7e,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgBuc,EAAe7e,MAAf,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBuc,EAAe7e,MAAf,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wBCtI5C0K,GAAwBC,KAAxBD,OAyQOgQ,IAzQiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACUxC,GAAe,GAAI,iBAD7B,mBAC9BsrB,EAD8B,KACdC,EADc,OAEcvrB,GAAe,GAAI,eAFjC,mBAE9BwrB,EAF8B,KAEZC,EAFY,OAGOhpB,oBAAS,GAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,OAIIroB,mBAAS,IAJb,mBAI9BsoB,EAJ8B,KAIhBM,EAJgB,KAQ/B71B,EAASgnB,eACTtX,EAAUC,eACV6d,EAAQxtB,EAAM,GAgDpB,OA9CAmK,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS0rB,EAAqB,CAC7Ch2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,QACb0I,EADa,UAWf91B,QAAQC,IAAI,eAAe61B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpBhF,KAED,CAAC1D,IAEJrjB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4rB,EAAuB,CACzBl2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB2I,KAED,CAAC3I,IAKJptB,QAAQC,IAAI,mBAAoB21B,GAEhC51B,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,iCACX,iDAICy7B,EAAelsB,MAAQ2rB,GAAkB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAC1E,oCACI,kBAAC,GAAD,CACI63B,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfM,iBAAkBA,IAEtB,kBAAC,IAAD,CACIvpB,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASupB,EAAensB,WACvBmsB,EAAelsB,MAAQ2rB,KAAmB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,IAC3E,kBAAC,KAAD,CAAOyD,YAAY,sBAAsBiD,MAAOkL,KAAMK,yBAGzDqmB,EAAelsB,MAAQ2rB,GAAkB33B,OAAOiC,KAAK01B,GAAe/3B,OAAS,GAC1E,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKk7B,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,SAW1C,yBAAKl7B,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACV27B,EAAiBrsB,WAAa,kBAACmR,GAAD,MAE9Bkb,EAAiBpsB,QAAUosB,EAAiBn1B,KAAKrD,OAAS,IACvD,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,yCAAyCiD,MAAOkL,KAAMK,0BAIhFumB,EAAiBpsB,MAAQosB,EAAiBn1B,MAAQm1B,EAAiBn1B,KAAKrD,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAOfgG,KAAK,QAEL6D,WAAY8e,EAAiBn1B,KAC7BsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAU5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OASjB,kBAAC,GAAD,CACII,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,YACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,+BClI3BslB,G,6MAjJbxkB,MAAQ,CACNwE,KAAM,GACNigB,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAKlBC,YAAc,SAAAC,GAAe,IAAD,EACH,EAAKjT,OAE5BkT,EAH0B,EACnBA,SADmB,EACXvgB,KACQrC,QAAO,SAAAyI,GAAG,OAAIA,IAAQka,O,EAI/CE,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAK1M,MAAMmN,Y,EAGzDC,kBAAoB,SAAAjU,GAClB,EAAK+T,SAAS,CAAEP,WAAYxT,EAAEhE,OAAOxO,S,EAGvC0mB,mBAAqB,WACjBngB,QAAQC,IAAI,qBAAqB,EAAK2M,OADf,IAEjB6S,EAAe,EAAK1kB,MAApB0kB,WAFiB,EAGD,EAAK7S,MAAvBrN,EAHmB,EAGnBA,KAAMugB,EAHa,EAGbA,QACRL,GAAclgB,IAAsC,IAA9BA,EAAK/D,QAAQikB,KACrClgB,EAAI,sBAAOA,GAAP,CAAakgB,KAEnBK,EAAQvgB,GACR,EAAKygB,SAAS,CACZR,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAAnU,GACtB,EAAK+T,SAAS,CAAEL,eAAgB1T,EAAEhE,OAAOxO,QACzCuG,QAAQC,IAAI,WAAWgM,EAAEhE,OAAOxO,Q,EAGlC4mB,uBAAyB,WACvB,EAAKL,UAAS,YAAwC,EAArCN,eAAqC,EAArBC,eAC/B,MAAO,CACLD,gBAAiB,EACjBC,eAAgB,OAIpB,IAAMW,EAAO,YAAO,EAAK1T,MAAMrN,MAC/B+gB,EAAQZ,gBAAkBC,eAC1B,EAAK/S,MAAMkT,QAAQQ,I,EAGrBC,aAAe,SAAAzN,GACb,EAAKA,MAAQA,G,EAGf0N,iBAAmB,SAAA1N,GACjB,EAAK2N,UAAY3N,G,yEAKT,IAAD,SAC8DpK,KAAK3N,MAAlEykB,EADD,EACCA,aAAcC,EADf,EACeA,WAAYC,EAD3B,EAC2BA,eAAgBC,EAD3C,EAC2CA,eAD3C,EAEsBjX,KAAKkE,MAA1BrS,EAFD,EAECA,YAAYgF,EAFb,EAEaA,KAEpB,OACE,oCACGA,GAAQA,EAAKnC,OAAS,GAAKmC,EAAKlE,KAAI,SAACsK,EAAKtI,GACzC,GAAIqiB,IAAmBriB,EACrB,OACE,kBAAC,IAAD,CACEqjB,IAAK,EAAKF,iBACVpiB,IAAKuH,EACLsN,KAAK,QACL1Y,YAAaA,EACbN,UAAU,YACVR,MAAOkmB,EACPhmB,SAAU,EAAKymB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYlb,EAAIvI,OAAS,GAEzB0jB,EACJ,kBAAC,KAAD,CACE7mB,UAAU,WACVmE,IAAKuH,EACLob,SAAoB,IAAV1jB,EACV2jB,QAAS,kBAAM,EAAKpB,YAAYja,KAEhC,0BACEsb,cAAe,SAAAhV,GACC,IAAV5O,IACF,EAAK2iB,SAAS,CAAEN,eAAgBriB,EAAOsiB,eAAgBha,IAAO,WAC5D,EAAK8a,UAAUR,WAEjBhU,EAAEiV,oBAILL,EAAS,UAAMlb,EAAIjI,MAAM,EAAG,IAAnB,OAA8BiI,IAI9C,OAAOkb,EACL,kBAAC,KAAD,CAAS/e,MAAO6D,EAAKvH,IAAKuH,GACvBmb,GAGHA,KAGHtB,GACC,kBAAC,IAAD,CACAnlB,MAAO,CACL2R,OAAQ,UAER0U,IAAKhY,KAAK6X,aACV/mB,KAAK,OACLyZ,KAAK,QACLhZ,UAAU,YACVR,MAAOgmB,EACP9lB,SAAU+O,KAAKwX,kBACfS,OAAQjY,KAAKyX,mBACbS,aAAclY,KAAKyX,sBAGrBX,GACA,kBAAC,KAAD,CAAKvlB,UAAU,yBAAyBiS,QAASxD,KAAKqX,WACpD,kBAACtF,GAAA,EAAD,MADF,mB,GAzIa0G,IAAMC,WC8BvB/W,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAYhE8T,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAQvCtF,GAAgB,CACrB5Q,KAAM,GACNsnB,OAAQ,GACRxgB,YAAa,GACbygB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ9d,MAAO,GACPhI,IAAK,GACLkF,MAAO,IAGAmQ,GAAWC,KAAXD,OAsiBO0Q,GA7hBQ,SAAC,GAA+F,IAA7FxH,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BT,EAA2C,EAA3CA,aAAcnB,EAA6B,EAA7BA,gBAA6B,EAElEtO,GAAe,GAAI,mBAF+C,mBAE9G0X,EAF8G,KAE5FC,EAF4F,OAGvFlV,oBAAS,GAH8E,mBAG9G8L,EAH8G,KAGrGC,EAHqG,OAIrF/L,oBAAS,GAJ4E,mBAI9GyO,EAJ8G,KAIpGJ,EAJoG,OAKrErO,oBAAS,GAL4D,mBAK5FuO,GAL4F,aAMvDvO,oBAAS,GAN8C,mBAM9GmV,EAN8G,KAMrFC,EANqF,OAOvDpV,oBAAS,GAP8C,mBAO9GwO,EAP8G,KAOrF6G,EAPqF,OAQ7DrV,oBAAS,GARoD,mBAQ9GsO,EAR8G,KAQxFgH,EARwF,OAS7EtV,mBAAS,IAToE,mBAS9GuV,EAT8G,KAShGC,EATgG,OAUrExV,mBAAS,IAV4D,mBAU9GyV,EAV8G,KAU5FC,EAV4F,OAWrF1V,mBAAS,IAX4E,mBAW9G2V,EAX8G,KAWpGC,EAXoG,OAYtE5V,oBAAS,GAZ6D,oBAY9G6V,GAZ8G,MAY7FC,GAZ6F,SAanF9V,mBAAS,IAb0E,qBAa9G+V,GAb8G,MAanGC,GAbmG,SAc9FhW,mBAAS,IAdqF,qBAc9GtN,GAd8G,MAczGugB,GAdyG,SAe1FjT,mBAAS,IAfiF,qBAe9GiW,GAf8G,MAevGC,GAfuG,MAkB/GhY,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAhB,EAAA,6DAEd+Y,EAAY1H,EAAWA,EAASjgB,KAAI,SAAAyI,GACzC,OAAOA,EAAMvI,MACT,IAECyhB,EAAW,IAAIC,UAEZG,OAAO,OAAQpS,EAAOjR,KAAKkpB,QACpCjG,EAASI,OAAO,cAAepS,EAAOnK,aACtCmc,EAASI,OAAO,QAAShhB,KAAKC,UAAU2mB,IACxChG,EAASI,OAAO,QAASgF,GAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEhG,EAASI,OAAO,SAAUkF,GAC1BtF,EAASI,OAAO,OAAQwF,IAbJ,UAiBSb,EAAuB,CACnD/lB,KAAM,CACLjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,YACpBiD,MAAOkf,EACPhiB,MAAOohB,GAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDjiB,OAAQuhB,EACR/gB,KAAMqhB,GACNrB,UAAWvW,EAAOuW,UAClBE,gBAAiBzW,EAAOyW,gBACxBE,SAAUpiB,GAAKc,KAAK,KACpB6iB,GAAI,CACH3B,UAAWvW,EAAOwW,YAClBC,gBAAiBzW,EAAO0W,kBACxBC,SAAUmB,GAAOziB,KAAK,KACtBtG,KAAMiR,EAAOqW,OAAO4B,OACpBpiB,YAAamK,EAAOsW,kBAjCH,SAiBd6B,EAjBc,SAwC4B,OAA1BA,EAAe1mB,QAxGNyc,EAyGN,yBAxG1BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,mBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAsG1CqK,GAAyB,GAEzB5B,EAAgB,GAAD,mBAAKmB,GAAL,cACdte,GAAI4nB,EAAc,KAAW,GAC7B/kB,IAAK+kB,EAAc,KAAW,GAC9BppB,KAAMopB,EAAc,MAAY,GAChCtiB,YAAasiB,EAAc,aAAmB,IAE3CA,MAGJlY,EAAQmY,YAERlI,EAAY,IACZmH,EAAgB,IAChBE,EAAoB,IACpBN,GAA2B,GAC3BQ,EAAY,KAGZlE,KAMDtT,EAAQC,eAAc,GApEF,kCAhEU,IAACgO,IAgEX,OAAH,wDAyEZmK,GAAiB,SAACC,GACvBrB,EAA2BqB,IAItBC,GAAe,SAACtX,GACrBqO,GAAyB,IAIpBnP,GAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GA+BhBoY,GAAiB,SAAC/pB,GACvB8oB,EAAoB9oB,IAYrB,SAASqkB,GAAaX,GAiBrB,MAhBiC,eAAdA,EAAK3jB,MAAuC,cAAd2jB,EAAK3jB,MAErD0f,KAAQ9P,MAAM,qCAEA+T,EAAKlK,KAAO,KAAO,KAAO,GAExCiG,KAAQ9P,MAAM,gCAdhB,SAAmBrF,EAAK0f,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc/f,GAerBggB,CAAU5G,GAAM,SAAAqF,GACfC,EAAYD,GACZK,GAAa1F,GACbwF,IAAoB,OAGd,EAIR,IAAMqB,GACL,6BACEtB,GAAkB,kBAACuB,GAAA,EAAD,MAAsB,kBAACxJ,GAAA,EAAD,MACzC,yBAAKxgB,UAAU,mBAAf,WAOF,OAFA+F,QAAQC,IAAI,qBAAqBV,IAGhC,kBAAC,IAAD,CACC8L,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAEN3c,MAAM,wBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,OACNE,MAAOuR,EAAOjR,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBoW,EAAiB1Y,MAAjB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBoW,EAAiB1Y,MAAjB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACzS,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOqW,OACdrnB,YAAa,wFACbD,KAAK,SACLF,QAAU8R,EAAQ0V,QAAU5V,EAAO4V,SAChC3V,GAAgBoW,EAAiB1Y,MAAjB,aAEnBtP,YAAc6R,EAAQ0V,QAAU5V,EAAO4V,SACpC3V,GAAgBoW,EAAiB1Y,MAAjB,aACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACdtG,YAAa,mBACbR,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgBoW,EAAiB1Y,MAAjB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBoW,EAAiB1Y,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,iBACNE,MAAOuR,EAAOsW,cACd/mB,YAAa,yEACbR,KAAK,gBACLF,QAAU8R,EAAQ2V,eAAiB7V,EAAO6V,gBACvC5V,GAAgBoW,EAAiB1Y,MAAjB,oBAEnBtP,YAAc6R,EAAQ2V,eAAiB7V,EAAO6V,gBAC3C5V,GAAgBoW,EAAiB1Y,MAAjB,oBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKvR,MAAO,CACX6V,UAAW,UAGZ,yBAAKjW,UAAU,wBACd,kBAAC,KAAD,CACCqpB,QAAStB,EACToC,gBAAc,EAACzqB,SAAU0pB,KAC1B,yBAAKppB,UAAU,sCACd,kDACA,wBAAIA,UAAU,6BAAd,0CAIA+nB,GACD,oCACC,wBAAI/nB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACC0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,KAChBzS,YAAY,2BACZqY,iBAAiB,WACjBjZ,SAAU6pB,GAIV3Q,aAAc,SAACC,EAAOC,GAAR,OAAwBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAEnG6G,EAAazc,OAAS,GAAKyc,EAAaxe,KAAI,SAAAsF,GAC5C,OAAO,kBAAC,GAAD,CAAQlH,MAAOkH,EAASpF,IAAKoF,EAAS5G,WASjD,yBACCM,MAAO,CACN6V,UAAW,UAKb,yBAAKjW,UAAU,iCACd,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACCqW,UAAU,OAAOxO,MAAO,oCACxB,uBAAG8O,KAAK,OACP,kBAACyT,GAAA,EAAD,SAKH,kBAAC,KAAD,CACChqB,MAAO,CACNC,aAAc,OAEfP,KAAK,SACLglB,SAAS,eACT9kB,UAAU,kBACVqqB,gBAAgB,EAChBxG,aAAcA,GACdL,UAAU,GAET+E,EAAW,yBAAKxa,IAAKwa,EAAUte,IAAI,SAAS7J,MAAO,CAAE2S,MAAO,UAAegX,IAI7E,yBACC3pB,MAAO,CACN6V,UAAW,UAKb,yBAAKjW,UAAU,gCAAgCI,MAAO,CACrD+a,aAAc,SAEd,wBAAInb,UAAU,mBAAd,UACA,kBAAC,KAAD,CACCqW,UAAU,OAAOxO,MAAO,uFACxB,uBAAG8O,KAAK,OACP,kBAACyT,GAAA,EAAD,SAIH,yBAAKpqB,UAAU,gCACbqhB,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,kBAAMmW,EAAgBve,EAAMvI,MAErC,yBAAKyM,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,kBAhRM,SAAC3Q,GAE3B,IAAMgpB,EAAYjJ,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAGrB2f,EAAYqJ,GA0QcC,CAAmB1gB,EAAMvI,KACxCtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIAiD,IAAiBte,EAAMvI,KAInB6mB,GAA0B,IAAV/kB,IAHpB,0BAAMpD,UAAU,4CACf,kBAACmlB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACCtd,MAAO,iBAEP,yBACCoK,QAAS,WACR0M,GAAW,GACXuJ,GAAwB,GACxBD,GAA2B,IAE5BjoB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,UAUJ,kBAACthB,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOuW,UACdvnB,YAAa,cACbD,KAAK,YACLF,QAAU8R,EAAQ4V,WAAa9V,EAAO8V,YACnC7V,GAAgBoW,EAAiB1Y,MAAjB,gBAEnBtP,YAAc6R,EAAQ4V,WAAa9V,EAAO8V,YACvC7V,GAAgBoW,EAAiB1Y,MAAjB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACzS,EAAD,CACCI,MAAM,gBACNE,MAAOuR,EAAOwW,YACdxnB,YAAa,4DACbD,KAAK,cACLF,QAAU8R,EAAQ6V,aAAe/V,EAAO+V,cACrC9V,GAAgBoW,EAAiB1Y,MAAjB,kBAEnBtP,YAAc6R,EAAQ6V,aAAe/V,EAAO+V,cACzC9V,GAAgBoW,EAAiB1Y,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCrS,MAAM,mBACNE,MAAOuR,EAAOyW,gBACdlnB,YAAa,UACbR,KAAK,kBACLF,QAAU8R,EAAQ8V,iBAAmBhW,EAAOgW,kBACzC/V,GAAgBoW,EAAiB1Y,MAAjB,sBAEnBtP,YAAc6R,EAAQ8V,iBAAmBhW,EAAOgW,kBAC7C/V,GAAgBoW,EAAiB1Y,MAAjB,sBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCrS,MAAM,sBACNE,MAAOuR,EAAO0W,kBACdnnB,YAAa,2CACbR,KAAK,oBACLF,QAAU8R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC3ChW,GAAgBoW,EAAiB1Y,MAAjB,wBAEnBtP,YAAc6R,EAAQ+V,mBAAqBjW,EAAOiW,oBAC/ChW,GAAgBoW,EAAiB1Y,MAAjB,wBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAI3R,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEA6lB,QAASA,GACTvgB,KAAMA,KAGN,yBAAKlF,MAAO,CACX6V,UAAU,UAGX,wBAAIjW,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEA6lB,QAASiD,GACTxjB,KAAMujB,MAKP,kBAAC,GAAD,CACClK,WAAYA,EACZD,QAASA,EACTuC,YAAaA,EACbI,SAAUA,EACVF,oBAAqBA,EACrBC,wBAAyBA,EACzBF,qBAAsBA,SCtlBrB7E,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACGrd,IAAXqf,QA4BFC,GAAU,SAAC,GAAoD,IAAnDhY,EAAkD,EAAlDA,KAAMiY,EAA4C,EAA5CA,gBAAiBpJ,EAA2B,EAA3BA,QAA2B,EACnCzC,oBAAS,GAD0B,mBACzD8L,EADyD,KACjDC,EADiD,OAEP/L,oBAAS,GAFF,mBAEzDgM,EAFyD,KAEnCC,EAFmC,OAGP1O,GAAe,GAAI,kBAHZ,mBAGpC2O,GAHoC,WAOxDC,EAAoB,uCAAG,WAAOzd,GAAP,iBAAA0O,EAAA,sEACK8O,EAA0B,CACxDpZ,WAAY,CACVE,aAAc,CACZtE,SAJqB,QACrB0d,EADqB,SAUsB,OAA7BA,EAAkBxc,SA1Cbyc,EA2CJ,0BA1C5BC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,sBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAwCnCoJ,EAAmB5Y,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACzDmd,EAAgBW,IAbc,iCAhCH,IAACH,IAgCE,OAAH,sDAkB5B,OACI,oCACA,kBAAC,KAAD,CAMAjG,KAAK,QAEL6D,WAAYrW,GAER,kBAAC,GAAD,CACFqB,MAAM,GACLoV,UAAU,QACT9Y,IAAI,KACJ4O,MAAO,OAER/S,UAAU,uBAETkd,OAAQ,SAACnW,EAAMoW,GAAP,OACJ,oCACA,yBAAKpP,IAAKhH,EACPkL,QAAS,WACRoD,EAAQU,KAAR,gCAAsCoH,EAAO7b,KAE7Cud,EAAyB1B,IAE7BlT,IAAI,YACJ7J,MAAO,CACH4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAa,MACb8V,OAAQ,iBAKlB,kBAAC,GAAD,CACCtO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEE,wBACElL,QAAS,WACPoD,EAAQU,KAAR,gCAAsCoH,EAAO7b,KAE7Cud,EAAyB1B,IAE3B/c,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGT1O,OASP,kBAAC,GAAD,CACCI,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAKZ,kBAAC,GAAD,CACE6H,MAAM,gBACNoV,UAAU,WACV9Y,IAAI,KACJnE,UAAU,yBAIb,kBAAC,GAAD,CACG6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBAgCb,kBAAC,GAAD,CAEAA,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACV,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,uBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,SAOC,kBAAC,KAAD,CAEAC,UAAW,kBAAMT,EAAqB5B,EAAO7b,KAC7CuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAEnD,0BACG1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAWRf,GAA2B,kBAAC,GAAD,CAC5BH,gBAAiBA,EACjBmB,aAAcpZ,EACdmY,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MA0IClM,iBA/HM,SAAC,GAAsB,IAArB2C,EAAoB,EAApBA,QAAoB,EAEQlF,GAAe,GAAI,oBAF3B,mBAElC0P,EAFkC,KAEnBC,EAFmB,OAGFlN,mBAAS,IAHP,mBAGlCgN,EAHkC,KAGrBnB,EAHqB,KAMzC3O,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACK8P,EAAwB,CAChDpa,WAAY,CACVC,OAAQ,CACNoa,eAAe,EACfC,mBAAmB,MALJ,OACd5a,EADc,OAUpBqZ,EAAgBrZ,GAVI,2CAAH,qDAYnB+a,KACC,IApBuC,MAwBgBvN,oBAAS,GAxBzB,mBAwBlCwN,EAxBkC,KAwBZC,EAxBY,KAkD1C,OAFCta,QAAQC,IAAI,mBAAoB6Z,GAGhC,oCAIE,yBAAK7f,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,qBAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,6BACZ8uB,SAAU,SAAA5vB,GAAK,OA/BF,SAACA,GACpB,GAAGqgB,EAAcrZ,KAAKrD,OAAS,EAAG,CAChC,IAAMic,EAAkBS,EAAcrZ,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACjG0F,EAAgBW,IA4BOmB,CAAa/gB,OAG9B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJtC,YAUA,yBAAKrgB,UAAU,uCAWxB,yBAAKA,UAAU,uCACT6f,EAActQ,MAAQqQ,EAAazc,OAAS,GAAK,kBAAC,GAAD,CAClDkS,QAASA,EACToJ,gBAAiBA,EACjBjY,KAAMoZ,IACLC,EAAcvQ,WAAa,kBAACmR,GAAD,MAE3BZ,EAActQ,QAAUqQ,EAAazc,OAAS,IACpD,yBAAK/C,MAAO,CACX6V,UAAW,SAEX,kBAAC,GAAD,CAAOpO,MAAM,gCAORgY,EAActQ,MACb,kBAACqlC,GAAD,CACAx0B,sBAAuBA,EACvBC,yBAA0BA,EAC1BT,aAAcA,EACdnB,gBAAiBA,QC1UrBrO,IClBmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CDiB7CH,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,2CAKhEuQ,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,0BACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAKvCsO,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAKvCtF,GAAgB,CACrB5Q,KAAM,GACN8G,YAAa,GACbiD,MAAO,GACPhI,IAAK,GACLkF,MAAO,IAgjBOgkB,IA5iBI5T,KAAXD,OAWY,SAAC,GAGiB,IAHf8T,EAGc,EAHdA,oBACtBC,EAEoC,EAFpCA,uBACCC,EACmC,EADnCA,mBACAC,EAAmC,EAAnCA,sBAAmC,EAEehb,GAAe,GAAI,kBAFlC,mBAE7Bib,EAF6B,KAEXC,EAFW,OAGelb,GAAe,GAAI,kBAHlC,mBAG7Bmb,EAH6B,aAI2Cnb,GAAe,GAAI,8BAJ9D,mBAIGob,GAJH,aAKuCpb,GAAe,GAAI,2BAL1D,mBAKCqb,GALD,aAM+Crb,GAAe,GAAI,+BANlE,gCAO2CA,GAAe,GAAI,8BAP9D,mBAOGsb,GAPH,aAQ2Ctb,GAAe,GAAI,6BAR9D,mBAQGub,GARH,aAWJ9Y,oBAAS,GAXL,mBAW7ByO,EAX6B,KAWnBJ,EAXmB,OAYIrO,oBAAS,GAZb,mBAY7B+Y,EAZ6B,KAYfC,EAZe,OAaIhZ,mBAAS,IAbb,mBAa7BuV,EAb6B,KAafC,EAbe,OAcUxV,mBAAS,IAdnB,mBAc7BiZ,EAd6B,KAcZC,EAdY,OAeYlZ,mBAAS,IAfrB,gCAgBJA,mBAAS,KAhBL,oCAiBWA,oBAAS,IAjBpB,qBAiB7B6V,GAjB6B,gBAkBF7V,mBAAS,KAlBP,qBAkB7B+V,GAlB6B,gBAmB0B/V,oBAAS,IAnBnC,iCAwBpC9C,qBAAU,WACT,GAAIob,GAAsB3nB,OAAOiC,KAAK0lB,GAAoB/nB,OAAS,EAAG,CAErE,IAAMgL,EAAS+c,EAAmBrhB,MAC9BsE,GAAUA,EAAOhL,OAAS,IAC7B8d,EAAY9S,GACZ2d,EAAmB3d,IAGhB+c,EAAmBnkB,OAASmkB,EAAmBnkB,MAAnB,KAE/Bka,EAAY,CAACiK,EAAmBnkB,OAArB,mBAA+BoH,KAC1Cia,EAAgB8C,EAAmBnkB,MAAnB,QAIhB,CAACmkB,IAGJpb,qBAAU,WAELuR,GAAYA,EAAS,IAAMA,EAASle,OAAS,GAE5CglB,IAAiB9G,EAAS,GAAG/f,KAChC8mB,EAAgB/G,EAAS,GAAG/f,IAC5ByqB,GAAyB1K,EAAS,OAKlC,CAACA,IAGJ,IAAM2K,GAAuB,uCAAG,WAAM1qB,GAAN,SAAA0O,EAAA,sEACzByb,EAAqC,CAC1C/lB,WAAY,CACXE,aAAc,CACbqmB,QAAS3qB,EACT4qB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,OANC,2CAAH,sDAgBvByqB,GAAwB,uCAAG,WAAMliB,GAAN,eAAAmG,EAAA,sEAEL0b,EAAqC,CAC/DhmB,WAAY,CACXE,aAAc,CACbqmB,QAASpiB,EAAMvI,GACf4qB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,OAPE,QAE1B6qB,EAF0B,SAcY,OAAxBA,EAAa3pB,OAChCue,GAAwB,uBAiBxBuD,GAAsB,mDAhCS,2CAAH,sDAuC9Bve,QAAQC,IAAI,sBAAuBslB,GAEnC,IAAMxa,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAhB,EAAA,2DAGhBsb,GAAoBA,EAAiB/b,MAAQhM,OAAOiC,KAAK0lB,GAAoB/nB,OAAS,GAHtE,uBAKbgL,EAASkT,GAAYA,EAASle,OAAS,EAAIke,EAASjgB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAM,IAEtE,IAAM6M,EAAOhL,OAAS,GAPd,gCAQZooB,EAAqC,CAC1C7lB,WAAY,CACXE,aAAc,CACbsmB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,KAG7BS,KAAM,CACL8H,MAAOsE,KAhBS,mCAoBVA,EAAO,IAAMA,EAAOhL,OAAS,GApBnB,kCAqBZqoB,EAAmC,CACxC9lB,WAAY,CACXE,aAAc,CACbqmB,QAAS9d,EAAO,GAAG7M,GACnB4qB,WAAY,WACZ7hB,OAAQ6gB,EAAmB5pB,OA1BZ,yBAoCO+pB,EAAuB,CACjD3lB,WAAY,CACXE,aAAc,CACbtE,GAAI4pB,EAAmB5pB,KAGzBS,KAAM,CACLjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,YACpBU,KAAMqhB,GACNppB,KAAM,YA9CY,SAoCd6sB,EApCc,SAmDwB,OAAxBA,EAAa5pB,QAChC2oB,EAAsB,eAClBD,EADiB,GAGjBkB,IAEJrmB,QAAQC,IAAI,eAAeomB,GAC3BrmB,QAAQC,IAAI,qBAAqBklB,GAEjCnK,KACAkK,GAAuB,GAgBvBja,EAAQmY,aAIR7E,KAGDtT,EAAQC,eAAc,GApFF,4CAAH,wDA2FlBnB,qBAAU,WACLob,EAAmB3rB,OAGrB,CAAC2rB,IAGJ,IAAM5B,GAAe,SAACtX,GACrBiZ,GAAuB,GACvBhK,GAAY,IAIP/P,GAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GAwDrB,6BACEsX,GAAkB,kBAACuB,GAAA,EAAD,MAAsB,kBAACxJ,GAAA,EAAD,MACzC,yBAAKxgB,UAAU,mBAAf,WAUF,OAFA+F,QAAQC,IAAI,yBAA0Bqb,GAGrC,kBAAC,IAAD,CACCjQ,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,GADO,GACWwa,KAGvB,gBACA3Z,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAEN3c,MAAM,uBACN6W,QAASsM,EACTvG,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,GACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,GAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgB2Z,EAAiBjc,MAAjB,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgB2Z,EAAiBjc,MAAjB,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACC+O,KAAM,EACNphB,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgB2Z,EAAiBjc,MAAjB,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgB2Z,EAAiBjc,MAAjB,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,kBA2ElB,yBACCvR,MAAO,CACN6V,UAAW,UAKb,yBAAKjW,UAAU,gCAEdI,MAAO,CACN+a,aAAc,SAGf,wBAAInb,UAAU,mBAAd,WAQD,yBAAKA,UAAU,gCAEbsrB,GACA,oCACEjK,GAEAA,EAASle,OAAS,GAAKke,EAASjgB,KAAI,SAACyI,EAAOzG,GAC3C,OACC,yBAAKpD,UAAU,sCACd,yBACCA,UAAU,kDACViS,QAAS,WACRmW,EAAgBve,EAAMvI,IACtByqB,GAAyBliB,KAG1B,yBAAKkE,IAAKlE,EAAM9C,MAAOkD,IAAKJ,EAAMI,OAGnC,0BACCgI,QAAS,YA5MI,SAAC3Q,GAET+f,GAAYA,EAASpe,QAAO,SAAA4G,GAC7C,OAAOA,EAAMvI,KAAOA,KAIrB2f,EAAY,IAsMEsJ,CAAmB1gB,EAAMvI,IACzB0qB,GAAwBniB,EAAMvI,KAI/BtB,UAAU,6CACV,kBAACklB,GAAA,EAAD,QAIAiD,IAAiBte,EAAMvI,KAInB6mB,GAA0B,IAAV/kB,IAHpB,0BAAMpD,UAAU,4CACf,kBAACmlB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACCtd,MAAO,iBAEP,yBACCoK,QAAS,WACR2Z,GAAgB,IAEjB5rB,UAAU,4CAIV,kBAACwqB,GAAA,EAAD,MAIA,0BAAMxqB,UAAU,iDACf,kBAACwgB,GAAA,EAAD,YAYP,kBAAC,GAAD,CACC7B,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVwK,gBAAiBA,EACjBC,mBAAoBA,EACpB5K,sBAAsB,UE3kBrB7E,GAAwBC,KAAxBD,OA6YOgQ,IA7YiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACoBxC,GAAe,GAAI,sBADvC,mBAC9Boc,EAD8B,KACTC,EADS,OAEwBrc,GAAe,GAAI,oBAF3C,mBAE9Bsc,EAF8B,KAEPC,EAFO,KAI/B/mB,EAASgnB,eACTtX,EAAUC,eACVsX,EAAajnB,EAAM,GANY,EAOiBiN,oBAAS,GAP1B,mBAO9BoY,EAP8B,KAOTC,EAPS,OAQMrY,mBAAS,IARf,mBAQ9Bia,EAR8B,KAQfC,EARe,KAYrChd,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACewc,EAA0B,CAC3D9mB,WAAY,CACRE,aAAc,CACVtE,GAAIsrB,MAJM,QAChBG,EADgB,SAYlBD,EAAkBC,GAZA,2CAAH,qDAkBvBC,KAED,CAACJ,IAEJ9c,qBAAU,YAEmB,uCAAG,sBAAAE,EAAA,sEAClB0c,EAA4B,CAC9BhnB,WAAY,CACRE,aAAc,CACVtE,GAAIsrB,MAJQ,2CAAH,qDAUzBK,KAED,CAACL,IAKJ7mB,QAAQC,IAAI,0BAA2BumB,GAEvCxmB,QAAQC,IAAI,cAAeL,GAG3B,IA+BMunB,EAAMX,EAAoBhd,MAAQsd,GAAkBA,EAAc,MA/B7C,SAACM,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK/rB,KAAI,SAAAC,GAAI,OAAIA,EAAK0F,SAC7B,IAAMqmB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKlK,SAAQ,SAAC5hB,EAAM+B,GACZiqB,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,sBAA4BF,EAAQE,IAApC,CAAmDjsB,IAElD+rB,EAAQE,GAAgB,CAACjsB,GAE9BgsB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACfvnB,QAAQC,IAAI,aAAcqnB,OAI3BD,EAIyEG,CAAmBV,EAAc,OAAa,GAIlI,OACI,yBAAK7sB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,sDAICusB,EAAoBhd,MAAQsd,GAAmBtpB,OAAOiC,KAAKqnB,GAAgB1pB,OAAS,GACjF,oCACI,kBAAC,GAAD,CACI6nB,oBAAqBA,EACrBC,uBAAwBA,EACxBC,mBAAoB2B,EACpB1B,sBAAuB2B,IAG3B,kBAAC,IAAD,CACI7a,QAAS,kBAAMgZ,GAAuB,IACtC1rB,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAWZ,kBAAC,KAAD,CACIkO,QAAM,EAACC,UAAW,CAAEhN,KAAM,GAC1BxO,QAASqa,EAAoBjd,WAC5Bid,EAAoBhd,MAAQsd,KAAoBtpB,OAAOiC,KAAKqnB,GAAgB1pB,OAAS,IAClF,kBAAC,KAAD,CAAOyD,YAAY,2BAA2BiD,MAAOkL,KAAMK,yBAK9DmX,EAAoBhd,MAAQsd,GAAmBtpB,OAAOiC,KAAKqnB,GAAgB1pB,OAAS,GACjF,oCACI,yBAAKnD,UAAU,gCACX,yBAAKA,UAAU,oGACX,yBAAK+N,IAAK8e,EAAc,OAAaA,EAAc,MAAd,MAAkC5iB,IAAI,MAE/E,yBAAKjK,UAAU,qCACX,4BACK6sB,EAAc,MAEnB,4BACKA,EAAc,aAGlBA,EAAc,KACX,mCAEI,8BACKA,EAAc,QAUlCA,EAAc,MACX,oCACI,yBAAK7sB,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAK+N,IAAK8e,EAAc,MAAYA,EAAc,KAAU5iB,IAAI,OAKxE,yBAAK7J,MAAO,CACR+a,aAAc,WAMzB0R,EAAc,OAAaA,EAAc,MAAU1pB,OAAS,GACzD,oCACI,yBAAKnD,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACVktB,GAAO3pB,OAAOiC,KAAK0nB,GAAK9rB,KAAI,SAAA4b,GACzB,OACI,yBAAKhd,UAAU,qBACVktB,EAAIlQ,IAAWkQ,EAAIlQ,GAAQ5b,KAAI,SAAA0I,GAC5B,OAAO,yBACPG,IAAI,KACJ8D,IAAKjE,EAAK1J,MAAO,CACb2S,MAAO,oBAcvC,yBAAK3S,MAAO,CACR+a,aAAc,WAMzB0R,EAAc,aAAmBA,EAAc,YAAgB1pB,OAAS,GACrE,oCACI,yBAAKnD,UAAU,iCACX,wDAKJ,yBAAKA,UAAU,yBACV6sB,EAAc,YAAgBzrB,KAAI,SAAAiG,GAC/B,OACI,yBACI4K,QAAS,kBAAMoD,EAAQU,KAAR,0BAAgC1O,EAAO/F,MACtDtB,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAK+N,IAAK1G,EAAON,MAAOkD,IAAI,MAEhC,yBAAKjK,UAAU,oCACX,4BACKqH,EAAOvH,YAShC,yBAAKM,MAAO,CACR+a,aAAc,aAYtC,yBAAKnb,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACVysB,EAAsBnd,WAAa,kBAACmR,GAAD,MACnCgM,EAAsBld,QAAUkd,EAAsBjmB,KAAKrD,OAAS,IACjE,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,6CAA6CiD,MAAOkL,KAAMK,0BAIpFqX,EAAsBld,MAAQkd,EAAsBjmB,MAAQimB,EAAsBjmB,KAAKrD,OAAS,GAC7F,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAGfgG,KAAK,QACL6D,WAAY4P,EAAsBjmB,KAClCsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAG1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAM5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OAMjB,kBAAC,GAAD,CACII,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAId,kBAAC,GAAD,CACI6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAId,kBAAC,GAAD,CACI6H,MAAM,YACNoV,UAAU,YACV9Y,IAAI,KACJnE,UAAU,yBAGd,kBAAC,GAAD,CACI6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,+BCzXlCkX,GAAWC,KAAXD,OAIF9G,GAAmBC,MAAaC,MAAM,CAC3ChG,UAAW+F,MACT/Q,MAAM,cACNF,WACAoR,IAAI,EAAG,+CACTjG,SAAU8F,MACR/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,8CACT7F,MAAO0F,MACLjR,SAAS,sCACTw9B,IAAI,GAAI,uCACVnsB,SAAUJ,MACR/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,4CACT5F,SAAUyF,MACR/Q,MAAM,kBACNF,WACAoR,IAAI,EAAG,mDAET9F,MAAO2F,MAAa/Q,MAAM,SAASoL,MAAM,gCAMpCgG,GAAgB,CACrB/F,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVK,SAAU,GACVC,SAAU,GACVgyB,QAAS,GACTpsB,SAAU,IAaL6T,GAAwB,SAACrF,GAC9BC,KAAa/P,MAAM,CAClB8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAgb9B4R,GApaQ,SAAC,GAA+F,IAA7FxH,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0Byc,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElE5sB,GAAe,GAAI,eAF+C,mBAE9G6sB,EAF8G,KAE5FC,EAF4F,OAG7DrqB,mBAAS,IAHoD,mBAG9GsqB,EAH8G,KAGxFC,EAHwF,OAInEvqB,mBAAS,IAJ0D,mBAI9GwqB,EAJ8G,KAI3FC,EAJ2F,OAMzEzqB,mBAAS,IANgE,mBAM9G0qB,EAN8G,KAM9FC,EAN8F,OAO/E3qB,mBAAS,IAPsE,mBAO9G4qB,EAP8G,KAOjGC,EAPiG,OASlEttB,GAClD,GACA,eAXoH,mBAS9GutB,EAT8G,KAS5FC,EAT4F,OAcxExtB,GAAe,GAAI,YAdqD,mBAc9GytB,EAd8G,KAc/FC,EAd+F,OAgB/EjrB,mBAAS,IAhBsE,gCAiBrFA,mBAAS,KAjB4E,mBAsB/G9B,GAtB+G,UAsBnG,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEAESitB,EAAuB,CAEnDl7B,KAAM,CACL4I,MAAOoG,EAAOpG,MACdD,MAAOqG,EAAOrG,MACd+F,SAAUM,EAAON,SACjB7F,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBC,QAAS0yB,EACTzyB,KAAM2yB,KAbY,QAEdU,EAFc,SAmB4B,OAA1BA,EAAet7B,QAlENyc,OAmE9B8B,EAlEF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAiE1C+mB,EAAgB,GAAD,mBAAKD,GAAL,cACdx7B,GAAIw8B,EAAc,IAAU,GAC5B35B,IAAK25B,EAAc,IAAU,IAE1BA,MAEJzd,GAAyB,GACzBrP,EAAQmY,aAGR7E,KAKDtT,EAAQC,eAAc,GArCF,iCA/CU,IAACgO,IA+CX,OAAH,yDA0CZ8e,EAAe,SAACv+B,GACrB69B,EAAqB79B,IAGhBw+B,EAAkB,SAACx+B,GACxB29B,EAAwB39B,IAGzBsQ,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2tB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe96B,OAAS,IAEvCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GAC1C,MAAO,CACNhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGhBy9B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHpuB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACS6tB,EAAoB,CAC7Cn4B,WAAY,CACXE,aAAc,CACb4E,QAAS0yB,MAJK,QACXiB,EADW,SAUEA,EAAYh7B,OAAS,IAEjCq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACpC,MAAO,CACNjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGb29B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAKJ,IAAM5T,EAAe,SAACtX,GACrBqO,GAAyB,IAIpBnP,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAOzG,WACPyG,EAAOxG,UACPwG,EAAON,UACPM,EAAOpG,OACPoG,EAAOnG,WAaV,OALA7E,QAAQC,IAAI,gBAAiB43B,GAM5B,kBAAC,IAAD,CACCxsB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCzR,MAAO,CACNokB,IAAK,QAKNG,UAAW,CACV5S,OAAQ,IACRyE,QAAS,QAEV3O,MAAM,mBACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAK7C,yBAAKnR,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YACnCmH,GAAgBurB,EAAiB7tB,MAAjB,gBAEnBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACvCmH,GAAgBurB,EAAiB7tB,MAAjB,gBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WAClCkH,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACtCkH,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC/B8G,GAAgBurB,EAAiB7tB,MAAjB,YAEnBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QACnC8G,GAAgBurB,EAAiB7tB,MAAjB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC/B+G,GAAgBurB,EAAiB7tB,MAAjB,YAEnBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QACnC+G,GAAgBurB,EAAiB7tB,MAAjB,YACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,cAcpB,yBAAKvR,MAAO,CACXgW,YAAa,SAEb,kBAAClX,EAAD,CACCI,MAAM,WACNE,MAAOuR,EAAON,SACd3Q,KAAK,WACLF,QAAU8R,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAKnB,yBAAK3R,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiB88B,EAAiB7tB,MAAjB,cAA8C,QAAU,GACzEhP,KAAM68B,EAAiB7tB,MAAjB,eAGN,kBAAC,KAAD,CACCkvB,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBACpEsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBjZ,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAUjD,yBAAKE,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiB88B,EAAiB7tB,MAAjB,WAA2C,QAAU,GACtEhP,KAAM68B,EAAiB7tB,MAAjB,YAGN,kBAAC,KAAD,CACCnP,UAAU,kBACVq+B,gBAAiB,kBAAC,KAAD,CAAOz3B,YAAY,yBAAyBiD,MAAOkL,KAAMK,yBAC1EsD,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,aAQlD,yBAAKM,MAAO,CACX6V,UAAW,UAKZ,yBAAKjW,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WAClC6G,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACtC6G,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAK3R,UAAU,yBACd,kBAACd,EAAD,CACCI,MAAM,wBACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WAClC4G,GAAgBurB,EAAiB7tB,MAAjB,eAEnBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACtC4G,GAAgBurB,EAAiB7tB,MAAjB,eACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,uBC9dnBuF,GAAWC,KAAXD,OAGF9G,GAAmBC,MAAaC,MAAM,CACxChG,UAAW+F,MACR/Q,MAAM,aACNF,WACAoR,IAAI,EAAG,+CACVjG,SAAU8F,MACP/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,6CACV7F,MAAO0F,MACJjR,SAAS,sCACTw9B,IAAI,GAAI,uCACXnsB,SAAUJ,MACP/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,4CACV5F,SAAUyF,MACP/Q,MAAM,kBACNF,WACAoR,IAAI,EAAG,mDAEV9F,MAAO2F,MAAa/Q,MAAM,SAASoL,MAAM,gCAerC4Z,GAAwB,SAACrF,GAChCC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAoY/ByU,GAlXG,SAAC,GAA6E,IAA3E7e,EAA0E,EAA1EA,SAAU+S,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAASoe,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EACrC5sB,GAAe,GAAI,kBADkB,mBACvFmuB,EADuF,KAClEC,EADkE,OAIvC3rB,mBAAS,IAJ8B,mBAIvFsqB,EAJuF,KAIlEC,EAJkE,OAK1CvqB,mBAAS,IALiC,mBAKpFwqB,EALoF,KAKlEC,EALkE,OAOhDzqB,mBAAS,IAPuC,mBAOpF0qB,EAPoF,KAOrEC,EAPqE,OAQtD3qB,mBAAS,IAR6C,mBAQpF4qB,EARoF,KAQxEC,EARwE,OAUxCttB,GAC/C,GACA,eAZuF,mBAUpFutB,EAVoF,KAUlEC,EAVkE,OAe5CxtB,GAAe,GAAI,YAfyB,mBAelFytB,EAfkF,KAenEC,EAfmE,OAiBnDjrB,mBAAS,IAjB0C,gCAkBzDA,mBAAS,KAlBgD,mBAuBxF9B,GAvBwF,UAuB5E,uCAAG,WAAOC,EAAcC,GAArB,qBAAAhB,EAAA,sEACauuB,EAA0B,CAC3D74B,WAAY,CACXE,aAAc,CACZtE,GAAIyP,EAAOzP,KAGdS,KAAM,CACL4I,MAAOoG,EAAOpG,MACLD,MAAOqG,EAAOrG,MACd+F,SAAUM,EAAON,SACjB7F,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBC,QAAS0yB,EACTzyB,KAAM2yB,KAhBI,QACboB,EADa,SAsBmC,OAA7BA,EAAkBh8B,QA5Ebyc,OA6E7B8B,EA5EH7B,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA+ElC5S,EAJc,WACrB,OAAO05B,EAAa17B,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQqK,EAAStK,IAG3CupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,QAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuCi7B,IACrDvQ,EAXkD,sBAW9B6O,EAAar5B,MAAM,EAAGL,IAXQ,CAWAE,GAXA,YAWgBw5B,EAAar5B,MAAML,EAAQ,KACnG25B,EAAgB9O,IAIlB3J,KAGCtT,EAAQC,eAAc,GACtB0N,GAAW,GA1CM,iCAtDU,IAACM,IAsDX,OAAH,yDA+CT8e,EAAe,SAACv+B,GAClB69B,EAAqB79B,IAGnBw+B,EAAkB,SAACx+B,GACrB29B,EAAwB39B,IAG/BsQ,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACS2tB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe96B,OAAS,IAEvCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GAC1C,MAAO,CACNhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGhBy9B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACK,IAGHpuB,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACS6tB,EAAoB,CACjCn4B,WAAY,CACRE,aAAc,CACZ4E,QAAS0yB,MAJX,QACXiB,EADW,SAUEA,EAAYh7B,OAAS,IAEjCq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACpC,MAAO,CACNjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGb29B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACK,CAAClB,IAQP,IAAM5T,EAAe,SAACtX,GACf2M,GAAW,IAKVzN,EAA4B,SAACH,EAAOI,GAC3C,QAAIA,GACOJ,EAAOzG,WACPyG,EAAOxG,UACPwG,EAAON,UACPM,EAAOpG,OACPoG,EAAOnG,WAMnB,OACC,kBAAC,IAAD,CACAwG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP9E,KAGL,gBACC2F,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACAhK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAalB,EAAakB,IAChC0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACf/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,IAE5CwT,UAAW,CACE5S,OAAQ,IACRyE,QAAS,SAGnB,yBAAKxW,UAAU,mBACZ,yBAAKA,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YACpCmH,GAAgB6sB,EAAoBnvB,MAApB,gBAElBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACvCmH,GAAgB6sB,EAAoBnvB,MAApB,gBACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,iBAIb,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WACnCkH,GAAgB6sB,EAAoBnvB,MAApB,eAElBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACtCkH,GAAgB6sB,EAAoBnvB,MAApB,eACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,iBAYV,yBAAK3R,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAChC8G,GAAgB6sB,EAAoBnvB,MAApB,YAElBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QACnC8G,GAAgB6sB,EAAoBnvB,MAApB,YACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,aAIb,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAChC+G,GAAgB6sB,EAAoBnvB,MAApB,YAElBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QACnC+G,GAAgB6sB,EAAoBnvB,MAApB,YACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,cActB,yBAAK3R,UAAU,mBACN,yBAAKA,UAAU,yBACf,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACN0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBlZ,aAAcmM,GAAYA,EAASpB,QACnC9K,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACjBmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAIxC,yBAAKE,UAAU,yBACf,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACNP,aAAcmM,GAAYA,EAASnB,KACnCiO,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACdquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOrC,yBAAKM,MAAO,CACR6V,UAAW,UAKf,yBAAKjW,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WACnC6G,GAAgB6sB,EAAoBnvB,MAApB,eAElBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACtC6G,GAAgB6sB,EAAoBnvB,MAApB,eACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,gBAIb,yBAAK3R,UAAU,yBACf,kBAACd,EAAD,CACHI,MAAM,wBACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WACnC4G,GAAgB6sB,EAAoBnvB,MAApB,eAElBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACtC4G,GAAgB6sB,EAAoBnvB,MAApB,eACnBzP,SAAU,SAACsS,GACXT,EAAaS,GACbL,EAAgB,uBC5Zd0K,GAAwBC,KAAxBD,OACAkC,IADwBjC,KAAhBC,YACGrd,IAAXqf,QA+BFC,GAAU,SAAC,GAA0C,IAAzChY,EAAwC,EAAxCA,KAAKu2B,EAAmC,EAAnCA,gBAAmC,EACzBnqB,oBAAS,GADgB,mBAC/C8L,EAD+C,KACvCC,EADuC,OAEG/L,oBAAS,GAFZ,mBAE/CgM,EAF+C,KAEzBC,EAFyB,KAIjDxJ,EAAUC,eAJuC,EAMGnF,GAAe,GAAI,kBANtB,mBAM1BsuB,GAN0B,WAO9CC,EAAoB,uCAAG,WAAOp9B,GAAP,iBAAA0O,EAAA,sEACKyuB,EAA0B,CACxD/4B,WAAY,CACVE,aAAc,CACZtE,SAJqB,QACrBq9B,EADqB,SAWsB,OAA7BA,EAAkBn8B,SA7Cbyc,EA8CJ,iBA7C5BC,KAAavT,QAAQ,CACnBsT,QAASA,GAAW,iBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BA2CnC4oB,EAAmBp4B,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACzDy7B,EAAgB6B,IAdc,iCAlCH,IAAC3f,IAkCE,OAAH,sDAmB5B,OACI,oCACA,kBAAC,KAAD,CAMAjG,KAAK,QAEL6D,WAAYrW,GAGV,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCACE,wBACElL,QAAS,WACPoD,EAAQU,KAAR,0BAAgCoH,EAAO7b,KAEvCud,EAAyB1B,IAE3B/c,MAAO,CACL2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAET1O,OAOP,kBAAC,GAAD,CACCI,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,yBAIV,kBAAC,GAAD,CACA6H,MAAM,UACNoV,UAAU,UACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,kBAAC,KAAD,CAAOnE,KAAK,UAEZ,4BACE,kBAAC,KAAD,KACGvR,QAoCT,kBAAC,GAAD,CAEAzH,UAAU,uBACR6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACN,kBAAC,KAAD,CAAOnE,KAAK,UACV,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,uBAChC,0BAAM7H,UAAU,WAAWiS,QAAS,WAClC0M,GAAW,GACXE,EAAyB1B,KAE3B,kBAACoC,GAAA,EAAD,SASC,kBAAC,KAAD,CAEAC,UAAW,kBAAMkf,EAAqBvhB,EAAO7b,KAC7CuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAElD,0BACE1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAYRf,GAA2B,kBAAC,GAAD,CAC5Bke,aAAct2B,EACdu2B,gBAAiBA,EACjBpe,WAAYA,EACZD,QAASA,EACT9S,SAAUgT,MA4HClM,iBAhHM,SAAC,GAAqB,EAApB2C,QAAqB,IAAD,EAGAzC,mBAAS,IAHT,mBAGhCkqB,EAHgC,KAGnBC,EAHmB,OAKU5sB,GAAe,GAAI,gBAL7B,mBAKhC0uB,EALgC,KAKjBC,EALiB,KAQvChvB,qBAAU,YACS,uCAAG,4BAAAE,EAAA,sEACK8uB,EAAwB,IAD7B,OACbC,EADa,OAGnBhC,EAAgBgC,GAHG,2CAAH,qDAKlBC,KACC,IAMJ,IArByC,EAiCgBpsB,oBAAS,GAjCzB,mBAiClCwN,EAjCkC,KAiCZC,EAjCY,KAuC1C,OACC,oCAIE,yBAAKrgB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,UAKA,kBAAC,GAAD,CACEsgB,aAAa,EACbtgB,UAAU,qBACZM,YAAY,kBACZ8uB,SAAU,SAAA5vB,GAAK,OArCF,SAACA,GACpB,GAAGq/B,EAAcr4B,KAAKrD,OAAS,EAAG,CAChC,IAAMy7B,EAAkBC,EAAcr4B,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACjGgkB,EAAgB6B,IAkCMre,CAAa/gB,OAI7B,kBAAC,IAAD,CAEFQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJtC,YAWA,yBAAKrgB,UAAU,uCAWxB,yBAAKA,UAAU,uCACT6+B,EAActvB,MAAQutB,EAAa35B,OAAS,GAAK,kBAAC,GAAD,CAClD45B,gBAAiBA,EAChBv2B,KAAMs2B,IACN+B,EAAcvvB,WAAa,kBAACmR,GAAD,MAC3Boe,EAActvB,QAAUutB,EAAa35B,OAAS,IACpD,kBAAC,GAAD,CAAO0E,MAAM,qBAMfg3B,EAActvB,MACX,kBAACslC,GAAD,CACA9X,gBAAiBA,EACX3c,sBAAuBA,EACvBC,yBAA0BA,EAC1Byc,aAAc+B,EAAcr4B,WCzU9B0Q,GAAWC,KAAXD,OAGF9G,GAAmBC,MAAaC,MAAM,CACxChG,UAAW+F,MACN/Q,MAAM,aACNF,WACAoR,IAAI,EAAG,+CACZjG,SAAU8F,MACL/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,6CACZ7F,MAAO0F,MACFjR,SAAS,sCACTw9B,IAAI,GAAI,uCACbnsB,SAAUJ,MACL/Q,MAAM,YACNF,WACAoR,IAAI,EAAG,4CACZ5F,SAAUyF,MACL/Q,MAAM,kBACNF,WACAoR,IAAI,EAAG,mDAEZ9F,MAAO2F,MAAa/Q,MAAM,SAASoL,MAAM,gCAevC4Z,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA6XpCyU,GA5WG,SAAC,GAA8C,IAA5C7e,EAA2C,EAA3CA,SAAU+S,EAAiC,EAAjCA,WAAYD,EAAqB,EAArBA,QAAqB,EACHvO,GAAe,GAAI,kBADhB,mBACrDmuB,EADqD,KAChCC,EADgC,OAIJ3rB,mBAAS,IAJL,mBAIrDsqB,EAJqD,KAI/BC,EAJ+B,OAKVvqB,mBAAS,IALC,mBAKrDwqB,EALqD,KAKlCC,EALkC,OAOhBzqB,mBAAS,IAPO,mBAOrD0qB,EAPqD,KAOrCC,EAPqC,OAQtB3qB,mBAAS,IARa,mBAQrD4qB,EARqD,KAQxCC,EARwC,OAUTttB,GAC/C,GACA,eAZwD,mBAUrDutB,EAVqD,KAUnCC,EAVmC,OAefxtB,GAAe,GAAI,YAfJ,mBAerDytB,EAfqD,KAetCC,EAfsC,OAiBtBjrB,mBAAS,IAjBa,gCAkB5BA,mBAAS,KAlBmB,mBAuBtD9B,GAvBsD,UAuB1C,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACeuuB,EAA0B,CACtD74B,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACF4I,MAAOoG,EAAOpG,MACdD,MAAOqG,EAAOrG,MACd+F,SAAUM,EAAON,SACjB7F,SAAUmG,EAAOnG,SACjBC,SAAUkG,EAAOlG,SACjBP,UAAWyG,EAAOzG,UAClBC,SAAUwG,EAAOxG,SACjBC,QAAS0yB,EACTzyB,KAAM2yB,KAhBG,QACXoB,EADW,SAsBqC,OAA7BA,EAAkBh8B,QA3ElByc,OA4ErB8B,EA3ER7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAsFvCsO,KAGJtT,EAAQC,eAAc,GACtB0N,GAAW,GAzCM,iCArDO,IAACM,IAqDR,OAAH,yDA8CZ8e,EAAe,SAACv+B,GAClB69B,EAAqB79B,IAGnBw+B,EAAkB,SAACx+B,GACrB29B,EAAwB39B,IAG5BsQ,qBAAU,YACY,uCAAG,8BAAAE,EAAA,sEACY2tB,EAAuB,IADnC,QACXM,EADW,SAIKA,EAAe96B,OAAS,IAEpCm6B,EAAiBW,EAAe78B,KAAI,SAACoJ,GACvC,MAAO,CACHhL,MAAOgL,EAAQ1K,KACfA,KAAM0K,EAAQ1K,SAGtBy9B,EAAkBD,IAZL,2CAAH,qDAgBlBY,KACD,IAGHpuB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACY6tB,EAAoB,CAC1Cn4B,WAAY,CACRE,aAAc,CACV4E,QAAS0yB,MAJP,QACRiB,EADQ,SAUKA,EAAYh7B,OAAS,IAE9Bq6B,EAAcW,EAAY/8B,KAAI,SAACqJ,GACjC,MAAO,CACHjL,MAAOiL,EAAK3K,KACZA,KAAM2K,EAAK3K,SAGnB29B,EAAeD,IAlBL,2CAAH,qDAsBfY,KACD,CAAClB,IAGJ,IAAM5T,EAAe,SAACtX,GAClB2M,GAAW,IAKTzN,EAA4B,SAACH,EAAQI,GACvC,QAAKA,GACAJ,EAAOzG,WACPyG,EAAOxG,UACPwG,EAAON,UACPM,EAAOpG,OACPoG,EAAOnG,WAMhB,OACI,kBAAC,IAAD,CACIwG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJ9E,KAGR,gBACG2F,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,IAEhDwT,UAAW,CACP5S,OAAQ,IACRyE,QAAS,SAGb,yBAAKxW,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,aACNE,MAAOuR,EAAOzG,UACdxK,KAAK,YACLF,QAAU8R,EAAQpH,WAAakH,EAAOlH,YAChCmH,GAAgB6sB,EAAoBnvB,MAApB,gBAEtBtP,YAAc6R,EAAQpH,WAAakH,EAAOlH,YACpCmH,GAAgB6sB,EAAoBnvB,MAApB,gBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,YACNE,MAAOuR,EAAOxG,SACdzK,KAAK,WACLF,QAAU8R,EAAQnH,UAAYiH,EAAOjH,WAC/BkH,GAAgB6sB,EAAoBnvB,MAApB,eAEtBtP,YAAc6R,EAAQnH,UAAYiH,EAAOjH,WACnCkH,GAAgB6sB,EAAoBnvB,MAApB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,iBAYhC,yBAAK3R,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOpG,MACd7K,KAAK,QACLF,QAAU8R,EAAQ/G,OAAS6G,EAAO7G,QAC5B8G,GAAgB6sB,EAAoBnvB,MAApB,YAEtBtP,YAAc6R,EAAQ/G,OAAS6G,EAAO7G,QAChC8G,GAAgB6sB,EAAoBnvB,MAApB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOrG,MACd5K,KAAK,QACLF,QAAU8R,EAAQhH,OAAS8G,EAAO9G,QAC5B+G,GAAgB6sB,EAAoBnvB,MAApB,YAEtBtP,YAAc6R,EAAQhH,OAAS8G,EAAO9G,QAChC+G,GAAgB6sB,EAAoBnvB,MAApB,YACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,cAchC,yBAAK3R,UAAU,mBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACI0Y,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,mBACZqY,iBAAiB,WACjBlZ,aAAcmM,GAAYA,EAASpB,QACnC9K,SAAUs+B,EACVplB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F2kB,EAAiBnuB,MACdmuB,EAAiBl3B,KAAKrD,OAAS,GAC/Bm6B,EAAel8B,KAAI,SAAC0X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAI5D,yBAAKE,UAAU,yBACX,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACIP,aAAcmM,GAAYA,EAASnB,KACnCiO,YAAU,EACVtY,MAAO,CAAE2S,MAAO,QAChBzS,YAAY,gBACZqY,iBAAiB,WACjBjZ,SAAUq+B,EACVnlB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAO1R,SAAS2R,cAAcxX,QAAQsX,EAAME,gBAAkB,IAE9F6kB,EAAcruB,MACXquB,EAAcp3B,KAAKrD,OAAS,GAC5Bq6B,EAAYp8B,KAAI,SAAC0X,GACb,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOhE,yBAAKM,MAAO,CACR6V,UAAW,UAKf,yBAAKjW,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,UACNE,MAAOuR,EAAOnG,SACd9K,KAAK,WACLF,QAAU8R,EAAQ9G,UAAY4G,EAAO5G,WAC/B6G,GAAgB6sB,EAAoBnvB,MAApB,eAEtBtP,YAAc6R,EAAQ9G,UAAY4G,EAAO5G,WACnC6G,GAAgB6sB,EAAoBnvB,MAApB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,gBAI5B,yBAAK3R,UAAU,yBACX,kBAACd,EAAD,CACII,MAAM,wBACNE,MAAOuR,EAAOlG,SACd/K,KAAK,WACLF,QAAU8R,EAAQ7G,UAAY2G,EAAO3G,WAC/B4G,GAAgB6sB,EAAoBnvB,MAApB,eAEtBtP,YAAc6R,EAAQ7G,UAAY2G,EAAO3G,WACnC4G,GAAgB6sB,EAAoBnvB,MAApB,eACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,uBCtYpD0K,GAAwBC,KAAxBD,OA4OOgQ,IA5OiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACUxC,GAAe,GAAI,aAD7B,mBAC9BsrB,EAD8B,KACdC,EADc,OAEcvrB,GAAe,GAAI,eAFjC,mBAE9BwrB,EAF8B,KAEZC,EAFY,OAGOhpB,oBAAS,GAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,KAM/Bt1B,EAASgnB,eACTtX,EAAUC,eACV6d,EAAQxtB,EAAM,GAyCpB,OAvCAmK,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACb0rB,EAAqB,CACvBh2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB0D,KAED,CAAC1D,IAEJrjB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4rB,EAAuB,CACzBl2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB2I,KAED,CAAC3I,IAKJptB,QAAQC,IAAI,mBAAoB21B,GAEhC51B,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,iCACX,4CAICy7B,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,oCACI,kBAAC2xC,GAAD,CACIp2B,QAASsc,EACTrc,WAAYsc,EACZrvB,SAAU6vB,EAAej1B,OAE7B,kBAAC,IAAD,CACIyL,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASupB,EAAensB,WACvBmsB,EAAelsB,MAAQksB,EAAej1B,QAAUjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,IACvF,kBAAC,KAAD,CAAOyD,YAAY,kBAAkBiD,MAAOkL,KAAMK,yBAGrDqmB,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKy7B,EAAej1B,KAAf,MAEL,4BACKi1B,EAAej1B,KAAf,aAEJi1B,EAAej1B,KAAf,KACG,mCAEI,8BACKi1B,EAAej1B,KAAf,SAW7B,yBAAKxG,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACV27B,EAAiBrsB,WAAa,kBAACmR,GAAD,MAC9Bkb,EAAiBpsB,QAAUosB,EAAiBn1B,KAAKrD,OAAS,IACvD,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,uCAAuCiD,MAAOkL,KAAMK,0BAI9EumB,EAAiBpsB,MAAQosB,EAAiBn1B,MAAQm1B,EAAiBn1B,KAAKrD,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAOfgG,KAAK,QAEL6D,WAAY8e,EAAiBn1B,KAC7BsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAU5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OASjB,kBAAC,GAAD,CACII,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,+BChPpCoQ,GAAmBC,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAchE8T,GAAwB,SAACrF,GAC9BC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBA4I9ByU,GA7HG,SAAC,GAAmE,IAAjE/jB,EAAgE,EAAhEA,SAAUiY,EAAsD,EAAtDA,WAAYD,EAA0C,EAA1CA,QAASoP,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAChC5d,GAAe,GAAI,aADa,mBAC7E6d,EAD6E,KAC7DrD,EAD6D,KAG9E7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAhB,EAAA,sEACO2a,EAA0B,CACpDjlB,WAAY,CACXE,aAAc,CACbtE,GAAIyP,EAAOzP,KAGbS,KAAM,CACLjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATF,QACdwlB,EADc,SAcwB,OAAxBA,EAAa5pB,QA7CFyc,OA8C9B8B,EA7CF7B,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,kBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAgDpC5S,EAJgB,WACrB,OAAO0qB,EAAQ1sB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,MAAIC,QAAQmF,EAASpF,IAGxCupB,GAGRvnB,EAAcC,OAAOC,OAAO,GAAIsqB,EAAQ1qB,GAA1BG,OAAA,IAAAA,CAAA,GAAuC6oB,IACrD6B,EAX2C,sBAWvBH,EAAQrqB,MAAM,EAAGL,IAXM,CAWEE,GAXF,YAWkBwqB,EAAQrqB,MAAML,EAAQ,KACzF2qB,EAAWE,IAIX3J,KAGDtT,EAAQC,eAAc,GACtB0N,GAAW,GAlCS,iCA/BU,IAACM,IA+BX,OAAH,wDAsCZqK,EAAe,SAACtX,GACrB2M,GAAW,IAINzN,EAA4B,SAACH,EAAQI,GAC1C,OAAKJ,EAAOjR,OAASqR,GAMtB,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPhK,KAGL,gBACA6K,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACChK,MAAM,aACN6W,QAASA,EACT+F,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACd/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAG7C,kBAACjS,EAAD,CACCI,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC9B2R,GAAgBuc,EAAe7e,MAAf,WAEnBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAClC2R,GAAgBuc,EAAe7e,MAAf,WACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,WAGlB,kBAAC,GAAD,CACCrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cACrC6K,GAAgBuc,EAAe7e,MAAf,kBAEnBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACzC6K,GAAgBuc,EAAe7e,MAAf,kBACnBzP,SAAU,SAACsS,GACVT,EAAaS,GACbL,EAAgB,wBChInBvB,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAcnE8T,GAAwB,SAACrF,GAC3BC,KAAa/P,MAAM,CACf8P,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAK7CtF,GAAgB,CAClB5Q,KAAM,GACN8G,YAAa,IA2KFmkB,GA9JK,SAAC,GAAqF,IAAnF3K,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0ByN,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WAAwB,EAE5D5d,GAAe,GAAI,UAFyC,mBAE9FgrB,EAF8F,KAEjFC,EAFiF,OAGrExoB,oBAAS,GAH4D,mBAG9FyO,EAH8F,KAGpFJ,EAHoF,OAI7DrO,oBAAS,GAJoD,mBAI9F+Y,EAJ8F,KAIhFC,EAJgF,OAK7DhZ,mBAAS,IALoD,mBAQ/F9B,GAR+F,UAQnF,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACOorB,EAAkB,CACtC11B,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KAAKkpB,OAClBpiB,YAAamK,EAAOnK,eATX,QACXy0B,EADW,SAcqB,OAArBA,EAAU74B,QAvDFyc,OAwDrB8B,EAvDR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,cACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,8BAsDvC+X,EAAW,GAAD,mBAAKD,GAAL,CAAc,CACpBxsB,GAAI+5B,EAAS,IAAU,GACvBl3B,IAAKk3B,EAAS,IAAU,GACxBv7B,KAAMu7B,EAAS,MAAY,GAC3Bz0B,YAAay0B,EAAS,aAAmB,OAE7CrqB,EAAQmY,YACR9I,GAAyB,IAGzBiE,KAIJtT,EAAQC,eAAc,GA/BL,iCAzCO,IAACgO,IAyCR,OAAH,yDAoCZqK,EAAe,SAACtX,GAClBqO,GAAyB,IAIvBnP,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOjR,OAASqR,GAqBzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIzR,MAAO,CACHokB,IAAK,QAET3c,MAAM,cACN6W,QAAS0B,EACTqE,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgB0pB,EAAYhsB,MAAZ,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgB0pB,EAAYhsB,MAAZ,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgB0pB,EAAYhsB,MAAZ,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgB0pB,EAAYhsB,MAAZ,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,mBAM5B,kBAAC,GAAD,CACIgN,WAAYiN,EACZlN,QAASiN,EACT1K,YAAaA,EACbI,SAAUA,EACVH,sBAAsB,SC/K5CH,GAA0B,SAAC9B,GAChCC,KAAavT,QAAQ,CACpBsT,QAASA,GAAW,kBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BA0BrCqG,IAXiBhM,MAAaC,MAAM,CAC3CxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,0CAUtC8L,KAAxBD,QACAkC,IADwBjC,KAAhBC,YACG+P,IAAX/N,QAIFC,GAAU,SAAC,GAA0B,IAAxBhY,EAAuB,EAAvBA,KAAMunB,EAAiB,EAAjBA,WAAiB,EACXnb,oBAAS,GADE,mBAClC8L,EADkC,KACzBC,EADyB,OAEiB/L,oBAAS,GAF1B,mBAElCgM,EAFkC,KAEXC,EAFW,OAGM1O,GAAe,GAAI,aAHzB,mBAGlB8kB,GAHkB,WAKnC5f,EAAUC,eAGV4f,EAAe,uCAAG,WAAO5zB,GAAP,iBAAA0O,EAAA,sEACIilB,EAAqB,CAC/CvvB,WAAY,CACXE,aAAc,CACbtE,SAJoB,QACjB6zB,EADiB,SAYqB,OAAxBA,EAAa3yB,SAChCue,GAAwB,mBAClBqU,EAAa5uB,EAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKC,KAAOA,KACnDysB,EAAWqH,IAfW,2CAAH,sDAiCrB,OACC,oCACC,kBAAC,KAAD,CAMCpc,KAAK,QAEL6D,WAAYrW,GAGZ,kBAAC,GAAD,CACCqB,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACP,oCAEC,wBACClL,QAAS,WACRoD,EAAQU,KAAR,qBAA2BoH,EAAO7b,KAElCud,EAAyB1B,IAE1B/c,MAAO,CACN2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGR1O,OAQL,kBAAC,GAAD,CACCI,MAAM,cACNoV,UAAU,cACV9Y,IAAI,KACJnE,UAAU,yBAKX,kBAAC,GAAD,CACC6H,MAAM,UACNoV,UAAU,eACV9Y,IAAI,KACJnE,UAAU,yBAGX,kBAAC,GAAD,CAECA,UAAU,uBACV6H,MAAM,GACN1D,IAAI,SACJmb,MAAM,QACNpC,OAAQ,SAACzV,EAAM0V,GAAP,OACP,kBAAC,KAAD,CAAOnE,KAAK,UACX,uBAAGrC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMxO,MAAM,kBAC9B,0BAAM7H,UAAU,WAAWiS,QAAS,WACnC0M,GAAW,GACXE,EAAyB1B,KAEzB,kBAACoC,GAAA,EAAD,SAOH,kBAAC,KAAD,CACCC,UAAW,kBAAM0V,EAAgB/X,EAAO7b,KACxCuG,MAAM,qBAAgB4X,OAAO,MAAMC,WAAW,MAC9C,0BACC1f,UAAU,4BAEV,kBAAC2f,GAAA,EAAD,aAaLf,GAAyB,kBAAC,GAAD,CACzBkP,QAAStnB,EACTunB,WAAYA,EACZpP,WAAYA,EACZD,QAASA,EACThY,SAAUkY,MA8ICyW,GApIC,SAAC,GAAgB,qBAGFziB,mBAAS,IAHR,mBAGxBkb,EAHwB,KAGfC,EAHe,OAKQ5d,GAAe,GAAI,WAL3B,mBAKxBwe,EALwB,KAKdC,EALc,KAQ/B9e,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACI4e,EAAmB,IADvB,OACTtpB,EADS,OAGfyoB,EAAWzoB,GAHI,2CAAH,qDAKbugB,KACE,IAf4B,MAmBU1V,GAAe,GAAI,UAnB7B,gCAoB2ByC,oBAAS,IApBpC,mBAoBxBwN,EApBwB,KAoBDC,EApBC,KA8E/B,OACC,oCAEC,yBAAKrgB,UAAU,yBACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,YAKA,kBAAC,GAAD,CACCsgB,aAAa,EACbtgB,UAAU,qBACVM,YAAY,mBACZ8uB,SAAU,SAAA5vB,GAAK,OAvBA,SAACA,GACrB,GAAImvB,EAASnoB,KAAKrD,OAAS,EAAG,CAC7B,IAAMmyB,EAAa3G,EAASnoB,KAAKvD,QAAO,SAAA5B,GAAI,OAAIA,EAAKvB,KAAKiZ,cAAcnY,SAASpB,EAAMuZ,kBACvFgV,EAAWuH,IAoBY/U,CAAa/gB,OAGlC,kBAAC,IAAD,CAECQ,UAAU,6BACVsH,KAAM,kBAACkZ,GAAA,EAAD,MACNvO,QAAS,kBAAMoO,GAAyB,KAJzC,YASD,yBAAKrgB,UAAU,uCACb2uB,EAASpf,MAAQue,EAAQ3qB,OAAS,GAAK,kBAAC,GAAD,CACvC4qB,WAAYA,EACZvnB,KAAMsnB,IACNa,EAASrf,WAAa,kBAACmR,GAAD,MAGtBkO,EAASpf,QAAUue,EAAQ3qB,OAAS,IACpC,yBAAK/C,MAAO,CACX6V,UAAW,SAEX,kBAAC,KAAD,CAAOrP,YAAY,mBAAmBiD,MAAOkL,KAAMK,4BAMvD,kBAAC2/B,GAAD,CACCjnB,QAASA,EACTC,WAAYA,EACZ3N,sBAAuBA,EACvBC,yBAA0BA,MCtVxBjQ,GAAmBC,MAAaC,MAAM,CACxCxQ,KAAMuQ,MAAa/Q,MAAM,QAAQF,SAAS,oBAAoBoR,IAAI,EAAG,wCACrE5J,YAAayJ,MAAa/Q,MAAM,eAAeF,SAAS,6BActDklB,GAAwB,SAACrF,GAC3BC,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,uBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,yBAuIpCyU,GA5HG,SAAC,GAAiE,IAA/DuQ,EAA8D,EAA9DA,eAAgBC,EAA8C,EAA9CA,kBAAmBC,EAA2B,EAA3BA,cAA2B,EAC3B/qB,GAAe,GAAI,aADQ,mBACxE6d,EADwE,KACxDrD,EADwD,KAGzE7Z,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAhB,EAAA,sEACU2a,EAA0B,CACjDjlB,WAAY,CACRE,aAAc,CACVtE,GAAIyP,EAAOzP,KAGnBS,KAAM,CACFjC,KAAMiR,EAAOjR,KACb8G,YAAamK,EAAOnK,eATX,QACXwlB,EADW,SAc2B,OAAxBA,EAAa5pB,QAzCRyc,OA0CrB8B,EAzCR7B,KAAavT,QAAQ,CACjBsT,QAASA,GAAW,kBACpBrY,YAAa,GACbU,KAAM,kBAAC6X,GAAA,EAAD,CAAqB/e,MAAO,CAAE4V,MAAO,+BAoDvCsO,KAGJtT,EAAQC,eAAc,GACtBgqB,GAAkB,GAjCD,iCA3BO,IAAChc,IA2BR,OAAH,wDAqCZqK,EAAe,SAACtX,GAClBipB,GAAkB,IAIhB/pB,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOjR,MAASiR,EAAOnK,aAAgBuK,IAMhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDZ,iBAAkBA,GAClBiB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJwqB,KAGR,gBACG3pB,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIhK,MAAM,eACN6W,QAASsc,EACTvW,KAAM,SAACzS,GAAD,OAAYlB,EAAakB,IAC/B0S,SAAU4E,EACV7J,OAAO,SACPwK,cAAe,CACX/X,QAAST,EACTyY,SAAU,SACVvqB,SAAUuR,EAA0BH,EAAQI,KAGhD,kBAACjS,EAAD,CACII,MAAM,QACNE,MAAOuR,EAAOjR,KACdA,KAAK,OACLF,QAAU8R,EAAQ5R,MAAQ0R,EAAO1R,OAC3B2R,GAAgBuc,EAAe7e,MAAf,WAEtBtP,YAAc6R,EAAQ5R,MAAQ0R,EAAO1R,OAC/B2R,GAAgBuc,EAAe7e,MAAf,WACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIrS,MAAM,cACNE,MAAOuR,EAAOnK,YACd9G,KAAK,cACLF,QAAU8R,EAAQ9K,aAAe4K,EAAO5K,cAClC6K,GAAgBuc,EAAe7e,MAAf,kBAEtBtP,YAAc6R,EAAQ9K,aAAe4K,EAAO5K,cACtC6K,GAAgBuc,EAAe7e,MAAf,kBACtBzP,SAAU,SAACsS,GACPT,EAAaS,GACbL,EAAgB,wBC9H5C0K,GAAwBC,KAAxBD,OA4OOgQ,IA5OiB/P,KAAhBC,YACG+P,IAAX/N,OAOe,SAAC5L,GAAkB,IAAD,EACUxC,GAAe,GAAI,aAD7B,mBAC9BsrB,EAD8B,KACdC,EADc,OAEcvrB,GAAe,GAAI,eAFjC,mBAE9BwrB,EAF8B,KAEZC,EAFY,OAGOhpB,oBAAS,GAHhB,mBAG9BooB,EAH8B,KAGdC,EAHc,KAM/Bt1B,EAASgnB,eACTtX,EAAUC,eACV6d,EAAQxtB,EAAM,GAyCpB,OAvCAmK,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACb0rB,EAAqB,CACvBh2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB0D,KAED,CAAC1D,IAEJrjB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb4rB,EAAuB,CACzBl2B,WAAY,CACRE,aAAc,CACVtE,GAAI6xB,MAJG,2CAAH,qDAUpB2I,KAED,CAAC3I,IAKJptB,QAAQC,IAAI,mBAAoB21B,GAEhC51B,QAAQC,IAAI,cAAeL,GAIvB,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,iCACX,8CAICy7B,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,oCACI,kBAAC6xC,GAAD,CACIha,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeO,EAAej1B,OAElC,kBAAC,IAAD,CACIyL,QAAS,kBAAMgpB,GAAkB,IACjC17B,KAAK,OACL+H,KAAM,kBAACiY,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACImO,UAAW,CAAEhN,KAAM,GACnBxO,QAASupB,EAAensB,WACvBmsB,EAAelsB,MAAQksB,EAAej1B,QAAUjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,IACvF,kBAAC,KAAD,CAAOyD,YAAY,mBAAmBiD,MAAOkL,KAAMK,yBAGtDqmB,EAAelsB,MAAQksB,EAAej1B,MAASjD,OAAOiC,KAAKi2B,EAAej1B,MAAMrD,OAAS,GACtF,yBAAKnD,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKy7B,EAAej1B,KAAf,MAEL,4BACKi1B,EAAej1B,KAAf,aAEJi1B,EAAej1B,KAAf,KACG,mCAEI,8BACKi1B,EAAej1B,KAAf,SAW7B,yBAAKxG,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACV27B,EAAiBrsB,WAAa,kBAACmR,GAAD,MAC9Bkb,EAAiBpsB,QAAUosB,EAAiBn1B,KAAKrD,OAAS,IACvD,yBAAK/C,MAAO,CACR6V,UAAW,UAEX,kBAAC,KAAD,CAAOrP,YAAY,kCAAkCiD,MAAOkL,KAAMK,0BAIzEumB,EAAiBpsB,MAAQosB,EAAiBn1B,MAAQm1B,EAAiBn1B,KAAKrD,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACI/C,MAAO,CACHutB,WAAY,OACZttB,aAAc,iBACdutB,SAAU,SACV5a,UAAW,+FAOfgG,KAAK,QAEL6D,WAAY8e,EAAiBn1B,KAC7BsW,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACH4V,MAAO,qBAMnB,kBAAC,GAAD,CACInO,MAAM,GACNoV,UAAU,QACV9Y,IAAI,KACJ4O,MAAO,OAEP/S,UAAU,uBAEVkd,OAAQ,SAACnW,EAAOoW,GAAR,OACJ,oCACI,yBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1CyM,IAAKhH,EAAOkD,IAAI,YAAY7J,MAAO,CAC/B4U,OAAQ,OACRjC,MAAO,OACPsM,UAAW,UACXhf,aAAc,MACd8V,OAAQ,iBAU5B,kBAAC,GAAD,CACItO,MAAM,OACNoV,UAAU,OACV9Y,IAAI,KACJnE,UAAU,uBACVkd,OAAQ,SAACzV,EAAM0V,GAAP,OACJ,oCACI,wBACIlL,QAAS,WACLoD,EAAQU,KAAR,yBAA+BoH,EAAO7b,MAE1ClB,MAAO,CACH2W,WAAY,IACZf,MAAO,OACPG,OAAQ,YAGX1O,OASjB,kBAAC,GAAD,CACII,MAAM,cACNoV,UAAU,aACV9Y,IAAI,KACJnE,UAAU,yBAKd,kBAAC,GAAD,CACI6H,MAAM,QACNoV,UAAU,QACV9Y,IAAI,KACJnE,UAAU,+BCxNlCsS,GAAYF,KAAZE,QCnCOA,GDyCU,SAACK,GACtB,OACI,kBAAC,GAAD,CACIsiC,UAAU,EACV70C,MAAO,CACHmW,gBAAiB,OACjBoX,WAAY,SAGhB,kBAAC,KAAD,KACI,kBAAC,KAAD,CACIunB,OAAK,EACLnK,KAAK,IACL7tB,OAAQ,kBAAM,kBAAC,KAAD,CAAU3J,GAAG,uBAG/B,kBAAC,KAAD,CACI2hC,OAAK,EACLnK,KAAK,SACL7tB,OAAQ,kBAAM,kBAAC,KAAD,CAAU3J,GAAG,uBAG/B,kBAAC,KAAD,CAAOw3B,KAAK,kBAAkBmK,OAAK,GAC/B,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,kBAAkBmK,OAAK,GAC/B,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,sBAAsBmK,OAAK,GACnC,kBAACC,GAAD,OAOJ,kBAAC,KAAD,CAAOpK,KAAK,mBAAmBmK,OAAK,GAChC,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,eAAemK,OAAK,GAC5B,kBAACE,GAAD,OAEJ,kBAAC,KAAD,CAAOrK,KAAK,mBAAmBmK,OAAK,GAChC,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,iBAAiBmK,OAAK,GAC9B,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,qBAAqBmK,OAAK,GAClC,kBAACG,GAAD,OAGJ,kBAAC,KAAD,CAAOtK,KAAK,gBAAgBmK,OAAK,GAC7B,kBAACI,GAAD,OAGJ,kBAAC,KAAD,CAAOvK,KAAK,oBAAoBmK,OAAK,GACjC,kBAACK,GAAD,OAGJ,kBAAC,KAAD,CAAOxK,KAAK,gBAAgBmK,OAAK,GAC7B,kBAACM,GAAD,OAIJ,kBAAC,KAAD,CAAOzK,KAAK,eAAemK,OAAK,GAC5B,kBAACO,GAAD,OAMJ,kBAAC,KAAD,CAAO1K,KAAK,mBAAmBmK,OAAK,GAChC,kBAACQ,GAAD,OAGJ,kBAAC,KAAD,CAAO3K,KAAK,wBAAwBmK,OAAK,GACrC,kBAACS,GAAD,OAGJ,kBAAC,KAAD,CAAO5K,KAAK,mBAAmBmK,OAAK,GAChC,kBAACU,GAAD,OAGJ,kBAAC,KAAD,CAAO7K,KAAK,uBAAuBmK,OAAK,GACpC,kBAACW,GAAD,OAGJ,kBAAC,KAAD,CAAO9K,KAAK,4BAA4BmK,OAAK,GACxC,kBAACY,GAAD,OAGL,kBAAC,KAAD,CAAO/K,KAAK,oBAAoBmK,OAAK,GACjC,kBAACa,GAAD,OAGJ,kBAAC,KAAD,CAAOhL,KAAK,sBAAsBmK,OAAK,GACnC,kBAAC,GAAD,OAQJ,kBAAC,KAAD,CAAOnK,KAAK,aAAamK,OAAK,GAC1B,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,iBAAiBmK,OAAK,GAC9B,kBAAC3Z,GAAD,OAEJ,kBAAC,KAAD,CAAOwP,KAAK,iBAAiBmK,OAAK,GAC9B,kBAACc,GAAD,OAEJ,kBAAC,KAAD,CAAOjL,KAAK,mBAAmBmK,OAAK,GAChC,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,eAAemK,OAAK,GAC5B,kBAACe,GAAD,OAEJ,kBAAC,KAAD,CAAOlL,KAAK,mBAAmBmK,OAAK,GAChC,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,wBAAwBmK,OAAK,GACrC,kBAAC,GAAD,OAGJ,kBAAC,KAAD,CAAOnK,KAAK,mBAAmBmK,OAAK,GAChC,kBAACgB,GAAD,OAGJ,kBAAC,KAAD,CAAOnL,KAAK,eAAemK,OAAK,GAC5B,kBAACiB,GAAD,OAEJ,kBAAC,KAAD,CAAOpL,KAAK,mBAAmBmK,OAAK,GAChC,kBAACkB,GAAD,OAGJ,kBAAC,KAAD,CAAOrL,KAAK,iBAAiBmK,OAAK,GAC9B,kBAACmB,GAAD,OAGJ,kBAAC,KAAD,CAAOtL,KAAK,qBAAqBmK,OAAK,GAClC,kBAACoB,GAAD,OAGJ,kBAAC,KAAD,CAAOvL,KAAK,kBAAkBmK,OAAK,GAC/B,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,sBAAsBmK,OAAK,GACnC,kBAACqB,GAAD,OAEJ,kBAAC,KAAD,CAAOxL,KAAK,cAAcmK,OAAK,GAC3B,kBAACsB,GAAD,OAEJ,kBAAC,KAAD,CAAOzL,KAAK,kBAAkBmK,OAAK,GAC/B,kBAACuB,GAAD,OAEJ,kBAAC,KAAD,CAAO1L,KAAK,kBAAkBmK,OAAK,GAC/B,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,6BAA6BmK,OAAK,GAC1C,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,wBAAwBmK,OAAK,GACrC,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,yBAAyBmK,OAAK,GACtC,kBAACwB,GAAD,OAEJ,kBAAC,KAAD,CAAO3L,KAAK,0BAA0BmK,OAAK,GACvC,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOnK,KAAK,2BAA2BmK,OAAK,GACxC,kBAACyB,GAAD,OAEJ,kBAAC,KAAD,CAAO5L,KAAK,yBAAyBmK,OAAK,GACtC,kBAAC0B,GAAD,OAEJ,kBAAC,KAAD,CAAO7L,KAAK,6BAA6BmK,OAAK,GAC1C,kBAAC2B,GAAD,OAEJ,kBAAC,KAAD,CAAO9L,KAAK,aAAamK,OAAK,GAC1B,kBAAC,GAAD,OAGJ,kBAAC,KAAD,CAAOnK,KAAK,eAAemK,OAAK,GAC5B,kBAAC4B,GAAD,UE3LLC,GAxBH,WACX,OACC,kBAAC,KAAD,KACC,kBAAC,KAAD,KACC,kBAAC,KAAD,CAAOhM,KAAK,eAAemK,OAAK,GAC/B,kBAAC,GAAD,QAGF,kBAAC,KAAD,KAEC,kBAAC,KAAD,CAAQ90C,MAAO,CAAEm4B,UAAW,UAC3B,kBAAC,GAAD,MAEA,kBAAC,KAAD,CAAQv4B,UAAU,eACjB,kBAAC,GAAD,MACA,kBAAC,GAAD,W,+BC/BAg3C,GAA8B,qBAAbC,SAA2B,4BAA8B,OAsBjEC,GApBI,kBAAO,SAAEnvC,GAAF,OAAY,SAAEhH,GACpC,IAAM6oB,EAAS7hB,EAAMhH,GACrB,IAAMA,EAAOP,OAASO,EAAOP,KAAKC,MAC9B,OAAOmpB,EAHqC,MAMT7oB,EAAOP,KAAtCuqC,EANwC,EAMxCA,KANwC,IAMlCjpC,cANkC,MAMzB,MANyB,EAMlBC,EANkB,EAMlBA,KAE9B,IAAMgpC,EACF,MAAM,IAAIv7B,MAAJ,gDAAqDzO,EAAOxB,OAGtE,IAAMsC,EAAG,UAAOm1C,IAAP,OAAmBjM,GAE5B,OAAO/7B,EAAOnN,EAAKC,EAAQC,GAAOO,MAC9B,SAAAC,GAAG,OAiBX,SAAyBA,EAAKxB,EAAQgH,GAOlC,OANAA,EAAM,CACFxI,KAAK,GAAD,OAAMwB,EAAOxB,KAAb,cACJyD,QAAST,EACT/B,KAAMO,EAAOP,OAGV+B,EAxBI40C,CAAgB50C,EAAKxB,EAAQgH,MACpC,SAAAssB,GAAG,OAMX,SAAuBA,EAAKtzB,EAAQgH,GAOhC,OANAA,EAAM,CACFxI,KAAK,GAAD,OAAMwB,EAAOxB,KAAb,WACJyD,QAASqxB,EACT7zB,KAAMO,EAAOP,OAGViC,QAAQE,OAAQ0xB,GAbZ+iB,CAAc/iB,EAAKtzB,EAAQgH,SCpB1B,CACZ,mBACA,gBACF3B,KAAM,KAEQ,CACZ,oBACA,gBACFA,KAAM,KAEQ,CACZ,yBACA,gBACFA,KAAM,KAEQ,CACZ,kBACA,gBACFA,KAAM,KCZR,IAAMixC,GAAc1yC,YAAgB2yC,GAE9BC,GAAgB,CACpBpzC,IAAK,OACLqzC,QAASA,KACTC,UAAW,CAAC,YAGRC,GAAWC,aAAeJ,GAAeF,IAe/C,IAbwB11C,GAalBi2C,IAbkBj2C,GAaK,GAZpBk2C,YACLH,GACA/1C,GACAm2C,YACEC,YAAgBb,IAChBpS,OAAOkT,6BACHlT,OAAOkT,+BACP,SAACC,GAAD,OAAOA,M,IAOCC,aAAaN,I,eCb9BO,IAASj7B,OACR,kBAAC,IAAD,CAAe06B,MAAOA,IACrB,kBAAC,gBAAD,KACC,kBAAC,GAAD,QAGFX,SAASmB,eAAe,W","file":"static/js/main.15c96f16.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean;\r\n    placeHolder?:string; \r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, \r\n    type, defaultValue,value, onChange, disabled,\r\n     isError, errorString, name,\r\n     placeHolder\r\n    }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n                // rules={[{ required: true }]}\r\n                >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName'\r\n                    placeholder={placeHolder}\r\n                     />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && !currentValue.includes('?')) {\r\n        console.log('currentValue',currentValue);\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n      \r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && currentValue.includes('?')) {\r\n        let fuckValue = currentValue.split('?'); \r\n        if(fuckValue && fuckValue.length > 0){\r\n          fuckValue = fuckValue.map(item => {\r\n            return placeHolders[item.replace(':', '')] ? placeHolders[item.replace(':', '')] : item\r\n          })\r\n        }\r\n        console.log('fuckValue',fuckValue);\r\n        let actualPlaceholderValue = fuckValue.join('?');\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue,'currentVAlue',currentValue);\r\n        console.log('placeHolders',placeHolders);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n    console.log('url',api.url)\r\n    console.log('manupulatedUrl',url);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\nimport { product } from '../state/ducks';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t};\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryList(resData) {\r\n\tconst data = resData.data && resData.data  ? resData.data : [];\r\n\r\n\tconst formatedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((category) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: category._id || '',\r\n\t\t\t\tkey: category._id || '',\r\n\t\t\t\tname: category.name && category.name,\r\n\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\ticon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn formatedData;\r\n};\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDetail(resData) {\r\n\tconst data = resData;\r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\tid: data._id || '',\r\n\t\t\tkey: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tcover: data.cover ? `${config['baseURL']}${data.cover.thumbnail}` : null,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : null,\r\n\t\t}\r\n\t}\r\n\t\r\n};\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\t/**\r\n\t* @public\r\n\t* @method categorySelectist convert api data from API to general format based on config server\r\n\t* @param {Object} data response objectc from alpha\r\n\t* @returns {Object}  converted data\r\n\t*/\r\n\tasync postSelectCategoryList(resData) {\r\n\r\n\t\tconst data = resData.data;\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum'] : 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method postList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postList(resData) {\r\n\tconst data = resData.data;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((post) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: post._id || '',\r\n\t\t\t\tname: post.name && post.name,\r\n\t\t\t\tbody: post.body && post.body,\r\n\t\t\t\tpreparationTime: post.preparationTime && post.preparationTime,\r\n\t\t\t\tservingSize: post.servingSize && post.servingSize,\r\n\t\t\t\tcookingTime: post.cookingTime && post.cookingTime,\r\n\t\t\t\tcover: `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''}`,\r\n\t\t\t\turl: post.url,\r\n\t\t\t\tcategory: post.category,\r\n\t\t\t\ttags: post.tags,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method postDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetail(resData) {\r\n\tconst data = resData;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\tid: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tbody: data.body && data.body,\r\n\t\t\tpreparationTime: data.preparationTime && data.preparationTime,\r\n\t\t\tservingSize: data.servingSize && data.servingSize,\r\n\t\t\tcookingTime: data.cookingTime && data.cookingTime,\r\n\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['medium']) || ''}`,\r\n\t\t\turl: data.url,\r\n\t\t\tproducts: data.requiredProducts,\r\n\t\t\tcategory:\r\n\t\t\t(data.category &&\r\n\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\tdata.category,\r\n\t \t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t}\r\n\t}\r\n\telse return {}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync bundleList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tproduct: product['product'],\r\n\t\t\t\t\tproductCount: product['product'].length,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method bundleDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync bundleDetail(resData) {\r\n\t\tconst data = resData || {};\r\n\r\n\t\tif (Object.keys(data).length > 0) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['thumbnail']) || ''}`,\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t\tproducts: data.product,\r\n\t\t\t\tproductCount: data['product'].length,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse return data;\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n\tconst data = resData && resData.data ? resData.data : [];\r\n\r\n\tconsole.log('getAnalyticsPageVisits',resData); \r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item._id || '',\r\n\t\t\t\tvisit: item.count || '',\r\n\t\t\t\tname: item['detail'] && item['detail'][0] && item['detail'][0]['name'] ,\r\n\t\t\t\turl: item['detail'] && item['detail'][0] && item['detail'][0]['url'] ,\r\n\t\t\t\titemId: item['detail'] && item['detail'][0] && item['detail'][0]['_id'] ,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n\treturn resData; \r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  \tasync getAnalyticsDemographicVisits(resData) {\r\n\r\n\t\tconst data = resData && resData.data ? resData.data : [];\r\n\t\tif(data){\r\n\t\t\treturn data; \r\n\t\t}\r\n\t\telse return []\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n   async getAnalyticsOrders(resData) {\r\n\t   const data = resData.data || []; \r\n\t   return data; \r\n\r\n\t}\r\n\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync getAnalyticsTotalUserCount(resData) {\r\n\t\treturn resData; \r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method customerDetail convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync customerDetail(resData) {\r\n\t\tif(resData){\r\n\t\t\treturn {\r\n\t\t\t\tid: resData._id || '',\r\n\t\t\t\tkey: resData._id || '',\r\n\t\t\t\tfirstName: resData.firstName || '',\r\n\t\t\t\tlastName: resData.lastName || '',\r\n\t\t\t\tname: resData.firstName + ' ' + resData.lastName,\r\n\t\t\t\tcountry: resData.country || '',\r\n\t\t\t\tcity: resData.city || '',\r\n\t\t\t\temail: resData.email || '',\r\n\t\t\t\tphone: resData.phone || '',\r\n\t\t\t\taddress1: resData.address1 || '',\r\n\t\t\t\taddress2: resData.address2 || '',\r\n\t\t\t\tcreated: resData.created || ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return resData; \r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync couponList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tcode: product.code,\r\n\t\t\t\t\tminimumOrder: product.minimumOrder,\r\n\t\t\t\t\tmaximumOrder: product.maximumOrder,\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\torderedProducts: product.orderedProducts,\r\n\t\t\t\t\tfreeProducts: product.freeProducts,\r\n\t\t\t\t\torderedProductsCount: product.orderedProducts && product.orderedProducts.length,\r\n\t\t\t\t\tfreeProductsCount: product.freeProducts && product.orderedProducts.length,\r\n\t\t\t\t\tamountType: product.amountType,\r\n\t\t\t\t\tamount: product.amount,\r\n\t\t\t\t\tfreeDelivery: product.freeDelivery,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tmaxUsePerUser: product.maxUsePerUser,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...tag,\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postTagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync postTagList(resData) {\r\n\tconst data = resData.data;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t\t/**\r\n   * @public\r\n   * @method postTagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagDetail(resData) {\r\n\tconst data = resData; \r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\t...data,\r\n\t\t\tid: data._id || '',\r\n\t\t\tkey: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description\r\n\t\t}\r\n\t}\r\n\telse return {}\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method tagDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync tagDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync pageList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((page) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...page\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n   \r\n\tasync getDeliveryRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync couponDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tcode: data.code,\r\n\t\t\t\tminimumOrder: data.minimumOrder,\r\n\t\t\t\tmaximumOrder: data.maximumOrder,\r\n\t\t\t\torderedProducts: data.orderedProducts | [],\r\n\t\t\t\tfreeProducts: data.freeProducts || [],\r\n\t\t\t\torderedProductsCount: data.orderedProducts && data.orderedProducts.length,\r\n\t\t\t\tfreeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n\t\t\t\tamountType: data.amountType,\r\n\t\t\t\tamount: data.amount,\r\n\t\t\t\tfreeDelivery: data.freeDelivery,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tmaxUsePerUser: data.maxUsePerUser,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n    /**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''}`\r\n\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\tdata.brand &&\r\n\t\t\t\t\t\tObject.keys(data.brand).length > 0 ? {\r\n\t\t\t\t\t\t\tid: data.brand._id,\r\n\t\t\t\t\t\t\tname: data.brand.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${data.brand.cover ? data.brand.cover.original && data.brand.cover.original : ''}`\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tdata.brand,\r\n\t\t\t\tprimaryCategory: data.primaryCategory &&\r\n\t\t\t\t\tObject.keys(data.primaryCategory).length > 0 ? {\r\n\t\t\t\t\t\tid: data.primaryCategory._id,\r\n\t\t\t\t\t\tname: data.primaryCategory.name,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${data.primaryCategory.cover ? data.primaryCategory.cover.original && data.primaryCategory.cover.original : ''}`\r\n\t\t\t\t\t} :\r\n\t\t\t\t\tdata.primaryCategory,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tid: data.updated._id || data.updated.id || '',\r\n\t\t\t\tname: data.updated.name || '',\r\n\t\t\t\tdescription: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.updated.price && data.updated.price['regular'],\r\n\t\t\t\tofferPrice: data.updated.price && data.updated.price['offer'],\r\n\t\t\t\turl: data.updated.url,\r\n\t\t\t\tavailableStock: data.updated.availableStock,\r\n\t\t\t\tminimumStock: data.updated.minimumStock,\r\n\t\t\t\tunit: data.updated.unit,\r\n\t\t\t\tdate: data.updated.date,\r\n\t\t\t\tvenue: data.updated.venue,\r\n\t\t\t\tbrand: data.updated.brand && Object.key(data.updated.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.updated.brand.id,\r\n\t\t\t\t\tname: data.updated.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.updated.price['offer']) > parseInt(data.updated.price['regular'])\r\n\t\t\t\t\t\t? data.updated.price['offer']\r\n\t\t\t\t\t\t: data.updated.price['regular'],\r\n\t\t\t\tpricing: data.updated.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.updated.category &&\r\n\t\t\t\t\t\tdata.updated.category.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.updated.category,\r\n\t\t\t\ttags: data.updated.tags && data.updated.tags.length > 0 ? data.updated.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.updated.cover ? data.updated.cover.original && data.updated.cover.original : ''}`,\r\n\t\t\t\t\tid: data.updated.cover ? data.updated.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.updated.image &&\r\n\t\t\t\t\t\tdata.updated.image.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tstatus: 'ok'\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updatePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updatePage(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBundle(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCoupon(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method pageDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync pageDetail(data) {\r\n\t\tconst convertedData = data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateOrderStatus(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method deletePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deletePage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}; \r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync postAddCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t};\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method addPost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addPost(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postAddTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync postAddTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method addOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n\r\n  async addOrder(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method addPage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addPage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n\t\t\ttype: data.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name'] ? 'Top category' : 'Child category',\r\n\t\t\turl: data.url || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.medium}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method adminRoleRegister convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminRoleRegister(data) {\r\n\t\t//map props\r\n\r\n\t\tif(data && data.length > 0){\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}; \r\n\t}\r\n\r\n\r\n\t\t\t/**\r\n   * @public\r\n   * @method adminList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminList(resData) {\r\n\t\t//map props\r\n\r\n\t\treturn resData; \r\n\t}; \r\n\r\n\r\n\t\t\t\t/**\r\n   * @public\r\n   * @method adminDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminDetail(resData) {\r\n\t//map props\r\n\r\n\treturn resData; \r\n}; \r\n\r\n\r\n\t\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderDetail(data) {\r\n\t\t//map props\r\n\t\tconst order = data.order || false;\r\n\t\tif (order) {\r\n\t\t\treturn {\r\n\t\t\t\tid: order.id || order._id,\r\n\t\t\t\tshippingAddress: order.shippingAddress,\r\n\t\t\t\tname: order.shippingAddress['firstName'] + \" \" + order.shippingAddress['lastName'],\r\n\t\t\t\tcountry: order.shippingAddress['country'],\r\n\t\t\t\tcity: order.shippingAddress['city'],\r\n\t\t\t\taddress: order.shippingAddress['address'],\r\n\t\t\t\tphone: order.shippingAddress['phone'],\r\n\t\t\t\temail: order.shippingAddress['email'],\r\n\t\t\t\tstatus: order.status,\r\n\t\t\t\ttotal: order.totalPrice,\r\n\t\t\t\tdeliveryCharge: order.totalPrice,\r\n\t\t\t\tdeliveryRegion: order.deliveryRegion,\r\n\t\t\t\tdeliveryName: order.deliveryRegion && order.deliveryRegion['name'],\r\n\t\t\t\tdeliveryPickUpLocation: order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\r\n\t\t\t\tdeliveryCountryName: order.deliveryRegion && order.deliveryRegion['countryName'],\r\n\t\t\t\tproducts: order.products && order.products.length > 0 ? order.products.map(product => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\t\tprice: product.price,\r\n\t\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t  : 0,\r\n\t\t\t\t\t\t  minimum: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t\t  : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t}) : [],\r\n\t\t\t\tdate_created: order.added,\r\n\t\t\t\tpaymentMethod: order['payment']['paymentMethod'],\r\n\t\t\t\tpaymentStatus: order['payment']['status'],\r\n\t\t\t\tpayment: order['payment'],\r\n\t\t\t\tcustomerId: order['customer'] ? order['customer']['_id'] : ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}\r\n\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tcustomerId: item.customer['_id']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\t// const isNext = resData.page.next;\r\n\r\n\t\tconsole.log('orderListDAta',data);\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t\t* @public\r\n\t\t* @method orderListForCustomer convert api data from API to general format based on config server\r\n\t\t* @param {Object} data response objectc from wc\r\n\t\t* @returns {Object}  converted data\r\n\t\t*/\r\n\t\tasync orderListForCustomer(resData) {\r\n\t\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t\t// const isNext = resData.page.next;\r\n\r\n\t\t\tlet convertedData =\r\n\t\t\t\t(data.length > 0 &&\r\n\t\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[];\r\n\r\n\t\t\t// convertedData = {\r\n\t\t\t// \tdata: convertedData,\r\n\t\t\t// \tisNext\r\n\t\t\t// };\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getTotalUserCount(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCoupon(data) {\r\n\t\tif (data && data[0]) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined,\r\n    FileAddOutlined,\r\n    FileSearchOutlined,\r\n    BgColorsOutlined,\r\n    BankOutlined,\r\n    FireOutlined,\r\n    MailTwoTone,\r\n    UserAddOutlined,\r\n    FileExcelOutlined,\r\n    CalculatorOutlined,\r\n    CustomerServiceOutlined,\r\n    MoneyCollectOutlined,\r\n    UsergroupAddOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>Products</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BankOutlined />}\r\n                        key='2222'>\r\n                        <Link to='/admin/bundle'>Bundle</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brand</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                    key='sub333'\r\n                    icon={<GoldOutlined />}\r\n                    title='Recipies'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='655'>\r\n                        <Link to='/admin/posts'>List Recipe</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<TagOutlined />}\r\n                        key='2222444'>\r\n                        <Link to='/admin/posts/category'>Recipe Category</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='955' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/posts/tag'>Recipe Tags</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\r\n                    <Link to='/admin/posts'>\r\n                        Recipies\r\n                    </Link>\r\n                </Menu.Item> */}\r\n\r\n                <Menu.Item key='1011' icon={<FireOutlined />}>\r\n                    <Link to='/admin/coupon'>Coupon</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n                \r\n                <SubMenu\r\n                    key='sub33'\r\n                    icon={<CalculatorOutlined />}\r\n                    title='Accounting'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<UsergroupAddOutlined />}\r\n                        key='66'>\r\n                        <Link to='/admin/staff'>\r\n                            Staff\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<MoneyCollectOutlined />}\r\n                        key='67'>\r\n                        <Link to='/admin/expense'>\r\n                            Expense\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='11222'>\r\n                        <Link to='/admin/order/overview'>\r\n                            Order Analytics\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='1888' icon={<MailOutlined />}>\r\n                    <Link to='/admin/email'>Email</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='18'\r\n                        icon={<FileSearchOutlined />}\r\n                    >\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<FileAddOutlined />}\r\n                        key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<UserAddOutlined />}\r\n                        key='19999'>\r\n                        <Link to='/admin/settings/admins'>Admins</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BgColorsOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n     BellOutlined, \r\n     OrderedListOutlined,\r\n    TwitterSquareFilled,\r\n    ShoppingCartOutlined,\r\n    UserOutlined,\r\n     } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nconst { Header } = Layout;\r\n\r\n\r\n// import styles\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                backgroundColor:\"#fff\",\r\n                padding: '0 50px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div \r\n                className='notificationListItemContainer'\r\n                style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    backgroundColor:\"#fff\",\r\n                    padding: '0 50px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div \r\n            style={{\r\n                \r\n            }}\r\n            className='notificationListItemContainer'>\r\n                                 \r\n                                 {getAllNotificationState.done\r\n                 && getAllNotificationState.data[0]\r\n                 && (\r\n                    <div style={{\r\n                      \r\n                    }}>\r\n                    <div style={{\r\n                        width:'100%',\r\n                        display:'flex',\r\n                        justifyContent:\"space-around\",\r\n                    }}>\r\n                    <a\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#f7f7f7' ,\r\n                          padding:\"10px\",\r\n                          width:'50%',\r\n                          fontSize:'13px'\r\n\r\n                     }}\r\n                      href=\"##\">\r\n                        CLEAR ALL\r\n                     </a>\r\n                     <a\r\n                     onClick={() => history.push('/admin/notification')}\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#eee'   ,\r\n                          padding:\"10px\",\r\n                          width:'50%' ,\r\n                          fontSize:'13px'\r\n                     }}\r\n                      href=\"##\">\r\n                      SEE ALL \r\n                     </a>\r\n                    </div>\r\n                    </div>\r\n                 )\r\n               }\r\n\r\n            {getAllNotificationState.done\r\n            && getAllNotificationState.data[0]\r\n            && getAllNotificationState.data.map((item,index) => {\r\n                console.log('itemNotification',item);\r\n            return (\r\n            <div\r\n              onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n              className={!item.read ? 'notificationListItemContainer__item notificationListItemContainer__item-active' : 'notificationListItemContainer__item'}>\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                    <h3>\r\n                        {item.heading}\r\n                    </h3>\r\n                    <h4>\r\n                        {item.text}\r\n                    </h4>\r\n                    <h2>\r\n                    <Moment >\r\n                        {item.added}\r\n                    </Moment>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    })}\r\n</div>\r\n\r\n          \r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Admin\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n\r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            // @ts-ignore\r\n                            showZero={TwitterSquareFilled}\r\n                            count={getAllNotificationState.done && !getAllNotificationState.data ? 0 : getAllNotificationState.data.length ? getAllNotificationState.data.length : 0}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty,DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment'; \r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue,startDate,endDate])\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\r\n\r\n\r\n\r\n    \r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n    \r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return order ? MONTHS[order - 1] : order; ;\r\n        }\r\n        return order; \r\n    }\r\n    \r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n       if(e && e[0]){\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n       }\r\n      \r\n    }; \r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n              <Spin size='large' />\r\n            </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker \r\n                  showTime={true}\r\n                  onChange={handleStartEndDateRangeDate}\r\n                  bordered={false}\r\n                  picker=\"date\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty, DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('ordersDataRes',ordersDataRes); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[selectedApiValue,startDate,endDate]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return MONTHS[order - 1];\r\n        }\r\n        return order; \r\n    }\r\n\r\n    const getDatePickerValue = () => {\r\n        if (selectedApiValue === 'hour'){\r\n            return 'time';\r\n        }\r\n        if (selectedApiValue === 'month'){\r\n            return 'month';\r\n        }\r\n        else if (selectedApiValue === 'dayOfWeek'){\r\n            return 'week';\r\n        }\r\n        else if (selectedApiValue === 'year'){\r\n            return 'year';\r\n        }\r\n        \r\n        return 'date'; \r\n    }\r\n    \r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n        console.log('dateOrder',moment(e[0]).format());\r\n        console.log('dateOff',moment(e[1]).format());\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n    }; \r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Orders \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All orders that visited\r\n                        </h3>\r\n                </div>\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n                <Spin size='large' />\r\n             </div>\r\n            </>\r\n          )}\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Orders Created`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                        dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker\r\n                    showTime={true}\r\n                    onChange={handleStartEndDateRangeDate}\r\n                    picker={'date'} \r\n                    bordered={false}\r\n                    />\r\n            </div>\r\n        </div>\r\n    ); \r\n\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `${selectedApiValue} Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport OrderOverView from \"./OrderOverView\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t{/* <div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n */}\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<OrderOverView />\r\n\t\t\t<ApiVisits />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true,\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1'\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n    placeholder?:any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, \r\n    onChange, disabled, isError,\r\n     errorString, name, rows = 4,\r\n     placeholder\r\n     }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} \r\n                    placeholder={placeholder}\r\n                    />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlimitNumber: 10000,\r\n\t\t\t\t\tsortItem: 'added',\r\n\t\t  \t\t\tsortOrderValue: '-1'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/api/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst xflelist = filelist;\r\n\t\t\t\treturn [...xflelist, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={true}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n\tsetcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, \r\n\tsetCategoryEditVisible,\r\n\t categoryDetailData,\r\n\t setcategoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateTagRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateTagRes\r\n\t\t\t})\r\n\t\t\tconsole.log('updateTagRes',updateTagRes);\r\n\t\t\tconsole.log('categoryDetailData',categoryDetailData);\r\n\t\t\t// setcategoryDetailData()\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Edit\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n<Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React from 'react';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n\r\n            setBundleList([{\r\n                id: addProductRes['_id'] || '',\r\n                key: addProductRes['_id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            },...bundleList])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const handleStartDataChange = (date, dateString) => {\r\n        setStartDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleEndDataChange = (date, dateString) => {\r\n        setEndDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                {/* <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n\r\n                                {productDetailState.data['description'] && (\r\n                                    <h3>\r\n                                    {productDetailState.data['description']}\r\n                                    </h3>\r\n                                )}\r\n                              \r\n\r\n                                {/* {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['startDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['endDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )} */}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([{\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t},...brandList]); \r\n\t\t\t\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n    brandList?:any; \r\n    setBrandList?:any; \r\n    \r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, \r\n    brandEditVisible, setBrandEditVisible,\r\n    brandList, \r\n    setBrandList,\r\n }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover, ...images]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            console.log('updateBrandRes',updateBrandRes);\r\n           \r\n            setBrandList([{\r\n                ...brandDetailData,\r\n\t\t\t\tid: updateBrandRes['id'] || '',\r\n\t\t\t\tkey: updateBrandRes['id'] || '',\r\n\t\t\t\tname: updateBrandRes['name'] || '',\r\n\t\t\t\tdescription: updateBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateBrandRes\r\n\t\t\t},...brandList]); \r\n\r\n            openSuccessNotification('Brand Updated!');\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages); \r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(brandDetailData && Object.keys(brandDetailData).length > 0){\r\n            const metaTags = brandDetailData.metaTags && brandDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = brandDetailData.bn && brandDetailData.bn['metaTags'] && brandDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n    console.log('brandEdit',brandDetailData);\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, \r\n                    ...brandDetailData,\r\n                    ...( brandDetailData && Object.keys(brandDetailData).length > 0 && {\r\n                        bnMetaTitle: brandDetailData['bn']\r\n                        && brandDetailData['bn'].metaTitle\r\n                        && brandDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: brandDetailData['bn'] &&  brandDetailData['bn'].metaDescription && brandDetailData['bn'].metaDescription,\r\n                        bnName: brandDetailData['bn'] && brandDetailData['bn'].name && brandDetailData['bn'].name,\r\n                        bnDescription: brandDetailData['bn'] && brandDetailData['bn'].description && brandDetailData['bn'].description,\r\n                    })\r\n                }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                \t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\n\r\n// @ts-ignore\r\nimport BrandQuickEdit from \"./BrandQuickEdit\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Brand Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n        <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <BrandQuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setBrandEditVisible={setvisible}\r\n    brandEditVisible={visible}\r\n    brandDetailData={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({\r\n      urlOptions:{\r\n        params: {\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1'\r\n        }\r\n        }\r\n     }); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n    setBrandDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, brandEditVisible, setBrandEditVisible,setBrandDetailData }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover, ...images]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            console.log('updateBrandRes',updateBrandRes);\r\n            setBrandDetailData({\r\n                ...brandDetailData,\r\n                // @ts-ignore\r\n                ...updateBrandRes\r\n            })\r\n            openSuccessNotification();\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages); \r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(brandDetailData && Object.keys(brandDetailData).length > 0){\r\n            const metaTags = brandDetailData.metaTags && brandDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = brandDetailData.bn && brandDetailData.bn['metaTags'] && brandDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags)\r\n            setBnTags(bnMetaTags)\r\n        }\r\n\r\n    },[])\r\n\r\n    console.log('brandEdit',brandDetailData);\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, \r\n                    ...brandDetailData,\r\n                    ...( brandDetailData && Object.keys(brandDetailData).length > 0 && {\r\n                        bnMetaTitle: brandDetailData['bn']\r\n                        && brandDetailData['bn'].metaTitle\r\n                        && brandDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: brandDetailData['bn'] &&  brandDetailData['bn'].metaDescription && brandDetailData['bn'].metaDescription,\r\n                        bnName: brandDetailData['bn'] && brandDetailData['bn'].name && brandDetailData['bn'].name,\r\n                        bnDescription: brandDetailData['bn'] && brandDetailData['bn'].description && brandDetailData['bn'].description,\r\n                    })\r\n                }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                \t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n    const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(brandDetailRes){\r\n                // @ts-ignore\r\n                setBrandDetailData(brandDetailRes)\r\n            }; \r\n\r\n\r\n            console.log('brandDetailRes',brandDetailRes);\r\n\r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailData}\r\n                            setBrandDetailData={setBrandDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setBrandEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailData && !(Object.keys(brandDetailData).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailData['cover'] && brandDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailData['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n\tpricingItem?:any; \r\n\thandleUpdatePricing?:any;\r\n\tisPricingEditActive?:any; \r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing,\r\n\tpricingItem,\r\n\thandleUpdatePricing,\r\n\tisPricingEditActive\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(pricingItem && Object.keys(pricingItem).length > 0){\r\n\t\t\tsetprice({\r\n\t\t\t\t...price,\r\n\t\t\t\t...pricingItem['price']\r\n\t\t\t})\r\n\r\n\t\t\tsetStock({\r\n\t\t\t\t...stock,\r\n\t\t\t\t...pricingItem['stock']\r\n\t\t\t}); \r\n\r\n\t\t\tconst attributeListItems = []; \r\n\t\t\tif(pricingItem.attribute && Object.keys(pricingItem.attribute).length > 0){\r\n\t\t\t\tconst attributeKeys = Object.keys(pricingItem.attribute); \r\n\t\t\t\tattributeKeys.forEach((attributeKey,index) => {\r\n\t\t\t\t\tattributeListItems.push({\r\n\t\t\t\t\t\tname : attributeKey,\r\n\t\t\t\t\t\tvalue : pricingItem.attribute[attributeKey],\r\n\t\t\t\t\t\tid: index\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetAttributeList(attributeListItems); \r\n\r\n\t\t}\r\n\t},[pricingItem])\r\n\r\n\tconsole.log('pricingItem',pricingItem); \r\n\tconsole.log('attributeList',attributeList); \r\n\r\n\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}; \r\n\r\n\r\n\r\n\t\r\n\tconst handleUpdatePricingItem = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute,\r\n\t\t\t\tid : pricingItem.id\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleUpdatePricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {},\r\n\t\t\t\tid : pricingItem.id\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleUpdatePricing(priceItem);\r\n\t\t}\r\n\r\n\t}; \r\n\r\n\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={isPricingEditActive ? handleUpdatePricingItem :  handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\t{isPricingEditActive ? \"Update Pricing\" : \"Add To Pricing\"}\r\n\t\t\t\t\r\n\t\t\t\t</Button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('1');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([{\r\n\t\t\t\tid: addProductRes['_id'] || '',\r\n\t\t\t\tkey: addProductRes['_id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t},...productList])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !(categoryids.length > 0)  || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n\t}\r\n\r\n\r\n\tconst handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('pricingingi',pricing);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMeta Data\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setMetaTags}\r\n\t\t\t\t\t\t\ttags={metaTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnMetaTags}\r\n\t\t\t\t\t\t\ttags={bnMetaTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories *\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    productList?:any; \r\n    setProductList?:any; \r\n    \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductList, \r\n    productList\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n                metaTags: metaTags.join(','),\r\n                \r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...productDetailData, ...updatedProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateProductList);\r\n            \r\n\r\n            setProductEditVisible(false);\r\n\r\n\r\n            // setProductDetailData({\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes,\r\n            //     category: productDetailData.category,\r\n            //     brand: productDetailData.brand,\r\n            //     tags: productDetailData.tags,\r\n            //     cover: productDetailData.cover,\r\n            //     image: productDetailData.image,\r\n            // }); \r\n\r\n\r\n            // console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n    }\r\n    \r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n    const handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n    \r\n\r\n    console.log('productDetailData')\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information *\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                               BN Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnDescription}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBNDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                            \r\n                                    <div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    \r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                            Meta Data\r\n                                        </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                                        \r\n                                        <Input\r\n                                        label='Meta title'\r\n                                        value={values.metaTitle}\r\n                                        placeHolder={'category...'}\r\n                                        name='metaTitle'\r\n                                        isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n\r\n                                        errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle')\r\n                                        }}\r\n                                        />\r\n\r\n                                        <Input\r\n                                        label='BN Meta title'\r\n                                        value={values.bnMetaTitle}\r\n                                        placeHolder={'ক্যাটাগড়ি...'}\r\n                                        name='bnMetaTitle'\r\n                                        isError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n\r\n                                        errorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaTitle');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='Meta description'\r\n                                        value={values.metaDescription}\r\n                                        placeholder={'meta...'}\r\n                                        name='metaDescription'\r\n                                        isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n\r\n                                        errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='BN Meta Description'\r\n                                        value={values.bnMetaDescription}\r\n                                        placeholder={'এইয় মেট...'}\r\n                                        name='bnMetaDescription'\r\n                                        isError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n\r\n                                        errorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Meta Tags (grocery,fashion)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setMetaTags}\r\n                                        tags={metaTags}\r\n                                        />\r\n\r\n                                        <div style={{\r\n                                        marginTop:'15px'\r\n                                        }}></div>\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setBnMetaTags}\r\n                                        tags={bnMetaTags}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductQuickEdit from \"./ProductQuickEdit\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n                      <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <ProductQuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setProductEditVisible={setvisible}\r\n        productEditVisible={visible}\r\n        productDetailData={activeCategoryForEdit} />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1'\r\n          }\r\n        }\r\n      });\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onChange={e => handleSearch(e.target.value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    setProductDetailData?:any; \r\n    \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductDetailData\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('1');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category.map(item => item.id);\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setProductEditVisible(false);\r\n            setProductDetailData({\r\n                // @ts-ignore\r\n                ...updatedProductRes,\r\n                category: productDetailData.category,\r\n                brand: productDetailData.brand,\r\n                tags: productDetailData.tags,\r\n                cover: productDetailData.cover,\r\n                image: productDetailData.image,\r\n            }); \r\n\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryids.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n\t}\r\n\r\n\r\n\tconst handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n    \r\n\r\n    console.log('productDetailData')\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                               BN Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnDescription}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBNDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                \r\n                                    <div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    \r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                            Meta Data\r\n                                        </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                                        \r\n                                        <Input\r\n                                        label='Meta title'\r\n                                        value={values.metaTitle}\r\n                                        placeHolder={'category...'}\r\n                                        name='metaTitle'\r\n                                        isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n\r\n                                        errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle')\r\n                                        }}\r\n                                        />\r\n\r\n                                        <Input\r\n                                        label='BN Meta title'\r\n                                        value={values.bnMetaTitle}\r\n                                        placeHolder={'ক্যাটাগড়ি...'}\r\n                                        name='bnMetaTitle'\r\n                                        isError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n\r\n                                        errorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaTitle');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='Meta description'\r\n                                        value={values.metaDescription}\r\n                                        placeholder={'meta...'}\r\n                                        name='metaDescription'\r\n                                        isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n\r\n                                        errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='BN Meta Description'\r\n                                        value={values.bnMetaDescription}\r\n                                        placeholder={'এইয় মেট...'}\r\n                                        name='bnMetaDescription'\r\n                                        isError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n\r\n                                        errorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Meta Tags (grocery,fashion)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setMetaTags}\r\n                                        tags={metaTags}\r\n                                        />\r\n\r\n                                        <div style={{\r\n                                        marginTop:'15px'\r\n                                        }}></div>\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setBnMetaTags}\r\n                                        tags={bnMetaTags}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductEdit from \"./ProductEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n    const [productDetailData,setProductDetailData] = useState({}); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            const productDetailRes = await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(productDetailRes){\r\n                // @ts-ignore\r\n                setProductDetailData(productDetailRes); \r\n            };\r\n\r\n            console.log('productDetailRes',productDetailRes);\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailData && productDetailData['image'] ? getImagesInCollumn(productDetailData['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Product Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <ProductEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailData}\r\n                            setProductDetailData={setProductDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailData && !(Object.keys(productDetailData).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailData['cover'] && productDetailData['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailData['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailData['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailData['description']}\r\n                                </h3>\r\n\r\n\r\n                                {productDetailData['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailData['category'] && productDetailData['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailData['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailData['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailData['icon'] && productDetailData['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['pricing'] && productDetailData['pricing'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Pricing\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__pricing'>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                                        {productDetailData['pricing'].map(item => {\r\n                                            return (\r\n                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                        <div>\r\n                                                            <h3>\r\n                                                                Price\r\n    </h3>\r\n                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                {item.price.offer ? (\r\n                                                                    <>\r\n                                                                        <h4 >\r\n                                                                            {item.price.offer}\r\n\r\n                                                                        </h4>\r\n                                                        /\r\n                                                        <h5 style={{\r\n                                                                            textDecoration: \"line-through\"\r\n                                                                        }}>\r\n\r\n                                                                            {item.price.regular}\r\n                                                                        </h5>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                        <h4>\r\n                                                                            {item.price.regular}\r\n\r\n                                                                        </h4>\r\n                                                                    )}\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {item.stock && (\r\n                                                            <div>\r\n                                                                <Badge\r\n                                                                    overflowCount={999}\r\n                                                                    count={item.stock.available}>\r\n                                                                    <h3>\r\n                                                                        Stock\r\n                </h3>\r\n                                                                </Badge>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    <div>\r\n                                                                        <h6>\r\n                                                                            min\r\n                                                                        <Badge\r\n                                                                                className=\"site-badge-count-4\"\r\n                                                                                overflowCount={999}\r\n                                                                                count={item.stock.minimum} />\r\n                                                                        </h6>\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                    {item.attribute\r\n                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                            <>\r\n                                                                <h3>\r\n                                                                    Attributes\r\n    </h3>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    {item.attribute\r\n                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                            return (\r\n                                                                                <div>\r\n                                                                                    <h6>\r\n                                                                                        {attributeItem}\r\n                                                                                    </h6>\r\n                                                                                    <h4>\r\n                                                                                        {item.attribute[attributeItem]}\r\n                                                                                    </h4>\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailData['image'] && productDetailData['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['brand'] && Object.keys(productDetailData['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailData['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['brand']['cover'] && productDetailData['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailData['primaryCategory'] && Object.keys(productDetailData['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailData['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['primaryCategory']['cover'] && productDetailData['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            // setTagDetailData({\r\n            //     id:values.id,\r\n            //     key:values.id,\r\n            //     name: values.name,\r\n            //     description: values.description,\r\n            // })\r\n\r\n            setTagList([{\r\n                id: updateTagRes['_id'] || '',\r\n                key: updateTagRes['_id'] || '',\r\n                name: updateTagRes['name'] || '',\r\n                description: updateTagRes['description'] || '',\r\n                ...tagDetailData\r\n            },...tagList])\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport TagQuickEdit from \"./TagQuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <TagQuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\ttagEditVisible={setvisible}\r\n\t\t\t\tsetTagEditVisible={visible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({\r\n\t\t\t\turlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n          \t\t\t\t</h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonChange={e => handleSearch(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Coupon Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('tagDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailState.data['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['freeDelivery'] && (\r\n                                <h3>\r\n                                    FREE DELIVERY:\r\n                                    <span>\r\n                                        {tagDetailState.data['freeDelivery']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['orderedProducts'] && !(tagDetailState.data['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['orderedProducts'] && tagDetailState.data['orderedProducts'].length > 0 &&\r\n                            tagDetailState.data['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div> */}\r\n            {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && tagDetailState.data['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['freeProducts'] && !(tagDetailState.data['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['freeProducts'] && tagDetailState.data['freeProducts'].length > 0 &&\r\n                            tagDetailState.data['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code.trim(),\r\n                minimumOrder: values.minimumOrder.trim(),\r\n                amount: values.amount.trim(),\r\n                amountType: values.amountType.trim(),\r\n                freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                freeProducts: freeProducts,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            />\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment'\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    \r\n                               <Moment>\r\n                                {text}\r\n                               </Moment>\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    \r\n                               <Moment>\r\n                                {text}\r\n                               </Moment>\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('tagState', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1'\r\n          }\r\n          }\r\n       }); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Customer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Customer Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n               <Column\r\n                title=\"Country\" \r\n                dataIndex=\"country\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                \r\n                    />\r\n\r\n\r\n                <Column\r\n                title=\"City\" \r\n                dataIndex=\"city\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                title=\"Created\" \r\n                dataIndex=\"date_created\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Page Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deletePageState, handleDeletePageFetch] = useHandleFetch({}, 'deletePage');\r\n\r\n    const history = useHistory(); \r\n      \r\n      const handleDeletePage = async (id) => {\r\n        const deletePageRes = await handleDeletePageFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deletePageRes && deletePageRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Page'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Page'>\r\n              <span className='iconSize' onClick={() => {\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeletePage(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PageList = ({}: Props) => {\r\n\r\n\r\n  const [pageList,setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  const history = useHistory(); \r\n\r\n  useEffect(()=>{\r\n   const setPages = async () => {\r\n     const pages = await handlePagsListFetch({}); \r\n     // @ts-ignore\r\n     setPageList(pages); \r\n   }\r\n   setPages(); \r\n  },[])\r\n\r\n\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(pageState.data.length > 0 ){\r\n      const newBrandList = pageState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setPageList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n  \r\n    <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n           <div className='categoryListContainer__header-searchBar'>\r\n\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Pages\r\n            </h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search pages..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {pageState.done && pageList.length > 0 && <MyTable \r\n          setBrandList={setPageList}\r\n        data={pageList} />}\r\n        {pageState.isLoading && <DataTableSkeleton />}\r\n        {pageState.done && !(pageList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Page found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default PageList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Page Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tcontent: '',\r\n\tbnContent: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\turl: ''\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewPage = ({ }: Props) => {\r\n\r\n\tconst [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\r\n\tconst [content, setContent] = useState(\"<p>Hello from the new page !</p>\");\r\n\tconst [bnContent, setBnContent] = useState(\"<p>হ্যালো নতুন পেজ থেকে!</p>\");\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleAddPageSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('fuckit', values);\r\n\t\tconsole.log('values', values);\r\n\t\t\r\n\t\tconst addOrderRes = await handleAddPageFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\turl: values.name,\r\n\t\t\t\tcover: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tcontent: values.setBnContent,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create page, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\t\r\n    useEffect(() => {\r\n\t\tif (!addPageState['isLoading']) {\r\n\t\t\tconst error = addPageState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addPageState['isLoading'] &&\r\n\t\t\tObject.keys(addPageState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addPageState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Page Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addPageState]);\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImagesdx', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"addNewPageContainer\">\r\n\t\t\t\t\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\t\t\t\t\tAdd New Page\r\n\t\t                 \t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder='About us,Contact us'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='BN Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'ব্লগ...'}\r\n\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='URL'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.url}\r\n\t\t\t\t\t\t\t\t\t\t\tname='url'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('url');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p style={{\r\n\t\t\t\t\t\t\t\t\tcolor: '#ff4d4f',\r\n\t\t\t\t\t\t\t\t\tmarginTop:'-15px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{addPageState.error['error']['cover']}\r\n\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__body'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tContent\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={content}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tBN Content\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={bnContent}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetBnContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tloading={addPageState.isLoading}\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate page\r\n                            </Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckOutlined,CheckCircleOutlined,DownOutlined  } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import lib \r\nimport Moment from \"react-moment\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n    const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch({}, 'updateOrderStatus');\r\n\r\n    const history = useHistory();\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n\r\n      \r\n      const handleUpdateOrderStatus = async (record,id,newStatus) => {\r\n        const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n          urlOptions: {\r\n            params: {\r\n              newOrderstatus: newStatus,\r\n            },\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(updateOrderStatusRes && updateOrderStatusRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Updated Order Status'); \r\n\t\t\t  \r\n        const positionInTag = () => {\r\n          return data.map(item => item.id).indexOf(id);\r\n          }\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis',record,index );\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [...data.slice(0, index), updatedItem, ...data.slice(index + 1)];\r\n      console.log('updateOrderList',updateOrderList,'-----',setOrderList );\r\n      setOrderList(updateOrderList);\r\n\r\n\r\n      }\r\n\r\n      \r\n      else {\r\n        openErrorNotification(\"Couldn't changed order status, Something went wrong\")\r\n      }\r\n\r\n      }\r\n      \r\n\r\n      const StatusItemMenu = (record,id) => {\r\n        return (\r\n          (\r\n            <Menu>\r\n\r\n<Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'pending')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Pending\r\n              </Menu.Item>\r\n  \r\n\r\n  \r\n              <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'complete')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Completed\r\n    \r\n              </Menu.Item>\r\n    \r\n              {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n            \r\n            </Menu >\r\n          )\r\n        )\r\n      };\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n          width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n        <Dropdown overlay={() => StatusItemMenu(record,record.id)} placement=\"bottomRight\">\r\n           <a href='##'>\r\n            <span\r\n                // className={'product-attributeTag'}\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n\r\n                {text}\r\n                <span style={{\r\n                  marginLeft:\"5px\",\r\n                  fontSize:'10px'\r\n                }}>\r\n                   <DownOutlined />\r\n                </span>\r\n               \r\n            </span> \r\n            </a>\r\n\t\t\t\t\t</Dropdown>\r\n\r\n\r\n     \r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n\r\n{/*    \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm> */}\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {/* {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n     */}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n\r\n    console.log('orderState',orderState);\r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1'\r\n          }\r\n          }\r\n       }); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }; \r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={setOrderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n  \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {memo} from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n                  <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(AddNewOrderSummary)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n    customerListState?:any; \r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState,memo } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n    productListState?:any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds,\r\n    productListState\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\r\n            // @ts-ignore\r\n            const productOptions = productListState.data.map((product) => {\r\n                return product.name\r\n            });\r\n            setoptions(productOptions);\r\n        }\r\n\r\n    }, [productListState]);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = productListState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={productListState.isLoading}>\r\n                {productListState.done && productListState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Tags);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload,Radio , message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tCarOutlined,\r\n\tClockCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\n\r\n//import utils\r\nimport {getDeliveryChargeTotal} from '.././../utils'\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Order Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: '',\r\n\tcountry: '',\r\n\tcity: '',\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\t\r\n\tconst [productListState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\tconst [customerListState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n\r\n\r\n\tconst [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'getDeliveryRegion'\r\n\t  );\r\n\r\n\r\n\t  const [deliveryRegionName, setDeliveryRegionName] = useState('');\r\n\t  const [selectedRegion, setSelectedRegion] = useState({});\r\n\t  const [regionDeliveryCharge,setregionDeliveryCharge] = useState([]);\r\n\r\n\t  const isDeliveryChargeExists = (regions) => {\r\n\t\tif (!regions) {\r\n\t\t  return false;\r\n\t\t} else return true;\r\n\t  };\r\n\r\n\r\n\t  useEffect(() => {\r\n\t\tconst getAndSetShippingDeliveryCharge = async () => {\r\n\t\t\tconst deliveryRegionState = await handleDeliveryRegionFetch({\r\n\t\t\t  urlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  cityName: selectedCityValue,\r\n\t\t\t\t},\r\n\t\t\t  },\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetregionDeliveryCharge(deliveryRegionState);\r\n\t\t  };\r\n\t\r\n\t\t  getAndSetShippingDeliveryCharge();\r\n\t  }, [selectedCityValue]);\r\n\r\n\r\n\t  const handleDeviliveryRegionChange = (value) => {\r\n\t\tsetDeliveryRegionName(value);\r\n\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t\tregionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge; \r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region) => region['_id'] === value\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  };\r\n\t\r\n\t  useEffect(() => {\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t  regionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge;\r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region, index) => 0 === index\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetDeliveryRegionName(selectedRegion['name']);\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [regionDeliveryCharge]);\r\n\r\n\r\n\tconst getTotalPrice = (total, charge) => {\r\n    if (charge) {\r\n      return parseInt(total) + parseInt(charge);\r\n    } else {\r\n      return Math.floor(total);\r\n    }\r\n  };\r\n\r\n\r\n\t  console.log('deliveryRegionState',deliveryRegionState)\r\n\t  console.log('selectedRegion',selectedRegion)\r\n\t  console.log('regionDeliveryCharge',regionDeliveryCharge)\r\n\r\n\tuseEffect(() => {\r\n        const setProducts = async () => {\r\n            const productListRes = await handleProductListFetch({});\r\n        };\r\n\r\n        setProducts();\r\n    }, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n        const setCustomers = async () => {\r\n            const customerListRes = await handleCustomerListFetch({});\r\n        };\r\n        setCustomers();\r\n    }, []);\r\n\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleCheckoutSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\t\tconsole.log('values', values);\r\n\t\tconsole.log('productListcool', productList);\r\n\r\n\t\tconst products = productList && productList.length > 0 ? productList.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tproduct: item._id,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tvariation: item.variation\r\n\t\t\t}\r\n\t\t}) : [];\r\n\r\n\t\tconst addOrderRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tphone: values.phone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\taddress1: values.address1,\r\n\t\t\t\t\taddress2: values.address2,\r\n\t\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\t\tlastName: values.lastName,\r\n\t\t\t\t\tcity: selectedCityValue || selectedCustomerData['city'],\r\n\t\t\t\t\tcountry: selectedCountryValue || selectedCustomerData['country'],\r\n\t\t\t\t},\r\n\t\t\t\titems: products,\r\n\t\t\t\tdelivery: deliveryRegionName,\r\n\t\t\t\tcustomerId: customerId\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create order, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addOrderState['isLoading']) {\r\n\t\t\tconst error = addOrderState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addOrderState['isLoading'] &&\r\n\t\t\tObject.keys(addOrderState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addOrderState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addOrderState]);\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.id,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\tconsole.log('selectedCustomerData', selectedCustomerData); \r\n\r\n\tconst radioStyle = {\r\n\t\tdisplay: 'block',\r\n\t\theight: '30px',\r\n\t\tlineHeight: '30px',\r\n\t  };\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...selectedCustomerData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t   <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId\r\n\t\t\t\t\t\t\t\t\t\t    \tcustomerListState={customerListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCustomerData={setSelectedCustomerData}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts\r\n\t\t\t\t\t\t\t\t\t\t    \tproductListState={productListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductIds={productIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 10 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Comoros'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\"\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop:'20px',\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay:'block'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\tDelivery Region List ({selectedCityValue})\r\n\t\t\t\t\t\t\t\t\t    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\t name=\"radiogroup\" >\r\n\t\t\t\t\t\t\t\t\t\t\t {regionDeliveryCharge.map(deliveryRegionItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t return (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDeviliveryRegionChange(deliveryRegionItem._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='deliveryRegionLabelContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__radio'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionItem._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__info'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClockCircleOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.time}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t )\r\n\t\t\t\t\t\t\t\t\t\t\t })}\r\n  \t\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '50px'\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#666'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#333'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={addOrderState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline-blue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (current === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrent(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n    const [orderDetailState, handleOrderDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n\r\n    useEffect(() => {\r\n        const getOrderDetail = async () => {\r\n            await handleOrderDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderDetail();\r\n\r\n    }, [id]);\r\n\r\n\r\n    console.log('orderDetailState', orderDetailState)\r\n\r\n    const handleOk = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Invoice\"\r\n            visible={showInvoice}\r\n            bodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n            onCancel={() => setShowInvoice(false)}\r\n            width={'60vw'}\r\n            okText='Print'\r\n            onOk={() => handleOk()}\r\n        >\r\n            {orderDetailState.isLoading && <Spin />}\r\n            {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='invoiceContainer'>\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"10px 10px 0 0\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={40} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"left\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Hello, {orderDetailState.data['name']}\r\n                                                                                        <br /> Thank you for your order.\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={5} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 21,\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            letterSpacing: \"-1px\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Invoice\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                                <tr></tr>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={50} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <small>ORDER</small> #{orderDetailState.data['id']}\r\n                                                                                        <br />\r\n                                                                                        <small>\r\n                                                                                            {orderDetailState.data['date_created']}\r\n\r\n                                                                                        </small>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Header */}\r\n                        {/* Order Details */}\r\n                        {orderDetailState.data && orderDetailState.data['products'] && orderDetailState.data['products'].length > 0 && (\r\n                            <table\r\n                                width=\"100%\"\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align=\"center\"\r\n                                className=\"fullTable\"\r\n                                bgcolor=\"#e1e1e1\"\r\n                            >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table\r\n                                                width={600}\r\n                                                border={0}\r\n                                                cellPadding={0}\r\n                                                cellSpacing={0}\r\n                                                align=\"center\"\r\n                                                className=\"fullTable\"\r\n                                                bgcolor=\"#ffffff\"\r\n                                            >\r\n                                                <tbody>\r\n                                                    <tr></tr>\r\n                                                    <tr className=\"hiddenMobile\">\r\n                                                        <td height={60} />\r\n                                                    </tr>\r\n                                                    <tr className=\"visibleMobile\">\r\n                                                        <td height={40} />\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <table\r\n                                                                width={480}\r\n                                                                border={0}\r\n                                                                cellPadding={0}\r\n                                                                cellSpacing={0}\r\n                                                                align=\"center\"\r\n                                                                className=\"fullPadding\"\r\n                                                            >\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 10px 7px 0\"\r\n                                                                            }}\r\n                                                                            width=\"52%\"\r\n                                                                            align=\"left\"\r\n                                                                        >\r\n                                                                            Name\r\n                        </th>\r\n\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"center\"\r\n                                                                        >\r\n                                                                            Quantity\r\n                        </th>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#1e2b33\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"right\"\r\n                                                                        >\r\n                                                                            Subtotal\r\n                        </th>\r\n                                                                    </tr>\r\n\r\n\r\n                                                                    {orderDetailState.data['products'].map(item => {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        height={1}\r\n                                                                                        style={{ background: \"#bebebe\" }}\r\n                                                                                        colSpan={4}\r\n                                                                                    />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={10} colSpan={4} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        className=\"article\"\r\n                                                                                    >\r\n                                                                                        {item.name}\r\n                                                                                    </td>\r\n\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#646a6e\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"center\"\r\n                                                                                    >\r\n                                                                                        {item.quantity}\r\n                                                                                    </td>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#1e2b33\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"right\"\r\n                                                                                    >\r\n                                                                                        {item.quantity * item.price}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    })}\r\n\r\n\r\n                                                                    <tr>\r\n                                                                        <td\r\n                                                                            height={1}\r\n                                                                            colSpan={4}\r\n                                                                            style={{ borderBottom: \"1px solid #e4e4e4\" }}\r\n                                                                        />\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td height={20} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                        {/* /Order Details */}\r\n                        {/* Total */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {/* Table Total */}\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Total\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\",\r\n                                                                            whiteSpace: \"nowrap\"\r\n                                                                        }}\r\n                                                                        width={80}\r\n                                                                    >\r\n                                                                        {orderDetailState.data['total']}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        {/* /Table Total */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Total */}\r\n                        {/* Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr></tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>BILLING INFORMATION</strong>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['name']}\r\n                                                                                        <br /> {orderDetailState.data['country']}\r\n                                                                                        <br /> {orderDetailState.data['city']}\r\n                                                                                        <br />{orderDetailState.data['address']}\r\n                                                                                        <br /> {orderDetailState.data['phone']}\r\n                                                                                        <br /> {orderDetailState.data['email']}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>Status</strong>\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['paymentStatus']}\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <strong>SHIPPING METHOD</strong> */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* UPS: U.S. Shipping Services */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"0 0 10px 10px\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            color: \"#5b5b5b\",\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"left\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Have a nice day.\r\n                        </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"spacer\">\r\n                                                    <td height={50} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>;\r\n                </>\r\n            )}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return orderList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            // const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            // setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport OrderEdit from \"./OrderEdit\";\r\nimport { OrderDetail } from '.';\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        getBrandDetail()  ;\r\n    }, [tagId]);\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState)\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Order Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <OrderEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Order found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState['data']['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {tagDetailState['data']['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {tagDetailState['data']['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {tagDetailState['data']['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {tagDetailState['data']['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentMethod'] && (\r\n                                <h3>\r\n                                    PAYMENT METHOD:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentMethod']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentStatus'] && (\r\n                                <h3>\r\n                                    PAYMENT STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentStatus']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            \r\n                        {tagDetailState['data']['status'] && (\r\n                                <h3>\r\n                                    ORDER STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['status']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['deliveryCharge'] && (\r\n                                <h3>\r\n                                    DELIVERY CHARGE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['deliveryCharge']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n                        {tagDetailState['data']['deliveryName'] && (\r\n                                <h3>\r\n                                    DELIVERY LOCATION:\r\n                                    <span>\r\n                                        {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                      \r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Products\r\n                    </h3>\r\n                </div>\r\n\r\n          \r\n           \r\n            <div className='brandDetailContainer__body'>\r\n\r\n\r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] && !(tagDetailState.data['products'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this order' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] \r\n                    && tagDetailState.data['products'].length > 0 && (\r\n                <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagDetailState.data['products']}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n\r\n                </>\r\n            )}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nconst date = new Date();\r\nconst thisMonth = MONTHS[date.getMonth()]\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    `${order}${thisMonth}`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfMonth',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Month\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of month \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfMonth'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfWeek',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Week\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of week \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfWeek'} \r\n                         tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'date',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY DATE\r\n                </h2>\r\n                <h3>\r\n                      Order report by date\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'date'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nexport const getHourFormatter = (order: number): string | undefined =>\r\n    `${order}hr`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'hour',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    BY HOUR\r\n                </h2>\r\n                <h3>\r\n                      Order report by hours \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'hour'} \r\n                         tickFormatter={getHourFormatter}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n `${MONTHS[order - 1]}`;\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'month',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsStateMonth',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY MONTH\r\n                </h2>\r\n                <h3>\r\n                   Order report by month\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'month'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this months`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n         </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'year',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    By Year\r\n                </h2>\r\n                <h3>\r\n                      Order report by year \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'year'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                    In the last year\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import OrderOverviewReport from \"./OrderOverviewReport\";\r\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\r\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\r\nimport DateOrderReport from \"./DateOrderReport\";\r\nimport HourOrderReport from \"./HourOrderReport\";\r\nimport MonthOrderReport from \"./MonthOrderReport\";\r\nimport YearOrderReport from \"./YearOrderReport\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<ThisWeekOrderReport />\r\n\t\t\t\t<ThisMonthOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DateOrderReport />\r\n\t\t\t\t<HourOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<MonthOrderReport />\r\n\t\t\t\t<YearOrderReport />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async () => {\r\n\r\n\r\n\t\tconst updateSiteIconAndLogoRes = await handleUpdateSiteLogoAndIconFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tlogo: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateSiteIconAndLogoRes && updateSiteIconAndLogoRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Updated Site Logo');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't updated site logo, Something went wrong\");\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\r\n\t\t\t\t\t\t\tloading={updateSiteLogoAndIcon.isLoading}\r\n\t\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate site Logo\r\n                            </Button>\r\n\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Admin Information\" key=\"3\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([{\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t},...regionList])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconsole.log('DeliveryRegion',customer);\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: customer.charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Region Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Region Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n              </a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port.trim(),\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('STMP Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                     <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    type='number'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"newCustomer\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'newCustomer'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"New Customer Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"orderStatus\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'orderStatus'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Status Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"order\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'order'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport NewCustomerTemplate from \"./NewCustomerTemplate\";\r\nimport OrderStatusTemplateAutoEmail from \"./OrderStatusTemplateAutoEmail\";\r\nimport OrderTemplateAutoEmail from \"./OrderTemplateAutoEmail\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureAutoEmail = ({  }: Props) => {\r\n\r\n    const [getAutoEmailConfigurationState, handleGetAutoEmailConfigurationFetch] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n    const [configureAutoEmailConfigurationState, handleAutoEmailConfigurationFetch] = useHandleFetch({}, 'configureAutoEmail');\r\n \r\n    const [isnewCustomerAdmin,setnewCustomerAdmin] = useState(true);\r\n    const [isnewCustomerCustomer,setnewCustomerCustomer] = useState(true);\r\n    const [isorderAdmin,setorderAdmin] = useState(true);\r\n    const [isorderStatusAdmin,setorderStatusAdmin] = useState(true);\r\n    const [isorderCustomer,setorderCustomer] = useState(true);\r\n    const [isorderStatusCustomer,setIsorderStatusCustomer] = useState(true);\r\n\r\n    const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n    const [ordermodal, setordermodal] = useState(false);\r\n    const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n\r\n\r\n    const handleUpdateAutoEmail = async () => {\r\n        const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n            body: {\r\n                \"newCustomerAdmin\": isnewCustomerAdmin,\r\n                \"newCustomerCustomer\": isnewCustomerCustomer,\r\n                \"orderAdmin\": isorderAdmin, \r\n                \"orderCustomer\": isorderStatusAdmin, \r\n                \"orderStatusAdmin\": isorderCustomer, \r\n                \"orderStatusCustomer\": isorderStatusCustomer\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Auto email Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated Auto email configuration\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                                <div style={{\r\n                                    display:'flex',\r\n                                    flexDirection:'column'\r\n                                }}>\r\n                                <div style={{\r\n                                }}>\r\n                                    \r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                New Customer\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setnewcustomermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                          <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                   checked={isnewCustomerAdmin}\r\n                                                   defaultChecked={isnewCustomerAdmin}\r\n                                                    onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isnewCustomerCustomer}\r\n                                                  defaultChecked={isnewCustomerCustomer}\r\n                                                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n</div>\r\n\r\n                                    <div>\r\n\r\n\r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                            marginTop:'30px'\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                 Order\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setordermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n\r\n\r\n                                    <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px',\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                      checked={isorderAdmin}\r\n                                                      defaultChecked={isorderAdmin}\r\n                                                    onChange={(e) => setorderAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isorderCustomer}\r\n                                                  defaultChecked={isorderCustomer}\r\n                                                onChange={(e) => setorderCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                                <div>\r\n                                                <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:\"30px\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                           <h3 className='checkBoxFieldLabel'>\r\n                                                 Order status\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setorderStatusmodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                    checked={isorderStatusAdmin}\r\n                                                    defaultChecked={isorderStatusAdmin}\r\n                                                    onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                 checked={isorderStatusCustomer}\r\n                                                 defaultChecked={isorderStatusCustomer}\r\n                                                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                              \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n</div>\r\n                                        \r\n\r\n\r\n                                        \r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                                                marginTop:\"25px\"\r\n                                            }}></div>\r\n\r\n    <Button\r\n\r\n                                            onClick={(e: any) => handleUpdateAutoEmail()}\r\n                                            loading={configureAutoEmailConfigurationState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Update Auto Email Configuration\r\n                                            </Button>\r\n\r\n                                            \r\n                                            <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n        \r\n\r\n        <NewCustomerTemplate \r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n        />\r\n\r\n<OrderStatusTemplateAutoEmail \r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n        />\r\n\r\n\r\n        <OrderTemplateAutoEmail \r\n        visible={ordermodal}\r\n        setVisible={setordermodal}\r\n        />\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"recipient\": \"\",\r\n    \"subject\": \"\",\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ComposeCustomEmail = ({  }: Props) => {\r\n\r\n    const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch({}, 'sendCustomEmail');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [html,sethtml] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleSendCustomEmailFetch({\r\n            body: {\r\n                \"recipient\": values.recipient.trim(),\r\n                \"subject\": values.subject.trim(),\r\n               \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Email Sent!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='To'\r\n                                                    value={values.recipient}\r\n                                                    name='recipient'\r\n                                                    isError={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n\r\n                                                    errorString={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('recipient');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Subject'\r\n                                                    value={values.subject}\r\n                                                    name='subject'\r\n                                                    isError={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n\r\n                                                    errorString={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('subject');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={html}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            sethtml(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n    \r\n\r\n                                       <div style={{\r\n                                           marginTop:'20px'\r\n                                       }}></div>         \r\n                                          <Button\r\n\r\n                                            onClick={(e: any) => handleSubmit(e)}\r\n                                            loading={sendCustomerEmailState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Send\r\n                                            </Button>     \r\n\r\n                                            \r\n                                       <div style={{\r\n                                           marginTop:'10px'\r\n                                       }}></div>       \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Inbox = (props: Props) => {\r\n    return (\r\n        <div className='sentEmailListContainer'>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport ConfigureSTMP from \"./ConfigureSTMP\";\r\nimport ConfigureAutoEmail from \"./ConfigureAutoEmail\";\r\nimport ComposeCustomEmail from \"./ComposeCustomEmail\";\r\nimport Inbox from \"./Inbox\";\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n    InfoCircleOutlined,\r\n    InboxOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane \r\n                    tab={\r\n                        <span>\r\n                        <InboxOutlined />\r\n                        Inbox\r\n                        </span>\r\n                    }\r\n             key=\"1\">\r\n                        <Inbox />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <PlusCircleOutlined />\r\n                        Compose Email\r\n                        </span>\r\n                    } key=\"2\">\r\n                        <ComposeCustomEmail />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                     tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure STMP\r\n                        </span>\r\n                    }\r\n                    \r\n                   key=\"3\">\r\n                        <ConfigureSTMP />\r\n                    </TabPane>\r\n\r\n                    <TabPane\r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure Auto Email     \r\n                        </span>\r\n                    }\r\n                     key=\"4\">\r\n                        <ConfigureAutoEmail />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\n// import components\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n    BellOutlined, \r\n    OrderedListOutlined,\r\n   TwitterSquareFilled,\r\n   ShoppingCartOutlined,\r\n   UserOutlined,\r\n    } from '@ant-design/icons';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst NotificationList = (props: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                marginTop:'100px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    marginTop:'100px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }; \r\n\r\n\r\n        return (\r\n            <div className='notificationListItemContainer'>\r\n                        {getAllNotificationState.done\r\n                        && getAllNotificationState.data[0]\r\n                        && getAllNotificationState.data.map((item,index) => {\r\n                        return (\r\n                        <div\r\n                          onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n                          className='notificationListItemContainer__item'>\r\n                            <span className='notificationListItemContainer__item-icon'>\r\n                              {typeIcon[item['type']]}\r\n                            </span>\r\n                            <div className='notificationListItemContainer__item-info'>\r\n                                <h3>\r\n                                    {item.heading}\r\n                                </h3>\r\n                                <h4>\r\n                                    {item.text}\r\n                                </h4>\r\n                                <h2>\r\n                                <Moment >\r\n                                    {item.added}\r\n                                </Moment>\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className='notificationList'>\r\n        <h3 className='notificationList__heading'>\r\n\t\t\tNotification\r\n\t    </h3>\r\n            {menu()}\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default NotificationList\r\n","import React, { useState } from 'react'; \r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nconst AccessCheckbox = ({checkedList,setCheckedList,plainOptions,defaultValue=[]}) => {\r\n\r\n    const [interminate,setInterminate] = useState(true);\r\n    const [checkAll,setCheckAll] = useState(false); \r\n\r\n    const onChange = checkedList => {\r\n        setCheckedList(checkedList); \r\n        setInterminate(!!checkedList.length && checkedList.length < plainOptions.length); \r\n        setCheckAll(checkedList.length === plainOptions.length); \r\n      };\r\n      \r\n      const onCheckAllChange = e => {\r\n        setCheckedList(e.target.checked ? plainOptions : []); \r\n        setInterminate(false); \r\n        setCheckAll(e.target.checked)\r\n      };\r\n\r\n\r\n      console.log('defaultValue',defaultValue);\r\n\r\n    return (\r\n        <>\r\n        <div\r\n        style={{\r\n            borderBottom:\"1px solid #eee\",\r\n            marginBottom:'10px'\r\n        }}\r\n         className=\"site-checkbox-all-wrapper\">\r\n                <Checkbox\r\n                    style={{\r\n                        marginBottom:\"10px\"\r\n                    }}\r\n                    indeterminate={interminate}\r\n                    onChange={onCheckAllChange}\r\n                    checked={checkAll}\r\n                >\r\n                    Super Admin\r\n                </Checkbox>\r\n        </div>\r\n        <Checkbox.Group \r\n        style={{ width: '100%' }}\r\n         value={checkedList}\r\n         defaultValue={defaultValue}\r\n         onChange={onChange}>\r\n      <Row>\r\n      {plainOptions.map(accessItem => {\r\n          return (\r\n            <Col \r\n            style={{\r\n                marginBottom:\"10px\"\r\n            }}\r\n            span={8}>\r\n            <Checkbox value={accessItem}>\r\n                {accessItem}\r\n            </Checkbox>\r\n          </Col>\r\n          )\r\n      })}\r\n    </Row>\r\n  </Checkbox.Group>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AccessCheckbox; ","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateAdminRole');\r\n\tconst [accesscheckedList,setAccessCheckedList] = useState(category.role && category.role.length ? [...category.role]: [] );\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\taccess: accesscheckedList\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n\t\t\t\t\t\t\t<AccessCheckbox \r\n\t\t\t\t\t\t\tdefaultValue={category.role}\r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    phone: Yup.string()\r\n    .required('Please tell us your mobile number.')\r\n    .max(13, 'Please enter a valid mobile number.'),\r\n   password: Yup.string()\r\n    .label('Password')\r\n    .required()\r\n    .min(6, 'Password must have at least 6 characters'),\r\n  passwordConfirmation: Yup.string()\r\n    .label('Confirm password')\r\n    .required()\r\n    .min(6, 'Confirm password must have at least 6 characters')\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    access: [],\r\n}\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewAdminRoles = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'adminRoleRegister');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [accesscheckedList,setAccessCheckedList] = useState([]);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                email: values.email.trim(),\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n                access: accesscheckedList,\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            // openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\t\tif (!addTagState['isLoading']) {\r\n\t\t\tconst error = addTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addTagState['isLoading'] &&\r\n\t\t\tObject.keys(addTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addTagState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Admin Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addTagState]);\r\n    \r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.phone || !values.password || !values.passwordConfirmation || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Register New Admin\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Name'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Email'\r\n                                value={values.email}\r\n                                name='email'\r\n                                isError={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n\r\n                                errorString={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('email');\r\n                                }}\r\n                            />\r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['passwordConfirmation'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n                            <AccessCheckbox \r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewAdminRoles;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select,Tag, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewAdmin from \"./AddNewAdmin\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Admin');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Email\"\r\n\t\t\t\t\tdataIndex=\"email\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Phone\"\r\n\t\t\t\t\tdataIndex=\"phone\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Roles\"\r\n\t\t\t\t\tdataIndex=\"role\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={tags => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{tags && tags.length > 0 && tags.slice(0,3).map((tag) => (\r\n\t\t\t\t\t\t\t<Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag}>\r\n\t\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{tags && tags.length === 3 && '.......'}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconsole.log('adminListState',tagState);\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tAdmins\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search admins..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewAdmin\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Admin Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AdminEdit from \"./AdminEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Admin Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <AdminEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postSelectCategoryList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    url: \"\",\r\n    preparationTime: \"\",\r\n    servingSize: \"\",\r\n    cookingTime: '',\r\n    body: '',\r\n    bnName: '',\r\n\tbnBody: '',\r\n\tbnPreparationTime: '',\r\n\tbnServingSize: '',\r\n\tbnCookingTime: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addPost');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [bnBody, setBnBody] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                image: imagesIds,\r\n                body: body,\r\n                requiredProducts: products,\r\n                preparationTime: values.preparationTime,\r\n                servingSize: values.servingSize,\r\n                bnName: '',\r\n                bnBody: '',\r\n                bnPreparationTime: '',\r\n                bnServingSize: '',\r\n                bnCookingTime: '',\r\n                metaTitle: '',\r\n                bnMetaTitle: '',\r\n                metaDescription: '',\r\n                bnMetaDescription: '',\r\n                metaTags: '',\r\n                bnMetaTags: '',\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tpreparationTime: values.bnPreparationTime,\r\n\t\t\t\t\tbody: values.bnBody,\r\n\t\t\t\t\tservingSize: values.bnServingSize,\r\n\t\t\t\t\tcookingTime: values.bnCookingTime,\r\n\t\t\t\t}\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Recipe Created');\r\n            setAddNewCategoryVisible(false)\r\n\r\n            setBundleList([...bundleList, {\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Recipe\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                             Recipe Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Input\r\n                                                label='Name'\r\n                                                placeHolder='Rafti oxy'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Name'\r\n                                                value={values.bnName}\r\n                                                placeHolder={'রাফতি অক্স'}\r\n                                                name='bnName'\r\n                                                isError={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n                                                errorString={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnName');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Preparation Time'\r\n                                                value={values.preparationTime}\r\n                                                placeHolder='15 min'\r\n                                                name='preparationTime'\r\n                                                isError={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n\r\n                                                errorString={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('preparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                                <Input\r\n                                                label='BN Preparation Time'\r\n                                                value={values.bnPreparationTime}\r\n                                                placeHolder={'১৫ মিনিট'}\r\n                                                name='bnPreparationTime'\r\n                                                isError={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n\r\n                                                errorString={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnPreparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                           \r\n\r\n                                            \r\n                                            <Input\r\n                                                label='Cooking Time'\r\n                                                placeHolder={'30 min'}\r\n                                                value={values.cookingTime}\r\n                                                name='cookingTime'\r\n                                                isError={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n\r\n                                                errorString={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('cookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Cooking Time'\r\n                                                placeHolder={'৩০ মিনিট'}\r\n                                                value={values.bnCookingTime}\r\n                                                name='bnCookingTime'\r\n                                                isError={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n\r\n                                                errorString={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnCookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='Serving Size'\r\n                                                value={values.servingSize}\r\n                                                name='servingSize'\r\n                                                isError={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n\r\n                                                errorString={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('servingSize');\r\n                                                }}\r\n                                            />\r\n\r\n<Input\r\n                                                label='BN Serving Size'\r\n                                                value={values.bnServingSize}\r\n                                                name='bnServingSize'\r\n                                                isError={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n\r\n                                                errorString={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnServingSize');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='URL'\r\n                                                value={values.url}\r\n                                                name='url'\r\n                                                isError={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n\r\n                                                errorString={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('url');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={body}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:'15px'\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                BN Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnBody}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBnBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                      \r\n\r\n\r\n\r\n                                  \r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                        <FileImageTwoTone />\r\n                                                        <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                        Select From Library\r\n                                                                <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Recipe Categories\r\n\t\t\t\t                                </h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                Recipe Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./PostQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewPost\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Recipe');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit recipe'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit}\r\n                 />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\r\n\r\n\r\n\r\n    console.log('postListData',tagState);\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                        Recipes\r\n                       </h2>\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search recipes..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./PostEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'postDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            console.log('fuckit')\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        categoryOne: 1,\r\n                        tagsOne: 1\r\n                    },\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n    \r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n                                {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/posts/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n                                    </>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                               </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Recipe' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Post Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewPostTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Recipe Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/posts/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Recipe tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n\r\n\tconsole.log('recipetaglist',tagState); \r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tRecipe Tags\r\n         \t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search recipe tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Recipe tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                \r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this recipe tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Post Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Post Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {QuickEdit} from \"../../category\"; \r\nimport AddNewPostCategory from \"./AddNewPostCategory\";\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport Empty from \"../../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Post Recipe Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Recipe Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/posts/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                    cursor: 'pointer'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t        <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postCategoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n  console.log('postCategoryList', categoryState);\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n              Recipe Categories\r\n          </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search recipe categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n            Add New\r\n        </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n                placeholder=\"search categories..\"\r\n                size=\"large\"\r\n                onSearch={value => console.log(value)}\r\n                style={{ width: 300 }}\r\n           /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Recipe Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n        {categoryState.done && \r\n          <AddNewPostCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n\tsetcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, \r\n\tsetCategoryEditVisible,\r\n\t categoryDetailData,\r\n\t setcategoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateTagRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateTagRes\r\n\t\t\t})\r\n\t\t\tconsole.log('updateTagRes',updateTagRes);\r\n\t\t\tconsole.log('categoryDetailData',categoryDetailData);\r\n\t\t\t// setcategoryDetailData()\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Recipe Category Edit\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport CategoryEdit from \"./PostCategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('postcategoryDetailState', categoryDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                   Recipe Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                          \r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child recipe categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this recipe category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewStaff from \"./AddNewStaff\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Staffs Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Staffs'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Staffs\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search staffs..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Staff found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewStaff \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n        .label('Password')\r\n        .required()\r\n        .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport StaffEdit from \"./StaffEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Staff Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <StaffEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Staffs found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewExpense from \"./AddNewExpense\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Expense');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tExpenses\r\n                       </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search expense..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewExpense\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Expense Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Expense Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ExpenseEdit from \"./ExpenseEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Expense Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <ExpenseEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport { ProductBundleDetail, ProductBundleList } from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder, OrderDetail,OrderAnalytics } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport {Email} from '../../pages/email';\r\nimport {NotificationList} from '../../pages/notification';\r\nimport {AdminList, AdminDetail} from '../../pages/admins';\r\nimport {PostList, PostDetail } from '../../pages/post';\r\nimport {StaffList, StaffDetail} from '../../pages/staff';\r\nimport {ExpenseList, ExpenseDetail} from '../../pages/expense';\r\nimport {PostTagList, PostCategoryList, NewPostCategoryDetail, NewPostTagDetail} from '../../pages/post';\r\n\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route path='/admin/overview' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:id' exact>\r\n                    <NewCategoryDetail />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/brand/:id' exact>\r\n                    <NewBrandDetail />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                <Route path='/admin/product/:id' exact>\r\n                    <NewProductDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle' exact>\r\n                    <ProductBundleList />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle/:id' exact>\r\n                    <ProductBundleDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon' exact>\r\n                    <CouponList />\r\n                </Route>\r\n\r\n\r\n                <Route path='/admin/posts' exact>\r\n                    <PostList />\r\n                </Route>\r\n\r\n             \r\n\r\n        \r\n                <Route path='/admin/posts/tag' exact>\r\n                    <PostTagList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category' exact>\r\n                    <PostCategoryList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/:id' exact>\r\n                    <PostDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/tag/:id' exact>\r\n                    <NewPostTagDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category/:id' exact>\r\n                     <NewPostCategoryDetail />\r\n                </Route>\r\n                \r\n                <Route path='/admin/coupon/:id' exact>\r\n                    <CouponDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/notification' exact>\r\n                    <NotificationList />\r\n                </Route>\r\n\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n\r\n\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/tag/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/tag/:id' exact>\r\n                    <NewTagDetail />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/order/overview' exact>\r\n                    <OrderAnalytics />\r\n                </Route>\r\n\r\n                <Route path='/admin/order/:id' exact>\r\n                    <OrderDetail />\r\n                </Route>\r\n               \r\n                <Route path='/admin/staff' exact>\r\n                    <StaffList />\r\n                </Route>\r\n                <Route path='/admin/staff/:id' exact>\r\n                    <StaffDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense' exact>\r\n                    <ExpenseList />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense/:id' exact>\r\n                    <ExpenseDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/customer/:id' exact>\r\n                    <CustomerDetail />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/settings/admins' exact>\r\n                    <AdminList />\r\n                </Route>\r\n                <Route path='/admin/settings/admins/:id' exact>\r\n                    <AdminDetail />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n\r\n                <Route path='/admin/email' exact>\r\n                    <Email />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}