{"version":3,"sources":["pages/overview/Overview.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","components/Placeholders/DataTableSkeleton.tsx","components/Empty/Empty.tsx","components/Empty/index.ts","pages/category/CategoryList.tsx","pages/category/CategoryDetail.tsx","components/Field/Input.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","components/Field/InputSmall.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/tag/QuickEdit.tsx","pages/tag/TagList.tsx","pages/tag/AddNewTag.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderProductItem.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","layout/Sider.tsx","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Overview","props","style","textAlign","marginTop","isObjectEmpty","value","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","name","description","cover","config","thumbnail","subCount","subCategory","children","subCat","title","isNext","page","next","convertedData","product","regularPrice","price","offerPrice","parseInt","unit","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","pricing","tag","brand","customer","firstName","lastName","country","city","email","phone","created","theme","added","components","component","region","pickUpLocation","countryCode","countryName","time","charge","image","labels","alt","caption","original","availableStock","minimumStock","cat","b","tags","img","baseURL","success","inserted","productCount","count","item","billingAddress","total","totalPrice","products","date_created","date","paymentMethod","generalFormat","dataMap","line_items","paymentItems","number","text","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","JSON","stringify","fetch","res","formattedData","error","connector","dataFetchReducer","state","action","type","isLoading","isError","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","DataTable","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","filename","EmptyComponent","display","justifyContent","alignItems","Empty","PRESENTED_IMAGE_SIMPLE","Column","Table","Search","ColumnGroup","Input","MyTable","setcategoryList","history","useState","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","console","log","handleDeleteCategory","deleteCategoryRes","message","notification","icon","CheckCircleOutlined","color","newCategoryList","filter","size","dataSource","dataIndex","className","render","record","objectFit","borderRadius","align","placement","onClick","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","withRouter","categoryState","handleCategoryListFetch","isSubCategory","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","placeholder","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","CategoryDetail","autoplay","Demo","TextArea","required","addonBefore","label","defaultValue","onChange","disabled","errorString","Item","validateStatus","help","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","onRemove","filelist","index","newFileList","splice","beforeUpload","handleUpdateSubmit","values","actions","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","setSubmitting","getisUpdateSubmitButtonDisabled","isValid","top","onOk","e","onCancel","bodyStyle","margin","padding","defaultActiveKey","tab","listType","background","InboxOutlined","loading","ArrowUpOutlined","find","newselectedImages","handleAddToSelectedList","CheckOutlined","onSubmit","validateOnBlur","enableReinitialize","initialValues","handleChange","handleSubmit","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","validationSchema","Yup","shape","min","Option","Select","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","setselectedParentId","imagesIds","parent","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","getisSubmitButtonDisabled","onChangeSelect","okButtonProps","htmlType","defaultChecked","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","newImages","handleImagesDelete","FileAddOutlined","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","brandList","setBrandList","addBrandState","handleAddBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","updatebrandState","handleUpdateBrandFetch","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","brandState","handlebrandListFetch","brands","setBrands","Tags","setTagIds","setoptions","selectedOpions","setselectedOptions","tagState","handleTagListFetch","tagListRes","tagOptions","setTags","mode","selectItems","selectedCategoryIds","selectedcategory","o","Brands","setBrandId","setSelectedBrandId","brandListRes","brandOptions","onFocus","onBlur","val","Checkbox","Group","Categories","setcategoryIds","searchValue","setsearchValue","categoryListRes","borderColor","categoryNames","newOptions","marginLeft","checkable","onSelect","selectedKeys","info","onCheck","checkedKeys","treeData","defaultExpandAll","allowClear","Complete","setAttributeList","attributeList","attribute","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","updateAttributeList","manupulatedOptions","inputValue","suggestedOption","toUpperCase","InputSmall","Pricing","handleAddPricing","regular","offer","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","priceItem","model","AddNewProduct","productList","setProductList","addProductState","handleAddProductFetch","categoryids","tagIds","brandId","setPricing","addProductRes","err","i","newPricing","handleDeletePricing","updateProductState","handleUpdateProductFetch","updateProductRes","positionInAttribute","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","newProductList","productState","handleProductListFetch","setProducts","tagList","setTagList","updateTagState","updateTagRes","updateTagList","CoolInput","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","addTagState","handleAddTagFetch","addTagRes","newTagList","AddNewTag","max","password","address1","address2","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","marginRight","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","lastModified","href","push","AddNewPage","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","handleDeleteOrderFetch","handleDeleteRegion","deleteOrderRes","newOrderList","orderState","handleRegionListFetch","regions","setOrders","CartOverLayCartItem","productId","productDetailState","handleProductFetch","setProduct","setIsLoading","getAndSetProduct","handleChangeQuantity","cursor","AddNewOrderSummary","ShopOutlined","AddNewOrderProductItem","setCustomerId","setProductIds","Step","Steps","additionalInfo","steps","content","AddNewOrder","addOrderState","handleOrderFetch","productIds","current","setCurrent","variation","isTrue","UserOutlined","CustomersId","AddProducts","CaretLeftOutlined","CaretRightOutlined","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","boxShadow","SaveOutlined","updateComponentByAddingItem","componentId","destroyOnClose","Panel","Collapse","genExtra","updateComponentByDeleting","event","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","updatedItems","updateComponentRes","accordion","bordered","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","selectedThemeTypeValue","setselectedThemeTypeValue","loadingThumnail","setLoadingThumbnail","imageUrl","setImageUrl","setname","addThemeRes","path","uploadButton","LoadingOutlined","showUploadList","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","multiple","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","siteSettingsRes","getSiteSettings","addSiteInfoRes","invoiceTitle","address","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","minimumOrder","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","deleteRegionRes","newRegionList","regionState","setRegions","Sider","Layout","Header","Content","Footer","SubMenu","Menu","collapsed","setcollapsed","collapsible","onCollapse","selectable","PieChartOutlined","to","GoldOutlined","TagsOutlined","TagOutlined","BranchesOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","FileOutlined","SettingOutlined","App","handleLogoutFetch","handleLogout","logoutRes","borderBottom","borderLeft","level","fontWeight","LogoutOutlined","hasSider","exact","BrandList","OrderList","Delivery","ManageThemes","SiteInfo","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f1880ff5.chunk.js","sourcesContent":["import React from 'react';\r\n// import Login from '../auth/login';\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <Login /> */}\r\n\t\t\t<h2 style={{\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\tComing Soon\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json',\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n      body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res[format](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items || []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.original}`,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.thumbnail && data.cover.thumbnail}`,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.count || data.productCount,\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\timage:\r\n\t\t\t\t(data.image && data.image.length > 0 && data.image.map((img) => `${config.baseURL}${img.medium}`)) || []\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import Empty from \"./Empty\";\r\nexport default Empty; ","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n\r\n      console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                // onClick={() => history.push(`/category/${record.name}`)}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Desctription\" \r\n           dataIndex=\"desctription\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  console.log('categoryState',categoryState)\r\n\r\n\r\n\r\n  \r\n  \r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.includes(value)); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryState.data}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Carousel } from 'antd';\r\n\r\ninterface Props {}\r\n\r\nconst CategoryDetail = (props: Props) => {\r\n\treturn (\r\n\t\t<div className='categoryDetailContainer'>\r\n\t\t\t<div className='categoryDetailContainer__item'>\r\n\t\t\t\t<div className='categoryDetailContainer__item-carousel'>\r\n\t\t\t\t\t<Carousel autoplay>\r\n\t\t\t\t\t\t<div className='categoryDetailContainer__item-carousel-item'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='category img'\r\n\t\t\t\t\t\t\t\tsrc='https://images-na.ssl-images-amazon.com/images/I/41Leu3gBUFL.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>2</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>3</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>4</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Carousel>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='categoryDetailContainer__item' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CategoryDetail;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name}: Props) => {\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>\r\n                {label}\r\n            </h3>\r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                  <TextArea\r\n                      disabled={disabled}\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      name={name}\r\n                    className='inputclassName'\r\n                     rows={4} /> \r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Moment from 'react-moment';\r\n// import third party ui lib\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm } from 'antd';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\nimport {\r\n\tInboxOutlined,\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any\r\n}\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [addMediaLibrary, handleAddMediaLibraryFetch] = useHandleFetch({}, 'addImageToLibrary');\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\tconsole.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tconsole.log('filt', file.name);\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: 'http://localhost:5000/admin/image/add',\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\tconsole.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconsole.log('selectedimages', selectedimages)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InboxOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\r\n\t\t\t\t\t\t\t\t\t\t\t\tother band files\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: setselectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['id'] || '',\r\n\t\t\t\tkey: addCategoryRes['id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('isparentCategoryChecked', isparentCategoryChecked);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch defaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h4 className='switchLabelContainer-label'>Top level Category</h4>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetcategoryList?:any; \r\n\tcategoryList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  console.log('updateCategoryRes',updateCategoryRes)\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateCategoryRes && updateCategoryRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInTag = () => {\r\n\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInTag();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t  const updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t  setcategoryList(updateCategoryList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name  || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space, Tag,Button, Input,Tooltip, Modal, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n\r\n\r\n      \r\n      console.log('activeCategoryForEdit',activeCategoryForEdit)\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.includes(value)); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  console.log('brandState',brandState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brands..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brands found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React,{useEffect,useState} from 'react'; \r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  setTagIds?: any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds\r\n}: Props) => {\r\n  const [ options, setoptions ] = useState([]);\r\n  const [selectedOpions,setselectedOptions] = useState([]); \r\n  const [ tagState, handleTagListFetch ] = useHandleFetch({}, 'tagList');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tagListRes = await handleTagListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tisSubCategory: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (tagListRes && tagListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst tagOptions = tagListRes.map((tag) => {\r\n          return tag.name \r\n        });\r\n\t\t\t\tsetoptions(tagOptions);\r\n      }\r\n      \r\n\t\t};\r\n\r\n\t\tsetTags();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleChange = (selectItems) => {\r\n    setselectedOptions(selectItems)\r\n\r\n    if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n\t\t\tconst selectedCategoryIds = selectItems.map((item) => {\r\n\t\t\t\tconst selectedcategory = tagState.data.find(\r\n\t\t\t\t\t(cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n\t\t\t\t);\r\n\t\t\t\tif (selectedcategory) {\r\n\t\t\t\t\treturn selectedcategory.id;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetTagIds(selectedCategoryIds);\r\n    }\r\n    \r\n\r\n  }\r\n\r\n\r\n  console.log('selectedOpions',selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        {tagState.done && tagState.data.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId }: Props) => {\r\n\tconst [ options, setoptions ] = useState([]);\r\n\tconst [ selectedBrandId, setSelectedBrandId ] = useState('');\r\n\tconst [ brandState, handleTagListFetch ] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\tconsole.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\tconsole.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\tconsole.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\tconsole.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: 200 }}\r\n\t\t\tplaceholder='Select a Brand'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChange}\r\n\t\t\tonFocus={onFocus}\r\n\t\t\tonBlur={onBlur}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{brandState.done &&\r\n\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\nimport { Checkbox, Input, Tree } from 'antd';\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n}\r\n\r\nconst Categories = ({ setcategoryIds }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\tconsole.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tsetcategoryIds(checkedKeys);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('optons', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t<Search\r\n\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize='middle'\r\n\t\t\t\t\tplaceholder='category name'\r\n\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginLeft: \"-20px\",\r\n\t\t\t}}>\r\n\t\t\t\t<Tree\r\n\r\n\t\t\t\t\tcheckable\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n        console.log('handleAttributeSelect', value);\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, {useState} from 'react'; \r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport {  Button } from 'antd';\r\nimport {\r\n\r\n    PlusOutlined,\r\n    CheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n    handleAddPricing: any; \r\n}\r\n\r\nconst Pricing = ({\r\n    handleAddPricing\r\n}: Props) => {\r\n\r\n    const [price, setprice] = useState({\r\n        regular: \"\",\r\n        offer: \"\"\r\n      });\r\n      const [stock, setStock] = useState({\r\n        available: \"\",\r\n        minimum: \"\"\r\n      });\r\n\r\n\r\n      const [attributeList, setAttributeList] = useState([]);\r\n\r\n      const handlePriceChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n    \r\n        setprice({\r\n          ...price,\r\n          [name]: value\r\n        });\r\n      };\r\n    \r\n      const handleStockChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n    \r\n        setStock({\r\n          ...stock,\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n\r\n      const handleSavePricing = (e) => {\r\n\t\t  e.preventDefault(); \r\n\t\t  \r\n\t\t  if(attributeList.length > 0){\r\n\t\t\tconst attribute = {}; \r\n\r\n\t\t\tfor (let item of attributeList){\r\n\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);  \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\tsetAttributeList([]);  \r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t  }\r\n         \r\n\t  }\r\n\t  \r\n\r\n\t  const handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t  }\r\n\r\n\r\n\t  const getiCreatePricingIsDisabled = () => {\r\n\t\t  if(!price.regular || !stock.available){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  else return false; \r\n\t  }\r\n\r\n\t  console.log('attributeList',attributeList); \r\n\r\n\r\n    return (\r\n        <>\r\n            \t<div className='addProductGridContainer__item-body-variationCard'>\r\n\t\t\t\t\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tPrice  \r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t<InputSmall \r\n\t\t\t   label='Regular  *'\r\n\t\t\t   value={price.regular}\r\n\t\t\t   name='regular'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                    <InputSmall \r\n                    size='small'\r\n\t\t\t   label='Offer'\r\n\t\t\t   value={price.offer}\r\n\t\t\t   name='offer'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                    <InputSmall \r\n\t\t\t   label='Available  *'\r\n\t\t\t   value={stock.available}\r\n\t\t\t   name='available'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\r\n\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\r\n\t\t\t\t<InputSmall \r\n\t\t\t   label='Minimum'\r\n\t\t\t   value={stock.minimum}\r\n\t\t\t   name='minimum'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'> \r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\t\t\t\r\n\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\treturn \t<Attributes \r\n\t\t\t\tattribute={attribute}\r\n\t\t\t\t attributeList={attributeList} setAttributeList={setAttributeList}/> \r\n\t\t\t})}\r\n\t\t\t\t<Button size='small' \r\n\t\t\t\tonClick={handleAddAttribute}\r\n                style={{\r\n\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\tminHeight:'75px',\r\n\t\t\t\t\tmarginTop:'0px'\r\n\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n        </div>\r\n\r\n\r\n\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\r\n\t\t<Button \r\n\t\tstyle={{\r\n\t\t\tmarginLeft: '10px'\r\n\t\t}}\r\n          onClick={handleSavePricing}\r\n\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t icon={<CheckOutlined />}> Add New Pricing </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Tooltip, notification, Modal, Tabs, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tFileAddOutlined,\r\n\tPlusCircleOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\r\n}\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Product Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tparent: setselectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('addProductState', addProductState);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\tconsole.log('pricing', pricing);\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Variation\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Pricing\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPricing\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.offer && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffer\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.regular && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tregular\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavailable\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.available}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminimum\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags setTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrands\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal,notification   } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t  message: 'Product Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetProductList?: any; \r\n\tproductList?: any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible,setProductList , productList}: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateProductRes = await handleUpdateProductFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t\tcategory: category.category,\r\n\t\t\tpricing: category.pricing\r\n\t\t},\r\n\t  });\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateProductRes && updateProductRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInAttribute = () => {\r\n            return productList.map(item => item.id).indexOf(category.id);\r\n          }\r\n\r\n          const index = positionInAttribute();\r\n\r\n\t\t  // @ts-ignore\r\n          const updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n          const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n          setProductList(updateProductList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t  console.log('updateProductRes',updateProductRes)\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n            <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n              </Modal>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {notification,Empty, Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Popconfirm   } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t  message: 'Product Deleted',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setProductList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setProductList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n\r\n\r\n      const handleDeleteProduct = async (id) => {\r\n        const deleteProductRes = await handleDeleteProductFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          // @ts-ignore\r\n          if(deleteProductRes && deleteProductRes.status === 'ok'){\r\n            openSuccessNotification(); \r\n            const newProductList =  data.filter(item => item.id !== id);\r\n            setProductList(newProductList); \r\n          }\r\n\r\n          console.log('deleteProductRes',deleteProductRes)\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Offer Price\" \r\n           dataIndex=\"offerPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Price\" \r\n           dataIndex=\"price\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Unit\" \r\n           dataIndex=\"unit\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip \r\n              \r\n               placement=\"top\" title='Quick Edit Product'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteProduct(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n               <span \r\n            className='iconSize iconSize-danger'\r\n            > \r\n            <DeleteOutlined/>\r\n           </span>\r\n       \r\n  </Popconfirm>\r\n\r\n\r\n            \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    productList={data}\r\n    setProductList={setProductList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst ProductList = ({history}: Props) => {\r\n\r\n\r\n\r\n  const [productList,setProductList] = useState([]); \r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setProducts = async () => {\r\n     const products = await handleProductListFetch({}); \r\n     // @ts-ignore\r\n     setProductList(products); \r\n   }\r\n   setProducts(); \r\n  },[])\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n  console.log('productState',productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(productState.data.length > 0 ){\r\n      const newProductList = productState.data.filter(item => item.name.includes(value)); \r\n      setProductList(newProductList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Products\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search products..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n    \r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {productState.done && productList.length > 0 && <MyTable \r\n        setProductList={setProductList}\r\n        data={productList} />}\r\n        {productState.isLoading && <DataTableSkeleton />}\r\n        {productState.done && !(productList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Products found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{productState.done && \r\n    <AddNewProduct \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\ttagList: any; \r\nsetTagList: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateTagRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t \t  // @ts-ignore\r\n\t\t   if(updateTagRes && updateTagRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\t  const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\t  setTagList(updateTagList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconsole.log('deleteTagRes', deleteTagRes)\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\r\n\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconsole.log('addTagRes', addTagRes)\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.includes(value));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Tag</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t{ ...initialValues }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\thandleReset,\r\n\r\n\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='addproductSection addproductSection-right'>\r\n\r\n\t\t\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t\t\t<div className='categoryListContainer__header'>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t\t\t{/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__afterHeader'>\r\n\t\t\t\t\t\t\t{/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewTag = (props: Props) => {\r\n    return (\r\n        <div>\r\n            AddNewTag\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTag\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"First Name\" \r\n           dataIndex=\"firstName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n         <Column\r\n           title=\"Last Name\" \r\n           dataIndex=\"lastName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.includes(value)); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal  } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst data = [\r\n\t{\r\n\t\tkey: '1',\r\n\t\ttitle: 'Home Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\ttitle: 'Product Listing Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t},\r\n\t{\r\n\t\tkey: '3',\r\n\t\ttitle: 'Dashboard Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t}\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst MyTable = () => {\r\n    const [visible,setvisible] = useState(false);   \r\n\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        dataSource={data}>\r\n         \r\n          <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\r\n          <Column title=\"Created\" dataIndex=\"created\" key=\"created\" />\r\n          <Column title=\"Last Modified\" dataIndex=\"lastModified\" key=\"lastModified\" />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a onClick={() => setvisible(true)} href='##'>Quick Edit</a>\r\n              <Tooltip placement=\"top\" title='Delete Category'>\r\n              <a href='##'>Delete</a>\r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      <Modal\r\n          title=\"Quick Edit\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n        </Modal>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst PagesList = ({history}: Props) => {\r\n  \r\n    \r\n\treturn (\r\n\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n            <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            <Search\r\n      placeholder=\"search pages..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    />\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t<MyTable />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter(PagesList);\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = (props: Props) => {\r\n\treturn <div>AddNewPage</div>;\r\n};\r\n\r\nexport default AddNewPage;\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('ourDamnValues',values)\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    console.log(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\t  console.log('ourDamnValues',values)\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .label('Name')\r\n        .required()\r\n        .min(2, 'Name must have at least 2 characters '),\r\n    pickUpLocation: Yup.string()\r\n        .label('Pick up Location')\r\n        .required()\r\n        .min(2, 'Pick up Location must have at least 2 characters '),\r\n    time: Yup.string()\r\n        .label('Time')\r\n        .required()\r\n        .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('selectedCityValue', selectedCityValue)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n\r\n            body: {\r\n                name: values.name,\r\n                pickUpLocation: values.pickUpLocation,\r\n                time: values.time,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n                charge: {}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Pick up Location'\r\n                                        value={values.pickUpLocation}\r\n                                        name='pickUpLocation'\r\n                                        isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n\r\n                                        errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('pickUpLocation');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div style={{\r\n                                marginRight: '10px'\r\n                            }}>\r\n                                <Input\r\n                                    label='Time'\r\n                                    value={values.time}\r\n                                    name='time'\r\n                                    isError={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n\r\n                                    errorString={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('time');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.city}\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={orderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{/* {orderState.done && \r\n    <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {productDetailState.done && Object.keys(productDetailState.data).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={product['cover']}\r\n                        alt='productImg'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n\r\n                        >\r\n                            {product['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            ${product['offerPrice'] ? product['offerPrice'] : product['regularPrice']}\r\n                        </h5>\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(value) {\r\n        setSelectedBrandId(value);\r\n        setCustomerId(value);\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            size='middle'\r\n            style={{ width: '100%' }}\r\n            placeholder='Select a Customer'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n        >\r\n            {brandState.done &&\r\n                brandState.data.length > 0 &&\r\n                options.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory.id;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {tagState.done && tagState.data.length > 0 && <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"search products\"\r\n                value={selectedOpions}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n            >\r\n                {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                    <Select.Option key={item} value={item}>\r\n                        {item}\r\n                    </Select.Option>\r\n                ))}\r\n            </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Last name')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: ''\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment Details',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Review your Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t_id: productIds[productIds.length - 1],\r\n\t\t\t\t\tvariation: '5f0a8f0e10cf2f1dc280d915',\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(productId => {\r\n\t\t\t\t\t\tif (productId === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\tconsole.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\tconsole.log('productList', productList)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId setCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts setProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n\t\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => next()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    console.log('itemsList', itemsList)\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n        \r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const categories = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(categories); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\tconsole.log('componentList',componentList); \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Form } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    ArrowUpOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('type', selectedThemeTypeValue)\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n\r\n            body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['id'] || '',\r\n                key: addThemeRes['id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            console.log('file', file)\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('type', selectedThemeTypeValue)\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: 'http://localhost:5000/admin/theme/add',\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        console.log('beforeUpload', file)\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('imageUrl', imageUrl)\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n\r\n    console.log('addThemeState', addThemeState)\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail Image</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n                {/* <div style={{ marginTop: '15px' }}></div> */}\r\n\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Type\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Form.Item\r\n                    validateStatus={(addThemeState.error['error']['type']) ? \"error\" : \"\"}\r\n                    help={addThemeState.error['error']['type']}\r\n                // noStyle={true}\r\n                >\r\n                    <Select\r\n                        style={{ width: '100%' }}\r\n                        placeholder='Select a Theme type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChangeThemeType}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value={'spa'}> API Based Template (React/Angular/Vue) </Option>\r\n                        <Option value={'template'}> Alpha Template </Option>\r\n                    </Select>\r\n\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',themeState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeState.data.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                  Set Active\r\n                 \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        {console.log('errors', errors)}\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('fuckInvoice')\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        {console.log('goddamnErrors', errors)}\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            type='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tSite Settings\r\n\t\t\t</h2>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t{/* <TabPane tab=\"Logo & Icon\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '30px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t// marginTop: '15px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Icon</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</TabPane> */}\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"2\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconsole.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .label('Name')\r\n      .required()\r\n      .min(2, 'Name must have at least 2 characters '),\r\n\t  pickUpLocation: Yup.string()\r\n      .label('Pick up Location')\r\n      .required()\r\n\t  .min(2, 'Pick up Location must have at least 2 characters '),\r\n\t  time: Yup.string()\r\n      .label('Time')\r\n      .required()\r\n      .min(2, 'Time must have at least 2 characters '),\r\n  \r\n  });\r\n\r\n\r\n\r\n  const openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tregionList?:any;\r\n\tsetRegionList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\t\t\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge : {}\r\n\t\t\t},\r\n\t\t  });\r\n\r\n\t\t   // @ts-ignore\r\n\t\t   if(addRegionRes && addRegionRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\t  const updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\t  setRegionList(updateRegionList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\t};\r\n\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time ){ \r\n\t\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n    \t\t\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Name'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Pick up Location'\r\n\t\t\t   value={values.pickUpLocation}\r\n\t\t\t   name='pickUpLocation'\r\n\t\t\t   isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('pickUpLocation');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n     \r\n            \r\n\r\n\r\n    \r\n          <div style={{\r\n              marginRight: '10px'\r\n          }}>\r\n          <Input \r\n\t\t\t   label='Time'\r\n\t\t\t   value={values.time}\r\n\t\t\t   name='time'\r\n\t\t\t   isError={(touched.time && errors.time) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('time');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n          </div>\r\n\r\n\r\n\r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.includes(value)); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n\tPieChartOutlined,\r\n\tFileOutlined,\r\n\tTeamOutlined,\r\n\tTagOutlined,\r\n\tBranchesOutlined,\r\n\tGoldOutlined,\r\n\tFilterOutlined,\r\n\tTagsOutlined,\r\n\tCarOutlined,\r\n\tShoppingCartOutlined,\r\n\tMailOutlined,\r\n\tSettingOutlined,\r\n\tInboxOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n\tconst [collapsed, setcollapsed] = useState(false);\r\n\tconst onCollapse = (collapsed: any) => {\r\n\t\tconsole.log(collapsed);\r\n\t\tsetcollapsed(collapsed);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Sider collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '22px',\r\n\t\t\t\t\tmarginRight: '20px',\r\n\t\t\t\t\tmarginTop: '8px',\r\n\t\t\t\t\twidth: '100%'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Menu selectable={true} mode='inline'>\r\n\t\t\t\t<Menu.Item key='1' icon={<PieChartOutlined />}>\r\n\t\t\t\t\t<Link to='/admin'>Dashboard</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t{/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t</SubMenu> */}\r\n\r\n\t\t\t\t{/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey='sub3'\r\n\t\t\t\t\ticon={<GoldOutlined />}\r\n\t\t\t\t\ttitle='Product'\r\n\t\t\t\t// onTitleClick={() => props.history.push('/product')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item key='6'>\r\n\t\t\t\t\t\t<Link to='/admin/product'>List Products</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t\t<Link to='/admin/tag'>Tags</Link>\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t\t<Menu.Item key='2' icon={<TagOutlined />}>\r\n\t\t\t\t\t\t<Link to='/admin/category'>Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\t\t\t\t\t<Menu.Item key='5' icon={<BranchesOutlined />}>\r\n\t\t\t\t\t\t<Link to='/admin/brand'>Brands</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t{/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n\t\t\t\t<Menu.Item key='10' icon={<CarOutlined />}>\r\n\t\t\t\t\t<Link to='/admin/delivery'>Delivery</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n\t\t\t\t\t<Menu.Item key='11'>\r\n\t\t\t\t\t\t<Link to='/admin/order'>List Orders</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='12'>\r\n\t\t\t\t\t\t<Link to='/admin/order/new'>Add Order</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<Menu.Item key='13' icon={<TeamOutlined />}>\r\n\t\t\t\t\t<Link to='/admin/customer'>Customer</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n\t\t\t\t\t<Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='15'>Auto emails</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='16'>Compose Email</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='177'>Sent emails</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n\t\t\t\t\t<Menu.Item key='17'>\r\n\t\t\t\t\t\t<Link to='/admin/page/new'> Add new Page</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='18'>\r\n\t\t\t\t\t\t<Link to='/admin/page'> List Pages</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n\t\t\t\t\t<Menu.Item key='19'>\r\n\t\t\t\t\t\t<Link to='/admin/settings/siteInfo'>Site information</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='20'>\r\n\t\t\t\t\t\t<Link to='/admin/settings/themes'>Manage themes</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t{/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n\t\t\t\t\t<Menu.Item key='22'>\r\n\t\t\t\t\t\t<Link to='/admin/settings/invoice'>Invoice</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='23'>\r\n\t\t\t\t\t\t<Link to='/admin/settings/components'>Components</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</Menu>\r\n\t\t</Sider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import React from 'react';\n\n// import pages\nimport { Overview } from './pages/overview';\nimport { CategoryList, CategoryDetail } from './pages/category';\nimport { BrandList, AddNewBrand } from './pages/brand';\nimport { ProductList, AddNewProduct } from './pages/product';\nimport { TagList, AddNewTag } from './pages/tag';\nimport { CustomerList } from './pages/customer';\nimport { PagesList, AddNewPage } from './pages/pages';\nimport { AttributeList } from './pages/attribute';\nimport { OrderList, AddNewOrder } from './pages/order';\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from './pages/settings';\nimport { Delivery } from './pages/delivery';\nimport Login from './pages/auth/login';\n// import components\nimport Sider from './layout/Sider';\n\n// import third party ui libraries\nimport { Layout, notification } from 'antd';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Title from 'antd/lib/typography/Title';\n\nimport { useHandleFetch } from \"./hooks\";\nimport {\n\tFileOutlined,\n\tInboxOutlined,\n\tRadiusUpleftOutlined,\n\tRadiusUprightOutlined,\n\tRadiusBottomleftOutlined,\n\tRadiusBottomrightOutlined,\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tLogoutOutlined\n} from '@ant-design/icons';\nimport { cursorTo } from 'readline';\nconst { Header, Content, Footer } = Layout;\n\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\nconst App = () => {\n\n\n\tconst [logoutState, handleLogoutFetch] = useHandleFetch({}, 'logout');\n\n\n\tconst handleLogout = async () => {\n\t\tconst logoutRes = await handleLogoutFetch({});\n\n\t\t//@ts-ignore\n\t\tif (logoutRes && logoutRes.status === 'ok') {\n\t\t\topenSuccessNotification('Loged out successfully');\n\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification(\"Couldn't logout, Something went wrong\");\n\t\t}\n\n\t};\n\n\n\n\n\n\treturn (\n\t\t<Router>\n\t\t\t{/* <Switch>\n\t\t\t\t<Route path='/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch> */}\n\t\t\t<Switch>\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Sider />\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tclassName='site-layout-background'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\t\t\tborderBottom: '1px solid #fafafa',\n\t\t\t\t\t\t\t\tborderLeft: '1px solid #fafafa',\n\t\t\t\t\t\t\t\theight: '50px',\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\tstyle={{ color: '#0072EA', marginTop: '10px', marginLeft: '-20px' }}\n\t\t\t\t\t\t\t\tlevel={4}>\n\t\t\t\t\t\t\t\tAdmin\n\t\t\t\t             </Title>\n\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tonClick={() => handleLogout()}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '-8px',\n\t\t\t\t\t\t\t\t\tmarginRight: '-28px'\n\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t<span style={{\n\t\t\t\t\t\t\t\t\tmarginLeft: '10px',\n\t\t\t\t\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\t\t\t\t\t// backgroundColor: 'rgba(28, 39, 152, 0.1)',\n\t\t\t\t\t\t\t\t\tborderRadius: '25px',\n\t\t\t\t\t\t\t\t\tcolor: '#1890ff',\n\t\t\t\t\t\t\t\t\tpadding: '2px 20px',\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\n\n\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<LogoutOutlined />\n\t\t\t\t\t\t\t\t\t<span style={{\n\t\t\t\t\t\t\t\t\t\tmarginLeft: '10px',\n\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\tlogout\n\t\t\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\t</span>\n\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Content\n\t\t\t\t\t\t\thasSider={true}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: '#Fff'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\t\t\trender={() => <Redirect to='/admin/product' />}\n\t\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t\t<Route path='/admin' exact>\n\t\t\t\t\t\t\t\t\t<Overview />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/category' exact>\n\t\t\t\t\t\t\t\t\t<CategoryList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/category/:name' exact>\n\t\t\t\t\t\t\t\t\t<CategoryDetail />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t{/* CategoryDetail */}\n\t\t\t\t\t\t\t\t<Route path='/admin/brand/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewBrand />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/brand' exact>\n\t\t\t\t\t\t\t\t\t<BrandList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/product' exact>\n\t\t\t\t\t\t\t\t\t<ProductList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t{/* <Route path='/product/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewProduct />\n\t\t\t\t\t\t\t\t</Route> */}\n\t\t\t\t\t\t\t\t<Route path='/admin/tag' exact>\n\t\t\t\t\t\t\t\t\t<TagList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/product/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewTag />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/attribute' exact>\n\t\t\t\t\t\t\t\t\t<AttributeList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/order' exact>\n\t\t\t\t\t\t\t\t\t<OrderList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/order/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewOrder />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/customer' exact>\n\t\t\t\t\t\t\t\t\t<CustomerList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/page' exact>\n\t\t\t\t\t\t\t\t\t<PagesList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/delivery' exact>\n\t\t\t\t\t\t\t\t\t<Delivery />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/page/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewPage />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/settings/components' exact>\n\t\t\t\t\t\t\t\t\t<Component />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/settings/image' exact>\n\t\t\t\t\t\t\t\t\t<Image />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/settings/themes' exact>\n\t\t\t\t\t\t\t\t\t<ManageThemes />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/settings/invoice' exact>\n\t\t\t\t\t\t\t\t\t<Invoice />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/admin/settings/siteInfo' exact>\n\t\t\t\t\t\t\t\t\t<SiteInfo />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t<Footer style={{ textAlign: 'center', background: '#fafafa', color: '#1890ff' }}>\n\t\t\t\t\t\t\t© 2020 The Alpha E-commerce Engine - Developed By Lotus Technology Development.\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t</Layout>\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n/*\nimport React from 'react';\n\n// import third party ui lib\nimport { Upload, message } from 'antd';\n\nimport { FileOutlined, InboxOutlined } from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\n\nconst { Dragger } = Upload;\n\nconst props = {\n\tname: 'file',\n\tmultiple: true,\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\tonChange(info: any) {\n\t\tconst { status } = info.file;\n\t\tif (status !== 'uploading') {\n\t\t\tconsole.log(info.file, info.fileList);\n\t\t}\n\t\tif (status === 'done') {\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\n\t\t} else if (status === 'error') {\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\n\t\t}\n\t}\n};\n\ninterface Props {}\n\nconst AddNewProduct = ({  }: Props) => {\n\treturn (\n\t\t<div className='site-layout-background' style={{ padding: 60, minHeight: 360 }}>\n\t\t\t<div className='addproductSectionTitleContainer'>\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Product</h2>\n\t\t\t</div>\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<Input label='Title' />\n\t\t\t\t\t<h3 className='inputFieldLabel'>Description</h3>\n\t\t\t\t\t<ReactQuill theme='snow' />\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<div className='addproductSection-left-header'>\n\t\t\t\t\t\t<h3 className='addproductSection-right-title'>Images</h3>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Dragger\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: '#fff'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\n\t\t\t\t\t\t\t\t<InboxOutlined />\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\n\t\t\t\t\t\t\t<p className='ant-upload-hint'>\n\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\n\t\t\t\t\t\t\t\tother band files\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Dragger>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddNewProduct;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n"],"sourceRoot":""}