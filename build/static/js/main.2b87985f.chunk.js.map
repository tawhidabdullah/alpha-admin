{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Notification/Notification.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","components/Empty/Empty.tsx","components/Empty/index.ts","pages/category/CategoryList.tsx","pages/category/CategoryDetail.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","components/Field/InputSmall.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/tag/QuickEdit.tsx","pages/tag/TagList.tsx","pages/tag/AddNewTag.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderProductItem.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","cover","config","thumbnail","subCount","subCategory","children","subCat","title","isNext","page","next","convertedData","product","regularPrice","price","offerPrice","parseInt","unit","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","pricing","tag","brand","customer","firstName","lastName","country","city","email","phone","created","theme","added","components","component","region","pickUpLocation","countryCode","countryName","time","charge","image","labels","alt","caption","original","availableStock","minimumStock","cat","b","tags","img","baseURL","success","inserted","productCount","count","item","billingAddress","total","totalPrice","products","date_created","date","paymentMethod","generalFormat","dataMap","line_items","paymentItems","number","text","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","console","log","method","credentials","headers","Headers","body","JSON","stringify","fetch","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","icon","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","FileOutlined","DesktopOutlined","SlidersOutlined","SettingOutlined","openSuccessNotification","message","notification","CheckCircleOutlined","color","openErrorNotification","ExclamationCircleOutlined","background","height","display","justifyContent","zIndex","transition","alignItems","alignContent","marginTop","marginLeft","marginRight","href","fontWeight","padding","cursor","LogoutOutlined","Overview","textAlign","DataTable","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","filename","EmptyComponent","Empty","PRESENTED_IMAGE_SIMPLE","Column","Table","Search","ColumnGroup","MyTable","setcategoryList","history","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","newCategoryList","filter","size","dataSource","dataIndex","render","record","objectFit","align","placement","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","placeholder","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","CategoryDetail","autoplay","rows","Dragger","Upload","TabPane","Tabs","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","onRemove","filelist","index","newFileList","splice","beforeUpload","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","InboxOutlined","ArrowUpOutlined","find","newselectedImages","handleAddToSelectedList","CheckOutlined","Option","Select","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","selectedParentId","setselectedParentId","imagesIds","parent","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","okButtonProps","htmlType","defaultChecked","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","newImages","handleImagesDelete","FileAddOutlined","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","brandList","setBrandList","addBrandState","handleAddBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","updatebrandState","handleUpdateBrandFetch","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","brandState","handlebrandListFetch","brands","setBrands","Tags","setTagIds","setoptions","selectedOpions","setselectedOptions","tagState","handleTagListFetch","tagListRes","tagOptions","setTags","selectItems","selectedCategoryIds","selectedcategory","o","Brands","setBrandId","setSelectedBrandId","brandListRes","brandOptions","onFocus","onBlur","val","Checkbox","Group","Categories","setcategoryIds","searchValue","setsearchValue","categoryListRes","borderColor","categoryNames","newOptions","checkable","onSelect","selectedKeys","info","onCheck","checkedKeys","treeData","defaultExpandAll","allowClear","Complete","setAttributeList","attributeList","attribute","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","updateAttributeList","manupulatedOptions","inputValue","suggestedOption","toUpperCase","InputSmall","Pricing","handleAddPricing","regular","offer","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","priceItem","model","AddNewProduct","productList","setProductList","addProductState","handleAddProductFetch","categoryids","tagIds","brandId","setPricing","addProductRes","err","i","newPricing","handleDeletePricing","updateProductState","handleUpdateProductFetch","updateProductRes","positionInAttribute","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","newProductList","paddingTop","overflow","tableLayout","onHeaderRow","column","productState","handleProductListFetch","setProducts","tagList","setTagList","updateTagState","updateTagRes","updateTagList","CoolInput","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","addTagState","handleAddTagFetch","addTagRes","newTagList","AddNewTag","max","address1","address2","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","lastModified","push","AddNewPage","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","handleDeleteOrderFetch","handleDeleteRegion","deleteOrderRes","newOrderList","orderState","handleRegionListFetch","regions","setOrders","CartOverLayCartItem","productId","productDetailState","handleProductFetch","setProduct","setIsLoading","getAndSetProduct","handleChangeQuantity","AddNewOrderSummary","ShopOutlined","AddNewOrderProductItem","setCustomerId","setProductIds","Step","Steps","additionalInfo","steps","content","AddNewOrder","addOrderState","handleOrderFetch","productIds","current","setCurrent","variation","isTrue","UserOutlined","CustomersId","AddProducts","CaretLeftOutlined","CaretRightOutlined","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","SaveOutlined","updateComponentByAddingItem","componentId","destroyOnClose","Panel","Collapse","genExtra","updateComponentByDeleting","event","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","updatedItems","updateComponentRes","accordion","bordered","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","loadingThumnail","setLoadingThumbnail","imageUrl","setImageUrl","setname","addThemeRes","path","uploadButton","LoadingOutlined","showUploadList","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","multiple","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","siteSettingsRes","getSiteSettings","addSiteInfoRes","invoiceTitle","address","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","minimumOrder","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","deleteRegionRes","newRegionList","regionState","setRegions","hasSider","exact","BrandList","OrderList","Delivery","ManageThemes","SiteInfo","App","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2b87985f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    console.log('itemShit', item);\r\n\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(item !== 'addTheme' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(item !== 'addTheme' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n\r\n        }),\r\n\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res[format](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items || []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.original}`,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.thumbnail && data.cover.thumbnail}`,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.count || data.productCount,\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\timage:\r\n\t\t\t\t(data.image && data.image.length > 0 && data.image.map((img) => `${config.baseURL}${img.medium}`)) || []\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('fuckLOgin')\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>List Products</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brands</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n                    <Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n                    <Menu.Item key='15'>Auto emails</Menu.Item>\r\n                    <Menu.Item key='16'>Compose Email</Menu.Item>\r\n                    <Menu.Item key='177'>Sent emails</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='18'>\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item\r\n                    icon={<DesktopOutlined />}\r\n                    key='20'>\r\n                    <Link to='/admin/settings/themes'>Themes</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\n\r\n// import libraries \r\nimport { Layout } from 'antd';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n\r\n    const [logoutState, handleLogoutFetch] = useHandleFetch({}, 'logout');\r\n\r\n\r\n    const handleLogout = async () => {\r\n        const logoutRes = await handleLogoutFetch({});\r\n\r\n        //@ts-ignore\r\n        if (logoutRes && logoutRes.status === 'ok') {\r\n            openSuccessNotification('Loged out successfully');\r\n\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't logout, Something went wrong\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.03), 0 0.9375rem 1.40625rem rgba(8,10,37,.03), 0 0.25rem 0.53125rem rgba(8,10,37,.05), 0 0.125rem 0.1875rem rgba(8,10,37,.03)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n                style={{ color: '#0072EA', marginTop: '10px', marginLeft: '-20px' }}\r\n            >\r\n                Admin\r\n             </h2>\r\n\r\n\r\n            <div\r\n                // onClick={() => handleLogout()}\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        // backgroundColor: 'rgba(28, 39, 152, 0.1)',\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent; \r\n","import Header from \"./Header\";\r\nexport default Header; ","import React from 'react';\r\n// import Login from '../auth/login';\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <Login /> */}\r\n\t\t\t<h2 style={{\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\tComing Soon\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import Empty from \"./Empty\";\r\nexport default Empty; ","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n\r\n      console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                // onClick={() => history.push(`/category/${record.name}`)}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Desctription\" \r\n           dataIndex=\"desctription\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  console.log('categoryState',categoryState)\r\n\r\n\r\n\r\n  \r\n  \r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.includes(value)); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryState.data}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Carousel } from 'antd';\r\n\r\ninterface Props {}\r\n\r\nconst CategoryDetail = (props: Props) => {\r\n\treturn (\r\n\t\t<div className='categoryDetailContainer'>\r\n\t\t\t<div className='categoryDetailContainer__item'>\r\n\t\t\t\t<div className='categoryDetailContainer__item-carousel'>\r\n\t\t\t\t\t<Carousel autoplay>\r\n\t\t\t\t\t\t<div className='categoryDetailContainer__item-carousel-item'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='category img'\r\n\t\t\t\t\t\t\t\tsrc='https://images-na.ssl-images-amazon.com/images/I/41Leu3gBUFL.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>2</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>3</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>4</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Carousel>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='categoryDetailContainer__item' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CategoryDetail;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name}: Props) => {\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>\r\n                {label}\r\n            </h3>\r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                  <TextArea\r\n                      disabled={disabled}\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      name={name}\r\n                    className='inputclassName'\r\n                     rows={4} /> \r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Moment from 'react-moment';\r\n// import third party ui lib\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm } from 'antd';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\nimport {\r\n\tInboxOutlined,\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any\r\n}\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [addMediaLibrary, handleAddMediaLibraryFetch] = useHandleFetch({}, 'addImageToLibrary');\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\tconsole.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tconsole.log('filt', file.name);\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: 'http://localhost:5000/admin/image/add',\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\tconsole.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconsole.log('selectedimages', selectedimages)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InboxOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\r\n\t\t\t\t\t\t\t\t\t\t\t\tother band files\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['id'] || '',\r\n\t\t\t\tkey: addCategoryRes['id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('isparentCategoryChecked', isparentCategoryChecked);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch defaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h4 className='switchLabelContainer-label'>Top level Category</h4>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetcategoryList?:any; \r\n\tcategoryList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  console.log('updateCategoryRes',updateCategoryRes)\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateCategoryRes && updateCategoryRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInTag = () => {\r\n\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInTag();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t  const updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t  setcategoryList(updateCategoryList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name  || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space, Tag,Button, Input,Tooltip, Modal, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n\r\n\r\n      \r\n      console.log('activeCategoryForEdit',activeCategoryForEdit)\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.includes(value)); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  console.log('brandState',brandState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brands..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brands found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React,{useEffect,useState} from 'react'; \r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  setTagIds?: any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds\r\n}: Props) => {\r\n  const [ options, setoptions ] = useState([]);\r\n  const [selectedOpions,setselectedOptions] = useState([]); \r\n  const [ tagState, handleTagListFetch ] = useHandleFetch({}, 'tagList');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tagListRes = await handleTagListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tisSubCategory: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (tagListRes && tagListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst tagOptions = tagListRes.map((tag) => {\r\n          return tag.name \r\n        });\r\n\t\t\t\tsetoptions(tagOptions);\r\n      }\r\n      \r\n\t\t};\r\n\r\n\t\tsetTags();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleChange = (selectItems) => {\r\n    setselectedOptions(selectItems)\r\n\r\n    if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n\t\t\tconst selectedCategoryIds = selectItems.map((item) => {\r\n\t\t\t\tconst selectedcategory = tagState.data.find(\r\n\t\t\t\t\t(cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n\t\t\t\t);\r\n\t\t\t\tif (selectedcategory) {\r\n\t\t\t\t\treturn selectedcategory.id;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetTagIds(selectedCategoryIds);\r\n    }\r\n    \r\n\r\n  }\r\n\r\n\r\n  console.log('selectedOpions',selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        {tagState.done && tagState.data.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId }: Props) => {\r\n\tconst [ options, setoptions ] = useState([]);\r\n\tconst [ selectedBrandId, setSelectedBrandId ] = useState('');\r\n\tconst [ brandState, handleTagListFetch ] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\tconsole.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\tconsole.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\tconsole.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\tconsole.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: 200 }}\r\n\t\t\tplaceholder='Select a Brand'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChange}\r\n\t\t\tonFocus={onFocus}\r\n\t\t\tonBlur={onBlur}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{brandState.done &&\r\n\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\nimport { Checkbox, Input, Tree } from 'antd';\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n}\r\n\r\nconst Categories = ({ setcategoryIds }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\tconsole.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tsetcategoryIds(checkedKeys);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('optons', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t<Search\r\n\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize='middle'\r\n\t\t\t\t\tplaceholder='category name'\r\n\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginLeft: \"-20px\",\r\n\t\t\t}}>\r\n\t\t\t\t<Tree\r\n\r\n\t\t\t\t\tcheckable\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n        console.log('handleAttributeSelect', value);\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, {useState} from 'react'; \r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport {  Button } from 'antd';\r\nimport {\r\n\r\n    PlusOutlined,\r\n    CheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n    handleAddPricing: any; \r\n}\r\n\r\nconst Pricing = ({\r\n    handleAddPricing\r\n}: Props) => {\r\n\r\n    const [price, setprice] = useState({\r\n        regular: \"\",\r\n        offer: \"\"\r\n      });\r\n      const [stock, setStock] = useState({\r\n        available: \"\",\r\n        minimum: \"\"\r\n      });\r\n\r\n\r\n      const [attributeList, setAttributeList] = useState([]);\r\n\r\n      const handlePriceChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n    \r\n        setprice({\r\n          ...price,\r\n          [name]: value\r\n        });\r\n      };\r\n    \r\n      const handleStockChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n    \r\n        setStock({\r\n          ...stock,\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n\r\n      const handleSavePricing = (e) => {\r\n\t\t  e.preventDefault(); \r\n\t\t  \r\n\t\t  if(attributeList.length > 0){\r\n\t\t\tconst attribute = {}; \r\n\r\n\t\t\tfor (let item of attributeList){\r\n\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);  \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\tsetAttributeList([]);  \r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t  }\r\n         \r\n\t  }\r\n\t  \r\n\r\n\t  const handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t  }\r\n\r\n\r\n\t  const getiCreatePricingIsDisabled = () => {\r\n\t\t  if(!price.regular || !stock.available){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  else return false; \r\n\t  }\r\n\r\n\t  console.log('attributeList',attributeList); \r\n\r\n\r\n    return (\r\n        <>\r\n            \t<div className='addProductGridContainer__item-body-variationCard'>\r\n\t\t\t\t\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tPrice  \r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t<InputSmall \r\n\t\t\t   label='Regular  *'\r\n\t\t\t   value={price.regular}\r\n\t\t\t   name='regular'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                    <InputSmall \r\n                    size='small'\r\n\t\t\t   label='Offer'\r\n\t\t\t   value={price.offer}\r\n\t\t\t   name='offer'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                    <InputSmall \r\n\t\t\t   label='Available  *'\r\n\t\t\t   value={stock.available}\r\n\t\t\t   name='available'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\r\n\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\r\n\t\t\t\t<InputSmall \r\n\t\t\t   label='Minimum'\r\n\t\t\t   value={stock.minimum}\r\n\t\t\t   name='minimum'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'> \r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\t\t\t\r\n\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\treturn \t<Attributes \r\n\t\t\t\tattribute={attribute}\r\n\t\t\t\t attributeList={attributeList} setAttributeList={setAttributeList}/> \r\n\t\t\t})}\r\n\t\t\t\t<Button size='small' \r\n\t\t\t\tonClick={handleAddAttribute}\r\n                style={{\r\n\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\tminHeight:'75px',\r\n\t\t\t\t\tmarginTop:'0px'\r\n\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n        </div>\r\n\r\n\r\n\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\r\n\t\t<Button \r\n\t\tstyle={{\r\n\t\t\tmarginLeft: '10px'\r\n\t\t}}\r\n          onClick={handleSavePricing}\r\n\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t icon={<CheckOutlined />}> Add New Pricing </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, notification, Modal, Tabs, Empty } from 'antd';\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tparent: setselectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('addProductState', addProductState);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\tconsole.log('pricing', pricing);\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Variation\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Pricing\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPricing\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.offer && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffer\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.regular && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tregular\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavailable\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.available}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminimum\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags setTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrands\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal,notification   } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t  message: 'Product Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetProductList?: any; \r\n\tproductList?: any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible,setProductList , productList}: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateProductRes = await handleUpdateProductFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t\tcategory: category.category,\r\n\t\t\tpricing: category.pricing\r\n\t\t},\r\n\t  });\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateProductRes && updateProductRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInAttribute = () => {\r\n            return productList.map(item => item.id).indexOf(category.id);\r\n          }\r\n\r\n          const index = positionInAttribute();\r\n\r\n\t\t  // @ts-ignore\r\n          const updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n          const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n          setProductList(updateProductList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t  console.log('updateProductRes',updateProductRes)\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n            <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n              </Modal>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            onClick: () => console.log('fuckitbabybybyby'), // click header row\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          // width={'100px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={cover => (\r\n            <>\r\n              <img src={cover} alt='cover img' style={{\r\n                height: '40px',\r\n                width: '40px',\r\n                objectFit: \"contain\",\r\n                borderRadius: '3px'\r\n              }} />\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={text => (\r\n            <>\r\n              <h4 style={{\r\n                fontWeight: 400,\r\n                color: '#666'\r\n              }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n\r\n\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.includes(value));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onSearch={value => handleSearch(value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\ttagList: any; \r\nsetTagList: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateTagRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t \t  // @ts-ignore\r\n\t\t   if(updateTagRes && updateTagRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\t  const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\t  setTagList(updateTagList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconsole.log('deleteTagRes', deleteTagRes)\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconsole.log('addTagRes', addTagRes)\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.includes(value));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Tag</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t{ ...initialValues }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\thandleReset,\r\n\r\n\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='addproductSection addproductSection-right'>\r\n\r\n\t\t\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t\t\t<div className='categoryListContainer__header'>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t\t\t{/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__afterHeader'>\r\n\t\t\t\t\t\t\t{/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewTag = (props: Props) => {\r\n    return (\r\n        <div>\r\n            AddNewTag\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTag\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"First Name\" \r\n           dataIndex=\"firstName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n         <Column\r\n           title=\"Last Name\" \r\n           dataIndex=\"lastName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.includes(value)); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal  } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst data = [\r\n\t{\r\n\t\tkey: '1',\r\n\t\ttitle: 'Home Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\ttitle: 'Product Listing Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t},\r\n\t{\r\n\t\tkey: '3',\r\n\t\ttitle: 'Dashboard Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t}\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst MyTable = () => {\r\n    const [visible,setvisible] = useState(false);   \r\n\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        dataSource={data}>\r\n         \r\n          <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\r\n          <Column title=\"Created\" dataIndex=\"created\" key=\"created\" />\r\n          <Column title=\"Last Modified\" dataIndex=\"lastModified\" key=\"lastModified\" />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a onClick={() => setvisible(true)} href='##'>Quick Edit</a>\r\n              <Tooltip placement=\"top\" title='Delete Category'>\r\n              <a href='##'>Delete</a>\r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      <Modal\r\n          title=\"Quick Edit\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n        </Modal>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst PagesList = ({history}: Props) => {\r\n  \r\n    \r\n\treturn (\r\n\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n            <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            <Search\r\n      placeholder=\"search pages..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    />\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t<MyTable />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter(PagesList);\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = (props: Props) => {\r\n\treturn <div>AddNewPage</div>;\r\n};\r\n\r\nexport default AddNewPage;\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('ourDamnValues',values)\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    console.log(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\t  console.log('ourDamnValues',values)\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .label('Name')\r\n        .required()\r\n        .min(2, 'Name must have at least 2 characters '),\r\n    pickUpLocation: Yup.string()\r\n        .label('Pick up Location')\r\n        .required()\r\n        .min(2, 'Pick up Location must have at least 2 characters '),\r\n    time: Yup.string()\r\n        .label('Time')\r\n        .required()\r\n        .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('selectedCityValue', selectedCityValue)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n\r\n            body: {\r\n                name: values.name,\r\n                pickUpLocation: values.pickUpLocation,\r\n                time: values.time,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n                charge: {}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Pick up Location'\r\n                                        value={values.pickUpLocation}\r\n                                        name='pickUpLocation'\r\n                                        isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n\r\n                                        errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('pickUpLocation');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div style={{\r\n                                marginRight: '10px'\r\n                            }}>\r\n                                <Input\r\n                                    label='Time'\r\n                                    value={values.time}\r\n                                    name='time'\r\n                                    isError={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n\r\n                                    errorString={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('time');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.city}\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={orderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{/* {orderState.done && \r\n    <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {productDetailState.done && Object.keys(productDetailState.data).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={product['cover']}\r\n                        alt='productImg'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n\r\n                        >\r\n                            {product['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            ${product['offerPrice'] ? product['offerPrice'] : product['regularPrice']}\r\n                        </h5>\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(value) {\r\n        setSelectedBrandId(value);\r\n        setCustomerId(value);\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            size='middle'\r\n            style={{ width: '100%' }}\r\n            placeholder='Select a Customer'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n        >\r\n            {brandState.done &&\r\n                brandState.data.length > 0 &&\r\n                options.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory.id;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {tagState.done && tagState.data.length > 0 && <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"search products\"\r\n                value={selectedOpions}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n            >\r\n                {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                    <Select.Option key={item} value={item}>\r\n                        {item}\r\n                    </Select.Option>\r\n                ))}\r\n            </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Last name')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: ''\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment Details',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Review your Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t_id: productIds[productIds.length - 1],\r\n\t\t\t\t\tvariation: '5f0a8f0e10cf2f1dc280d915',\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(productId => {\r\n\t\t\t\t\t\tif (productId === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\tconsole.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\tconsole.log('productList', productList)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId setCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts setProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n\t\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => next()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    console.log('itemsList', itemsList)\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n        \r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const categories = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(categories); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\tconsole.log('componentList',componentList); \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Form } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    ArrowUpOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n\r\n            body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['id'] || '',\r\n                key: addThemeRes['id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            console.log('file', file)\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: 'http://localhost:5000/admin/theme/add',\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        console.log('beforeUpload', file)\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('imageUrl', imageUrl)\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n\r\n    console.log('addThemeState', addThemeState)\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail Image</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',themeState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeState.data.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                  Set Active\r\n                 \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        {console.log('errors', errors)}\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('fuckInvoice')\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        {console.log('goddamnErrors', errors)}\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            type='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tSite Settings\r\n\t\t\t</h2>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t{/* <TabPane tab=\"Logo & Icon\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '30px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t// marginTop: '15px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Icon</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</TabPane> */}\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"2\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconsole.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .label('Name')\r\n      .required()\r\n      .min(2, 'Name must have at least 2 characters '),\r\n\t  pickUpLocation: Yup.string()\r\n      .label('Pick up Location')\r\n      .required()\r\n\t  .min(2, 'Pick up Location must have at least 2 characters '),\r\n\t  time: Yup.string()\r\n      .label('Time')\r\n      .required()\r\n      .min(2, 'Time must have at least 2 characters '),\r\n  \r\n  });\r\n\r\n\r\n\r\n  const openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tregionList?:any;\r\n\tsetRegionList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\t\t\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge : {}\r\n\t\t\t},\r\n\t\t  });\r\n\r\n\t\t   // @ts-ignore\r\n\t\t   if(addRegionRes && addRegionRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\t  const updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\t  setRegionList(updateRegionList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\t};\r\n\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time ){ \r\n\t\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n    \t\t\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Name'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Pick up Location'\r\n\t\t\t   value={values.pickUpLocation}\r\n\t\t\t   name='pickUpLocation'\r\n\t\t\t   isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('pickUpLocation');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n     \r\n            \r\n\r\n\r\n    \r\n          <div style={{\r\n              marginRight: '10px'\r\n          }}>\r\n          <Input \r\n\t\t\t   label='Time'\r\n\t\t\t   value={values.time}\r\n\t\t\t   name='time'\r\n\t\t\t   isError={(touched.time && errors.time) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('time');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n          </div>\r\n\r\n\r\n\r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n</a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.includes(value)); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, CategoryDetail } from '../../pages/category';\r\nimport { BrandList, AddNewBrand } from '../../pages/brand';\r\nimport { ProductList } from '../../pages/product';\r\nimport { TagList, AddNewTag } from '../../pages/tag';\r\nimport { CustomerList } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin' />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/product' />}\r\n                />\r\n\r\n\r\n                <Route path='/admin' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route>\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/product/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n/*\nimport React from 'react';\n\n// import third party ui lib\nimport { Upload, message } from 'antd';\n\nimport { FileOutlined, InboxOutlined } from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\n\nconst { Dragger } = Upload;\n\nconst props = {\n\tname: 'file',\n\tmultiple: true,\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\tonChange(info: any) {\n\t\tconst { status } = info.file;\n\t\tif (status !== 'uploading') {\n\t\t\tconsole.log(info.file, info.fileList);\n\t\t}\n\t\tif (status === 'done') {\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\n\t\t} else if (status === 'error') {\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\n\t\t}\n\t}\n};\n\ninterface Props {}\n\nconst AddNewProduct = ({  }: Props) => {\n\treturn (\n\t\t<div className='site-layout-background' style={{ padding: 60, minHeight: 360 }}>\n\t\t\t<div className='addproductSectionTitleContainer'>\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Product</h2>\n\t\t\t</div>\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<Input label='Title' />\n\t\t\t\t\t<h3 className='inputFieldLabel'>Description</h3>\n\t\t\t\t\t<ReactQuill theme='snow' />\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<div className='addproductSection-left-header'>\n\t\t\t\t\t\t<h3 className='addproductSection-right-title'>Images</h3>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Dragger\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: '#fff'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\n\t\t\t\t\t\t\t\t<InboxOutlined />\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\n\t\t\t\t\t\t\t<p className='ant-upload-hint'>\n\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\n\t\t\t\t\t\t\t\tother band files\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Dragger>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddNewProduct;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n"],"sourceRoot":""}